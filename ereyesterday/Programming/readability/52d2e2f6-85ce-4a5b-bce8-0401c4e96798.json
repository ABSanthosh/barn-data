{
  "id": "52d2e2f6-85ce-4a5b-bce8-0401c4e96798",
  "title": "Kotlin Multiplatform Tooling – Shifting Gears",
  "link": "https://blog.jetbrains.com/kotlin/2025/02/kotlin-multiplatform-tooling-shifting-gears/",
  "description": "A couple of years ago, we initiated the idea of creating a Kotlin Multiplatform IDE to help facilitate the development of KMP applications. We embarked on this venture, building on the Fleet platform, with the intention of releasing it as a standalone IDE. During this time, we have received feedback from our customers, specifically those […]",
  "author": "Hadi Hariri",
  "published": "Tue, 11 Feb 2025 15:29:41 +0000",
  "source": "https://blog.jetbrains.com/feed",
  "categories": [
    "kotlin",
    "multiplatform"
  ],
  "byline": "Hadi Hariri",
  "length": 3658,
  "excerpt": "A couple of years ago, we initiated the idea of creating a Kotlin Multiplatform IDE to help facilitate the development of KMP applications. We embarked on this venture, building on the Fleet platform,",
  "siteName": "The JetBrains Blog",
  "favicon": "https://blog.jetbrains.com/wp-content/uploads/2024/01/cropped-mstile-310x310-1-180x180.png",
  "text": "A concise multiplatform language developed by JetBrains Kotlin MultiplatformKotlin Multiplatform Tooling – Shifting Gears A couple of years ago, we initiated the idea of creating a Kotlin Multiplatform IDE to help facilitate the development of KMP applications. We embarked on this venture, building on the Fleet platform, with the intention of releasing it as a standalone IDE. During this time, we have received feedback from our customers, specifically those using KMP, that they would like to see similar features and support for KMP on the IntelliJ Platform, in other words, both in IntelliJ IDEA and Android Studio. These requests have only increased in light of Google’s official support of KMP on Android. In the past year, we’ve also observed significant advances in terms of approaches to application development, an area that we at JetBrains are also heavily investing in. Just recently, we announced a new coding agent named Junie. These changes, as well as a desire to support our existing users on the IntelliJ Platform, require us to change our focus. That is why, moving forward, we will be focusing exclusively on providing better KMP support on the IntelliJ Platform – the specifics of what and how we’ll provide at a later date. As regards Fleet support, we will be deprecating our support for KMP in Fleet in the next three months and will no longer be releasing a standalone IDE for KMP. While this is a change of direction, we strongly believe that ultimately, we need to make sure that we are delivering not only what our users want, but also continuing to drive advancement in the software development industry, leveraging the latest tech innovations that enhance the developer experience and open up new opportunities. At JetBrains, we have built an entire technology ecosystem on top of Kotlin, including KMP, Ktor, Exposed, Amper, and the many libraries we offer. All of this, combined with the vast amounts of libraries and frameworks that the community has created, gives us a tremendous opportunity to offer an end-to-end experience for software developers with exceptional tooling that can leverage new advances in AI. We would like to thank all of the many users who tried the early versions of the KMP tooling in Fleet and the tremendous amount of feedback you provided us. Please rest assured that this feedback was not given in vain. Much of what we have accomplished so far will be leveraged in our tooling efforts moving forward. We very much appreciate all your support, and we are committed to providing you with a great experience using our technologies. Subscribe to Kotlin Blog updates Discover more",
  "image": "https://blog.jetbrains.com/wp-content/uploads/2025/02/kt-multiplatform-tooling-social_1280x720.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"main\"\u003e\n    \u003cdiv\u003e\n                        \u003ca href=\"https://blog.jetbrains.com/kotlin/\"\u003e\n                            \u003cimg src=\"https://blog.jetbrains.com/wp-content/uploads/2019/01/Kotlin-5.svg\" alt=\"Kotlin logo\"/\u003e\n                                                                                                \n                                                                                    \u003c/a\u003e\n                                                    \u003cp\u003eA concise multiplatform language developed by JetBrains\u003c/p\u003e\n                                            \u003c/div\u003e\n                            \u003csection data-clarity-region=\"article\"\u003e\n                \u003cdiv\u003e\n                    \t\t\t\t\u003cp\u003e\u003ca href=\"https://blog.jetbrains.com/kotlin/category/kotlin/\"\u003eKotlin\u003c/a\u003e\n\t\t\t\u003ca href=\"https://blog.jetbrains.com/kotlin/category/multiplatform/\"\u003eMultiplatform\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"major-updates\"\u003eKotlin Multiplatform Tooling – Shifting Gears\u003c/h2\u003e                    \n                    \n\u003cp\u003eA couple of years ago, we initiated the idea of creating a Kotlin Multiplatform IDE to help facilitate the development of KMP applications. We embarked on this venture, building on the Fleet platform, with the intention of releasing it as a standalone IDE.\u003c/p\u003e\n\n\n\n\u003cp\u003eDuring this time, we have received feedback from our customers, specifically those using KMP, that they would like to see similar features and support for KMP on the IntelliJ Platform, in other words, both in IntelliJ IDEA and Android Studio. These requests have only increased in light of \u003ca href=\"https://android-developers.googleblog.com/2024/05/android-support-for-kotlin-multiplatform-to-share-business-logic-across-mobile-web-server-desktop.html?m=1\" target=\"_blank\" rel=\"noopener\"\u003eGoogle’s official support of KMP on Android\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cp\u003eIn the past year, we’ve also observed significant advances in terms of approaches to application development, an area that we at JetBrains are also heavily investing in. Just recently, we announced a new coding agent named \u003ca href=\"https://www.jetbrains.com/junie\" target=\"_blank\" rel=\"noopener\"\u003eJunie\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cp\u003eThese changes, as well as a desire to support our existing users on the IntelliJ Platform, require us to change our focus. That is why, moving forward, we will be focusing exclusively on providing better KMP support on the IntelliJ Platform – the specifics of what and how we’ll provide at a later date. As regards Fleet support, we will be deprecating our support for KMP in Fleet in the next three months and will no longer be releasing a standalone IDE for KMP.\u003c/p\u003e\n\n\n\n\u003cp\u003eWhile this is a change of direction, we strongly believe that ultimately, we need to make sure that we are delivering not only what our users want, but also continuing to drive advancement in the software development industry, leveraging the latest tech innovations that enhance the developer experience and open up new opportunities. At JetBrains, we have built an entire technology ecosystem on top of Kotlin, including KMP, Ktor, Exposed, Amper, and the many libraries we offer. All of this, combined with the vast amounts of libraries and frameworks that the community has created, gives us a tremendous opportunity to offer an end-to-end experience for software developers with exceptional tooling that can leverage new advances in AI.\u003c/p\u003e\n\n\n\n\u003cp\u003eWe would like to thank all of the many users who tried the early versions of the KMP tooling in Fleet and the tremendous amount of feedback you provided us. Please rest assured that this feedback was not given in vain. Much of what we have accomplished so far will be leveraged in our tooling efforts moving forward.\u003c/p\u003e\n\n\n\n\u003cp\u003eWe very much appreciate all your support, and we are committed to providing you with a great experience using our technologies.\u003c/p\u003e\n                    \n                                                                                                                                                                                                                            \u003cdiv\u003e\n                                \u003cdiv\u003e\n                                                                            \u003ch4\u003eSubscribe to Kotlin Blog updates\u003c/h4\u003e\n                                                                                                            \n                                \u003c/div\u003e\n                                \n                                \u003cp\u003e\u003cimg src=\"https://blog.jetbrains.com/wp-content/themes/jetbrains/assets/img/img-form.svg\" alt=\"image description\"/\u003e\n                                                                    \u003c/p\u003e\n                            \u003c/div\u003e\n                                                            \u003c/div\u003e\n                \u003ca href=\"#\"\u003e\u003c/a\u003e\n                \n                \n            \u003c/section\u003e\n                    \u003cdiv\u003e\n                \u003cp\u003e\n                    \u003ch2\u003eDiscover more\u003c/h2\u003e\n                \u003c/p\u003e\n                \n            \u003c/div\u003e\n                \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": null,
  "modifiedTime": null
}
