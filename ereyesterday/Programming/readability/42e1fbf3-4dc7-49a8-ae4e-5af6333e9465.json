{
  "id": "42e1fbf3-4dc7-49a8-ae4e-5af6333e9465",
  "title": "How-to: GitLab Single Sign-on with SAML, SCIM, and Azure’s Entra ID",
  "link": "https://about.gitlab.com/blog/2025/01/23/how-to-gitlab-single-sign-on-with-saml-scim-and-azures-entra-id",
  "description": "",
  "author": "Rob Jackson",
  "published": "2025-01-23T00:00:00.000Z",
  "source": "https://about.gitlab.com/atom.xml",
  "categories": null,
  "byline": "Rob Jackson",
  "length": 16816,
  "excerpt": "Follow this detailed walk-through of the configuration steps required to configure GitLab Single Sign-on, using Microsoft Azure’s Entra ID as the identity provider.",
  "siteName": "GitLab",
  "favicon": "https://about.gitlab.com/blog/nuxt-images/ico/favicon-192x192.png?cache=2022041",
  "text": "As organizations increase in size, it becomes increasingly difficult and critical to ensure that the right team members have access to the right groups and projects within their development platform. GitLab offers some powerful methods to manage user access, especially now with custom roles, but performing this at scale through a point-and-click user interface can be frustrating. However, all is not lost. You can use Security Assertion Markup Language (SAML) and System for Cross-domain Identity Management (SCIM) as a solution. (There are moments where I’m grateful for acronyms.) I was researching this topic for a particular customer, and walking through the GitLab documentation on the capabilities, but I never felt like I truly understood the integration. As is often the case, especially when dealing with integrating components, the knowledge from experience far outweighs that gained from reading or watching. In that light, I wanted to share my steps along this path and invite you all to join me. All you need is a free trial of Microsoft Azure Entra ID and GitLab Premium with a top-level group on GitLab.com. Note: This exercise produces a working integration, however, for production environments there may be necessary deviations. For example, the user account email for the identity provider (Entra ID in this case) will likely not match your GitLab account email. Creating the application in Entra ID First, go to the Entra ID admin center. Within the Applications area, select Enterprise Applications. We’re going to create a new application, and then create our own application. Figure 1: Entra ID application creation flow With our new application created, we can start configuring the single sign-on (SSO) parameters for our application. For this task, you may want to have side-by-side browser windows. One window on your Entra ID application, and another window on the SAML settings for your GitLab group. Those settings are located under Settings, then SAML SSO on the left side of your GitLab window, as shown in Figure 2. If you don’t see this option, you aren’t in the top-level group, don’t have permission to configure SAML, or don’t have GitLab Premium enabled for that group. Figure 2: GitLab SAML configuration Within your Entra ID interface, select Single sign-on and click the SAML card. Figure 3: Entra ID SAML configuration With the side-by-side view, the SAML configuration settings are on the left and the GitLab SSO settings on the right. Figure 4: Side-by-side view of Entra ID and GitLab Now we can start copying and pasting parameters. Within the Entra ID interface, select Edit within the “Basic SAML Configuration” block. The parameter sources and destination are identified in the following table. Source (GitLab) Destination (Entra ID) Identifier Identifier (Entity ID) Assertion consumer service URL Reply URL (Assertion Consumer Service URL) GitLab single sign-on URL Sign on URL (Optional) Once completed, your side-by-side view should appear similar to the following (noting the URLs are unique to your environment). Figure 5: Completed basic SAML SSO configuration Click Save within the Entra ID “Basic SML Configuration” window to save your hard work thus far. Note: You may need to click on the “X” in the upper right of the “Basic SAML Configuration” window if it doesn’t close automatically. After this window closes, you may get a popup to test single sign-on with your application. Select No, I’ll test later, because we still have more work to do (there is always more work to do). Configuring attributes and claims Within the Entra ID user interface, look for the section for “Attributes and Claims,” and click the Edit pencil icon. The first thing we want to do is modify the Unique User identifier (Name ID) value, so click on that row and set the Source attribute to user.objectid. Additionally, the Name identifier format must be updated, and set to Persistent. Figure 6: Configuring attributes and claims Save that claim configuration. Now we have additional claims to configure, but there are only three that we need here. So, feel free to go wild and delete those default four items under Additional claims, or you can edit the existing ones to match the table below. Note that these values (specifically, the Name) are case sensitive. Name Namespace Source Attribute emailaddress http://schemas.microsoft.com/ws/2008/06/identity/claims user.otheremail NameID http://schemas.microsoft.com/ws/2008/06/identity/claims user.objectid The resulting claims configuration should appear as follows. Note the use of otheremail for the “emailaddress” attribute. This was necessary for me as my primary email addresses within Entra ID are not the addresses used on GitLab.com. If you recall, when I set up my “user,\" I modified the contact information to include my gitlab.com email address as one of my “Other emails.” Figure 7: Configuring the claims With your attributes configured, under the Advance settings, enable Include attribute name format setting. Figure 8: Advanced claims configuration Your \"Attributes and Claims\" window should now look similar to Figure 9 below. Figure 9: Configured attributes and claims If you’re happy, or at least relatively content, with your configuration, click the “X” in the top right corner of the \"Attributes and Claims\" window to close it. Configuring and assigning users Now that we have our application configured, we need to ensure that our users have been assigned to that application. I'll assume you’re working with a test instance that does not have the same email address as what is configured within your GitLab.com namespace. So let’s go to the “Users and groups” within the Entra ID user interface for your configured application. Figure 10: Managing application users and groups Select Add user/group, and under the “Users and groups” where it says “None Selected,” click that text. Now you can select the user(s) to add to your application. These are the users that will be permitted to log into GitLab, authenticating themselves through Entra ID. Figure 11: User selection Once selected, at the bottom of that page, click Select, and at the bottom of the next, select Assign. Now you should have a user assigned to your application. Figure 12: User assigned to application Next, we need to ensure that the GitLab.com email address for that user is configured correctly. By clicking on the user itself, we can modify or configure some additional information about that user. We can see below, the User principal name, which is based on an “onmicrosoft” domain. This is not the email address I have associated with my GitLab.com account. If you recall that we set the “Email address” attribute to “otheremail,” this is where we now configure that “other” email address. Figure 13: User properties Click the option to Edit properties for the user, and click on the Contact Information heading. Here we can add other emails – more specifically, the email address utilized for your GitLab.com account. Figure 14: Configuration of alternate email address That should complete the configuration parameters that we need in Entra ID, but wait, there’s more. Within the GitLab side now, you will need to configure a couple parameters. First, you might as well enable SAML for the group as that’s kind of a key piece here. GitLab offers some additional options to disable password authentication or enforce SSO to reduce the security risks within your application, but we’ll leave those unchecked for now. Similar to the table above, we’ll need a couple things from Entra ID to configure into GitLab. Please refer to the table below. Source (Entra ID) Destination (GitLab) Login URL Identity provider single sign-on URL Thumbprint Certificate fingerprint Figure 15: GitLab SAML configuration from Entra ID Lastly, you want to configure the default membership role for users logging in via SAML. Note that the access that you set for users here will cascade down to other groups and projects within your top-level group. Therefore, I would strongly recommend NOT setting this role to be “Owner.” Either “Guest” or “Minimal Access” would be acceptable options here, depending on the security posture of your organization. For more information about what these roles can and can not do, refer to the GitLab documentation on Roles and Permissions. Now, save your work on the GitLab interface by clicking that beautiful blue Save changes button. With your GitLab settings saved, you can now test your setup. I would encourage you to do this both through the “Verify SAML Configuration” on the GitLab system as well as with the Entra ID SSO \"Test\" button. Troubleshooting SAML In addition to the troubleshooting steps included within GitLab documentation, I wanted to include a couple other items that I personally experienced. If you get an error stating that the SAML reference did not contain an email address, check the Claim name for your email within the “Attributes and Claims” section within your Entra ID application. With GitLab 16.7, we added support for the “2008” attribute names, and at least for the email address setting, I found the default “xmlsoap” name for the email address claim to be a disappointing failure. Another common error is “SAML Name ID and email address do not match your user account.” As you may suspect, this error is caused by a mismatch of the “NameID” and “emailaddress” attributes within the Entra ID application. This could be a misconfiguration of the “Attributes and Claims,” but it could also be that the properties of your test user don’t match your configuration. One helpful method to identify exactly what is coming through the SAML exchange is to use a SAML Tracer or SAML Message Decoder plugin with your web browser. SCIM Now that you have SAML configured to enable users to log in via your Entra ID application, let’s make sure that people are assigned to the proper group(s) upon login. This can be incredibly helpful at scale, where instead of manually identifying which groups the particular users belong to, GitLab can learn this information from your identity application, Entra ID in this case. Because SCIM utilizes groups to identify group membership, we need to create a group within Entra ID and add the relevant user(s) to the group. For this we’ll need the main administration menu for Entra ID. Figure 16: Entra ID Group configuration We’re going to create a new group and assign our user(s) to that group. So click New group and configure a new group, which only requires you to configure a “Group name.” I used the default group type of “Security.” Leave the “Membership type” as “Assigned.” From this window, we can also assign the members. Figure 17: Creating a New Entra ID Group Once you’ve added the member(s), click Create in the bottom of that window. With your group created, and the user(s) assigned to the group, we can configure SCIM. Immediately below the SAML configuration section within the GitLab UI, you’ll see the “SCIM Token” area. Here you can generate a new token, and copy the endpoint URL, both of which will be useful for the next steps. Note that if you forget or already have a SCIM token, it can be reset. Figure 18: SCIM token and endpoint within GitLab With this information saved, return to your Entra ID application configuration. Within the left side menu, you’ll find the following: Figure 19: Provisioning SCIM within Entra ID Within the \"Provisioning\" section, click on New Configuration, which opens a new page where that token and URL from GitLab will be used. Figure 20: New provisioning configuration Feel free to test the connection to ensure that you’ve configured the parameters properly. After testing, click on the Create button to establish the configuration and work on our mappings and settings. You may need to click the “X” in the top right corner of the panel to return to the overview configuration. Expand the “Mappings,” which includes two parameters; “Provision Microsoft Entra ID Groups” and “Provision Microsoft Entra ID Users.” SCIM group provisioning isn’t currently supported in GitLab, and although it doesn’t break the integration, keeping group provisioning enabled may cause negligible error messages. Therefore, we want to disable “Provision Microsoft Entra ID Groups,” so click that entry and set the “Enabled” field to “No.” Figure 21: Provisioning attribute mapping Save that configuration and select “Provision Microsoft Entra ID Users.” Validate that all three \"Target Object Actions\" are enabled, and then proceed to the “Attribute Mapping” section. Delete all existing mappings available to delete (I find this easier because attributes can’t be assigned twice), and then configure the Attribute Mappings per the following table: customappsso Attribute (Destination) Microsoft Entra ID Attribute (Source) Matching Precedence Mapping Type externalID objectId 1 Direct active Switch([IsSoftDeleted], , \"False\", \"True\", \"True\", \"False\") Expression userName mailNickname Direct name.formatted displayName Direct Emails[type eq “other”].value userPrincipalName Direct Figure 22: Editing attributes After configuring all of the attribute mappings, the result should be similar to that found in Figure 22. Figure 23: Completed attribute mapping configuration Note the use of the “other” email within the customappssso attribute. This relates back to the “other” email we configured for the user back in the Entra ID user properties. In a production situation, the emails for the SSO account and the email address for the account within GitLab should match. With your mapping complete (congratulations, Ptolemy), there are some advanced configuration settings necessary. Underneath the \"Attribute Mappings,\" click the box for “Show advanced options.” Once this box is checked, a link called “Edit attribute list for customappsso” is revealed. Figure 24: Advanced attribute configuration Click that link, and ensure that the Name “ID” is both “Primary Key” and “Required,” and that “externalID” is also “Required.” These attributes both refer to a unique user ID generated by Entra ID. However, although the “id” itself is required, it is not consistently provided within the API calls. Therefore, GitLab relies on the “externalID” to ensure the proper connection between the Entra ID and GitLab user accounts. Figure 25: Required attribute list Save these settings, and then close the “Attribute Mapping” page with the “X” in the top right of the window. Return to the \"Application Provisioning\" section and click Start provisioning. Within GitLab, we need to configure the association between the group we configured within Entra ID and the level of access we want those users to have within the GitLab top-level group. Note that this association can be configured on each sub-group within GitLab for more extensive provisioning, but within GitLab, permissions flow downhill. Whatever permission you set for a user at a top-level group, or sub-group, will cascade down to all projects and groups contained therein. Within the \"Settings\" portion of the GitLab menu, select SAML Group Links. Here is where you’ll configure the group name and determine what access level, or role, members of the Entra ID Group will have within this particular GitLab Group. Figure 26: GitLab SAML Group link As shown in Figure 26, I’ve configured my membership to The Academy such that any users within the dev-security group from Entra ID will be granted Developer access. Note that this is a slight variation of what a typical production environment would look like. In most instances, the user account within the identity provider (Entra ID, in this case) would match the user’s corporate account email (and we wouldn’t require “other” emails). When configured properly, if the user does not already have an account on GitLab, one will be created for them tied to their SSO account. Figure 27: SAML Group Links configured Now that you’ve completed the configuration, give it a try! From another browser, preferably in private mode to ignore any cookies or other yummy artifacts, paste the link for the GitLab SSO URL found in the GitLab SAML configurations. You should be prompted to log in with your Entra ID credentials and gain the proper access to your GitLab group! Congratulations, you’ve made it! I hope you’ve learned from and appreciate the work here, and we can all rejoice in the fact that the users within the Play-Dough app can now all properly authenticate, with the right permissions, to The Academy! Don't have a GitLab account? Sign up for a free, 60-day trial today. Read more The ultimate guide to enabling SAML and SSO on GitLab.com SAML SSO for GitLab.com groups documentation",
  "image": "https://images.ctfassets.net/r9o86ar0p03f/6gTk7M1DNx0tFuovupVFB1/34420865874ada19d36cb0b2401c2e2c/AdobeStock_1097303277.jpeg?fm=webp\u0026w=820\u0026h=500",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv data-v-37f1022b=\"\" data-v-53094866=\"\" data-v-74bd29c6=\"\"\u003e\u003cp\u003eAs organizations increase in size, it becomes increasingly difficult and critical to ensure that the right team members have access to the right groups and projects within their development platform. GitLab offers some powerful methods to manage user access, especially now with \u003ca href=\"https://about.gitlab.com/blog/2024/02/13/how-to-tailor-gitlab-access-with-custom-roles/\"\u003ecustom roles\u003c/a\u003e, but performing this at scale through a point-and-click user interface can be frustrating. However, all is not lost. You can use Security Assertion Markup Language (SAML) and System for Cross-domain Identity Management (SCIM) as a solution. (There are moments where I’m grateful for acronyms.)\u003c/p\u003e\n\u003cp\u003eI was researching this topic for a particular customer, and walking through the GitLab documentation on the capabilities, but I never felt like I truly understood the integration. As is often the case, especially when dealing with integrating components, the knowledge from experience far outweighs that gained from reading or watching. In that light, I wanted to share my steps along this path and invite you all to join me. All you need is a free trial of Microsoft Azure Entra ID and GitLab Premium with a top-level group on GitLab.com.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e This exercise produces a working integration, however, for production environments there may be necessary deviations. For example, the user account email for the identity provider (Entra ID in this case) will likely not match your GitLab account email.\u003c/p\u003e\n\u003ch2 id=\"creating-the-application-in-entra-id\" tabindex=\"-1\"\u003eCreating the application in Entra ID \u003ca href=\"#creating-the-application-in-entra-id\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eFirst, go to the Entra ID admin center. Within the \u003cstrong\u003eApplications\u003c/strong\u003e area, select \u003cstrong\u003eEnterprise Applications\u003c/strong\u003e. We’re going to create a new application, and then create our own application.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/6ECqgWzOweNnRks9LXGG01/936fb84e86c6e2430551bbd058b00369/image13.png\" alt=\"Entra ID application creation flow\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 1: Entra ID application creation flow\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eWith our new application created, we can start configuring the single sign-on (SSO) parameters for our application. For this task, you may want to have side-by-side browser windows. One window on your Entra ID application, and another window on the SAML settings for your GitLab group. Those settings are located under \u003cstrong\u003eSettings\u003c/strong\u003e, then SAML SSO on the left side of your GitLab window, as shown in Figure 2. If you don’t see this option, you aren’t in the top-level group, don’t have permission to configure SAML, or don’t have GitLab Premium enabled for that group.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/0aOqVkd2HthLzXflRrXM9/4933debfab716bdce26cabe7b461cf5d/image7.png\" alt=\"GitLab SAML configuration\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 2: GitLab SAML configuration\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eWithin your Entra ID interface, select \u003cstrong\u003eSingle sign-on\u003c/strong\u003e and click the SAML card.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/4vHX8CqKeLoEdgSykxpC5C/384540d6032dd716b6380e624c4807d5/image24.png\" alt=\"Entra ID SAML configuration\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 3: Entra ID SAML configuration\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eWith the side-by-side view, the SAML configuration settings are on the left and the GitLab SSO settings on the right.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/2fdWvcyK3f9LpwqhUFsxpc/7c77eed1ff26c9d507f7f703e22c9d33/image16.png\" alt=\"Side-by-side view of Entra ID and GitLab\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 4: Side-by-side view of Entra ID and GitLab\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eNow we can start copying and pasting parameters. Within the Entra ID interface, select \u003cstrong\u003eEdit\u003c/strong\u003e within the “Basic SAML Configuration” block. The parameter sources and destination are identified in the following table.\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eSource (GitLab)\u003c/th\u003e\n\u003cth\u003eDestination (Entra ID)\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eIdentifier\u003c/td\u003e\n\u003ctd\u003eIdentifier (Entity ID)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eAssertion consumer service URL\u003c/td\u003e\n\u003ctd\u003eReply URL (Assertion Consumer Service URL)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eGitLab single sign-on URL\u003c/td\u003e\n\u003ctd\u003eSign on URL (Optional)\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\nOnce completed, your side-by-side view should appear similar to the following (noting the URLs are unique to your environment).\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/64oJYy65an3BM2ia8rS2EG/74ac354002931bba98a56c0668e11bc9/image9.png\" alt=\"Completed basic SAML SSO configuration\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 5: Completed basic SAML SSO configuration\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eClick \u003cstrong\u003eSave\u003c/strong\u003e within the Entra ID “Basic SML Configuration” window to save your hard work thus far. Note: You may need to click on the “X” in the upper right of the “Basic SAML Configuration” window if it doesn’t close automatically.\u003c/p\u003e\n\u003cp\u003eAfter this window closes, you may get a popup to test single sign-on with your application. Select \u003cstrong\u003eNo, I’ll test later\u003c/strong\u003e, because we still have more work to do (there is always more work to do).\u003c/p\u003e\n\u003ch2 id=\"configuring-attributes-and-claims\" tabindex=\"-1\"\u003eConfiguring attributes and claims \u003ca href=\"#configuring-attributes-and-claims\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eWithin the Entra ID user interface, look for the section for “Attributes and Claims,” and click the \u003cstrong\u003eEdit\u003c/strong\u003e pencil icon. The first thing we want to do is modify the Unique User identifier (Name ID) value, so click on that row and set the Source attribute to \u003cstrong\u003euser.objectid\u003c/strong\u003e. Additionally, the Name identifier format must be updated, and set to \u003cstrong\u003ePersistent\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/1zbCkXhdbeGsxvIBvOpIvU/98312a7e3f92a765f44d7743bd5b02df/image14.png\" alt=\"Configuring attributes and claims\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 6: Configuring attributes and claims\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eSave that claim configuration. Now we have additional claims to configure, but there are only three that we need here. So, feel free to go wild and delete those default four items under \u003cstrong\u003eAdditional claims\u003c/strong\u003e, or you can edit the existing ones to match the table below. Note that these values (specifically, the Name) are case sensitive.\n\u003cbr/\u003e\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eName\u003c/th\u003e\n\u003cth\u003eNamespace\u003c/th\u003e\n\u003cth\u003eSource Attribute\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eemailaddress\u003c/td\u003e\n\u003ctd\u003ehttp://schemas.microsoft.com/ws/2008/06/identity/claims\u003c/td\u003e\n\u003ctd\u003euser.otheremail\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eNameID\u003c/td\u003e\n\u003ctd\u003ehttp://schemas.microsoft.com/ws/2008/06/identity/claims\u003c/td\u003e\n\u003ctd\u003euser.objectid\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eThe resulting claims configuration should appear as follows. Note the use of \u003cstrong\u003eotheremail\u003c/strong\u003e for the “emailaddress” attribute. This was necessary for me as my primary email addresses within Entra ID are not the addresses used on GitLab.com. If you recall, when I set up my “user,\u0026#34; I modified the contact information to include my gitlab.com email address as one of my “Other emails.”\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/1JcDjXQJ3CLRYZHNAmp17Q/ee7d433eb6b96d377d37bbf401f985fb/image21.png\" alt=\"Configuring the claims\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 7: Configuring the claims\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eWith your attributes configured, under the Advance settings, enable \u003cstrong\u003eInclude attribute name format\u003c/strong\u003e setting.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/4IqIBDychLovg2FPH4l94P/94e4b49de2d4644b8e820fe830ec0a37/image8.png\" alt=\"Advanced claims configuration\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 8: Advanced claims configuration\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eYour \u0026#34;Attributes and Claims\u0026#34; window should now look similar to Figure 9 below.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/6KtyKI6nqRXytPvBt7rPYo/e4642a9e912968794548cef4cb1b99d1/image18.png\" alt=\"Configured attributes and claims\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 9: Configured attributes and claims\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eIf you’re happy, or at least relatively content, with your configuration, click the “X” in the top right corner of the \u0026#34;Attributes and Claims\u0026#34; window to close it.\u003c/p\u003e\n\u003ch2 id=\"configuring-and-assigning-users\" tabindex=\"-1\"\u003eConfiguring and assigning users \u003ca href=\"#configuring-and-assigning-users\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eNow that we have our application configured, we need to ensure that our users have been assigned to that application. I\u0026#39;ll assume you’re working with a test instance that does not have the same email address as what is configured within your GitLab.com namespace.\u003c/p\u003e\n\u003cp\u003eSo let’s go to the “Users and groups” within the Entra ID user interface for your configured application.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/5rzhVXJhcqcXaugKmC4zvx/833051a022ff4e2227bf56ac48ae8601/image17.png\" alt=\"Managing application users and groups\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 10: Managing application users and groups\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eSelect \u003cstrong\u003eAdd user/group\u003c/strong\u003e, and under the “Users and groups” where it says “None Selected,” click that text. Now you can select the user(s) to add to your application. These are the users that will be permitted to log into GitLab, authenticating themselves through Entra ID.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/6OOlsau20F6cbDIgbfle7G/e34a5027a9529e2e53451b991b9711ea/image23.png\" alt=\"User selection\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 11: User selection\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eOnce selected, at the bottom of that page, click \u003cstrong\u003eSelect\u003c/strong\u003e, and at the bottom of the next, select \u003cstrong\u003eAssign\u003c/strong\u003e. Now you should have a user assigned to your application.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/34yKnMDjV9jMa5zpOotz7S/9c2e73a45f05de47fbf92f07e788fc33/image12.png\" alt=\"User assigned to application\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 12: User assigned to application\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eNext, we need to ensure that the GitLab.com email address for that user is configured correctly. By clicking on the user itself, we can modify or configure some  additional information about that user. We can see below, the User principal name, which is based on an “onmicrosoft” domain. This is not the email address I have associated with my GitLab.com account. If you recall that we set the “Email address” attribute to “otheremail,” this is where we now configure that “other” email address.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/47bRS61CjkVDlghomlStDf/208c27b179494638d1ac6f069cb6daf6/image20.png\" alt=\"User properties\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 13: User properties\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eClick the option to \u003cstrong\u003eEdit properties\u003c/strong\u003e for the user, and click on the \u003cstrong\u003eContact Information\u003c/strong\u003e heading. Here we can add other emails – more specifically, the email address utilized for your GitLab.com account.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/4htJTJkjY20kau7dxsJEig/6bcdada5381fc8a324260cc4cf9bcf5a/image15.png\" alt=\"Configuration of alternate email address\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 14: Configuration of alternate email address\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eThat should complete the configuration parameters that we need in Entra ID, but wait, there’s more.\u003c/p\u003e\n\u003cp\u003eWithin the GitLab side now, you will need to configure a couple parameters. First, you might as well enable SAML for the group as that’s kind of a key piece here. GitLab offers some additional options to disable password authentication or enforce SSO to reduce the security risks within your application, but we’ll leave those unchecked for now. Similar to the table above, we’ll need a couple things from Entra ID to configure into GitLab. Please refer to the table below.\n\u003cbr/\u003e\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eSource (Entra ID)\u003c/th\u003e\n\u003cth\u003eDestination (GitLab)\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eLogin URL\u003c/td\u003e\n\u003ctd\u003eIdentity provider single sign-on URL\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eThumbprint\u003c/td\u003e\n\u003ctd\u003eCertificate fingerprint\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/2efiSMW9nUmdGOcjIWpjjo/bfa9154201303dd7838c840db63b1629/image25.png\" alt=\"GitLab SAML configuration from Entra ID\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 15: GitLab SAML configuration from Entra ID\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eLastly, you want to configure the default membership role for users logging in via SAML. Note that the access that you set for users here will cascade down to other groups and projects within your top-level group. Therefore, I would strongly recommend NOT setting this role to be “Owner.” Either “Guest” or “Minimal Access” would be acceptable options here, depending on the security posture of your organization. For more information about what these roles can and can not do, refer to the GitLab documentation on \u003ca href=\"https://docs.gitlab.com/ee/user/permissions.html#roles\"\u003eRoles and Permissions\u003c/a\u003e. Now, save your work on the GitLab interface by clicking that beautiful blue \u003cstrong\u003eSave changes\u003c/strong\u003e button.\u003c/p\u003e\n\u003cp\u003eWith your GitLab settings saved, you can now test your setup. I would encourage you to do this both through the “Verify SAML Configuration” on the GitLab system as well as with the Entra ID SSO \u0026#34;Test\u0026#34; button.\u003c/p\u003e\n\u003ch2 id=\"troubleshooting-saml\" tabindex=\"-1\"\u003eTroubleshooting SAML \u003ca href=\"#troubleshooting-saml\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eIn addition to the troubleshooting steps included within \u003ca href=\"https://docs.gitlab.com/ee/user/group/saml_sso/troubleshooting.html\"\u003eGitLab documentation\u003c/a\u003e, I wanted to include a couple other items that I personally experienced.\u003c/p\u003e\n\u003cp\u003eIf you get an error stating that the SAML reference did not contain an email address, check the Claim name for your email within the “Attributes and Claims” section within your Entra ID application. With GitLab 16.7, we added support for the “2008” attribute names, and at least for the email address setting, I found the default “xmlsoap” name for the email address claim to be a disappointing failure.\u003c/p\u003e\n\u003cp\u003eAnother common error is “SAML Name ID and email address do not match your user account.” As you may suspect, this error is caused by a mismatch of the “NameID” and “emailaddress” attributes within the Entra ID application. This could be a misconfiguration of the “Attributes and Claims,” but it could also be that the properties of your test user don’t match your configuration. One helpful method to identify exactly what is coming through the SAML exchange is to use a SAML Tracer or SAML Message Decoder plugin with your web browser.\u003c/p\u003e\n\u003ch2 id=\"scim\" tabindex=\"-1\"\u003eSCIM \u003ca href=\"#scim\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eNow that you have SAML configured to enable users to log in via your Entra ID application, let’s make sure that people are assigned to the proper group(s) upon login. This can be incredibly helpful at scale, where instead of manually identifying which groups the particular users belong to, GitLab can learn this information from your identity application, Entra ID in this case.\u003c/p\u003e\n\u003cp\u003eBecause SCIM utilizes groups to identify group membership, we need to create a group within Entra ID and add the relevant user(s) to the group. For this we’ll need the main administration menu for Entra ID.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/7E8Wa5MDnHK8TvM3YuPX9J/8973800b4be1eab4325d53dfc7e011c9/image19.png\" alt=\"Entra ID Group configuration\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 16: Entra ID Group configuration\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eWe’re going to create a new group and assign our user(s) to that group. So click \u003cstrong\u003eNew group\u003c/strong\u003e and configure a new group, which only requires you to configure a “Group name.” I used the default group type of “Security.” Leave the “Membership type” as “Assigned.” From this window, we can also assign the members.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/36ghuZp6lfOIBljKGcsiRZ/129c2bffded8c9e698efdbee8b2ce948/image2.png\" alt=\"Creating a New Entra ID Group\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 17: Creating a New Entra ID Group\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eOnce you’ve added the member(s), click \u003cstrong\u003eCreate\u003c/strong\u003e in the bottom of that window. With your group created, and the user(s) assigned to the group, we can configure SCIM.\u003c/p\u003e\n\u003cp\u003eImmediately below the SAML configuration section within the GitLab UI, you’ll see the “SCIM Token” area. Here you can generate a new token, and copy the endpoint URL, both of which will be useful for the next steps. Note that if you forget or already have a SCIM token, it can be reset.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/1lCOTuUlQsB3CuzTjNfgne/c894c56dba9575be087e0933ef549fe8/image10.png\" alt=\"SCIM token and endpoint within GitLab\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 18: SCIM token and endpoint within GitLab\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eWith this information saved, return to your Entra ID application configuration. Within the left side menu, you’ll find the following:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/1cjyv1DI0X5imVH46YgJx1/ef7f7e1fc8b5bdfea1710fa9558365fa/image3.png\" alt=\"Provisioning SCIM within Entra ID\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 19: Provisioning SCIM within Entra ID\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eWithin the \u0026#34;Provisioning\u0026#34; section, click on \u003cstrong\u003eNew Configuration\u003c/strong\u003e, which opens a new page where that token and URL from GitLab will be used.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/7fm2HcFxb23Ghn5tJAvEj0/e48332ff15fc895190c7e0202afa500e/image22.png\" alt=\"New provisioning configuration\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 20: New provisioning configuration\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eFeel free to test the connection to ensure that you’ve configured the parameters properly. After testing, click on the \u003cstrong\u003eCreate\u003c/strong\u003e button to establish the configuration and work on our mappings and settings. You may need to click the “X” in the top right corner of the panel to return to the overview configuration.\u003c/p\u003e\n\u003cp\u003eExpand the “Mappings,” which includes two parameters; “Provision Microsoft Entra ID Groups” and “Provision Microsoft Entra ID Users.” SCIM group provisioning isn’t currently supported in GitLab, and although it doesn’t break the integration, keeping group provisioning enabled may cause negligible error messages. Therefore, we want to disable “Provision Microsoft Entra ID Groups,” so click that entry and set the “Enabled” field to “No.”\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/1Fy60PYj4ghKhWLIotItfo/34fa4bdf40fcdd5ca1176508a44e7c22/image4.png\" alt=\"Provisioning attribute mapping\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 21: Provisioning attribute mapping\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eSave that configuration and select “Provision Microsoft Entra ID Users.” Validate that all three \u0026#34;Target Object Actions\u0026#34; are enabled, and then proceed to the “Attribute Mapping” section. Delete all existing mappings available to delete (I find this easier because attributes can’t be assigned twice), and then configure the Attribute Mappings per the following table:\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003ecustomappsso Attribute (Destination)\u003c/th\u003e\n\u003cth\u003eMicrosoft Entra ID Attribute (Source)\u003c/th\u003e\n\u003cth\u003eMatching Precedence\u003c/th\u003e\n\u003cth\u003eMapping Type\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eexternalID\u003c/td\u003e\n\u003ctd\u003eobjectId\u003c/td\u003e\n\u003ctd\u003e1\u003c/td\u003e\n\u003ctd\u003eDirect\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eactive\u003c/td\u003e\n\u003ctd\u003eSwitch([IsSoftDeleted], , \u0026#34;False\u0026#34;, \u0026#34;True\u0026#34;, \u0026#34;True\u0026#34;, \u0026#34;False\u0026#34;)\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003eExpression\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003euserName\u003c/td\u003e\n\u003ctd\u003emailNickname\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003eDirect\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ename.formatted\u003c/td\u003e\n\u003ctd\u003edisplayName\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003eDirect\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eEmails[type eq “other”].value\u003c/td\u003e\n\u003ctd colspan=\"2\"\u003euserPrincipalName\u003c/td\u003e\n\u003ctd\u003eDirect\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/6dQwfg6tJ4DOH1MFCyvLvn/3c0ad4618054411364bb3291100e32ac/image26.png\" alt=\"Editing attributes\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 22: Editing attributes\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eAfter configuring all of the attribute mappings, the result should be similar to that found in Figure 22.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/2l8Dq5suFv8pv6s4xQcwsl/fa44f551b7133ddf8702bb00d631ca84/image5.png\" alt=\"Completed attribute mapping configuration\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 23: Completed attribute mapping configuration\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eNote the use of the “other” email within the \u003cstrong\u003ecustomappssso\u003c/strong\u003e attribute. This relates back to the “other” email we configured for the user back in the Entra ID user properties. In a production situation, the emails for the SSO account and the email address for the account within GitLab should match.\u003c/p\u003e\n\u003cp\u003eWith your mapping complete (congratulations, Ptolemy), there are some advanced configuration settings necessary. Underneath the \u0026#34;Attribute Mappings,\u0026#34; click the box for “Show advanced options.” Once this box is checked, a link called “Edit attribute list for customappsso” is revealed.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/65om0difHvM06VWbaFYL6g/7fc436635e776f63dc71b2027e351dc8/image6.png\" alt=\"Advanced attribute configuration\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 24: Advanced attribute configuration\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eClick that link, and ensure that the Name “ID” is both “Primary Key” and “Required,” and that “externalID” is also “Required.” These attributes both refer to a unique user ID generated by Entra ID. However, although the “id” itself is required, it is not consistently provided within the API calls. Therefore, GitLab relies on the “externalID” to ensure the proper connection between the Entra ID and GitLab user accounts.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/1ujUonTIvsNUgo1glDg8Sf/baf4d0ebd4ec1dc912e286961d7c0846/image1.png\" alt=\"Required attribute list\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 25: Required attribute list\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eSave these settings, and then close the “Attribute Mapping” page with the “X” in the top right of the window. Return to the \u0026#34;Application Provisioning\u0026#34; section and click \u003cstrong\u003eStart provisioning\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eWithin GitLab, we need to configure the association between the group we configured within Entra ID and the level of access we want those users to have within the GitLab top-level group. Note that this association can be configured on each sub-group within GitLab for more extensive provisioning, but within GitLab, permissions flow downhill. Whatever permission you set for a user at a top-level group, or sub-group, will cascade down to all projects and groups contained therein.\u003c/p\u003e\n\u003cp\u003eWithin the \u0026#34;Settings\u0026#34; portion of the GitLab menu, select \u003cstrong\u003eSAML Group Links\u003c/strong\u003e. Here is where you’ll configure the group name and determine what access level, or role, members of the Entra ID Group will have within this particular GitLab Group.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/6izdNhzMSssEBSGxqDwGEN/326c6d09a2b572f438375464ae903189/image27.png\" alt=\"GitLab SAML Group link\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 26: GitLab SAML Group link\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eAs shown in Figure 26, I’ve configured my membership to The Academy such that any users within the dev-security group from Entra ID  will be granted Developer access. Note that this is a slight variation of what a typical production environment would look like. In most instances, the user account within the identity provider (Entra ID, in this case) would match the user’s corporate account email (and we wouldn’t require “other” emails). When configured properly, if the user does not already have an account on GitLab, one will be created for them tied to their SSO account.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/58htcOWFV7kPf18UUhUe2Z/f0d58dd9e23b96dce43e56e14d787c21/image11.png\" alt=\"GitLab SSO tutorial - image11\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eFigure 27: SAML Group Links configured\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eNow that you’ve completed the configuration, give it a try! From another browser, preferably in private mode to ignore any cookies or other yummy artifacts, paste the link for the GitLab SSO URL found in the GitLab SAML configurations. You should be prompted to log in with your Entra ID credentials and gain the proper access to your GitLab group!\u003c/p\u003e\n\u003cp\u003eCongratulations, you’ve made it! I hope you’ve learned from and appreciate the work here, and we can all rejoice in the fact that the users within the Play-Dough app can now all properly authenticate, with the right permissions, to The Academy!\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eDon\u0026#39;t have a GitLab account? \u003ca href=\"https://about.gitlab.com/free-trial/devsecops/\"\u003eSign up for a free, 60-day trial today\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"read-more\" tabindex=\"-1\"\u003eRead more \u003ca href=\"#read-more\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://about.gitlab.com/blog/2023/09/14/the-ultimate-guide-to-enabling-saml/\"\u003eThe ultimate guide to enabling SAML and SSO on GitLab.com\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.gitlab.com/ee/user/group/saml_sso/\"\u003eSAML SSO for GitLab.com groups documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "18 min read",
  "publishedTime": "2025-01-23T00:00:00Z",
  "modifiedTime": null
}
