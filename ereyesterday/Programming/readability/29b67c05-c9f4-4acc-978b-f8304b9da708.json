{
  "id": "29b67c05-c9f4-4acc-978b-f8304b9da708",
  "title": "Java News Roundup: GlassFish, JEPs Targeted for JDK 25, TornadoVM, Hibernate Reactive, Spring Cloud",
  "link": "https://www.infoq.com/news/2025/06/java-news-roundup-may26-2025/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "This week's Java roundup for May 26th, 2025 features news highlighting: the twelfth milestone release of GlassFish 8.0; four JEPs targeted for JDK 25; introducing the GPULlama3.java project powered by TornadoVM; and GA releases of Hibernate Reactive 3.0, Spring Modulith 1.4 and Spring Cloud 2025.0. By Michael Redlich",
  "author": "Michael Redlich",
  "published": "Mon, 02 Jun 2025 14:25:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Hibernate Reactive",
    "Quarkus",
    "Java",
    "TornadoVM",
    "Hibernate Search",
    "JHipster",
    "Open JDK",
    "JDK 25",
    "Jakarta EE",
    "Spring Cloud",
    "Glassfish",
    "Groovy",
    "Spring Modulith",
    "Architecture \u0026 Design",
    "Development",
    "news"
  ],
  "byline": "Michael Redlich",
  "length": 7943,
  "excerpt": "This week's Java roundup for May 26th, 2025 features news highlighting: the twelfth milestone release of GlassFish 8.0; four JEPs targeted for JDK 25; introducing the GPULlama3.java project powered by",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s1_20250527074915/apple-touch-icon.png",
  "text": "This week's Java roundup for May 26th, 2025 features news highlighting: the twelfth milestone release of GlassFish 8.0; four JEPs targeted for JDK 25; introducing the GPULlama3.java project powered by TornadoVM; and GA releases of Hibernate Reactive 3.0, Spring Modulith 1.4 and Spring Cloud 2025.0. OpenJDK The following JEPs have been elevated from Proposed to Target to Targeted for JDK 25: JEP 521: Generational Shenandoah (announced here) JEP 520: JFR Method Timing \u0026 Tracing (announced here) JEP 518: JFR Cooperative Sampling (announce here) JEP 470: PEM Encodings of Cryptographic Objects (Preview) (announced here) JEP 509, JFR CPU-Time Profiling (Experimental), has been elevated from Candidate to Proposed to Target for JDK 25. This experimental JEP proposes to enhance the JDK Flight Recorder (JFR) to allow for capturing CPU-time profiling information on Linux OS. The review is expected to conclude on Wednesday, June 4, 2025. JDK 25 Build 25 of the JDK 25 early-access builds was made available this past week featuring updates from Build 24 that include fixes for various issues. More details on this release may be found in the release notes. For JDK 25, developers are encouraged to report bugs via the Java Bug Database. GlassFish The twelfth maintenance release of GlassFish 8.0.0 passes the final Jakarta EE 11 Web Profile TCK and the proposed final Jakarta EE 11 Platform TCK. This release also delivers bug fixes and new features such as: improved class loader initialization and resource management with refinements to various classes and a new system property that reduces unnecessary copy-and-paste during the initialization process; and a more robust build with Maven elements, nadmin and asadmin, that resolves issues with spaces, especially on WindowsOS. More details on this release may be found in the release notes. Similarly, GlassFish 7.0.25, the twenty-five maintenance release, delivers bug fixes and new features such as: the GlassFish classloaders are now parallel capable with formal names; and refinements to the GlassFish Java Util Logging Extension (GJULE) that fixed multiple race conditions and other logging issue. More details on this release may be found in the release notes. Jakarta EE In his weekly Hashtag Jakarta EE blog, Ivar Grimstad, Jakarta EE Developer Advocate at the Eclipse Foundation, provided an update on Jakarta EE 11 and Jakarta EE 12, writing: The long-awaited release of Jakarta EE 11 Platform is imminent. The pull request with the material for the release review has been created by the Jakarta EE Platform project. Eclipse GlassFish passes the TCK on both Java SE 17 and 21, so as soon as the results have been summarised and the Compatibility Certification Request created, the release review ballot can open. As I mentioned last week in Hashtag Jakarta EE #282, all plans for the Jakarta EE 12 specifications have been approved. The next step for the Jakarta EE Platform project is to define a Milestone 0. This milestone will contain certain steps that are expected of the various specification projects to complete. These steps may include verification of CI Jobs and configuration to be able to publish to Maven Central after the end-of-life of OSSRH, and more. The road to Jakarta EE 11 included five milestone releases, the release of the Core Profile in December 2024, the release of Web Profile in April 2025, and a first release candidate of the Platform before its anticipated GA release in June 2025. TornadoVM The TornadoVM team has introduced the GPULlama3.java project, an open-source GPU-accelerated Llama 3 inference powered by TornadoVM. Fully compiled with the Just-in-Time compiler, this project builds upon the Llama3.java project using TornadoVM for parallelism and hardware acceleration. This initial release also features GPU Acceleration on NVIDIA GPUs using both OpenCL and PTX backends; and support for the GPT-Generated Unified Format (GGUF). More details on this release may be found in the release notes. Spring Framework The release of Spring Modulith 1.4.0 delivers bug fixes, dependency upgrades and new features such as: a new method, detectNamedInterfaces(), added to the ApplicationModuleDetectionStrategy interface, to allow for improved detecting instances of the NamedInterfaces class; and a refined implementation of the ApplicationModuleInitializer interface that now verifies required static metadata exists to avoid creating an instance of the ApplicationModules class. More details on this release may be found in the release notes. The release of Spring Cloud 2025.0.0, codenamed Northfields, features bug fixes and notable updates to sub-projects: Spring Cloud Kubernetes 3.3.0; Spring Cloud Function 4.3.0; Spring Cloud Stream 4.3.0; and Spring Cloud Circuit Breaker 3.3.0. One important breaking change, found in Spring Cloud Gateway, is the creation of new Module and Starter names and the depreciation of the old names. These new names \"clarify the two styles of gateway (server or proxy exchange) as well as the two web stacks from Spring Framework (Web MCV and WebFlux).\" A warning message will be entered into the logs upon use of the deprecated artifacts. This release is compatible with Spring Boot 3.5.0. More details on this release may be found in the release notes. Along with Spring Cloud Gateway 4.3.0, versions 4.2.3, 4.1.8, 4.0.12 and 3.1.10 were also released to address CVE-2025-41235, Spring Cloud Gateway Server Forwards Headers from Untrusted Proxies, a vulnerability where the X-Forwarded-For and Forwarded headers were forwarded from untrusted proxies by the Spring Cloud Gateway Server. Forwarding these headers are now disabled by default with the ability to do so in a more safe way. Hibernate The release of Hibernate Reactive 3.0.0.Final, along with the first beta release of version 4.0.0, feature: compatibility with Hibernate ORM 7.0.0.Final, Vert.x 4.15.5 and Mutiny 2.9.0; and a change in the return type of the getResultType(), defined in the MutationSpecificationImpl class, from Void to null that resolved a validation error. Version 4.0.0.Beta1 features compatibility with Vert.x 5.0.0. More details on these releases may be found in the release notes for version 3.0.0 and version 4.0.0.Beta1. The first release candidate of Hibernate Search 8.0.0 provides: bug fixes; compatibility with Hibernate ORM 7.0.0.Final; improved integration with Hibernate Models; and an adaptation to the changes in Search DSL API related to field references to make it easier to migrate from previous versions. More details on this release may be found in the list of changes. Quarkus The release of Quarkus 3.23.0 delivers bug fixes, dependency upgrades and new features such as: support for named persistence units and data sources with Hibernate Reactive; and the ability to establish authentication with an OIDC bearer token. More details on this release may be found in the release notes. Groovy The first beta release of Groovy 5.0.0 ships with bug fixes, dependency upgrades and new features such as: support for JEP 394, Pattern Matching for instanceof, delivered in JDK 16; and a new injectAll() method added to the DefaultGroovyMethods class that will inject values by iterating through a given iterable, but will return a list of all calculated values instead of just the final result. More details on this release may be found in the release notes. JHipster The release of JHipster Lite 1.32.0 provides bug fixes, improvements in documentation, some refactoring and new features such as: support for Docker Compose in Spring Boot; and improved testing code coverage with Cypress and Vitest. This release also aligns with Spring Boot 3.5.0. More details on this release may be found in the release notes. About the Author Michael Redlich",
  "image": "https://res.infoq.com/news/2025/06/java-news-roundup-may26-2025/en/headerimage/java-istock-image-01-1748874010875.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eThis week\u0026#39;s Java roundup for May 26th, 2025 features news highlighting: the twelfth milestone release of GlassFish 8.0; four JEPs targeted for JDK 25; introducing the GPULlama3.java project powered by TornadoVM; and GA releases of Hibernate Reactive 3.0, Spring Modulith 1.4 and Spring Cloud 2025.0.\u003c/p\u003e\n\n\u003ch4\u003eOpenJDK\u003c/h4\u003e\n\n\u003cp\u003eThe following JEPs have been elevated from \u003cstrong\u003eProposed to Target\u003c/strong\u003e to \u003cstrong\u003eTargeted\u003c/strong\u003e for JDK 25:\u003c/p\u003e\n\n\u003cul\u003e\n\t\u003cli\u003eJEP 521: \u003ca href=\"https://openjdk.org/jeps/521\"\u003eGenerational Shenandoah\u003c/a\u003e (announced \u003ca href=\"https://mail.openjdk.org/pipermail/jdk-dev/2025-May/010178.html\"\u003ehere\u003c/a\u003e)\u003c/li\u003e\n\t\u003cli\u003eJEP 520: \u003ca href=\"https://openjdk.org/jeps/520\"\u003eJFR Method Timing \u0026amp; Tracing\u003c/a\u003e (announced \u003ca href=\"https://mail.openjdk.org/pipermail/jdk-dev/2025-May/010168.html\"\u003ehere\u003c/a\u003e)\u003c/li\u003e\n\t\u003cli\u003eJEP 518: \u003ca href=\"https://openjdk.org/jeps/518\"\u003eJFR Cooperative Sampling\u003c/a\u003e (announce \u003ca href=\"https://mail.openjdk.org/pipermail/jdk-dev/2025-May/010167.html\"\u003ehere\u003c/a\u003e)\u003c/li\u003e\n\t\u003cli\u003eJEP 470: \u003ca href=\"https://openjdk.org/jeps/470\"\u003ePEM Encodings of Cryptographic Objects (Preview)\u003c/a\u003e (announced \u003ca href=\"https://mail.openjdk.org/pipermail/jdk-dev/2025-May/010177.html\"\u003ehere\u003c/a\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eJEP 509, \u003ca href=\"https://openjdk.org/jeps/509\"\u003eJFR CPU-Time Profiling (Experimental)\u003c/a\u003e, has been \u003ca href=\"https://mail.openjdk.org/pipermail/jdk-dev/2025-May/010183.html\"\u003eelevated\u003c/a\u003e from \u003cstrong\u003eCandidate\u003c/strong\u003e to \u003cstrong\u003eProposed to Target\u003c/strong\u003e for JDK 25. This experimental JEP proposes to enhance the JDK Flight Recorder (JFR) to allow for capturing CPU-time profiling information on Linux OS. \u003cspan\u003eThe review is expected to conclude on Wednesday, June 4, 2025\u003c/span\u003e.\u003c/p\u003e\n\n\u003ch4\u003eJDK 25\u003c/h4\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/openjdk/jdk/releases/tag/jdk-25%2B25\"\u003eBuild 25\u003c/a\u003e of the JDK 25 \u003ca href=\"https://jdk.java.net/25/\"\u003eearly-access builds\u003c/a\u003e was made available this past week featuring \u003ca href=\"https://github.com/openjdk/jdk/compare/jdk-25%2B24...jdk-25%2B25\"\u003eupdates\u003c/a\u003e from Build 24 that include fixes for various \u003ca href=\"https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2025%20and%20%22resolved%20in%20build%22%20%3D%20b25%20order%20by%20component%2C%20subcomponent\"\u003eissues\u003c/a\u003e. More details on this release may be found in the \u003ca href=\"https://jdk.java.net/25/release-notes\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eFor \u003ca href=\"https://openjdk.org/projects/jdk/25/\"\u003eJDK 25\u003c/a\u003e, developers are encouraged to report bugs via the \u003ca href=\"https://bugreport.java.com/bugreport/\"\u003eJava Bug Database\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eGlassFish\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://x.com/OmniFishEE/status/1929260730127138913\"\u003etwelfth maintenance release\u003c/a\u003e of \u003ca href=\"https://glassfish.org/\"\u003eGlassFish\u003c/a\u003e 8.0.0 passes the final Jakarta EE 11 Web Profile TCK and the proposed final Jakarta EE 11 Platform TCK. This release also delivers bug fixes and new features such as: improved class loader initialization and resource management with refinements to various classes and a new system property that reduces unnecessary copy-and-paste during the initialization process; and a more robust build with Maven elements, \u003cstrong\u003e\u003ccode\u003enadmin\u003c/code\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003ccode\u003easadmin\u003c/code\u003e\u003c/strong\u003e, that resolves issues with spaces, especially on WindowsOS. More details on this release may be found in the \u003ca href=\"https://github.com/eclipse-ee4j/glassfish/releases/tag/8.0.0-M12\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eSimilarly, GlassFish 7.0.25, the \u003ca href=\"https://x.com/OmniFishEE/status/1927807751041749468\"\u003etwenty-five maintenance release\u003c/a\u003e, delivers bug fixes and new features such as: the GlassFish classloaders are now parallel capable with formal names; and refinements to the \u003ca href=\"https://www.youtube.com/watch?v=j2gACdwWyNk\"\u003eGlassFish Java Util Logging Extension\u003c/a\u003e (GJULE) that fixed multiple race conditions and other logging issue. More details on this release may be found in the \u003ca href=\"https://github.com/eclipse-ee4j/glassfish/releases/tag/7.0.25\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eJakarta EE\u003c/h4\u003e\n\n\u003cp\u003eIn his weekly \u003ca href=\"https://www.agilejava.eu/\"\u003eHashtag Jakarta EE\u003c/a\u003e blog, \u003ca href=\"https://se.linkedin.com/in/ivargrimstad\"\u003eIvar Grimstad\u003c/a\u003e, Jakarta EE Developer Advocate at the Eclipse Foundation, provided an \u003ca href=\"https://www.agilejava.eu/2025/06/01/hashtag-jakarta-ee-283/\"\u003eupdate\u003c/a\u003e on Jakarta EE 11 and Jakarta EE 12, writing:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe long-awaited release of \u003ca href=\"https://jakarta.ee/specifications/platform/11/\"\u003eJakarta EE 11 Platform\u003c/a\u003e is imminent. The \u003ca href=\"https://github.com/jakartaee/specifications/pull/849\"\u003epull request\u003c/a\u003e with the material for the release review has been created by the Jakarta EE Platform project. Eclipse GlassFish passes the TCK on both Java SE 17 and 21, so as soon as the results have been summarised and the Compatibility Certification Request created, the release review ballot can open.\u003c/p\u003e\n\n\u003cp\u003eAs I mentioned last week in \u003ca href=\"https://www.agilejava.eu/2025/05/25/hashtag-jakarta-ee-282/\"\u003eHashtag Jakarta EE #282\u003c/a\u003e, all plans for the Jakarta EE 12 specifications have been approved. The next step for the Jakarta EE Platform project is to define a Milestone 0. This milestone will contain certain steps that are expected of the various specification projects to complete. These steps may include verification of CI Jobs and configuration to be able to publish to Maven Central after the \u003ca href=\"https://central.sonatype.org/news/20250326_ossrh_sunset/\"\u003eend-of-life of OSSRH\u003c/a\u003e, and more.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe road to Jakarta EE 11 included five milestone releases, the release of the \u003ca href=\"https://jakarta.ee/specifications/coreprofile/\"\u003eCore Profile\u003c/a\u003e in December 2024, the release of \u003ca href=\"https://jakarta.ee/specifications/webprofile/\"\u003eWeb Profile\u003c/a\u003e in April 2025, and a first release candidate of the \u003ca href=\"https://jakarta.ee/specifications/platform/\"\u003ePlatform\u003c/a\u003e before its anticipated GA release in June 2025.\u003c/p\u003e\n\n\u003ch4\u003eTornadoVM\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://www.tornadovm.org/\"\u003eTornadoVM\u003c/a\u003e team has \u003ca href=\"https://x.com/MXekalaki/status/1928381865372594445\"\u003eintroduced\u003c/a\u003e the \u003ca href=\"https://github.com/beehive-lab/GPULlama3.java/blob/main/README.md\"\u003eGPULlama3.java\u003c/a\u003e project, an open-source GPU-accelerated Llama 3 inference powered by TornadoVM. Fully compiled with the Just-in-Time compiler, this project builds upon the \u003ca href=\"https://github.com/mukel/llama3.java/blob/main/README.md\"\u003eLlama3.java\u003c/a\u003e project using TornadoVM for parallelism and hardware acceleration. This initial release also features GPU Acceleration on NVIDIA GPUs using both OpenCL and PTX backends; and support for the \u003ca href=\"https://medium.com/@phillipgimmi/what-is-gguf-and-ggml-e364834d241c\"\u003eGPT-Generated Unified Format\u003c/a\u003e (GGUF). More details on this release may be found in the \u003ca href=\"https://github.com/beehive-lab/GPULlama3.java/releases/tag/v0.1.0-beta\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eSpring Framework\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://spring.io/blog/2025/05/28/spring-modulith-1-4-1-3-6-and-1-2-13-released\"\u003erelease\u003c/a\u003e of \u003ca href=\"https://spring.io/projects/spring-modulith\"\u003eSpring Modulith\u003c/a\u003e 1.4.0 delivers bug fixes, dependency upgrades and new features such as: a new method, \u003cstrong\u003e\u003ccode\u003edetectNamedInterfaces()\u003c/code\u003e\u003c/strong\u003e, added to the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://docs.spring.io/spring-modulith/docs/current/api/org/springframework/modulith/core/ApplicationModuleDetectionStrategy.html\"\u003eApplicationModuleDetectionStrategy\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e interface, to allow for improved detecting instances of the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://docs.spring.io/spring-modulith/docs/current/api/org/springframework/modulith/core/NamedInterfaces.html\"\u003eNamedInterfaces\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class; and a refined implementation of the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://docs.spring.io/spring-modulith/docs/current/api/org/springframework/modulith/ApplicationModuleInitializer.html\"\u003eApplicationModuleInitializer\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e interface that now verifies required static metadata exists to avoid creating an instance of the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://docs.spring.io/spring-modulith/docs/current/api/org/springframework/modulith/core/ApplicationModules.html\"\u003eApplicationModules\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class. More details on this release may be found in the \u003ca href=\"https://github.com/spring-projects/spring-modulith/releases/tag/1.4.0\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://spring.io/blog/2025/05/29/spring-cloud-2025-0-0-is-abvailable\"\u003erelease\u003c/a\u003e of \u003ca href=\"https://spring.io/projects/spring-cloud\"\u003eSpring Cloud\u003c/a\u003e 2025.0.0, codenamed Northfields, features bug fixes and notable updates to sub-projects: \u003ca href=\"https://spring.io/projects/spring-cloud-kubernetes\"\u003eSpring Cloud Kubernetes\u003c/a\u003e 3.3.0; \u003ca href=\"https://spring.io/projects/spring-cloud-function\"\u003eSpring Cloud Function\u003c/a\u003e 4.3.0; \u003ca href=\"https://spring.io/projects/spring-cloud-stream\"\u003eSpring Cloud Stream\u003c/a\u003e 4.3.0; and \u003ca href=\"https://spring.io/projects/spring-cloud-circuitbreaker\"\u003eSpring Cloud Circuit Breaker\u003c/a\u003e 3.3.0. One important breaking change, found in Spring Cloud Gateway, is the creation of new Module and Starter names and the depreciation of the old names. These new names \u0026#34;\u003cem\u003eclarify the two styles of gateway (server or proxy exchange) as well as the two web stacks from Spring Framework (Web MCV and WebFlux).\u003c/em\u003e\u0026#34; A warning message will be entered into the logs upon use of the deprecated artifacts. This release is compatible with Spring Boot 3.5.0. More details on this release may be found in the \u003ca href=\"https://github.com/spring-cloud/spring-cloud-release/wiki/Spring-Cloud-2025.0-Release-Notes\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eAlong with \u003ca href=\"https://spring.io/projects/spring-cloud-gateway\"\u003eSpring Cloud Gateway\u003c/a\u003e 4.3.0, versions 4.2.3, 4.1.8, 4.0.12 and 3.1.10 were also \u003ca href=\"https://spring.io/blog/2025/05/29/spring-cloud-gateway-2025-05-29-releases\"\u003ereleased\u003c/a\u003e to address CVE-2025-41235, \u003ca href=\"https://spring.io/security/cve-2025-41235\"\u003eSpring Cloud Gateway Server Forwards Headers from Untrusted Proxies\u003c/a\u003e, a vulnerability where the \u003cstrong\u003e\u003ccode\u003eX-Forwarded-For\u003c/code\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003ccode\u003eForwarded\u003c/code\u003e\u003c/strong\u003e headers were forwarded from untrusted proxies by the Spring Cloud Gateway Server. Forwarding these headers are now disabled by default with the ability to do so in a more safe way.\u003c/p\u003e\n\n\u003ch4\u003eHibernate\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://in.relation.to/2025/05/26/hibernate-reactive-3_0_0_Final/\"\u003erelease\u003c/a\u003e of \u003ca href=\"https://hibernate.org/reactive/\"\u003eHibernate Reactive\u003c/a\u003e 3.0.0.Final, along with the first beta release of version 4.0.0, feature: compatibility with \u003ca href=\"https://hibernate.org/orm/\"\u003eHibernate ORM\u003c/a\u003e 7.0.0.Final, Vert.x 4.15.5 and Mutiny 2.9.0; and a change in the return type of the \u003cstrong\u003e\u003ccode\u003egetResultType()\u003c/code\u003e\u003c/strong\u003e, defined in the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://docs.jboss.org/hibernate/orm/7.0/javadocs/org/hibernate/query/specification/internal/MutationSpecificationImpl.html\"\u003eMutationSpecificationImpl\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class, from \u003cstrong\u003e\u003ccode\u003eVoid\u003c/code\u003e\u003c/strong\u003e to \u003cstrong\u003e\u003ccode\u003enull\u003c/code\u003e\u003c/strong\u003e that resolved a validation error. Version 4.0.0.Beta1 features compatibility with Vert.x 5.0.0. More details on these releases may be found in the release notes for \u003ca href=\"https://github.com/hibernate/hibernate-reactive/releases/tag/3.0.0\"\u003eversion 3.0.0\u003c/a\u003e and \u003ca href=\"https://github.com/hibernate/hibernate-reactive/releases/tag/4.0.0.Beta1\"\u003eversion 4.0.0.Beta1\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://in.relation.to/2025/05/31/hibernate-search-8-0-0-CR1/\"\u003efirst release candidate\u003c/a\u003e of \u003ca href=\"https://hibernate.org/search/\"\u003eHibernate Search\u003c/a\u003e 8.0.0 provides: bug fixes; compatibility with Hibernate ORM 7.0.0.Final; improved integration with \u003ca href=\"https://github.com/hibernate/hibernate-models/blob/main/README.adoc\"\u003eHibernate Models\u003c/a\u003e; and an adaptation to the changes in Search DSL API related to field references to make it easier to migrate from previous versions. More details on this release may be found in the \u003ca href=\"https://hibernate.atlassian.net/issues/?jql=project%3D10061%20AND%20fixVersion%3D33639\"\u003elist of changes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eQuarkus\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://quarkus.io/blog/quarkus-3-23-0-released/\"\u003erelease\u003c/a\u003e of \u003ca href=\"https://quarkus.io/\"\u003eQuarkus\u003c/a\u003e 3.23.0 delivers bug fixes, dependency upgrades and new features such as: support for named persistence units and data sources with Hibernate Reactive; and the ability to establish authentication with an OIDC bearer token. More details on this release may be found in the \u003ca href=\"https://github.com/quarkusio/quarkus/releases/tag/3.23.0\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eGroovy\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://www.mail-archive.com/announce@apache.org/msg10104.html\"\u003efirst beta release\u003c/a\u003e of \u003ca href=\"https://groovy-lang.org/\"\u003eGroovy\u003c/a\u003e 5.0.0 ships with bug fixes, dependency upgrades and new features such as: support for JEP 394, \u003ca href=\"https://openjdk.org/jeps/394\"\u003ePattern Matching for instanceof\u003c/a\u003e, delivered in JDK 16; and a new \u003cstrong\u003e\u003ccode\u003einjectAll()\u003c/code\u003e\u003c/strong\u003e method added to the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/apache/groovy/blob/master/src/main/java/org/codehaus/groovy/runtime/DefaultGroovyMethods.java\"\u003eDefaultGroovyMethods\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class that will inject values by iterating through a given iterable, but will return a list of all calculated values instead of just the final result. More details on this release may be found in the \u003ca href=\"https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=12318123\u0026amp;version=12355603\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eJHipster\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://x.com/pascalgrimaud/status/1927051837007347871\"\u003erelease\u003c/a\u003e of \u003ca href=\"https://www.jhipster.tech/jhipster-lite/\"\u003eJHipster Lite\u003c/a\u003e 1.32.0 provides bug fixes, improvements in documentation, some refactoring and new features such as: support for \u003ca href=\"https://spring.io/blog/2023/06/21/docker-compose-support-in-spring-boot-3-1\"\u003eDocker Compose in Spring Boot\u003c/a\u003e; and improved testing code coverage with \u003ca href=\"https://www.cypress.io/\"\u003eCypress\u003c/a\u003e and \u003ca href=\"https://vitest.dev/\"\u003eVitest\u003c/a\u003e. This release also aligns with Spring Boot 3.5.0. More details on this release may be found in the \u003ca href=\"https://github.com/jhipster/jhipster-lite/releases/tag/v1.32.0\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Michael-Redlich\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eMichael Redlich\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "9 min read",
  "publishedTime": "2025-06-02T00:00:00Z",
  "modifiedTime": null
}
