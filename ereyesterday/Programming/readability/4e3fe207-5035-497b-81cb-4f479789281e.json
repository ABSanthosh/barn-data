{
  "id": "4e3fe207-5035-497b-81cb-4f479789281e",
  "title": "New CIS GitLab Benchmark scanner boosts security and compliance",
  "link": "https://about.gitlab.com/blog/2024/10/29/new-cis-gitlab-benchmark-scanner-boosts-security-and-compliance",
  "description": "",
  "author": "Nate Rosandich",
  "published": "2024-10-29T00:00:00.000Z",
  "source": "https://about.gitlab.com/atom.xml",
  "categories": null,
  "byline": "Nate Rosandich, Neil McDonald, Mitra Jozenazemian",
  "length": 3301,
  "excerpt": "GitLab's gitlabcis scanner determines level of compliance for GitLab projects. Learn how to install and use the tool with this tutorial, as well as what's on the roadmap.",
  "siteName": "GitLab",
  "favicon": "https://about.gitlab.com/blog/nuxt-images/ico/favicon-192x192.png?cache=2022041",
  "text": "GitLab's CIS Benchmark scanner, gitlabcis, is open source and available. The Python CLI tool audits a GitLab project against the Center for Internet Security (CIS) GitLab Benchmark, and delivers recommendations as code formatted in YAML. In April, we introduced the CIS GitLab Benchmark to improve security and offer hardening recommendations to GitLab's customers. The benchmark is available for download from the CIS website. In this article, you'll learn: How to install and use the gitlabcis scanner gitlabcis scanner details GitLab scanner and product roadmap How to install and use the gitlabcis scanner You can download and install the scanner using pip via pypi, or download the source code from our releases page. pip install gitlabcis The scanner takes one positional argument (URL) and then options. The format is: gitlabcis URL OPTIONS # example: generate a json report gitlabcis \\ https://gitlab.example.com/path/to/project \\ -o results.json \\ -f json The full command line options can be found in the documentation. gitlabcis scanner details The team extracted all of the recommendation controls from the CIS GitLab Benchmark and created them in YAML to be used as controls as code. Each control has its own dedicated function to enhance readability. This also allows an individual to observe how the control performs its audit. Additionally, certain control functions have limitations. We have identified each of these, which can be found in our limitations document. Currently, the tool only accepts a project URL input. It then only observes configuration at a project level. It does however support administrative controls. For example, the 1.1.2 - Code Tracing control attempts to audit \"... any change to code can be traced back to its associated task\". This can be achieved with crosslinking issues in merge requests. Merge requests can be found at a project level, group level, or event instance level. The scanner currently only checks at the project level. See our roadmap, which aims to address this functionality gap. Contribute to the gitlabcis scanner project. GitLab scanner and product roadmap The creation of the scanner allowed us to contribute two features back into the product with the help of the community. Show crosslinked/related issues in merge requests via the API Groups API: Add Restrict group access by Domain We want to augment the scanner to be able to accept instances or groups as input. For example, if you host GitLab at: gitlab.example.com, this could be used as an input to check at the instance level if you are compliant against the CIS GitLab Benchmark and the same for groups. Additionally, certain controls can be set at the instance or group level and trickle down to the project level. There is work ongoing to include this functionality into the scanner. Check out the epic for more information One important aspect is incorporating this functionality into the GitLab product itself. The GitLab compliance team is working on incorporating the CIS GitLab Benchmark and other standards into the Compliance Adherence Report. This will allow customers real-time reviews of instances, groups, and projects across a wide set of standards, not just CIS. Learn more about the CIS GitLab Benchmark in our public project.",
  "image": "https://images.ctfassets.net/r9o86ar0p03f/securitycompliance.jpeg/846d1ef6ae533f0afe1db96b4a71d16e/AdobeStock_282096522.jpeg?fm=webp\u0026w=820\u0026h=500",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv data-v-b794d8fe=\"\" data-v-7488832a=\"\" data-v-74bd29c6=\"\"\u003e\u003cp\u003eGitLab\u0026#39;s CIS Benchmark scanner, \u003ca href=\"https://gitlab.com/gitlab-org/govern/compliance/engineering/cis/gitlabcis\"\u003egitlabcis\u003c/a\u003e, is open source and available. The \u003ca href=\"https://www.python.org/downloads/\"\u003ePython\u003c/a\u003e CLI tool audits a GitLab project against the \u003ca href=\"https://workbench.cisecurity.org/benchmarks/17538\"\u003eCenter for Internet Security (CIS) GitLab Benchmark\u003c/a\u003e, and delivers \u003ca href=\"https://gitlab.com/gitlab-org/govern/compliance/engineering/cis/gitlabcis/-/tree/main/gitlabcis/recommendations?ref_type=heads#recommendations\"\u003erecommendations as code\u003c/a\u003e formatted in YAML.\u003c/p\u003e\n\u003cp\u003eIn April, we introduced the \u003ca href=\"https://about.gitlab.com/blog/2024/04/17/gitlab-introduces-new-cis-benchmark-for-improved-security/\"\u003eCIS GitLab Benchmark\u003c/a\u003e to improve security and offer hardening recommendations to GitLab\u0026#39;s customers. \u003ca href=\"https://workbench.cisecurity.org/benchmarks/17538\"\u003eThe benchmark is available for download\u003c/a\u003e from the CIS website.\u003c/p\u003e\n\u003cp\u003eIn this article, you\u0026#39;ll learn:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#how-to-install-and-use-the-gitlabcis-scanner\"\u003eHow to install and use the gitlabcis scanner\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#gitlabcis-scanner-details\"\u003egitlabcis scanner details\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#gitlab-scanner-and-product-roadmap\"\u003eGitLab scanner and product roadmap\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"how-to-install-and-use-the-gitlabcis-scanner\" tabindex=\"-1\"\u003eHow to install and use the gitlabcis scanner \u003ca href=\"#how-to-install-and-use-the-gitlabcis-scanner\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eYou can download and install the scanner using pip via \u003ca href=\"https://pypi.org/project/gitlabcis/\"\u003epypi\u003c/a\u003e, or download the source code from our \u003ca href=\"https://gitlab.com/gitlab-org/govern/compliance/engineering/cis/gitlabcis/-/releases\"\u003ereleases page\u003c/a\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003epip install gitlabcis\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe scanner takes one positional argument (\u003ccode\u003eURL\u003c/code\u003e) and then options. The format is: \u003ccode\u003egitlabcis URL OPTIONS\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e# example: generate a json report\ngitlabcis \\\n    https://gitlab.example.com/path/to/project \\\n    -o results.json \\\n    -f json\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe full command line options can be found in \u003ca href=\"https://gitlab.com/gitlab-org/govern/compliance/engineering/cis/gitlabcis/-/tree/main/docs?ref_type=heads#gitlabcis-usage\"\u003ethe documentation\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/1r7y71e9BcS3vs0lbfLzDR/a5cd6b16a8d394cbde7108531645f117/Screenshot_2024-10-26_at_8.16.22_AM.png\" alt=\"GitLab CIS Benchmark scanner\"/\u003e\u003c/p\u003e\n\u003ch2 id=\"gitlabcis-scanner-details\" tabindex=\"-1\"\u003egitlabcis scanner details \u003ca href=\"#gitlabcis-scanner-details\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThe team extracted all of the recommendation controls from the \u003ca href=\"https://workbench.cisecurity.org/benchmarks/17538\"\u003eCIS GitLab Benchmark\u003c/a\u003e and created them in YAML to be used as \u003ca href=\"https://gitlab.com/gitlab-org/govern/compliance/engineering/cis/gitlabcis/-/tree/main/gitlabcis/recommendations?ref_type=heads\"\u003econtrols as code\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eEach control has its own \u003ca href=\"https://gitlab.com/gitlab-org/govern/compliance/engineering/cis/gitlabcis/-/tree/main/gitlabcis/benchmarks?ref_type=heads\"\u003ededicated function\u003c/a\u003e to enhance readability. This also allows an individual to observe how the control performs its audit.\u003c/p\u003e\n\u003cp\u003eAdditionally, certain control functions have limitations. We have identified each of these, which can be found in our \u003ca href=\"https://gitlab.com/gitlab-org/govern/compliance/engineering/cis/gitlabcis/-/blob/main/docs/limitations.md?ref_type=heads\"\u003elimitations document\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eCurrently, the tool only accepts a \u003cem\u003eproject URL\u003c/em\u003e input. It then only observes configuration at a \u003cem\u003eproject\u003c/em\u003e level. It does however support administrative controls.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFor example, the \u003ca href=\"https://gitlab.com/gitlab-org/govern/compliance/engineering/cis/gitlabcis/-/blob/main/gitlabcis/recommendations/source_code_1/code_changes_1_1/code_tracing.yml\"\u003e1.1.2 - Code Tracing\u003c/a\u003e control attempts to audit \u003cem\u003e\u0026#34;... any change to code can be traced back to its associated task\u0026#34;\u003c/em\u003e.\n\u003cul\u003e\n\u003cli\u003eThis can be achieved with crosslinking issues in merge requests.\u003c/li\u003e\n\u003cli\u003eMerge requests can be found at a project level, group level, or event instance level.\u003c/li\u003e\n\u003cli\u003eThe scanner currently only checks \u003cem\u003eat the project level\u003c/em\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSee \u003ca href=\"#gitlab-scanner-and-product-roadmap\"\u003eour roadmap\u003c/a\u003e, which aims to address this functionality gap.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eContribute to the \u003ca href=\"https://gitlab.com/gitlab-org/govern/compliance/engineering/cis/gitlabcis/\"\u003egitlabcis scanner\u003c/a\u003e project.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"gitlab-scanner-and-product-roadmap\" tabindex=\"-1\"\u003eGitLab scanner and product roadmap \u003ca href=\"#gitlab-scanner-and-product-roadmap\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThe creation of the scanner allowed us to contribute two features back into the product with the help of the community.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://gitlab.com/gitlab-org/gitlab/-/issues/461536\"\u003eShow crosslinked/related issues in merge requests via the API\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://gitlab.com/gitlab-org/gitlab/-/issues/351494\"\u003eGroups API: Add Restrict group access by Domain\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWe want to augment the scanner to be able to accept instances or groups as input. For example, if you host GitLab at: \u003ca href=\"http://gitlab.example.com\"\u003egitlab.example.com\u003c/a\u003e, this could be used as an input to check at the instance level if you are compliant against the CIS GitLab Benchmark and the same for groups.\u003c/p\u003e\n\u003cp\u003eAdditionally, certain controls can be set at the instance or group level and trickle down to the project level. There is work ongoing to include this functionality into the scanner. Check out the \u003ca href=\"https://gitlab.com/groups/gitlab-org/govern/compliance/engineering/cis/-/epics/2\"\u003eepic\u003c/a\u003e for more information\u003c/p\u003e\n\u003cp\u003eOne important aspect is incorporating \u003ca href=\"https://gitlab.com/groups/gitlab-org/-/epics/7854\"\u003ethis functionality into the GitLab product itself\u003c/a\u003e. The GitLab compliance team is working on \u003ca href=\"https://gitlab.com/groups/gitlab-org/-/epics/13823\"\u003eincorporating the CIS GitLab Benchmark\u003c/a\u003e and other standards into the \u003ca href=\"https://docs.gitlab.com/ee/user/compliance/compliance_center/\"\u003eCompliance Adherence Report\u003c/a\u003e. This will allow customers real-time reviews of instances, groups, and projects across a wide set of standards, not just CIS.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eLearn more about the CIS GitLab Benchmark in our \u003ca href=\"https://gitlab.com/gitlab-org/govern/compliance/engineering/cis/gitlabcis\"\u003epublic project\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": "2024-10-29T00:00:00Z",
  "modifiedTime": null
}
