{
  "id": "b2b399d7-6303-4548-b797-e37c33462700",
  "title": "WebStorm 2024.3 EAP Digest: Improved Navigation and Rename Refactoring for Framework Components, AI-Based Code Completion Updates, and Tailwind Color Preview for CSS Classes",
  "link": "https://blog.jetbrains.com/webstorm/2024/10/webstorm-2024-3-eap/",
  "description": "It’s time for the WebStorm 2024.3 EAP digest, which will walk you through the new features and improvements in the upcoming release! The Toolbox App is the easiest way to get the EAP builds and keep both your stable and EAP versions up to date. You can also manually download the EAP builds from our […]",
  "author": "Vladislav Minaev",
  "published": "Mon, 28 Oct 2024 13:06:04 +0000",
  "source": "https://blog.jetbrains.com/feed",
  "categories": [
    "eap",
    "webstorm-2024-3"
  ],
  "byline": "Vladislav Minaev",
  "length": 6932,
  "excerpt": "Read our EAP digest to discover the latest changes making it into the upcoming release.",
  "siteName": "The JetBrains Blog",
  "favicon": "https://blog.jetbrains.com/wp-content/uploads/2024/01/cropped-mstile-310x310-1-180x180.png",
  "text": "The JavaScript and TypeScript IDE Early Access ProgramWebStorm 2024.3 EAP Digest: Improved Navigation and Rename Refactoring for Framework Components, AI-Based Code Completion Updates, and Tailwind Color Preview for CSS Classes It’s time for the WebStorm 2024.3 EAP digest, which will walk you through the new features and improvements in the upcoming release! The Toolbox App is the easiest way to get the EAP builds and keep both your stable and EAP versions up to date. You can also manually download the EAP builds from our website. DOWNLOAD WEBSTORM 2024.3 EAP Important! WebStorm EAP builds are not fully tested and might be unstable. Please try the latest EAP build and share your feedback with us. You can do so using our issue tracker or by leaving a comment on this blog post. Key highlights Improved navigation and Rename refactoring for framework components Starting from version 2024.3, the Show component usages action for Vue, Svelte, and Astro detects component usages both in imports and templates. You can also use this functionality by invoking the Find Usages action on the component file in the Project view: The Rename refactoring has been enhanced to include component usages renaming. When renaming a component file or explicitly defined name, the associated usages in templates will also be updated! This behavior can be disabled by toggling the Search for component usages option during the renaming process and in the Find dialog. AI Assistant Improved AI-based code completion In 2024.3 we are significantly improving AI-driven code completion for JavaScript and TypeScript. The new approach combines fast, local full-line completion with powerful cloud-based suggestions powered by JetBrains’ in-house LLMs. This hybrid approach enhances speed, accuracy, and usability while reducing the frequency of lengthy and irrelevant suggestions. Here are some of the key improvements: Highlighting is now applied to the suggested code, which previously was just plain gray text. Partial acceptance allows you to apply suggestions granularly, giving you more control over changes to your code: Accept suggestions word by word – ⌥ → / Alt + Right. Accept suggestions line by line – ⌘ → / Ctrl + Right. As before, you can explicitly call completion with ⇧ ⌥ / / Shift + Alt. We’ve enhanced context collection using RAG strategies. Completion suggestions are now provided in more locations, and are now triggered during typing, not only on Enter keystrokes. In EAP 3, support for AI-based code completion has also been extended to HTML and CSS (including .css, .less, .scss, .sass, .pcss). Please refer to this blog post for more insights. Inline AI prompts You can now interact with AI Assistant directly in the editor thanks to an experimental inline input feature that detects and processes your requests as you type. This lets you express your intentions in natural language, which AI Assistant instantly interprets and converts into code changes without any extra steps. This feature is currently available for JavaScript and TypeScript: The IDE leaves a purple mark in the gutter next to lines added or changed by AI Assistant so you can easily see what has been updated. If you don’t like the initial suggestion, you can generate a new one by pressing Tab. You can also adjust the initial prompt by clicking on the purple block in the gutter or simply pressing Ctrl + / (Windows/Linux) or ⌘/ (macOS). Please note that these improvements are available only when using the AI Assistant plugin. Color preview for Tailwind CSS classes Color previews for Tailwind CSS classes are now shown inline in the editor. We’ve added support for the textDocument/documentColor method of the Language Server Protocol (LSP), so all LSP-based plugins now support this functionality out of the box. Bun debugger support for Windows In EAP 2, we’ve introduced Bun debugger support for Windows. This update includes program traversal (Step Into, Step Over, and Run to Cursor), expression evaluation, and support for line breakpoints, exceptions, and conditional breakpoints. Bun debugger support is currently unavailable on WSL. If you would like to see it added, consider voting for WEB-69167. Code style options for decorators We have implemented new code style options for decorators in JavaScript and TypeScript. EAP 1 introduces four new items in the Wrapping and Braces subsection of the Code Style settings: User experience Updates to Find in Files The Find in Files feature has a new search scope option: Project Files Excluding Git-Ignored. This option excludes any files ignored in .gitignore  from your search results, helping you narrow down the search scope to the relevant parts of your project. Highlight occurrences of selected text  By default, WebStorm will now automatically highlight all instances of the text you select within a file. You can toggle this feature in Settings | Editor | General | Appearance. Other highlights The Database Tools and SQL plugin is now bundled in the IDE, and its licensing model will be changed in the upcoming major release. WebStorm now displays the .idea directory in the Project view by default. You can use the projectView.hide.dot.idea registry option to toggle this behavior (WEB-68009).  The Install dependencies notification will now automatically disappear once the required dependencies have been installed via the command line (WEB-65147). We have improved navigation to built-in Nuxt components (WEB-65589, WEB-66625). You can now use nx as the karma package to run unit tests in Nx projects (WEB-58994). That’s it for today. For the full list of improvements introduced throughout the latest 2024.3 EAPs, check out the release notes. The WebStorm team Subscribe to WebStorm Blog updates Discover more",
  "image": "https://blog.jetbrains.com/wp-content/uploads/2024/10/ws-2024-3-eap-social_share.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"main\"\u003e\n    \u003cdiv\u003e\n                        \u003ca href=\"https://blog.jetbrains.com/webstorm/\"\u003e\n                            \u003cimg src=\"https://blog.jetbrains.com/wp-content/uploads/2019/01/WebStorm-2.svg\" alt=\"Webstorm logo\"/\u003e\n                                                                                                \n                                                                                    \u003c/a\u003e\n                                                    \u003cp\u003eThe JavaScript and TypeScript IDE\u003c/p\u003e\n                                            \u003c/div\u003e\n                            \u003csection data-clarity-region=\"article\"\u003e\n                \u003cdiv\u003e\n                    \t\t\t\t\u003cp\u003e\u003ca href=\"https://blog.jetbrains.com/webstorm/category/eap/\"\u003eEarly Access Program\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"major-updates\"\u003eWebStorm 2024.3 EAP Digest: Improved Navigation and Rename Refactoring for Framework Components, AI-Based Code Completion Updates, and Tailwind Color Preview for CSS Classes\u003c/h2\u003e                    \n                    \n\u003cp\u003eIt’s time for the WebStorm 2024.3 EAP digest, which will walk you through the new features and improvements in the upcoming release!\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" fetchpriority=\"high\" width=\"2560\" height=\"1440\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/10/ws-2024-3-eap-featured.png\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eThe \u003ca href=\"https://www.jetbrains.com/toolbox-app/\" target=\"_blank\" rel=\"noopener\"\u003eToolbox App\u003c/a\u003e is the easiest way to get the EAP builds and keep both your stable and EAP versions up to date. You can also manually download the EAP builds from our \u003ca href=\"https://www.jetbrains.com/webstorm/nextversion/\" target=\"_blank\" rel=\"noopener\"\u003ewebsite\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003ca href=\"https://www.jetbrains.com/webstorm/nextversion\" target=\"_blank\" rel=\"noopener\"\u003eDOWNLOAD WEBSTORM 2024.3 EAP\u003c/a\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eImportant! WebStorm EAP builds are not fully tested and might be unstable.\u003c/strong\u003e Please try the latest EAP build and share your feedback with us. You can do so using \u003ca href=\"https://youtrack.jetbrains.com/issues/WEB\" target=\"_blank\" rel=\"noopener\"\u003eour issue tracker\u003c/a\u003e or by leaving a comment on this blog post.\u003c/p\u003e\n\n\n\n\u003ch2\u003eKey highlights\u003c/h2\u003e\n\n\n\n\u003ch3\u003eImproved navigation and \u003cem\u003eRename\u003c/em\u003e refactoring for framework components\u003c/h3\u003e\n\n\n\n\u003cp\u003eStarting from version 2024.3, the \u003cem\u003eShow component usages\u003c/em\u003e action for Vue, Svelte, and Astro detects component usages both in imports and templates. You can also use this functionality by invoking the \u003cem\u003eFind Usages\u003c/em\u003e action on the component file in the \u003cem\u003eProject \u003c/em\u003eview:\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/10/WS243-find-compoenent-usages-cover.png\" alt=\"tab-labels\" data-gif-src=\"https://blog.jetbrains.com/wp-content/uploads/2024/10/WS243-find-compoenent-usages.gif\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eThe \u003cem\u003eRename\u003c/em\u003e refactoring has been enhanced to include component usages renaming. When renaming a component file or explicitly defined name, the associated usages in templates will also be updated! This behavior can be disabled by toggling the \u003cem\u003eSearch for component usages\u003c/em\u003e option during the renaming process and in the \u003cem\u003eFind\u003c/em\u003e dialog.\u003c/p\u003e\n\n\n\n\u003ch3\u003eAI Assistant\u003c/h3\u003e\n\n\n\n\u003ch4\u003eImproved AI-based code completion\u003c/h4\u003e\n\n\n\n\u003cp\u003eIn 2024.3 we are significantly improving AI-driven code completion for JavaScript and TypeScript. The new approach combines fast, local full-line completion with powerful cloud-based suggestions powered by JetBrains’ in-house LLMs. This hybrid approach enhances speed, accuracy, and usability while reducing the frequency of lengthy and irrelevant suggestions.\u003c/p\u003e\n\n\n\n\u003cp\u003eHere are some of the key improvements:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eHighlighting is now applied to the suggested code, which previously was just plain gray text.\u003c/li\u003e\n\n\n\n\u003cli\u003ePartial acceptance allows you to apply suggestions granularly, giving you more control over changes to your code:\n\u003cul\u003e\n\u003cli\u003eAccept suggestions word by word – ⌥ → / \u003cem\u003eAlt + Right\u003c/em\u003e.\u003c/li\u003e\n\n\n\n\u003cli\u003eAccept suggestions line by line – ⌘ → / \u003cem\u003eCtrl + Right\u003c/em\u003e.\u003c/li\u003e\n\n\n\n\u003cli\u003eAs before, you can explicitly call completion with ⇧ ⌥ / / \u003cem\u003eShift + Alt\u003c/em\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\n\n\n\u003cli\u003eWe’ve enhanced context collection using \u003ca href=\"https://cloud.google.com/use-cases/retrieval-augmented-generation\" target=\"_blank\" rel=\"noopener\"\u003eRAG\u003c/a\u003e strategies.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eCompletion suggestions are now provided in more locations, and are now triggered during typing, not only on \u003cem\u003eEnter\u003c/em\u003e keystrokes.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/10/WS243-ai-completion.png\" alt=\"tab-labels\" data-gif-src=\"https://blog.jetbrains.com/wp-content/uploads/2024/10/WS243-ai-completion.gif\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eIn EAP 3, support for AI-based code completion has also been extended to HTML and CSS (including .css, .less, .scss, .sass, .pcss). Please refer to this \u003ca href=\"https://blog.jetbrains.com/ai/2024/10/complete-the-un-completable-the-state-of-ai-completion-in-jetbrains-ides/\"\u003eblog post\u003c/a\u003e for more insights.\u003c/p\u003e\n\n\n\n\u003ch4\u003eInline AI prompts\u003c/h4\u003e\n\n\n\n\u003cp\u003eYou can now interact with AI Assistant directly in the editor thanks to an experimental inline input feature that detects and processes your requests as you type. This lets you express your intentions in natural language, which AI Assistant instantly interprets and converts into code changes without any extra steps. This feature is currently available for JavaScript and TypeScript:\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/10/WS243-inline-prompt-cover.png\" alt=\"tab-labels\" data-gif-src=\"https://blog.jetbrains.com/wp-content/uploads/2024/10/WS243-inline-prompts.gif\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eThe IDE leaves a purple mark in the gutter next to lines added or changed by AI Assistant so you can easily see what has been updated.\u003c/p\u003e\n\n\n\n\u003cp\u003eIf you don’t like the initial suggestion, you can generate a new one by pressing \u003cem\u003eTab\u003c/em\u003e. You can also adjust the initial prompt by clicking on the purple block in the gutter or simply pressing \u003cem\u003eCtrl + /\u003c/em\u003e (Windows/Linux) or \u003cem\u003e⌘/\u003c/em\u003e (macOS).\u003c/p\u003e\n\n\n\n\u003cp\u003ePlease note that these improvements are available only when using the \u003ca href=\"https://www.jetbrains.com/ai/#ai-assistant\" target=\"_blank\" rel=\"noopener\"\u003eAI Assistant plugin\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003ch3\u003eColor preview for Tailwind CSS classes\u003c/h3\u003e\n\n\n\n\u003cp\u003eColor previews for Tailwind CSS classes are now shown inline in the editor. We’ve added support for the textDocument/documentColor method of the Language Server Protocol (LSP), so all LSP-based plugins now support this functionality out of the box.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" width=\"1600\" height=\"800\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/10/WS243-inlay-color-hints-tailwind.png\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003ch3\u003eBun debugger support for Windows\u003c/h3\u003e\n\n\n\n\u003cp\u003eIn EAP 2, we’ve introduced Bun debugger support for Windows. This update includes program traversal (\u003cem\u003eStep Into\u003c/em\u003e, \u003cem\u003eStep Over\u003c/em\u003e, and \u003cem\u003eRun to Cursor\u003c/em\u003e), expression evaluation, and support for line breakpoints, exceptions, and conditional breakpoints.\u003c/p\u003e\n\n\n\n\u003cp\u003eBun debugger support is currently unavailable on WSL. If you would like to see it added, consider voting for\u003ca href=\"https://youtrack.jetbrains.com/issue/WEB-69167\" target=\"_blank\" rel=\"noopener\"\u003e WEB-69167\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003ch3\u003eCode style options for decorators\u003c/h3\u003e\n\n\n\n\u003cp\u003eWe have implemented new code style options for decorators in JavaScript and TypeScript. EAP 1 introduces four new items in the \u003cem\u003eWrapping and Braces\u003c/em\u003e subsection of the \u003cem\u003eCode Style\u003c/em\u003e settings:\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" width=\"2236\" height=\"1398\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/10/WS243-code-style-options.png\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003ch2\u003eUser experience\u003c/h2\u003e\n\n\n\n\u003ch3\u003eUpdates to \u003cem\u003eFind in Files\u003c/em\u003e\u003c/h3\u003e\n\n\n\n\u003cp\u003eThe \u003cem\u003eFind in Files\u003c/em\u003e feature has a new search scope option: \u003cem\u003eProject Files Excluding Git-Ignored\u003c/em\u003e. This option excludes any files ignored in \u003ccode\u003e.gitignore\u003c/code\u003e  from your search results, helping you narrow down the search scope to the relevant parts of your project.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" loading=\"lazy\" width=\"2000\" height=\"1000\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/10/WS243-exclude-ginginore-in-find.png\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003ch3\u003eHighlight occurrences of selected text\u003cstrong\u003e \u003c/strong\u003e\u003c/h3\u003e\n\n\n\n\u003cp\u003eBy default, WebStorm will now automatically highlight all instances of the text you select within a file. You can toggle this feature in \u003cem\u003eSettings | Editor | General | Appearance\u003c/em\u003e.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" loading=\"lazy\" width=\"2000\" height=\"1000\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/10/WS243-same-text-selection.png\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003ch2\u003eOther highlights\u003c/h2\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://plugins.jetbrains.com/plugin/10925-database-tools-and-sql-for-webstorm\" target=\"_blank\" rel=\"noopener\"\u003eThe Database Tools and SQL\u003c/a\u003e plugin is now bundled in the IDE, and its licensing model will be changed in the upcoming major release.\u003c/li\u003e\n\n\n\n\u003cli\u003eWebStorm now displays the .idea directory in the \u003cem\u003eProject \u003c/em\u003eview by default. You can use the projectView.hide.dot.idea registry option to toggle this behavior (\u003ca href=\"https://youtrack.jetbrains.com/issue/WEB-68009\" target=\"_blank\" rel=\"noopener\"\u003eWEB-68009\u003c/a\u003e). \u003c/li\u003e\n\n\n\n\u003cli\u003eThe \u003cem\u003eInstall dependencies\u003c/em\u003e notification will now automatically disappear once the required dependencies have been installed via the command line (\u003ca href=\"https://youtrack.jetbrains.com/issue/WEB-65147\" target=\"_blank\" rel=\"noopener\"\u003eWEB-65147\u003c/a\u003e).\u003c/li\u003e\n\n\n\n\u003cli\u003eWe have improved navigation to built-in Nuxt components (\u003ca href=\"https://youtrack.jetbrains.com/issue/WEB-65589\" target=\"_blank\" rel=\"noopener\"\u003eWEB-65589\u003c/a\u003e, \u003ca href=\"https://youtrack.jetbrains.com/issue/WEB-66625/Nuxt-support-find-usages-for-files-in-the-components-directory\" target=\"_blank\" rel=\"noopener\"\u003eWEB-66625\u003c/a\u003e).\u003c/li\u003e\n\n\n\n\u003cli\u003eYou can now use nx as the karma package to run unit tests in Nx projects (\u003ca href=\"https://youtrack.jetbrains.com/issue/WEB-58994\" target=\"_blank\" rel=\"noopener\"\u003eWEB-58994\u003c/a\u003e).\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eThat’s it for today. For the full list of improvements introduced throughout the latest 2024.3 EAPs, check out the release notes.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cem\u003eThe WebStorm team\u003c/em\u003e\u003c/p\u003e\n                    \n                                                                                                                                                                                                                            \u003cdiv\u003e\n                                \u003cdiv\u003e\n                                                                            \u003ch4\u003eSubscribe to WebStorm Blog updates\u003c/h4\u003e\n                                                                                                            \n                                \u003c/div\u003e\n                                \n                                \u003cp\u003e\u003cimg src=\"https://blog.jetbrains.com/wp-content/themes/jetbrains/assets/img/img-form.svg\" alt=\"image description\"/\u003e\n                                                                    \u003c/p\u003e\n                            \u003c/div\u003e\n                                                            \u003c/div\u003e\n                \u003ca href=\"#\"\u003e\u003c/a\u003e\n                \n                \n            \u003c/section\u003e\n                    \u003cdiv\u003e\n                \u003cp\u003e\n                    \u003ch2\u003eDiscover more\u003c/h2\u003e\n                \u003c/p\u003e\n                \n            \u003c/div\u003e\n                \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "8 min read",
  "publishedTime": null,
  "modifiedTime": null
}
