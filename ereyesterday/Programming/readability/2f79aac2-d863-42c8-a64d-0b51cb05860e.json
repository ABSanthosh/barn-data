{
  "id": "2f79aac2-d863-42c8-a64d-0b51cb05860e",
  "title": "Amper Update, May 2025 – A Standalone Build Tool for Kotlin, Server-Side and Multiplatform",
  "link": "https://blog.jetbrains.com/amper/2025/05/amper-update-may-2025/",
  "description": "Amper 0.7.0 is here, expanding beyond multiplatform apps to include support for server-side development with Ktor and Spring, adding iOS to Amper’s list of supported Kotlin Multiplatform targets, and much more. The standalone version of Amper is now the primary focus of the project, and the Gradle-based variant is being phased out. Read on for […]",
  "author": "Dmitry Savvinov",
  "published": "Wed, 21 May 2025 10:38:40 +0000",
  "source": "https://blog.jetbrains.com/feed",
  "categories": null,
  "byline": "Dmitry Savvinov",
  "length": 7413,
  "excerpt": "Amper is an experimental, standalone build tool by JetBrains, for server-side and Kotlin Multiplatform development. Read on for the latest updates!",
  "siteName": "The JetBrains Blog",
  "favicon": "https://blog.jetbrains.com/wp-content/uploads/2024/01/cropped-mstile-310x310-1-180x180.png",
  "text": "The project configuration and build tool focused on user experience and IDE support. Amper Update, May 2025 – A Standalone Build Tool for Kotlin, Server-Side and Multiplatform Amper 0.7.0 is here, expanding beyond multiplatform apps to include support for server-side development with Ktor and Spring, adding iOS to Amper’s list of supported Kotlin Multiplatform targets, and much more. The standalone version of Amper is now the primary focus of the project, and the Gradle-based variant is being phased out. Read on for details, and as always, see the release notes for the full list of changes. To use Amper’s latest features, get IntelliJ IDEA 2025.1.2 Preview (or newer). Server-side support for Ktor and Spring Amper now offers support for Ktor and Spring projects out of the box, including the ability to package executable JARs and use BOM dependencies, as well as IDE integrations. The ktor-simplest-sample shows a minimal REST service built with Ktor and Amper: Amper also supports Spring Boot applications. Try the classic Spring PetClinic sample – now built with Amper: You can enable support for Ktor or Spring in the module.yaml file: product: jvm/app settings:   ktor: enabled   # or   springBoot: enabled   # ... rest of your module configuration ... This sets up your module with sensible defaults: It adds the required compiler plugins like no-arg and all-open for Spring, applies the appropriate BOM, configures version catalogs, and lets you build an executable JAR using the new amper package command. Amper integrates fully with existing IDE functionality for both Ktor and Spring. You get all the essentials, like run configurations and endpoint discovery, and advanced framework-specific tools, such as the Spring Bean Graph. To try Amper in server-side projects, refer to the samples in the repository. You can also use the new templates for server-side projects included in the amper init command. IDE improvements Improved diagnostics and quick-fixes In Amper 0.7.0, we’ve made a number of existing warnings and error messages more readable and actionable. We also ensured that Amper degrades gracefully when there are errors in the configuration, preserving tooling support to help you resolve any issues. Here are a few highlights: If a dependency version is overridden by another dependency that requests a newer version, Amper now reports this as a warning, provides a detailed explanation of why the override occurred, and offers a quick-fix to update the version to match: Amper now provides clear errors when a multiplatform dependency is missing support for one or more targets required by the module that includes it, and offers various quick-fixes to resolve the issue: Providing clear diagnostics and actionable guidance for misconfigured builds is one of our top priorities. We’re continuing to improve here and welcome your feedback in the issue tracker. Adding dependencies for unresolved references When your code references a symbol from another module that isn’t declared as a dependency yet, Amper now offers a quick-fix to add it as a dependency without requiring you to leave the Kotlin file you’re editing: This quick-fix currently works for unresolved references to other modules within your project. We’re planning to add support for external libraries like kotlinx.coroutines in upcoming releases. Kotlin Multiplatform support in standalone Amper With 0.7.0, the standalone version of Amper now supports Kotlin Multiplatform development for iOS, in addition to Android and Desktop. You can build, package, and run KMP apps for these platforms entirely with Amper. No need to directly configure other build tools – Amper handles all native toolchain integrations behind the scenes. As an example, we have converted the updated KotlinConf app for these platforms to Amper. You can find the code on this branch. To learn more about KMP projects with Amper, take a look at the samples in the repository. The future of standalone Amper and Gradle-based Amper Amper was initially released as a Gradle-based configuration tool. Gradle’s capabilities and plugin ecosystem helped us prototype quickly and supported early adoption patterns, including per-module migration and the ability to customize the build logic. Since then, we’ve released a standalone version of Amper that handles the build process entirely on its own, without requiring users to interact with other build tools. Our goal was to answer a few key questions: Do we gain any user-visible benefits by writing and maintaining a full-fledged build system? Is it feasible to support most common scenarios out of the box without relying on third-party plugins? Can Amper provide enough flexibility to cover advanced real-life scenarios without sacrificing high-quality tooling support? Today, we’re excited to share the results of this research. The standalone version of Amper is now the main path forward. Gradle-based Amper is deprecated and will be phased out in future releases. The standalone version of Amper already supports core KMP and server-side scenarios. In fact, the Amper project itself has been built using standalone Amper for several releases now! Many existing Amper diagnostics, quick-fixes, refactorings, and other features are only possible because Amper controls the entire build process, and we see huge potential for further evolution. We’re also confident that Amper can offer the flexibility and customizability needed for advanced use cases: custom packaging and deployment, environment-specific configuration (for example, for CI), and plugins. We’re actively working on extensibility to enable all these use cases. We plan to share the first preview of Amper’s extensibility API soon. If you’re attending KotlinConf this week, watch our talk on May 22 to hear more about Amper’s direction, and stop by our booth to discuss Amper! Updated dependency versions Amper now uses Compose Multiplatform 1.8.0 by default, which brings Compose Multiplatform support for iOS to Stable. Getting started with Amper 0.7.0 To update an existing standalone Amper project, run the update command: ./amper update To start a new project, simply use init: amper init For examples, see the sample projects in the Amper repository. To enjoy full support for the latest Amper features, use IntelliJ IDEA 2025.1.2 Preview (or newer). Share your feedback Amper is still experimental and under active development. You can provide feedback about your experience by joining the discussion in the Kotlinlang Slack’s #amper channel or sharing your suggestions and ideas in a YouTrack issue. Your input and use cases help shape the future of Amper! Discover more",
  "image": "https://blog.jetbrains.com/wp-content/uploads/2025/05/AMP-social-BlogSocialShare-2560x1440-1-1.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"main\"\u003e\n    \u003cdiv\u003e\n                        \u003ca href=\"https://blog.jetbrains.com/amper/\"\u003e\n                            \u003cimg src=\"https://blog.jetbrains.com/wp-content/uploads/2023/11/Amper.svg\" alt=\"Amper logo\"/\u003e\n                                                                                                \n                                                                                    \u003c/a\u003e\n                                                    \u003cp\u003eThe project configuration and build tool focused on user experience and IDE support.\u003c/p\u003e\n                                            \u003c/div\u003e\n                            \u003csection data-clarity-region=\"article\"\u003e\n                \u003cdiv\u003e\n                                        \u003ch2 id=\"major-updates\"\u003eAmper Update, May 2025 – A Standalone Build Tool for Kotlin, Server-Side and Multiplatform\u003c/h2\u003e                    \n                    \n\u003cp\u003e\u003ca href=\"https://github.com/JetBrains/amper/releases/tag/v0.7.0\" target=\"_blank\" rel=\"noopener\"\u003eAmper 0.7.0\u003c/a\u003e is here, expanding beyond multiplatform apps to include support for server-side development with Ktor and Spring, adding iOS to Amper’s list of supported Kotlin Multiplatform targets, and much more. The standalone version of Amper is now the primary focus of the project, and the Gradle-based variant is being phased out. Read on for details, and as always, see \u003ca href=\"https://github.com/JetBrains/amper/releases/tag/v0.7.0\" target=\"_blank\" rel=\"noopener\"\u003ethe release notes\u003c/a\u003e for the full list of changes.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cem\u003eTo use Amper’s latest features, get \u003ca href=\"https://youtrack.jetbrains.com/articles/IDEA-A-2100662347/IntelliJ-IDEA-2025.1-Latest-Builds\" target=\"_blank\" rel=\"noopener\"\u003eIntelliJ IDEA 2025.1.2 Preview\u003c/a\u003e (or newer).\u003c/em\u003e\u003c/p\u003e\n\n\n\n\u003ch2\u003eServer-side support for Ktor and Spring\u003c/h2\u003e\n\n\n\n\u003cp\u003eAmper now offers support for \u003ca href=\"https://ktor.io/\" target=\"_blank\" rel=\"noopener\"\u003eKtor\u003c/a\u003e and \u003ca href=\"https://spring.io/\" target=\"_blank\" rel=\"noopener\"\u003eSpring\u003c/a\u003e projects out of the box, including the ability to package executable JARs and use BOM dependencies, as well as IDE integrations.\u003c/p\u003e\n\n\n\n\u003cp\u003eThe\u003ca href=\"https://github.com/JetBrains/amper/tree/main/examples-standalone/ktor-simplest-sample\" target=\"_blank\" rel=\"noopener\"\u003e \u003c/a\u003e\u003ca href=\"https://github.com/JetBrains/amper/tree/HEAD/examples-standalone/ktor-simplest-sample\" target=\"_blank\" rel=\"noopener\"\u003ektor-simplest-sample\u003c/a\u003e shows a minimal REST service built with Ktor and Amper:\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" fetchpriority=\"high\" width=\"3452\" height=\"1575\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/05/ktor-sample.png\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eAmper also supports Spring Boot applications. Try the classic \u003ca href=\"https://github.com/JetBrains/amper/tree/HEAD/examples-standalone/spring-petclinic-kotlin\" target=\"_blank\" rel=\"noopener\"\u003eSpring PetClinic sample\u003c/a\u003e – now built with Amper:\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXetcP9kbo9VcGQnp7nXKQ6o2dIJpt8T5yBTIIDUdK-u8tVEl41pNHnP6A73VfkAWd1j5d3zl42d0i5Q2f_JyN7kuVOOR2l28fP3e8GrMb3duqt1IMm0dohBKQIDn1cPbZfeAKE6?key=ep-OctYuP5nc1E-oBJjJTg\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eYou can enable support for Ktor or Spring in the \u003ccode\u003emodule.yaml\u003c/code\u003e file:\u003c/p\u003e\n\n\n\n\u003cpre data-enlighter-language=\"yaml\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\"\u003eproduct: jvm/app\n\nsettings:\n  ktor: enabled\n  # or\n  springBoot: enabled\n  # ... rest of your module configuration ...\u003c/pre\u003e\n\n\n\n\u003cp\u003eThis sets up your module with sensible defaults: It adds the required compiler plugins like no-arg and all-open for Spring, applies the appropriate BOM, configures version catalogs, and lets you build an executable JAR using the new \u003ca href=\"https://github.com/JetBrains/amper/blob/HEAD/docs/Documentation.md#packaging\" target=\"_blank\" rel=\"noopener\"\u003e\u003ccode\u003eamper package\u003c/code\u003e\u003c/a\u003e command.\u003c/p\u003e\n\n\n\n\u003cp\u003eAmper integrates fully with existing IDE functionality for both Ktor and Spring. You get all the essentials, like run configurations and endpoint discovery, and advanced framework-specific tools, such as the \u003ca href=\"https://www.jetbrains.com/help/idea/spring-tool-window.html#bean-graph\" target=\"_blank\" rel=\"noopener\"\u003eSpring Bean Graph\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cvideo autoplay=\"\" controls=\"\" loop=\"\" muted=\"\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/05/spring-bean-graph.mp4\"\u003e\u003c/video\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eTo try Amper in server-side projects, refer to the \u003ca href=\"https://github.com/JetBrains/amper/tree/HEAD/examples-standalone\" target=\"_blank\" rel=\"noopener\"\u003esamples\u003c/a\u003e in the repository. You can also use the new templates for server-side projects included in the amper init command.\u003c/p\u003e\n\n\n    \n\n\n\n\n\n\n\n\u003ch2\u003eIDE improvements\u003c/h2\u003e\n\n\n\n\u003ch3\u003e\u003cstrong\u003eImproved diagnostics and quick-fixes\u003c/strong\u003e\u003c/h3\u003e\n\n\n\n\u003cp\u003eIn Amper 0.7.0, we’ve made a number of existing warnings and error messages more readable and actionable. We also ensured that Amper degrades gracefully when there are errors in the configuration, preserving tooling support to help you resolve any issues. Here are a few highlights:\u003c/p\u003e\n\n\n\n\u003cp\u003eIf a dependency version is overridden by another dependency that requests a newer version, Amper now reports this as a warning, provides a detailed explanation of why the override occurred, and offers a quick-fix to update the version to match:\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cvideo autoplay=\"\" controls=\"\" loop=\"\" muted=\"\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/05/dependency-resolution-diagnostic.mp4\"\u003e\u003c/video\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eAmper now provides clear errors when a multiplatform dependency is missing support for one or more targets required by the module that includes it, and offers various quick-fixes to resolve the issue:\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cvideo autoplay=\"\" controls=\"\" loop=\"\" muted=\"\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/05/platform-mismatch-guava.mp4\"\u003e\u003c/video\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eProviding clear diagnostics and actionable guidance for misconfigured builds is one of our top priorities. We’re continuing to improve here and welcome your feedback in the \u003ca href=\"https://youtrack.jetbrains.com/newissue?project=Amper\" target=\"_blank\" rel=\"noopener\"\u003eissue tracker\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003ch3\u003e\u003cstrong\u003eAdding dependencies for unresolved references\u003c/strong\u003e\u003c/h3\u003e\n\n\n\n\u003cp\u003eWhen your code references a symbol from another module that isn’t declared as a dependency yet, Amper now offers a quick-fix to add it as a dependency without requiring you to leave the Kotlin file you’re editing:\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cvideo autoplay=\"\" controls=\"\" loop=\"\" muted=\"\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/05/add-dependency.mp4\"\u003e\u003c/video\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eThis quick-fix currently works for unresolved references to other modules within your project. We’re planning to add support for external libraries like kotlinx.coroutines in upcoming releases.\u003c/p\u003e\n\n\n\n\u003ch2\u003eKotlin Multiplatform support in standalone Amper\u003c/h2\u003e\n\n\n\n\u003cp\u003eWith 0.7.0, the standalone version of Amper now supports Kotlin Multiplatform development for iOS, in addition to Android and Desktop. You can build, package, and run KMP apps for these platforms entirely with Amper. No need to directly configure other build tools – Amper handles all native toolchain integrations behind the scenes.\u003c/p\u003e\n\n\n\n\u003cp\u003eAs an example, we have converted the updated KotlinConf app for these platforms to Amper. You can find the code on \u003ca href=\"https://github.com/JetBrains/kotlinconf-app/tree/amper\" target=\"_blank\" rel=\"noopener\"\u003ethis branch\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" width=\"2502\" height=\"1750\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/05/kcapp-code.png\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" width=\"1920\" height=\"1080\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/05/kcapp-screenshots.png\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eTo learn more about KMP projects with Amper, take a look at the \u003ca href=\"https://github.com/JetBrains/amper/tree/HEAD/examples-standalone\" target=\"_blank\" rel=\"noopener\"\u003esamples\u003c/a\u003e in the repository.\u003c/p\u003e\n\n\n    \n\n\n\n\n\n\n\n\u003ch2\u003eThe future of standalone Amper and Gradle-based Amper\u003c/h2\u003e\n\n\n\n\u003cp\u003eAmper was initially released as a Gradle-based configuration tool. Gradle’s capabilities and plugin ecosystem helped us prototype quickly and supported early adoption patterns, including per-module migration and the ability to customize the build logic.\u003c/p\u003e\n\n\n\n\u003cp\u003eSince then, we’ve released a standalone version of Amper that handles the build process entirely on its own, without requiring users to interact with other build tools. Our goal was to answer a few key questions:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eDo we gain any user-visible benefits by writing and maintaining a full-fledged build system?\u003c/li\u003e\n\n\n\n\u003cli\u003eIs it feasible to support most common scenarios out of the box without relying on third-party plugins?\u003c/li\u003e\n\n\n\n\u003cli\u003eCan Amper provide enough flexibility to cover advanced real-life scenarios without sacrificing high-quality tooling support?\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eToday, we’re excited to share the results of this research. \u003cstrong\u003eThe standalone version of Amper is now the main path forward. Gradle-based Amper is deprecated and will be phased out in future releases.\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003eThe standalone version of Amper already supports core KMP and server-side scenarios. In fact, the Amper project itself has been built using standalone Amper for several releases now! Many existing Amper diagnostics, quick-fixes, refactorings, and other features are only possible because Amper controls the entire build process, and we see huge potential for further evolution.\u003c/p\u003e\n\n\n\n\u003cp\u003eWe’re also confident that Amper can offer the flexibility and customizability needed for advanced use cases: custom packaging and deployment, environment-specific configuration (for example, for CI), and plugins. We’re actively working on extensibility to enable all these use cases. We plan to share the first preview of Amper’s extensibility API soon.\u003c/p\u003e\n\n\n\n\u003cp\u003eIf you’re attending \u003ca href=\"https://kotlinconf.com/\" target=\"_blank\" rel=\"noopener\"\u003eKotlinConf\u003c/a\u003e this week, watch our talk on May 22 to hear more about Amper’s direction, and stop by our booth to discuss Amper!\u003c/p\u003e\n\n\n\n\u003ch2\u003eUpdated dependency versions\u003c/h2\u003e\n\n\n\n\u003cp\u003eAmper now uses \u003ca href=\"https://blog.jetbrains.com/kotlin/2025/05/compose-multiplatform-1-8-0-released-compose-multiplatform-for-ios-is-stable-and-production-ready/\"\u003eCompose Multiplatform 1.8.0\u003c/a\u003e by default, which brings Compose Multiplatform support for iOS to Stable.\u003c/p\u003e\n\n\n\n\u003ch2\u003eGetting started with Amper 0.7.0\u003c/h2\u003e\n\n\n\n\u003cp\u003eTo update an existing standalone Amper project, run the update command:\u003c/p\u003e\n\n\n\n\u003cpre data-enlighter-language=\"bash\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\"\u003e./amper update\u003c/pre\u003e\n\n\n\n\u003cp\u003eTo start a new project, simply use init:\u003c/p\u003e\n\n\n\n\u003cpre data-enlighter-language=\"bash\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\"\u003eamper init\u003c/pre\u003e\n\n\n\n\u003cp\u003eFor examples, see the \u003ca href=\"https://github.com/JetBrains/amper/tree/HEAD/examples-standalone\" target=\"_blank\" rel=\"noopener\"\u003esample projects\u003c/a\u003e in the Amper repository.\u003c/p\u003e\n\n\n\n\u003cp\u003eTo enjoy full support for the latest Amper features, use \u003ca href=\"https://youtrack.jetbrains.com/articles/IDEA-A-2100662347/IntelliJ-IDEA-2025.1-Latest-Builds\" target=\"_blank\" rel=\"noopener\"\u003eIntelliJ IDEA 2025.1.2 Preview\u003c/a\u003e (or newer).\u003c/p\u003e\n\n\n    \n\n\n\n\n\n\n\n\u003ch2\u003eShare your feedback\u003c/h2\u003e\n\n\n\n\u003cp\u003eAmper is still experimental and under active development. You can provide feedback about your experience by joining the discussion in the \u003ca href=\"https://slack-chats.kotlinlang.org/c/amper\" target=\"_blank\" rel=\"noopener\"\u003eKotlinlang Slack’s #amper channel\u003c/a\u003e or sharing your suggestions and ideas in a \u003ca href=\"https://youtrack.jetbrains.com/issues/AMPER\" target=\"_blank\" rel=\"noopener\"\u003eYouTrack issue\u003c/a\u003e. Your input and use cases help shape the future of Amper!\u003c/p\u003e\n                    \n                                                                                                                                                                                                                                    \u003c/div\u003e\n                \u003ca href=\"#\"\u003e\u003c/a\u003e\n                \n                \n            \u003c/section\u003e\n                    \u003cdiv\u003e\n                \u003cp\u003e\n                    \u003ch2\u003eDiscover more\u003c/h2\u003e\n                \u003c/p\u003e\n                \n            \u003c/div\u003e\n                \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "8 min read",
  "publishedTime": null,
  "modifiedTime": null
}
