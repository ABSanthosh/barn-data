{
  "id": "78e8503d-99e8-4cc8-bbfd-da23ea30bfc1",
  "title": "The Open-Source Version of InfluxDB 3 Reaches GA",
  "link": "https://www.infoq.com/news/2025/04/influxdb3-open-source/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "Two years after releasing the GA version of InfluxData’s enterprise edition, their open-source version also reached that level of maturity. Conceptualised for real-time workloads and ease of running, the core version leaves aside features like long-term storage optimisations, compaction or high availability (HA), read replicas, or fine-grained access controls. By Olimpiu Pop",
  "author": "Olimpiu Pop",
  "published": "Wed, 16 Apr 2025 13:13:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Data Analytics",
    "Time Series Data",
    "Open Source",
    "Apache",
    "Rust",
    "DevOps",
    "AI, ML \u0026 Data Engineering",
    "Architecture \u0026 Design",
    "Development",
    "news"
  ],
  "byline": "Olimpiu Pop",
  "length": 5140,
  "excerpt": "Two years after releasing the GA version of InfluxData’s enterprise edition, their open-source version also reached that level of maturity. Conceptualised for real-time workloads and ease of running,",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s1_20250413214448/apple-touch-icon.png",
  "text": "Two years after releasing the GA version of InfluxData’s enterprise edition, their open-source version also reached that level of maturity. Conceptualised for real-time workloads and ease of running, the core version leaves aside features like long-term storage optimisations, compaction or high availability (HA), read replicas, or fine-grained access controls. The third version of the data product goes beyond the traditional scope of data storage functionality. It incorporates an embedded Python VM, allowing developers to extend the way they collect, process, and alert on real-time data. InfoQ contacted Paul Dix, cofounder and CTO of InfluxData, to better understand how the open-source version compares with the enterprise one and whether to use one or the other. InfoQ: Thank you for taking the time to answer some questions for our readers. Let's start by asking you to introduce yourselves and describe your day-to-day duties at InfluxData. Dix: I’m the founder and CTO of InfluxData, the time series database InfluxDB creator. I lead product strategy and the development of InfluxDB 3. Ultimately, my job is to keep us pointed in the right direction technically and in how we present ourselves to the developer community. InfoQ: What prompted the decision to develop an open-source database version alongside the enterprise edition? Dix: Infrastructure software should be open, hackable, and easy to run on your terms. That’s why I believe open-source is the foundation of every product. We envision it: you can start with the core version, bootstrap your system, and as it scales and the requirements change(you need long-range queries, high availability, and multi-node deployments), you can opt to use the enterprise version. We built the core version as the foundation, supporting infinite cardinality, designed with a \"diskless\" architecture, while the enterprise version adds the complexities for commercial workloads. InfoQ: What challenges or limitations should users be aware of when using the open-source version compared to the enterprise edition? Dix: InfluxDB 3 Core is optimised for real-time workloads, such as edge data transformation, streaming analytics, and sensor-based alerting—any use case where low-latency insights are critical. The core was thought to provide a solid foundation for local dev, edge devices, or lightweight monitoring setups. However, the enterprise is better suited for more complex historical queries or scaling across multiple nodes. We also have a free enterprise tier designed for hobbyists and at-home use. It runs as a single node and includes features like the compaction engine, which makes it easier to work with historical data. InfoQ: How does the database compare to other players in the space? Dix: We didn’t want another general-purpose engine adapted for time series. Based on our experience, we designed Influxdb 3 specifically for time series data, targeting high ingestion rates, low-latency queries, and efficient data compression. Using the FDAP stack —Flight, DataFusion, Arrow, and Parquet— we aimed to facilitate its data ecosystem integration. InfluxDB 3 is an active layer in data pipelines, integrating computation with storage via the embedded processing engine. It supports single-process operations and horizontal scaling, with capabilities for data transformation in Python and SQL querying, distinguishing it from other time series databases. InfoQ: How was the rewriting experience? Dix: Rewriting a time series database from scratch isn’t something you do lightly. The real complexity came from trying to hit all the design goals at once—supporting object storage as the persistence layer, delivering millisecond query latency, running on top of a general-purpose SQL engine, and keeping things simple to operate. InfoQ: What’s next on InfluxData’s roadmap? What will be available in the core version? Dix: We’re investing heavily in the Processing Engine, one of the most essential parts of InfluxDB 3 Core and Enterprise. The Processing Engine represents a fundamental shift in what a database can do. Traditionally, databases are passive: you write data in and query it later. A database should be able to do more, so we are investing heavily in the processing engine, targeting to transform InfluxDB into an active intelligence engine that can react to data as it streams in. The Processing Engine is a lightweight Python VM embedded directly inside the database. Using code they already know, users can build everything from real-time anomaly detection to scheduled reports to custom ETL flows within the database. InfluxDB 3 Core data promises to provide the same experience as its enterprise version. However, it lacks storage optimisations, compression, HA, read replicas, or fine-grained access controls, which were added in the enterprise version. Those who want to get more involved can open issues or PRs on their GitHub repo or chat on their Discord channel. About the Author Olimpiu Pop",
  "image": "https://res.infoq.com/news/2025/04/influxdb3-open-source/en/headerimage/anthropic-ai-microscope-1744808335748.jpeg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003e\u003ca href=\"https://www.infoq.com/news/2023/02/influxdb-new-engine/\"\u003eTwo years after releasing the GA version of InfluxData’s enterprise edition\u003c/a\u003e, their open-source version also reached that level of maturity. Conceptualised for real-time workloads and ease of running, the core version leaves aside features like long-term storage optimisations, compaction or high availability (HA), read replicas, or fine-grained access controls.\u003c/p\u003e\n\n\u003cp\u003eThe third version of the data product goes beyond the traditional scope of data storage functionality. It incorporates an embedded Python VM, allowing developers to extend the way they collect, process, and alert on real-time data. InfoQ contacted \u003ca href=\"https://www.linkedin.com/in/pauldix/\"\u003ePaul Dix\u003c/a\u003e, cofounder and CTO of InfluxData, to better understand how the open-source version compares with the enterprise one and whether to use one or the other.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eInfoQ: Thank you for taking the time to answer some questions for our readers. Let\u0026#39;s start by asking you to introduce yourselves and describe your day-to-day duties at InfluxData.\u003c/strong\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDix\u003c/strong\u003e: I’m the founder and CTO of InfluxData, the time series database InfluxDB creator. I lead product strategy and the development of InfluxDB 3. Ultimately, my job is to keep us pointed in the right direction technically and in how we present ourselves to the developer community.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003eInfoQ: What prompted the decision to develop an open-source database version alongside the enterprise edition?\u003c/strong\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDix\u003c/strong\u003e: Infrastructure software should be open, hackable, and easy to run on your terms. That’s why I believe open-source is the foundation of every product. We envision it: you can start with the core version, bootstrap your system, and as it scales and the requirements change(you need long-range queries, high availability, and multi-node deployments), you can opt to use the enterprise version. We built the core version as the foundation, supporting infinite cardinality, designed with a \u0026#34;diskless\u0026#34; \u003ca href=\"https://www.infoq.com/news/2023/08/influxdb-3-architecture/\"\u003earchitecture\u003c/a\u003e, while the enterprise version adds the complexities for commercial workloads.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003eInfoQ: What challenges or limitations should users be aware of when using the open-source version compared to the enterprise edition?\u003c/strong\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDix\u003c/strong\u003e: InfluxDB 3 Core is optimised for real-time workloads, such as edge data transformation, streaming analytics, and sensor-based alerting—any use case where low-latency insights are critical. The core was thought to provide a solid foundation for local dev, edge devices, or lightweight monitoring setups. However, the enterprise is better suited for more complex historical queries or scaling across multiple nodes. We also have a free enterprise tier designed for hobbyists and at-home use. It runs as a single node and includes features like the compaction engine, which makes it easier to work with historical data.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003eInfoQ: How does the database compare to other players in the space?\u003c/strong\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDix\u003c/strong\u003e: We didn’t want another general-purpose engine adapted for time series. Based on our experience, we designed Influxdb 3 specifically for time series data, targeting high ingestion rates, low-latency queries, and efficient data compression. Using the FDAP stack —Flight, DataFusion, Arrow, and Parquet— we aimed to facilitate its data ecosystem integration.\u003c/p\u003e\n\n\u003cp\u003eInfluxDB 3 is an active layer in data pipelines, integrating computation with storage via the embedded processing engine. It supports single-process operations and horizontal scaling, with capabilities for data transformation in Python and SQL querying, distinguishing it from other time series databases.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003eInfoQ: How was the rewriting experience?\u003c/strong\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDix\u003c/strong\u003e: Rewriting a time series database from scratch isn’t something you do lightly. The real complexity came from trying to hit all the design goals at once—supporting object storage as the persistence layer, delivering millisecond query latency, running on top of a general-purpose SQL engine, and keeping things simple to operate.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003eInfoQ: What’s next on InfluxData’s roadmap? What will be available in the core version?\u003c/strong\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDix\u003c/strong\u003e: We’re investing heavily in the Processing Engine, one of the most essential parts of InfluxDB 3 Core and Enterprise. The Processing Engine represents a fundamental shift in what a database can do.\u003c/p\u003e\n\n\u003cp\u003eTraditionally, databases are passive: you write data in and query it later. A database should be able to do more, so we are investing heavily in the processing engine, targeting to transform InfluxDB into an active intelligence engine that can react to data as it streams in.\u003c/p\u003e\n\n\u003cp\u003eThe Processing Engine is a lightweight Python VM embedded directly inside the database. Using code they already know, users can build everything from real-time anomaly detection to scheduled reports to custom ETL flows within the database.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eInfluxDB 3 Core data promises to provide the same experience as its enterprise version. However, it lacks storage optimisations, compression, HA, read replicas, or fine-grained access controls, which were added in the enterprise version. Those who want to get more involved can open issues or PRs on their \u003ca href=\"https://github.com/influxdata/influxdb\"\u003eGitHub repo\u003c/a\u003e or chat on their \u003ca href=\"https://discord.com/invite/vZe2w2Ds8B\"\u003eDiscord channel\u003c/a\u003e.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Olimpiu-Pop\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eOlimpiu Pop\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": "2025-04-16T00:00:00Z",
  "modifiedTime": null
}
