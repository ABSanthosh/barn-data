{
  "id": "b9ff0aec-2137-42a7-a3b5-f0994dba2a0b",
  "title": "",
  "link": "http://scripting.com/2024/11/22.html#a144508",
  "description": "I started a feature list on the About WordLand page.",
  "author": "",
  "published": "Fri, 22 Nov 2024 14:45:08 GMT",
  "source": "http://scripting.com/rss.xml",
  "categories": null,
  "byline": "",
  "length": 2953,
  "excerpt": "Dave Winer, OG blogger, podcaster, developed first apps in many categories. Old enough to know better. It's even worse than it appears.",
  "siteName": "Scripting News",
  "favicon": "",
  "text": "It's even worse than it appears.. I started a feature list on the About WordLand page. # I just realized that there's another kind of enshitification that we're experiencing now because the twitter-verse has split into so many forks. Bluesky is hot now, but this isn't over yet.# Developers are deliberately locking their users in by creating new APIs that are not only incompatible with previously existing APIs, but also are difficult for developers who learned earlier APIs to adopt because now they have all kinds of replicated code for different systems. It adds another level of complexity to the developer's code. # What each platform vendor wants is not only captive users, but also locked-in developers. Why do you think they all have new languages? Come on is Swift really better than Go or React or whatever. Groups of Mac developers constantly spinning their wheels to keep up with Apple breaking releases. Groups of JavaScript developers. And there are many kinds of JS devs. When does it end. Ones who build on OpenAI and others that develop on the APIs of other vendors (I'm not even trying to go on that ride, too late in my career.) There's so much confusion, that leads to exhaustion. # Now we're feeling it especially hard when there are such ill-conceived duplicate APIs that all could have been done with RSS 2.0 and OPML. Every one of them. Cory Doctorow, who came up with the term enshitification, also wrote a passionate piece about RSS. I want to say to my friend Cory, if a system isn't built on RSS at this point, they are certainly trying to lock users and developers in. I don't care if it's ActivityPub or ATProto or Facebook or Meta or X or Twitter (sorry I can't keep up with their names). # I want to build on a system that's pure inbound and outbound RSS. Give me lists in OPML and the please just let me ignore the rest of your lockin strategy. They talk a good line about wanting interop, federation and standards, but their actions speak otherwise. # At a conference the CEO of twitter-splitter Bluesky said her product is billionaire-proof, but it doesn't seem too likely to me that it is. And maybe they're quoting her incorrectly. A billionaire could take it over and the users would have no recourse, the whole thing would blow up even more quickly than Twitter is (and I'm not convinced it has blown up, there still seems to be a lot going on there, I think perhaps people are exaggerating how polluted it is or maybe I'm being shielded by an algorithm). It would be nice to use a system that is truly billionaire-proof. How about building a network on top of something else that is 100 percent RSS. # And btw, RSS is probably the closest to billionaire-proof. I don't get royalties on it, lots of people have tried to make big bucks from it, but so far its only allegiance is to people who want to publish and receive news. If a billionaire could buy it, they probably would have by now. ðŸ˜„#",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"idPageTopText\"\u003e\n\t\n\t\u003cp\u003eIt\u0026#39;s even worse than it appears..\u003c/p\u003e\n\t\u003c/div\u003e\u003cdiv id=\"idDayContainer\"\u003e\n\t\t\t\t\n\u003cp\u003e\u003ca name=\"a144508\"\u003e\u003c/a\u003eI started a \u003ca href=\"https://this.how/wordland/#1732286073000\"\u003efeature list\u003c/a\u003e on the About WordLand page. \u003cspan\u003e\u003ca href=\"http://scripting.com/2024/11/22.html#a144508\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cdiv\u003e\n\t\n\t\u003cul\u003e\n\t\u003cli data-type=\"outline\" data-image=\"https://imgs.scripting.com/2019/05/12/chairmanMeow.png\" data-flincalendar=\"true\"\u003e\u003ca name=\"a160306\"\u003e\u003c/a\u003e\u003cimg src=\"https://imgs.scripting.com/2019/05/12/chairmanMeow.png\"/\u003eI just realized that there\u0026#39;s another kind of \u003ca href=\"https://en.wikipedia.org/wiki/Enshittification\"\u003eenshitification\u003c/a\u003e that we\u0026#39;re experiencing now because the twitter-verse has split into so many forks. Bluesky is hot now, but this isn\u0026#39;t over yet.\u003cspan\u003e\u003ca href=\"http://scripting.com/2024/11/22/214100.html#a160306\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a214125\"\u003e\u003c/a\u003eDevelopers are deliberately locking their users in by creating new APIs that are not only incompatible with previously existing APIs, but also are difficult for developers who learned earlier APIs to adopt because now they have all kinds of replicated code for different systems. It adds another level of complexity to the developer\u0026#39;s code. \u003cspan\u003e\u003ca href=\"http://scripting.com/2024/11/22/214100.html#a214125\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a214158\"\u003e\u003c/a\u003eWhat each platform vendor wants is not only captive users, but also locked-in developers. Why do you think they all have new languages? Come on is Swift really better than Go or React or whatever. Groups of Mac developers constantly spinning their wheels to keep up with Apple breaking releases. Groups of JavaScript developers. And there are many \u003ci\u003ekinds\u003c/i\u003e of JS devs. When does it end. Ones who build on OpenAI and others that develop on the APIs of other vendors (I\u0026#39;m not even trying to go on that ride, too late in my career.) There\u0026#39;s so much confusion, that leads to exhaustion. \u003cspan\u003e\u003ca href=\"http://scripting.com/2024/11/22/214100.html#a214158\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a214312\"\u003e\u003c/a\u003eNow we\u0026#39;re feeling it especially hard when there are such ill-conceived duplicate APIs that \u003ci\u003eall\u003c/i\u003e could have been done with RSS 2.0 and OPML.  Every one of them. Cory Doctorow, who came up with the term enshitification, also wrote a \u003ca href=\"https://pluralistic.net/2024/10/16/keep-it-really-simple-stupid/#read-receipts-are-you-kidding-me-seriously-fuck-that-noise\"\u003epassionate piece about RSS\u003c/a\u003e. I want to say to my friend Cory, if a system isn\u0026#39;t built on RSS at this point, they are certainly trying to lock users and developers in. I don\u0026#39;t care if it\u0026#39;s ActivityPub or ATProto or Facebook or Meta or X or Twitter (sorry I can\u0026#39;t keep up with their names). \u003cspan\u003e\u003ca href=\"http://scripting.com/2024/11/22/214100.html#a214312\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a214349\"\u003e\u003c/a\u003eI want to build on a system that\u0026#39;s pure inbound and outbound RSS. Give me lists in OPML and the please just let me ignore the rest of your lockin strategy. They talk a good line about wanting interop, federation and standards, but their actions speak otherwise. \u003cspan\u003e\u003ca href=\"http://scripting.com/2024/11/22/214100.html#a214349\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a214405\"\u003e\u003c/a\u003eAt a conference the CEO of twitter-splitter Bluesky said her product is \u003ca href=\"https://www.cnbc.com/2024/11/21/bluesky-ceo-jay-graber-says-x-rival-is-billionaire-proof.html\"\u003ebillionaire-proof\u003c/a\u003e, but it doesn\u0026#39;t seem too likely to me that it is. And maybe they\u0026#39;re quoting her incorrectly. A billionaire could take it over and the users would have no recourse, the whole thing would blow up even more quickly than Twitter is (and I\u0026#39;m not convinced it has blown up, there still seems to be a lot going on there, I think perhaps people are exaggerating how polluted it is or maybe I\u0026#39;m being shielded by an algorithm). It would be nice to use a system that is truly billionaire-proof. How about building a network on top of something else that is 100 percent RSS. \u003cspan\u003e\u003ca href=\"http://scripting.com/2024/11/22/214100.html#a214405\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a214646\"\u003e\u003c/a\u003eAnd btw, RSS is probably the closest to billionaire-proof. I don\u0026#39;t get royalties on it, lots of people have tried to make big bucks from it, but so far its only allegiance is to people who want to publish and receive news. If a billionaire could buy it, they probably would have by now. \u003cspan\u003eðŸ˜„\u003c/span\u003e\u003cspan\u003e\u003ca href=\"http://scripting.com/2024/11/22/214100.html#a214646\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003c/ul\u003e\n\n\t\u003c/div\u003e\n\n\n\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": null,
  "modifiedTime": null
}
