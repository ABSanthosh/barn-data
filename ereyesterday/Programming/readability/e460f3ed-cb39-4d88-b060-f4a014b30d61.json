{
  "id": "e460f3ed-cb39-4d88-b060-f4a014b30d61",
  "title": "What‚Äôs Next for CLion: The 2025.2 Roadmap",
  "link": "https://blog.jetbrains.com/clion/2025/05/2025-2-roadmap/",
  "description": "We‚Äôve begun work on our next major release, 2025.2, which we plan to introduce in July. After reviewing your feedback and our strategic goals, we‚Äôve prioritized the following areas for development: üöÄ CLion Nova language engine improvements and bug fixes üéõÔ∏è New features for embedded development ü§ñ Support for Junie, JetBrains‚Äô smart coding agent Read [‚Ä¶]",
  "author": "Oleg Zinovyev",
  "published": "Mon, 05 May 2025 08:02:55 +0000",
  "source": "https://blog.jetbrains.com/feed",
  "categories": [
    "news",
    "roadmap",
    "clionnova",
    "embedded",
    "esp32",
    "freertos",
    "junie"
  ],
  "byline": "Oleg Zinovyev",
  "length": 6350,
  "excerpt": "We‚Äôve begun work on our next major release, 2025.2, which we plan to introduce in July. After reviewing your feedback and our strategic goals, we‚Äôve prioritized the following areas for development:",
  "siteName": "The JetBrains Blog",
  "favicon": "https://blog.jetbrains.com/wp-content/uploads/2024/01/cropped-mstile-310x310-1-180x180.png",
  "text": "A Cross-Platform IDE for C and C++ News RoadmapWhat‚Äôs Next for CLion: The 2025.2 Roadmap We‚Äôve begun work on our next major release, 2025.2, which we plan to introduce in July. After reviewing your feedback and our strategic goals, we‚Äôve prioritized the following areas for development: üöÄ CLion Nova language engine improvements and bug fixes üéõÔ∏è New features for embedded development ü§ñ Support for Junie, JetBrains‚Äô smart coding agent Read on to learn more about our planned updates. Our team is committed to creating an IDE that makes development smooth and productive. However, the following is only a preliminary roadmap. We can‚Äôt guarantee that all the issues and features listed below will be addressed and implemented in CLion 2025.2. Unexpected circumstances could require us to modify our plans or implementation timelines for some items. CLion Nova The CLion Nova language engine will receive a number of new features and enhancements that will bring it closer to becoming the default IDE engine for all users. Here are the major planned updates: New smart keys: We will continue adding the smart keys available in CLion Classic that are missing in CLion Nova. In addition to the ones we already included in 2025.1, we plan to add several more, such as Jump outside closing bracket/quote and Reformat block on typing ‚Äò}‚Äô (CPP-42032). Faster typing assistance for remote development: We‚Äôre still working on improving the typing assistant‚Äôs responsiveness for remote development and plan to have a working solution in time for the 2025.2 release. As a result, actions such as smart indentation when you press Enter or automatic insertion of pair parentheses, brackets, and quotes will be as fast as in local mode. Fixes for issues involving missed compilation errors: CLion Nova may overlook some possible compilation errors when analyzing your source code and may not show the corresponding warnings in the editor. As a result, these errors only appear in the terminal after the build is complete. After fixing this issue, CLion Nova will catch all the errors before you click Build, Run, or Debug. Fixes for reformatting issues: We plan to address a problem that results in CLion Nova‚Äôs formatter not always working as expected. One example of this is when, after pressing Enter, the indentation on the next line doesn‚Äôt follow the settings in your code style scheme. Embedded development For embedded development, we‚Äôll focus on providing our real-time variable view (Live Watches), extending the debug server functionality, and improving CLion‚Äôs FreeRTOS integration. Live Watches: Many embedded developers need to monitor variable values and memory changes in real time without stopping a program, for example, when working with Bluetooth devices that require a persistent connection. Live Watches will make this possible. We‚Äôve been working on this feature for some time (‚Äã‚ÄãCPP-22056), and we apologize to those who expected it to be implemented in the current release. This feature will be one of our main priorities for 2025.2. ESP32 debug server: Although we planned to add a configuration option for the ESP32 debug server in 2025.1, we had to switch to one designed specifically for STM32 chips instead. So, a new template for ESP32 MCUs will complement the already available Generic, SEGGER J-Link, and STM32 templates. Read our documentation to learn more about debug servers and when they‚Äôre helpful. Improving CLion‚Äôs FreeRTOS integration: We plan to make the support of FreeRTOS (an open-source real-time operating system) more flexible. This includes displaying FreeRTOS tasks in the way the feature is implemented for threads and adding the ability to view FreeRTOS objects in the debugger, support for new architectures, such as Arm Cortex-M33, and more (see the list of related issues). Support for Junie JetBrains recently introduced Junie, an AI coding agent that can serve as a full-fledged pair programmer. It speeds up your development process by answering questions, performing complex tasks, and following guidelines (learn more). Junie is already available as a plugin for several JetBrains IDEs, but not yet for CLion. Adding Junie support for CLion comes with its own challenges. We‚Äôre excited about the prospect and are working to make this available in 2025.2. While we can‚Äôt fully confirm this timeline just yet, we want you to know that this is an active area of focus for us. UI improvements for the Project tool window The Project tool window allows you to navigate through your project‚Äôs directories and files, including external sources such as SD cards, when working on Zephyr or ESP-IDF projects. Currently, it‚Äôs not always easy to distinguish between internal and external sources when looking at their path prefixes displayed in the tool window. For 2025.2, we‚Äôre making several improvements to the Project tool window UI to help you distinguish external sources more clearly (CPP-33951). Conclusion There‚Äôs more exciting news about CLion just around the corner ‚Äì stay tuned! In the meantime, we encourage you to check out our latest release, 2025.1, which includes many great features for CLion Nova, debugging, embedded development, and project formats. DOWNLOAD CLION 2025.1 Subscribe to CLion Blog updates Discover more",
  "image": "https://blog.jetbrains.com/wp-content/uploads/2025/05/cl-social_share_blog_1280x720_en.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"main\"\u003e\n    \u003cdiv\u003e\n                        \u003ca href=\"https://blog.jetbrains.com/clion/\"\u003e\n                            \u003cimg src=\"https://blog.jetbrains.com/wp-content/uploads/2019/01/CLion-1.svg\" alt=\"Clion logo\"/\u003e\n                                                                                                \n                                                                                    \u003c/a\u003e\n                                                    \u003cp\u003eA Cross-Platform IDE for C and C++\u003c/p\u003e\n                                            \u003c/div\u003e\n                            \u003csection data-clarity-region=\"article\"\u003e\n                \u003cdiv\u003e\n                    \t\t\t\t\u003cp\u003e\u003ca href=\"https://blog.jetbrains.com/clion/category/news/\"\u003eNews\u003c/a\u003e\n\t\t\t\u003ca href=\"https://blog.jetbrains.com/clion/category/roadmap/\"\u003eRoadmap\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"major-updates\"\u003eWhat‚Äôs Next for CLion: The 2025.2 Roadmap\u003c/h2\u003e                    \n                    \n\u003cp\u003eWe‚Äôve begun work on our next major release, 2025.2, which we plan to introduce in July. After reviewing your feedback and our strategic goals, we‚Äôve prioritized the following areas for development:\u003c/p\u003e\n\n\n\n\u003cp\u003eüöÄ CLion Nova language engine improvements and bug fixes\u003c/p\u003e\n\n\n\n\u003cp\u003eüéõÔ∏è New features for embedded development\u003c/p\u003e\n\n\n\n\u003cp\u003eü§ñ Support for \u003ca href=\"https://www.jetbrains.com/junie/\" target=\"_blank\" rel=\"noopener\"\u003eJunie\u003c/a\u003e, JetBrains‚Äô smart coding agent\u003c/p\u003e\n\n\n\n\u003cp\u003eRead on to learn more about our planned updates.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cem\u003eOur team is committed to creating an IDE that makes development smooth and productive. However, the following is only a preliminary roadmap. We can‚Äôt guarantee that all the issues and features listed below will be addressed and implemented in CLion 2025.2. Unexpected circumstances could require us to modify our plans or implementation timelines for some items.\u003c/em\u003e\u003c/p\u003e\n\n\n\n\u003ch2\u003eCLion Nova\u003c/h2\u003e\n\n\n\n\u003cp\u003eThe CLion Nova language engine will receive a number of new features and enhancements that will bring it closer to becoming the default IDE engine for all users. Here are the major planned updates:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eNew smart keys:\u003c/strong\u003e We will continue adding the smart keys available in CLion Classic that are missing in CLion Nova. In addition to the ones we already \u003ca href=\"https://blog.jetbrains.com/clion/2025/04/clion-2025-1-release/#settings,-actions,-and-smart-keys\"\u003eincluded in 2025.1\u003c/a\u003e, we plan to add several more, such as \u003cem\u003eJump outside closing bracket/quote\u003c/em\u003e and \u003cem\u003eReformat block on typing ‚Äò}‚Äô\u003c/em\u003e (\u003ca href=\"https://youtrack.jetbrains.com/issue/CPP-42032\" target=\"_blank\" rel=\"noopener\"\u003eCPP-42032\u003c/a\u003e).\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eFaster typing assistance for remote development:\u003c/strong\u003e We‚Äôre still working on improving the typing assistant‚Äôs responsiveness for remote development and plan to have a working solution in time for the 2025.2 release. As a result, actions such as smart indentation when you press \u003cem\u003eEnter\u003c/em\u003e or automatic insertion of pair parentheses, brackets, and quotes will be as fast as in local mode.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eFixes for issues involving missed compilation errors:\u003c/strong\u003e CLion Nova may overlook some possible compilation errors when analyzing your source code and may not show the corresponding warnings in the editor. As a result, these errors only appear in the terminal after the build is complete. After fixing this issue, CLion Nova will catch all the errors before you click \u003cem\u003eBuild\u003c/em\u003e, \u003cem\u003eRun\u003c/em\u003e, or \u003cem\u003eDebug\u003c/em\u003e.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eFixes for reformatting issues:\u003c/strong\u003e We plan to address a problem that results in CLion Nova‚Äôs formatter not always working as expected. One example of this is when, after pressing \u003cem\u003eEnter,\u003c/em\u003e the indentation on the next line doesn‚Äôt follow the settings in your \u003ca href=\"https://www.jetbrains.com/help/clion/configuring-code-style.html\" target=\"_blank\" rel=\"noopener\"\u003ecode style scheme\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003ch2\u003eEmbedded development\u003c/h2\u003e\n\n\n\n\u003cp\u003eFor embedded development, we‚Äôll focus on providing our real-time variable view (\u003cem\u003eLive Watches\u003c/em\u003e), extending the debug server functionality, and improving CLion‚Äôs FreeRTOS integration.\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e\u003cem\u003eLive Watches\u003c/em\u003e\u003c/strong\u003e\u003cstrong\u003e:\u003c/strong\u003e Many embedded developers need to monitor variable values and memory changes in real time without stopping a program, for example, when working with Bluetooth devices that require a persistent connection. \u003cem\u003eLive Watches\u003c/em\u003e will make this possible. We‚Äôve been working on this feature for some time (‚Äã‚Äã\u003ca href=\"https://youtrack.jetbrains.com/issue/CPP-22056\" target=\"_blank\" rel=\"noopener\"\u003eCPP-22056\u003c/a\u003e), and we apologize to those who expected it to be implemented in the current release. This feature will be one of our main priorities for 2025.2.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eESP32 debug server:\u003c/strong\u003e Although we planned to add a configuration option for the ESP32 debug server in 2025.1, we had to switch to \u003ca href=\"https://blog.jetbrains.com/clion/2025/04/clion-2025-1-release/#st-link-debug-server-experimental\"\u003eone designed specifically for STM32 chips\u003c/a\u003e instead. So, a new template for ESP32 MCUs will complement the already available \u003cem\u003eGeneric\u003c/em\u003e, \u003cem\u003eSEGGER J-Link\u003c/em\u003e, and \u003cem\u003eSTM32\u003c/em\u003e templates. Read \u003ca href=\"https://www.jetbrains.com/help/clion/debug-servers.html\" target=\"_blank\" rel=\"noopener\"\u003eour documentation\u003c/a\u003e to learn more about debug servers and when they‚Äôre helpful.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eImproving CLion‚Äôs FreeRTOS integration:\u003c/strong\u003e We plan to make the support of FreeRTOS (an open-source real-time operating system) more flexible. This includes displaying FreeRTOS tasks in the way the feature is implemented for threads and adding the ability to view FreeRTOS objects in the debugger, support for new architectures, such as Arm Cortex-M33, and more (see the \u003ca href=\"https://youtrack.jetbrains.com/issues?q=%23cpp%20tag:%20%7BFreeRTOS%7D\" target=\"_blank\" rel=\"noopener\"\u003elist of related issues\u003c/a\u003e).\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003ch2\u003eSupport for Junie\u003c/h2\u003e\n\n\n\n\u003cp\u003eJetBrains recently \u003ca href=\"https://blog.jetbrains.com/blog/2025/04/16/jetbrains-ides-go-ai/#junie-is-now-available-to-all-users-of-jetbrains-ides\"\u003eintroduced\u003c/a\u003e Junie, an AI coding agent that can serve as a full-fledged pair programmer. It speeds up your development process by answering questions, performing complex tasks, and following guidelines (\u003ca href=\"https://www.jetbrains.com/junie/\" target=\"_blank\" rel=\"noopener\"\u003elearn more\u003c/a\u003e).\u003c/p\u003e\n\n\n\n\u003cp\u003eJunie is already available as a plugin for several JetBrains IDEs, but not yet for CLion. Adding Junie support for CLion comes with its own challenges. We‚Äôre excited about the prospect and are working to make this available in 2025.2. While we can‚Äôt fully confirm this timeline just yet, we want you to know that this is an active area of focus for us.\u003c/p\u003e\n\n\n\n\u003ch2\u003eUI improvements for the \u003cem\u003eProject\u003c/em\u003e tool window\u003c/h2\u003e\n\n\n\n\u003cp\u003eThe \u003ca href=\"https://www.jetbrains.com/help/clion/project-tool-window.html\" target=\"_blank\" rel=\"noopener\"\u003e\u003cem\u003eProject \u003c/em\u003etool window\u003c/a\u003e allows you to navigate through your project‚Äôs directories and files, including external sources such as SD cards, when working on Zephyr or ESP-IDF projects. Currently, it‚Äôs not always easy to distinguish between internal and external sources when looking at their path prefixes displayed in the tool window. For 2025.2, we‚Äôre making several improvements to the \u003cem\u003eProject\u003c/em\u003e tool window UI to help you distinguish external sources more clearly (\u003ca href=\"https://youtrack.jetbrains.com/issue/CPP-33951\" target=\"_blank\" rel=\"noopener\"\u003eCPP-33951\u003c/a\u003e).\u003c/p\u003e\n\n\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\n\n\u003cp\u003eThere‚Äôs more exciting news about CLion just around the corner ‚Äì stay tuned!\u003c/p\u003e\n\n\n\n\u003cp\u003eIn the meantime, we encourage you to check out our latest release, 2025.1, which includes \u003ca href=\"https://blog.jetbrains.com/clion/2025/04/clion-2025-1-release/\"\u003emany great features\u003c/a\u003e for CLion Nova, debugging, embedded development, and project formats.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003ca href=\"https://www.jetbrains.com/clion/download/\" target=\"_blank\" rel=\"noopener\" data-test=\"blog-article-cta\"\u003e\u003ci\u003e\u003c/i\u003eDOWNLOAD CLION 2025.1\u003c/a\u003e\u003c/p\u003e\n                    \n                                                                                                                                                                                                                            \u003cdiv\u003e\n                                \u003cdiv\u003e\n                                                                            \u003ch4\u003eSubscribe to CLion Blog updates\u003c/h4\u003e\n                                                                                                            \n                                \u003c/div\u003e\n                                \n                                \u003cp\u003e\u003cimg src=\"https://blog.jetbrains.com/wp-content/themes/jetbrains/assets/img/img-form.svg\" alt=\"image description\"/\u003e\n                                                                    \u003c/p\u003e\n                            \u003c/div\u003e\n                                                            \u003c/div\u003e\n                \u003ca href=\"#\"\u003e\u003c/a\u003e\n                \n                \n            \u003c/section\u003e\n                    \u003cdiv\u003e\n                \u003cp\u003e\n                    \u003ch2\u003eDiscover more\u003c/h2\u003e\n                \u003c/p\u003e\n                \n            \u003c/div\u003e\n                \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": null,
  "modifiedTime": null
}
