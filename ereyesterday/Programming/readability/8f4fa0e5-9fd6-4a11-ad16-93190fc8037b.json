{
  "id": "8f4fa0e5-9fd6-4a11-ad16-93190fc8037b",
  "title": "Writing Docs With Code Samples? Try Out the New Writerside EAP Release",
  "link": "https://blog.jetbrains.com/writerside/2024/11/writing-docs-with-code-samples-try-out-the-new-writerside-eap-release/",
  "description": "Each Early Access release is designed to make writing documentation easier and more enjoyable. This update is based on your feedback and focuses on improving code blocks, but there is more! Thank you all for sharing your ideas. It‚Äôs a pleasure to keep improving our product for you. Code samples in documentation: Stick to the [‚Ä¶]",
  "author": "Svetlana Novikova",
  "published": "Mon, 11 Nov 2024 15:11:57 +0000",
  "source": "https://blog.jetbrains.com/feed",
  "categories": [
    "eap",
    "news",
    "writerside"
  ],
  "byline": "Svetlana Novikova",
  "length": 6011,
  "excerpt": "Each Early Access release is designed to make writing documentation easier and more enjoyable. This update is based on your feedback and focuses on improving code blocks, but there is more! Thank you",
  "siteName": "The JetBrains Blog",
  "favicon": "https://blog.jetbrains.com/wp-content/uploads/2024/01/cropped-mstile-310x310-1-180x180.png",
  "text": "Each Early Access release is designed to make writing documentation easier and more enjoyable. This update is based on your feedback and focuses on improving code blocks, but there is more! Thank you all for sharing your ideas. It‚Äôs a pleasure to keep improving our product for you. Code samples in documentation: Stick to the basics When I first started thinking about presenting code samples in technical documentation, the initial idea was about advanced features, like interactivity, robust linking between text and code, and sophisticated presentation options, such as substituting placeholders on the fly.¬† However, the recent Unconference session at the Write The Docs Atlantic conference revealed something surprising ‚Äì the most pressing concerns regarding code blocks weren‚Äôt about cutting-edge features, but about getting the fundamentals right. Reality check: Know your audience At the conference, the discussion quickly shifted from ‚ÄúHow can we make our code samples more interactive?‚Äù to ‚ÄúWhat does our audience actually need?‚Äù This pivot highlighted a fundamental truth in technical writing: understanding your readers‚Äô goals is more important than implementing cutting-edge features. The 4 key insights regarding code blocks Context and purpose It‚Äôs not about ‚Äúshort‚Äù versus ‚Äúlong‚Äù code samples ‚Äì what matters is context and purpose. Tutorials need complete, real-world examples. API docs benefit from focused code blocks that demonstrate specific functionality.¬† Copy-paste is the reality¬† There‚Äôs no way around it ‚Äì regardless of experience level, people consistently copy and paste code samples. We can‚Äôt fight it, but we can use code blocks that are complete enough to work even when directly copy-pasted, or that indicate what to do to make them work.¬† As Chris Chinchilla points out in ‚ÄúTechnical Writing for Software Development‚Äù, developers frequently copy and paste a series of code snippets into an editor because it‚Äôs a fundamental part of learning. Different strokes for different folks Code samples serve as learning material, and, like any other learning resource, one size does not fit all ‚Äì different learning styles call for different examples. Beginners might need step-by-step breakdowns, while expert developers might prefer more comprehensive examples that they can tweak to fit their own needs without much hassle. Complementary tools Swagger specs and Postman collections are great companions to documentation, but not replacements. They help users move from learning to doing, once the concepts are clear. Code block maintenance: The hidden challenge As products evolve, keeping code samples up to date is crucial ‚Äì and challenging. How can you efficiently update examples across documentation? When should you remove or deprecate outdated examples? What are the best strategies for version management? These challenges aren‚Äôt new to us at JetBrains. We‚Äôve explored several automation strategies in our previous post about keeping documentation up to date. Building on those insights, we‚Äôre now focusing on code sample maintenance. Chris Chinchilla, in his recent book, outlines two approaches to documentation testing: Manual testing: Writers regularly verify examples from a newcomer‚Äôs perspective. Automated testing: Tests are integrated into CI/CD pipelines for continuous verification. Another approach, called Docs as Tests, is being actively explored by Manny Silva. We highly recommend checking out both Chris‚Äôs book and Manny‚Äôs project for further inspiration. As we continue to evolve Writerside‚Äôs code sample capabilities, we‚Äôre keeping this lesson in mind: the best features aren‚Äôt always the flashiest ‚Äì they‚Äôre the ones that help writers meet their readers‚Äô needs, whoever those readers may be. New in Writerside EAP 9: Code block enhancements The latest Writerside release focuses on practical improvements that directly address common challenges with code blocks: External code block references provides a single source of truth for code samples, reducing maintenance overhead. Enhanced language support ensures accurate syntax highlighting across more programming languages. Native support for .puml and .mermaid files streamlines the integration of diagrams with code samples. Working with code samples? Help us stay up to date We‚Äôve learned that the best documentation improvements come from understanding real-world needs. Have you faced challenges with code samples in documentation? Which features make a difference in your daily work? Whether you‚Äôre a technical writer crafting examples or a software developer, we‚Äôd love to hear your perspective. Join the conversation in our Slack community and help shape the future of code samples in Writerside. But wait, there are more features and improvements! Writerside EAP 9 offers more than just improved code blocks: PDF CLI: Our builder can now produce PDFs alongside the web output. The Good Docs integration: We‚Äôve improved our recent integration of The Good Docs project templates. API documentation generation: You can now generate API docs as a new instance. Table of contents: This long-awaited feature provides a table of contents for topics with API docs. Multi-specification support: Generate documentation from multiple specification files. üëâ Read the full release notes We hope you like the new features. If you have feedback or ideas on how to make Writerside better, we‚Äôd love to hear from you! Subscribe to Writerside Blog updates",
  "image": "https://blog.jetbrains.com/wp-content/uploads/2024/11/wrs-social_share_blog_1280x720_en.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n                                                            \n                    \n\u003cp\u003e\u003cem\u003eEach Early Access release is designed to make writing documentation easier and more enjoyable. This update is based on your feedback and focuses on \u003ca href=\"https://blog.jetbrains.com/writerside/2024/11/writing-docs-with-code-samples-try-out-the-new-writerside-eap-release/#new-in-writerside-eap-9-code-block-enhancements\" data-type=\"link\" data-id=\"https://blog.jetbrains.com/writerside/2024/11/writing-docs-with-code-samples-try-out-the-new-writerside-eap-release/#new-in-writerside-eap-9-code-block-enhancements\"\u003eimproving code blocks\u003c/a\u003e, but \u003ca href=\"https://blog.jetbrains.com/writerside/2024/11/writing-docs-with-code-samples-try-out-the-new-writerside-eap-release/#but-wait,-there-are-more-features-and-improvements\" data-type=\"link\" data-id=\"https://blog.jetbrains.com/writerside/2024/11/writing-docs-with-code-samples-try-out-the-new-writerside-eap-release/#but-wait,-there-are-more-features-and-improvements\"\u003ethere is more\u003c/a\u003e! Thank you all for sharing your ideas. It‚Äôs a pleasure to keep improving our product for you.\u003c/em\u003e\u003c/p\u003e\n\n\n    \n\n\n\n\n\n\n\n\u003ch2\u003eCode samples in documentation: Stick to the basics\u003c/h2\u003e\n\n\n\n\u003cp\u003eWhen I first started thinking about presenting code samples in technical documentation, the initial idea was about advanced features, like interactivity, robust linking between text and code, and sophisticated presentation options, such as substituting placeholders on the fly.¬†\u003c/p\u003e\n\n\n\n\u003cp\u003eHowever, the recent Unconference session at the\u003ca href=\"https://www.writethedocs.org/conf/atlantic/2024/\" target=\"_blank\" rel=\"noopener\"\u003e Write The Docs Atlantic conference\u003c/a\u003e revealed something surprising ‚Äì \u003cmark\u003ethe most pressing concerns regarding code blocks weren‚Äôt about cutting-edge features, but about getting the fundamentals right\u003c/mark\u003e.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" fetchpriority=\"high\" width=\"768\" height=\"758\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/11/wrs_blog_ill2.jpg\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003ch2\u003eReality check: Know your audience\u003c/h2\u003e\n\n\n\n\u003cp\u003eAt the conference, the discussion quickly shifted from ‚ÄúHow can we make our code samples more interactive?‚Äù to ‚ÄúWhat does our audience actually need?‚Äù \u003cmark\u003eThis pivot highlighted a fundamental truth in technical writing: understanding your readers‚Äô goals is more important than implementing cutting-edge features.\u003c/mark\u003e\u003c/p\u003e\n\n\n\n\u003ch2\u003eThe 4 key insights regarding code blocks\u003c/h2\u003e\n\n\n\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eContext and purpose\u003c/strong\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\n\u003cp\u003eIt‚Äôs not about ‚Äúshort‚Äù versus ‚Äúlong‚Äù code samples ‚Äì what matters is context and purpose. Tutorials need complete, real-world examples. API docs benefit from focused code blocks that demonstrate specific functionality.¬†\u003c/p\u003e\n\n\n\n\u003col start=\"2\"\u003e\n\u003cli\u003e\u003cstrong\u003eCopy-paste is the reality¬†\u003c/strong\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\n\u003cp\u003eThere‚Äôs no way around it ‚Äì regardless of experience level, people consistently copy and paste code samples. We can‚Äôt fight it, but we can use code blocks that are complete enough to work even when directly copy-pasted, or that indicate what to do to make them work.¬†\u003c/p\u003e\n\n\n\n\u003cp\u003eAs Chris Chinchilla points out in \u003ca href=\"https://chrischinchilla.com/books/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e‚ÄúTechnical Writing for Software Development‚Äù\u003c/a\u003e, developers frequently copy and paste a series of code snippets into an editor because it‚Äôs a fundamental part of learning.\u003cbr/\u003e\u003c/p\u003e\n\n\n\n\u003col start=\"3\"\u003e\n\u003cli\u003e\u003cstrong\u003eDifferent strokes for different folks\u003c/strong\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\n\u003cp\u003eCode samples serve as learning material, and, like any other learning resource, one size does not fit all ‚Äì \u003ca href=\"https://bau.edu/blog/types-of-learning-styles/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003edifferent learning styles\u003c/a\u003e call for different examples. Beginners might need step-by-step breakdowns, while expert developers might prefer more comprehensive examples that they can tweak to fit their own needs without much hassle.\u003c/p\u003e\n\n\n\n\u003col start=\"4\"\u003e\n\u003cli\u003e\u003cstrong\u003eComplementary tools\u003c/strong\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\n\u003cp\u003eSwagger specs and Postman collections are great companions to documentation, but not replacements. They help users move from learning to doing, once the concepts are clear.\u003c/p\u003e\n\n\n\n\u003ch2\u003eCode block maintenance: The hidden challenge\u003c/h2\u003e\n\n\n\n\u003cp\u003eAs products evolve, keeping code samples up to date is crucial ‚Äì and challenging.\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eHow can you efficiently update examples across documentation?\u003c/li\u003e\n\n\n\n\u003cli\u003eWhen should you remove or deprecate outdated examples?\u003c/li\u003e\n\n\n\n\u003cli\u003eWhat are the best strategies for version management?\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eThese challenges aren‚Äôt new to us at JetBrains. We‚Äôve explored several automation strategies in our \u003ca href=\"https://blog.jetbrains.com/writerside/2022/01/the-holy-grail-of-always-up-to-date-documentation/#automate-wisely\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eprevious post about keeping documentation up to date\u003c/a\u003e. Building on those insights, we‚Äôre now focusing on code sample maintenance.\u003c/p\u003e\n\n\n\n\u003cp\u003eChris Chinchilla, in his recent book, outlines two approaches to documentation testing:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eManual testing\u003c/strong\u003e: Writers regularly verify examples from a newcomer‚Äôs perspective.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eAutomated testing\u003c/strong\u003e: Tests are integrated into CI/CD pipelines for continuous verification.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\n\n\n\n\u003cp\u003eAnother approach, called \u003ca href=\"https://www.docsastests.com/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eDocs as Tests\u003c/a\u003e, is being actively explored by Manny Silva. We highly recommend checking out both Chris‚Äôs book and Manny‚Äôs project for further inspiration.\u003c/p\u003e\n\n\n\n\u003cp\u003eAs we continue to evolve Writerside‚Äôs code sample capabilities, we‚Äôre keeping this lesson in mind: \u003cmark\u003ethe best features aren‚Äôt always the flashiest ‚Äì they‚Äôre the ones that help writers meet their readers‚Äô needs, whoever those readers may be.\u003c/mark\u003e\u003c/p\u003e\n\n\n\n\u003ch2\u003eNew in Writerside EAP 9: Code block enhancements\u003c/h2\u003e\n\n\n\n\u003cp\u003eThe latest Writerside release focuses on practical improvements that directly address common challenges with code blocks:\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eExternal code block references\u003c/strong\u003e provides a single source of truth for code samples, reducing maintenance overhead.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cvideo controls=\"\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/11/lana_codeblocks_src.mp4\"\u003e\u003c/video\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eEnhanced language support\u003c/strong\u003e ensures accurate syntax highlighting across more programming languages.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cvideo controls=\"\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/11/lana_codeblocks_highligting.mp4\"\u003e\u003c/video\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eNative support for .puml and .mermaid files\u003c/strong\u003e streamlines the integration of diagrams with code samples.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cvideo controls=\"\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/11/lana_codeblocks_mermaid.mp4\"\u003e\u003c/video\u003e\u003c/figure\u003e\n\n\n\n\u003ch3\u003eWorking with code samples? Help us stay up to date\u003c/h3\u003e\n\n\n\n\u003cp\u003eWe‚Äôve learned that the best documentation improvements come from understanding real-world needs. Have you faced challenges with code samples in documentation? Which features make a difference in your daily work? \u003c/p\u003e\n\n\n\n\u003cp\u003eWhether you‚Äôre a technical writer crafting examples or a software developer, we‚Äôd love to hear your perspective. Join the conversation in our Slack community and help shape the future of code samples in Writerside.\u003c/p\u003e\n\n\n    \n\n\n\n\n\n\n\n\u003ch2\u003eBut wait, there are more features and improvements!\u003c/h2\u003e\n\n\n\n\u003cp\u003eWriterside EAP 9 offers more than just improved code blocks:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003ePDF CLI\u003c/strong\u003e: Our builder can now produce PDFs alongside the web output.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eThe Good Docs integration\u003c/strong\u003e: We‚Äôve improved \u003ca href=\"https://blog.jetbrains.com/writerside/2024/09/new-in-writerside-the-good-docs-project-templates-right-in-your-editor/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eour recent integration of The Good Docs project templates\u003c/a\u003e.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eAPI documentation generation\u003c/strong\u003e: You can now generate API docs as a new instance.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eTable of contents\u003c/strong\u003e: This long-awaited feature provides a table of contents for topics with API docs.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eMulti-specification support\u003c/strong\u003e: Generate documentation from multiple specification files.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\n\n\n\n\u003cp\u003eüëâ \u003ca href=\"https://www.jetbrains.com/help/writerside/21565.html#other-fixes-and-improvements\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eRead the full release notes\u003c/a\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003eWe hope you like the new features. If you have feedback or ideas on how to make Writerside better, we‚Äôd love to hear from you!\u003c/p\u003e\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                    \n                                                                                                                                                                                                                            \u003cdiv\u003e\n                                \u003cdiv\u003e\n                                                                            \u003ch4\u003eSubscribe to Writerside Blog updates\u003c/h4\u003e\n                                                                                                            \n                                \u003c/div\u003e\n                                \n                                \u003cp\u003e\u003cimg src=\"https://blog.jetbrains.com/wp-content/themes/jetbrains/assets/img/img-form.svg\" alt=\"image description\"/\u003e\n                                                                    \u003c/p\u003e\n                            \u003c/div\u003e\n                                                            \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": null,
  "modifiedTime": null
}
