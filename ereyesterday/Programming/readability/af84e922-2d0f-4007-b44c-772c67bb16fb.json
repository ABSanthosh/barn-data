{
  "id": "af84e922-2d0f-4007-b44c-772c67bb16fb",
  "title": "Amazon Aurora DSQL: Distributed SQL Database with Active-Active High Availability",
  "link": "https://www.infoq.com/news/2024/12/amazon-aurora-dsql/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "At the recent AWS re:Invent conference in Las Vegas, Amazon announced the public preview of Aurora DSQL, a serverless, distributed SQL database featuring active-active high availability. This new PostgreSQL-compatible database option has generated significant excitement within the AWS community and was widely regarded by attendees as the standout announcement of the conference. By Renato Losio",
  "author": "Renato Losio",
  "published": "Tue, 17 Dec 2024 00:07:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "AWS",
    "Database Design",
    "Amazon",
    "Database Replication",
    "Postgres",
    "Cloud",
    "Database",
    "Relational Databases",
    "Amazon RDS",
    "Architecture \u0026 Design",
    "AI, ML \u0026 Data Engineering",
    "news"
  ],
  "byline": "Renato Losio",
  "length": 5187,
  "excerpt": "At the recent AWS re:Invent conference in Las Vegas, Amazon announced the public preview of Aurora DSQL, a serverless, distributed SQL database featuring active-active high availability. This new Post",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s1_20241210082243/apple-touch-icon.png",
  "text": "At the recent AWS re:Invent conference in Las Vegas, Amazon announced the public preview of Aurora DSQL, a serverless, distributed SQL database featuring active-active high availability. This new PostgreSQL-compatible database option has generated significant excitement within the AWS community and was widely regarded by attendees as the standout announcement of the conference. Aurora DSQL is a distributed SQL database that claims unlimited scalability, 99.99% single-region availability, and 99.999% multi-region active-active availability. The database handles horizontal scaling, multi-region active-active operations, connection management, and scale-to-zero, a long-awaited feature recently added to Aurora. Luc van Donkersgoed, principal engineer at PostNL, writes: IT'S HERE! Amazon Aurora Distributed SQL (DSQL). It's DynamoDB and Postgres merged into a truly serverless relational database. This is THE announcement of Re:Invent 2024. Everything else is irrelevant. Aurora already offered PostgreSQL-compatible databases spanning multiple regions through Global Database, but the technology behind DSQL is significantly different. In DSQL, both regions operate in active-active mode, accepting writes and cross-replicating data. In contrast, Global Database can only replicate data from one region to another, with only one region allowed to write to the database. The secondary region acts as a read-only replica and can be promoted to primary if needed. In a single-region configuration, Aurora DSQL commits all write transactions to a distributed transaction log and synchronously replicates the committed log data to user storage replicas across three availability zones. In a multi-region configuration, the clusters improve availability through two regional endpoints, one for each linked cluster region. Introducing the new service, Raluca Constantin, senior database engineer at AWS, and Arun Sankaranarayanan, specialist solution architect at AWS, write: Both endpoints of a linked cluster present a single logical database and support concurrent read and write operations with strong data consistency. This allows you to balance applications and connections for geographic locations, performance, or resiliency purposes, making sure readers consistently see the same data. A third region acts as the witness region, receiving data written to linked clusters and storing a limited window of encrypted transaction logs to ensure multi-region durability and availability. Source: AWS blog As explained in a separate article, Aurora DSQL employs optimistic concurrency control (OCC) instead of the traditional locking approach. Rajesh Kantamani, senior database specialist at AWS, and Prasad Matkar, database specialist at AWS, write: Using OCC with Aurora DSQL is well-suited due to its distributed architecture, because it allows for higher throughput and system efficiency by avoiding the need for resource locking during transaction execution. The cloud provider highlights that OCC not only prevents a single slow transaction from impacting or slowing down other transactions but also provides better scalability for query processing and a more robust cluster to realistic failures. This is achieved by avoiding reliance on locking mechanisms, which can lead to deadlocks or performance bottlenecks. Marc Brooker, VP and distinguished engineer at AWS, has released a series of technical articles sharing insights into the implementation of Aurora DSQL. He describes how transaction latency remains constant relative to the transaction statement count, even across regions. Brooker also explains how writes, conflict detection, and durability are managed, as well as the implementation of transaction isolation and query performance. These articles have proven popular, and his deep-dive session at the conference is now available on YouTube. Source: Brooker's blog Many in the community view the new offering as AWS challenging PostgreSQL-compatible Neon, Cloudflare D1, and Google Cloud Spanner. By separating transaction logic from the storage layer and processing transactions with strong consistency, Amazonâ€™s CEO claimed on stage that the new database delivers reads and writes that are four times faster than Spanner. The reaction on Hacker News has been mixed, with many developers highlighting a significant set of limitations. While the implementation relies on AWS precision time infrastructure which provides an accurate clock with strong error bounds, some experts see DSQL an inspiring project for open-source databases. User Edwinr95 writes instead: No temporary tables, no foreign keys, no views, no more than 10k rows in a transaction. Except for some basic wire compatibility with the Postgres protocol, I'd hardly call this a \"database\", and more a key-value store. The new service aims to provide low latency and synchronous replication worldwide. However, the public preview is currently available only in three US regions: Northern Virginia, Ohio, and Oregon. About the Author Renato Losio",
  "image": "https://res.infoq.com/news/2024/12/amazon-aurora-dsql/en/headerimage/generatedHeaderImage-1733674190953.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eAt the recent AWS re:Invent conference in Las Vegas, Amazon announced \u003ca href=\"https://aws.amazon.com/about-aws/whats-new/2024/12/amazon-aurora-dsql-preview/\"\u003ethe public preview of Aurora DSQL\u003c/a\u003e, a serverless, distributed SQL database featuring active-active high availability. This new PostgreSQL-compatible database option has generated significant excitement within the AWS community and was widely regarded by attendees as the standout announcement of the conference.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://aws.amazon.com/about-aws/whats-new/2024/12/amazon-aurora-dsql-preview/\"\u003eAurora DSQL\u003c/a\u003e is a distributed SQL database that claims unlimited scalability, 99.99% single-region availability, and 99.999% multi-region active-active availability. The database handles horizontal scaling, multi-region active-active operations, connection management, and \u003ca href=\"https://www.infoq.com/news/2024/12/aurora-serverless-zero-capacity/\"\u003escale-to-zero\u003c/a\u003e, a long-awaited feature recently added to Aurora. Luc van Donkersgoed, principal engineer at PostNL, \u003ca href=\"https://www.linkedin.com/posts/donkersgoed_announcing-amazon-aurora-dsql-preview-activity-7269762594821877761-ZKor\"\u003ewrites\u003c/a\u003e:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIT\u0026#39;S HERE! Amazon Aurora Distributed SQL (DSQL). It\u0026#39;s DynamoDB and Postgres merged into a truly serverless relational database. This is THE announcement of Re:Invent 2024. Everything else is irrelevant.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAurora already offered \u003ca href=\"https://docs.aws.amazon.com/aurora-dsql/latest/userguide/working-with-postgresql-compatibility.html\"\u003ePostgreSQL-compatible\u003c/a\u003e databases spanning multiple regions through \u003ca href=\"https://www.infoq.com/news/2024/11/aurora-global-database-writer/\"\u003eGlobal Database\u003c/a\u003e, but the technology behind DSQL is significantly different. In DSQL, both regions operate in active-active mode, accepting writes and cross-replicating data. In contrast, Global Database can only replicate data from one region to another, with only one region allowed to write to the database. The secondary region acts as a read-only replica and can be promoted to primary if needed.\u003c/p\u003e\n\n\u003cp\u003eIn a single-region configuration, Aurora DSQL commits all write transactions to a distributed transaction log and synchronously replicates the committed log data to user storage replicas across three availability zones. In a multi-region configuration, the clusters improve availability through two regional endpoints, one for each linked cluster region. \u003ca href=\"https://aws.amazon.com/blogs/database/introducing-amazon-aurora-dsql/\"\u003eIntroducing the new service\u003c/a\u003e, \u003ca href=\"https://www.linkedin.com/in/constantinraluca/\"\u003eRaluca Constantin\u003c/a\u003e, senior database engineer at AWS, and \u003ca href=\"https://www.linkedin.com/in/aruns10/\"\u003eArun Sankaranarayanan\u003c/a\u003e, specialist solution architect at AWS, write:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eBoth endpoints of a linked cluster present a single logical database and support concurrent read and write operations with strong data consistency. This allows you to balance applications and connections for geographic locations, performance, or resiliency purposes, making sure readers consistently see the same data.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eA third region acts as the witness region, receiving data written to linked clusters and storing a limited window of encrypted transaction logs to ensure multi-region durability and availability.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"\" data-src=\"news/2024/12/amazon-aurora-dsql/en/resources/1DBBLOG-4404-img1-1733674398085.png\" src=\"https://imgopt.infoq.com/fit-in/3000x4000/filters:quality(85)/filters:no_upscale()/news/2024/12/amazon-aurora-dsql/en/resources/1DBBLOG-4404-img1-1733674398085.png\" rel=\"share\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eSource: AWS blog\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eAs explained in a \u003ca href=\"https://aws.amazon.com/blogs/database/concurrency-control-in-amazon-aurora-dsql/\"\u003eseparate article\u003c/a\u003e, Aurora DSQL employs optimistic concurrency control (OCC) instead of the traditional locking approach. \u003ca href=\"https://www.linkedin.com/in/rkantamani/\"\u003eRajesh Kantamani\u003c/a\u003e, senior database specialist at AWS, and \u003ca href=\"https://www.linkedin.com/in/prasad-matkar-37063715/\"\u003ePrasad Matkar\u003c/a\u003e, database specialist at AWS, write:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eUsing OCC with Aurora DSQL is well-suited due to its distributed architecture, because it allows for higher throughput and system efficiency by avoiding the need for resource locking during transaction execution.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe cloud provider highlights that OCC not only prevents a single slow transaction from impacting or slowing down other transactions but also provides better scalability for query processing and a more robust cluster to realistic failures. This is achieved by avoiding reliance on locking mechanisms, which can lead to deadlocks or performance bottlenecks.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.linkedin.com/in/marc-brooker-b431772b/\"\u003eMarc Brooker\u003c/a\u003e, VP and distinguished engineer at AWS, has released a series of technical articles sharing \u003ca href=\"https://brooker.co.za/blog/2024/12/03/aurora-dsql.html\"\u003einsights into the implementation of Aurora DSQL\u003c/a\u003e. He describes how transaction latency remains constant relative to the transaction statement count, even across regions. Brooker also explains how \u003ca href=\"https://brooker.co.za/blog/2024/12/05/inside-dsql-writes.html\"\u003ewrites, conflict detection, and durability\u003c/a\u003e are managed, as well as the implementation of \u003ca href=\"https://brooker.co.za/blog/2024/12/04/inside-dsql.html\"\u003etransaction isolation and query performance\u003c/a\u003e. These articles \u003ca href=\"https://www.linkedin.com/posts/kostas-papageorgiou-b7886535_distributed-sql-databases-amazon-aurora-activity-7270403501652930560-aNx2?utm_source=share\u0026amp;utm_medium=member_desktop\"\u003ehave proven popular\u003c/a\u003e, and his \u003ca href=\"https://www.youtube.com/watch?v=huGmR_mi5dQ\"\u003edeep-dive session\u003c/a\u003e at the conference is now available on YouTube.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"\" data-src=\"news/2024/12/amazon-aurora-dsql/en/resources/11205_write_arch-1733674785953.jpg\" src=\"https://imgopt.infoq.com/fit-in/3000x4000/filters:quality(85)/filters:no_upscale()/news/2024/12/amazon-aurora-dsql/en/resources/11205_write_arch-1733674785953.jpg\" rel=\"share\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eSource: Brooker\u0026#39;s blog\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eMany in the community view the new offering as AWS \u003ca href=\"https://www.linkedin.com/feed/update/urn:li:activity:7270193153175912448?commentUrn=urn%3Ali%3Acomment%3A%28activity%3A7270193153175912448%2C7270279965391101954%29\u0026amp;replyUrn=urn%3Ali%3Acomment%3A%28activity%3A7270193153175912448%2C7270590870121263105%29\u0026amp;dashCommentUrn=urn%3Ali%3Afsd_comment%3A%287270279965391101954%2Curn%3Ali%3Aactivity%3A7270193153175912448%29\u0026amp;dashReplyUrn=urn%3Ali%3Afsd_comment%3A%287270590870121263105%2Curn%3Ali%3Aactivity%3A7270193153175912448%29\"\u003echallenging PostgreSQL-compatible Neon\u003c/a\u003e, Cloudflare D1, and Google Cloud Spanner. By separating transaction logic from the storage layer and processing transactions with strong consistency, Amazonâ€™s CEO claimed on stage that the new database delivers reads and writes that are four times faster than Spanner.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://news.ycombinator.com/item?id=42308716\"\u003ereaction on Hacker News\u003c/a\u003e has been mixed, with many developers highlighting a significant set of limitations. While the implementation relies on \u003ca href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/set-time.html\"\u003eAWS precision time infrastructure\u003c/a\u003e which provides an accurate clock with strong error bounds, some experts see DSQL an \u003ca href=\"https://www.linkedin.com/posts/peterzaitsev_distributed-sql-databases-amazon-aurora-activity-7270193153175912448-IReA?utm_source=share\u0026amp;utm_medium=member_desktop\"\u003einspiring project for open-source databases\u003c/a\u003e. User \u003cem\u003eEdwinr95\u003c/em\u003e writes instead:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eNo temporary tables, no foreign keys, no views, no more than 10k rows in a transaction. Except for some basic wire compatibility with the Postgres protocol, I\u0026#39;d hardly call this a \u0026#34;database\u0026#34;, and more a key-value store.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe new service aims to provide low latency and synchronous replication worldwide. However, the public preview is currently available only in three US regions: Northern Virginia, Ohio, and Oregon.\u003c/p\u003e\n\n\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Renato-Losio\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eRenato Losio\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": "2024-12-17T00:00:00Z",
  "modifiedTime": null
}
