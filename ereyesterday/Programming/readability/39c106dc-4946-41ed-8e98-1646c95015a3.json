{
  "id": "39c106dc-4946-41ed-8e98-1646c95015a3",
  "title": "Little Feed Reader on Bluesky",
  "link": "http://scripting.com/2025/01/02/143149.html?title=littleFeedReaderOnBluesky",
  "description": "My little feed reader on Bluesky is ready for you to follow. Technically, this is how the pieces fit together. I'm using the OPML file for my blogroll category on feedland.social to determine what's posted on Bluesky. When I add or remove feeds from the category, the OPML adjusts dynamically. I'm running a new Node app that has a websocket connection to feedland.social. It receives all the new items as they are found from all feeds over the socket. It's feedland.social's firehose. Since I'm currently the only user of that server, it's getting news from the all feeds I follow, not just the ones in the blogroll category. The Node app checks each new item to see if it's in one of the feeds in the OPML list. If so, it reformats it to fit in a Bluesky post and sends it to the feediverse account. If you're subscribed you should see the item, with a link, in your Bluesky timeline. Notes. The Node app re-loads the OPML subscription list every minute so any change is quickly reflected. It's the same blogroll you see on my blog's home page. The biggest problem in getting this running was rate-limiting. I have dealt with this on Twitter and other services, but Bluesky was not, for a while, letting anything through with the error message that we were over the limit. It was suggested that we should cache the accessToken rather get a new one for every message. I did that and cautiously turned the server on again at first with a 5 message per hour self-imposed limit, then gradually increased it to 10 per hour. The latest version only requires that there be at least five minutes between posts, so that means no more than 12 per hour. Thanks to Mark Cuban for the initial idea and his support. He saw a river of news from FeedLand and asked if it could work in Bluesky. That was the idea. I have always wanted a tight coupling between Bluesky and RSS but didn't know how to do it. We may have just skipped a step. We realllly could use some more formating features in Bluesky messages. This is a really strong use-case imho for the textcasting idea. The coolest thing from my point of view is that I already had all the pieces, fully developed, the only thing that remained was to hook them together. Finally, there's a this.how page for Little Feed Reader. It's purposely brief, but I have put a link to this post on that page.",
  "author": "",
  "published": "Thu, 02 Jan 2025 14:31:49 GMT",
  "source": "http://scripting.com/rss.xml",
  "categories": null,
  "byline": "",
  "length": 2454,
  "excerpt": "Dave Winer, OG blogger, podcaster, developed first apps in many categories. Old enough to know better. It's even worse than it appears.",
  "siteName": "Scripting News",
  "favicon": "",
  "text": "It's even worse than it appears.. Thursday January 2, 2025; 9:31 AM EST My little feed reader on Bluesky is ready for you to follow.# Technically, this is how the pieces fit together.# I'm using the OPML file for my blogroll category on feedland.social to determine what's posted on Bluesky. When I add or remove feeds from the category, the OPML adjusts dynamically.# I'm running a new Node app that has a websocket connection to feedland.social. It receives all the new items as they are found from all feeds over the socket. It's feedland.social's firehose. Since I'm currently the only user of that server, it's getting news from the all feeds I follow, not just the ones in the blogroll category. # The Node app checks each new item to see if it's in one of the feeds in the OPML list. If so, it reformats it to fit in a Bluesky post and sends it to the feediverse account. # If you're subscribed you should see the item, with a link, in your Bluesky timeline.# Notes.# The Node app re-loads the OPML subscription list every minute so any change is quickly reflected.# It's the same blogroll you see on my blog's home page.# The biggest problem in getting this running was rate-limiting. I have dealt with this on Twitter and other services, but Bluesky was not, for a while, letting anything through with the error message that we were over the limit. It was suggested that we should cache the accessToken rather get a new one for every message. I did that and cautiously turned the server on again at first with a 5 message per hour self-imposed limit, then gradually increased it to 10 per hour. The latest version only requires that there be at least five minutes between posts, so that means no more than 12 per hour. # Thanks to Mark Cuban for the initial idea and his support. He saw a river of news from FeedLand and asked if it could work in Bluesky. That was the idea. I have always wanted a tight coupling between Bluesky and RSS but didn't know how to do it. We may have just skipped a step. # We realllly could use some more formating features in Bluesky messages. This is a really strong use-case imho for the textcasting idea. # The coolest thing from my point of view is that I already had all the pieces, fully developed, the only thing that remained was to hook them together. # Finally, there's a this.how page for Little Feed Reader. It's purposely brief, but I have put a link to this post on that page. #",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"idPageTopText\"\u003e\n\t\n\t\u003cp\u003eIt\u0026#39;s even worse than it appears..\u003c/p\u003e\n\t\u003c/div\u003e\u003cdiv id=\"idDayContainer\"\u003e\u003cp\u003eThursday January 2, 2025; 9:31 AM EST\u003c/p\u003e\u003cul\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a153335\"\u003e\u003c/a\u003eMy \u003ca href=\"https://bsky.app/profile/did:plc:fkwl6tbnev3vdx63bippmscy\"\u003elittle feed reader\u003c/a\u003e on Bluesky is \u003ca href=\"https://bsky.app/profile/did:plc:oety7qbfx7x6exn2ytrwikmr/post/3lerbu7ugvc2i\"\u003eready\u003c/a\u003e for you to follow.\u003cspan\u003e\u003ca href=\"http://scripting.com/2025/01/02/143149.html#a153335\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flnumberedsubs=\"true\" data-flincalendar=\"true\"\u003e\u003ca name=\"a143238\"\u003e\u003c/a\u003eTechnically, this is how the pieces fit together.\u003cspan\u003e\u003ca href=\"http://scripting.com/2025/01/02/143149.html#a143238\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cul\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a143249\"\u003e\u003c/a\u003eI\u0026#39;m using the \u003ca href=\"https://viewfeedlist.opml.org/?url=https%3A%2F%2Ffeedland.social%2Fopml%3Fscreenname%3Ddavewiner%26catname%3Dblogroll\"\u003eOPML file\u003c/a\u003e for my \u003ci\u003eblogroll\u003c/i\u003e category on feedland.social to determine what\u0026#39;s posted on Bluesky. When I add or remove feeds from the category, the OPML adjusts dynamically.\u003cspan\u003e\u003ca href=\"http://scripting.com/2025/01/02/143149.html#a143249\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a143424\"\u003e\u003c/a\u003eI\u0026#39;m running a new Node app that has a \u003ca href=\"https://javascript.info/websocket\"\u003ewebsocket\u003c/a\u003e connection to feedland.social. It receives all the new items as they are found from all feeds over the socket. It\u0026#39;s feedland.social\u0026#39;s \u003ca href=\"https://www.pubnub.com/learn/glossary/firehose-api/\"\u003efirehose\u003c/a\u003e. Since I\u0026#39;m currently the only user of that server, it\u0026#39;s getting news from the all feeds I follow, not just the ones in the blogroll category. \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/01/02/143149.html#a143424\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a143553\"\u003e\u003c/a\u003eThe Node app checks each new item to see if it\u0026#39;s in one of the feeds in the OPML list. If so, it reformats it to fit in a Bluesky post and sends it to the \u003ca href=\"https://bsky.app/profile/did:plc:fkwl6tbnev3vdx63bippmscy\"\u003efeediverse account\u003c/a\u003e.  \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/01/02/143149.html#a143553\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a144004\"\u003e\u003c/a\u003eIf you\u0026#39;re subscribed you should see the item, with a link, in your Bluesky timeline.\u003cspan\u003e\u003ca href=\"http://scripting.com/2025/01/02/143149.html#a144004\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003c/ul\u003e\n\n\t\u003cli data-flnumberedsubs=\"true\" data-flincalendar=\"true\"\u003e\u003ca name=\"a144426\"\u003e\u003c/a\u003e\u003cb\u003eNotes\u003c/b\u003e.\u003cspan\u003e\u003ca href=\"http://scripting.com/2025/01/02/143149.html#a144426\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cul\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a145338\"\u003e\u003c/a\u003eThe Node app re-loads the OPML subscription list every minute so any change is quickly reflected.\u003cspan\u003e\u003ca href=\"http://scripting.com/2025/01/02/143149.html#a145338\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a150007\"\u003e\u003c/a\u003eIt\u0026#39;s the same \u003ca href=\"https://blogroll.social/\"\u003eblogroll\u003c/a\u003e you \u003ca href=\"https://imgs.scripting.com/2024/03/13/expandedBlogScreen.png\"\u003esee\u003c/a\u003e on my \u003ca href=\"http://scripting.com/\"\u003eblog\u0026#39;s home page\u003c/a\u003e.\u003cspan\u003e\u003ca href=\"http://scripting.com/2025/01/02/143149.html#a150007\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a144431\"\u003e\u003c/a\u003eThe biggest \u003ca href=\"https://github.com/scripting/textcasting/issues/1\"\u003eproblem\u003c/a\u003e in getting this running was rate-limiting. I have dealt with this on Twitter and other services, but Bluesky was not, for a while, letting anything through with the error message that we were over the limit. It was suggested that we should cache the accessToken rather get a new one for every message. I did that and cautiously turned the server on again at first with a 5 message per hour self-imposed limit, then gradually increased it to 10 per hour. The latest version only requires that there be at least five minutes between posts, so that means no more than 12 per hour. \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/01/02/143149.html#a144431\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a143233\"\u003e\u003c/a\u003eThanks to \u003ca href=\"https://bsky.app/profile/mcuban.bsky.social/post/3lerhvj52pk27\"\u003eMark Cuban\u003c/a\u003e for the initial idea and his support. He saw a \u003ca href=\"https://news.scripting.com/\"\u003eriver of news\u003c/a\u003e from \u003ca href=\"https://feedland.com/\"\u003eFeedLand\u003c/a\u003e and asked if it could work in Bluesky. That was the idea. I have always wanted a tight coupling between Bluesky and \u003ca href=\"https://cyber.harvard.edu/rss/rss.html\"\u003eRSS\u003c/a\u003e but didn\u0026#39;t know how to do it. We may have just skipped a step. \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/01/02/143149.html#a143233\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a144203\"\u003e\u003c/a\u003eWe realllly could use some more formating features in Bluesky messages. This is a really strong use-case imho for the \u003ca href=\"https://textcasting.org/\"\u003etextcasting\u003c/a\u003e idea. \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/01/02/143149.html#a144203\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a153542\"\u003e\u003c/a\u003eThe coolest thing from my point of view is that I already had all the pieces, fully developed, the only thing that remained was to hook them together. \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/01/02/143149.html#a153542\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a150745\"\u003e\u003c/a\u003eFinally, there\u0026#39;s a \u003ca href=\"https://this.how/feediverse/bluesky/\"\u003ethis.how page\u003c/a\u003e for Little Feed Reader. It\u0026#39;s purposely brief, but I have put a link to this post on that page. \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/01/02/143149.html#a150745\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003c/ul\u003e\n\n\t\u003c/ul\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": null,
  "modifiedTime": null
}
