{
  "id": "0c1f62b4-c55c-4dfb-893c-f715f90ea56d",
  "title": "CLion 2024.3 EAP 5: Support for the Call Hierarchy in CLion Nova and the New Project Status Widget",
  "link": "https://blog.jetbrains.com/clion/2024/10/clion-2024-3-eap-5/",
  "description": "A new CLion 2024.3 EAP build, 243.20847.43, is out. You can download it for free from the link below, via the Toolbox App, or as a snap package if you’re using Ubuntu. DOWNLOAD CLION 2024.3 EAP This build introduces two major features: support for function call hierarchy in CLion Nova and a new project status […]",
  "author": "Oleg Zinovyev",
  "published": "Mon, 21 Oct 2024 16:53:00 +0000",
  "source": "https://blog.jetbrains.com/feed",
  "categories": [
    "eap",
    "news",
    "clionnova",
    "cmake",
    "debugger"
  ],
  "byline": "Oleg Zinovyev",
  "length": 4941,
  "excerpt": "A new CLion 2024.3 EAP build, 243.20847.43, is out. You can download it for free from the link below, via the Toolbox App, or as a snap package if you’re using Ubuntu. DOWNLOAD CLION 2024.3 EAP",
  "siteName": "The JetBrains Blog",
  "favicon": "https://blog.jetbrains.com/wp-content/uploads/2024/01/cropped-mstile-310x310-1-180x180.png",
  "text": "A Cross-Platform IDE for C and C++ Early Access Program NewsCLion 2024.3 EAP 5: Support for the Call Hierarchy in CLion Nova and the New Project Status Widget A new CLion 2024.3 EAP build, 243.20847.43, is out. You can download it for free from the link below, via the Toolbox App, or as a snap package if you’re using Ubuntu. DOWNLOAD CLION 2024.3 EAP This build introduces two major features: support for function call hierarchy in CLion Nova and a new project status widget in the status bar, replacing the banner notifications in the editor. Some important bug fixes also improve the debugger and CMake project behavior. Support for the call hierarchy in CLion Nova Function call hierarchy support was one of the most requested features in CLion Nova (CPP-22675), and we’ve added it in this EAP build. The call hierarchy is available in the Hierarchy tool window, showing all the places where a given function is used, caller and callee hierarchies, new icons to indicate recursive calls, and more. This feature helps you better understand how your functions interact. It’s particularly handy when you’re working on projects with multiple functions that call one another non-trivially. The call hierarchy is also useful as a debugging aid. For example, when you make changes to functions, you can easily see the impact of those changes. To view the call hierarchy, select a function in the editor, and then choose Navigate | Call Hierarchy from the main menu or use the shortcut ⌃⌥H (macOS) or Ctrl+Alt+H (Windows/Linux). To learn more about other code hierarchies available in CLion, see this web help article. Project status widget Project status notifications inform you of potential problems with your project configuration and offer ways to resolve them. In version 2024.2, they are displayed as yellow banners in the editor until the problem is resolved. We’ve received a number of complaints suggesting that these notifications are irrelevant in various use cases. For example, some users just want to open a .cpp file from a third-party project to test or read the code. Some deliberately use a build system that CLion doesn’t support. In such cases, it makes no sense to have a notification banner hanging in the editor all the time. So, we’ve decided to make these notifications less distracting by moving them from the top of the editor to a new widget in the status bar. Now, if you create a new .cpp file in your project, for example, the ⚠️ icon will appear. The notification that your file doesn’t belong to any project won’t appear until you hover over the icon. When you click on the icon, the widget will offer to add the file to the CMake project. If you don’t need it, you can close the pop-up, leaving only the icon in the status bar. Additionally, when the widget sees a Makefile, Bazel, or compilation database file, it gives you the option to load the corresponding project. Other improvements A couple of bug fixes are also worth highlighting: When attaching to an unstarted process while debugging, the IDE now only selects processes that belong to the current user. This prevents situations where you accidentally try to attach to someone else’s process and get an error. Reloading a CMake project using the Reset Cache and Reload Project option no longer results in an error when the FTP/SFTP/WebDAV Connectivity plugin is disabled. DOWNLOAD CLION 2024.3 EAP Call for feedback Your feedback is important to us, as your experiences and insights are essential to our mission of continuously improving CLion. Please share your ideas in the comments section below or submit them to our issue tracker. We would also be interested in setting up a quick call with you to learn more about your specific use cases. Let us know if you would like to participate! Your CLion teamJetBrainsThe Drive to Develop Subscribe to CLion Blog updates Discover more",
  "image": "https://blog.jetbrains.com/wp-content/uploads/2024/10/Social_Share_Blog_1280x720-2x-2.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"main\"\u003e\n    \u003cdiv\u003e\n                        \u003ca href=\"https://blog.jetbrains.com/clion/\"\u003e\n                            \u003cimg src=\"https://blog.jetbrains.com/wp-content/uploads/2019/01/CLion-1.svg\" alt=\"Clion logo\"/\u003e\n                                                                                                \n                                                                                    \u003c/a\u003e\n                                                    \u003cp\u003eA Cross-Platform IDE for C and C++\u003c/p\u003e\n                                            \u003c/div\u003e\n                            \u003csection data-clarity-region=\"article\"\u003e\n                \u003cdiv\u003e\n                    \t\t\t\t\u003cp\u003e\u003ca href=\"https://blog.jetbrains.com/clion/category/eap/\"\u003eEarly Access Program\u003c/a\u003e\n\t\t\t\u003ca href=\"https://blog.jetbrains.com/clion/category/news/\"\u003eNews\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"major-updates\"\u003eCLion 2024.3 EAP 5: Support for the Call Hierarchy in CLion Nova and the New Project Status Widget\u003c/h2\u003e                    \n                    \n\u003cp\u003eA new CLion 2024.3 EAP build, 243.20847.43, is out. You can download it for free from the link below, via the \u003ca href=\"https://www.jetbrains.com/toolbox-app/\" target=\"_blank\" rel=\"noopener\"\u003eToolbox App\u003c/a\u003e, or as a snap package if you’re using Ubuntu.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003ca href=\"https://www.jetbrains.com/clion/nextversion/\" target=\"_blank\" rel=\"noopener\" data-test=\"blog-article-cta\"\u003e\u003ci\u003e\u003c/i\u003eDOWNLOAD CLION 2024.3 EAP\u003c/a\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003eThis build introduces two major features: support for function call hierarchy in CLion Nova and a new project status widget in the status bar, replacing the banner notifications in the editor. Some important bug fixes also improve the debugger and CMake project behavior.\u003c/p\u003e\n\n\n\n\u003ch2\u003eSupport for the call hierarchy in CLion Nova\u003c/h2\u003e\n\n\n\n\u003cp\u003eFunction call hierarchy support was one of the most requested features in CLion Nova (\u003ca href=\"https://youtrack.jetbrains.com/issue/CPP-22675\" target=\"_blank\" rel=\"noopener\"\u003eCPP-22675\u003c/a\u003e), and we’ve added it in this EAP build. The call hierarchy is available in the \u003cem\u003eHierarchy\u003c/em\u003e tool window, showing all the places where a given function is used, caller and callee hierarchies, \u003ca href=\"https://blog.jetbrains.com/clion/2024/09/2024-3-eap-open/#language-specific-improvements\"\u003enew icons to indicate recursive calls\u003c/a\u003e, and more.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXfyXR515oP24E74RaMDZ7wGckymwEnupycG4A92hWnnLpFzk7a-xfW6rqtm6yuMxDnJ3QHaJFa2e7lJw6W4iBhkauBkZ5ozGOx78Q4TbYhSZSZkDIQqqVVl-jPEcZUoLRdxBINM-iYnqPwJ68mkkixjqiUQ?key=ukJj6aYX5st9i7-oLqljJg\" alt=\"Call hierarchy tool window\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eThis feature helps you better understand how your functions interact. It’s particularly handy when you’re working on projects with multiple functions that call one another non-trivially. The call hierarchy is also useful as a debugging aid. For example, when you make changes to functions, you can easily see the impact of those changes.\u003c/p\u003e\n\n\n\n\u003cp\u003eTo view the call hierarchy, select a function in the editor, and then choose \u003cem\u003eNavigate\u003c/em\u003e | \u003cem\u003eCall Hierarchy\u003c/em\u003e from the main menu or use the shortcut \u003cem\u003e⌃⌥H\u003c/em\u003e (macOS) or \u003cem\u003eCtrl+Alt+H\u003c/em\u003e (Windows/Linux). To learn more about other code hierarchies available in CLion, see \u003ca href=\"https://www.jetbrains.com/help/clion/2024.2/analyzing-applications.html\" target=\"_blank\" rel=\"noopener\"\u003ethis web help article\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003ch2\u003eProject status widget\u003c/h2\u003e\n\n\n\n\u003cp\u003eProject status notifications inform you of potential problems with your project configuration and offer ways to resolve them. In version 2024.2, they are displayed as yellow banners in the editor until the problem is resolved.\u003c/p\u003e\n\n\n\n\u003cp\u003eWe’ve received a number of complaints suggesting that these notifications are irrelevant in various use cases. For example, some users just want to open a .cpp file from a third-party project to test or read the code. Some deliberately use a build system that CLion doesn’t support. In such cases, it makes no sense to have a notification banner hanging in the editor all the time. So, we’ve decided to make these notifications less distracting by moving them from the top of the editor to a new widget in the status bar.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXfJzbs1QfciIOJHw64RnJ6lXnaZwXrpaa9S01R5qeOdYRqxDQAdxLMhc5_k1EjGmAPKz5LBDxIOsJMhaTZTir-vBknGXFQ5oLD81OBN2KbxKdRbfLPrvK3nhiKrkoroGQqhtWZNi-3hGYyz4marmnSVr0Yi?key=ukJj6aYX5st9i7-oLqljJg\" alt=\"New project status widget\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eNow, if you create a new .cpp file in your project, for example, the ⚠️ icon will appear. The notification that your file doesn’t belong to any project won’t appear until you hover over the icon. When you click on the icon, the widget will offer to add the file to the CMake project. If you don’t need it, you can close the pop-up, leaving only the icon in the status bar. Additionally, when the widget sees a Makefile, Bazel, or compilation database file, it gives you the option to load the corresponding project.\u003c/p\u003e\n\n\n\n\u003ch2\u003eOther improvements\u003c/h2\u003e\n\n\n\n\u003cp\u003eA couple of bug fixes are also worth highlighting:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eWhen \u003ca href=\"https://blog.jetbrains.com/clion/2024/10/2024-3-eap-3/#ability-to-attach-the-debugger-to-an-unstarted-process\"\u003eattaching to an unstarted process\u003c/a\u003e while debugging, the IDE now only selects processes that belong to the current user. This prevents situations where you accidentally try to attach to someone else’s process and get an error.\u003c/li\u003e\n\n\n\n\u003cli\u003eReloading a CMake project using the \u003cem\u003eReset Cache and Reload Project\u003c/em\u003e option no longer results in an error when the FTP/SFTP/WebDAV Connectivity plugin is disabled.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\n\n\n\n\u003cp\u003e\u003ca href=\"https://www.jetbrains.com/clion/nextversion/\" target=\"_blank\" rel=\"noopener\" data-test=\"blog-article-cta\"\u003e\u003ci\u003e\u003c/i\u003eDOWNLOAD CLION 2024.3 EAP\u003c/a\u003e\u003c/p\u003e\n\n\n\n\u003ch2\u003eCall for feedback\u003c/h2\u003e\n\n\n\n\u003cp\u003eYour feedback is important to us, as your experiences and insights are essential to our mission of continuously improving CLion. Please share your ideas in the comments section below or submit them to our \u003ca href=\"https://youtrack.jetbrains.com/issues/CPP\" target=\"_blank\" rel=\"noopener\"\u003eissue tracker\u003c/a\u003e. We would also be interested in setting up a quick call with you to learn more about your specific use cases. \u003ca href=\"https://survey.alchemer.com/s3/8011393/CLion-EAP-Feedback\" target=\"_blank\" rel=\"noopener\"\u003eLet us know\u003c/a\u003e if you would like to participate!\u003c/p\u003e\n\n\n\n\u003cp\u003eYour CLion team\u003cbr/\u003e\u003cem\u003eJetBrains\u003cbr/\u003eThe Drive to Develop\u003c/em\u003e\u003c/p\u003e\n                    \n                                                                                                                                                                                                                            \u003cdiv\u003e\n                                \u003cdiv\u003e\n                                                                            \u003ch4\u003eSubscribe to CLion Blog updates\u003c/h4\u003e\n                                                                                                            \n                                \u003c/div\u003e\n                                \n                                \u003cp\u003e\u003cimg src=\"https://blog.jetbrains.com/wp-content/themes/jetbrains/assets/img/img-form.svg\" alt=\"image description\"/\u003e\n                                                                    \u003c/p\u003e\n                            \u003c/div\u003e\n                                                            \u003c/div\u003e\n                \u003ca href=\"#\"\u003e\u003c/a\u003e\n                \n                \n            \u003c/section\u003e\n                    \u003cdiv\u003e\n                \u003cp\u003e\n                    \u003ch2\u003eDiscover more\u003c/h2\u003e\n                \u003c/p\u003e\n                \n            \u003c/div\u003e\n                \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": null,
  "modifiedTime": null
}
