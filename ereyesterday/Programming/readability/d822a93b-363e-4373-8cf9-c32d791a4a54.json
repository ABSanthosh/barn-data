{
  "id": "d822a93b-363e-4373-8cf9-c32d791a4a54",
  "title": "How Senior Software Engineers Can Learn from Junior Engineers",
  "link": "https://www.infoq.com/news/2025/04/software-engineers-learning/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "A rigid hierarchical dynamic between senior and junior software engineers can stifle innovation, discourage fresh perspectives, and create barriers to collaboration. According to Beth Anderson, senior engineers can actively learn from their junior counterparts. She suggests creating an environment of mutual growth, psychological safety, and continuous learning. By Ben Linders",
  "author": "Ben Linders",
  "published": "Fri, 11 Apr 2025 15:54:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Inclusion",
    "Software Engineering",
    "Software Engineering Education",
    "Psychological Safety",
    "Machine Learning",
    "QCon Software Development Conference",
    "Software Development",
    "QCon London 2025",
    "Culture \u0026 Methods",
    "news"
  ],
  "byline": "Ben Linders",
  "length": 4406,
  "excerpt": "A rigid hierarchical dynamic between senior and junior software engineers can stifle innovation, discourage fresh perspectives, and create barriers to collaboration. According to Beth Anderson, senior",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s1_20250408103814/apple-touch-icon.png",
  "text": "A rigid hierarchical dynamic between senior and junior software engineers can stifle innovation, discourage fresh perspectives, and create barriers to collaboration. According to Beth Anderson, senior engineers can actively learn from their junior counterparts. She suggests creating an environment of mutual growth, psychological safety, and continuous learning. Beth Anderson spoke about how senior software engineers can learn from juniors at QCon London. Often power dynamics focus on senior engineers passing information to more junior engineers, expecting them to approach engineering tasks similarly as they do, Anderson said. Passing information along is a potentially missed opportunity for a more meaningful conversation between senior and junior engineers, where senior engineers can learn new approaches and consider issues and solutions from juniors: A high power distance can create an environment in which junior engineers are afraid of speaking up when they see an issue that causes a much larger problem, where junior engineers aren’t listened to and don’t feel valued. Seniors can learn from junior engineers, who are often very highly motivated, and have a fresh perspective and an up-to-date set of skills. We shouldn’t have a fixed idea of who we can learn from, based on a hierarchy or on seniority, but instead celebrate curiosity and create an environment where seniors focuses on supporting junior engineers, not controlling them or shutting them down, Anderson said. To cultivate an inclusive engineering culture, Anderson suggested active listening, amplifying people’s voices, and valuing their input. Senior engineers need to constantly be aware of how they’re interacting with junior engineers and ensuring they lift them up, not keep them down: Curating a place of psychological safety in which junior engineers feel comfortable and empowered to speak up and ask questions is critical. To create an environment where engineers can learn and grow, and feel psychological safety, Anderson suggested implementing \"reverse feedback\", allowing junior engineers to speak up and provide feedback about how the senior engineer is communicating with them. She mentioned asking junior engineers how they prefer to learn and communicate and listen to their ideas with an open and willing mind. It’s more difficult for junior engineers to affect culture in an organization, although being open with how you prefer to learn is a good way to start, Anderson suggested: Juniors can ask to review senior engineers’ code and/or pull requests as a learning tool, providing feedback to senior engineers. Anderson advised junior engineers to be mindful of behaviors they’ve learned from others, and avoid repeating the ones they found difficult as juniors. Seniority isn’t about power, it’s an opportunity to create positive change. Regardless of their level of work experience, each person has a unique insight and something to teach you if you’re prepared to listen actively and give them an environment in which they feel comfortable and valued. Junior engineers are the perfect people to ask why things are done the way they are, and for senior engineers to take that as an opportunity to reflect, Anderson concluded. InfoQ interviewed Beth Anderson about learning from junior engineers. InfoQ: What issues can arise from a high power distance between engineers? Beth Anderson: At my first company, I remember making a mistake and being berated by a senior engineer. At the time I felt like I’d failed, although there was no way I could have known how to do it differently. Had the senior engineer understood our different experiences, the outcome could have been a positive learning exercise. InfoQ: How can we cultivate an empowering engineering culture? Anderson: Think back to our early days as engineers and remember how we had ideas but looked for some help implementing them. A bad senior engineer would dismiss ideas whereas a great senior engineer would listen, value, and empower that junior colleague. While I have learned from every senior engineer I’ve worked with, the engineers who have helped me improve the most have been people who listened to what I had to say with an open and willing mind. About the Author Ben Linders",
  "image": "https://cdn.infoq.com/statics_s1_20250408103814/styles/static/images/logo/logo-big.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eA rigid hierarchical dynamic between senior and junior software engineers can stifle innovation, discourage fresh perspectives, and create barriers to collaboration. According to Beth Anderson, senior engineers can actively learn from their junior counterparts. She suggests creating an environment of mutual growth, psychological safety, and continuous learning.\u003c/p\u003e\n\n\u003cp\u003eBeth Anderson spoke about how senior software engineers can learn from juniors at \u003ca href=\"https://qconlondon.com/\"\u003eQCon London\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eOften power dynamics focus on senior engineers passing information to more junior engineers, expecting them to approach engineering tasks similarly as they do, Anderson said. Passing information along is a potentially missed opportunity for a more meaningful conversation between senior and junior engineers, where senior engineers can learn new approaches and consider issues and solutions from juniors:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eA high power distance can create an environment in which junior engineers are afraid of speaking up when they see an issue that causes a much larger problem, where junior engineers aren’t listened to and don’t feel valued.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eSeniors can learn from junior engineers, who are often very highly motivated, and have a fresh perspective and an up-to-date set of skills. We shouldn’t have a fixed idea of who we can learn from, based on a hierarchy or on seniority, but instead celebrate curiosity and create an environment where seniors focuses on supporting junior engineers, not controlling them or shutting them down, Anderson said.\u003c/p\u003e\n\n\u003cp\u003eTo cultivate an inclusive engineering culture, Anderson suggested active listening, amplifying people’s voices, and valuing their input. Senior engineers need to constantly be aware of how they’re interacting with junior engineers and ensuring they lift them up, not keep them down:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eCurating a place of psychological safety in which junior engineers feel comfortable and empowered to speak up and ask questions is critical.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eTo create an environment where engineers can learn and grow, and feel psychological safety, Anderson suggested implementing \u0026#34;reverse feedback\u0026#34;, allowing junior engineers to speak up and provide feedback about how the senior engineer is communicating with them.\u003c/p\u003e\n\n\u003cp\u003eShe mentioned asking junior engineers how they prefer to learn and communicate and listen to their ideas with an open and willing mind.\u003c/p\u003e\n\n\u003cp\u003eIt’s more difficult for junior engineers to affect culture in an organization, although being open with how you prefer to learn is a good way to start, Anderson suggested:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eJuniors can ask to review senior engineers’ code and/or pull requests as a learning tool, providing feedback to senior engineers.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAnderson advised junior engineers to be mindful of behaviors they’ve learned from others, and avoid repeating the ones they found difficult as juniors. Seniority isn’t about power, it’s an opportunity to create positive change.\u003c/p\u003e\n\n\u003cp\u003eRegardless of their level of work experience, each person has a unique insight and something to teach you if you’re prepared to listen actively and give them an environment in which they feel comfortable and valued. Junior engineers are the perfect people to ask why things are done the way they are, and for senior engineers to take that as an opportunity to reflect, Anderson concluded.\u003c/p\u003e\n\n\u003cp\u003eInfoQ interviewed \u003ca href=\"https://www.linkedin.com/in/betandr/\"\u003eBeth Anderson\u003c/a\u003e about learning from junior engineers.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eInfoQ: What issues can arise from a high power distance between engineers?\u003c/strong\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eBeth Anderson\u003c/strong\u003e: At my first company, I remember making a mistake and being berated by a senior engineer. At the time I felt like I’d failed, although there was no way I could have known how to do it differently.\u003c/p\u003e\n\n\u003cp\u003eHad the senior engineer understood our different experiences, the outcome could have been a positive learning exercise.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003eInfoQ: How can we cultivate an empowering engineering culture?\u003c/strong\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eAnderson\u003c/strong\u003e: Think back to our early days as engineers and remember how we had ideas but looked for some help implementing them. A bad senior engineer would dismiss ideas whereas a great senior engineer would listen, value, and empower that junior colleague.\u003c/p\u003e\n\n\u003cp\u003eWhile I have learned from every senior engineer I’ve worked with, the engineers who have helped me improve the most have been people who listened to what I had to say with an open and willing mind.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Ben-Linders\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eBen Linders\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": "2025-04-11T00:00:00Z",
  "modifiedTime": null
}
