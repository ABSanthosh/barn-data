{
  "id": "1a1ea773-e76b-4490-8ebd-83b67105590f",
  "title": "Amazon Aurora Introduces Global Database Writer Endpoint for Distributed Applications",
  "link": "https://www.infoq.com/news/2024/11/aurora-global-database-writer/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "Amazon Aurora has recently introduced a Global Database writer endpoint to streamline routing for applications in disaster-recovery scenarios. This highly available global endpoint removes the need for application code changes to reestablish connectivity following a cross-region switchover or failover operation. By Renato Losio",
  "author": "Renato Losio",
  "published": "Sat, 09 Nov 2024 06:37:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Amazon RDS",
    "MySQL",
    "Disaster Recovery",
    "AWS",
    "Postgres",
    "Cloud",
    "Database Replication",
    "Architecture \u0026 Design",
    "DevOps",
    "news"
  ],
  "byline": "Renato Losio",
  "length": 3071,
  "excerpt": "Amazon Aurora has recently introduced a Global Database writer endpoint to streamline routing for applications in disaster-recovery scenarios. This highly available global endpoint removes the need fo",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s2_20241105073656/apple-touch-icon.png",
  "text": "Amazon Aurora has recently introduced a Global Database writer endpoint to streamline routing for applications in disaster-recovery scenarios. This highly available global endpoint removes the need for application code changes to reestablish connectivity following a cross-region switchover or failover operation. Designed for globally distributed applications, Aurora Global Database allows a single Aurora MySQL or PostgreSQL database to span multiple regions, replicating data to enable fast local reads with low latency in each region and providing disaster recovery in case of region-wide outages. The new Global Database writer endpoint is automatically created for any global cluster and dynamically updates to point to the current writer instance, removing the need to modify configurations when the primary cluster’s location changes. According to the cloud provider, the feature simplifies application routing after initiating cross-region Global Database switchover or failover operations. The cluster's CNAME can be found in the management console or accessed using the RDS CLI or API. Source: AWS documentation Luc van Donkersgoed, principal engineer at PostNL and AWS Serverless Hero, comments: This is great (...) This means you can fail or switch over your writer instance to another region without updating the write endpoint in your applications. Simplifies multi-region implementations a lot! In its guidelines and best practices, AWS highlights the importance of establishing VPC connectivity between the client application and both primary and secondary regions. Without this setup, the application cannot access the IP addresses in the newly promoted primary region. Additionally, monitoring DNS caching after a global database failover or switchover is crucial: Aurora Global Database emits an RDS event that can be used to invalidate the application’s DNS cache. In a Reddit thread, user Psychological_Gas169 comments: Finally! No need to go back to my app and update the endpoints every time I switch over to the DB! Corey Quinn, chief cloud economist at The Duckbill Group, warns: This is handy but could incur cross-region data transfer charges if it shifts while you're not expecting it. With Global Database, customers are billed for replicated write I/O operations between the primary region and each secondary region, as well as for cross-region data transfer. Since Global Database replicates data asynchronously, an automated cross-region failover may result in some write transaction data not being replicated. Although the service makes a best-effort attempt to block writes in the original primary region, the switch remains susceptible to split-brain issues. The new feature is available in all regions and for all MySQL and PostgreSQL versions supported by Aurora Global Database, including popular regions such as Northern Virginia, Ohio, Dublin, and Tokyo. About the Author Renato Losio",
  "image": "https://res.infoq.com/news/2024/11/aurora-global-database-writer/en/headerimage/generatedHeaderImage-1730270393268.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eAmazon Aurora has recently introduced a \u003ca href=\"https://aws.amazon.com/about-aws/whats-new/2024/10/amazon-aurora-global-database-writer-endpoint/\"\u003eGlobal Database writer endpoint\u003c/a\u003e to streamline routing for applications in disaster-recovery scenarios. This highly available global endpoint removes the need for application code changes to reestablish connectivity following a cross-region switchover or failover operation.\u003c/p\u003e\n\n\u003cp\u003eDesigned for globally distributed applications, \u003ca href=\"https://aws.amazon.com/rds/aurora/global-database/\"\u003eAurora Global Database\u003c/a\u003e allows a single Aurora MySQL or PostgreSQL database to span multiple regions, replicating data to enable fast local reads with low latency in each region and providing disaster recovery in case of region-wide outages.\u003c/p\u003e\n\n\u003cp\u003eThe new \u003ca href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-connecting.html#global-endpoints\"\u003eGlobal Database writer endpoint\u003c/a\u003e is automatically created for any global cluster and dynamically updates to point to the current writer instance, removing the need to modify configurations when the primary cluster’s location changes. According to the cloud provider, the feature simplifies application routing after initiating cross-region Global Database switchover or failover operations. The cluster\u0026#39;s CNAME can be found in the management console or accessed using the RDS CLI or API.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"\" data-src=\"news/2024/11/aurora-global-database-writer/en/resources/1aurora-global-databases-primary-cluster-connectivity-2-1730270500078.png\" src=\"https://imgopt.infoq.com/fit-in/3000x4000/filters:quality(85)/filters:no_upscale()/news/2024/11/aurora-global-database-writer/en/resources/1aurora-global-databases-primary-cluster-connectivity-2-1730270500078.png\" rel=\"share\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eSource: AWS documentation\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eLuc van Donkersgoed, principal engineer at PostNL and AWS Serverless Hero, \u003ca href=\"https://www.linkedin.com/posts/donkersgoed_amazon-aurora-launches-global-database-writer-activity-7254613613435387906-qFXP?utm_source=share\u0026amp;utm_medium=member_desktop\"\u003ecomments\u003c/a\u003e:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis is great (...) This means you can fail or switch over your writer instance to another region without updating the write endpoint in your applications. Simplifies multi-region implementations a lot!\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eIn its \u003ca href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-connecting.html#global-writer-endpoint-considerations\"\u003eguidelines and best practices\u003c/a\u003e, AWS highlights the importance of establishing VPC connectivity between the client application and both primary and secondary regions. Without this setup, the application cannot access the IP addresses in the newly promoted primary region. Additionally, monitoring DNS caching after a global database failover or switchover is crucial: Aurora Global Database emits an RDS event that can be used to invalidate the application’s DNS cache. In a \u003ca href=\"https://www.reddit.com/r/aws/comments/1ga2mik/aurora_global_database_writer_endpoint_now/\"\u003eReddit thread\u003c/a\u003e, user Psychological_Gas169 comments:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eFinally! No need to go back to my app and update the endpoints every time I switch over to the DB!\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eCorey Quinn, chief cloud economist at The Duckbill Group, \u003ca href=\"https://www.lastweekinaws.com/newsletter/\"\u003ewarns\u003c/a\u003e:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis is handy but could incur cross-region data transfer charges if it shifts while you\u0026#39;re not expecting it.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eWith Global Database, customers are billed for replicated write I/O operations between the primary region and each secondary region, as well as for \u003ca href=\"https://aws.amazon.com/rds/aurora/pricing/\"\u003ecross-region data transfer\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eSince Global Database replicates data asynchronously, an automated cross-region failover may result in some write transaction data not being replicated. Although the service makes a best-effort attempt to block writes in the original primary region, the switch remains susceptible to \u003ca href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-disaster-recovery.html#aurora-global-database-failover.managed-unplanned\"\u003esplit-brain issues\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe new feature is available in all regions and for all MySQL and PostgreSQL versions supported by \u003ca href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.Aurora_Fea_Regions_DB-eng.Feature.GlobalDatabase.html\"\u003eAurora Global Database\u003c/a\u003e, including popular regions such as Northern Virginia, Ohio, Dublin, and Tokyo.\u003c/p\u003e\n\n\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Renato-Losio\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eRenato Losio\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": "2024-11-09T00:00:00Z",
  "modifiedTime": null
}
