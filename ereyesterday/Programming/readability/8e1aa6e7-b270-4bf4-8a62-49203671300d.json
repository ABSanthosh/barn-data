{
  "id": "8e1aa6e7-b270-4bf4-8a62-49203671300d",
  "title": "Recent Generations of Apple CPUs Affected by New Side-Channel Vulnerabilities",
  "link": "https://www.infoq.com/news/2025/02/apple-cpu-side-channel-slap-flop/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "Researchers at the Georgia Institute of Technology and the Ruhr University Bochum demonstrated two new side channel attacks on recent M and A CPUs from Apple that leak sensitive information when using Chrome and Safari to visit popular sites. By Sergio De Simone",
  "author": "Sergio De Simone",
  "published": "Sun, 09 Feb 2025 11:00:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Side channel vulnerabilities",
    "Apple",
    "Information Security",
    "DevOps",
    "Development",
    "news"
  ],
  "byline": "Sergio De Simone",
  "length": 5013,
  "excerpt": "Researchers at the Georgia Institute of Technology and the Ruhr University Bochum demonstrated two new side channel attacks on recent M and A CPUs from Apple that leak sensitive information when using",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s2_20250205131506/apple-touch-icon.png",
  "text": "Researchers at the Georgia Institute of Technology and the Ruhr University Bochum demonstrated two new side-channel attacks on recent M and A CPUs from Apple that leak sensitive information when using Chrome and Safari to visit popular sites. Dubbed FLOP (breaking the Apple M3 CPU via False Load Output Predictions) and SLAP (data Speculation attacks via Load Address Prediction on Apple Silicon), the two attacks may be executed on Macs, iPhones, and iPads from 2021 onwards. Namely, SLAP affects devices using the M2/A15 and newer CPUs with a Load Address Predictor (LAP), while FLOP affects devices using the M3/A17 and newer generations with a Load Value Predictor (LVP). According to the researchers, SLAP and FLOP break isolation protections built into browsers, thus allowing one webpage to read another's content, which could include sensitive data. Since both are microarchitecture-based attacks, they do not leave any traces behind. The two vulnerabilities stem from two predictive subsystems used in Apple Silicon CPUs, the Load Address Predictor (LAP) and the Load Value Predictor (LVP). These subsystems carry through microarchitectural optimizations to alleviate data hazards and reduce slowdowns from Read-After-Write dependencies. The Load Address Predictor guesses which memory address the CPU will access next based on prior access patterns.: In case the predicted address is cached, the CPU speculatively loads from the predicted address as opposed to the address originally intended by the program. Once the value from the predicted address is fetched, the CPU computes on it transiently using arbitrary instructions that are downstream in program code. The Load Value Predictor guesses which data value will be returned on the next memory access before the value is actually available. [LVP] observes data values returned from load operations. If the values are constant, these CPUs can open a speculation window the next time this load executes, rather than waiting for the result to become available after a RAW dependency resolves. The researchers found out that when LAP's or LVP's guesses are wrong, the CPU may perform arbitrary computations on either out-of-bounds (SLAP) or incorrect (FLOP) data under speculative execution. This may lead to data exfiltration. For SLAP, the researchers demonstrated an end-to-end attack on Safari in which an unprivileged attacker can recover email content and browsing history. The LAP monitors past addresses from the same load instruction to speculatively load a predicted address, which may incorrectly point to secrets at rest (i.e., never architecturally read by the CPU). Once the secret is retrieved, the LAP allows for a large speculation window that suffices for an adversary to compute on the secret, such as leaking it over a covert channel. For FLOP, they demonstrated how an attacker can recover location history, calendar events, and credit card information from Safari and Chrome using arbitrary read primitives. The researchers disclosed both vulnerabilities to Apple, but the company has not yet communicated when it plans to address them. Both have actionable mitigations, although they require patches that only Apple can include in its OSes. While FLOP affects both Chrome and Safari, SLAP is Safari-specific. This is due to Safari not implementing isolation within a \"same browsing context group\"], contrary to Firefox and Chrome, as lxgr points out on Hacker News: Firefox and Chrome do seem to isolate even same-browsing-context-group and bridge the required APIs via IPC, so hopefully Safari will catch up at some point. As adrian_b pointed out on Hacker News, the effectiveness of load value predictors is strictly related to the ARM architecture having fixed-length instructions, which makes it impossible to store data in the instruction itself, so As a workaround, when programming for such ISAs, the constants are stored in constant pools that are close to the code for the function that will use them, and the load instructions load the constants using program-counter-relative addressing. The researchers who uncovered FLOP and SLAP are not aware of other CPUs that may be affected but say they cannot rule out this possibility. In the landscape of the decline of Moore’s Law birthing more exotic microarchitectural optimizations, we believe that LAPs may not be an Apple exclusive, either now or soon. Side channel vulnerabilities are a large family of vulnerabilities arising from the way an algorithm is implemented and leverage timing information, power consumption, electromagnetic leaks, and other kinds of information to exfiltrate sensitive data. In the last few years, a number of major side-channel vulnerabilities affecting CPUs and exploiting speculative execution raised much concern, including Spectre and Meltdown. About the Author Sergio De Simone",
  "image": "https://res.infoq.com/news/2025/02/apple-cpu-side-channel-slap-flop/en/headerimage/apple-silicon-side-channel-flop-slap-1739095350690.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eResearchers at the Georgia Institute of Technology and the Ruhr University Bochum demonstrated \u003ca href=\"https://predictors.fail\"\u003etwo new side-channel attacks on recent M and A CPUs from Apple that leak sensitive information when using Chrome and Safari\u003c/a\u003e to visit popular sites.\u003c/p\u003e\n\n\u003cp\u003eDubbed \u003ca href=\"https://predictors.fail/files/FLOP.pdf\"\u003eFLOP\u003c/a\u003e (breaking the Apple M3 CPU via \u003cstrong\u003eF\u003c/strong\u003ealse \u003cstrong\u003eL\u003c/strong\u003eoad \u003cstrong\u003eO\u003c/strong\u003eutput \u003cstrong\u003eP\u003c/strong\u003eredictions) and \u003ca href=\"https://predictors.fail/files/SLAP.pdf\"\u003eSLAP\u003c/a\u003e (data \u003cstrong\u003eS\u003c/strong\u003epeculation attacks via \u003cstrong\u003eL\u003c/strong\u003eoad \u003cstrong\u003eA\u003c/strong\u003eddress \u003cstrong\u003eP\u003c/strong\u003erediction on Apple Silicon), the two attacks may be executed on Macs, iPhones, and iPads from 2021 onwards. Namely, SLAP affects devices using the M2/A15 and newer CPUs with a Load Address Predictor (LAP), while FLOP affects devices using the M3/A17 and newer generations with a Load Value Predictor (LVP).\u003c/p\u003e\n\n\u003cp\u003eAccording to the researchers, SLAP and FLOP break isolation protections built into browsers, thus allowing one webpage to read another\u0026#39;s content, which could include sensitive data. Since both are microarchitecture-based attacks, they do not leave any traces behind.\u003c/p\u003e\n\n\u003cp\u003eThe two vulnerabilities stem from two predictive subsystems used in Apple Silicon CPUs, the Load Address Predictor (LAP) and the Load Value Predictor (LVP). These subsystems carry through microarchitectural optimizations to alleviate \u003ca href=\"https://en.wikipedia.org/wiki/Hazard_(computer_architecture)\"\u003edata hazards\u003c/a\u003e and reduce slowdowns from Read-After-Write dependencies.\u003c/p\u003e\n\n\u003cp\u003eThe Load Address Predictor guesses which memory address the CPU will access next based on prior access patterns.:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIn case the predicted address is cached, the CPU speculatively loads from the predicted address as opposed to the address originally intended by the program. Once the value from the predicted address is fetched, the CPU computes on it transiently using arbitrary instructions that are downstream in program code.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe Load Value Predictor guesses which data value will be returned on the next memory access before the value is actually available.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e[LVP] observes data values returned from load operations. If the values are constant, these CPUs can open a speculation window the next time this load executes, rather than waiting for the result to become available after a RAW dependency resolves.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe researchers found out that when LAP\u0026#39;s or LVP\u0026#39;s guesses are wrong, the CPU may perform arbitrary computations on either out-of-bounds (SLAP) or incorrect (FLOP) data under speculative execution. This may lead to data exfiltration.\u003c/p\u003e\n\n\u003cp\u003eFor SLAP, the researchers demonstrated an end-to-end attack on Safari in which an unprivileged attacker can recover email content and browsing history.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe LAP monitors past addresses from the same load instruction to speculatively load a predicted address, which may incorrectly point to secrets at rest (i.e., never architecturally read by the CPU). Once the secret is retrieved, the LAP allows for a large speculation window that suffices for an adversary to compute on the secret, such as leaking it over a covert channel.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eFor FLOP, they demonstrated how an attacker can recover location history, calendar events, and credit card information from Safari and Chrome using arbitrary read primitives.\u003c/p\u003e\n\n\u003cp\u003eThe researchers disclosed both vulnerabilities to Apple, but the company has not yet communicated when it plans to address them. Both have actionable mitigations, although they require patches that only Apple can include in its OSes.\u003c/p\u003e\n\n\u003cp\u003eWhile FLOP affects both Chrome and Safari, SLAP is Safari-specific. This is due to Safari not implementing isolation within a \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Opener-Policy\"\u003e\u0026#34;same browsing context group\u0026#34;\u003c/a\u003e], contrary to Firefox and Chrome, as \u003ca href=\"(https://news.ycombinator.com/item?id=42859836)\"\u003elxgr points out on Hacker News\u003c/a\u003e:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eFirefox and Chrome do seem to isolate even same-browsing-context-group and bridge the required APIs via IPC, so hopefully Safari will catch up at some point.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAs adrian_b pointed out on Hacker News, the effectiveness of load value predictors is \u003ca href=\"https://news.ycombinator.com/item?id=42863796\"\u003estrictly related to the ARM architecture having fixed-length instructions\u003c/a\u003e, which makes it impossible to store data in the instruction itself, so\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAs a workaround, when programming for such ISAs, the constants are stored in constant pools that are close to the code for the function that will use them, and the load instructions load the constants using program-counter-relative addressing.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe researchers who uncovered FLOP and SLAP are not aware of other CPUs that may be affected but say they cannot rule out this possibility.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIn the landscape of the decline of Moore’s Law birthing more exotic microarchitectural optimizations, we believe that LAPs may not be an Apple exclusive, either now or soon.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.infoq.com/sidechannelvulnerabilities/\"\u003eSide channel vulnerabilities\u003c/a\u003e are a large family of vulnerabilities arising from the way an algorithm is implemented and leverage timing information, power consumption, electromagnetic leaks, and other kinds of information to exfiltrate sensitive data. In the last few years, a number of major side-channel vulnerabilities affecting CPUs and exploiting speculative execution raised much concern, including \u003ca href=\"https://www.infoq.com/news/2018/01/meltdown-spectre-deep-dive/\"\u003eSpectre and Meltdown\u003c/a\u003e.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Sergio-De-Simone\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eSergio De Simone\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": "2025-02-09T00:00:00Z",
  "modifiedTime": null
}
