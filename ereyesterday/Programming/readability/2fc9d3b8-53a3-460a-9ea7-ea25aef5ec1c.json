{
  "id": "2fc9d3b8-53a3-460a-9ea7-ea25aef5ec1c",
  "title": "The Early Access Program for Rider 2025.1 Is Now Open!",
  "link": "https://blog.jetbrains.com/dotnet/2025/01/17/rider-2025-1-eap-1/",
  "description": "The Early Access Program for Rider 2025.1 has just begun. This is your chance to preview the new features and enhancements we’ve been working on and share your feedback to help us shape the future of JetBrains Rider.  There are several ways for you to get your hands on the first preview build: To see […]",
  "author": "Sasha Ivanova",
  "published": "Fri, 17 Jan 2025 12:46:08 +0000",
  "source": "https://blog.jetbrains.com/feed",
  "categories": [
    "net-tools",
    "rider",
    "eap"
  ],
  "byline": "Sasha Ivanova",
  "length": 4238,
  "excerpt": "The Early Access Program for Rider 2025.1 has just begun. This is your chance to preview the new features and enhancements we’ve been working on and share your feedback to help us shape the future of",
  "siteName": "The JetBrains Blog",
  "favicon": "https://blog.jetbrains.com/wp-content/uploads/2024/01/cropped-mstile-310x310-1-180x180.png",
  "text": ".NET Tools RiderThe Early Access Program for Rider 2025.1 Is Now Open! The Early Access Program for Rider 2025.1 has just begun. This is your chance to preview the new features and enhancements we’ve been working on and share your feedback to help us shape the future of JetBrains Rider.  There are several ways for you to get your hands on the first preview build: Download and install them from our website. Use the Toolbox App. Install this snap package from the SnapCraft store if you’re using a compatible Linux distribution. To see the big picture of what’s coming, don’t miss our Rider 2025.1 Roadmap blog post. You may also want to check out this blog post, where we outline how the EAP program works and the benefits from using it. Without further ado, here’s a quick overview of the first EAP build: Repository-wide visibility in the Solution Explorer You can now navigate your entire codebase with Rider’s new Files view. This redesigned view complements the existing Solution view and displays your complete repository structure from the root, making it easier to work with full-stack projects, configuration files, and other modern development environment components. To enable the Files tab by default, go to Settings/Preferences | Advanced Settings | Project View and select Enable Repository view in Explorer tool window. Please note that there may be some performance issues when using the Files view with large solutions, which will be resolved in the upcoming builds. More about this feature here. Automatic child processes attachment for the .NET debugger Rider now offers automatic attachment to child and grandchild processes during .NET application debugging. When enabled in the Run/Debug configurations, the IDE tracks and attaches to all .NET processes spawned within the application’s process tree. Enable this feature using the new Attach to child .NET processes checkbox. Enhanced .NET exception breakpoint configuration Debugging with exceptions gets smoother with Rider 2025.1! We’ve redesigned how you manage exception breakpoints, making it easier to focus on the exceptions that matter while keeping the noise at bay. The new UI brings new filtering capabilities to your debugging workflow. When debugging your application, you now have precise control over which exceptions trigger breakpoints. Rider lets you filter exceptions based on both their origin (whether they come from your application code or external libraries) and how they’re handled in the code (if they’re caught by exception handlers or left unhandled). We’ve expanded the exception popup’s capabilities to include unhandled exceptions management. While you could already mute handled exceptions from the popup window, now you can do the same for unhandled exceptions too with a single click of the Mute and Resume button. If you’re migrating from a previous version of JetBrains Rider, your existing exception settings will automatically transfer to the new system, ensuring a smooth transition to the improved interface. Separate color settings for C++ keywords We’re ve introduced distinct color settings for built-in type keywords, control flow keywords, and control transfer keywords in C++, similar to the existing settings for C#.  ____________________________________________________________________________ For the full list of changes included in this build please see our issue tracker. We encourage you to download the EAP build, give these new features a try, and share your feedback. The Early Access Program is a collaborative effort, and your input plays a vital role in making Rider the best it can be. Thank you for being part of our EAP community, and we look forward to hearing what you think! Subscribe to a monthly digest curated from the .NET Tools blog:",
  "image": "https://blog.jetbrains.com/wp-content/uploads/2025/01/Social_Share_Blog_1280x720-2x-2.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n                    \t\t\t\t\u003cp\u003e\u003ca href=\"https://blog.jetbrains.com/dotnet/category/net-tools/\"\u003e.NET Tools\u003c/a\u003e\n\t\t\t\u003ca href=\"https://blog.jetbrains.com/dotnet/category/rider/\"\u003eRider\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"major-updates\"\u003eThe Early Access Program for Rider 2025.1 Is Now Open!\u003c/h2\u003e                    \n                    \n\u003cp\u003eThe Early Access Program for Rider 2025.1 has just begun. This is your chance to preview the new features and enhancements we’ve been working on and share your feedback to help us shape the future of JetBrains Rider. \u003c/p\u003e\n\n\n\n\u003cp\u003eThere are several ways for you to get your hands on the first preview build:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eDownload and install them from \u003ca href=\"http://jetbrains.com/\" target=\"_blank\" rel=\"noopener\"\u003eour website\u003c/a\u003e.\u003c/li\u003e\n\n\n\n\u003cli\u003eUse the \u003ca href=\"https://www.jetbrains.com/toolbox/\" target=\"_blank\" rel=\"noopener\"\u003eToolbox App\u003c/a\u003e.\u003c/li\u003e\n\n\n\n\u003cli\u003eInstall this \u003ca href=\"https://snapcraft.io/rider\" target=\"_blank\" rel=\"noopener\"\u003esnap package\u003c/a\u003e from the SnapCraft store if you’re using a compatible Linux distribution.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\n\n\n\n\u003cp\u003eTo see the big picture of what’s coming, don’t miss our \u003ca href=\"https://blog.jetbrains.com/dotnet/2025/01/08/rider-2025-1-roadmap/\"\u003eRider 2025.1 Roadmap blog post\u003c/a\u003e. You may also want to check out \u003ca href=\"https://blog.jetbrains.com/dotnet/2024/01/19/rider-2024-1-eap1/#what-is-an-early-access-program\"\u003ethis blog post\u003c/a\u003e, where we outline how the EAP program works and the benefits from using it.\u003c/p\u003e\n\n\n\n\u003cp\u003eWithout further ado, here’s a quick overview of the first EAP build:\u003c/p\u003e\n\n\n\n\u003ch2\u003eRepository-wide visibility in the \u003cem\u003eSolution Explorer\u003c/em\u003e\u003c/h2\u003e\n\n\n\n\u003cp\u003eYou can now navigate your entire codebase with Rider’s new \u003cem\u003eFiles \u003c/em\u003eview. This redesigned view complements the existing \u003cem\u003eSolution\u003c/em\u003e view and displays your complete repository structure from the root, making it easier to work with full-stack projects, configuration files, and other modern development environment components.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXdUlmn9Q5pcQZd0K9YVQTLYB6Xc7VdX4Yb2MZ_n-ek6ZCPQXAyL9LwEwA6AmcRVcovQsLNy9yfpcw3mvzCWDWVQHLUQ0CHgDKCvTIHtatJ9OO5VRxcVxUO3pGCU_wu7sz_4e27V4A?key=cZX87UrY3bmcimUC1LRBb2Pg\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eTo enable the \u003cem\u003eFiles \u003c/em\u003etab by default, go to \u003cem\u003eSettings/Preferences | Advanced Settings | Project View\u003c/em\u003e and select \u003cem\u003eEnable Repository view in Explorer tool window\u003c/em\u003e.\u003c/p\u003e\n\n\n\n\u003cp\u003ePlease note that there may be some performance issues when using the \u003cem\u003eFiles\u003c/em\u003e view with large solutions, which will be resolved in the upcoming builds.\u003c/p\u003e\n\n\n\n\u003cp\u003eMore about this feature \u003ca href=\"https://blog.jetbrains.com/dotnet/2025/01/16/new-files-view-in-solution-explorer/\"\u003ehere\u003c/a\u003e. \u003c/p\u003e\n\n\n\n\u003ch2\u003eAutomatic child processes attachment for the .NET debugger\u003c/h2\u003e\n\n\n\n\u003cp\u003eRider now offers automatic attachment to child and grandchild processes during .NET application debugging. When enabled in the \u003cem\u003eRun/Debug\u003c/em\u003e configurations, the IDE tracks and attaches to all .NET processes spawned within the application’s process tree.\u003c/p\u003e\n\n\n\n\u003cp\u003eEnable this feature using the new \u003cem\u003eAttach to child .NET processes\u003c/em\u003e checkbox.\u003c/p\u003e\n\n\n\n\u003ch2\u003eEnhanced .NET exception breakpoint configuration\u003c/h2\u003e\n\n\n\n\u003cp\u003eDebugging with exceptions gets smoother with Rider 2025.1! We’ve redesigned how you manage exception breakpoints, making it easier to focus on the exceptions that matter while keeping the noise at bay.\u003c/p\u003e\n\n\n\n\u003cp\u003eThe new UI brings new filtering capabilities to your debugging workflow. When debugging your application, you now have precise control over which exceptions trigger breakpoints. Rider lets you filter exceptions based on both their origin (whether they come from your application code or external libraries) and how they’re handled in the code (if they’re caught by exception handlers or left unhandled). \u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" fetchpriority=\"high\" width=\"2090\" height=\"1228\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/01/image-45.png\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cblockquote\u003e\n\u003cp\u003eWe’ve expanded the exception popup’s capabilities to include \u003cstrong\u003eunhandled\u003c/strong\u003e exceptions management. While you could already mute handled exceptions from the popup window, now you can do the same for unhandled exceptions too with a single click of the \u003cem\u003eMute and Resume \u003c/em\u003ebutton.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" width=\"998\" height=\"514\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/01/image-43.png\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eIf you’re migrating from a previous version of JetBrains Rider, your existing exception settings will automatically transfer to the new system, ensuring a smooth transition to the improved interface.\u003c/p\u003e\n\n\n\n\u003ch2\u003eSeparate color settings for C++ keywords\u003c/h2\u003e\n\n\n\n\u003cp\u003eWe’re ve introduced distinct color settings for built-in type keywords, control flow keywords, and control transfer keywords in C++, similar to the existing settings for C#. \u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" width=\"1964\" height=\"1400\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/01/image-44.png\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003e____________________________________________________________________________\u003c/p\u003e\n\n\n\n\u003cp\u003eFor the full list of changes included in this build please see \u003ca href=\"https://youtrack.jetbrains.com/issues?q=Project:%20Rider%20Available%20in:%20%7B2025.1%20EAP%201%7D%20\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eour issue tracker\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cp\u003eWe encourage you to download the EAP build, give these new features a try, and share your feedback. The Early Access Program is a collaborative effort, and your input plays a vital role in making Rider the best it can be.\u003c/p\u003e\n\n\n    \n\n\n\n\n\n\n\n\u003cp\u003eThank you for being part of our EAP community, and we look forward to hearing what you think!\u003c/p\u003e\n                    \n                                                                                                                                                                            \u003cdiv\u003e\n                                \u003cdiv\u003e\n                                                                            \u003ch4\u003eSubscribe to a monthly digest curated from the .NET Tools blog:\u003c/h4\u003e\n                                                                                                            \n                                \u003c/div\u003e\n                                \n                                \u003cp\u003e\u003cimg src=\"https://blog.jetbrains.com/wp-content/themes/jetbrains/assets/img/img-form.svg\" alt=\"image description\"/\u003e\n                                                                    \u003c/p\u003e\n                            \u003c/div\u003e\n                                                            \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": null,
  "modifiedTime": null
}
