{
  "id": "69c91965-7ddb-4904-b1d0-b5825bee6793",
  "title": "The CLion 2025.1 Early Access Program Is Open",
  "link": "https://blog.jetbrains.com/clion/2025/01/2025-1-eap-open/",
  "description": "The Early Access Program (EAP) for CLion 2025.1 has officially launched. The first EAP build, 251.14649.40, is here to provide an early look at some of the improvements coming in the next major release. You can download the build for free from the link below, via the Toolbox App, or as a snap package if […]",
  "author": "Oleg Zinovyev",
  "published": "Wed, 15 Jan 2025 16:30:23 +0000",
  "source": "https://blog.jetbrains.com/feed",
  "categories": [
    "eap",
    "news",
    "bazel",
    "clionnova",
    "debug-servers",
    "embedded"
  ],
  "byline": "Oleg Zinovyev",
  "length": 5330,
  "excerpt": "The Early Access Program (EAP) for CLion 2025.1 has officially launched. The first EAP build, 251.14649.40, is here to provide an early look at some of the improvements coming in the next major releas",
  "siteName": "The JetBrains Blog",
  "favicon": "https://blog.jetbrains.com/wp-content/uploads/2024/01/cropped-mstile-310x310-1-180x180.png",
  "text": "Early Access Program NewsThe CLion 2025.1 Early Access Program Is Open The Early Access Program (EAP) for CLion 2025.1 has officially launched. The first EAP build, 251.14649.40, is here to provide an early look at some of the improvements coming in the next major release. You can download the build for free from the link below, via the Toolbox App, or as a snap package if you’re using Ubuntu. DOWNLOAD CLION 2025.1 EAP For the first EAP release, we’ve focused on improvements for CLion Nova and embedded development. Keep reading to get all the key details! CLion Nova Thanks to ongoing feature additions and performance enhancements, our new language engine, CLion Nova, is increasingly ready to serve as the default engine for all users. With the start of the 2025.1 EAP, CLion Nova includes a new batch of the most requested features from CLion Classic, including several smart keys and actions. Smart keys Smart keys are actions designed to help you write code faster and enhance your overall experience in the IDE. One such feature we’ve added in the first 2025.1 EAP allows the IDE to ignore indentation when you press ⌫ (macOS) or Backspace (Windows or Linux). To try it, go to Settings | Editor | General | Smart Keys, scroll down to Unindent on Backspace, and select Disabled from the drop-down menu. Another update relates to the Surround selection on typing quote or brace smart key, which allows you to surround selected text with quotation marks or braces such as [], {}, and (). We’ve now added support for \u003c \u003e and the ability to disable the feature entirely. When the feature is enabled, simply select the required text and surround it by pressing the desired punctuation mark. Moving the caret to the start or end of a code block CLion Nova now supports moving the caret to the beginning or end of a code block using the following shortcuts: Move to Code Block End – ⌘⌥] (macOS) or Ctrl+] (Windows or Linux) Move to Code Block Start – ⌘⌥ [ (macOS) or Ctrl+[ (Windows or Linux) Move to Code Block End with Selection – ⌘⌥⇧] (macOS) or Ctrl+Shift+] (Windows or Linux) Move to Code Block Start with Selection – ⌘⌥⇧[ (macOS) or Ctrl+Shift+[ (Windows or Linux) Support for GoogleTest and Catch2 in Bazel projects CLion Nova now supports the GoogleTest and Catch2 testing frameworks when working with Bazel projects. Embedded development The embedded development updates in this first EAP build mainly include new functionality for the Serial Port Monitor plugin and UX improvements to the Debug Servers configuration option. Serial Port Monitor We’ve extended the functionality of the Serial Port Monitor plugin to make it more useful for embedded developers working with devices that use a serial port such as Arduino and ESP32. We’ve added the ability to view and manage the DTR, DSR, RTS, and CTS hardware control signals, giving you more control over your attached devices. For example, the DTR signal is connected to the hardware reset on Arduino and many ESP32-based boards. To enable hardware control signals: In the Serial Connections tool window, navigate to the Connect tab. Select the desired COM port.  Click the Show HW controls checkbox. The control options and indicators will then appear in the COM port tab. We’ve also added the ability to view timestamps in the monitor output – see [11:27:44.489] in the screenshot above. This option is useful if you want to track the sequence of messages in detail when debugging or troubleshooting. You can turn it on in the left-hand panel of the Serial Connections tool window. Debug servers In v2024.3, we introduced the new Debug Servers configuration option that allows you to set up a dedicated debug server for a particular debug probe. This feature simplifies the process of running or debugging build targets.  For the upcoming 2025.1 release, we’re working on UX improvements to the Debug Server settings based on user feedback and bug fixes. Some of these updates are already available in this EAP build. To learn about the other features we plan to introduce in v2025.1, read the blog post about our roadmap. DOWNLOAD CLION 2025.1 EAP Call for feedback We value your feedback, as your experiences and insights are essential to our mission of continuously improving CLion. This is especially valuable during the Early Access Program, as it helps us refine and prepare new features for the stable release. Please share your ideas and feedback in the comments below or submit them to our issue tracker. We would also be interested in setting up a quick call with you to learn more about your specific use cases. Let us know if you would like to participate! Subscribe to CLion Blog updates",
  "image": "https://blog.jetbrains.com/wp-content/uploads/2025/01/Social_Share_Blog_1280x720-2x.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n                    \t\t\t\t\u003cp\u003e\u003ca href=\"https://blog.jetbrains.com/clion/category/eap/\"\u003eEarly Access Program\u003c/a\u003e\n\t\t\t\u003ca href=\"https://blog.jetbrains.com/clion/category/news/\"\u003eNews\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"major-updates\"\u003eThe CLion 2025.1 Early Access Program Is Open\u003c/h2\u003e                    \n                    \n\u003cp\u003eThe Early Access Program (EAP) for CLion 2025.1 has officially launched. The first EAP build, 251.14649.40, is here to provide an early look at some of the improvements coming in the next major release. You can download the build for free from the link below, via the \u003ca href=\"https://www.jetbrains.com/toolbox-app/\" target=\"_blank\" rel=\"noopener\"\u003eToolbox App\u003c/a\u003e, or as a snap package if you’re using Ubuntu.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003ca href=\"https://www.jetbrains.com/clion/nextversion/\" target=\"_blank\" rel=\"noopener\" data-test=\"blog-article-cta\"\u003e\u003ci\u003e\u003c/i\u003eDOWNLOAD CLION 2025.1 EAP\u003c/a\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003eFor the first EAP release, we’ve focused on improvements for CLion Nova and embedded development. Keep reading to get all the key details!\u003c/p\u003e\n\n\n\n\u003ch2\u003eCLion Nova\u003c/h2\u003e\n\n\n\n\u003cp\u003eThanks to ongoing feature additions and performance enhancements, our new language engine, CLion Nova, is increasingly ready to serve as the default engine for all users. With the start of the 2025.1 EAP, CLion Nova includes a new batch of the most requested features from CLion Classic, including several smart keys and actions.\u003c/p\u003e\n\n\n\n\u003ch3\u003eSmart keys\u003c/h3\u003e\n\n\n\n\u003cp\u003eSmart keys are actions designed to help you write code faster and enhance your overall experience in the IDE. One such feature we’ve added in the first 2025.1 EAP allows the IDE to ignore indentation when you press \u003cem\u003e⌫\u003c/em\u003e (macOS) or \u003cem\u003eBackspace\u003c/em\u003e (Windows or Linux). To try it, go to \u003cem\u003eSettings | Editor | General | Smart Keys\u003c/em\u003e, scroll down to \u003cem\u003eUnindent on Backspace\u003c/em\u003e, and select \u003cem\u003eDisabled \u003c/em\u003efrom the drop-down menu.\u003c/p\u003e\n\n\n                                                \u003cfigure\u003e\u003cimg decoding=\"async\" data-gif-src=\"https://blog.jetbrains.com/wp-content/uploads/2025/01/smart_keys_unindent.gif\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/01/smart_keys_unindent_img.jpg\" alt=\"How to disable unindentation on Backspace\" width=\"800\"/\u003e\u003c/figure\u003e\n                        \n\n\n\u003cp\u003eAnother update relates to the \u003cem\u003eSurround selection on typing quote or brace\u003c/em\u003e smart key, which allows you to surround selected text with quotation marks or braces such as \u003ccode\u003e[]\u003c/code\u003e, \u003ccode\u003e{}\u003c/code\u003e, and \u003ccode\u003e()\u003c/code\u003e. We’ve now added support for \u003ccode\u003e\u0026lt; \u0026gt;\u003c/code\u003e and the ability to disable the feature entirely. When the feature is enabled, simply select the required text and surround it by pressing the desired punctuation mark.\u003c/p\u003e\n\n\n                                                \u003cfigure\u003e\u003cimg decoding=\"async\" data-gif-src=\"https://blog.jetbrains.com/wp-content/uploads/2025/01/smart_keys_surround.gif\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/01/smart_keys_surround_img.jpg\" alt=\"How to surround selected text with angle braces\" width=\"800\"/\u003e\u003c/figure\u003e\n                        \n\n\n\u003ch3\u003eMoving the caret to the start or end of a code block\u003c/h3\u003e\n\n\n\n\u003cp\u003eCLion Nova now supports moving the caret to the beginning or end of a code block using the following shortcuts:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003cem\u003eMove to Code Block End\u003c/em\u003e – \u003cem\u003e⌘⌥]\u003c/em\u003e (macOS) or \u003cem\u003eCtrl+]\u003c/em\u003e (Windows or Linux)\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cem\u003eMove to Code Block Start\u003c/em\u003e – \u003cem\u003e⌘⌥ [\u003c/em\u003e (macOS) or \u003cem\u003eCtrl+[\u003c/em\u003e (Windows or Linux)\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cem\u003eMove to Code Block End with Selection\u003c/em\u003e – \u003cem\u003e⌘⌥⇧]\u003c/em\u003e (macOS) or \u003cem\u003eCtrl+Shift+]\u003c/em\u003e (Windows or Linux)\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cem\u003eMove to Code Block Start with Selection\u003c/em\u003e – \u003cem\u003e⌘⌥⇧[\u003c/em\u003e (macOS) or \u003cem\u003eCtrl+Shift+[\u003c/em\u003e (Windows or Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003ch3\u003eSupport for GoogleTest and Catch2 in Bazel projects\u003c/h3\u003e\n\n\n\n\u003cp\u003eCLion Nova now supports the GoogleTest and Catch2 testing frameworks when working with Bazel projects.\u003c/p\u003e\n\n\n\n\u003ch2\u003eEmbedded development\u003c/h2\u003e\n\n\n\n\u003cp\u003eThe embedded development updates in this first EAP build mainly include new functionality for the Serial Port Monitor plugin and UX improvements to the \u003cem\u003eDebug Servers\u003c/em\u003e configuration option.\u003c/p\u003e\n\n\n\n\u003ch3\u003eSerial Port Monitor\u003c/h3\u003e\n\n\n\n\u003cp\u003eWe’ve extended the functionality of the Serial Port Monitor plugin to make it more useful for embedded developers working with devices that use a serial port such as Arduino and ESP32.\u003c/p\u003e\n\n\n\n\u003cp\u003eWe’ve added the ability to view and manage the DTR, DSR, RTS, and CTS hardware control signals, giving you more control over your attached devices. For example, the DTR signal is connected to the hardware reset on Arduino and many ESP32-based boards.\u003c/p\u003e\n\n\n\n\u003cp\u003eTo enable hardware control signals:\u003c/p\u003e\n\n\n\n\u003col\u003e\n\u003cli\u003eIn the \u003cem\u003eSerial Connections \u003c/em\u003etool window, navigate to the \u003cem\u003eConnect\u003c/em\u003e tab.\u003c/li\u003e\n\n\n\n\u003cli\u003eSelect the desired COM port. \u003c/li\u003e\n\n\n\n\u003cli\u003eClick the \u003cem\u003eShow HW controls \u003c/em\u003echeckbox.\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" fetchpriority=\"high\" width=\"963\" height=\"369\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/01/hw_signals_1.png\" alt=\"How to enable the Show HW controls option\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eThe control options and indicators will then appear in the COM port tab.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" width=\"993\" height=\"354\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/01/hw_signals_2.png\" alt=\"Enabled the RTS, DTR, CTS, and DSR control signals\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eWe’ve also added the ability to view timestamps in the monitor output – see \u003ccode\u003e[11:27:44.489]\u003c/code\u003e in the screenshot above. This option is useful if you want to track the sequence of messages in detail when debugging or troubleshooting. You can turn it on in the left-hand panel of the \u003cem\u003eSerial Connections\u003c/em\u003e tool window.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" width=\"991\" height=\"353\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/01/timestamps.png\" alt=\"How to enable timestamps\"/\u003e\u003c/figure\u003e\n\n\n\n\u003ch3\u003eDebug servers\u003c/h3\u003e\n\n\n\n\u003cp\u003eIn v2024.3, \u003ca href=\"https://blog.jetbrains.com/clion/2024/11/2024-3-available/#embedded-development\"\u003ewe introduced\u003c/a\u003e the new \u003cem\u003eDebug Servers\u003c/em\u003e configuration option that allows you to set up a dedicated debug server for a particular debug probe. This feature simplifies the process of running or debugging build targets. \u003c/p\u003e\n\n\n\n\u003cp\u003eFor the upcoming 2025.1 release, we’re working on UX improvements to the \u003cem\u003eDebug Server\u003c/em\u003e settings based on user feedback and bug fixes. Some of these updates are already available in this EAP build.\u003c/p\u003e\n\n\n\n\u003cp\u003eTo learn about the other features we plan to introduce in v2025.1, read the \u003ca href=\"https://blog.jetbrains.com/clion/2024/12/2025-1-roadmap/\"\u003eblog post\u003c/a\u003e about our roadmap.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003ca href=\"https://www.jetbrains.com/clion/nextversion/\" target=\"_blank\" rel=\"noopener\" data-test=\"blog-article-cta\"\u003e\u003ci\u003e\u003c/i\u003eDOWNLOAD CLION 2025.1 EAP\u003c/a\u003e\u003c/p\u003e\n\n\n\n\u003ch2\u003eCall for feedback\u003c/h2\u003e\n\n\n\n\u003cp\u003eWe value your feedback, as your experiences and insights are essential to our mission of continuously improving CLion. This is especially valuable during the Early Access Program, as it helps us refine and prepare new features for the stable release. Please share your ideas and feedback in the comments below or submit them to \u003ca href=\"https://youtrack.jetbrains.com/issues/CPP/\" target=\"_blank\" rel=\"noopener\"\u003eour issue tracker\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cp\u003eWe would also be interested in setting up a quick call with you to learn more about your specific use cases. \u003ca href=\"https://survey.alchemer.com/s3/8011393/CLion-EAP-Feedback\" target=\"_blank\" rel=\"noopener\"\u003eLet us know\u003c/a\u003e if you would like to participate!\u003c/p\u003e\n                    \n                                                                                                                                                                                                                            \u003cdiv\u003e\n                                \u003cdiv\u003e\n                                                                            \u003ch4\u003eSubscribe to CLion Blog updates\u003c/h4\u003e\n                                                                                                            \n                                \u003c/div\u003e\n                                \n                                \u003cp\u003e\u003cimg src=\"https://blog.jetbrains.com/wp-content/themes/jetbrains/assets/img/img-form.svg\" alt=\"image description\"/\u003e\n                                                                    \u003c/p\u003e\n                            \u003c/div\u003e\n                                                            \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": null,
  "modifiedTime": null
}
