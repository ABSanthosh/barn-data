{
  "id": "7d615439-bc0e-4252-b3a1-2e90577e1b1a",
  "title": "PHP Annotated ‚Äì October 2024",
  "link": "https://blog.jetbrains.com/phpstorm/2024/10/php-annotated-october-2024/",
  "description": "Welcome to the October edition of PHP Annotated! This recap is carefully handcrafted and brings you the most interesting developments in the PHP community over the past couple of months, so you don‚Äôt have to sift through the noise‚Äîwe‚Äôve done it for you. Highlights PHP 8.4 RC3 is available for testing Release managers Calvin Buckley, [‚Ä¶]",
  "author": "Roman Pronskiy",
  "published": "Thu, 31 Oct 2024 14:00:57 +0000",
  "source": "https://blog.jetbrains.com/feed",
  "categories": [
    "news",
    "laravel",
    "php",
    "php-8-3",
    "php-8-4",
    "php-annotated-monthly",
    "rfc",
    "symfony"
  ],
  "byline": "Roman Pronskiy",
  "length": 11403,
  "excerpt": "Welcome to the October edition of PHP Annotated! This recap is carefully handcrafted and brings you the most interesting developments in the PHP community over the past couple of months, so you don‚Äôt",
  "siteName": "The JetBrains Blog",
  "favicon": "https://blog.jetbrains.com/wp-content/uploads/2024/01/cropped-mstile-310x310-1-180x180.png",
  "text": "The IDE that empowers PHP developers NewsPHP Annotated ‚Äì October 2024 Welcome to the October edition of PHP Annotated! This recap is carefully handcrafted and brings you the most interesting developments in the PHP community over the past couple of months, so you don‚Äôt have to sift through the noise‚Äîwe‚Äôve done it for you. Highlights PHP 8.4 RC3 is available for testing Release managers Calvin Buckley, Saki Takamachi, and Eric Mann have created the PHP-8.4 branch, development will now be done in the corresponding branch, and the master branch is now targeting the next version of PHP. With the final release expected on November 21, we can look forward to one more release candidate before then. For a detailed list of what‚Äôs coming in PHP 8.4 see php.watch and stitcher.io. Try PHP 8.4: On Mac, you can install it using Homebrew through the Nightly channel via shivammathur/homebrew-php. For other platforms, Docker images are probably the easiest way to try it out with no hassle. For a quick local test, PHP 8.4 is also available on Herd. PHP 8.1.30, PHP 8.2.24, and PHP 8.3.12 have been released ‚ùóÔ∏èThese are security releases that address several vulnerabilities: Parameter injection vulnerability in CGI [GHSA] Bypassable cgi.force_redirect configuration [GHSA] Alterable logs in FPM children [GHSA] Erroneous parsing of multipart form data [GHSA] All users should update their installations. PhpStorm 2024.3 Early Access Program Is Now Open In this early access version, you can already try out full support for PHP 8.4. The PHP Foundation Updates First, thanks to Ayesh from PHP.Watch, the foundation has relaunched its core roundup series in a new format. Check out the latest PHP Core Roundup #19. Secondly, The PHP Foundation has joined The Open Source Pledge which aims to encourage companies using open-source software to donate back to projects and help build a sustainable ecosystem. As part of this initiative, three PHP companies even made it onto the Nasdaq billboard. Thirdly, commissioned by the German government-backed Sovereign Tech Fund, the foundation delivered the Web Services Tool for PHP-FPM. And last but not least, The PHP Foundation is calling for sponsors. Sponsor the foundation and help shape the future of PHP! PHP Core üì£ RFC: Support Closures in constant expressions This one has some interesting use-cases: final class Locale { #[Validator\\Custom(static function (string $languageCode): bool { return \\preg_match('/^[a-z][a-z]$/', $languageCode); })] public string $languageCode; } üìä RFC: Add persistent curl share handles Eric Norris proposes to add a new function curl_share_init_persistent(), which would allow cURL handles to be stored in global memory and reused in subsequent requests. This enhancement aims to improve performance by reducing the overhead of initializing cURL handles each time. Quoting Matthieu Napoli, the author of Bref, here: Most PHP apps spend most of their time doing IO (not using the CPU). ‚Ä¶ But calling APIs (via HTTP) can take a very long time. Very different orders of magnitude. Why? Because it establishes a TPC and HTTPS connection every time. That can take 100ms or 200ms (HTTPS is bonkers). On *every* request, because PHP (with FPM) recreates a connection every time. That‚Äôs why switching to Laravel Octane or Symfony Runtime makes such a difference sometimes: by keeping the PHP process alive between requests, we can save these 100ms. Comparing that to what we save on the framework boot time, this is massive. The RFC proposes to share HTTP connections between requests in PHP-FPM: that‚Äôs huge because it could bring some of these gains to all PHP apps out there, without having to switch to Octane/Runtime (and the downsides that come with it). And to further prove the point, here are a couple of real-world use cases and workarounds: Wikipedia team: Impact of using HTTP connection pooling for PHP applications at scale. Bedrock team: Increase performance and stability by adding an Egress Controller in a Kubernetes cluster at AWS. üì£ RFC: Change behaviour of array sort functions to return a copy of the sorted array Currently, PHP‚Äôs array sort functions take the array to sort by reference, modifying the original array in place. However, these functions always return `true` which often makes them not so convenient to use. Gina Banyard proposes changing the return value of these functions sort(), rsort(), asort(), arsort(), ksort(), krsort(), natsort(), natcasesort(), usort(), uasort(), uksort(), array_multisort(), shuffle(), array_walk(), array_walk_recursive() from true to a copy of the array. This change would allow for a more functional programming style, enabling to chain these functions and work with immutable data more easily. ‚úÖ RFC: Change Directory class to behave like an opaque object üì£ RFC: Warn on conversions from resource to string Composer 2.8.0 The new version of Composer comes with several interesting additions: --patch-only flag: This allows you to limit updates to patch-level changes, minimizing the risk of introducing breaking changes. Ability to explicitly decide if additional arguments/options should be passed to the underlying command. imliam/cpx ‚Äì It‚Äôs like `npx` but for PHP. This tool allows you to run any command from any Composer package, even if it‚Äôs not installed in your project. php.new ‚Äì A one-line PHP installer from Laravel and Herd teams. It installs a static version of PHP intended specifically for development and testing purposes, along with composer and Laravel. Please note that it‚Äôs not suitable for production use. Thavarshan/fetch-php ‚Äì A lightweight package for making HTTP requests inspired by JavaScript‚Äôs fetch. API Platform 4 Released ‚Äì API Platform 4 is now out and officially supports Laravel. It‚Äôs a mature framework for building REST and GraphQL API-first applications. Pest v3 released ‚Äì The new version introduces mutation testing, arch presets, and more to streamline your testing workflow. Ucar-Solutions/uri-signer ‚Äì A minimal package for securely signing PSR-15 URIs in PHP applications. Nejcc/php-datatypes ‚Äì Flexible yet strict way of handling primitive data types like integers, floats, and strings in PHP. tempestphp/tempest-framework v1.0.0-alpha ‚Äì Brent tagged the first alpha version of his framework that is designed so developers can write as little framework-related code as possible and focus on app logic. cerbero90/json-parser ‚Äì A zero-dependency lazy parser to read JSON of any size and from any source in a memory-efficient way. beyondcode/php-spx ‚Äì A simple and straightforward PHP profiling extension with a built-in web UI. It‚Äôs a fork of a popular profiler with a brand-new UI. shipmonk-rnd/dead-code-detector ‚Äì A PHPStan extension for detecting unused code in your PHP projects. shipmonk-rnd/phpstan-baseline-per-identifier ‚Äì A PHPStan error formatter that generates baseline files for each error identifier. pxp-lang/trunk ‚Äì An all-in-one tool for managing and developing PHP projects. It‚Äôs implemented in Rust but installs just like any Composer package. staabm/side-effects-detector ‚Äì Analyzes PHP code for side effects to help maintain clean codebases. yiisoft/mailer ‚Äì A flexible yet simple mailer component. phikiphp/phiki ‚Äì Syntax highlighting powered by TextMate grammars. cerbero90/enum ‚Äì Supercharges enums in your PHP projects. mario-deluna/php-glfw ‚Äì A fully-featured OpenGL and GLFW extension for PHP. It introduces a whole new set of tools for PHP developers to build graphical applications like games, scientific simulations, and user interfaces. Check out some examples: AI Generating 1MB of PHP code with AI, a story of MySQL query parser by Adam Zieli≈Ñski. Consuming HTTP Streams in PHP with Symfony HTTP Client and Ollama API by Roberto Butti. echolabsdev/prism ‚Äì A unified interface for working with LLMs in Laravel. use-the-fork/synapse ‚Äì Seamless integration and management of AI agents within Laravel applications. Inspired by Langchain. Frameworks Symfony turned 19 üéÇ New in Symfony 7.2 by Javier Eguiluz. All Laravel PHP Attributes at Your Disposal by Christoph Rumpel. Laravel Pipelines \u0026 Composable Job Middleware by Davey Shafik. olivernybroe/collector-intellij ‚Äì A PhpStorm plugin for Laravel Collections. Misc PHP Object Lazy-Loading is More Than What You Think by Baptiste Leduc. PHP 8.4 Property Hooks: Can we get rid of getters/setters now? A benchmark by Benjamin Eberlei. How we use hyperfine to measure PHP Engine performance by Benjamin Eberlei. Composer: binary-only Docker images by Grzegorz Korba. I built an app using a single index.php file, here‚Äôs how it went by Andrew Schmelyun. To double quote or not, that‚Äôs the question! by Florian Engelhardt. Building Resilient and Scalable Systems by default by Dariusz Gafka. Rediscovering PHP: A Modern Alternative to JavaScript Fatigue by Christopher Watson. PHP is the Best Choice for Long‚ÄëTerm Business by Tomas Votruba. Conferences These PHP events are all worth a visit, and some are still accepting presentation proposals: Laracon AU ‚Äì Brisbane, Australia, November 7‚Äì8. International PHP Conference ‚Äì Munich, Germany, November 11‚Äí15. SymfonyCon 2024 ‚Äì Vienna, Austria, December 5‚Äì6. Laracon EU 2025 ‚Äì Amsterdam, The Netherlands, February 3‚Äì4. PHP UK Conference 2025 ‚Äì London, UK, February 19. PHP Conference Odawara 2025 ‚Äì Japan, April 12, 2025. üÜï php[tek] 2025 ‚Äì Chicago, IL, USA, May 20-22. CFP To find a PHP meetup happening near you, check out the calendar on php.net. Fun Fizz-Buzz in 56 characters? On the code-golf.io site, you can compete to implement the shortest solutions to simple programming problems. For example, try writing the shortest FizzBuzz code in PHP ‚Äî currently at just 56 characters! Well, my naive solution counts 72 chars. Can you do better? for(;$i++\u003c100;)echo$i%15?($i%3?($i%5?$i:'Buzz'):'Fizz'):'FizzBuzz',\"\\n\"; If you have any interesting or useful links to share via PHP Annotated, please leave a comment on this post or let us know on X/Twitter. Subscribe to PHP Annotated Subscribe to PHP Annotated Discover more",
  "image": "https://blog.jetbrains.com/wp-content/uploads/2024/10/php_annotated_october_2024.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"main\"\u003e\n    \u003cdiv\u003e\n                        \u003ca href=\"https://blog.jetbrains.com/phpstorm/\"\u003e\n                            \u003cimg src=\"https://blog.jetbrains.com/wp-content/uploads/2019/01/PhpStorm-1.svg\" alt=\"Phpstorm logo\"/\u003e\n                                                                                                \n                                                                                    \u003c/a\u003e\n                                                    \u003cp\u003eThe IDE that empowers PHP developers\u003c/p\u003e\n                                            \u003c/div\u003e\n                            \u003csection data-clarity-region=\"article\"\u003e\n                \u003cdiv\u003e\n                    \t\t\t\t\u003cp\u003e\u003ca href=\"https://blog.jetbrains.com/phpstorm/category/news/\"\u003eNews\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"major-updates\"\u003ePHP Annotated ‚Äì October 2024\u003c/h2\u003e                    \n                    \u003cp\u003e\u003ca href=\"https://blog.jetbrains.com/phpstorm/2024/10/php-annotated-october-2024/\"\u003e\u003cimg decoding=\"async\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/10/php_annotated_october_2024.jpg\" alt=\"PHP Annotated\" width=\"900\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eWelcome to the October edition of PHP Annotated! This recap is carefully handcrafted and brings you the most interesting developments in the PHP community over the past couple of months, so you don‚Äôt have to sift through the noise‚Äîwe‚Äôve done it for you.\u003c/p\u003e\n\n\u003ch2 id=\"highlights\"\u003eHighlights\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ch3\u003e\u003ca href=\"https://wiki.php.net/todo/php84\" target=\"_blank\" rel=\"noopener\"\u003ePHP 8.4 RC3\u003c/a\u003e is available for testing\u003c/h3\u003e\n\u003cp\u003e        Release managers Calvin Buckley, Saki Takamachi, and Eric Mann have created the \u003ccode\u003ePHP-8.4\u003c/code\u003e branch, development will now be done in the corresponding branch, and the master branch is now targeting the next version of PHP.\u003c/p\u003e\n\u003cp\u003e        With the \u003cstrong\u003efinal release expected on November 21\u003c/strong\u003e, we can look forward to one more release candidate before then.\u003c/p\u003e\n\u003cp\u003e        For a detailed list of what‚Äôs coming in PHP 8.4 see \u003ca href=\"https://php.watch/versions/8.4\" target=\"_blank\" rel=\"noopener\"\u003ephp.watch\u003c/a\u003e and \u003ca href=\"https://stitcher.io/blog/new-in-php-84\" target=\"_blank\" rel=\"noopener\"\u003estitcher.io\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003e        Try PHP 8.4:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eOn Mac, you can install it using Homebrew through the Nightly channel via \u003ca href=\"https://github.com/shivammathur/homebrew-php\" target=\"_blank\" rel=\"noopener\"\u003eshivammathur/homebrew-php\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eFor other platforms, \u003ca href=\"https://hub.docker.com/_/php/tags?page=1\u0026amp;name=8.4.0\" target=\"_blank\" rel=\"noopener\"\u003eDocker images\u003c/a\u003e are probably the easiest way to try it out with no hassle.\u003c/li\u003e\n\u003cli\u003eFor a quick local test, PHP 8.4 is also available on \u003ca href=\"https://herd.laravel.com/\" target=\"_blank\" rel=\"noopener\"\u003eHerd\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ch3\u003e\u003ca href=\"https://www.php.net/ChangeLog-8.php#8.1.30\" target=\"_blank\" rel=\"noopener\"\u003ePHP 8.1.30\u003c/a\u003e, \u003ca href=\"https://www.php.net/ChangeLog-8.php#8.2.24\" target=\"_blank\" rel=\"noopener\"\u003ePHP 8.2.24\u003c/a\u003e, and \u003ca href=\"https://www.php.net/ChangeLog-8.php#8.3.12\" target=\"_blank\" rel=\"noopener\"\u003ePHP 8.3.12\u003c/a\u003e have been released\u003c/h3\u003e\n\u003cp\u003e        ‚ùóÔ∏èThese are security releases that address several vulnerabilities:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eParameter injection vulnerability in CGI \u003ca href=\"https://github.com/php/php-src/security/advisories/GHSA-p99j-rfp4-xqvq\" target=\"_blank\" rel=\"noopener\"\u003e[GHSA]\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eBypassable \u003ccode\u003ecgi.force_redirect\u003c/code\u003e configuration \u003ca href=\"https://github.com/php/php-src/security/advisories/GHSA-94p6-54jq-9mwp\" target=\"_blank\" rel=\"noopener\"\u003e[GHSA]\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAlterable logs in FPM children \u003ca href=\"https://github.com/php/php-src/security/advisories/GHSA-865w-9rf3-2wh5\" target=\"_blank\" rel=\"noopener\"\u003e[GHSA]\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eErroneous parsing of multipart form data \u003ca href=\"https://github.com/php/php-src/security/advisories/GHSA-9pqp-7h25-4f32\" target=\"_blank\" rel=\"noopener\"\u003e[GHSA]\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e        All users should update their installations.\n    \u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ch3\u003e\u003ca href=\"https://blog.jetbrains.com/phpstorm/2024/09/phpstorm-2024-3-early-access-program-is-now-open/\"\u003ePhpStorm 2024.3 Early Access Program Is Now Open\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e        In this early access version, you can already try out full support for PHP 8.4.\n    \u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ch3\u003e\u003ca href=\"https://thephp.foundation/blog/\" target=\"_blank\" rel=\"noopener\"\u003eThe PHP Foundation Updates\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e        First, thanks to Ayesh from \u003ca href=\"https://php.watch/\" target=\"_blank\" rel=\"noopener\"\u003ePHP.Watch\u003c/a\u003e, the foundation has relaunched its core roundup series in a new format. Check out the latest \u003cstrong\u003e\u003ca href=\"https://thephp.foundation/blog/2024/10/02/php-core-roundup-19/\" target=\"_blank\" rel=\"noopener\"\u003ePHP Core Roundup #19\u003c/a\u003e.\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e        Secondly, \u003ca href=\"https://thephp.foundation/blog/2024/10/08/open-source-pledge/\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003eThe PHP Foundation has joined The Open Source Pledge\u003c/strong\u003e\u003c/a\u003e which aims to encourage companies using open-source software to donate back to projects and help build a sustainable ecosystem. As part of this initiative, three PHP companies even made it onto \u003ca href=\"https://x.com/virtualmilin/status/1843729223124693054\" target=\"_blank\"\u003ethe Nasdaq billboard\u003c/a\u003e\u003cstrong\u003e.\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e        Thirdly, commissioned by the German government-backed \u003ca href=\"https://www.sovereigntechfund.de/\" target=\"_blank\" rel=\"noopener\"\u003eSovereign Tech Fund\u003c/a\u003e, the foundation delivered the \u003ca href=\"https://thephp.foundation/blog/2024/10/21/web-services-tool-for-php-fpm/\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003eWeb Services Tool for PHP-FPM\u003c/strong\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e        And last but not least, \u003ca href=\"https://thephp.foundation/blog/2024/09/30/call-fo-sponsors/\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003eThe PHP Foundation is calling for sponsors\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e.\u003c/strong\u003e Sponsor the foundation and help shape the future of PHP!\n    \u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"php-core\"\u003ePHP Core\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ch3\u003eüì£ \u003ca href=\"https://wiki.php.net/rfc/closures_in_const_expr\" target=\"_blank\" rel=\"noopener\"\u003eRFC: Support Closures in constant expressions\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e        This one has some interesting use-cases:\u003c/p\u003e\n\u003cpre data-enlighter-language=\"php\" data-enlighter-linenumbers=\"false\" data-enlighter-title=\"\"\u003efinal class Locale\n{\n    #[Validator\\Custom(static function (string $languageCode): bool {\n        return \\preg_match(\u0026#39;/^[a-z][a-z]$/\u0026#39;, $languageCode);\n    })]\n    public string $languageCode;\n}\u003c/pre\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ch3\u003eüìä \u003ca href=\"https://wiki.php.net/rfc/curl_share_persistence\" target=\"_blank\" rel=\"noopener\"\u003eRFC: Add persistent curl share handles\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e        Eric Norris proposes to add a new function \u003ccode\u003ecurl_share_init_persistent()\u003c/code\u003e, which would allow cURL handles to be stored in global memory and reused in subsequent requests. This enhancement aims to improve performance by reducing the overhead of initializing cURL handles each time. \u003c/p\u003e\n\u003cp\u003e        Quoting \u003ca href=\"https://x.com/matthieunapoli/status/1845928676577497199\" target=\"_blank\"\u003eMatthieu Napoli\u003c/a\u003e, the author of \u003ca href=\"https://bref.sh/\" target=\"_blank\" rel=\"noopener\"\u003eBref\u003c/a\u003e, here:\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\n        Most PHP apps spend most of their time doing IO (not using the CPU). ‚Ä¶ But calling APIs (via HTTP) can take a very long time. Very different orders of magnitude.\u003c/p\u003e\n\u003cp\u003e        Why? Because it establishes a TPC and HTTPS connection every time. That can take 100ms or 200ms (HTTPS is bonkers). On *every* request, because PHP (with FPM) recreates a connection every time. \u003c/p\u003e\n\u003cp\u003e        That‚Äôs why switching to Laravel Octane or Symfony Runtime makes such a difference sometimes: by keeping the PHP process alive between requests, we can save these 100ms. Comparing that to what we save on the framework boot time, this is massive. \u003c/p\u003e\n\u003cp\u003e        The RFC proposes to share HTTP connections between requests in PHP-FPM: that‚Äôs huge because it could bring some of these gains to all PHP apps out there, without having to switch to Octane/Runtime (and the downsides that come with it).\n        \u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e        And to further prove the point, here are a couple of real-world use cases and workarounds:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWikipedia team: \u003ca href=\"https://techblog.wikimedia.org/2020/10/26/impact-of-using-http-connection-pooling-for-php-applications-at-scale/\" target=\"_blank\" rel=\"noopener\"\u003eImpact of using HTTP connection pooling for PHP applications at scale\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eBedrock team: \u003ca href=\"https://tech.bedrockstreaming.com/2021/10/18/increase-performance-and-stability-by-adding-an-egress-controller.html\" target=\"_blank\" rel=\"noopener\"\u003eIncrease performance and stability by adding an Egress Controller in a Kubernetes cluster at AWS\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ch3\u003eüì£ \u003ca href=\"https://wiki.php.net/rfc/array-sort-return-array\" target=\"_blank\" rel=\"noopener\"\u003eRFC: Change behaviour of array sort functions to return a copy of the sorted array\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e        Currently, PHP‚Äôs array sort functions take the array to sort by reference, modifying the original array in place. However, these functions always return `true` which often makes them not so convenient to use. \u003c/p\u003e\n\u003cp\u003e        Gina Banyard proposes changing the return value of these functions \u003ccode\u003esort()\u003c/code\u003e, \u003ccode\u003ersort()\u003c/code\u003e, \u003ccode\u003easort()\u003c/code\u003e, \u003ccode\u003earsort()\u003c/code\u003e, \u003ccode\u003eksort()\u003c/code\u003e, \u003ccode\u003ekrsort()\u003c/code\u003e, \u003ccode\u003enatsort()\u003c/code\u003e, \u003ccode\u003enatcasesort()\u003c/code\u003e, \u003ccode\u003eusort()\u003c/code\u003e, \u003ccode\u003euasort()\u003c/code\u003e, \u003ccode\u003euksort()\u003c/code\u003e, \u003ccode\u003earray_multisort()\u003c/code\u003e, \u003ccode\u003eshuffle()\u003c/code\u003e, \u003ccode\u003earray_walk()\u003c/code\u003e, \u003ccode\u003earray_walk_recursive()\u003c/code\u003e from \u003ccode\u003etrue\u003c/code\u003e to a copy of the array. \u003c/p\u003e\n\u003cp\u003e        This change would allow for a more functional programming style, enabling to chain these functions and work with immutable data more easily.\n    \u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e‚úÖ \u003ca href=\"https://wiki.php.net/rfc/directory-opaque-object\" target=\"_blank\" rel=\"noopener\"\u003eRFC: Change Directory class to behave like an opaque object\u003c/a\u003e\u003c/strong\u003e\n    \u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eüì£ \u003ca href=\"https://wiki.php.net/rfc/warn-resource-to-string\" target=\"_blank\" rel=\"noopener\"\u003eRFC: Warn on conversions from resource to string\u003c/a\u003e\u003c/strong\u003e\n    \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/composer/composer/releases/tag/2.8.0\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003eComposer\u003c/strong\u003e\u003c/a\u003e \u003cstrong\u003e2.8.0\u003c/strong\u003e\u003cbr/\u003e\n        The new version of Composer comes with several interesting additions:\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e--patch-only\u003c/code\u003e flag: This allows you to limit updates to patch-level changes, minimizing the risk of introducing breaking changes.\u003c/li\u003e\n\u003cli\u003eAbility to explicitly decide if additional arguments/options should be passed to the underlying command.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/imliam/cpx\" target=\"_blank\" rel=\"noopener\"\u003eimliam/cpx\u003c/a\u003e ‚Äì It‚Äôs like `npx` but for PHP. This tool allows you to run any command from any Composer package, even if it‚Äôs not installed in your project.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://php.new/\" target=\"_blank\" rel=\"noopener\"\u003ephp.new\u003c/a\u003e ‚Äì A one-line PHP installer from Laravel and Herd teams. It installs a static version of PHP intended specifically for development and testing purposes, along with composer and Laravel. Please note that it‚Äôs not suitable for production use.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/Thavarshan/fetch-php\" target=\"_blank\" rel=\"noopener\"\u003eThavarshan/fetch-php\u003c/a\u003e ‚Äì A lightweight package for making HTTP requests inspired by JavaScript‚Äôs \u003ccode\u003efetch\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://api-platform.com/?s=laravel\" target=\"_blank\" rel=\"noopener\"\u003eAPI Platform 4 Released\u003c/a\u003e ‚Äì API Platform 4 is now out and officially supports Laravel. It‚Äôs a mature framework for building REST and GraphQL API-first applications.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://pestphp.com/docs/pest3-now-available\" target=\"_blank\" rel=\"noopener\"\u003ePest v3\u003c/a\u003e released ‚Äì The new version introduces mutation testing, arch presets, and more to streamline your testing workflow.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/Ucar-Solutions/uri-signer\" target=\"_blank\" rel=\"noopener\"\u003eUcar-Solutions/uri-signer\u003c/a\u003e ‚Äì A minimal package for securely signing PSR-15 URIs in PHP applications.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/Nejcc/php-datatypes\" target=\"_blank\" rel=\"noopener\"\u003eNejcc/php-datatypes\u003c/a\u003e ‚Äì Flexible yet strict way of handling primitive data types like integers, floats, and strings in PHP.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/tempestphp/tempest-framework\" target=\"_blank\" rel=\"noopener\"\u003etempestphp/tempest-framework\u003c/a\u003e v1.0.0-alpha ‚Äì Brent \u003ca href=\"https://www.youtube.com/watch?v=zKwXyEbnyoI\" target=\"_blank\" rel=\"noopener\"\u003etagged\u003c/a\u003e the first alpha version of his framework that is designed so developers can write as little framework-related code as possible and focus on app logic.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/cerbero90/json-parser\" target=\"_blank\" rel=\"noopener\"\u003ecerbero90/json-parser\u003c/a\u003e ‚Äì A zero-dependency lazy parser to read JSON of any size and from any source in a memory-efficient way.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/beyondcode/php-spx\" target=\"_blank\" rel=\"noopener\"\u003ebeyondcode/php-spx\u003c/a\u003e ‚Äì A simple and straightforward PHP profiling extension with a built-in web UI. It‚Äôs a fork of a popular profiler with a brand-new UI.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/shipmonk-rnd/dead-code-detector\" target=\"_blank\" rel=\"noopener\"\u003eshipmonk-rnd/dead-code-detector\u003c/a\u003e ‚Äì A PHPStan extension for detecting unused code in your PHP projects.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/shipmonk-rnd/phpstan-baseline-per-identifier\" target=\"_blank\" rel=\"noopener\"\u003eshipmonk-rnd/phpstan-baseline-per-identifier\u003c/a\u003e ‚Äì A PHPStan error formatter that generates baseline files for each error identifier.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/pxp-lang/trunk\" target=\"_blank\" rel=\"noopener\"\u003epxp-lang/trunk\u003c/a\u003e ‚Äì An all-in-one tool for managing and developing PHP projects. It‚Äôs implemented in Rust but installs just like any Composer package.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/staabm/side-effects-detector\" target=\"_blank\" rel=\"noopener\"\u003estaabm/side-effects-detector\u003c/a\u003e ‚Äì Analyzes PHP code for side effects to help maintain clean codebases.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/yiisoft/mailer\" target=\"_blank\" rel=\"noopener\"\u003eyiisoft/mailer\u003c/a\u003e ‚Äì A flexible yet simple mailer component.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/phikiphp/phiki\" target=\"_blank\" rel=\"noopener\"\u003ephikiphp/phiki\u003c/a\u003e ‚Äì Syntax highlighting powered by TextMate grammars.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/cerbero90/enum\" target=\"_blank\" rel=\"noopener\"\u003ecerbero90/enum\u003c/a\u003e ‚Äì Supercharges enums in your PHP projects.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/mario-deluna/php-glfw\" target=\"_blank\" rel=\"noopener\"\u003emario-deluna/php-glfw\u003c/a\u003e ‚Äì A fully-featured OpenGL and GLFW extension for PHP. \n\u003cp\u003e        It introduces a whole new set of tools for PHP developers to build graphical applications like games, scientific simulations, and user interfaces. \u003c/p\u003e\n\u003cp\u003e        Check out some \u003ca href=\"https://phpgl.net/examples/00-about-examples.html\" target=\"_blank\" rel=\"noopener\"\u003eexamples\u003c/a\u003e:\u003cbr/\u003e\n        \u003cimg decoding=\"async\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/10/flappy-elephpant.gif\"/\u003e\n    \u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"ai\"\u003eAI\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://adamadam.blog/2024/09/09/generating-a-mysql-parser-with-ai-google-gemini/\" target=\"_blank\" rel=\"noopener\"\u003eGenerating 1MB of PHP code with AI, a story of MySQL query parser\u003c/a\u003e by Adam Zieli≈Ñski.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dev.to/robertobutti/consuming-http-streams-in-php-with-symfony-http-client-and-ollama-api-p9g\" target=\"_blank\" rel=\"noopener\"\u003eConsuming HTTP Streams in PHP with Symfony HTTP Client and Ollama API\u003c/a\u003e by Roberto Butti.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/echolabsdev/prism\" target=\"_blank\" rel=\"noopener\"\u003eecholabsdev/prism\u003c/a\u003e ‚Äì A unified interface for working with LLMs in Laravel.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/use-the-fork/synapse\" target=\"_blank\" rel=\"noopener\"\u003euse-the-fork/synapse\u003c/a\u003e ‚Äì Seamless integration and management of AI agents within Laravel applications. Inspired by Langchain.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"frameworks\"\u003eFrameworks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eSymfony turned 19 üéÇ\u003c/strong\u003e\u003cbr/\u003e\n        \u003ca href=\"https://x.com/symfony/status/1847155843478786501\" target=\"_blank\"\u003e\u003cimg decoding=\"async\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/10/symfony_annuversary.png\" alt=\"\" width=\"60%\"/\u003e\u003c/a\u003e\n    \u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://symfony.com/blog/category/living-on-the-edge/7.2\" target=\"_blank\" rel=\"noopener\"\u003eNew in Symfony 7.2\u003c/a\u003e by Javier Eguiluz.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://christoph-rumpel.com/2024/9/all-laravel-php-attributes-at-your-disposal\" target=\"_blank\" rel=\"noopener\"\u003eAll Laravel PHP Attributes at Your Disposal\u003c/a\u003e by Christoph Rumpel.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.daveyshafik.com/archives/70916-laravel-pipelines-and-composable-job-middleware.html\" target=\"_blank\" rel=\"noopener\"\u003eLaravel Pipelines \u0026amp; Composable Job Middleware\u003c/a\u003e by Davey Shafik.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/olivernybroe/collector-intellij\" target=\"_blank\" rel=\"noopener\"\u003eolivernybroe/collector-intellij\u003c/a\u003e ‚Äì A PhpStorm plugin for Laravel Collections.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"misc\"\u003eMisc\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://jolicode.com/blog/php-object-lazy-loading-is-more-than-what-you-think\" target=\"_blank\" rel=\"noopener\"\u003ePHP Object Lazy-Loading is More Than What You Think\u003c/a\u003e by Baptiste Leduc.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://tideways.com/profiler/blog/php-8-4-property-hooks-can-we-get-rid-of-getters-setters-now-a-benchmark\" target=\"_blank\" rel=\"noopener\"\u003ePHP 8.4 Property Hooks: Can we get rid of getters/setters now? A benchmark\u003c/a\u003e by Benjamin Eberlei.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://tideways.com/profiler/blog/how-we-use-hyperfine-to-measure-php-engine-performance\" target=\"_blank\" rel=\"noopener\"\u003eHow we use hyperfine to measure PHP Engine performance\u003c/a\u003e by Benjamin Eberlei.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://blog.codito.dev/2022/11/composer-binary-only-docker-images/\" target=\"_blank\" rel=\"noopener\"\u003eComposer: binary-only Docker images\u003c/a\u003e by Grzegorz Korba.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=dCuefNScYKM\" target=\"_blank\" rel=\"noopener\"\u003eI built an app using a single index.php file, here‚Äôs how it went\u003c/a\u003e by Andrew Schmelyun.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dev.to/realflowcontrol/too-double-quote-or-not-thats-the-question-78l\" target=\"_blank\" rel=\"noopener\"\u003eTo double quote or not, that‚Äôs the question!\u003c/a\u003e by Florian Engelhardt.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://blog.devgenius.io/building-resilient-and-scalable-systems-by-default-ac6ca5c2083b\" target=\"_blank\" rel=\"noopener\"\u003eBuilding Resilient and Scalable Systems by default\u003c/a\u003e by Dariusz Gafka.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://x.com/exakat/status/1837528507942883474\" target=\"_blank\"\u003e\u003cbr/\u003e\n        \u003cimg decoding=\"async\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/10/exakat_anon_class.png\" alt=\"\" width=\"60%\"/\u003e\u003cbr/\u003e\n    \u003c/a\u003e\n    \u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://watzon.tech/blog/rediscovering-php-a-modern-alternative-to-javascript-fatigue\" target=\"_blank\" rel=\"noopener\"\u003eRediscovering PHP: A Modern Alternative to JavaScript Fatigue\u003c/a\u003e by Christopher Watson.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://tomasvotruba.com/blog/php-is-the-best-choice-for-long-term-business\" target=\"_blank\" rel=\"noopener\"\u003ePHP is the Best Choice for Long‚ÄëTerm Business\u003c/a\u003e by Tomas Votruba.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"conferences\"\u003eConferences\u003c/h2\u003e\n\u003cp\u003eThese PHP events are all worth a visit, and some are still accepting presentation proposals:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://laracon.au/\" target=\"_blank\" rel=\"noopener\"\u003eLaracon AU\u003c/a\u003e ‚Äì Brisbane, Australia, November 7‚Äì8.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://phpconference.com/munich/\" target=\"_blank\" rel=\"noopener\"\u003eInternational PHP Conference\u003c/a\u003e ‚Äì Munich, Germany, November 11‚Äí15.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://live.symfony.com/2024-vienna-con/\" target=\"_blank\" rel=\"noopener\"\u003eSymfonyCon 2024\u003c/a\u003e ‚Äì Vienna, Austria, December 5‚Äì6.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://laracon.eu/\" target=\"_blank\" rel=\"noopener\"\u003eLaracon EU 2025\u003c/a\u003e ‚Äì Amsterdam, The Netherlands, February 3‚Äì4.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.phpconference.co.uk/\" target=\"_blank\" rel=\"noopener\"\u003ePHP UK Conference 2025\u003c/a\u003e ‚Äì London, UK, February 19.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://phpcon-odawara.jp/2025/\" target=\"_blank\" rel=\"noopener\"\u003ePHP Conference Odawara 2025\u003c/a\u003e ‚Äì Japan, April 12, 2025. üÜï\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://phptek.io/\" target=\"_blank\" rel=\"noopener\"\u003ephp[tek] 2025\u003c/a\u003e ‚Äì Chicago, IL, USA, May 20-22. \u003ca href=\"https://sessionize.com/phptek-2025\" target=\"_blank\" rel=\"noopener\"\u003eCFP\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eTo find a PHP meetup happening near you, check out \u003ca href=\"https://www.php.net/cal.php?cm=05\u0026amp;cy=2024\" target=\"_blank\" rel=\"noopener\"\u003ethe calendar on php.net\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"fun\"\u003eFun\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ca href=\"https://code-golf.io/fizz-buzz#php\" target=\"_blank\" rel=\"noopener\"\u003eFizz-Buzz in 56 characters?\u003c/a\u003e\u003c/strong\u003e\n\u003cp\u003e        On the \u003ca href=\"https://code-golf.io/\" target=\"_blank\" rel=\"noopener\"\u003ecode-golf.io\u003c/a\u003e site, you can compete to implement the shortest solutions to simple programming problems. For example, try writing the shortest FizzBuzz code in PHP ‚Äî currently at just 56 characters! \u003c/p\u003e\n\u003cp\u003e        Well, my naive solution counts 72 chars. Can you do better?\u003c/p\u003e\n\u003cpre data-enlighter-language=\"php\" data-enlighter-linenumbers=\"false\" data-enlighter-title=\"\"\u003efor(;$i++\u0026lt;100;)echo$i%15?($i%3?($i%5?$i:\u0026#39;Buzz\u0026#39;):\u0026#39;Fizz\u0026#39;):\u0026#39;FizzBuzz\u0026#39;,\u0026#34;\\n\u0026#34;;\u003c/pre\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr/\u003e\n\n\u003cp\u003eIf you have any interesting or useful links to share via PHP Annotated, please leave a comment on this post or let us know \u003ca href=\"https://twitter.com/pronskiy\" target=\"_blank\" rel=\"noopener\"\u003eon X/Twitter\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003ca title=\"Complete this form and get PHP Annotated Monthly delivered fresh to your email\" href=\"https://info.jetbrains.com/PHP-Annotated-Subscription.html\" target=\"_blank\" rel=\"noopener\"\u003eSubscribe to PHP Annotated\u003c/a\u003e\u003c/p\u003e\n\n    \n                    \n                                                                                                                                                                                                                            \u003cdiv\u003e\n                                \u003cdiv\u003e\n                                                                            \u003ch4\u003eSubscribe to PHP Annotated\u003c/h4\u003e\n                                                                                                            \n                                \u003c/div\u003e\n                                \n                                \u003cp\u003e\u003cimg src=\"https://blog.jetbrains.com/wp-content/themes/jetbrains/assets/img/img-form.svg\" alt=\"image description\"/\u003e\n                                                                    \u003c/p\u003e\n                            \u003c/div\u003e\n                                                            \u003c/div\u003e\n                \u003ca href=\"#\"\u003e\u003c/a\u003e\n                \n                \n            \u003c/section\u003e\n                    \u003cdiv\u003e\n                \u003cp\u003e\n                    \u003ch2\u003eDiscover more\u003c/h2\u003e\n                \u003c/p\u003e\n                \n            \u003c/div\u003e\n                \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "13 min read",
  "publishedTime": null,
  "modifiedTime": null
}
