{
  "id": "8c7212c9-591c-45c0-982f-01fb537a4256",
  "title": "Tutorial: Secure BigQuery data publishing with GitLab",
  "link": "https://about.gitlab.com/blog/2025/03/25/tutorial-secure-bigquery-data-publishing-with-gitlab",
  "description": "",
  "author": "Regnard Raquedan",
  "published": "2025-03-25T00:00:00.000Z",
  "source": "https://about.gitlab.com/atom.xml",
  "categories": null,
  "byline": "Regnard Raquedan",
  "length": 5492,
  "excerpt": "Learn how to create repeatable, auditable, and efficient processes for automating and securing BigQuery data exports.",
  "siteName": "GitLab",
  "favicon": "https://about.gitlab.com/blog/nuxt-images/ico/favicon-192x192.png?cache=2022041",
  "text": "GitLab offers a powerful solution for automating and securing BigQuery data exports. This integration transforms manual exports into repeatable, auditable processes that can eliminate security vulnerabilities while saving valuable time. This tutorial explains how to implement this solution so you can quickly reduce manual operations, permission issues, and security concerns with just a few lines of GitLab YAML code. Follow along with this step-by-step video: The solution architecture Our solution leverages GitLab CI/CD pipelines to automate the secure export of data from BigQuery to Google Cloud Storage. Here's the high-level architecture: SQL code is stored and version-controlled in GitLab. After code review and approval, GitLab CI/CD pipeline executes the code. The pipeline authenticates with Google Cloud. SQL queries are executed against BigQuery. Results are exported as CSV files to Google Cloud Storage. Secure links to these files are provided for authorized consumption. Prerequisites Before we begin, ensure you have: Google Cloud APIs enabled: BigQuery API and Cloud Storage API Service account with appropriate permissions: BigQuery Job User Storage Admin Note: For this demo, we're using the service account approach for authentication, which is simpler to set up. For production environments, you might consider using GitLab's identity and access management integration with Google Cloud. This integration leverages Workload Identity Federation, which provides enhanced security and is more suitable for enterprise customers and organizations. GitLab project ready to store your SQL code and pipeline configuration Step-by-step implementation 1. Configure Google Cloud credentials. First, set up the necessary environment variables in your GitLab project: Go to your GitLab project \u003e Settings \u003e CI/CD. Expand the Variables section. Add the following variables: GCS_BUCKET: Your Google Cloud Storage bucket name GCP_PROJECT_ID: Your Google Cloud project ID GCP_SA_KEY: Base64-encoded service account key (mark as masked) 2. Create your SQL query. Create a file named query.sql in your GitLab repository with your BigQuery SQL query. The query looks like this: -- This query shows a list of the daily top Google Search terms. SELECT refresh_date AS Day, term AS Top_Term, -- These search terms are in the top 25 in the US each day. rank, FROM `bigquery-public-data.google_trends.top_terms` WHERE rank = 1 -- Choose only the top term each day. AND refresh_date \u003e= DATE_SUB(CURRENT_DATE(), INTERVAL 2 WEEK) -- Filter to the last 2 weeks. GROUP BY Day, Top_Term, rank ORDER BY Day DESC -- Show the days in reverse chronological order. This query gets the top 25 search terms from Google Trends for the current day. 3. Configure the GitLab CI/CD pipeline. Create a .gitlab-ci.yml file in your repository root: image: google/cloud-sdk:alpine include: - template: Jobs/Secret-Detection.gitlab-ci.yml # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Jobs/Secret-Detection.gitlab-ci.yml execute: stage: deploy script: # Set up Google Cloud authentication and install necessary components - export GOOGLE_CLOUD_CREDENTIALS=$(echo $SERVICE_ACCOUNT_KEY | base64 -d) - echo $GOOGLE_CLOUD_CREDENTIALS \u003e service-account-key.json - gcloud auth activate-service-account --key-file service-account-key.json - gcloud components install gsutil # Set the active Google Cloud project - gcloud config set project $PROJECT_ID # Run the BigQuery query and export the results to a CSV file - bq query --format=csv --use_legacy_sql=false \u003c test.sql \u003e results.csv # Create a Google Cloud Storage bucket if it doesn't exist - gsutil ls gs://${CLOUD_STORAGE_BUCKET} || gsutil mb gs://${CLOUD_STORAGE_BUCKET} # Upload the CSV file to the storage bucket - gsutil cp results.csv gs://${CLOUD_STORAGE_BUCKET}/results.csv # Set the access control list (ACL) to make the CSV file publicly readable - gsutil acl ch -u AllUsers:R gs://${CLOUD_STORAGE_BUCKET}/results.csv # Define the static URL for the CSV file - export STATIC_URL=\"https://storage.googleapis.com/${CLOUD_STORAGE_BUCKET}/results.csv\" # Display the static URL for the CSV file - echo \"File URL = $STATIC_URL\" 4. Run the pipeline. Now, whenever changes are merged to your main branch, the pipeline will provide a link to the CSV file stored on the Google Cloud Storage bucket. This file contains the result of the executed SQL query that GitLab subjects to security checks. Benefits of this approach Security: Authentication is handled automatically via service accounts (or Workload Identity Federation for enhanced security in production environments). Auditability: All data exports are tracked through GitLab commits and pipeline logs. Repeatability: Consistent, predictable export process on every run, and can be scheduled. Version control: SQL queries are properly versioned and reviewed. Automation: Significantly fewer manual exports, reducing human error. Try it today By combining GitLab's DevSecOps capabilities with Google Cloud's BigQuery and Cloud Storage, you've now automated and secured your data publishing workflow. This approach reduces manual operations, resolves permission headaches, and addresses security concerns â€“ all achieved with just a few lines of GitLab CI code. Use this tutorial's complete code example to get started now.",
  "image": "https://images.ctfassets.net/r9o86ar0p03f/35zruDUtYFMOf2QU7qzhhv/0299e673bc10e07bed303ef22db94835/REFERENCE_-_display_preview_for_blog_images.png?fm=webp\u0026w=820\u0026h=500",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv data-v-37f1022b=\"\" data-v-53094866=\"\" data-v-74bd29c6=\"\"\u003e\u003cp\u003eGitLab offers a powerful solution for automating and securing \u003ca href=\"https://cloud.google.com/bigquery\"\u003eBigQuery\u003c/a\u003e data exports. This integration transforms manual exports into repeatable, auditable processes that can eliminate security vulnerabilities while saving valuable time. This tutorial explains how to implement this solution so you can quickly reduce manual operations, permission issues, and security concerns with just a few lines of GitLab YAML code.\u003c/p\u003e\n\u003cp\u003eFollow along with this step-by-step video:\u003c/p\u003e\n\n\u003cfigure\u003e\n  \u003ciframe src=\"https://www.youtube.com/embed/gxXX-ItAreo?si=FijY9wMVppCW-18q\" frameborder=\"0\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\u003c/figure\u003e\n\n\u003ch2 id=\"the-solution-architecture\" tabindex=\"-1\"\u003eThe solution architecture \u003ca href=\"#the-solution-architecture\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eOur solution leverages GitLab CI/CD pipelines to automate the secure export of data from BigQuery to Google Cloud Storage. Here\u0026#39;s the high-level architecture:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSQL code is stored and version-controlled in GitLab.\u003c/li\u003e\n\u003cli\u003eAfter code review and approval, GitLab CI/CD pipeline executes the code.\u003c/li\u003e\n\u003cli\u003eThe pipeline authenticates with Google Cloud.\u003c/li\u003e\n\u003cli\u003eSQL queries are executed against BigQuery.\u003c/li\u003e\n\u003cli\u003eResults are exported as CSV files to Google Cloud Storage.\u003c/li\u003e\n\u003cli\u003eSecure links to these files are provided for authorized consumption.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"prerequisites\" tabindex=\"-1\"\u003ePrerequisites \u003ca href=\"#prerequisites\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eBefore we begin, ensure you have:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eGoogle Cloud APIs enabled:\u003c/strong\u003e BigQuery API and Cloud Storage API\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eService account\u003c/strong\u003e with appropriate permissions:\n\u003cul\u003e\n\u003cli\u003eBigQuery Job User\u003c/li\u003e\n\u003cli\u003eStorage Admin\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eNote:\u003c/strong\u003e For this demo, we\u0026#39;re using the service account approach for authentication, which is simpler to set up. For production environments, you might consider using GitLab\u0026#39;s identity and access management integration with Google Cloud. This integration leverages Workload Identity Federation, which provides enhanced security and is more suitable for enterprise customers and organizations.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eGitLab project\u003c/strong\u003e ready to store your SQL code and pipeline configuration\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"step-by-step-implementation\" tabindex=\"-1\"\u003eStep-by-step implementation \u003ca href=\"#step-by-step-implementation\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e1. Configure Google Cloud credentials.\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eFirst, set up the necessary environment variables in your GitLab project:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eGo to your \u003cstrong\u003eGitLab project \u0026gt; Settings \u0026gt; CI/CD\u003c/strong\u003e.\u003c/li\u003e\n\u003cli\u003eExpand the \u003cstrong\u003eVariables\u003c/strong\u003e section.\u003c/li\u003e\n\u003cli\u003eAdd the following variables:\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eGCS_BUCKET\u003c/code\u003e: Your Google Cloud Storage bucket name\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eGCP_PROJECT_ID\u003c/code\u003e: Your Google Cloud project ID\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eGCP_SA_KEY\u003c/code\u003e: Base64-encoded service account key (mark as masked)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e2. Create your SQL query.\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eCreate a file named \u003ccode\u003equery.sql\u003c/code\u003e in your GitLab repository with your BigQuery SQL query. The query looks like this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e-- This query shows a list of the daily top Google Search terms.\nSELECT\n   refresh_date AS Day,\n   term AS Top_Term,\n       -- These search terms are in the top 25 in the US each day.\n   rank,\nFROM `bigquery-public-data.google_trends.top_terms`\nWHERE\n   rank = 1\n       -- Choose only the top term each day.\n   AND refresh_date \u0026gt;= DATE_SUB(CURRENT_DATE(), INTERVAL 2 WEEK)\n       -- Filter to the last 2 weeks.\nGROUP BY Day, Top_Term, rank\nORDER BY Day DESC\n   -- Show the days in reverse chronological order.\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis query gets the top 25 search terms from Google Trends for the current day.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e3. Configure the GitLab CI/CD pipeline.\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eCreate a \u003ccode\u003e.gitlab-ci.yml\u003c/code\u003e file in your repository root:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eimage: google/cloud-sdk:alpine\n\ninclude:\n  - template: Jobs/Secret-Detection.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Jobs/Secret-Detection.gitlab-ci.yml\n\nexecute:\n  stage: deploy\n  script: \n    # Set up Google Cloud authentication and install necessary components\n    - export GOOGLE_CLOUD_CREDENTIALS=$(echo $SERVICE_ACCOUNT_KEY | base64 -d)\n    - echo $GOOGLE_CLOUD_CREDENTIALS \u0026gt; service-account-key.json \n    - gcloud auth activate-service-account --key-file service-account-key.json \n    - gcloud components install gsutil\n    # Set the active Google Cloud project\n    - gcloud config set project $PROJECT_ID\n    # Run the BigQuery query and export the results to a CSV file\n    - bq query --format=csv --use_legacy_sql=false \u0026lt; test.sql \u0026gt; results.csv\n    # Create a Google Cloud Storage bucket if it doesn\u0026#39;t exist\n    - gsutil ls gs://${CLOUD_STORAGE_BUCKET} || gsutil mb gs://${CLOUD_STORAGE_BUCKET}\n    # Upload the CSV file to the storage bucket\n    - gsutil cp results.csv gs://${CLOUD_STORAGE_BUCKET}/results.csv\n    # Set the access control list (ACL) to make the CSV file publicly readable\n    - gsutil acl ch -u AllUsers:R gs://${CLOUD_STORAGE_BUCKET}/results.csv\n    # Define the static URL for the CSV file\n    - export STATIC_URL=\u0026#34;https://storage.googleapis.com/${CLOUD_STORAGE_BUCKET}/results.csv\u0026#34;\n    # Display the static URL for the CSV file\n    - echo \u0026#34;File URL = $STATIC_URL\u0026#34;\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003cstrong\u003e4. Run the pipeline.\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eNow, whenever changes are merged to your main branch, the pipeline will provide a link to the CSV file stored on the Google Cloud Storage bucket. This file contains the result of the executed SQL query that GitLab subjects to security checks.\u003c/p\u003e\n\u003ch2 id=\"benefits-of-this-approach\" tabindex=\"-1\"\u003eBenefits of this approach \u003ca href=\"#benefits-of-this-approach\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eSecurity:\u003c/strong\u003e Authentication is handled automatically via service accounts (or Workload Identity Federation for enhanced security in production environments).\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eAuditability:\u003c/strong\u003e All data exports are tracked through GitLab commits and pipeline logs.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eRepeatability:\u003c/strong\u003e Consistent, predictable export process on every run, and can be scheduled.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eVersion control:\u003c/strong\u003e SQL queries are properly versioned and reviewed.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eAutomation:\u003c/strong\u003e Significantly fewer manual exports, reducing human error.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"try-it-today\" tabindex=\"-1\"\u003eTry it today \u003ca href=\"#try-it-today\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eBy combining GitLab\u0026#39;s DevSecOps capabilities with Google Cloud\u0026#39;s BigQuery and Cloud Storage, you\u0026#39;ve now automated and secured your data publishing workflow. This approach reduces manual operations, resolves permission headaches, and addresses security concerns â€“ all achieved with just a few lines of GitLab CI code.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUse this tutorial\u0026#39;s \u003ca href=\"https://gitlab.com/gitlab-partners-public/google-cloud/demos/big-query-data-publishing\"\u003ecomplete code example\u003c/a\u003e to get started now.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": "2025-03-25T00:00:00Z",
  "modifiedTime": null
}
