{
  "id": "d0b15bb3-5505-4b46-928c-448dfdb0ff1e",
  "title": "Presentation: Where is the Art? A History in Technology",
  "link": "https://www.infoq.com/presentations/creative-technology/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "Andy Piper discusses creative technology and art and the ways in which it has been misunderstood and feared at different points in our shared history and culture. By Andy Piper",
  "author": "Andy Piper",
  "published": "Tue, 14 Jan 2025 14:28:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Technology",
    "History",
    "Transcripts",
    "QCon London 2024",
    "Development",
    "presentation"
  ],
  "byline": "Andy Piper",
  "length": 32985,
  "excerpt": "Andy Piper discusses creative technology and art and the ways in which it has been misunderstood and feared at different points in our shared history and culture.",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s1_20250109115548/apple-touch-icon.png",
  "text": "Transcript Piper: In October 1971, a gentleman called Frieder Nake published a note in PAGE, the Bulletin of the Computer Arts Society, entitled, \"There Should Be No Computer Art\". \"Soon after the advent of computers, it became clear that there was a great potential application for them in the area of artistic creation\", he began. \"Before 1960, digital computers helped to produce poetic text and music. Analog computers, or only oscilloscopes, generated drawings of sets of mathematical curves and representations of oscillations. It was not before the first exhibitions of computer produced pictures were held in 1965 that a greater public took notice of this threat, as some said, progress, as some thought. I was involved in this development from its beginning onward in 1964. I found the way the art scene reacted to the new creations, interesting, pleasing, and stupid. I stated in 1970 that I was no longer going to take part in exhibitions. I find it easy to admit that computer art did not contribute to the advancement of art, if we judge advancement by comparing the computer products to all existing works of art. In other words, the repertoire of results of aesthetic behavior has not been changed by the use of computers. This point of view, namely, that of art history, is shared and held against computer art by many art critics. There is no doubt in my mind\", he said, \"that interesting new methods have been found which can be of some significance for the creative artist\". As you might imagine, this was a bit of a controversial take. Here was a man who had for part of the previous decade been an insider, been an advocate for the use of algorithmic and generative processes to create art. He'd taken part in exhibitions around the world in that mid-60's period up to 1970, and his output in that period was estimated at around 300 to 400 works in ink produced on a high precision flatbed plotter. Frieder Nake's Wikipedia page, says this, \"His statement was rooted in a moral position. The involvement of computer technology in the Vietnam War and in massive attempts by capital to automate productive processes and thereby generate unemployment, should not allow artists to close their eyes and become silent servants of the ruling classes by reconciling high technology with the masses of the poor and suppressed\". I'll just finish this piece by reading another piece from what he posted in that article, which is, \"Questions like, is a computer creative, or is a computer an artist, or the like, should not be considered serious questions, period. In the light of the problems we are facing at the end of the 20th century, those are irrelevant questions\". Background I'm Andy. I live primarily online on the federated social web. For the past 25 years, I've worked alongside you in the technology industry, and I expect to continue to do so. I graduated in 1997 with a degree in modern history, which has always made me something of an interesting person at career fairs, when my employers have been rolling me out to encourage folks to get involved in technology. I'm self-taught as a developer. I'm not here to talk about AI and large language models, and generative creation of art using those means. Instead, we're going to go on a journey and look at one aspect of computer history, and that is creative technology and art, and the ways in which it's been considered a threat and misunderstood at different times in our shared history. We'll also find out how I've accidentally become an artist. We start out in some despair. We're going to go through some discovery. I hope, I certainly have, we will find some delight. The Event Let's talk about what happened, the event. This is my euphemistic term for my recent career path. I was laid off from my dream job from a company that no longer exists. I spent nine years of my life working there, and I spent 15 years of my life on that platform, passionate about enabling people to communicate in real-time, openly around the world. For the first time in our shared history, I think that platform created a lot of opportunities and new ways to communicate that we've inherited from it. All it took was one spiteful billionaire to change everything in a moment and tear it all down. It was a dramatic change, and I knew that I was going to have to take some time away from what I'd been doing, take a step back. During and since the pandemic, my wife and I had found our house filling up with our hobbies, gubbins, just lots of things I like to play around with, electronics and retro gadgets and things. My wife likes to sew and do other things with her handcrafting, and the house was filling up. We thought we'd try to find a space for those. We ended up renting an art studio and moving our hobbies there. There's a longer story here, if you're interested, about the difficulties of renting office space if what you want to do is hot soldering. I've had some interesting conversations about insurance there. I'll tell you about this adventure, and then we'll come on to the art history piece I mentioned. While I was working through that layoff process, which took a longer time than you might expect, for reasons, we were also getting settled into this art studio. We've got a space over in Southwest London. It's just outside Wimbledon. It's an old converted paper warehouse. It's got a range of artists, painters, sculptors, ceramicists, photographers, folks that do picture framing as well. My wife, Heidi, and I, moved in there, and we didn't really think of ourselves as going there to do art. We just wanted a space for our hobbies. I excitedly started going to IKEA, getting lots of shelving, getting all my stuff set up. I grew up in the 1980s and early '90s, and loved the 8-bit era of computers, where you probably may or may not have taken the thing apart and had a look inside. I had an Acorn Electron at home, and I had BBC Micros at school. For me, the reemergence in the last 10 to 15 years of affordable, accessible technology with an educational focus, we're talking about things like Arduino and Raspberry Pi, has really enabled me to re-engage with my early passion for technology. I love solving problems with code, and I also love to tinker around with electronics. In fact, about three years ago, I started to get involved with the MicroPython project. MicroPython is a rewrite of Python, implementation of Python that runs on microcontrollers. Once you've connected up a few sensors to your little small computing board, you might want to put that into a case. As luck would have it, my friend was getting rid of an old 3D printer, so I inherited that from him. Before long, I had this whole studio, and I had three 3D printers. Not that I printed more, but I could have done that as well. The Makerspace Within a few months, at the beginning of 2023, my wife and I built up this small makerspace for the two of us. She was using her cutting machine to create crafts with vinyl, and I only had to 3D print, but we still didn't really know what we were doing there. We just had this space. I was really in denial. It was quite a traumatic experience watching what happened at my former employer. Several of our immediate neighboring artists in the studios are very traditional painters. Have been there for quite a long time, very different styles. We didn't really feel very connected to them. The Wimbledon Art Studios run a show twice a year. Our first show was this time last year, last May, and we were invited to take part. We thought, it sounds great. A lot of the other artists were encouraging us and saying, \"Great commercial opportunity\". What are we going to sell? I thought I could print some bits and pieces, some pots and some trays. My wife was creating things with her vinyl cutter, creating bags and T-shirts and things. I thought it'd be good to have something a bit more interesting than that. I got a little toy 3D printer. You can get them for less than £100, not very high quality, but great for playing with learning. I put one of those out. Then I've also seen this thing in a magazine, which I thought I'd have a go at making, so that if people came into the studio, I could talk about technology. This is BrachioGraph. BrachioGraph means arm-writer. It was created by a gentleman called Daniele Procida. He presented it at PyCon UK in 2019. It's super simple, you can see here. It's made up of lollipop sticks. It's got three small servomotors, a little clip to hold the pen, and beyond that, you've got a Raspberry Pi Zero. The code is all in Python. It's all open source. The recipe is online for about £20, just a little bit over. You too can build your own drawing robot. It's lovely and basic. One of the things I love about it is its limitations. It's two arms on rotational joints, it's like your arm. It can only draw, however, curves. It cannot move in straight lines. The lines are wiggly and inaccurate. They're very cheap motors, it's very slow. It's going to draw a little bit for us. I put this out on display, and I had a few things being drawn as people came through the studios, and we were talking about 3D printing and other things. Again, we were very different to what all the other artists were doing. I'd get to talk to, especially the youngsters who would go, \"Dad, look, this robot's drawing things\". If they liked whatever it had produced, I just gave them the bit of paper to take away home with them. I enjoyed explaining the limitations and how it worked with the arm and the fact that it can't draw straight lines. In order to draw straight lines, you're going to need high precision. You're going to need an x and y axis to move your pen around. Something else has an x and y axis and also has a z axis, and that's a 3D printer. A plotter is a 2D printer. A 3D printer has a z axis, moves up and down, as well as left and right and around. You put an extruder on the top and squirt hot plastic through, and you've got a 3D printer. Things were just starting to come together, in my mind, as we did this. This was never going to threaten our neighbors in the studios, and I don't want to threaten our neighbors in the studio. This is not something that alarmed anybody in the studios as the new fancy artist in town. Reemergence of Pen Plotters After that show, I thought, I'm interested in this. I'm going to go and buy a proper one, because everybody got really engaged in my plotter. This is a proper plotter that you could buy commercially. It's called an AxiDraw. This is a nice one. I got that in. My wife got really interested as well. This is a piece that actually we're going to have in the show in May. It's got a lovely open-source ecosystem, this machine. The hardware is not open source, but you can drive it using Inkscape. It's got a Python API. Once that arrived, my wife got interested. This is a sped-up thing that you can see. It's nice and accurate. This is just drawing a quick postcard. I immediately regretted that I only got the A4 version, because I want to now do really big things. Once I started to think more about the space that we'd found ourselves in, several things began to emerge. The first one is that as I looked at what I was doing, and then starting to discover what other people were doing with plotters, I realized that this was not new at all. There's quite a renaissance as people today are starting to use pen plotters a bit more again, but as we'll see, people have been using pen plotters for a long time. I also realized that while we could transform images to lines and draw them out using a plotter, in the case of the BrachioGraph, I gave it a picture, and it transformed that picture into what was drawn. You can also go directly without having an intermediate picture stage. You can write some code and drive the plotter. You don't need to be creative to come up with something first, if you don't want to. You don't have to be artistic. You don't have to have some huge artistic vision to come up with something that's interesting. Another thing that I particularly fell in love with was that this is about tangible, physical output. I think digital creations are amazing and fantastic and fun, but there's a whole new rabbit hole you find yourself going down when you start getting interested in the different materials that you're using as well. We had another show coming up in November last year, and I, because I'm constantly living online, reading what people are doing, discovered this article in HackSpace magazine, which is available for free online, as well as in the shops, in paper form, if you prefer. A gentleman called Ben Everard had bought a cheap plotter online with laser cut pieces using an Arduino, and found that the code didn't work. He got frustrated by that, and decided that he wanted to recreate the thing himself. He wrote an article about it. I tried to follow this article and found that it had quite a few missing details. The process of building this plotter was a bit more complicated. I needed to 3D print some parts. I needed to put together a small circuit using a Raspberry Pi Pico, which is a microcontroller. The way that this plotter works is a hanging plotter, and it's called a polargraph. You have this central gondola that moves around on strong cables, otherwise known as cotton, pieces of cotton from pulleys. It's pretty cheaply made. It's a little bit annoying, because it's polar, it always needs to recenter in the middle of the board. There's nothing automatic to do that. You're trying to press buttons to get the thing to come back to the center each time. I'm not going to give you a blow-by-blow account of how I built this. You can go and read about it on my website, if you would like. There's a project page for it. I'll tell you a little bit about it. G-code in 3D printing, is simply a set of instructions that tell a 3D printer how to move the head in x and y and z, and at what points to heat up the filament and temperature to push it through at. Plotters work on a very similar set of principles, G-code will give it a set of x and y instructions. Open-source software here has benefited both the 2D printer plotter and 3D printer areas. CNC machines and drilling machines also use the same set of instructions. This plotter simply runs a piece of code originally written for the Arduino, called GRBL. You just transform your image into this G-code, fire it over a serial port to, in this case, the Raspberry Pi Pico, and it sends instructions, and it moves around and draws things. Away goes the plotter. It's simple and it works. As well as having built that, my wife and I actually used the AxiDraw, the proper plotter, to start to create some art ourselves. There's a lovely piece of software, software solves all problems, or a lot of them anyway, that enables us to take our images and decompose them into lines that the plotter can create. You'll see here on the right-hand side of the image, are some pictures of lighthouses. Those are pictures of fairly low-quality digital camera taken images from around the Great Lakes in the U.S., where Heidi is from, and they were taken about 20 years ago. They weren't high quality. If you transform them into some plotter art, you get these quite nice effects. On the left-hand side of the image are some things I came up with which are a bit more abstract, decomposed circuit-like type diagrams. We hung these up on the wall outside. If you met me during the event here, and I gave you a card, you got a small Andy Piper original on the back of the card. We had those outside. We had those up for sale. I put the hanging cluster inside the door, and people came through. It was the 60th anniversary of the best TV show in the world that Jeremy knows all about, because he made the first computer game for. I had that drawing on the wall as well. It was a little bit of fun. It definitely got people talking about what we were doing. We could draw them in and say, come and see a machine drawing things. Where is the Art? A lot of the visitors were much more interested. We had things on the wall outside the studio this time. We had something to talk about. One specific woman came and said to my wife, we're looking at the lighthouses, when she said, \"Where's the art in this?\" My wife has a little bit less patience than me. I've been doing developer relations for 15 years, so I hopefully am a little bit more tactful. Before she got too annoyed, I jumped in and started talking this lady through the process of choosing the image, working out which algorithm would be good for processing it into line art, the choice of pens and materials, actually putting it through the plotter, the whole process. It's not the same as taking a photo on your phone of Big Ben, and going home and sending it to your photo printer and printing out 10 copies. Very few people print out copies I think of photos anyway. It's not the same, each one of those copies is a carbon copy. Each one of these is a unique thing. She seemed quite satisfied once she got through her inquiry and made her point. I think this is really interesting because it comes back to Frieder Nake and what was happening in 1970 when he was finding that the traditional art world was saying, no. Contemporary Plotter Artists One of my favorite 1960s art pieces is this piece by Georg Nees, in 1968, it's called Schotter, which means gravel in English. This was a period, mid-1960s when computers were not small, didn't have rich graphical displays, didn't have easy to use input devices. I think this is quite a lovely thing. It's a very simple algorithm. You draw a square, and then you repeat that square, adding a little bit of noise for each iteration, and then you get this lovely collapsing effect that I find visually pleasing. Nees was interested in the relationship between order and chaos. This piece is now in the collection at the Victoria and Albert Museum, so it must be art. This was entirely created using code. It's often difficult today to take the programs from 1968, in this case, and rerun them. This was written in ALGOL. Of course, computer systems have moved on. You certainly wouldn't be running something today at the same speed that a system was creating it in 1968. Often, the compilers, the interpreters, have gone away as well. Input and output device is completely different. It's incredibly cool to me that you can download a Rust package called whiskers today, fire it up, and do that exact same thing in real-time with sliders that let you modify all of the parameters and experiment and see what the effects would be. Today we have programming environments like Processing, p5.js. There are packages in Rust and Python and others that let you do some incredibly fun things in an experimental way. There's another strand here which I'm going to leave hanging and let you go and research if you're interested on your own, around preservation of our shared computer history and past, and how we can preserve those original ideas. I went to the V\u0026A, and a lot of the pieces are not on permanent display. They do have cyclical exhibitions. Schotter, you can find it on their website. You get the information from the page. You send them an email, say, I'd like to see this piece, please, and you get invited to go and have a look. You've got to give them about a week's notice. I read the piece of information about the original A4 size sheet. I sat in the library there at the V\u0026A. The lady wheeled out a trolley with the items I'd ordered. This was one of them. This is, in fact, a 1-meter-high lithograph, because this was the display piece. This was the piece that was actually displayed in Montreal in 1972. It's quite fascinating. Down in the corner, you see this little detail, and you'll find this across Nees pieces, because Nees, as it happened, worked for Siemens in the 1960s, a Siemens System 4004. This is a Siemens System 4004, as you can see, highly portable, very easy to tinker with. This was a computer from the 1971 movie, \"Charlie and the Chocolate Factory\", that helped to find the location of the final golden ticket, so IBM System/360 compatible. To show you a couple of other pieces from the V\u0026A. This is one from a gentleman called Peter Struycken. This one's from 1969. I love this one because we actually have the original code preserved here, and because this is QCon, let's have a look at the code. I don't know what language this is. I had a look. There are some familiar structures there. I cut and posted it into Google Gemini. I said, \"Can you help me figure out what language this is in?\" It said, \"It might be ALGOL, it might be Pascal, I can't quite tell. Give me some more context\". I said, it was written by Peter Struycken. Gemini gave me the Wikipedia entry for him. Didn't tell me how to rerun this code. This is another amazing piece from the collection. This one is fascinating to me because it actually dates from 1962 as you'll see. It's from a British artist called Desmond Paul Henry. This is not from a programmable computer. It is from a mechanical computer. It is from a mechanical computer that was used as a mechanical army analog bomb site computer, actually, that he repurposed. He rebuilt that computer into three drawing machines, and took their swinging arm parts and attached pens to them. I did like the texture, and you can see the line the Biro drew on the card. Let's come back to the coding aspect. I've got another little bit to read for you here, because I do love the way that this has been written about. Before I do that, I'll point out that Georg Nees, Frieder Nake, who are two people I've mentioned, were only a small number of a group of pioneers that included folks like Vera Molnár, and they were exploring this aspect of code primarily from a mathematical standpoint, into art pieces. As we move from the '60s into the '70s, we also then start to see more capable output devices. This book, \"Tracing the Line\", was published just earlier this year, and covers a variety of contemporary plotter artists. The introduction has a lovely background, and I was just going to read you this part. \"The first attempts at generative art date back to the 1960s where no graphic software existed, let alone a screen or computer mouse. Frieder Nake, one of the pioneers of this art form was 25 years old and studying mathematics at the University of Stuttgart, when he began experimenting with a ZUSE Graphomat Z64, a drawing machine that was a predecessor to modern plotters, capable of creating intricate graphics by writing programs. These programs had to be transferred to punched cards, which were then processed by a big computer, which then came out with a punched tape, which was fed into the Graphomat to create the art pieces\". The ZUSE Graphomat supported the use of four pens. If you actually go and look at Frieder Nake's work, which, again, you can do in the V\u0026A, you'll see that he uses four colors. Referring to conceptual art, Frieder Nake repeatedly said that the program itself was the artwork, the execution, the image merely represented the surface. This is where the backlash comes in. We've got this group of young 25-year-old mathematicians starting to use computers to generate things that people are getting interested in. Traditional art world, \"Witchcraft. Computers are not thinking machines. They must not be allowed to create art\". Harold Cohen (Traditional Artist), and the AARON Program There was a traditional artist, though, a British artist, in fact, called Harold Cohen. He was an existing artist. He had a career as a painter. He started to think about how computers could be applied to his existing practice. He taught himself to code, like me, actually, which is quite a nice parallel. He started to consider the choices that could be taken away from his artistic practice, like where to put the color or how to arrange lines by giving those choices to a program or a computer. He continued to impose rules on the output that the computer created. Cohen moved to the University of California in 1968, and he went through this transitional period in the '60s and '70s, where he was moving from working with mixed media, which is what he had previously done, to co-creating with the computer. What you can see here is a detail of a piece that's printed on a dot matrix piece of paper. I've taken a closer up picture so you can see here on the right-hand side, it's a pattern of numbers printed in a diamond shape, and then he's gone in with a felt tip and drawn over clusters of those numbers to create the artwork. n 1970, there's a remarkable sequence where Cohen uses code to draw these shapes, label the shapes with colors that he's going to apply. He's using some rules in the program to determine where the colors may go, which colors may or may not touch one another. Then, on the top right, you can see where he's inked that in. The final piece at the bottom there is an artwork that he's created in acrylic. He's thinking about, all the time as he's doing this, as he's moved to California, starting to work with the systems they had and give up more of his artistic practice. He started to formulate this idea of a program to co-create with him. He asked this question, what are the minimum conditions under which a set of marks, functions as an image? Boiling it all the way back to the very basics, at what point is this an image? He created a program, and he called this program, AARON. He built machines that enabled AARON to do the drawing, as well as showing where things should go. One of these, interestingly, was a turtle. Jeremy famously immortalized on the packaging for the turtle that the BBC had for the BBC Micro. I grew up in the 1980s. There was a programming language called Logo, that you could run on the BBC Micro. You had a little digital turtle, and you gave it instructions like forward and left, and it would move around. Harold Cohen's turtle moved around the floor of the gallery, and drew shapes and painted, which was very cool, I think. I love this unknown connection, until I did the research. AARON started out written in C. Cohen rewrote it into Lisp because he got frustrated with C's limitations. By the mid-1990s, Harold Cohen was giving the program the ability to paint for him or apply the paint for him as well. You can see it's a bit splotchy, but this was, I think, from 1995. This was mind blowing to me, because just before Christmas, so around November last year, I went to an exhibition and a workshop with a lady called Licia He, who is a contemporary plotter artist. She has got an AxiDraw, but she has converted it not to drive a pen around, but to actually move around and dip a brush into paint and draw and apply the paint and ink to the paper. That's a bit more complicated than a pen, because you need to know how much paint to load up on the brush. You need to know how much you can apply before the paper goes soggy and wears through. You need to be able to wash the brush in between colors. I thought this was brilliant and brand new, and it is brilliant. Licia is a phenomenal artist, but not new. This has happened before. This is actually Licia's setup that I saw. If you Google, Harold Cohen, AARON, then you will find that AARON is often called an artificial intelligence. I think that's a very interesting thing to stop and think about, given the current hype cycle that we're caught up in. Cohen said this, \"If what AARON is making is not art, what is it exactly, and in what other ways beyond its origin, other than its origin, does it differ from the real thing? If it is not thinking, what exactly is it doing?\" You can go and look at Harold Cohen's work. There is a small gallery called the Gazelli Art House over in Mayfair, just close to Green Park station. You can walk in, you can look at some of the original pieces of work. If you'd like to see his work with AARON, that's currently on display in New York at the Whitney by the High Line, the American Art Museum there. How to Be Creative I'm going to have to skip through 20 years of computer art. I did want to give you that background about the 1960s and 1970s, and give you a sense of what's been happening, probably outside of most of our domains. Let's get back to being creative today, and round out by looking at how we can be creative. A pen plotter is not an inkjet. An inkjet or a laser printer is going to reproduce things for us. We know how annoying printers are today. It's probably the most annoying pieces of technology in most people's lives. You're going to need a plotter. We've talked about several types. There's BrachioGraph. There's polargraph. There's the x, y. You're going to need some line art. There's software that enables you to convert bitmap to vector art. There's a piece of software called DrawingBot that's written in Java. It's desktop software. You're going to need some materials. Materials is where things get really exciting, because you can choose the different weights and textures and colors of paper. You can choose whether you want to use fineliners, or fountain pens, or sharpies, or metallic ink to whatever you create. As you build up those lines on your piece of art, as you watch the plotter move and build up the ink, every single pen stroke is unique. It's a little bit unpredictable every time exactly how it's going to lay down on the paper. This is a piece I made for the art show last November, and this is all printed on cotton rag paper. This is a Cistercian numeral. The Cistercian monks in the 13th century had this numeric system that enabled them to put any number as a single character like this, depending on where the lines appeared on the stave. This number is 1984. I drew this using a plotter, using sepia ink on this cotton rag paper. The cotton rag paper is not even. A plotter really wants your surface to be completely flat. This one requires a bit of babysitting, because if you're not fully flat, then you might end up dragging, and things like that. It's really quite an interesting, tangible process. Growing up in the 1980s, I occasionally saw a plotter in an office or at school, but then they fell out of use, and along came inkjets and laser printers, and we all got them at home. That means nobody wants them anymore, so you can get them on eBay. This is my current project. It's a Roland DXY-1100. It's an A3 plotter, and it takes up to eight different colors of pen. You need to figure out how to plug it into your modern computer. This uses a 25-pin serial interface. You need to wire that up to a USB. Somebody's fortunately written a Python library that lets you talk to this, which is very handy. The little adapters on the left-hand side are purple. I've had to print adapters for the pens. This was the first example of the big ink manufacturers trying to lock us in to their devices, so that you got these tiny, little stubby pens that would only go in these plotters. Now I'm 3D printing my own adapters for modern pens. Code = Art Am I a technologist, am I a historian, or am I an artist? I'm a coder. I write code. I'm sure many, if not most of us, do the same. Code can transform art. Code can create art. Code can be art. Computers and technology have, since the '60s, at least, been at the heart of tension in our society, and certainly with the art world. The nature of art, I think, to me, is to comment on that tension and the things that we see in our society and the experiences we have. Isn't tension an element of art? There's a link, andypiper.url.lol/wita. It's just a simple little page. There's a lot of links on there, if you want to go and explore any of the elements I've spoken about. Conclusion This is something I plotted out. It sits on the wall inside the studio. It's Georg Nees' artist statement from his 1972 portfolio in Montreal. \"Computer art is sort of artificial genetics. Its DNA is on punched cards. Information originally emanating from the brains of programmers, yet to be mutated and augmented in complex ways by dice-gaming computers, emerging finally into the environment of rejecting, and/or, as one may observe, promoting culture\". We live in an amazing time. Jeremy said, we think we're in the technology business, but we're actually in the people business. I love that. We are physical beings. That's really important as well. We live at a time of ephemerality, and fleeting digital moments. A single line of code might not be unique, a few lines of code might be more unique, but every stroke of a pen or a brush is unique. Making something digital is fun, but mostly ephemeral. Making something tangible and physical has the opportunity to endure. Go create. Go take the opportunity of all of the open-source software and hardware and beautiful code that we have, and make something wonderful. See more presentations with transcripts",
  "image": "https://res.infoq.com/presentations/creative-technology/en/card_header_image/Andy-Piper-twitter-card-1734683668309.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"presentationNotes\"\u003e\n                                    \u003ch2\u003eTranscript\u003c/h2\u003e\n\n\u003cp\u003ePiper: In October 1971, a gentleman called Frieder Nake published a note in PAGE, the Bulletin of the Computer Arts Society, entitled, \u0026#34;There Should Be No Computer Art\u0026#34;. \u0026#34;Soon after the advent of computers, it became clear that there was a great potential application for them in the area of artistic creation\u0026#34;, he began. \u0026#34;Before 1960, digital computers helped to produce poetic text and music. Analog computers, or only oscilloscopes, generated drawings of sets of mathematical curves and representations of oscillations. It was not before the first exhibitions of computer produced pictures were held in 1965 that a greater public took notice of this threat, as some said, progress, as some thought. I was involved in this development from its beginning onward in 1964.\u003c/p\u003e\n\n\u003cp\u003eI found the way the art scene reacted to the new creations, interesting, pleasing, and stupid. I stated in 1970 that I was no longer going to take part in exhibitions. I find it easy to admit that computer art did not contribute to the advancement of art, if we judge advancement by comparing the computer products to all existing works of art. In other words, the repertoire of results of aesthetic behavior has not been changed by the use of computers. This point of view, namely, that of art history, is shared and held against computer art by many art critics. There is no doubt in my mind\u0026#34;, he said, \u0026#34;that interesting new methods have been found which can be of some significance for the creative artist\u0026#34;.\u003c/p\u003e\n\n\u003cp\u003eAs you might imagine, this was a bit of a controversial take. Here was a man who had for part of the previous decade been an insider, been an advocate for the use of algorithmic and generative processes to create art. He\u0026#39;d taken part in exhibitions around the world in that mid-60\u0026#39;s period up to 1970, and his output in that period was estimated at around 300 to 400 works in ink produced on a high precision flatbed plotter. Frieder Nake\u0026#39;s Wikipedia page, says this, \u0026#34;His statement was rooted in a moral position.\u003c/p\u003e\n\n\u003cp\u003eThe involvement of computer technology in the Vietnam War and in massive attempts by capital to automate productive processes and thereby generate unemployment, should not allow artists to close their eyes and become silent servants of the ruling classes by reconciling high technology with the masses of the poor and suppressed\u0026#34;. I\u0026#39;ll just finish this piece by reading another piece from what he posted in that article, which is, \u0026#34;Questions like, is a computer creative, or is a computer an artist, or the like, should not be considered serious questions, period. In the light of the problems we are facing at the end of the 20th century, those are irrelevant questions\u0026#34;.\u003c/p\u003e\n\n\u003ch2\u003eBackground\u003c/h2\u003e\n\n\u003cp\u003eI\u0026#39;m Andy. I live primarily online on the federated social web. For the past 25 years, I\u0026#39;ve worked alongside you in the technology industry, and I expect to continue to do so. I graduated in 1997 with a degree in modern history, which has always made me something of an interesting person at career fairs, when my employers have been rolling me out to encourage folks to get involved in technology. I\u0026#39;m self-taught as a developer. I\u0026#39;m not here to talk about AI and large language models, and generative creation of art using those means. Instead, we\u0026#39;re going to go on a journey and look at one aspect of computer history, and that is creative technology and art, and the ways in which it\u0026#39;s been considered a threat and misunderstood at different times in our shared history. We\u0026#39;ll also find out how I\u0026#39;ve accidentally become an artist. We start out in some despair. We\u0026#39;re going to go through some discovery. I hope, I certainly have, we will find some delight.\u003c/p\u003e\n\n\u003ch2\u003eThe Event\u003c/h2\u003e\n\n\u003cp\u003eLet\u0026#39;s talk about what happened, the event. This is my euphemistic term for my recent career path. I was laid off from my dream job from a company that no longer exists. I spent nine years of my life working there, and I spent 15 years of my life on that platform, passionate about enabling people to communicate in real-time, openly around the world. For the first time in our shared history, I think that platform created a lot of opportunities and new ways to communicate that we\u0026#39;ve inherited from it. All it took was one spiteful billionaire to change everything in a moment and tear it all down. It was a dramatic change, and I knew that I was going to have to take some time away from what I\u0026#39;d been doing, take a step back.\u003c/p\u003e\n\n\u003cp\u003eDuring and since the pandemic, my wife and I had found our house filling up with our hobbies, gubbins, just lots of things I like to play around with, electronics and retro gadgets and things. My wife likes to sew and do other things with her handcrafting, and the house was filling up. We thought we\u0026#39;d try to find a space for those. We ended up renting an art studio and moving our hobbies there. There\u0026#39;s a longer story here, if you\u0026#39;re interested, about the difficulties of renting office space if what you want to do is hot soldering. I\u0026#39;ve had some interesting conversations about insurance there. I\u0026#39;ll tell you about this adventure, and then we\u0026#39;ll come on to the art history piece I mentioned.\u003c/p\u003e\n\n\u003cp\u003eWhile I was working through that layoff process, which took a longer time than you might expect, for reasons, we were also getting settled into this art studio. We\u0026#39;ve got a space over in Southwest London. It\u0026#39;s just outside Wimbledon. It\u0026#39;s an old converted paper warehouse. It\u0026#39;s got a range of artists, painters, sculptors, ceramicists, photographers, folks that do picture framing as well. My wife, Heidi, and I, moved in there, and we didn\u0026#39;t really think of ourselves as going there to do art. We just wanted a space for our hobbies. I excitedly started going to IKEA, getting lots of shelving, getting all my stuff set up. I grew up in the 1980s and early \u0026#39;90s, and loved the 8-bit era of computers, where you probably may or may not have taken the thing apart and had a look inside. I had an Acorn Electron at home, and I had BBC Micros at school.\u003c/p\u003e\n\n\u003cp\u003eFor me, the reemergence in the last 10 to 15 years of affordable, accessible technology with an educational focus, we\u0026#39;re talking about things like Arduino and Raspberry Pi, has really enabled me to re-engage with my early passion for technology. I love solving problems with code, and I also love to tinker around with electronics. In fact, about three years ago, I started to get involved with the MicroPython project. MicroPython is a rewrite of Python, implementation of Python that runs on microcontrollers. Once you\u0026#39;ve connected up a few sensors to your little small computing board, you might want to put that into a case. As luck would have it, my friend was getting rid of an old 3D printer, so I inherited that from him. Before long, I had this whole studio, and I had three 3D printers. Not that I printed more, but I could have done that as well.\u003c/p\u003e\n\n\u003ch2\u003eThe Makerspace\u003c/h2\u003e\n\n\u003cp\u003eWithin a few months, at the beginning of 2023, my wife and I built up this small makerspace for the two of us. She was using her cutting machine to create crafts with vinyl, and I only had to 3D print, but we still didn\u0026#39;t really know what we were doing there. We just had this space. I was really in denial. It was quite a traumatic experience watching what happened at my former employer. Several of our immediate neighboring artists in the studios are very traditional painters. Have been there for quite a long time, very different styles. We didn\u0026#39;t really feel very connected to them. The Wimbledon Art Studios run a show twice a year. Our first show was this time last year, last May, and we were invited to take part. We thought, it sounds great. A lot of the other artists were encouraging us and saying, \u0026#34;Great commercial opportunity\u0026#34;. What are we going to sell? I thought I could print some bits and pieces, some pots and some trays.\u003c/p\u003e\n\n\u003cp\u003eMy wife was creating things with her vinyl cutter, creating bags and T-shirts and things. I thought it\u0026#39;d be good to have something a bit more interesting than that. I got a little toy 3D printer. You can get them for less than £100, not very high quality, but great for playing with learning. I put one of those out. Then I\u0026#39;ve also seen this thing in a magazine, which I thought I\u0026#39;d have a go at making, so that if people came into the studio, I could talk about technology. This is BrachioGraph. BrachioGraph means arm-writer. It was created by a gentleman called Daniele Procida. He presented it at PyCon UK in 2019. It\u0026#39;s super simple, you can see here. It\u0026#39;s made up of lollipop sticks. It\u0026#39;s got three small servomotors, a little clip to hold the pen, and beyond that, you\u0026#39;ve got a Raspberry Pi Zero. The code is all in Python. It\u0026#39;s all open source. The recipe is online for about £20, just a little bit over. You too can build your own drawing robot. It\u0026#39;s lovely and basic.\u003c/p\u003e\n\n\u003cp\u003eOne of the things I love about it is its limitations. It\u0026#39;s two arms on rotational joints, it\u0026#39;s like your arm. It can only draw, however, curves. It cannot move in straight lines. The lines are wiggly and inaccurate. They\u0026#39;re very cheap motors, it\u0026#39;s very slow. It\u0026#39;s going to draw a little bit for us. I put this out on display, and I had a few things being drawn as people came through the studios, and we were talking about 3D printing and other things. Again, we were very different to what all the other artists were doing. I\u0026#39;d get to talk to, especially the youngsters who would go, \u0026#34;Dad, look, this robot\u0026#39;s drawing things\u0026#34;. If they liked whatever it had produced, I just gave them the bit of paper to take away home with them. I enjoyed explaining the limitations and how it worked with the arm and the fact that it can\u0026#39;t draw straight lines.\u003c/p\u003e\n\n\u003cp\u003eIn order to draw straight lines, you\u0026#39;re going to need high precision. You\u0026#39;re going to need an x and y axis to move your pen around. Something else has an x and y axis and also has a z axis, and that\u0026#39;s a 3D printer. A plotter is a 2D printer. A 3D printer has a z axis, moves up and down, as well as left and right and around. You put an extruder on the top and squirt hot plastic through, and you\u0026#39;ve got a 3D printer. Things were just starting to come together, in my mind, as we did this. This was never going to threaten our neighbors in the studios, and I don\u0026#39;t want to threaten our neighbors in the studio. This is not something that alarmed anybody in the studios as the new fancy artist in town.\u003c/p\u003e\n\n\u003ch2\u003eReemergence of Pen Plotters\u003c/h2\u003e\n\n\u003cp\u003eAfter that show, I thought, I\u0026#39;m interested in this. I\u0026#39;m going to go and buy a proper one, because everybody got really engaged in my plotter. This is a proper plotter that you could buy commercially. It\u0026#39;s called an AxiDraw. This is a nice one. I got that in. My wife got really interested as well. This is a piece that actually we\u0026#39;re going to have in the show in May. It\u0026#39;s got a lovely open-source ecosystem, this machine. The hardware is not open source, but you can drive it using Inkscape. It\u0026#39;s got a Python API. Once that arrived, my wife got interested. This is a sped-up thing that you can see. It\u0026#39;s nice and accurate. This is just drawing a quick postcard. I immediately regretted that I only got the A4 version, because I want to now do really big things. Once I started to think more about the space that we\u0026#39;d found ourselves in, several things began to emerge.\u003c/p\u003e\n\n\u003cp\u003eThe first one is that as I looked at what I was doing, and then starting to discover what other people were doing with plotters, I realized that this was not new at all. There\u0026#39;s quite a renaissance as people today are starting to use pen plotters a bit more again, but as we\u0026#39;ll see, people have been using pen plotters for a long time. I also realized that while we could transform images to lines and draw them out using a plotter, in the case of the BrachioGraph, I gave it a picture, and it transformed that picture into what was drawn. You can also go directly without having an intermediate picture stage. You can write some code and drive the plotter. You don\u0026#39;t need to be creative to come up with something first, if you don\u0026#39;t want to. You don\u0026#39;t have to be artistic. You don\u0026#39;t have to have some huge artistic vision to come up with something that\u0026#39;s interesting.\u003c/p\u003e\n\n\u003cp\u003eAnother thing that I particularly fell in love with was that this is about tangible, physical output. I think digital creations are amazing and fantastic and fun, but there\u0026#39;s a whole new rabbit hole you find yourself going down when you start getting interested in the different materials that you\u0026#39;re using as well.\u003c/p\u003e\n\n\u003cp\u003eWe had another show coming up in November last year, and I, because I\u0026#39;m constantly living online, reading what people are doing, discovered this article in HackSpace magazine, which is available for free online, as well as in the shops, in paper form, if you prefer. A gentleman called Ben Everard had bought a cheap plotter online with laser cut pieces using an Arduino, and found that the code didn\u0026#39;t work. He got frustrated by that, and decided that he wanted to recreate the thing himself. He wrote an article about it. I tried to follow this article and found that it had quite a few missing details. The process of building this plotter was a bit more complicated. I needed to 3D print some parts. I needed to put together a small circuit using a Raspberry Pi Pico, which is a microcontroller.\u003c/p\u003e\n\n\u003cp\u003eThe way that this plotter works is a hanging plotter, and it\u0026#39;s called a polargraph. You have this central gondola that moves around on strong cables, otherwise known as cotton, pieces of cotton from pulleys. It\u0026#39;s pretty cheaply made. It\u0026#39;s a little bit annoying, because it\u0026#39;s polar, it always needs to recenter in the middle of the board. There\u0026#39;s nothing automatic to do that. You\u0026#39;re trying to press buttons to get the thing to come back to the center each time. I\u0026#39;m not going to give you a blow-by-blow account of how I built this. You can go and read about it on my website, if you would like. There\u0026#39;s a project page for it. I\u0026#39;ll tell you a little bit about it. G-code in 3D printing, is simply a set of instructions that tell a 3D printer how to move the head in x and y and z, and at what points to heat up the filament and temperature to push it through at. Plotters work on a very similar set of principles, G-code will give it a set of x and y instructions.\u003c/p\u003e\n\n\u003cp\u003eOpen-source software here has benefited both the 2D printer plotter and 3D printer areas. CNC machines and drilling machines also use the same set of instructions. This plotter simply runs a piece of code originally written for the Arduino, called GRBL. You just transform your image into this G-code, fire it over a serial port to, in this case, the Raspberry Pi Pico, and it sends instructions, and it moves around and draws things. Away goes the plotter. It\u0026#39;s simple and it works.\u003c/p\u003e\n\n\u003cp\u003eAs well as having built that, my wife and I actually used the AxiDraw, the proper plotter, to start to create some art ourselves. There\u0026#39;s a lovely piece of software, software solves all problems, or a lot of them anyway, that enables us to take our images and decompose them into lines that the plotter can create. You\u0026#39;ll see here on the right-hand side of the image, are some pictures of lighthouses. Those are pictures of fairly low-quality digital camera taken images from around the Great Lakes in the U.S., where Heidi is from, and they were taken about 20 years ago. They weren\u0026#39;t high quality. If you transform them into some plotter art, you get these quite nice effects.\u003c/p\u003e\n\n\u003cp\u003eOn the left-hand side of the image are some things I came up with which are a bit more abstract, decomposed circuit-like type diagrams. We hung these up on the wall outside. If you met me during the event here, and I gave you a card, you got a small Andy Piper original on the back of the card. We had those outside. We had those up for sale. I put the hanging cluster inside the door, and people came through. It was the 60th anniversary of the best TV show in the world that Jeremy knows all about, because he made the first computer game for. I had that drawing on the wall as well. It was a little bit of fun. It definitely got people talking about what we were doing. We could draw them in and say, come and see a machine drawing things.\u003c/p\u003e\n\n\u003ch2\u003eWhere is the Art?\u003c/h2\u003e\n\n\u003cp\u003eA lot of the visitors were much more interested. We had things on the wall outside the studio this time. We had something to talk about. One specific woman came and said to my wife, we\u0026#39;re looking at the lighthouses, when she said, \u0026#34;Where\u0026#39;s the art in this?\u0026#34; My wife has a little bit less patience than me. I\u0026#39;ve been doing developer relations for 15 years, so I hopefully am a little bit more tactful.\u003c/p\u003e\n\n\u003cp\u003eBefore she got too annoyed, I jumped in and started talking this lady through the process of choosing the image, working out which algorithm would be good for processing it into line art, the choice of pens and materials, actually putting it through the plotter, the whole process. It\u0026#39;s not the same as taking a photo on your phone of Big Ben, and going home and sending it to your photo printer and printing out 10 copies. Very few people print out copies I think of photos anyway. It\u0026#39;s not the same, each one of those copies is a carbon copy. Each one of these is a unique thing. She seemed quite satisfied once she got through her inquiry and made her point. I think this is really interesting because it comes back to Frieder Nake and what was happening in 1970 when he was finding that the traditional art world was saying, no.\u003c/p\u003e\n\n\u003ch2\u003eContemporary Plotter Artists\u003c/h2\u003e\n\n\u003cp\u003eOne of my favorite 1960s art pieces is this piece by Georg Nees, in 1968, it\u0026#39;s called Schotter, which means gravel in English. This was a period, mid-1960s when computers were not small, didn\u0026#39;t have rich graphical displays, didn\u0026#39;t have easy to use input devices. I think this is quite a lovely thing. It\u0026#39;s a very simple algorithm. You draw a square, and then you repeat that square, adding a little bit of noise for each iteration, and then you get this lovely collapsing effect that I find visually pleasing. Nees was interested in the relationship between order and chaos.\u003c/p\u003e\n\n\u003cp\u003eThis piece is now in the collection at the Victoria and Albert Museum, so it must be art. This was entirely created using code. It\u0026#39;s often difficult today to take the programs from 1968, in this case, and rerun them. This was written in ALGOL. Of course, computer systems have moved on. You certainly wouldn\u0026#39;t be running something today at the same speed that a system was creating it in 1968.\u003c/p\u003e\n\n\u003cp\u003eOften, the compilers, the interpreters, have gone away as well. Input and output device is completely different. It\u0026#39;s incredibly cool to me that you can download a Rust package called whiskers today, fire it up, and do that exact same thing in real-time with sliders that let you modify all of the parameters and experiment and see what the effects would be. Today we have programming environments like Processing, p5.js. There are packages in Rust and Python and others that let you do some incredibly fun things in an experimental way. There\u0026#39;s another strand here which I\u0026#39;m going to leave hanging and let you go and research if you\u0026#39;re interested on your own, around preservation of our shared computer history and past, and how we can preserve those original ideas.\u003c/p\u003e\n\n\u003cp\u003eI went to the V\u0026amp;A, and a lot of the pieces are not on permanent display. They do have cyclical exhibitions. Schotter, you can find it on their website. You get the information from the page. You send them an email, say, I\u0026#39;d like to see this piece, please, and you get invited to go and have a look. You\u0026#39;ve got to give them about a week\u0026#39;s notice. I read the piece of information about the original A4 size sheet. I sat in the library there at the V\u0026amp;A. The lady wheeled out a trolley with the items I\u0026#39;d ordered. This was one of them. This is, in fact, a 1-meter-high lithograph, because this was the display piece. This was the piece that was actually displayed in Montreal in 1972. It\u0026#39;s quite fascinating.\u003c/p\u003e\n\n\u003cp\u003eDown in the corner, you see this little detail, and you\u0026#39;ll find this across Nees pieces, because Nees, as it happened, worked for Siemens in the 1960s, a Siemens System 4004. This is a Siemens System 4004, as you can see, highly portable, very easy to tinker with. This was a computer from the 1971 movie, \u0026#34;Charlie and the Chocolate Factory\u0026#34;, that helped to find the location of the final golden ticket, so IBM System/360 compatible.\u003c/p\u003e\n\n\u003cp\u003eTo show you a couple of other pieces from the V\u0026amp;A. This is one from a gentleman called Peter Struycken. This one\u0026#39;s from 1969. I love this one because we actually have the original code preserved here, and because this is QCon, let\u0026#39;s have a look at the code. I don\u0026#39;t know what language this is. I had a look. There are some familiar structures there. I cut and posted it into Google Gemini. I said, \u0026#34;Can you help me figure out what language this is in?\u0026#34; It said, \u0026#34;It might be ALGOL, it might be Pascal, I can\u0026#39;t quite tell. Give me some more context\u0026#34;. I said, it was written by Peter Struycken. Gemini gave me the Wikipedia entry for him. Didn\u0026#39;t tell me how to rerun this code. This is another amazing piece from the collection.\u003c/p\u003e\n\n\u003cp\u003eThis one is fascinating to me because it actually dates from 1962 as you\u0026#39;ll see. It\u0026#39;s from a British artist called Desmond Paul Henry. This is not from a programmable computer. It is from a mechanical computer. It is from a mechanical computer that was used as a mechanical army analog bomb site computer, actually, that he repurposed. He rebuilt that computer into three drawing machines, and took their swinging arm parts and attached pens to them. I did like the texture, and you can see the line the Biro drew on the card. Let\u0026#39;s come back to the coding aspect. I\u0026#39;ve got another little bit to read for you here, because I do love the way that this has been written about.\u003c/p\u003e\n\n\u003cp\u003eBefore I do that, I\u0026#39;ll point out that Georg Nees, Frieder Nake, who are two people I\u0026#39;ve mentioned, were only a small number of a group of pioneers that included folks like Vera Molnár, and they were exploring this aspect of code primarily from a mathematical standpoint, into art pieces.\u003c/p\u003e\n\n\u003cp\u003eAs we move from the \u0026#39;60s into the \u0026#39;70s, we also then start to see more capable output devices. This book, \u0026#34;Tracing the Line\u0026#34;, was published just earlier this year, and covers a variety of contemporary plotter artists. The introduction has a lovely background, and I was just going to read you this part. \u0026#34;The first attempts at generative art date back to the 1960s where no graphic software existed, let alone a screen or computer mouse. Frieder Nake, one of the pioneers of this art form was 25 years old and studying mathematics at the University of Stuttgart, when he began experimenting with a ZUSE Graphomat Z64, a drawing machine that was a predecessor to modern plotters, capable of creating intricate graphics by writing programs.\u003c/p\u003e\n\n\u003cp\u003eThese programs had to be transferred to punched cards, which were then processed by a big computer, which then came out with a punched tape, which was fed into the Graphomat to create the art pieces\u0026#34;. The ZUSE Graphomat supported the use of four pens. If you actually go and look at Frieder Nake\u0026#39;s work, which, again, you can do in the V\u0026amp;A, you\u0026#39;ll see that he uses four colors. Referring to conceptual art, Frieder Nake repeatedly said that the program itself was the artwork, the execution, the image merely represented the surface. This is where the backlash comes in. We\u0026#39;ve got this group of young 25-year-old mathematicians starting to use computers to generate things that people are getting interested in. Traditional art world, \u0026#34;Witchcraft. Computers are not thinking machines. They must not be allowed to create art\u0026#34;.\u003c/p\u003e\n\n\u003ch2\u003eHarold Cohen (Traditional Artist), and the AARON Program\u003c/h2\u003e\n\n\u003cp\u003eThere was a traditional artist, though, a British artist, in fact, called Harold Cohen. He was an existing artist. He had a career as a painter. He started to think about how computers could be applied to his existing practice. He taught himself to code, like me, actually, which is quite a nice parallel. He started to consider the choices that could be taken away from his artistic practice, like where to put the color or how to arrange lines by giving those choices to a program or a computer. He continued to impose rules on the output that the computer created. Cohen moved to the University of California in 1968, and he went through this transitional period in the \u0026#39;60s and \u0026#39;70s, where he was moving from working with mixed media, which is what he had previously done, to co-creating with the computer.\u003c/p\u003e\n\n\u003cp\u003eWhat you can see here is a detail of a piece that\u0026#39;s printed on a dot matrix piece of paper. I\u0026#39;ve taken a closer up picture so you can see here on the right-hand side, it\u0026#39;s a pattern of numbers printed in a diamond shape, and then he\u0026#39;s gone in with a felt tip and drawn over clusters of those numbers to create the artwork. n 1970, there\u0026#39;s a remarkable sequence where Cohen uses code to draw these shapes, label the shapes with colors that he\u0026#39;s going to apply. He\u0026#39;s using some rules in the program to determine where the colors may go, which colors may or may not touch one another. Then, on the top right, you can see where he\u0026#39;s inked that in.\u003c/p\u003e\n\n\u003cp\u003eThe final piece at the bottom there is an artwork that he\u0026#39;s created in acrylic. He\u0026#39;s thinking about, all the time as he\u0026#39;s doing this, as he\u0026#39;s moved to California, starting to work with the systems they had and give up more of his artistic practice. He started to formulate this idea of a program to co-create with him. He asked this question, what are the minimum conditions under which a set of marks, functions as an image? Boiling it all the way back to the very basics, at what point is this an image?\u003c/p\u003e\n\n\u003cp\u003eHe created a program, and he called this program, AARON. He built machines that enabled AARON to do the drawing, as well as showing where things should go. One of these, interestingly, was a turtle. Jeremy famously immortalized on the packaging for the turtle that the BBC had for the BBC Micro. I grew up in the 1980s. There was a programming language called Logo, that you could run on the BBC Micro. You had a little digital turtle, and you gave it instructions like forward and left, and it would move around. Harold Cohen\u0026#39;s turtle moved around the floor of the gallery, and drew shapes and painted, which was very cool, I think. I love this unknown connection, until I did the research. AARON started out written in C.\u003c/p\u003e\n\n\u003cp\u003eCohen rewrote it into Lisp because he got frustrated with C\u0026#39;s limitations. By the mid-1990s, Harold Cohen was giving the program the ability to paint for him or apply the paint for him as well. You can see it\u0026#39;s a bit splotchy, but this was, I think, from 1995. This was mind blowing to me, because just before Christmas, so around November last year, I went to an exhibition and a workshop with a lady called Licia He, who is a contemporary plotter artist. She has got an AxiDraw, but she has converted it not to drive a pen around, but to actually move around and dip a brush into paint and draw and apply the paint and ink to the paper.\u003c/p\u003e\n\n\u003cp\u003eThat\u0026#39;s a bit more complicated than a pen, because you need to know how much paint to load up on the brush. You need to know how much you can apply before the paper goes soggy and wears through. You need to be able to wash the brush in between colors. I thought this was brilliant and brand new, and it is brilliant. Licia is a phenomenal artist, but not new. This has happened before. This is actually Licia\u0026#39;s setup that I saw.\u003c/p\u003e\n\n\u003cp\u003eIf you Google, Harold Cohen, AARON, then you will find that AARON is often called an artificial intelligence. I think that\u0026#39;s a very interesting thing to stop and think about, given the current hype cycle that we\u0026#39;re caught up in. Cohen said this, \u0026#34;If what AARON is making is not art, what is it exactly, and in what other ways beyond its origin, other than its origin, does it differ from the real thing? If it is not thinking, what exactly is it doing?\u0026#34; You can go and look at Harold Cohen\u0026#39;s work. There is a small gallery called the Gazelli Art House over in Mayfair, just close to Green Park station. You can walk in, you can look at some of the original pieces of work. If you\u0026#39;d like to see his work with AARON, that\u0026#39;s currently on display in New York at the Whitney by the High Line, the American Art Museum there.\u003c/p\u003e\n\n\u003ch2\u003eHow to Be Creative\u003c/h2\u003e\n\n\u003cp\u003eI\u0026#39;m going to have to skip through 20 years of computer art. I did want to give you that background about the 1960s and 1970s, and give you a sense of what\u0026#39;s been happening, probably outside of most of our domains. Let\u0026#39;s get back to being creative today, and round out by looking at how we can be creative. A pen plotter is not an inkjet. An inkjet or a laser printer is going to reproduce things for us. We know how annoying printers are today. It\u0026#39;s probably the most annoying pieces of technology in most people\u0026#39;s lives. You\u0026#39;re going to need a plotter. We\u0026#39;ve talked about several types. There\u0026#39;s BrachioGraph. There\u0026#39;s polargraph. There\u0026#39;s the x, y. You\u0026#39;re going to need some line art. There\u0026#39;s software that enables you to convert bitmap to vector art. There\u0026#39;s a piece of software called DrawingBot that\u0026#39;s written in Java. It\u0026#39;s desktop software. You\u0026#39;re going to need some materials.\u003c/p\u003e\n\n\u003cp\u003eMaterials is where things get really exciting, because you can choose the different weights and textures and colors of paper. You can choose whether you want to use fineliners, or fountain pens, or sharpies, or metallic ink to whatever you create. As you build up those lines on your piece of art, as you watch the plotter move and build up the ink, every single pen stroke is unique. It\u0026#39;s a little bit unpredictable every time exactly how it\u0026#39;s going to lay down on the paper. This is a piece I made for the art show last November, and this is all printed on cotton rag paper. This is a Cistercian numeral. The Cistercian monks in the 13th century had this numeric system that enabled them to put any number as a single character like this, depending on where the lines appeared on the stave. This number is 1984. I drew this using a plotter, using sepia ink on this cotton rag paper. The cotton rag paper is not even.\u003c/p\u003e\n\n\u003cp\u003eA plotter really wants your surface to be completely flat. This one requires a bit of babysitting, because if you\u0026#39;re not fully flat, then you might end up dragging, and things like that. It\u0026#39;s really quite an interesting, tangible process. Growing up in the 1980s, I occasionally saw a plotter in an office or at school, but then they fell out of use, and along came inkjets and laser printers, and we all got them at home. That means nobody wants them anymore, so you can get them on eBay. This is my current project. It\u0026#39;s a Roland DXY-1100. It\u0026#39;s an A3 plotter, and it takes up to eight different colors of pen. You need to figure out how to plug it into your modern computer. This uses a 25-pin serial interface. You need to wire that up to a USB.\u003c/p\u003e\n\n\u003cp\u003eSomebody\u0026#39;s fortunately written a Python library that lets you talk to this, which is very handy. The little adapters on the left-hand side are purple. I\u0026#39;ve had to print adapters for the pens. This was the first example of the big ink manufacturers trying to lock us in to their devices, so that you got these tiny, little stubby pens that would only go in these plotters. Now I\u0026#39;m 3D printing my own adapters for modern pens.\u003c/p\u003e\n\n\u003ch2\u003eCode = Art\u003c/h2\u003e\n\n\u003cp\u003eAm I a technologist, am I a historian, or am I an artist? I\u0026#39;m a coder. I write code. I\u0026#39;m sure many, if not most of us, do the same. Code can transform art. Code can create art. Code can be art. Computers and technology have, since the \u0026#39;60s, at least, been at the heart of tension in our society, and certainly with the art world. The nature of art, I think, to me, is to comment on that tension and the things that we see in our society and the experiences we have. Isn\u0026#39;t tension an element of art? There\u0026#39;s a link, andypiper.url.lol/wita. It\u0026#39;s just a simple little page. There\u0026#39;s a lot of links on there, if you want to go and explore any of the elements I\u0026#39;ve spoken about.\u003c/p\u003e\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eThis is something I plotted out. It sits on the wall inside the studio. It\u0026#39;s Georg Nees\u0026#39; artist statement from his 1972 portfolio in Montreal. \u0026#34;Computer art is sort of artificial genetics. Its DNA is on punched cards. Information originally emanating from the brains of programmers, yet to be mutated and augmented in complex ways by dice-gaming computers, emerging finally into the environment of rejecting, and/or, as one may observe, promoting culture\u0026#34;. We live in an amazing time. Jeremy said, we think we\u0026#39;re in the technology business, but we\u0026#39;re actually in the people business. I love that. We are physical beings. That\u0026#39;s really important as well.\u003c/p\u003e\n\n\u003cp\u003eWe live at a time of ephemerality, and fleeting digital moments. A single line of code might not be unique, a few lines of code might be more unique, but every stroke of a pen or a brush is unique. Making something digital is fun, but mostly ephemeral. Making something tangible and physical has the opportunity to endure. Go create. Go take the opportunity of all of the open-source software and hardware and beautiful code that we have, and make something wonderful.\u003c/p\u003e\n\n\n\n\n\u003cp\u003e\u003cbig\u003e\u003cstrong\u003eSee more \u003ca href=\"https://www.infoq.com/transcripts/presentations/\"\u003epresentations with transcripts\u003c/a\u003e\u003c/strong\u003e\u003c/big\u003e\u003c/p\u003e\n\n\n\n                                \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "34 min read",
  "publishedTime": "2025-01-14T00:00:00Z",
  "modifiedTime": null
}
