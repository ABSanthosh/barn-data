{
  "id": "d65bb96f-b5da-4142-9aa5-917ba2d32fda",
  "title": "Kotlin HTTP Toolkit Ktor 3.0 Improves Performance and Adds Support for Server-Sent Events",
  "link": "https://www.infoq.com/news/2024/10/ktor-3-kotlin-http-server/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "Ktor, Kotlin's native framework to create asynchronous HTTP server and client applications, has reached version 3. It adopts kotlinx-io, which brings improved performance albeit at the cost of breaking changes, and adds support for Server-Sent events, CSFR, serving static resources from ZIP files, and more. By Sergio De Simone",
  "author": "Sergio De Simone",
  "published": "Wed, 23 Oct 2024 16:00:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Kotlin",
    "Network Programming",
    "Android",
    "HTTP",
    "Mobile",
    "JetBrains",
    "Development",
    "news"
  ],
  "byline": "Sergio De Simone",
  "length": 2756,
  "excerpt": "Ktor, Kotlin's native framework to create asynchronous HTTP server and client applications, has reached version 3. It adopts kotlinx-io, which brings improved performance albeit at the cost of breakin",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s2_20241022063455/apple-touch-icon.png",
  "text": "Ktor, Kotlin's native framework to create asynchronous HTTP server and client applications, has reached version 3. It adopts kotlinx-io, which brings improved performance albeit at the cost of breaking changes, and adds support for Server-Sent events, CSFR, serving static resources from ZIP files, and more. kotlinx-io is a low-level I/O library built around the abstraction of Buffer, which is a mutable sequence of bytes. Buffers work like a queue, meaning you write data to its tail and read it from its head. Ktor 3 now aliases kotlinx.io.Source to implement its Input type, deprecates Output, and reimplements ByteReadChannel and ByteWriteChannel. Developers that used these low-level classes directly will need to modify their apps to migrate to the new API. The main benefit brought by kotlinx-io is improved performance: we’ve cut down on the unnecessary copying of bytes between ByteReadChannel, ByteWriteChannel, and network interfaces. This allows for more efficient byte transformations and parsing, making room for future performance improvements. Based on its own benchmark, JetBrains say the new Ktor shows a significant reduction in the time required for file and socket operations, which can be as high as 90% in certain cases. Besides performance, the most significant change in Ktor 3.0 is support for server-sent events, a server push technology that enables the creation of server-to-client communication channels. Server-sent events are preferable to WebSockets in scenarios where data flows mostly in one direction, especially when it is necessary to circumvent firewall blocking or deal with connection drops. WebSockets, on the other hand, are more efficient and grant lower latency. Other useful features in Ktor 3.0 are support for Cross-Site Request Forgery (CSRF), which can be specified for any given route, and the ability to serve static resource directly from ZIP archives. ZIP archives are served from a base path and may include subdirectories, which will be reflected in the URL structure appropriately. As a final note about Ktor 3, it is worth noting that the Ktor client now supports Wasm as a build target. However, Kotlin/Wasm is still in alpha stage, so Wasm support in Ktor 3 is not ready yet for production use. To start a new project using Ktor, head to the Ktor website and choose the plugins that most suit your requirements. Available plugins provide authentication, routing, monitoring, serialization, and more. If you want to update your existing Ktor 2 project to use Ktor 3, make sure you read the migration guide provided by JetBrains. About the Author Sergio De Simone",
  "image": "https://res.infoq.com/news/2024/10/ktor-3-kotlin-http-server/en/headerimage/ktor-3-kotlin-1729698083828.jpeg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003e\u003ca href=\"https://blog.jetbrains.com/kotlin/2024/10/ktor-3-0/\"\u003eKtor, Kotlin\u0026#39;s native framework to create asynchronous HTTP server and client applications, has reached version 3\u003c/a\u003e. It adopts \u003ca href=\"http://kotlinx.io/\"\u003ekotlinx-io\u003c/a\u003e, which brings improved performance albeit at the cost of breaking changes, and adds support for Server-Sent events, CSFR, serving static resources from ZIP files, and more.\u003c/p\u003e\n\n\u003cp\u003ekotlinx-io is a low-level I/O library built around the abstraction of \u003ccode\u003eBuffer\u003c/code\u003e, which is a mutable sequence of bytes. Buffers work like a queue, meaning you write data to its tail and read it from its head. Ktor 3 now aliases \u003ccode\u003ekotlinx.io.Source\u003c/code\u003e to implement its \u003ccode\u003eInput\u003c/code\u003e type, deprecates \u003ccode\u003eOutput\u003c/code\u003e, and reimplements \u003ccode\u003eByteReadChannel\u003c/code\u003e and \u003ccode\u003eByteWriteChannel\u003c/code\u003e. Developers that used these low-level classes directly will need to modify their apps to migrate to the new API.\u003c/p\u003e\n\n\u003cp\u003eThe main benefit brought by kotlinx-io is improved performance:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ewe’ve cut down on the unnecessary copying of bytes between ByteReadChannel, ByteWriteChannel, and network interfaces. This allows for more efficient byte transformations and parsing, making room for future performance improvements.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eBased on its own benchmark, JetBrains say the new Ktor shows a significant reduction in the time required for file and socket operations, which can be as high as 90% in certain cases.\u003c/p\u003e\n\n\u003cp\u003eBesides performance, the most significant change in Ktor 3.0 is support for \u003ca href=\"https://html.spec.whatwg.org/multipage/server-sent-events.html#server-sent-events\"\u003eserver-sent events\u003c/a\u003e, a server push technology that enables the creation of server-to-client communication channels. Server-sent events are preferable to WebSockets in scenarios where data flows mostly in one direction, especially when it is necessary to circumvent firewall blocking or deal with connection drops. WebSockets, on the other hand, are more efficient and grant lower latency.\u003c/p\u003e\n\n\u003cp\u003eOther useful features in Ktor 3.0 are support for Cross-Site Request Forgery (CSRF), which can be specified for any given route, and the ability to serve static resource directly from ZIP archives. ZIP archives are served from a base path and may include subdirectories, which will be reflected in the URL structure appropriately.\u003c/p\u003e\n\n\u003cp\u003eAs a final note about Ktor 3, it is worth noting that the Ktor client now supports Wasm as a build target. However, Kotlin/Wasm is still in alpha stage, so Wasm support in Ktor 3 is not ready yet for production use.\u003c/p\u003e\n\n\u003cp\u003eTo start a new project using Ktor, head to the \u003ca href=\"https://start.ktor.io/settings\"\u003eKtor website\u003c/a\u003e and choose the plugins that most suit your requirements. Available plugins provide authentication, routing, monitoring, serialization, and more. If you want to update your existing \u003ca href=\"https://www.infoq.com/news/2022/05/ktor-kotlin-framework/\"\u003eKtor 2 project\u003c/a\u003e to use Ktor 3, make sure you read the \u003ca href=\"https://blog.jetbrains.com/kotlin/2024/10/ktor-3-0/#migration-guide\"\u003emigration guide\u003c/a\u003e provided by JetBrains.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Sergio-De-Simone\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eSergio De Simone\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": "2024-10-23T00:00:00Z",
  "modifiedTime": null
}
