{
  "id": "1f207f6c-5e45-43cd-8f92-89cfca096a8e",
  "title": "Enhance data security with custom PII detection rulesets",
  "link": "https://about.gitlab.com/blog/2025/04/01/enhance-data-security-with-custom-pii-detection-rulesets",
  "description": "",
  "author": "Fernando Diaz",
  "published": "2025-04-01T00:00:00.000Z",
  "source": "https://about.gitlab.com/atom.xml",
  "categories": null,
  "byline": "Fernando Diaz",
  "length": 11294,
  "excerpt": "This tutorial explains how GitLab's customizable Secret Detection rulesets strengthen data security by identifying PII patterns in code repositories. Learn how AI can help.",
  "siteName": "GitLab",
  "favicon": "https://about.gitlab.com/blog/nuxt-images/ico/favicon-192x192.png?cache=2022041",
  "text": "Protecting sensitive information is more critical than ever. GitLab's Secret Detection feature provides a powerful solution to identify and prevent the exposure of sensitive data. This tutorial explores how GitLab Secret Detection works, how to create custom rulesets for finding personally identifiable information, and how GitLab Duo Chat can streamline the creation of regex patterns for PII detection. Understanding GitLab Secret Detection GitLab Secret Detection is a security scanning feature integrated into the GitLab CI/CD pipeline. It automatically scans your codebase to identify hardcoded secrets, credentials, and other sensitive information that shouldn't be stored in your repository. Key benefits Data breach prevention detects secrets before they're committed to your repository. Automated scanning runs as part of your CI/CD pipeline without manual intervention. Customizable rules extend detection capabilities with custom patterns. Compliance support helps meet regulatory requirements like GDPR, HIPAA, and the California Privacy Protection Act. Create custom rulesets for PII detection While GitLab's default secret detection covers common secrets like API keys and passwords, you may need custom rules to identify specific types of PII relevant to your organization. To get started, create a new GitLab project and follow the steps below. You can follow along and see usage examples in our PII Demo Application. Step 1: Set up Secret Detection Ensure Secret Detection is enabled in your .gitlab-ci.yml file: include: - template: Security/Secret-Detection.gitlab-ci.yml secret_detection: variables: SECRET_DETECTION_EXCLUDED_PATHS: \"rules,.gitlab,README.md,LICENSE\" SECRET_DETECTION_HISTORIC_SCAN: \"true\" Step 2: Create a custom ruleset file Create the directory and file rules/pii-data-extenson.toml, which contains the regex patterns for PII data along with an allowlist of patterns to ignore. Below are patterns to detect passport numbers (USA), phone numbers (USA), and email addresses: [extend] # Extends default packaged ruleset, NOTE: do not change the path. path = \"/gitleaks.toml\" # Patterns to ignore (used for tests) [allowlist] description = \"allowlist of patterns and paths to ignore in detection\" regexTarget = \"match\" regexes = ['''555-555-5555''', '''[email protected]'''] paths = ['''(.*?)(jpg|gif|doc|pdf|bin|svg|socket)'''] # US Passport Number (USA) [[rules]] id = \"us_passport_detection\" title = \"US Passport Number\" description = \"Detects US passport numbers\" regex = '''\\b[A-Z]{1,2}[0-9]{6,9}\\b''' keywords = [\"passport\"] # Phone Number (USA) [[rules]] id = \"us_phone_number_detection_basic\" title = \"US Phone Number\" description = \"Detects US phone numbers in basic format\" regex = '''\\b\\d{3}-\\d{3}-\\d{4}\\b''' keywords = [\"phone\", \"mobile\"] # Email Address [[rules]] id = \"email_address\" title = \"Email Address\" description = \"Detects email addresses\" regex = '''[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}''' keywords = [\"email\", \"e-mail\"] Step 3: Extend Secret Detection with the custom ruleset file Create a directory and file .gitlab/secret-detection-ruleset.toml in the root of your repository. This file allows you to extend the standard configuration with the PII rules file, and overwrite the severity of the detected vulnerabilities (default severity is Critical). # Define the pii rules to add to default configuration [[secrets.passthrough]] type = \"file\" target = \"gitleaks.toml\" value = \"rules/pii-data-extension.toml\" # Overwrite Phone Number (USA) PII Severity [[secrets.ruleset]] [secrets.ruleset.identifier] type = \"gitleaks_rule_id\" value = \"us_phone_number_detection_basic\" [secrets.ruleset.override] severity = \"Medium\" # Overwrite Email Address PII Severity [[secrets.ruleset]] [secrets.ruleset.identifier] type = \"gitleaks_rule_id\" value = \"email_address\" [secrets.ruleset.override] severity = \"Low\" Step 4: Commit your changes Now add the changes in the above steps to your project. cd /path/to/your/project git add . git commit -m \"Add PII data ruleset and Secret Scanning\" git push Once the code is committed, Secret Detection will run within the default branch. Step 5: Test detection of PII data Now that we have configured the Secret Detection scanner, we should perform a test to see if the scanner is detecting the new custom patterns. This can be done by creating a merge request, which adds a new file named customer-data.yaml with the following: customers: test_user: phone_number: 555-555-555 email: [email protected] justin_case: phone_number: 512-123-4567 passport_number: A12345678 email: [email protected] chris_p_bacon: phone_number: 305-123-4567 passport_number: B09876543 email: [email protected] The scanner should now perform the following: Ignore the phone_number and email of test_user due to patterns being in allowlist Detect six potential vulnerabilities due to the information present for both justin_case and chris_p_bacon U.S. passport number severity is set to Critical (default) U.S. phone number severity is set to Medium (override) Email address severity is set to Low (override) Data from rules override is added to each vulnerability Once the merge request is submitted, the Secret Detection scanner runs and provides the following results: When clicking on a vulnerability, you are presented with detailed vulnerability data based on what was configured in your newly set up rules: This data allows you to determine the validity of the data present and address it accordingly. There are additional ways to configure custom rulesets. For example, rules can be applied remotely to several projects, avoiding the need to duplicate the rules file. See the Secret Detection Configuration documentation for more information. Common PII types to consider When building your custom ruleset, consider including patterns for: Social Security Numbers Credit card numbers Driver's license numbers Passport numbers Email addresses Phone numbers IP addresses Physical addresses Medical record numbers Leveraging GitLab Duo Chat for pattern creation Creating effective regex patterns can be challenging. This is where GitLab Duo Chat comes in handy. GitLab Duo Chat is an AI-powered assistant that accelerates development with contextual, conversational AI. Chat is available to any user with an assigned GitLab Duo seat. Using GitLab Duo Chat to generate PII regex patterns Access GitLab Duo Chat: In the upper right corner, select GitLab Duo Chat. A drawer opens on the right side of your screen. Prompt the chat: Enter a prompt in the chat input box and press Enter or select Send: I need a regex pattern to detect Canadian Zip Codes in our codebase for secret detection Review and refine: GitLab Duo Chat will suggest a regex pattern that you can review and refine: Canadian postal codes follow the format \"A1A 1A1\" (where A is a letter and 1 is a digit). Here's a regex pattern that will detect Canadian postal codes in your codebase, accounting for both spaced and non-spaced formats: [A-Za-z]\\d[A-Za-z][ -]?\\d[A-Za-z]\\d This pattern matches: * A letter, followed by a digit, followed by a letter * An optional space or hyphen * A digit, followed by a letter, followed by a digit If you need a more strict pattern that only matches uppercase letters (as official Canadian postal codes use), you can use: [A-Z]\\d[A-Z][ -]?\\d[A-Z]\\d For implementation in a secret detection tool, you might want to add word boundaries to avoid partial matches: \\b[A-Z]\\d[A-Z][ -]?\\d[A-Z]\\d\\b Would you like more details about implementing this in a specific secret detection system? Test the pattern: Test the pattern against sample data to ensure it works correctly. You can use sites like https://regex101.com/ to validate patterns before you submit them to your ruleset. Add to your ruleset: Once satisfied, add the pattern to your rules/pii-data-extension.toml file and perform some tests to validate. This sample merge request contains a newly added rule for Canadian Zip Codes based on the above. Additionally, you can use GitLab Duo Chat in: The GitLab Web IDE (VS Code in the cloud) VS Code, with the GitLab Workflow extension for VS Code JetBrains IDEs, with the GitLab Duo Plugin for JetBrains Visual Studio for Windows, with the GitLab Extension for Visual Studio In the future, you’ll be able to leverage GitLab Duo Workflow (currently in private beta) to automatically generate and add these patterns to your code base directly from your IDE. GitLab Duo Workflow is an AI agent, which transforms AI from reactive assistant to autonomous contributor, optimizing your software development lifecycle. Learn more about GitLab Duo Workflow. Best practices for PII detection Start small: Begin with a few critical PII types and expand gradually. Test thoroughly: Test your patterns against sample data to avoid false positives. Update regularly: Review and update your rulesets as new PII requirements emerge. Document patterns: Maintain documentation for your custom regex patterns. Balance precision: Make patterns specific enough to avoid false positives but flexible enough to catch variations. Implement Secret Push Protection: Prevent PII data from making it into your repository. Set up Merge Request Approval Policies: Require approval before merging any possible PII data to your repository. Once you have set up a PII data ruleset to meet your organization's needs, remote rulesets can scan for PII data across multiple repositories without the need to duplicate the rules file. Watch this video to learn more: Handling Secret Detection findings When GitLab Secret Detection identifies potential PII in your code: Review the finding: Assess whether it's a legitimate finding or a false positive. Remediate: Remove the sensitive data and replace it with environment variables or secrets management. Update history: For existing repositories, consider using tools like BFG Repo-Cleaner to remove sensitive data from history. Track progress: Use GitLab's security dashboard to monitor ongoing compliance. Get started today GitLab Secret Detection, combined with custom PII rulesets, provides a powerful defense against inadvertent exposure of sensitive information. By leveraging GitLab Duo Chat to create precise regex patterns, teams can efficiently implement comprehensive PII detection across their codebase, ensuring regulatory compliance and protecting user data. Remember that secret detection is just one component of a comprehensive security strategy. Combine it with other GitLab security features like static application security testing, dynamic application security testing, and dependency scanning for a more robust security posture. Start implementing these practices today to better protect your users' personal information and maintain the security integrity of your applications. Start a free, 60-day trial of GitLab Ultimate and GitLab Duo today! More resources To learn more about GitLab security and compliance and how we can help enhance your AppSec workflows, follow the links below: GitLab Security and Compliance Solutions GitLab DevSecOps Platform GitLab Duo (AI) GitLab Application Security documentation Secret Detection documentation",
  "image": "https://images.ctfassets.net/r9o86ar0p03f/1iy516k40hwBDChKcUJ2zb/264b924e95ca5c65751e0a52ee6a41d7/blog-image-template-1800x945__5_.png?fm=webp\u0026w=820\u0026h=500",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv data-v-37f1022b=\"\" data-v-53094866=\"\" data-v-74bd29c6=\"\"\u003e\u003cp\u003eProtecting sensitive information is more critical than ever. GitLab\u0026#39;s Secret Detection feature provides a powerful solution to identify and prevent the exposure of sensitive data. This tutorial explores how GitLab Secret Detection works, how to create custom rulesets for finding personally identifiable information, and how GitLab Duo Chat can streamline the creation of regex patterns for PII detection.\u003c/p\u003e\n\u003ch2 id=\"understanding-gitlab-secret-detection\" tabindex=\"-1\"\u003eUnderstanding GitLab Secret Detection \u003ca href=\"#understanding-gitlab-secret-detection\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://docs.gitlab.com/user/application_security/secret_detection/\"\u003eGitLab Secret Detection\u003c/a\u003e is a security scanning feature integrated into the GitLab CI/CD pipeline. It automatically scans your codebase to identify hardcoded secrets, credentials, and other sensitive information that shouldn\u0026#39;t be stored in your repository.\u003c/p\u003e\n\u003ch3 id=\"key-benefits\" tabindex=\"-1\"\u003eKey benefits \u003ca href=\"#key-benefits\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eData breach prevention\u003c/strong\u003e detects secrets before they\u0026#39;re committed to your repository.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eAutomated scanning\u003c/strong\u003e runs as part of your CI/CD pipeline without manual intervention.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eCustomizable rules\u003c/strong\u003e extend detection capabilities with custom patterns.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eCompliance support\u003c/strong\u003e helps meet regulatory requirements like GDPR, HIPAA, and the California Privacy Protection Act.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"create-custom-rulesets-for-pii-detection\" tabindex=\"-1\"\u003eCreate custom rulesets for PII detection \u003ca href=\"#create-custom-rulesets-for-pii-detection\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eWhile GitLab\u0026#39;s default secret detection covers common secrets like API keys and passwords, you may need custom rules to identify specific types of PII relevant to your organization.\u003c/p\u003e\n\u003cp\u003eTo get started, create a new GitLab project and follow the steps below. You can follow along and see usage examples in our \u003ca href=\"https://gitlab.com/gitlab-da/tutorials/security-and-governance/devsecops/secret-scanning/pii-data-ruleset\"\u003ePII Demo Application\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eStep 1: Set up Secret Detection\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eEnsure Secret Detection is enabled in your \u003ccode\u003e.gitlab-ci.yml\u003c/code\u003e file:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003einclude:\n  - template: Security/Secret-Detection.gitlab-ci.yml\n\nsecret_detection:\n  variables:\n    SECRET_DETECTION_EXCLUDED_PATHS: \u0026#34;rules,.gitlab,README.md,LICENSE\u0026#34;\n    SECRET_DETECTION_HISTORIC_SCAN: \u0026#34;true\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003cstrong\u003eStep 2: Create a custom ruleset file\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eCreate the directory and file \u003ccode\u003erules/pii-data-extenson.toml\u003c/code\u003e, which contains the regex patterns for PII data along with an allowlist of patterns to ignore. Below are patterns to detect passport numbers (USA), phone numbers (USA), and email addresses:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e[extend]\n# Extends default packaged ruleset, NOTE: do not change the path.\npath = \u0026#34;/gitleaks.toml\u0026#34;\n\n# Patterns to ignore (used for tests)\n[allowlist]\ndescription = \u0026#34;allowlist of patterns and paths to ignore in detection\u0026#34;\nregexTarget = \u0026#34;match\u0026#34;\nregexes = [\u0026#39;\u0026#39;\u0026#39;555-555-5555\u0026#39;\u0026#39;\u0026#39;, \u0026#39;\u0026#39;\u0026#39;\u003ca href=\"https://about.gitlab.com/cdn-cgi/l/email-protection\" data-cfemail=\"a4d1d7c1d6e4c1dcc5c9d4c8c18ac7cbc9\"\u003e[email protected]\u003c/a\u003e\u0026#39;\u0026#39;\u0026#39;]\npaths = [\u0026#39;\u0026#39;\u0026#39;(.*?)(jpg|gif|doc|pdf|bin|svg|socket)\u0026#39;\u0026#39;\u0026#39;]\n\n# US Passport Number (USA)\n[[rules]]\nid = \u0026#34;us_passport_detection\u0026#34;\ntitle = \u0026#34;US Passport Number\u0026#34;\ndescription = \u0026#34;Detects US passport numbers\u0026#34;\nregex = \u0026#39;\u0026#39;\u0026#39;\\b[A-Z]{1,2}[0-9]{6,9}\\b\u0026#39;\u0026#39;\u0026#39;\nkeywords = [\u0026#34;passport\u0026#34;]\n\n# Phone Number (USA)\n[[rules]]\nid = \u0026#34;us_phone_number_detection_basic\u0026#34;\ntitle = \u0026#34;US Phone Number\u0026#34;\ndescription = \u0026#34;Detects US phone numbers in basic format\u0026#34;\nregex = \u0026#39;\u0026#39;\u0026#39;\\b\\d{3}-\\d{3}-\\d{4}\\b\u0026#39;\u0026#39;\u0026#39;\nkeywords = [\u0026#34;phone\u0026#34;, \u0026#34;mobile\u0026#34;]\n\n# Email Address\n[[rules]]\nid = \u0026#34;email_address\u0026#34;\ntitle = \u0026#34;Email Address\u0026#34;\ndescription = \u0026#34;Detects email addresses\u0026#34;\nregex = \u0026#39;\u0026#39;\u0026#39;[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}\u0026#39;\u0026#39;\u0026#39;\nkeywords = [\u0026#34;email\u0026#34;, \u0026#34;e-mail\u0026#34;]\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003cstrong\u003eStep 3: Extend Secret Detection with the custom ruleset file\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eCreate a directory and file \u003ccode\u003e.gitlab/secret-detection-ruleset.toml\u003c/code\u003e in the root of your repository. This file allows you to extend the standard configuration with the PII rules file, and overwrite the severity of the detected vulnerabilities (default severity is \u003ccode\u003eCritical\u003c/code\u003e).\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e# Define the pii rules to add to default configuration\n[[secrets.passthrough]]\ntype = \u0026#34;file\u0026#34;\ntarget = \u0026#34;gitleaks.toml\u0026#34;\nvalue = \u0026#34;rules/pii-data-extension.toml\u0026#34;\n\n# Overwrite Phone Number (USA) PII Severity\n[[secrets.ruleset]]\n[secrets.ruleset.identifier]\ntype = \u0026#34;gitleaks_rule_id\u0026#34;\nvalue = \u0026#34;us_phone_number_detection_basic\u0026#34;\n[secrets.ruleset.override]\nseverity = \u0026#34;Medium\u0026#34;\n\n# Overwrite Email Address PII Severity\n[[secrets.ruleset]]\n[secrets.ruleset.identifier]\ntype = \u0026#34;gitleaks_rule_id\u0026#34;\nvalue = \u0026#34;email_address\u0026#34;\n[secrets.ruleset.override]\nseverity = \u0026#34;Low\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003cstrong\u003eStep 4: Commit your changes\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eNow add the changes in the above steps to your project.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ecd /path/to/your/project\ngit add .\ngit commit -m \u0026#34;Add PII data ruleset and Secret Scanning\u0026#34;\ngit push\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eOnce the code is committed, Secret Detection will run within the default branch.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eStep 5: Test detection of PII data\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eNow that we have configured the Secret Detection scanner, we should perform a test to see if the scanner is detecting the new custom patterns. This can be done by creating a merge request, which adds a new file named \u003ccode\u003ecustomer-data.yaml\u003c/code\u003e with the following:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ecustomers:  \n  test_user:  \n    phone_number: 555-555-555  \n    email: \u003ca href=\"https://about.gitlab.com/cdn-cgi/l/email-protection\" data-cfemail=\"6d181e081f2d08150c001d0108430e0200\"\u003e[email protected]\u003c/a\u003e  \n  justin_case:  \n    phone_number: 512-123-4567  \n    passport_number: A12345678  \n    email: \u003ca href=\"https://about.gitlab.com/cdn-cgi/l/email-protection\" data-cfemail=\"543e2127203d3a0b3735273114312c35392438317a373b39\"\u003e[email protected]\u003c/a\u003e  \n  chris_p_bacon: \n    phone_number: 305-123-4567  \n    passport_number: B09876543  \n    email: \u003ca href=\"https://about.gitlab.com/cdn-cgi/l/email-protection\" data-cfemail=\"66050e140f15391639040705090826031e070b160a034805090b\"\u003e[email protected]\u003c/a\u003e  \n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe scanner should now perform the following:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIgnore the \u003ccode\u003ephone_number\u003c/code\u003e and \u003ccode\u003eemail\u003c/code\u003e of \u003ccode\u003etest_user\u003c/code\u003e due to patterns being in allowlist\u003c/li\u003e\n\u003cli\u003eDetect six potential vulnerabilities due to the information present for both \u003ccode\u003ejustin_case\u003c/code\u003e and \u003ccode\u003echris_p_bacon\u003c/code\u003e\n\u003cul\u003e\n\u003cli\u003eU.S. passport number severity is set to \u003ccode\u003eCritical\u003c/code\u003e (default)\u003c/li\u003e\n\u003cli\u003eU.S. phone number severity is set to \u003ccode\u003eMedium\u003c/code\u003e (override)\u003c/li\u003e\n\u003cli\u003eEmail address severity is set to \u003ccode\u003eLow\u003c/code\u003e (override)\u003c/li\u003e\n\u003cli\u003eData from rules override is added to each vulnerability\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOnce the \u003ca href=\"https://gitlab.com/gitlab-da/tutorials/security-and-governance/devsecops/secret-scanning/pii-data-ruleset/-/merge_requests/4\"\u003emerge request\u003c/a\u003e is submitted, the Secret Detection scanner runs and provides the following results:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/7bcj3oPzOvkTyxmchpAQfm/92504254915e3f27a3954731416c9798/pii_vulns.png\" alt=\"Secret Detection finding custom PII data MR\"/\u003e\u003c/p\u003e\n\u003cp\u003eWhen clicking on a vulnerability, you are presented with detailed vulnerability data based on what was configured in your newly set up rules:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/3em6jCd15NreBVbXBhQadf/e527d4f55b55dea728b538031de9b49a/pii_vulns_expanded.png\" alt=\"Expanded custom PII data vulnerability\"/\u003e\u003c/p\u003e\n\u003cp\u003eThis data allows you to determine the validity of the data present and address it accordingly.\u003c/p\u003e\n\u003cp\u003eThere are additional ways to configure custom rulesets. For example, rules can be applied remotely to several projects, avoiding the need to duplicate the rules file. See the \u003ca href=\"https://docs.gitlab.com/user/application_security/secret_detection/pipeline/configure/\"\u003eSecret Detection Configuration documentation\u003c/a\u003e for more information.\u003c/p\u003e\n\u003ch2 id=\"common-pii-types-to-consider\" tabindex=\"-1\"\u003eCommon PII types to consider \u003ca href=\"#common-pii-types-to-consider\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eWhen building your custom ruleset, consider including patterns for:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eSocial Security Numbers\u003c/li\u003e\n\u003cli\u003eCredit card numbers\u003c/li\u003e\n\u003cli\u003eDriver\u0026#39;s license numbers\u003c/li\u003e\n\u003cli\u003ePassport numbers\u003c/li\u003e\n\u003cli\u003eEmail addresses\u003c/li\u003e\n\u003cli\u003ePhone numbers\u003c/li\u003e\n\u003cli\u003eIP addresses\u003c/li\u003e\n\u003cli\u003ePhysical addresses\u003c/li\u003e\n\u003cli\u003eMedical record numbers\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"leveraging-gitlab-duo-chat-for-pattern-creation\" tabindex=\"-1\"\u003eLeveraging GitLab Duo Chat for pattern creation \u003ca href=\"#leveraging-gitlab-duo-chat-for-pattern-creation\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eCreating effective regex patterns can be challenging. This is where \u003ca href=\"https://docs.gitlab.com/user/gitlab_duo_chat/\"\u003eGitLab Duo Chat\u003c/a\u003e comes in handy. GitLab Duo Chat is an AI-powered assistant that accelerates development with contextual, conversational AI. Chat is available to any user with an assigned GitLab Duo seat.\u003c/p\u003e\n\u003ch3 id=\"using-gitlab-duo-chat-to-generate-pii-regex-patterns\" tabindex=\"-1\"\u003eUsing GitLab Duo Chat to generate PII regex patterns \u003ca href=\"#using-gitlab-duo-chat-to-generate-pii-regex-patterns\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eAccess GitLab Duo Chat:\u003c/strong\u003e In the upper right corner, select \u003cstrong\u003eGitLab Duo Chat\u003c/strong\u003e. A drawer opens on the right side of your screen.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003ePrompt the chat:\u003c/strong\u003e Enter a prompt in the chat input box and press \u003cstrong\u003eEnter\u003c/strong\u003e or select \u003cstrong\u003eSend\u003c/strong\u003e:\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre\u003e\u003ccode\u003eI need a regex pattern to detect Canadian Zip Codes in our codebase for secret detection\n\u003c/code\u003e\u003c/pre\u003e\n\u003col start=\"3\"\u003e\n\u003cli\u003e\u003cstrong\u003eReview and refine:\u003c/strong\u003e GitLab Duo Chat will suggest a regex pattern that you can review and refine:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre\u003e\u003ccode\u003eCanadian postal codes follow the format \u0026#34;A1A 1A1\u0026#34; (where A is a letter and 1 is a digit). Here\u0026#39;s a regex pattern that will detect Canadian postal codes in your codebase, accounting for both spaced and non-spaced formats:\n[A-Za-z]\\d[A-Za-z][ -]?\\d[A-Za-z]\\d\nThis pattern matches:\n* A letter, followed by a digit, followed by a letter\n* An optional space or hyphen\n* A digit, followed by a letter, followed by a digit\nIf you need a more strict pattern that only matches uppercase letters (as official Canadian postal codes use), you can use:\n[A-Z]\\d[A-Z][ -]?\\d[A-Z]\\d\nFor implementation in a secret detection tool, you might want to add word boundaries to avoid partial matches:\n\\b[A-Z]\\d[A-Z][ -]?\\d[A-Z]\\d\\b\nWould you like more details about implementing this in a specific secret detection system?\n\u003c/code\u003e\u003c/pre\u003e\n\u003col start=\"4\"\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eTest the pattern:\u003c/strong\u003e Test the pattern against sample data to ensure it works correctly. You can use sites like \u003ca href=\"https://regex101.com/\"\u003ehttps://regex101.com/\u003c/a\u003e to validate patterns before you submit them to your ruleset.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eAdd to your ruleset:\u003c/strong\u003e Once satisfied, add the pattern to your \u003ccode\u003erules/pii-data-extension.toml\u003c/code\u003e file and perform some tests to validate. This sample \u003ca href=\"https://gitlab.com/gitlab-da/tutorials/security-and-governance/devsecops/secret-scanning/pii-data-ruleset/-/merge_requests/5/diffs\"\u003emerge request\u003c/a\u003e contains a newly added rule for Canadian Zip Codes based on the above.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eAdditionally, you can use GitLab Duo Chat in:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.gitlab.com/user/project/web_ide/\"\u003eThe GitLab Web IDE (VS Code in the cloud)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVS Code, with the \u003ca href=\"https://marketplace.visualstudio.com/items?itemName=GitLab.gitlab-workflow\"\u003eGitLab Workflow extension for VS Code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eJetBrains IDEs, with the \u003ca href=\"https://plugins.jetbrains.com/plugin/22325-gitlab-duo\"\u003eGitLab Duo Plugin for JetBrains\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVisual Studio for Windows, with the \u003ca href=\"https://marketplace.visualstudio.com/items?itemName=GitLab.GitLabExtensionForVisualStudio\"\u003eGitLab Extension for Visual Studio\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIn the future, you’ll be able to leverage \u003ca href=\"https://docs.gitlab.com/user/duo_workflow/\"\u003eGitLab Duo Workflow\u003c/a\u003e (currently in private beta) to automatically generate and add these patterns to your code base directly from your IDE. GitLab Duo Workflow is an AI agent, which transforms AI from reactive assistant to autonomous contributor, optimizing your software development lifecycle. Learn more about \u003ca href=\"https://about.gitlab.com/blog/2024/06/27/meet-gitlab-duo-workflow-the-future-of-ai-driven-development/\"\u003eGitLab Duo Workflow\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"best-practices-for-pii-detection\" tabindex=\"-1\"\u003eBest practices for PII detection \u003ca href=\"#best-practices-for-pii-detection\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eStart small:\u003c/strong\u003e Begin with a few critical PII types and expand gradually.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTest thoroughly:\u003c/strong\u003e Test your patterns against sample data to avoid false positives.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eUpdate regularly:\u003c/strong\u003e Review and update your rulesets as new PII requirements emerge.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDocument patterns:\u003c/strong\u003e Maintain documentation for your custom regex patterns.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eBalance precision:\u003c/strong\u003e Make patterns specific enough to avoid false positives but flexible enough to catch variations.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eImplement \u003ca href=\"https://about.gitlab.com/blog/2024/06/24/prevent-secret-leaks-in-source-code-with-gitlab-secret-push-protection/\"\u003eSecret Push Protection\u003c/a\u003e:\u003c/strong\u003e Prevent PII data from making it into your repository.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSet up \u003ca href=\"https://docs.gitlab.com/user/application_security/policies/merge_request_approval_policies/\"\u003eMerge Request Approval Policies\u003c/a\u003e:\u003c/strong\u003e Require approval before merging any possible PII data to your repository.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eOnce you have set up a PII data ruleset to meet your organization\u0026#39;s needs, remote rulesets can scan for PII data across multiple repositories without the need to duplicate the rules file. Watch this video to learn more:\u003c/p\u003e\n\n\u003cfigure\u003e\n  \u003ciframe src=\"https://www.youtube.com/embed/vjJxQz918WE?si=CRdIEodo3ALxVWXO\" frameborder=\"0\" allowfullscreen=\"\"\u003e \u003c/iframe\u003e\n\u003c/figure\u003e\n\n\u003ch2 id=\"handling-secret-detection-findings\" tabindex=\"-1\"\u003eHandling Secret Detection findings \u003ca href=\"#handling-secret-detection-findings\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eWhen GitLab Secret Detection identifies potential PII in your code:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eReview the finding:\u003c/strong\u003e Assess whether it\u0026#39;s a legitimate finding or a false positive.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eRemediate:\u003c/strong\u003e Remove the sensitive data and replace it with environment variables or secrets management.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eUpdate history:\u003c/strong\u003e For existing repositories, consider using tools like BFG Repo-Cleaner to remove sensitive data from history.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTrack progress:\u003c/strong\u003e Use GitLab\u0026#39;s security dashboard to monitor ongoing compliance.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"get-started-today\" tabindex=\"-1\"\u003eGet started today \u003ca href=\"#get-started-today\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eGitLab Secret Detection, combined with custom PII rulesets, provides a powerful defense against inadvertent exposure of sensitive information. By leveraging GitLab Duo Chat to create precise regex patterns, teams can efficiently implement comprehensive PII detection across their codebase, ensuring regulatory compliance and protecting user data.\u003c/p\u003e\n\u003cp\u003eRemember that secret detection is just one component of a comprehensive security strategy. Combine it with other GitLab security features like static application security testing, dynamic application security testing, and dependency scanning for a more robust security posture.\u003c/p\u003e\n\u003cp\u003eStart implementing these practices today to better protect your users\u0026#39; personal information and maintain the security integrity of your applications.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eStart \u003ca href=\"https://about.gitlab.com/free-trial/\"\u003ea free, 60-day trial of GitLab Ultimate and GitLab Duo \u003c/a\u003etoday!\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"more-resources\" tabindex=\"-1\"\u003eMore resources \u003ca href=\"#more-resources\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eTo learn more about GitLab security and compliance and how we can help enhance your AppSec workflows, follow the links below:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://about.gitlab.com/solutions/security-compliance/\"\u003eGitLab Security and Compliance Solutions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://about.gitlab.com/platform/\"\u003eGitLab DevSecOps Platform\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://about.gitlab.com/gitlab-duo/\"\u003eGitLab Duo (AI)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.gitlab.com/user/application_security/\"\u003eGitLab Application Security documentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.gitlab.com/user/application_security/secret_detection/\"\u003eSecret Detection documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "12 min read",
  "publishedTime": "2025-04-01T00:00:00Z",
  "modifiedTime": null
}
