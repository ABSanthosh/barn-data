{
  "id": "900729d9-1c4d-4b01-8735-3d61656a06fd",
  "title": "Grafana Loki Introduces v3.4 with Standardized Storage and Unified Telemetry",
  "link": "https://www.infoq.com/news/2025/03/grafana-loki-updates/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "Grafana Loki recently introduced their version 3.4, which includes enhancements aimed at improving the efficiency and log management standardization. One of the key updates is the integration of the Thanos Object Storage Client, which aligns Loki's storage configuration with other Grafana databases, such as Mimir and Pyroscope. By Aditya Kulkarni",
  "author": "Aditya Kulkarni",
  "published": "Wed, 12 Mar 2025 15:00:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Grafana",
    "Observability",
    "DevOps",
    "news"
  ],
  "byline": "Aditya Kulkarni",
  "length": 3568,
  "excerpt": "Grafana Loki recently introduced their version 3.4, which includes enhancements aimed at improving the efficiency and log management standardization. One of the key updates is the integration of the T",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s1_20250306064810/apple-touch-icon.png",
  "text": "Grafana Loki recently introduced their version 3.4, which includes enhancements aimed at improving the efficiency and log management standardization. One of the key updates is the integration of the Thanos Object Storage Client, which aligns Loki's storage configuration with other Grafana databases, such as Mimir and Pyroscope. Julie Stickler, Staff Technical Writer at Grafana Labs elaborated the updates in a blog post. Thanos, a widely recognized CNCF project, ensures that Loki benefits from a well-maintained open-source standard for long-term storage and querying. The use of Thanos is optional in Loki 3.4, that allows engineers to migrate at their own pace, but it is expected to become the default storage client in future releases, with existing configurations being deprecated. Another significant improvement in Loki 3.4 is the return of the sizing guidance page. This resource helps engineers determine the appropriate CPU and memory requirements for running Loki in microservices mode, based on expected ingestion volumes. The guidance categorizes deployments into three tiers, providing recommendations for resource utilization. This detailed sizing guidance has been a frequent request from engineers seeking to optimize their deployments effectively. Loki 3.4 release also merges Promtail into Grafana Alloy. Promtail, a telemetry data collection agent for Loki, is being deprecated. Instead, Grafana Alloy, which offers a unified approach to telemetry collection, is being adopted in version 3.4. Alloy combines the capabilities of various agents, including Promtail, into a single tool that supports metrics, logs, traces, and profiles. This consolidation aims to simplify the observability landscape by reducing the number of agents engineers need to manage. Promtail will enter a Long-Term Support (LTS) phase as of February 13, 2025, during which it will continue to receive commercial support, security updates, and critical fixes. However, it is slated to reach End-of-Life (EOL) by March 2, 2026, after which no further support or updates will be provided. To facilitate a smooth transition, migration documentation and tools are available to help engineers convert their Promtail configurations to Alloy configurations. John Hayes, Observability \u0026 DevOps Analyst at SquaredUp shared this blog on LinkedIn, So this is an item in the release blog for Loki 3.4, but it seems like it is worthy of an announcement in its own right. The venerable Promtail agent is being deprecated and will reach end of life in March next year. It's functionality is being merged into Grafana Alloy, which seems to cement Alloy's status as not just an oTel Collector distro but a more fully-fledged pipeline. The Loki 3.4 announcement posted by Grafana Labs on LinkedIn received notable attention, with 19 reposts and 216 reactions. Loki 3.4 also expands its support for out-of-order logs, allowing for the ingestion of log lines from any time period. This feature can be enabled by setting time_sharding_enabled to true. Additionally, the new release simplifies the extraction of structured metadata from logs during ingestion, enhancing the utility of log data. There are improvements to the Loki Helm chart as well, including support for topologySpreadConstraints and enhancements to Loki's overrides exporter. Further detailed information about Loki 3.4 is available in the release notes. About the Author Aditya Kulkarni",
  "image": "https://res.infoq.com/news/2025/03/grafana-loki-updates/en/headerimage/generatedHeaderImage-1741756614901.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eGrafana Loki recently introduced their version 3.4, which includes enhancements aimed at improving the efficiency and log management standardization. One of the key updates is the integration of the \u003ca href=\"https://github.com/thanos-io/objstore\"\u003eThanos Object Storage Client\u003c/a\u003e, which aligns Loki\u0026#39;s storage configuration with other Grafana databases, such as \u003ca href=\"https://grafana.com/oss/mimir/?pg=blog\u0026amp;plcmt=body-txt\"\u003eMimir\u003c/a\u003e and \u003ca href=\"https://grafana.com/oss/pyroscope/?pg=blog\u0026amp;plcmt=body-txt\"\u003ePyroscope\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.linkedin.com/in/juliestickler/\"\u003eJulie Stickler\u003c/a\u003e, Staff Technical Writer at Grafana Labs elaborated the updates \u003ca href=\"https://grafana.com/blog/2025/02/13/grafana-loki-3.4-standardized-storage-config-sizing-guidance-and-promtail-merging-into-alloy/\"\u003ein a blog post\u003c/a\u003e. Thanos, a widely recognized CNCF project, ensures that Loki benefits from a well-maintained open-source standard for long-term storage and querying. The use of Thanos is optional in Loki 3.4, that allows engineers to migrate at their own pace, but it is expected to become the default storage client in future releases, with existing configurations being deprecated.\u003c/p\u003e\n\n\u003cp\u003eAnother significant improvement in Loki 3.4 is the return of the \u003ca href=\"https://grafana.com/docs/loki/latest/setup/size/?pg=blog\u0026amp;plcmt=body-txt\"\u003esizing guidance page\u003c/a\u003e. This resource helps engineers determine the appropriate CPU and memory requirements for running Loki in \u003ca href=\"https://grafana.com/docs/loki/latest/get-started/deployment-modes/?pg=blog\u0026amp;plcmt=body-txt#microservices-mode\"\u003emicroservices mode\u003c/a\u003e, based on expected ingestion volumes. The guidance categorizes deployments into three tiers, providing recommendations for resource utilization. This detailed sizing guidance has been a frequent request from engineers seeking to optimize their deployments effectively.\u003c/p\u003e\n\n\u003cp\u003eLoki 3.4 release also merges Promtail into \u003ca href=\"https://grafana.com/blog/2024/04/09/grafana-alloy-opentelemetry-collector-with-prometheus-pipelines/?pg=blog\u0026amp;plcmt=body-txt\"\u003eGrafana Alloy\u003c/a\u003e. Promtail, a telemetry data collection agent for Loki, is being deprecated. Instead, Grafana Alloy, which offers a unified approach to telemetry collection, is being adopted in version 3.4.\u003c/p\u003e\n\n\u003cp\u003eAlloy combines the capabilities of various agents, including Promtail, into a single tool that supports metrics, logs, traces, and profiles. This consolidation aims to simplify the observability landscape by reducing the number of agents engineers need to manage.\u003c/p\u003e\n\n\u003cp\u003ePromtail will enter a Long-Term Support (LTS) phase as of February 13, 2025, during which it will continue to receive commercial support, security updates, and critical fixes. However, it is slated to reach End-of-Life (EOL) by March 2, 2026, after which no further support or updates will be provided. To facilitate a smooth transition, migration \u003ca href=\"https://grafana.com/docs/alloy/latest/tutorials/send-logs-to-loki/?pg=blog\u0026amp;plcmt=body-txt\"\u003edocumentation\u003c/a\u003e and tools are available to help engineers convert their Promtail configurations to Alloy configurations.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.linkedin.com/in/john-hayes-o11y/\"\u003eJohn Hayes\u003c/a\u003e, Observability \u0026amp; DevOps Analyst at SquaredUp \u003ca href=\"https://www.linkedin.com/posts/john-hayes-o11y_grafana-loki-34-standardized-storage-config-activity-7296182856093990912-Cz3t?utm_source=share\u0026amp;utm_medium=member_desktop\u0026amp;rcm=ACoAAA1pAyoBT2cbjslZinfR7Oc8w4UPs6Kk0wU\"\u003eshared this blog on LinkedIn\u003c/a\u003e,\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eSo this is an item in the release blog for Loki 3.4, but it seems like it is worthy of an announcement in its own right. The venerable Promtail agent is being deprecated and will reach end of life in March next year.\u003c/p\u003e\n\n\u003cp\u003eIt\u0026#39;s functionality is being merged into Grafana Alloy, which seems to cement Alloy\u0026#39;s status as not just an oTel Collector distro but a more fully-fledged pipeline.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://www.linkedin.com/posts/grafana-labs_grafana-loki-34-standardized-storage-config-activity-7295897779510382592-HdQW?utm_source=share\u0026amp;utm_medium=member_desktop\u0026amp;rcm=ACoAAA1pAyoBT2cbjslZinfR7Oc8w4UPs6Kk0wU\"\u003eLoki 3.4 announcement posted by Grafana Labs on LinkedIn\u003c/a\u003e received notable attention, with 19 reposts and 216 reactions.\u003c/p\u003e\n\n\u003cp\u003eLoki 3.4 also expands its support for out-of-order logs, allowing for the ingestion of log lines from any time period. This feature can be enabled by setting \u003ccode\u003etime_sharding_enabled\u003c/code\u003e to true. Additionally, the new release simplifies the extraction of structured metadata from logs during ingestion, enhancing the utility of log data.\u003c/p\u003e\n\n\u003cp\u003eThere are improvements to the Loki Helm chart as well, including support for \u003ccode\u003etopologySpreadConstraints\u003c/code\u003e and enhancements to Loki\u0026#39;s overrides exporter.\u003c/p\u003e\n\n\u003cp\u003eFurther detailed information about Loki 3.4 is \u003ca href=\"https://grafana.com/docs/loki/v3.4.x/release-notes/v3-4/\"\u003eavailable in the release notes\u003c/a\u003e.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Aditya-Kulkarni\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eAditya Kulkarni\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": "2025-03-12T00:00:00Z",
  "modifiedTime": null
}
