{
  "id": "0c696b17-bba6-4445-9a57-5b33c6a70742",
  "title": "Azure AI Search Unveils Agentic Retrieval for Smarter Conversational AI",
  "link": "https://www.infoq.com/news/2025/05/azure-ai-search-agent-retrieval/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "Microsoft’s Azure AI Search unveils agentic retrieval, a cutting-edge query engine that enhances conversational AI answer relevance by up to 40%. This dynamic system leverages conversation history and parallel subquery execution, paving the way for sophisticated knowledge retrieval. Currently in public preview, it offers adaptive search strategies tailored for evolving enterprise needs. By Steef-Jan Wiggers",
  "author": "Steef-Jan Wiggers",
  "published": "Sat, 31 May 2025 10:00:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Natural Language Processing",
    "Azure",
    "Cloud",
    "Large language models",
    "Artificial Intelligence",
    "Agents",
    "Search",
    "Performance",
    "Microsoft",
    "Microsoft Azure",
    "Machine Learning",
    "Architecture \u0026 Design",
    "Development",
    "DevOps",
    "AI, ML \u0026 Data Engineering",
    "news"
  ],
  "byline": "Steef-Jan Wiggers",
  "length": 3524,
  "excerpt": "Microsoft’s Azure AI Search unveils agentic retrieval, a cutting-edge query engine that enhances conversational AI answer relevance by up to 40%. This dynamic system leverages conversation history and",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s2_20250527075405/apple-touch-icon.png",
  "text": "Microsoft has launched the public preview of agentic retrieval in Azure AI Search, a query engine that autonomously plans and executes retrieval strategies for complex questions. According to the company, it enhances answer relevance in conversational AI by up to 40% compared to traditional RAG. This multi-turn system leverages conversation history and Azure OpenAI to break down queries into focused subqueries, executed in parallel across text and vector embeddings. This new capability is supported programmatically through a new Knowledge Agents object in the 2025-05-01-preview data plane REST API and Azure SDK prerelease packages. It builds on Azure AI Search's existing index, a dedicated \"Agent\" resource that links to Azure OpenAI, and the retrieval engine orchestrating the process. Microsoft positions agentic retrieval as a crucial step toward building more sophisticated knowledge retrieval systems, explicitly designed for intelligent agents, and provides high-quality grounding data for downstream consumption. According to the documentation, the agentic retrieval process involves the following stages: first, an LLM analyzes the entire chat thread to identify the core information. Subsequently, it plans a retrieval strategy that incorporates the chat history and the original query. Next, each subquery runs simultaneously, leveraging both keyword and semantic search capabilities of Azure AI Search. In a Microsoft Build session, Matthew Gotteiner explained: It's important to note that the overall speed of agentic retrieval is directly related to the number of subqueries generated. While running subqueries in parallel aims to accelerate the process, a more complex query requiring numerous subqueries will naturally take longer to complete. Counterintuitively, a \"mini\" query planner that generates fewer, broader subqueries might return results faster than a \"full-size\" planner designed to create a larger number of highly focused subqueries. The results are reranked using the platform's semantic ranker into a unified grounding payload with top hits and structured metadata. And finally, the API also returns a detailed activity log of the retrieval process. (Source: Microsoft Tech community blog post) Akshay Kokane, a software engineer at Microsoft, concluded in a Medium blog post: Traditional RAG systems are a great starting point for enhancing LLMs with domain-specific knowledge — especially when using tools like Semantic Kernel and Azure AI Search, which simplify embedding and retrieval. However, as enterprise use cases become more complex, the limitations of static, linear workflows become apparent. Agentic RAG (ARAG) addresses this gap by introducing dynamic reasoning, intelligent tool selection, and iterative refinement. Agents can adapt their search strategies, evaluate results, and construct more precise, context-aware answers — making them ideal for evolving business needs, compliance workflows, or multi-source data environments. Lastly, the public preview is currently available in select regions, and the agentic retrieval pricing includes per-token billing for Azure OpenAI's query planning and Azure AI Search's semantic ranking, both of which are free during the initial preview. Documentation, a cookbook, and integration guidance with Azure AI Agent Service are available for developers. About the Author Steef-Jan Wiggers",
  "image": "https://res.infoq.com/news/2025/05/azure-ai-search-agent-retrieval/en/headerimage/generatedHeaderImage-1748518483372.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eMicrosoft has launched the public preview of \u003ca href=\"https://learn.microsoft.com/en-us/azure/search/search-agentic-retrieval-concept\"\u003eagentic retrieval in Azure AI Search\u003c/a\u003e, a query engine that autonomously plans and executes retrieval strategies for complex questions. According to the company, it enhances answer relevance in conversational AI by up to \u003ca href=\"https://www.infoq.com/news/2025/05/azure-ai-search-agent-retrieval/aka.ms/aisearch-arevals\"\u003e40% compared to traditional RAG\u003c/a\u003e. This multi-turn system leverages conversation history and Azure OpenAI to break down queries into focused subqueries, executed in parallel across text and vector embeddings.\u003c/p\u003e\n\n\u003cp\u003eThis new capability is supported programmatically through a new \u003ca href=\"https://learn.microsoft.com/en-us/azure/search/search-agentic-retrieval-concept\"\u003eKnowledge Agents object in the 2025-05-01-preview data plane REST API and Azure SDK prerelease packages\u003c/a\u003e. It builds on Azure AI Search\u0026#39;s existing index, a dedicated \u0026#34;Agent\u0026#34; resource that links to Azure OpenAI, and the retrieval engine orchestrating the process. Microsoft positions agentic retrieval as a crucial step toward building more sophisticated knowledge retrieval systems, explicitly designed for intelligent agents, and provides high-quality grounding data for downstream consumption.\u003c/p\u003e\n\n\u003cp\u003eAccording to the documentation, the agentic retrieval process involves the following stages: first, an LLM analyzes the entire chat thread to identify the core information. Subsequently, it plans a retrieval strategy that incorporates the chat history and the original query. Next, each subquery runs simultaneously, leveraging both keyword and semantic search capabilities of Azure AI Search. In a Microsoft Build session, Matthew Gotteiner \u003ca href=\"https://www.youtube.com/watch?v=PeTmOidqHM8\"\u003eexplained\u003c/a\u003e:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIt\u0026#39;s important to note that the overall speed of agentic retrieval is directly related to the number of subqueries generated. While running subqueries in parallel aims to accelerate the process, a more complex query requiring numerous subqueries will naturally take longer to complete. Counterintuitively, a \u0026#34;mini\u0026#34; query planner that generates fewer, broader subqueries might return results faster than a \u0026#34;full-size\u0026#34; planner designed to create a larger number of highly focused subqueries.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe results are reranked using the platform\u0026#39;s semantic ranker into a unified grounding payload with top hits and structured metadata. And finally, the API also returns a detailed activity log of the retrieval process.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"\" data-src=\"news/2025/05/azure-ai-search-agent-retrieval/en/resources/1AR_pipeline_Build25 (1)-1748518400038.png\" src=\"https://imgopt.infoq.com/fit-in/3000x4000/filters:quality(85)/filters:no_upscale()/news/2025/05/azure-ai-search-agent-retrieval/en/resources/1AR_pipeline_Build25 (1)-1748518400038.png\" rel=\"share\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003e(Source: Microsoft Tech community \u003ca href=\"https://techcommunity.microsoft.com/blog/azure-ai-services-blog/introducing-agentic-retrieval-in-azure-ai-search/4414677\"\u003eblog post\u003c/a\u003e)\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eAkshay Kokane, a software engineer at Microsoft, concluded in a Medium \u003ca href=\"https://medium.com/data-science-collective/step-by-step-guide-on-building-agentic-rag-with-microsoft-semantic-kernel-and-azure-ai-search-3dcee5bf38ba\"\u003eblog post\u003c/a\u003e:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eTraditional RAG systems are a great starting point for enhancing LLMs with domain-specific knowledge — especially when using tools like Semantic Kernel and Azure AI Search, which simplify embedding and retrieval. However, as enterprise use cases become more complex, the limitations of static, linear workflows become apparent.\u003c/p\u003e\n\n\u003cp\u003eAgentic RAG (ARAG) addresses this gap by introducing dynamic reasoning, intelligent tool selection, and iterative refinement. Agents can adapt their search strategies, evaluate results, and construct more precise, context-aware answers — making them ideal for evolving business needs, compliance workflows, or multi-source data environments.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eLastly, the public preview is currently available in select regions, and the agentic retrieval pricing includes per-token billing for Azure OpenAI\u0026#39;s query planning and Azure AI Search\u0026#39;s semantic ranking, both of which are free during the initial preview. \u003ca href=\"https://learn.microsoft.com/en-us/azure/search/search-agentic-retrieval-concept#agentic-retrieval-architecture\"\u003eDocumentation\u003c/a\u003e, a \u003ca href=\"https://github.com/Azure-Samples/azure-search-python-samples/blob/main/Quickstart-Agentic-Retrieval/quickstart-agentic-retrieval.ipynb\"\u003ecookbook\u003c/a\u003e, and \u003ca href=\"https://github.com/Azure-Samples/azure-search-python-samples/blob/main/agentic-retrieval-pipeline-example/agent-example.ipynb\"\u003eintegration guidance\u003c/a\u003e with Azure AI Agent Service are available for developers.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Steef~Jan-Wiggers\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eSteef-Jan Wiggers\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": "2025-05-31T00:00:00Z",
  "modifiedTime": null
}
