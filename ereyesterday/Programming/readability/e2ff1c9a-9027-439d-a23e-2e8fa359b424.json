{
  "id": "e2ff1c9a-9027-439d-a23e-2e8fa359b424",
  "title": "Exploring Factors that Drive Software Engineering Productivity",
  "link": "https://www.infoq.com/news/2024/12/software-engineer-productivity/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "Understanding what drives software development productivity is the key to making high-impact investments in engineering productivity, Emerson Murphy-Hill said at QCon San Francisco. He presented the results of their investigation into factors that predict developer productivity and shared what they learned from exploring inequities in software engineering. By Ben Linders",
  "author": "Ben Linders",
  "published": "Mon, 23 Dec 2024 11:17:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "QCon Software Development Conference",
    "QCon San Francisco 2024",
    "Google",
    "Code Reviews",
    "Software Development",
    "Diversity",
    "Inclusion",
    "Applied Research",
    "Equality",
    "Software Engineering",
    "Culture \u0026 Methods",
    "news"
  ],
  "byline": "Ben Linders",
  "length": 5139,
  "excerpt": "Understanding what drives software development productivity is the key to making high-impact investments in engineering productivity, Emerson Murphy-Hill said at QCon San Francisco. He presented the r",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s1_20241210082243/apple-touch-icon.png",
  "text": "Understanding what drives software development productivity is the key to making high-impact investments in engineering productivity, Emerson Murphy-Hill said at QCon San Francisco. He presented the results of their investigation into factors that predict developer productivity and shared what they learned from exploring inequities in software engineering. From our personal experience, we know that it’s not just one thing that makes us productive or unproductive, Murphy-Hill said. The research backs up that intuition – many factors affect productivity in software engineering, he added. We didn’t know how to prioritize the factors for both further research and for practical significance, Murphy-Hill explained: Developers complain about meetings, open offices, and inadequate tools, for instance, but which are the most important to invest in? To invest wisely, we need to determine which ones will yield the biggest payoff. In their research, they put together a list of 48 factors that impact productivity: We developed this comprehensive set of factors to ensure we covered all relevant aspects. These factors include those related to individuals, communication between teammates, developer tools, and distractions—anything impacting developer productivity, based on prior research. As an example, they asked each developer how enthusiastic they are about their work – typically called \"employee engagement\" – then correlated that rating with developer productivity. The complete list of factors can be found in Figure 4 in their paper What Predicts Software Developers’ Productivity? Murphy-Hill mentioned that they also explored inequities in software engineering. They concluded that productivity factors affect developers differently based on their demographic groups in surprising ways. For example, conflict arises more often during reviews of code authored by engineers from historically marginalized groups, such as female, older, and black engineers, Murphy-Hill said. This highlights that biases are present in engineering environments and can be worsened or mitigated, depending on how we design these environments, as he explained: We built and tested an \"anonymous\" code review tool that doesn’t initially name or show a picture of the person who authored the code as a way to mitigate the effect of bias. To recognize symptoms of problems that impact engineering productivity, Murphy-Hill suggested listening to what your engineers are telling you. To adopt a more systematic approach, it is essential to run regular large-scale surveys to identify the most common and severe productivity challenges, Murphy-Hill said. Additionally, if your engineering productivity research organization is mature enough, you can examine quantitative metrics for productivity, such as the time taken to submit code or run builds. Murphy-Hill mentioned that while people often perceive numerical data as more credible than anecdotes or experiences, those personal insights can be incredibly valuable and lead to effective solutions. In contrast, quantitative productivity data frequently leaves you questioning the reasons behind the numbers, he said. Accountability is crucial; share the data you’ve collected widely, and explain the actions taken based on it, Murphy-Hill said. This builds credibility and encourages future participation in engineering productivity research, he concluded. InfoQ interviewed Emerson Murphy-Hill about building diverse engineering teams and improving productivity. InfoQ: What works for building and sustaining highly diverse engineering teams? Emerson Murphy-Hill: When we spoke with the most diverse engineering teams at Google, they emphasized that their success in building diversity depended on two primary factors: 1) equitable recruiting and hiring practices, and 2) supporting underrepresented engineers through what we call \"technical allyship.\" For example, hiring managers reported they were most successful when they both \"talked the talk\" and \"walked the walk.\" When a candidate from a historically marginalized group considered joining their team, these managers ensured that they discussed how the individual would be supported and provided growth opportunities. InfoQ: What doesn’t work? Murphy-Hill: What doesn’t work is just saying that you care about diversity, without any actions to back it up. The managers who we spoke to offered concrete examples of previous actions taken to support individuals. InfoQ: What’s your advice for improving productivity? Murphy-Hill: A simple method is just for leadership to listen to engineers, who can often name their biggest productivity challenges. To boost productivity in a small company or within a team (say, under 100 engineers), gather open-ended feedback to identify pain points, considering both frequency and severity. In larger organizations, use closed-ended questions about specific experiences, like build speed or collaboration issues. About the Author Ben Linders",
  "image": "https://res.infoq.com/news/2024/12/software-engineer-productivity/en/headerimage/exploring-factors-header-1734609530042.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eUnderstanding what drives software development productivity is the key to making high-impact investments in engineering productivity, Emerson Murphy-Hill said at \u003ca href=\"https://qconsf.com/\"\u003eQCon San Francisco\u003c/a\u003e. He presented the results of their investigation into factors that predict developer productivity and shared what they learned from exploring inequities in software engineering.\u003c/p\u003e\n\n\u003cp\u003eFrom our personal experience, we know that it’s not just one thing that makes us productive or unproductive, Murphy-Hill said. The research backs up that intuition – many factors affect productivity in software engineering, he added.\u003c/p\u003e\n\n\u003cp\u003eWe didn’t know how to prioritize the factors for both further research and for practical significance, Murphy-Hill explained:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eDevelopers complain about meetings, open offices, and inadequate tools, for instance, but which are the most important to invest in? To invest wisely, we need to determine which ones will yield the biggest payoff.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eIn their research, they put together a list of 48 factors that impact productivity:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eWe developed this comprehensive set of factors to ensure we covered all relevant aspects. These factors include those related to individuals, communication between teammates, developer tools, and distractions—anything impacting developer productivity, based on prior research.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAs an example, they asked each developer how enthusiastic they are about their work – typically called \u0026#34;employee engagement\u0026#34; – then correlated that rating with developer productivity.\u003c/p\u003e\n\n\u003cp\u003eThe complete list of factors can be found in Figure 4 in their paper \u003ca href=\"https://research.google/pubs/what-predicts-software-developers-productivity/\"\u003eWhat Predicts Software Developers’ Productivity?\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eMurphy-Hill mentioned that they also explored inequities in software engineering. They concluded that productivity factors affect developers differently based on their demographic groups in surprising ways.\u003c/p\u003e\n\n\u003cp\u003eFor example, conflict arises more often during reviews of code authored by engineers from historically marginalized groups, such as female, older, and black engineers, Murphy-Hill said. This highlights that biases are present in engineering environments and can be worsened or mitigated, depending on how we design these environments, as he explained:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eWe built and tested an \u003ca href=\"https://research.google/pubs/engineering-impacts-of-anonymous-author-code-review-a-field-experiment/\"\u003e\u0026#34;anonymous\u0026#34; code review tool\u003c/a\u003e that doesn’t initially name or show a picture of the person who authored the code as a way to mitigate the effect of bias.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eTo recognize symptoms of problems that impact engineering productivity, Murphy-Hill suggested listening to what your engineers are telling you.\u003c/p\u003e\n\n\u003cp\u003eTo adopt a more systematic approach, it is essential to run regular large-scale surveys to identify the most common and severe productivity challenges, Murphy-Hill said. Additionally, if your engineering productivity research organization is mature enough, you can examine quantitative metrics for productivity, such as the time taken to submit code or run builds.\u003c/p\u003e\n\n\u003cp\u003eMurphy-Hill mentioned that while people often perceive numerical data as more credible than anecdotes or experiences, those personal insights can be incredibly valuable and lead to effective solutions. In contrast, quantitative productivity data frequently leaves you questioning the reasons behind the numbers, he said.\u003c/p\u003e\n\n\u003cp\u003eAccountability is crucial; share the data you’ve collected widely, and explain the actions taken based on it, Murphy-Hill said. This builds credibility and encourages future participation in engineering productivity research, he concluded.\u003c/p\u003e\n\n\u003cp\u003eInfoQ interviewed\u003ca href=\"https://www.linkedin.com/in/captainemerson/\"\u003e Emerson Murphy-Hill\u003c/a\u003e about building diverse engineering teams and improving productivity.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eInfoQ: What works for building and sustaining highly diverse engineering teams? \u003c/strong\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eEmerson Murphy-Hill\u003c/strong\u003e: When we\u003ca href=\"https://research.google/pubs/building-and-sustaining-ethnically-racially-and-gender-diverse-software-engineering-teams-a-study-at-google/\"\u003e spoke with the most diverse engineering teams at Google\u003c/a\u003e, they emphasized that their success in building diversity depended on two primary factors: 1) equitable recruiting and hiring practices, and 2) supporting underrepresented engineers through what we call \u0026#34;technical allyship.\u0026#34;\u003c/p\u003e\n\n\u003cp\u003eFor example, hiring managers reported they were most successful when they both \u0026#34;talked the talk\u0026#34; and \u0026#34;walked the walk.\u0026#34; When a candidate from a historically marginalized group considered joining their team, these managers ensured that they discussed how the individual would be supported and provided growth opportunities.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003eInfoQ: What doesn’t work?\u003c/strong\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eMurphy-Hill\u003c/strong\u003e: What doesn’t work is just saying that you care about diversity, without any actions to back it up. The managers who we spoke to offered concrete examples of previous actions taken to support individuals.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003eInfoQ: What’s your advice for improving productivity?\u003c/strong\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eMurphy-Hill\u003c/strong\u003e: A simple method is just for leadership to listen to engineers, who can often name their biggest productivity challenges.\u003c/p\u003e\n\n\u003cp\u003eTo boost productivity in a small company or within a team (say, under 100 engineers), gather open-ended feedback to identify pain points, considering both frequency and severity. In larger organizations, use closed-ended questions about specific experiences, like build speed or collaboration issues.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Ben-Linders\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eBen Linders\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": "2024-12-23T00:00:00Z",
  "modifiedTime": null
}
