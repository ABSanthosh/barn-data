{
  "id": "73d28b46-eabe-4e53-a828-ab89705adbe7",
  "title": "Using Social Drivers to Improve Software Engineering Team Performance",
  "link": "https://www.infoq.com/news/2025/05/software-engineering-performance/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "According to Lizzie Matusov, technical drivers like velocity offer an incomplete view of team performance. Social drivers—trust, autonomy, purpose, and psychological safety—provide a fuller picture and reveal important areas of opportunity for improvement. She spoke about the social drivers behind high-performing engineering teams at QCon San Francisco. By Ben Linders",
  "author": "Ben Linders",
  "published": "Thu, 08 May 2025 11:03:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Collaboration",
    "QCon San Francisco 2024",
    "Software Engineering",
    "Psychological Safety",
    "Metrics",
    "Social Skills",
    "QCon Software Development Conference",
    "Trust",
    "Culture \u0026 Methods",
    "news"
  ],
  "byline": "Ben Linders",
  "length": 6273,
  "excerpt": "According to Lizzie Matusov, technical drivers like velocity offer an incomplete view of team performance. Social drivers—trust, autonomy, purpose, and psychological safety—provide a fuller picture an",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s2_20250506220132/apple-touch-icon.png",
  "text": "According to Lizzie Matusov, technical drivers like velocity offer an incomplete view of team performance. Social drivers—trust, autonomy, purpose, and psychological safety—provide a fuller picture and reveal important areas of opportunity for improvement. She spoke about the social drivers behind high-performing engineering teams at QCon San Francisco. High-performing software teams reliably and consistently deliver high value to their end users, Matusov said. They balance technical excellence, efficient workflows, and a supportive team culture focused on collaboration, well-being, and continuous improvement. To understand what drives a team to keep performing at a high level, look at their technical and social drivers, Matusov suggested. Technical metrics (like velocity or quality) focus on the efficiency and quality of the output, while social factors (like psychological safety and autonomy) reflect the environment and culture that enable or hinder that output, she added. To keep performing at a high level, teams need to have a combination of efficient technical processes and a strong social environment that motivates them to continuously deliver at a high bar. The social drivers are in many cases equally or more important than the technical drivers, but organizations often only focus on the technical factors, Matusov explained: When a team is first thinking about looking at the social drivers on their team, I tend to recommend a framework called \"TAPPs\". This stands for trust, autonomy, purpose, and psychological safety. These four drivers create a very comprehensive view of the social dynamics of the team, and how that drives their overall performance. When a team has high trust - that is, they believe their teammates will reliably contribute and support the shared objectives - they are significantly more productive, Matusov said. In a study on predicting developer productivity over 600 engineers ranked factors that make them productive. 40% of the top ten factors related to trust. Trust creates a tremendous impact on an engineering team, improving performance on a team, product, and organizational level, she mentioned. To foster autonomy, managers can set clear goals and objectives that are aligned with business outcomes, while giving the team the freedom to determine the best approach to achieve them. This empowers the team to take ownership of their work, make independent decisions, and reinforce their commitment to shared goals, Matusov said. Purpose keeps a team aligned with business goals and values. When the team understands the impact of their work, they are more compelled to achieve that impact, Matusov explained: The 2024 DevOps Research Assessment (DORA) Report found that engineering teams who have higher alignment to their work consistently achieve high product performance, regardless of their throughput. Psychological safety is the shared belief among teammates that they can take interpersonal risks without fear of negative consequences. It is about taking risks and demonstrating candor, not being prudent or cautious, Matusov said. Teams with high psychological safety are the most risk-taking, disruptive, and innovative teams. They aren’t afraid of failure, which usually leads to finding the best solutions for their users. Matusov suggested measuring social drivers. Teams that want to understand how to unblock engineering productivity and increase performance need to first understand what’s causing their roadblocks. In other words, you can’t improve what you don’t measure, she said. To measure social drivers, Matusov recommends a \"Build, Review, Drive\" strategy: Build a process: to make meaningful improvements, teams need more than a single data point. Create a plan for measuring on a monthly (ideal) or quarterly basis so you can understand trends and also analyze the impact of actions. Review with curiosity: as you establish a baseline and trends for a team, remember to approach the data with curiosity. Resist the urge to over-index on a single data point, and instead prioritize change over time. Always ask \"why\" to get to the root of how social drivers are impacting the team. Drive actions and improvements: reviewing the data with curiosity should unearth opportunities to make improvements. Talk to the team, and commit to an action that improves the team’s performance. Creating this feedback loop will build an iterative process of improvement, and will yield major improvements in the team’s overall performance, Matusov concluded. InfoQ interviewed Lizzie Matusov about measuring and analyzing social drivers. InfoQ: How can we measure the social drivers that influence the performance of software teams? Lizzie Matusov: The most effective way to measure social drivers is through a survey that is anonymized and aggregated to the team level. A survey consists of a series of single barrel questions (i.e. only asking one thing at a time), with a 1-5 Likert scale answer. For example, one way to measure psychological safety is by asking the following question: \"If I make a mistake, it won’t be held against me.\" By asking on a regular cadence (monthly or quarterly), teams can measure quantitatively how sentiment changes over time for the most important social drivers. InfoQ: How can we review the data and take action? Matusov: The first thing a team should figure out is if they have a complete picture of what’s happening on the team, which would include both social drivers and technical drivers. As an example: a team’s system metrics may show that they consistently struggle with very slow code review cycles. Without including social drivers, they could choose an action that won’t solve the root cause of their problem. Measuring social drivers may indicate that the team struggles with autonomy. This means the team does not feel that they \"own\" their code reviews to push the process forward, which causes more idle time in the review process. Solving for autonomy will improve their code review cycle time, and allow the team to deliver features to customers faster. About the Author Ben Linders",
  "image": "https://res.infoq.com/news/2025/05/software-engineering-performance/en/headerimage/software-engineering-performance-header-1746524708486.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eAccording to Lizzie Matusov, technical drivers like velocity offer an incomplete view of team performance. Social drivers—trust, autonomy, purpose, and psychological safety—provide a fuller picture and reveal important areas of opportunity for improvement. She spoke about the \u003ca href=\"https://qconsf.com/keynote/nov2024/not-so-hidden-social-drivers-behind-highest-performing-engineering-teams\"\u003esocial drivers behind high-performing engineering teams\u003c/a\u003e at \u003ca href=\"https://qconsf.com/\"\u003eQCon San Francisco\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eHigh-performing software teams reliably and consistently deliver high value to their end users, Matusov said. They balance technical excellence, efficient workflows, and a supportive team culture focused on collaboration, well-being, and continuous improvement.\u003c/p\u003e\n\n\u003cp\u003eTo understand what drives a team to keep performing at a high level, look at their technical and social drivers, Matusov suggested. Technical metrics (like velocity or quality) focus on the efficiency and quality of the output, while social factors (like psychological safety and autonomy) reflect the environment and culture that enable or hinder that output, she added.\u003c/p\u003e\n\n\u003cp\u003eTo keep performing at a high level, teams need to have a combination of efficient technical processes and a strong social environment that motivates them to continuously deliver at a high bar. The social drivers are in many cases equally or more important than the technical drivers, but organizations often only focus on the technical factors, Matusov explained:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eWhen a team is first thinking about looking at the social drivers on their team, I tend to recommend a framework called \u0026#34;TAPPs\u0026#34;. This stands for trust, autonomy, purpose, and psychological safety. These four drivers create a very comprehensive view of the social dynamics of the team, and how that drives their overall performance.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eWhen a team has high trust - that is, they believe their teammates will reliably contribute and support the shared objectives - they are significantly more productive, Matusov said. In a study on \u003ca href=\"https://research.google/pubs/what-predicts-software-developers-productivity/\"\u003epredicting developer productivity\u003c/a\u003e over 600 engineers ranked factors that make them productive. 40% of the top ten factors related to trust. Trust creates a tremendous impact on an engineering team, improving performance on a team, product, and organizational level, she mentioned.\u003c/p\u003e\n\n\u003cp\u003eTo foster autonomy, managers can set clear goals and objectives that are aligned with business outcomes, while giving the team the freedom to determine the best approach to achieve them. This empowers the team to take ownership of their work, make independent decisions, and reinforce their commitment to shared goals, Matusov said.\u003c/p\u003e\n\n\u003cp\u003ePurpose keeps a team aligned with business goals and values. When the team understands the impact of their work, they are more compelled to achieve that impact, Matusov explained:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe \u003ca href=\"https://dora.dev/research/2024/dora-report/\"\u003e2024 DevOps Research Assessment (DORA) Report\u003c/a\u003e found that engineering teams who have higher alignment to their work consistently achieve high product performance, regardless of their throughput.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003ePsychological safety is the shared belief among teammates that they can take interpersonal risks without fear of negative consequences. It is about taking risks and demonstrating candor, not being prudent or cautious, Matusov said. Teams with high psychological safety are the most risk-taking, disruptive, and innovative teams. They aren’t afraid of failure, which usually leads to finding the best solutions for their users.\u003c/p\u003e\n\n\u003cp\u003eMatusov suggested measuring social drivers. Teams that want to understand how to unblock engineering productivity and increase performance need to first understand what’s causing their roadblocks. In other words, you can’t improve what you don’t measure, she said.\u003c/p\u003e\n\n\u003cp\u003eTo measure social drivers, Matusov recommends a \u0026#34;Build, Review, Drive\u0026#34; strategy:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003col\u003e\n\t\u003cli\u003e\u003cstrong\u003eBuild a process:\u003c/strong\u003e to make meaningful improvements, teams need more than a single data point. Create a plan for measuring on a monthly (ideal) or quarterly basis so you can understand trends and also analyze the impact of actions.\u003c/li\u003e\n\t\u003cli\u003e\u003cstrong\u003eReview with curiosity:\u003c/strong\u003e as you establish a baseline and trends for a team, remember to approach the data with curiosity. Resist the urge to over-index on a single data point, and instead prioritize change over time. Always ask \u0026#34;why\u0026#34; to get to the root of how social drivers are impacting the team.\u003c/li\u003e\n\t\u003cli\u003e\u003cstrong\u003eDrive actions and improvements: \u003c/strong\u003ereviewing the data with curiosity should unearth opportunities to make improvements. Talk to the team, and commit to an action that improves the team’s performance.\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eCreating this feedback loop will build an iterative process of improvement, and will yield major improvements in the team’s overall performance, Matusov concluded.\u003c/p\u003e\n\n\u003cp\u003eInfoQ interviewed \u003ca href=\"https://www.linkedin.com/in/lizzie-matusov/\"\u003eLizzie Matusov\u003c/a\u003e about measuring and analyzing social drivers.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eInfoQ: How can we measure the social drivers that influence the performance of software teams?\u003c/strong\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eLizzie Matusov\u003c/strong\u003e: The most effective way to measure social drivers is through a survey that is anonymized and aggregated to the team level. A survey consists of a series of single barrel questions (i.e. only asking one thing at a time), with a 1-5 Likert scale answer.\u003c/p\u003e\n\n\u003cp\u003eFor example, one way to measure psychological safety is by asking the following question: \u0026#34;If I make a mistake, it won’t be held against me.\u0026#34;\u003c/p\u003e\n\n\u003cp\u003eBy asking on a regular cadence (monthly or quarterly), teams can measure quantitatively how sentiment changes over time for the most important social drivers.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003eInfoQ: How can we review the data and take action?\u003c/strong\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eMatusov\u003c/strong\u003e: The first thing a team should figure out is if they have a complete picture of what’s happening on the team, which would include both social drivers and technical drivers.\u003c/p\u003e\n\n\u003cp\u003eAs an example: a team’s system metrics may show that they consistently struggle with very slow code review cycles. Without including social drivers, they could choose an action that won’t solve the root cause of their problem.\u003c/p\u003e\n\n\u003cp\u003eMeasuring social drivers may indicate that the team struggles with autonomy. This means the team does not feel that they \u0026#34;own\u0026#34; their code reviews to push the process forward, which causes more idle time in the review process. Solving for autonomy will improve their code review cycle time, and allow the team to deliver features to customers faster.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Ben-Linders\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eBen Linders\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": "2025-05-08T00:00:00Z",
  "modifiedTime": null
}
