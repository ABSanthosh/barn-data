{
  "id": "9a01ad67-677c-4556-b977-a34f8723d931",
  "title": "Addressing Kubernetes Authorization with Cedar",
  "link": "https://www.infoq.com/news/2025/04/cedar-kubernetes-authorization/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "Cedar is a human-readable and machine-analyzable policy language designed for modern authorization needs. It addresses the challenge with Kubernetes authorization with Role-Based Access Control (RBAC) and provides condition operators that allow fine-grained permissions on specific resources. By Aditya Kulkarni",
  "author": "Aditya Kulkarni",
  "published": "Sun, 27 Apr 2025 18:30:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Policy as Code",
    "Kubernetes",
    "DevOps",
    "news"
  ],
  "byline": "Aditya Kulkarni",
  "length": 2800,
  "excerpt": "Cedar is a human-readable and machine-analyzable policy language designed for modern authorization needs. It addresses the challenge with Kubernetes authorization with Role-Based Access Control (RBAC)",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s2_20250422123044_u1/apple-touch-icon.png",
  "text": "Cedar is a human-readable and machine-analyzable policy language designed for modern authorization needs. It addresses the challenge with Kubernetes authorization with Role-Based Access Control (RBAC) and provides condition operators that allow fine-grained permissions on specific resources. Recently, Micah Hausler, Principal Engineer at AWS, elaborated on Cedar’s approach to policy management in a CNCF blog. When scaling Kubernetes deployments in cloud-native environments, organizations face issues managing access control and authorization. In such scenarios, Kubernetes Administrators must manage different policy frameworks and tools for various types of controls. In Q4 2024, Cedar extended its integration with Kubernetes. Using Cedar, Kubernetes administrators can write authorization and admission policies using the same language and framework. Cedar can be employed at multiple extension points in the Kubernetes API to enforce access controls in Kubernetes. Source - Cedar: A new approach to policy management for Kubernetes With label and attribute-based access Controls, Cedar enables fine-grained permissions based on resource labels and attributes, creating previously complex security boundaries. Another notable feature is Schema Generation for Kubernetes built-in types and Custom Resource Definitions, which ensures policies can be validated before creation. Cedar also provides explicit support for impersonation authorization, which makes it easier for authors to correct impersonation policies on UIDs, usernames, and groups. As Cedar maintains compatibility with existing RBAC configurations, organizations can gradually adopt Cedar without much disruption to their current security posture. At KubeCon + CloudNativeCon NA 2024, Gabriel L. Manor, VP of Developer Relations at Permit.io, moderated a panel discussion - The Policy Engines Showdown. Representing Cedar, Joy Scharmen, Senior Director of Infrastructure Engineering at StrongDM, said, Cedar builds on AWS’s extensive IAM expertise, making it a highly readable and predictable policy language. Its analyzability is a standout feature, ensuring that policies do exactly what they’re supposed to. The panel also included representatives from other policy engines: OpenFGA, Topaz, and Open Policy Agent (OPA). There was announcement post from Hausler on LinkedIn, which also received good engagement from the tech community. Organizations can start with Cedar, using tools in the development environment such as kind. Readers can check out the Cedar for Kubernetes GitHub repository for further interest regarding implementation or contribution. About the Author Aditya Kulkarni",
  "image": "https://res.infoq.com/news/2025/04/cedar-kubernetes-authorization/en/headerimage/generatedHeaderImage-1745768339028.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eCedar is a human-readable and machine-analyzable policy language designed for modern authorization needs. It addresses the challenge with Kubernetes authorization with Role-Based Access Control (RBAC) and provides condition operators that allow fine-grained permissions on specific resources.\u003c/p\u003e\n\n\u003cp\u003eRecently, \u003ca href=\"https://www.linkedin.com/in/micahhausler/\"\u003eMicah Hausler\u003c/a\u003e, Principal Engineer at AWS, elaborated on \u003ca href=\"https://www.cncf.io/blog/2025/03/28/cedar-a-new-approach-to-policy-management-for-kubernetes/\"\u003eCedar’s approach to policy management\u003c/a\u003e in a CNCF blog. When scaling Kubernetes deployments in cloud-native environments, organizations face issues managing access control and authorization. In such scenarios, Kubernetes Administrators must manage different policy frameworks and tools for various types of controls. In Q4 2024, Cedar extended its \u003ca href=\"https://www.cedarpolicy.com/blog/cedar-for-kubernetes\"\u003eintegration with Kubernetes\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eUsing Cedar, Kubernetes administrators can write authorization and admission policies using the same language and framework. Cedar can be employed at multiple extension points in the Kubernetes API to enforce access controls in Kubernetes.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"\" data-src=\"news/2025/04/cedar-kubernetes-authorization/en/resources/1Kubernetes_Authorization_Cedar-1745768338189.png\" src=\"https://imgopt.infoq.com/fit-in/3000x4000/filters:quality(85)/filters:no_upscale()/news/2025/04/cedar-kubernetes-authorization/en/resources/1Kubernetes_Authorization_Cedar-1745768338189.png\" rel=\"share\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eSource - \u003ca href=\"https://www.cncf.io/blog/2025/03/28/cedar-a-new-approach-to-policy-management-for-kubernetes/\"\u003eCedar: A new approach to policy management for Kubernetes\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eWith label and attribute-based access Controls, Cedar enables fine-grained permissions based on resource labels and attributes, creating previously complex security boundaries. Another notable feature is Schema Generation for Kubernetes built-in types and \u003ca href=\"https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/\"\u003eCustom Resource Definitions\u003c/a\u003e, which ensures policies can be validated before creation.\u003c/p\u003e\n\n\u003cp\u003eCedar also provides explicit support for \u003ca href=\"https://kubernetes.io/docs/reference/access-authn-authz/authentication/#user-impersonation\"\u003eimpersonation authorization\u003c/a\u003e, which makes it easier for authors to correct impersonation policies on UIDs, usernames, and groups. As Cedar maintains compatibility with existing RBAC configurations, organizations can gradually adopt Cedar without much disruption to their current security posture.\u003c/p\u003e\n\n\u003cp\u003eAt KubeCon + CloudNativeCon NA 2024, \u003ca href=\"https://www.linkedin.com/in/gemanor/\"\u003eGabriel L. Manor\u003c/a\u003e, VP of Developer Relations at Permit.io, moderated a panel discussion - \u003ca href=\"https://www.youtube.com/watch?si=U8RUdhCf-N2WB7Th\u0026amp;v=AVA32aYObRE\u0026amp;feature=youtu.be\"\u003eThe Policy Engines Showdown\u003c/a\u003e. Representing Cedar, \u003ca href=\"https://www.linkedin.com/in/jscharmen/\"\u003eJoy Scharmen\u003c/a\u003e, Senior Director of Infrastructure Engineering at StrongDM, said,\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eCedar builds on AWS’s extensive IAM expertise, making it a highly readable and predictable policy language. Its analyzability is a standout feature, ensuring that policies do exactly what they’re supposed to.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe panel also included representatives from other policy engines: \u003ca href=\"https://openfga.dev/\"\u003eOpenFGA\u003c/a\u003e, \u003ca href=\"https://www.topaz.sh/docs/intro\"\u003eTopaz\u003c/a\u003e, and \u003ca href=\"https://www.openpolicyagent.org/\"\u003eOpen Policy Agent (OPA)\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThere was \u003ca href=\"https://www.linkedin.com/feed/update/urn:li:activity:7257450302281236483/\"\u003eannouncement post from Hausler on LinkedIn\u003c/a\u003e, which also received good engagement from the tech community.\u003c/p\u003e\n\n\u003cp\u003eOrganizations can start with Cedar, using tools in the development environment such as \u003ca href=\"https://kind.sigs.k8s.io/\"\u003ekind\u003c/a\u003e. Readers can check out the \u003ca href=\"https://github.com/awslabs/cedar-access-control-for-k8s\"\u003eCedar for Kubernetes GitHub repository\u003c/a\u003e for further interest regarding implementation or contribution.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Aditya-Kulkarni\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eAditya Kulkarni\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": "2025-04-27T00:00:00Z",
  "modifiedTime": null
}
