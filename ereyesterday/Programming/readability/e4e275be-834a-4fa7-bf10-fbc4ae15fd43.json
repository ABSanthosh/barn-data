{
  "id": "e4e275be-834a-4fa7-bf10-fbc4ae15fd43",
  "title": "Webcam randomly pausing in OBS, Discord, and websites - LSVCam and TikTok Studio",
  "link": "http://feeds.hanselman.com/~/905963465/0/scotthanselman~Webcam-randomly-pausing-in-OBS-Discord-and-websites-LSVCam-and-TikTok-Studio",
  "description": "I use my webcam constantly for streaming and I'm pretty familiar with all the internals and how the camera model on Windows works. I also use OBS extensively, so I regularly use the OBS virtual camera and flow everything through Open Broadcasting Studio. For my podcast, I use Zencastr which is a web-based app that talks to the webcam via the browser APIs. For YouTubes, I'll use Riverside or StreamYard, also webapps. I've done this reliably for the last several years without any trouble. Yesterday, I started seeing the most weird thing and it was absolutely perplexing and almost destroyed the day. I started seeing regular pauses in my webcam stream but only in two instances. The webcam would pause for 10-15 seconds every 90 or so seconds when access the Webcam in a browser I would see a long pause/hang in OBS when double clicking on my Video Source (Webcam) to view its properties Micah initially said USB but my usb bus and hubs have worked reliably for years. Thought something might have changed in my El Gato capture device, but that has also been rock solid for 1/2 a decade. Then I started exploring virtual cameras and looked in the windows camera dialog under settings for a list of all virtual cameras. Interestingly, virtual cameras don't get listed under Cameras in Settings in Windows: From what I can tell, there's no user interface to list out all of your cameras - virtual or otherwise - in windows. Here's a quick PowerShell script you can run to list out anything 'connected' that also includes the string \"cam\" in your local devicesGet-CimInstance -Namespace root\\cimv2 -ClassName Win32_PnPEntity | Where-Object { $_.Name -match 'Cam' } | Select-Object Name, Manufacturer, PNPDeviceID and my outputName Manufacturer PNPDeviceID---- ------------ -----------Cam Link 4K Microsoft USB\\VID_0FD9\u0026PID_0066\u0026MI_00\\7\u00263768531A\u00260\u00260000Digital Audio Interface (2- Cam Link 4K) Microsoft SWD\\MMDEVAPI\\{0.0.1.00000000}.{AF1690B6-CA2A-4AD3-AAFD-8DDEBB83DD4A}Logitech StreamCam WinUSB Logitech USB\\VID_046D\u0026PID_0893\u0026MI_04\\7\u0026E36D0CF\u00260\u00260004Logitech StreamCam (Generic USB Audio) USB\\VID_046D\u0026PID_0893\u0026MI_02\\7\u0026E36D0CF\u00260\u00260002Logitech StreamCam Logitech USB\\VID_046D\u0026PID_0893\u0026MI_00\\7\u0026E36D0CF\u00260\u00260000Remote Desktop Camera Bus Microsoft UMB\\UMB\\1\u0026841921D\u00260\u0026RDCAMERA_BUSCam Link 4K (Generic USB Audio) USB\\VID_0FD9\u0026PID_0066\u0026MI_03\\7\u00263768531A\u00260\u00260003Windows Virtual Camera Device Microsoft SWD\\VCAMDEVAPI\\B486E21F1D4BC97087EA831093E840AD2177E046699EFBF62B27304F5CCAEF57 However, when I list out my cameras using JavaScript enumerateDevices() like this// Put variables in global scope to make them available to the browser console.async function listWebcams() { try { const devices = await navigator.mediaDevices.enumerateDevices(); const webcams = devices.filter(device =\u003e device.kind === 'videoinput'); if (webcams.length \u003e 0) { console.log(\"Connected webcams:\"); webcams.forEach((webcam, index) =\u003e { console.log(`${index + 1}. ${webcam.label || `Camera ${index + 1}`}`); }); } else { console.log(\"No webcams found.\"); } } catch (error) { console.error(\"Error accessing media devices:\", error); }}listWebcams(); I would get:Connected webcams: test.html:11 1. Logitech StreamCam (046d:0893) test.html:11 2. OBS Virtual Camera (Windows Virtual Camera) test.html:11 3. Cam Link 4K (0fd9:0066) test.html:11 4. LSVCam test.html:11 5. OBS Virtual Camera So, what, what's LSVCam? And depending on how I'd call it I'd get the pause and getUserMedia error: NotReadableError NotReadableError: Could not start video source Some apps could see this LSVCam and others couldn't. OBS really dislikes it, browsers really dislike it and it seemed to HANG on enumeration of cameras. Why can parts of Windows see this camera and others can't? I don't know. Do you? Regardless, it turns that it appears once in my registry, here (this is a dump of the key, you just care about the Registry PATH)Windows Registry Editor Version 5.00[HKEY_CLASSES_ROOT\\CLSID\\{860BB310-5D01-11d0-BD3B-00A0C911CE86}\\Instance\\LSVCam]\"FriendlyName\"=\"LSVCam\"\"CLSID\"=\"{BA80C4AD-8AED-4A61-B434-481D46216E45}\"\"FilterData\"=hex:02,00,00,00,00,00,20,00,01,00,00,00,00,00,00,00,30,70,69,33,\\ 08,00,00,00,00,00,00,00,01,00,00,00,00,00,00,00,00,00,00,00,30,74,79,33,00,\\ 00,00,00,38,00,00,00,48,00,00,00,76,69,64,73,00,00,10,00,80,00,00,aa,00,38,\\ 9b,71,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00 If you want to get rid of it, delete HKEY_CLASSES_ROOT\\CLSID\\{860BB310-5D01-11d0-BD3B-00A0C911CE86}\\Instance\\LSVCam WARNING: DO NOT delete the \\Instance, just the LSVCam and below. I am a random person on the internet and you got here by googling, so if you mess up your machine by going into RegEdit.exe, I'm sorry to this man, but it's above me now. Where did LSVCam.dll come from, you may ask? TikTok Live Studio, baby. Live Studio Video/Virtual Cam, I am guessing.Directory of C:\\Program Files\\TikTok LIVE Studio\\0.67.2\\resources\\app\\electron\\sdk\\lib\\MediaSDK_V109/18/2024 09:20 PM 218,984 LSVCam.dll 1 File(s) 218,984 bytes This is a regression that started recently for me, so it's my opinion that they are installing a virtual camera for their game streaming feature but they are doing it poorly. It's either not completely installed, or hangs on enumeration, but the result is you'll see hangs on camera enumeration in your apps, especually browser apps that poll for cameras changes or check on a timer. Nothing bad will happen if you delete the registry key BUT it'll show back up when you run TikTok Studio again. I still stream to TikTok, I just delete this key each time until someone on the TikTok Studio development team sees this blog post. Hope this helps!Â© 2021 Scott Hanselman. All rights reserved.",
  "author": "Scott Hanselman",
  "published": "Wed, 09 Oct 2024 19:32:28 GMT",
  "source": "http://feeds.hanselman.com/ScottHanselman",
  "categories": [
    "Bugs"
  ],
  "byline": "Scott Hanselman",
  "length": 6531,
  "excerpt": "I use my webcam constantly for streaming and I'm pretty familiar with all the ...",
  "siteName": "",
  "favicon": "https://images.hanselman.com/main/apple-touch-icon-114x114.png",
  "text": "I use my webcam constantly for streaming and I'm pretty familiar with all the internals and how the camera model on Windows works. I also use OBS extensively, so I regularly use the OBS virtual camera and flow everything through Open Broadcasting Studio. For my podcast, I use Zencastr which is a web-based app that talks to the webcam via the browser APIs. For YouTubes, I'll use Riverside or StreamYard, also webapps. I've done this reliably for the last several years without any trouble. Yesterday, I started seeing the most weird thing and it was absolutely perplexing and almost destroyed the day. I started seeing regular pauses in my webcam stream but only in two instances. The webcam would pause for 10-15 seconds every 90 or so seconds when access the Webcam in a browser I would see a long pause/hang in OBS when double clicking on my Video Source (Webcam) to view its properties Micah initially said USB but my usb bus and hubs have worked reliably for years. Thought something might have changed in my El Gato capture device, but that has also been rock solid for 1/2 a decade. Then I started exploring virtual cameras and looked in the windows camera dialog under settings for a list of all virtual cameras. Interestingly, virtual cameras don't get listed under Cameras in Settings in Windows: From what I can tell, there's no user interface to list out all of your cameras - virtual or otherwise - in windows. Here's a quick PowerShell script you can run to list out anything 'connected' that also includes the string \"cam\" in your local devicesGet-CimInstance -Namespace root\\cimv2 -ClassName Win32_PnPEntity | Where-Object { $_.Name -match 'Cam' } | Select-Object Name, Manufacturer, PNPDeviceID and my outputName Manufacturer PNPDeviceID---- ------------ -----------Cam Link 4K Microsoft USB\\VID_0FD9\u0026PID_0066\u0026MI_00\\7\u00263768531A\u00260\u00260000Digital Audio Interface (2- Cam Link 4K) Microsoft SWD\\MMDEVAPI\\{0.0.1.00000000}.{AF1690B6-CA2A-4AD3-AAFD-8DDEBB83DD4A}Logitech StreamCam WinUSB Logitech USB\\VID_046D\u0026PID_0893\u0026MI_04\\7\u0026E36D0CF\u00260\u00260004Logitech StreamCam (Generic USB Audio) USB\\VID_046D\u0026PID_0893\u0026MI_02\\7\u0026E36D0CF\u00260\u00260002Logitech StreamCam Logitech USB\\VID_046D\u0026PID_0893\u0026MI_00\\7\u0026E36D0CF\u00260\u00260000Remote Desktop Camera Bus Microsoft UMB\\UMB\\1\u0026841921D\u00260\u0026RDCAMERA_BUSCam Link 4K (Generic USB Audio) USB\\VID_0FD9\u0026PID_0066\u0026MI_03\\7\u00263768531A\u00260\u00260003Windows Virtual Camera Device Microsoft SWD\\VCAMDEVAPI\\B486E21F1D4BC97087EA831093E840AD2177E046699EFBF62B27304F5CCAEF57 However, when I list out my cameras using JavaScript enumerateDevices() like this// Put variables in global scope to make them available to the browser console.async function listWebcams() { try { const devices = await navigator.mediaDevices.enumerateDevices(); const webcams = devices.filter(device =\u003e device.kind === 'videoinput'); if (webcams.length \u003e 0) { console.log(\"Connected webcams:\"); webcams.forEach((webcam, index) =\u003e { console.log(`${index + 1}. ${webcam.label || `Camera ${index + 1}`}`); }); } else { console.log(\"No webcams found.\"); } } catch (error) { console.error(\"Error accessing media devices:\", error); }}listWebcams(); I would get:Connected webcams: test.html:11 1. Logitech StreamCam (046d:0893) test.html:11 2. OBS Virtual Camera (Windows Virtual Camera) test.html:11 3. Cam Link 4K (0fd9:0066) test.html:11 4. LSVCam test.html:11 5. OBS Virtual Camera So, what, what's LSVCam? And depending on how I'd call it I'd get the pause and getUserMedia error: NotReadableError NotReadableError: Could not start video source Some apps could see this LSVCam and others couldn't. OBS really dislikes it, browsers really dislike it and it seemed to HANG on enumeration of cameras. Why can parts of Windows see this camera and others can't? I don't know. Do you? Regardless, it turns that it appears once in my registry, here (this is a dump of the key, you just care about the Registry PATH)Windows Registry Editor Version 5.00[HKEY_CLASSES_ROOT\\CLSID\\{860BB310-5D01-11d0-BD3B-00A0C911CE86}\\Instance\\LSVCam]\"FriendlyName\"=\"LSVCam\"\"CLSID\"=\"{BA80C4AD-8AED-4A61-B434-481D46216E45}\"\"FilterData\"=hex:02,00,00,00,00,00,20,00,01,00,00,00,00,00,00,00,30,70,69,33,\\ 08,00,00,00,00,00,00,00,01,00,00,00,00,00,00,00,00,00,00,00,30,74,79,33,00,\\ 00,00,00,38,00,00,00,48,00,00,00,76,69,64,73,00,00,10,00,80,00,00,aa,00,38,\\ 9b,71,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00 If you want to get rid of it, delete HKEY_CLASSES_ROOT\\CLSID\\{860BB310-5D01-11d0-BD3B-00A0C911CE86}\\Instance\\LSVCam WARNING: DO NOT delete the \\Instance, just the LSVCam and below. I am a random person on the internet and you got here by googling, so if you mess up your machine by going into RegEdit.exe, I'm sorry to this man, but it's above me now. Where did LSVCam.dll come from, you may ask? TikTok Live Studio, baby. Live Studio Video/Virtual Cam, I am guessing.Directory of C:\\Program Files\\TikTok LIVE Studio\\0.67.2\\resources\\app\\electron\\sdk\\lib\\MediaSDK_V109/18/2024 09:20 PM 218,984 LSVCam.dll 1 File(s) 218,984 bytes This is a regression that started recently for me, so it's my opinion that they are installing a virtual camera for their game streaming feature but they are doing it poorly. It's either not completely installed, or hangs on enumeration, but the result is you'll see hangs on camera enumeration in your apps, especually browser apps that poll for cameras changes or check on a timer. Nothing bad will happen if you delete the registry key BUT it'll show back up when you run TikTok Studio again. I still stream to TikTok, I just delete this key each time until someone on the TikTok Studio development team sees this blog post. Hope this helps! About Scott Scott Hanselman is a former professor, former Chief Architect in finance, now speaker, consultant, father, diabetic, and Microsoft employee. He is a failed stand-up comic, a cornrower, and a book author. About Â  Newsletter Hosting By",
  "image": "https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/730f6664b802_E062/image_thumb.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003csection\u003e\n            \n            \u003cp\u003eI use my webcam constantly for streaming and I\u0026#39;m pretty familiar with all the internals and how the camera model on Windows works. I also use OBS extensively, so I regularly use the OBS virtual camera and flow everything through Open Broadcasting Studio. \u003c/p\u003e \u003cp\u003eFor my podcast, I use Zencastr which is a web-based app that talks to the webcam via the browser APIs. For YouTubes, I\u0026#39;ll use Riverside or StreamYard, also webapps.\u003c/p\u003e \u003cp\u003eI\u0026#39;ve done this reliably for the last several years without any trouble. Yesterday, I started seeing the most weird thing and it was absolutely perplexing and almost destroyed the day. I started seeing regular pauses in my webcam stream but only in two instances. \u003c/p\u003e \u003cul\u003e \u003cli\u003eThe webcam would pause for 10-15 seconds every 90 or so seconds when access the Webcam in a browser\u003c/li\u003e \u003cli\u003eI would see a long pause/hang in OBS when double clicking on my Video Source (Webcam) to view its properties\u003c/li\u003e\u003c/ul\u003e \u003cp\u003eMicah initially said USB but my usb bus and hubs have worked reliably for years. Thought something might have changed in my El Gato capture device, but that has also been rock solid for 1/2 a decade. Then I started exploring virtual cameras and looked in the windows camera dialog under settings for a list of all virtual cameras. \u003c/p\u003e \u003cp\u003eInterestingly, \u003cem\u003evirtual \u003c/em\u003ecameras don\u0026#39;t get listed under Cameras in Settings in Windows:\u003c/p\u003e \u003cp\u003e\u003ca href=\"https://hanselmanblogcontent.azureedge.net/Windows-Live-Writer/730f6664b802_E062/image_2.png\"\u003e\u003cimg title=\"List of Cameras in Windows\" alt=\"List of Cameras in Windows\" src=\"https://hanselmanblogcontent.azureedge.net/Windows-Live-Writer/730f6664b802_E062/image_thumb.png\" width=\"640\" height=\"364\"/\u003e\u003c/a\u003e\u003c/p\u003e \u003cp\u003eFrom what I can tell, there\u0026#39;s no user interface to list out all of your cameras - virtual or otherwise - in windows. \u003c/p\u003e \u003cp\u003eHere\u0026#39;s a quick PowerShell script you can run to list out anything \u0026#39;connected\u0026#39; that also includes the string \u0026#34;cam\u0026#34; in your local devices\u003c/p\u003e\u003cpre\u003eGet-CimInstance -Namespace root\\cimv2 -ClassName Win32_PnPEntity |\u003cbr/\u003e     Where-Object { $_.Name -match \u0026#39;Cam\u0026#39; } |\u003cbr/\u003e     Select-Object Name, Manufacturer, PNPDeviceID\n\u003c/pre\u003e\n\u003cp\u003eand my output\u003c/p\u003e\u003cpre\u003eName                                     Manufacturer        PNPDeviceID\u003cbr/\u003e----                                     ------------        -----------\u003cbr/\u003eCam Link 4K                              Microsoft           USB\\VID_0FD9\u0026amp;PID_0066\u0026amp;MI_00\\7\u0026amp;3768531A\u0026amp;0\u0026amp;0000\u003cbr/\u003eDigital Audio Interface (2- Cam Link 4K) Microsoft           SWD\\MMDEVAPI\\{0.0.1.00000000}.{AF1690B6-CA2A-4AD3-AAFD-8DDEBB83DD4A}\u003cbr/\u003eLogitech StreamCam WinUSB                Logitech            USB\\VID_046D\u0026amp;PID_0893\u0026amp;MI_04\\7\u0026amp;E36D0CF\u0026amp;0\u0026amp;0004\u003cbr/\u003eLogitech StreamCam                       (Generic USB Audio) USB\\VID_046D\u0026amp;PID_0893\u0026amp;MI_02\\7\u0026amp;E36D0CF\u0026amp;0\u0026amp;0002\u003cbr/\u003eLogitech StreamCam                       Logitech            USB\\VID_046D\u0026amp;PID_0893\u0026amp;MI_00\\7\u0026amp;E36D0CF\u0026amp;0\u0026amp;0000\u003cbr/\u003eRemote Desktop Camera Bus                Microsoft           UMB\\UMB\\1\u0026amp;841921D\u0026amp;0\u0026amp;RDCAMERA_BUS\u003cbr/\u003eCam Link 4K                              (Generic USB Audio) USB\\VID_0FD9\u0026amp;PID_0066\u0026amp;MI_03\\7\u0026amp;3768531A\u0026amp;0\u0026amp;0003\u003cbr/\u003eWindows Virtual Camera Device            Microsoft           SWD\\VCAMDEVAPI\\B486E21F1D4BC97087EA831093E840AD2177E046699EFBF62B27304F5CCAEF57\u003c/pre\u003e\n\u003cp\u003eHowever, when I list out my cameras using JavaScript enumerateDevices() like this\u003cbr/\u003e\u003c/p\u003e\u003cpre\u003e// Put variables in global scope to make them available to the browser console.\u003cbr/\u003easync function listWebcams() {\u003cbr/\u003e  try {\u003cbr/\u003e    const devices = await navigator.mediaDevices.enumerateDevices();\u003cbr/\u003e    const webcams = devices.filter(device =\u0026gt; device.kind === \u0026#39;videoinput\u0026#39;);\u003cp\u003e    if (webcams.length \u0026gt; 0) {\u003cbr/\u003e      console.log(\u0026#34;Connected webcams:\u0026#34;);\u003cbr/\u003e      webcams.forEach((webcam, index) =\u0026gt; {\u003cbr/\u003e        console.log(`${index + 1}. ${webcam.label || `Camera ${index + 1}`}`);\u003cbr/\u003e      });\u003cbr/\u003e    } else {\u003cbr/\u003e      console.log(\u0026#34;No webcams found.\u0026#34;);\u003cbr/\u003e    }\u003cbr/\u003e  } catch (error) {\u003cbr/\u003e    console.error(\u0026#34;Error accessing media devices:\u0026#34;, error);\u003cbr/\u003e  }\u003cbr/\u003e}\u003cbr/\u003elistWebcams();\u003c/p\u003e\u003c/pre\u003e\n\u003cp\u003eI would get:\u003c/p\u003e\u003cpre\u003eConnected webcams:\ntest.html:11 1. Logitech StreamCam (046d:0893)\ntest.html:11 2. OBS Virtual Camera (Windows Virtual Camera)\ntest.html:11 3. Cam Link 4K (0fd9:0066)\ntest.html:11 4. LSVCam\ntest.html:11 5. OBS Virtual Camera\u003c/pre\u003e\n\u003cp\u003eSo, what, what\u0026#39;s LSVCam? And depending on how I\u0026#39;d call it I\u0026#39;d get the pause and \u003c/p\u003e\u003cpre\u003egetUserMedia error: NotReadableError NotReadableError: Could not start video source\u003c/pre\u003e\n\u003cp\u003eSome apps could see this \u003cstrong\u003eLSVCam\u003c/strong\u003e and others couldn\u0026#39;t. OBS really dislikes it, browsers really dislike it and it seemed to HANG on enumeration of cameras. Why can parts of Windows see this camera and others can\u0026#39;t?\u003c/p\u003e\n\u003cp\u003eI don\u0026#39;t know. Do you?\u003c/p\u003e\n\u003cp\u003eRegardless, it turns that it appears once in my registry, here (this is a dump of the key, you just care about the Registry PATH)\u003c/p\u003e\u003cpre\u003eWindows Registry Editor Version 5.00\u003cp\u003e[HKEY_CLASSES_ROOT\\CLSID\\{860BB310-5D01-11d0-BD3B-00A0C911CE86}\\Instance\\LSVCam]\u003cbr/\u003e\u0026#34;FriendlyName\u0026#34;=\u0026#34;LSVCam\u0026#34;\u003cbr/\u003e\u0026#34;CLSID\u0026#34;=\u0026#34;{BA80C4AD-8AED-4A61-B434-481D46216E45}\u0026#34;\u003cbr/\u003e\u0026#34;FilterData\u0026#34;=hex:02,00,00,00,00,00,20,00,01,00,00,00,00,00,00,00,30,70,69,33,\\\u003cbr/\u003e  08,00,00,00,00,00,00,00,01,00,00,00,00,00,00,00,00,00,00,00,30,74,79,33,00,\\\u003cbr/\u003e  00,00,00,38,00,00,00,48,00,00,00,76,69,64,73,00,00,10,00,80,00,00,aa,00,38,\\\u003cbr/\u003e  9b,71,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00\u003c/p\u003e\u003c/pre\u003e\n\u003cp\u003eIf you want to get rid of it, delete HKEY_CLASSES_ROOT\\CLSID\\{860BB310-5D01-11d0-BD3B-00A0C911CE86}\\Instance\\LSVCam\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eWARNING: \u003c/strong\u003eDO NOT delete the \\Instance, just the LSVCam and below. I am a random person on the internet and you got here by googling, so if you mess up your machine by going into RegEdit.exe, I\u0026#39;m sorry to this man, but it\u0026#39;s above me now.\u003c/p\u003e\n\u003cp\u003eWhere did LSVCam.dll come from, you may ask? TikTok Live Studio, baby. Live Studio Video/Virtual Cam, I am guessing.\u003c/p\u003e\u003cpre\u003eDirectory of C:\\Program Files\\TikTok LIVE Studio\\0.67.2\\resources\\app\\electron\\sdk\\lib\\MediaSDK_V1\u003cp\u003e09/18/2024  09:20 PM           218,984 LSVCam.dll\u003cbr/\u003e               1 File(s)        218,984 bytes\u003c/p\u003e\u003c/pre\u003e\n\u003cp\u003eThis is a regression that started recently for me, so it\u0026#39;s my opinion that they are installing a virtual camera for their game streaming feature but they are doing it poorly. It\u0026#39;s either not completely installed, or hangs on enumeration, but the result is you\u0026#39;ll see hangs on camera enumeration in your apps, especually browser apps that poll for cameras changes or check on a timer.\u003c/p\u003e\n\u003cp\u003eNothing bad will happen if you delete the registry key BUT it\u0026#39;ll show back up when you run TikTok Studio again. I still stream to TikTok, I just delete this key each time until someone on the TikTok Studio development team sees this blog post.\u003c/p\u003e\n\u003cp\u003eHope this helps!\u003c/p\u003e\n\n\n\n            \u003cdiv\u003e\n                \u003cdiv\u003e\n                    \u003ch4\u003eAbout Scott\u003c/h4\u003e\n                    \u003cdiv\u003e\n                        \u003cp\u003eScott Hanselman is a former professor, former Chief Architect in finance, now speaker, consultant, father, diabetic, and Microsoft employee. He is a failed stand-up comic, a cornrower, and a book author.\u003c/p\u003e\n                        \u003cp\u003e\u003ca href=\"https://facebook.com/shanselman\"\u003e\u003cimg src=\"http://images.hanselman.com/main/icon-fb.png\" alt=\"facebook\"/\u003e\u003c/a\u003e\n                        \u003ca href=\"https://twitter.com/shanselman\"\u003e\u003cimg src=\"http://images.hanselman.com/main/icon-twitter.png\" alt=\"twitter\"/\u003e\u003c/a\u003e\n                        \u003ca href=\"http://feeds.hanselman.com/ScottHanselman\"\u003e\u003cimg src=\"http://images.hanselman.com/main/icon-rss.png\" alt=\"subscribe\"/\u003e\u003c/a\u003e\u003cbr/\u003e\n                        \u003ca href=\"http://hanselman.com/about\"\u003eAbout\u003c/a\u003e Â  \u003ca href=\"http://www.hanselman.com/newsletter\"\u003eNewsletter\u003c/a\u003e\n                    \u003c/p\u003e\u003c/div\u003e\n                \u003c/div\u003e\n\n                \u003cdiv\u003e\n                    \u003cp\u003e\u003cstrong\u003eHosting By\u003c/strong\u003e\u003cbr/\u003e\n                        \u003ca rel=\"nofollow\" href=\"https://azure.microsoft.com/free\"\u003e\u003cimg alt=\"Hosted in an Azure App Service\" width=\"125\" height=\"125\" src=\"http://images.hanselman.com/main/azure-250x250.png\"/\u003e\u003c/a\u003e\n                    \u003c/p\u003e\n\n                \u003c/div\u003e\n            \u003c/div\u003e\n\n            \n\n\n            \n\n            \n        \u003c/section\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": null,
  "modifiedTime": null
}
