{
  "id": "74b10b92-4fc7-4649-bcb3-2f61d9a27436",
  "title": "GitHub Copilot Can Now Run in Windows Terminal",
  "link": "https://www.infoq.com/news/2025/03/github-copilot-windows-terminal/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "GitHub Copilot's integration into Windows Terminal Canary introduces an AI-driven feature called Terminal Chat, enabling users to receive command suggestions and explanations directly within the terminal environment. This integration is accessible to all GitHub Copilot subscribers, including Individual, Business, and Enterprise users. By Craig Risi",
  "author": "Craig Risi",
  "published": "Thu, 27 Mar 2025 14:00:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Windows",
    "AIOps",
    "github",
    "DevOps",
    "news"
  ],
  "byline": "Craig Risi",
  "length": 3156,
  "excerpt": "GitHub Copilot's integration into Windows Terminal Canary introduces an AI-driven feature called Terminal Chat, enabling users to receive command suggestions and explanations directly within the termi",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s2_20250320073856_u1/apple-touch-icon.png",
  "text": "GitHub Copilot's integration into Windows Terminal Canary introduces an AI-driven feature called Terminal Chat, enabling users to receive command suggestions and explanations directly within the terminal environment. This integration is accessible to all GitHub Copilot subscribers, including Individual, Business, and Enterprise users. Terminal Chat allows users to interact with an AI service to obtain intelligent suggestions relevant to their terminal context. This feature does not include its own large-language model but can be managed through Group Policy settings. To utilize this feature, users need a subscription to GitHub Copilot and the latest build of Windows Terminal Canary. After authenticating their GitHub account within the Terminal Chat settings, users can engage with GitHub Copilot directly in the terminal. ​ The integration of GitHub Copilot into Windows Terminal is important because it brings AI-powered assistance directly into a traditionally manual environment, enabling developers to receive real-time command suggestions and explanations without leaving the terminal. This reduces context-switching, accelerates learning, and helps prevent errors, particularly for users working with complex or unfamiliar command-line tasks. By leveraging the user’s current context, the feature provides tailored guidance that supports more efficient workflows in areas like development, system administration, and DevOps.  ​ Moreover, the feature demonstrates how AI services can be contextually aware within specialized environments. Unlike general-purpose AI tools, Terminal Chat leverages the user’s current working context to provide tailored suggestions, aligning with the specific tasks or challenges at hand. It also highlights the trend of integrating AI capabilities not as standalone tools, but as embedded components within existing developer workflows. Christopher Nguyen, Product Manager II for Windows Terminal, noted in the article that, \"GitHub Copilot users can now use the power of GitHub Copilot to get command suggestions and explanations without leaving the terminal with Terminal Chat in Windows Terminal Canary.\" ​This underscores the focus on reducing friction in development environments, making support tools more accessible exactly where they are needed. In a broader context, this feature illustrates how developer tools are evolving to incorporate intelligent systems that adapt to user needs. It aligns with ongoing efforts to make software development more efficient and less error-prone, especially as the complexity of systems and the speed of delivery continue to increase. By incorporating AI assistance directly into the terminal, developers can streamline their workflows, reduce context-switching, and focus more on problem-solving and collaboration. This integration exemplifies the evolving landscape of development environments, where AI tools are becoming integral components in enhancing coding efficiency and developer experience.   About the Author Craig Risi",
  "image": "https://res.infoq.com/news/2025/03/github-copilot-windows-terminal/en/headerimage/github-copilot-in-windows-terminal-blog-header+%281%29-1742559365759.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eGitHub Copilot\u0026#39;s integration into Windows Terminal Canary introduces an AI-driven feature called Terminal Chat, enabling users to receive command suggestions and explanations directly within the terminal environment. This integration is accessible to all GitHub Copilot subscribers, including Individual, Business, and Enterprise users.\u003c/p\u003e\n\n\u003cp\u003e\u003cbr/\u003e\nTerminal Chat allows users to interact with an AI service to obtain intelligent suggestions relevant to their terminal context. This feature does not include its own large-language model but can be managed through Group Policy settings. To utilize this feature, users need a subscription to GitHub Copilot and the latest build of Windows Terminal Canary. After authenticating their GitHub account within the Terminal Chat settings, users can engage with GitHub Copilot directly in the terminal. ​\u003c/p\u003e\n\n\u003cp\u003e\u003cbr/\u003e\nThe integration of GitHub Copilot into Windows Terminal is important because it brings AI-powered assistance directly into a traditionally manual environment, enabling developers to receive real-time command suggestions and explanations without leaving the terminal. This reduces context-switching, accelerates learning, and helps prevent errors, particularly for users working with complex or unfamiliar command-line tasks. By leveraging the user’s current context, the feature provides tailored guidance that supports more efficient workflows in areas like development, system administration, and DevOps.  ​\u003c/p\u003e\n\n\u003cp\u003eMoreover, the feature demonstrates how AI services can be contextually aware within specialized environments. Unlike general-purpose AI tools, Terminal Chat leverages the user’s current working context to provide tailored suggestions, aligning with the specific tasks or challenges at hand. It also highlights the trend of integrating AI capabilities not as standalone tools, but as embedded components within existing developer workflows.\u003c/p\u003e\n\n\u003cp\u003e\u003cbr/\u003e\nChristopher Nguyen, Product Manager II for Windows Terminal, \u003ca href=\"https://devblogs.microsoft.com/commandline/github-copilot-in-windows-terminal/\"\u003enoted in the article that\u003c/a\u003e, \u0026#34;GitHub Copilot users can now use the power of GitHub Copilot to get command suggestions and explanations without leaving the terminal with Terminal Chat in Windows Terminal Canary.\u0026#34; ​This underscores the focus on reducing friction in development environments, making support tools more accessible exactly where they are needed.\u003c/p\u003e\n\n\u003cp data-end=\"2104\" data-is-last-node=\"\" data-is-only-node=\"\" data-start=\"1779\"\u003eIn a broader context, this feature illustrates how developer tools are evolving to incorporate intelligent systems that adapt to user needs. It aligns with ongoing efforts to make software development more efficient and less error-prone, especially as the complexity of systems and the speed of delivery continue to increase.\u003c/p\u003e\n\n\u003cp data-end=\"2104\" data-is-last-node=\"\" data-is-only-node=\"\" data-start=\"1779\"\u003e\u003cbr/\u003e\nBy incorporating AI assistance directly into the terminal, developers can streamline their workflows, reduce context-switching, and focus more on problem-solving and collaboration. This integration exemplifies the evolving landscape of development environments, where AI tools are becoming integral components in enhancing coding efficiency and developer experience.\u003cbr/\u003e\n \u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Craig-Risi\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eCraig Risi\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": "2025-03-27T00:00:00Z",
  "modifiedTime": null
}
