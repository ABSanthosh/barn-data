{
  "id": "b0c19879-4ccc-4e67-bd26-3e63a088c080",
  "title": "7 Reasons You Should Use dbt Core in PyCharm",
  "link": "https://blog.jetbrains.com/pycharm/2024/12/dbt/",
  "description": "dbt Core is a modern data transformation framework. It doesn’t extract or load data and is only responsible for the T in the ELT (extract-load-transform) process. dbt connects to your data warehouse and helps you prepare your data so it can later be used to answer business questions. In this blog post, we’ll talk about […]",
  "author": "Stanislav Garkusha",
  "published": "Mon, 16 Dec 2024 12:58:55 +0000",
  "source": "https://blog.jetbrains.com/feed",
  "categories": [
    "data-science",
    "how-tos",
    "dbt"
  ],
  "byline": "Stanislav Garkusha",
  "length": 5759,
  "excerpt": "Learn how PyCharm streamlines data modeling with dbt, offering features like Git integration, smart autocompletion, AI-powered assistance, and more.",
  "siteName": "The JetBrains Blog",
  "favicon": "https://blog.jetbrains.com/wp-content/uploads/2024/01/cropped-mstile-310x310-1-180x180.png",
  "text": "The Python IDE for data science and web development Data Science How-To's7 Reasons You Should Use dbt Core in PyCharm dbt Core is a modern data transformation framework. It doesn’t extract or load data and is only responsible for the T in the ELT (extract-load-transform) process. dbt connects to your data warehouse and helps you prepare your data so it can later be used to answer business questions. In this blog post, we’ll talk about the top benefits of dbt and the advantages of using it in PyCharm Professional. To make the most of these features, you should be familiar with the framework. If you know SQL well, you’ll likely find it easy to use, and if you are a total novice in the field, you can use the dbt portal to get acquainted with it. Why you should use dbt Modularity and code reusability – Transformations can be saved into modular, reusable models. For instance, in this example the model int_count_customer.sql has a reference to stg_day_customer.sql and reuses its code. Versioning – dbt projects can be stored in version control systems like Git or GitHub. This allows you to track changes, collaborate with other team members, and maintain a record of all transformations. Testing – dbt allows you to write tests for your data models easily and check whether the data has any duplicates or null values. Additionally, you can even create specific rules to test against, and you can perform tests on both the model and the project levels. Documentation – dbt auto-generates documentation for data models, ensuring that team members and stakeholders all understand the data lineage and model definitions in the same way. To summarize, dbt brings best practices in engineering to the field of data analysis, allowing you to produce higher-quality results while providing you with a straightforward and intuitive workflow. These benefits are just the tip of the iceberg when it comes to what the tool can do. How PyCharm streamlines your dbt workflow Having established the benefits of dbt, we can now turn to the 7 key reasons to use it in PyCharm: 1. User-friendly onboarding – PyCharm streamlines the initial setup. As demonstrated in this video, setting up a project and configuring the necessary settings is straightforward.  2. Unified workspace for databases and dbt – PyCharm’s integrated database plugin powered by JetBrains DataGrip makes handling SQL databases significantly easier. Since it’s compatible with all databases that dbt works with, you don’t have to worry about juggling multiple tools. You can focus on data modeling and instantly view outcomes all in one place. To cover even a small number of the plugin’s features would take hours, but luckily we have a nice set of webinars dedicated to PyCharm’s functionality for databases:  Visual SQL Development with PyCharm. 3. Git and dbt integration – In one interface, you can easily clone the repo, track any changes, manage branches, resolve conflicts, and collaborate with teammates. 4. Autocompletion for your .yml  and jinja-template SQL files – People love using PyCharm because of its smart autocompletion, which it, of course, offers for dbt as well. 5. Local history –This feature lets you undo recent changes if they cause problems. You can also compare different versions to see what was changed and check whether updates were made correctly. 6. AI Assistant – AI Assistant is really helpful, especially if you’re just starting with dbt Core. It is context-aware, and in addition to having it answer your questions in the AI chat, you can have it generate code and fix problems for you, streamlining your work with data models. It also saves you from worrying about what to write in commit messages by composing them for you. 7. Project navigation – PyCharm excels in project navigation, offering features like fast search functionality and the Go to Declaration feature, both of which allow you to navigate through your dbt models effortlessly. That’s just a glimpse of the benefits PyCharm already offers for dbt, and our support is still in its early stages. We invite you to test it out and share your insights. Whether you have suggestions for features or want to let us know about areas for improvement, we’re eager to hear from you.  Get started with PyCharm by using the promo code dbt-PyCharm to get a 3-month free trial. Want to learn how to use dbt in PyCharm? Head to the documentation page to learn more about the IDE’s dbt support. Eager to learn more about dbt in general? Take a look at this post on the experience of using dbt and this analysis of deeper dbt concepts by Pavel Finkelshteyn. Subscribe to PyCharm Blog updates Discover more",
  "image": "https://blog.jetbrains.com/wp-content/uploads/2024/12/pc-social_share_blog_1280x720_en-2.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"main\"\u003e\n    \u003cdiv\u003e\n                        \u003ca href=\"https://blog.jetbrains.com/pycharm/\"\u003e\n                            \u003cimg src=\"https://blog.jetbrains.com/wp-content/uploads/2019/01/PyCharm-1.svg\" alt=\"Pycharm logo\"/\u003e\n                                                                                                \n                                                                                    \u003c/a\u003e\n                                                    \u003cp\u003eThe Python IDE for data science and web development\u003c/p\u003e\n                                            \u003c/div\u003e\n                            \u003csection data-clarity-region=\"article\"\u003e\n                \u003cdiv\u003e\n                    \t\t\t\t\u003cp\u003e\u003ca href=\"https://blog.jetbrains.com/pycharm/category/data-science/\"\u003eData Science\u003c/a\u003e\n\t\t\t\u003ca href=\"https://blog.jetbrains.com/pycharm/category/how-tos/\"\u003eHow-To\u0026#39;s\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"major-updates\"\u003e7 Reasons You Should Use dbt Core in PyCharm\u003c/h2\u003e                    \n                    \n\u003cfigure\u003e\u003cimg decoding=\"async\" fetchpriority=\"high\" width=\"2560\" height=\"1440\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/12/pc-featured_blog_1280x720_en-3.png\" alt=\"7 Reasons You Should Use dbt Core in PyCharm\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003edbt Core is a modern data transformation framework. It doesn’t extract or load data and is only responsible for the T in the ELT (extract-load-transform) process. dbt connects to your data warehouse and helps you prepare your data so it can later be used to answer business questions.\u003c/p\u003e\n\n\n\n\u003cp\u003eIn this blog post, we’ll talk about the top benefits of dbt and the advantages of using it in \u003ca href=\"https://www.jetbrains.com/pycharm/data-science/\" data-type=\"link\" data-id=\"https://www.jetbrains.com/pycharm/data-science/\" target=\"_blank\" rel=\"noopener\"\u003ePyCharm Professional\u003c/a\u003e. To make the most of these features, you should be familiar with the framework. If you know SQL well, you’ll likely find it easy to use, and if you are a total novice in the field, you can use the \u003ca href=\"https://learn.getdbt.com/catalog\" target=\"_blank\" rel=\"noopener\"\u003edbt portal\u003c/a\u003e to get acquainted with it.\u003c/p\u003e\n\n\n\n\u003ch2\u003eWhy you should use dbt\u003c/h2\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eModularity and code reusability \u003c/strong\u003e– Transformations can be saved into modular, reusable models. For instance, in this example the model \u003cem\u003eint_count_customer.sql\u003c/em\u003e has a reference to \u003cem\u003estg_day_customer.sql\u003c/em\u003e and reuses its code.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cfigure\u003e\u003cvideo controls=\"\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/12/Models-reusability.mp4\"\u003e\u003c/video\u003e\u003c/figure\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eVersioning \u003c/strong\u003e– dbt projects can be stored in version control systems like Git or GitHub. This allows you to track changes, collaborate with other team members, and maintain a record of all transformations.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cfigure\u003e\u003cvideo controls=\"\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/12/gitdbtcore-4K.mp4\"\u003e\u003c/video\u003e\u003c/figure\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eTesting \u003c/strong\u003e– dbt allows you to write tests for your data models easily and check whether the data has any duplicates or null values. Additionally, you can even create specific rules to test against, and you can perform tests on both the model and the project levels.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cfigure\u003e\u003cvideo controls=\"\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/12/test-dbt.mp4\"\u003e\u003c/video\u003e\u003c/figure\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eDocumentation\u003c/strong\u003e – dbt auto-generates documentation for data models, ensuring that team members and stakeholders all understand the data lineage and model definitions in the same way.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cfigure\u003e\u003cvideo controls=\"\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/12/docs-4K.mp4\"\u003e\u003c/video\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eTo summarize, dbt brings best practices in engineering to the field of data analysis, allowing you to produce higher-quality results while providing you with a straightforward and intuitive workflow.\u003c/p\u003e\n\n\n\n\u003cp\u003eThese benefits are just the tip of the iceberg when it comes to what the tool can do.\u003c/p\u003e\n\n\n\n\u003ch2\u003eHow PyCharm streamlines your dbt workflow\u003c/h2\u003e\n\n\n\n\u003cp\u003eHaving established the benefits of dbt, we can now turn to the 7 key reasons to use it in PyCharm:\u003c/p\u003e\n\n\n\n\u003cp\u003e1. \u003cstrong\u003eUser-friendly onboarding \u003c/strong\u003e– PyCharm streamlines the initial setup. As demonstrated in this video, setting up a project and configuring the necessary settings is straightforward. \u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cvideo controls=\"\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/12/dbt-start-4K.mp4\"\u003e\u003c/video\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003e2. \u003cstrong\u003eUnified workspace for databases and dbt \u003c/strong\u003e– PyCharm’s integrated database plugin powered by \u003ca href=\"https://www.jetbrains.com/datagrip/\" target=\"_blank\" rel=\"noopener\"\u003eJetBrains DataGrip\u003c/a\u003e makes handling SQL databases significantly easier. Since it’s compatible with all databases that dbt works with, you don’t have to worry about juggling multiple tools. You can focus on data modeling and instantly view outcomes all in one place. To cover even a small number of the plugin’s features would take hours, but luckily we have a nice set of webinars dedicated to PyCharm’s functionality for databases:  \u003ca href=\"https://www.youtube.com/watch?v=_FlpiNno088\u0026amp;t=1301s\" target=\"_blank\" rel=\"noopener\"\u003eVisual SQL Development with PyCharm\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cvideo controls=\"\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/12/databases_dbt-4K.mp4\"\u003e\u003c/video\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003e3. \u003cstrong\u003eGit and dbt integration \u003c/strong\u003e– In one interface, you can easily clone the repo, track any changes, manage branches, resolve conflicts, and collaborate with teammates.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cvideo controls=\"\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/12/Git.mp4\"\u003e\u003c/video\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003e4. \u003cstrong\u003eAutocompletion for your .yml  and jinja-template SQL files\u003c/strong\u003e – People love using PyCharm because of its smart autocompletion, which it, of course, offers for dbt as well.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cvideo controls=\"\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/12/dbt_completion-4K.mp4\"\u003e\u003c/video\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003e5. \u003cstrong\u003eLocal history \u003c/strong\u003e–This feature lets you undo recent changes if they cause problems. You can also compare different versions to see what was changed and check whether updates were made correctly.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cvideo controls=\"\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/12/LocalHist-4K.mp4\"\u003e\u003c/video\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003e6. \u003cstrong\u003eAI Assistant \u003c/strong\u003e– AI Assistant is really helpful, especially if you’re just starting with dbt Core. It is context-aware, and in addition to having it answer your questions in the AI chat, you can have it generate code and fix problems for you, streamlining your work with data models. It also saves you from worrying about what to write in commit messages by composing them for you.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cvideo controls=\"\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/12/ai_dbt-4K.mp4\"\u003e\u003c/video\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003e7. \u003cstrong\u003eProject navigation \u003c/strong\u003e– PyCharm excels in project navigation, offering features like fast search functionality and the \u003cem\u003eGo to Declaration \u003c/em\u003efeature, both of which allow you to navigate through your dbt models effortlessly.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cvideo controls=\"\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/12/Navigation-4K.mp4\"\u003e\u003c/video\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eThat’s just a glimpse of the benefits PyCharm already offers for dbt, and our support is still in its early stages. We invite you to test it out and share your insights. Whether you have suggestions for features or want to let us know about areas for improvement, we’re eager to hear from you. \u003c/p\u003e\n\n\n\n\u003cp\u003eGet started with PyCharm by using the promo code \u003cstrong\u003edbt-PyCharm\u003c/strong\u003e to get a 3-month free trial.\u003c/p\u003e\n\n\n    \n\n\n\n\n\n\n\n\u003cp\u003eWant to learn how to use dbt in PyCharm? Head to the \u003ca href=\"https://www.jetbrains.com/help/pycharm/create-and-configure-dbt-project.html#profiles\" target=\"_blank\" rel=\"noopener\"\u003edocumentation page\u003c/a\u003e to learn more about the IDE’s dbt support.\u003c/p\u003e\n\n\n\n\u003cp\u003eEager to learn more about dbt in general? Take a look \u003ca href=\"https://blog.jetbrains.com/big-data-tools/2022/01/25/how-i-started-out-with-dbt/\"\u003eat this post on the experience of using dbt \u003c/a\u003eand \u003ca href=\"https://blog.jetbrains.com/big-data-tools/2022/02/22/dbt-deeper-concepts-materialization/\"\u003ethis analysis of deeper dbt concepts\u003c/a\u003e by Pavel Finkelshteyn.\u003c/p\u003e\n                    \n                                                                \n                                                                                                                                \u003cdiv\u003e\n                                \u003cdiv\u003e\n                                                                            \u003ch4\u003eSubscribe to PyCharm Blog updates\u003c/h4\u003e\n                                                                                                            \n                                \u003c/div\u003e\n                                \n                                \u003cp\u003e\u003cimg src=\"https://blog.jetbrains.com/wp-content/themes/jetbrains/assets/img/img-form.svg\" alt=\"image description\"/\u003e\n                                                                    \u003c/p\u003e\n                            \u003c/div\u003e\n                                                            \u003c/div\u003e\n                \u003ca href=\"#\"\u003e\u003c/a\u003e\n                \n                \n            \u003c/section\u003e\n                    \u003cdiv\u003e\n                \u003cp\u003e\n                    \u003ch2\u003eDiscover more\u003c/h2\u003e\n                \u003c/p\u003e\n                \n            \u003c/div\u003e\n                \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": null,
  "modifiedTime": null
}
