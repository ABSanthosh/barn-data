{
  "id": "262af1f7-6f4a-4635-b4a3-10690628b170",
  "title": "The Reworked Terminal Becomes the Default in 2025.2",
  "link": "https://blog.jetbrains.com/platform/2025/07/the-reworked-terminal-becomes-the-default-in-2025-2/",
  "description": "Starting from 2025.2, the default terminal implementation is now the reworked terminal. To create this new implementation, the classic terminal was rewritten almost from scratch to provide the technical foundation for new terminal features like visual separation of executed commands, AI integration, and the ability to work seamlessly in remote development scenarios. Functionally, it is […]",
  "author": "Ekaterina Valeeva",
  "published": "Fri, 18 Jul 2025 12:23:37 +0000",
  "source": "https://blog.jetbrains.com/feed",
  "categories": [
    "news",
    "terminal"
  ],
  "byline": "Ekaterina Valeeva",
  "length": 3453,
  "excerpt": "Starting from 2025.2, the default terminal implementation is now the reworked terminal. To create this new implementation, the classic terminal was rewritten almost from scratch to provide the technic",
  "siteName": "The JetBrains Blog",
  "favicon": "https://blog.jetbrains.com/wp-content/uploads/2024/01/cropped-mstile-310x310-1-180x180.png",
  "text": "NewsThe Reworked Terminal Becomes the Default in 2025.2 Starting from 2025.2, the default terminal implementation is now the reworked terminal. To create this new implementation, the classic terminal was rewritten almost from scratch to provide the technical foundation for new terminal features like visual separation of executed commands, AI integration, and the ability to work seamlessly in remote development scenarios. Functionally, it is still the same terminal, but it comes with some novel visual additions. Separators between executed commands (Bash and Zsh) We’ve added separators between executed commands to make it easier to distinguish where commands start and end. If you wish to hide these separators, you can do so by going to Settings | Tools | Terminal and disabling the Show separators between executed commands option. For now, this feature is only available when running Bash or Zsh, but we plan to implement it for PowerShell in the next release. You can follow this YouTrack issue for updates. Updated color scheme We have updated the color schemes in both light and dark themes to improve the readability of command outputs and alternate buffer app renderings. If necessary, you can customize these color schemes in Settings | Editor | Color scheme | Console colors | Reworked terminal. If you experience any specific color issues, we encourage you to report these on IJPL-187347. Performance  Improving performance was one of our main goals, and the reworked terminal is now several times more performant on fast command outputs than the classic terminal. Remote development  The reworked terminal was built considering the architectural requirements necessary to provide the same user experience and quality in both local and remote development. Classic terminal still available for backward compatibility We tried our best to achieve feature parity with the classic implementation, but if some scenarios are not covered in the reworked terminal, you can switch to the classic terminal via the Terminal engine option in Settings | Tools | Terminal. There are many internal and external dependencies on the Classic Terminal API, so it will remain available for at least two more releases to ensure a smooth transition both for users and plugin writers. Some functionalities in third-party plugins that rely on the classic terminal implementation might be limited in 2025.2. This might affect plugins that get text from, execute commands in, and add custom key bindings to the classic terminal. We already informed plugin vendors about API changes and published some technical details in the platform community forum. A work in progress  We’re still working on further terminal improvements and would be grateful for your input. If you have any feedback, feel free to submit it either from the IDE by clicking Share your feedback in the three-dot menu in the Terminal tool window or by submitting a new ticket to our bug tracker.  Subscribe to JetBrains Platform updates",
  "image": "https://blog.jetbrains.com/wp-content/uploads/2025/07/IDEs-social-BlogSocialShare-1280x720-2x.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n                    \t\t\t\t\u003cp\u003e\u003ca href=\"https://blog.jetbrains.com/platform/category/news/\"\u003eNews\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"major-updates\"\u003eThe Reworked Terminal Becomes the Default in 2025.2\u003c/h2\u003e                    \n                    \n\u003cp\u003eStarting from 2025.2, the default terminal implementation is now the \u003ca href=\"https://blog.jetbrains.com/idea/2025/04/jetbrains-terminal-a-new-architecture/#the-reworked-terminal-2025\"\u003ereworked terminal\u003c/a\u003e. To create this new implementation, the classic terminal was rewritten almost from scratch to provide the technical foundation for new terminal features like visual separation of executed commands, AI integration, and the ability to work seamlessly in remote development scenarios.\u003c/p\u003e\n\n\n\n\u003cp\u003eFunctionally, it is still the same terminal, but it comes with some novel visual additions.\u003c/p\u003e\n\n\n\n\u003ch3\u003e\u003cstrong\u003eSeparators between executed commands (Bash and Zsh)\u003c/strong\u003e\u003c/h3\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" fetchpriority=\"high\" width=\"1490\" height=\"942\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/07/image-10.png\" alt=\"Screenshot 2025-07-01 at 10.03.27.png\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eWe’ve added separators between executed commands to make it easier to distinguish where commands start and end.\u003c/p\u003e\n\n\n\n\u003cp\u003eIf you wish to hide these separators, you can do so by going to \u003cem\u003eSettings | Tools | Terminal\u003c/em\u003e and disabling the \u003cem\u003eShow separators between executed commands\u003c/em\u003e option.\u003c/p\u003e\n\n\n\n\u003cp\u003eFor now, this feature is only available when running Bash or Zsh, but we plan to implement it for PowerShell in the next release. You can follow this\u003ca href=\"https://youtrack.jetbrains.com/issue/IJPL-194847\" target=\"_blank\" rel=\"noopener\"\u003e YouTrack issue\u003c/a\u003e for updates.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eUpdated color scheme\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003eWe have updated the color schemes in both light and dark themes to improve the readability of command outputs and alternate buffer app renderings.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" width=\"1600\" height=\"1161\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/07/image-11.png\" alt=\"Screenshot 2025-07-01 at 10.40.35.png\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eIf necessary, you can customize these color schemes in \u003cem\u003eSettings | Editor | Color scheme | Console colors | Reworked terminal\u003c/em\u003e. If you experience any specific color issues, we encourage you to report these on \u003ca href=\"https://youtrack.jetbrains.com/issue/IJPL-187347\" target=\"_blank\" rel=\"noopener\"\u003eIJPL-187347\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003ch3\u003e\u003cstrong\u003ePerformance \u003c/strong\u003e\u003c/h3\u003e\n\n\n\n\u003cp\u003eImproving performance was one of our main goals, and the reworked terminal is now several times more performant on fast command outputs than the classic terminal.\u003c/p\u003e\n\n\n\n\u003ch3\u003e\u003cstrong\u003eRemote development \u003c/strong\u003e\u003c/h3\u003e\n\n\n\n\u003cp\u003eThe reworked terminal was built considering the architectural requirements necessary to provide the same user experience and quality in both local and remote development.\u003c/p\u003e\n\n\n\n\u003ch3\u003e\u003cstrong\u003eClassic terminal still available for backward compatibility\u003c/strong\u003e\u003c/h3\u003e\n\n\n\n\u003cp\u003eWe tried our best to achieve feature parity with the classic implementation, but if some scenarios are not covered in the reworked terminal, you can switch to the classic terminal via the \u003cem\u003eTerminal engine\u003c/em\u003e option in \u003cem\u003eSettings | Tools | Terminal\u003c/em\u003e.\u003c/p\u003e\n\n\n\n\u003cp\u003eThere are many internal and external dependencies on the Classic Terminal API, so it will remain available for at least two more releases to ensure a smooth transition both for users and plugin writers.\u003c/p\u003e\n\n\n\n\u003cp\u003eSome functionalities in third-party plugins that rely on the classic terminal implementation might be limited in 2025.2. This might affect plugins that get text from, execute commands in, and add custom key bindings to the classic terminal. We already informed plugin vendors about API changes and published some technical details in the \u003ca href=\"https://platform.jetbrains.com/t/terminal-implementation-changes-from-v2025-2-of-intellij-based-ides/2264\" target=\"_blank\" rel=\"noopener\"\u003eplatform community forum\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003ch3\u003e\u003cstrong\u003eA work in progress \u003c/strong\u003e\u003c/h3\u003e\n\n\n\n\u003cp\u003eWe’re still working on further terminal improvements and would be grateful for your input.\u003c/p\u003e\n\n\n\n\u003cp\u003eIf you have any feedback, feel free to submit it either from the IDE by clicking \u003cem\u003eShare your feedback \u003c/em\u003ein the three-dot menu in the \u003cem\u003eTerminal\u003c/em\u003e tool window or by submitting a \u003ca href=\"https://youtrack.jetbrains.com/newIssue?project=IJPL\" target=\"_blank\" rel=\"noopener\"\u003enew ticket\u003c/a\u003e to our bug tracker. \u003c/p\u003e\n                    \n                                                                                                                                                                                                                            \u003cdiv\u003e\n                                \u003cdiv\u003e\n                                                                            \u003ch4\u003eSubscribe to JetBrains Platform updates\u003c/h4\u003e\n                                                                                                            \n                                \u003c/div\u003e\n                                \n                                \u003cp\u003e\u003cimg src=\"https://blog.jetbrains.com/wp-content/themes/jetbrains/assets/img/img-form.svg\" alt=\"image description\"/\u003e\n                                                                    \u003c/p\u003e\n                            \u003c/div\u003e\n                                                            \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": null,
  "modifiedTime": null
}
