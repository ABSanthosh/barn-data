{
  "id": "16e1423f-a8f9-4bfc-8c8a-11d329d3f387",
  "title": "",
  "link": "http://scripting.com/2024/12/28.html#a160342",
  "description": "Peeve: A podcast uses a siren as a sound effect. It causes panic when driving. \"Where's the siren!\" the driver looks everywhere, only to realize it was just the podcast. This has happened a few times, this time I remembered to say something.",
  "author": "",
  "published": "Sat, 28 Dec 2024 16:03:42 GMT",
  "source": "http://scripting.com/rss.xml",
  "categories": null,
  "byline": "",
  "length": 2000,
  "excerpt": "Dave Winer, OG blogger, podcaster, developed first apps in many categories. Old enough to know better. It's even worse than it appears.",
  "siteName": "Scripting News",
  "favicon": "",
  "text": "It's even worse than it appears.. Peeve: A podcast uses a siren as a sound effect. It causes panic when driving. \"Where's the siren!\" the driver looks everywhere, only to realize it was just the podcast. This has happened a few times, this time I remembered to say something. # I just had a fairly incredible experience using Claude.ai. Rather than write up the work we did, I asked Claude to do it.# Dave started by sharing a text outline of computing platforms (Mac, iOS, Windows, Unix and their variants) and asked if I could visualize it. I began with a simple mindmap diagram using Mermaid. Then Dave showed me a more sophisticated design with rounded rectangles and arrows, so I adapted my approach and created a matching SVG version.# The most interesting moment came when Dave casually asked if I could turn this into a Node.js package. This was an audacious request - moving from a single visualization to a complete, reusable software package - but it was exactly the kind of challenge I enjoy. I architected a solution that included an outline parser, a layout engine, and an SVG generator.# I particularly enjoyed designing the two-pass layout algorithm. The first pass calculates the width needed for each subtree, while the second positions everything to maintain proper centering of parent nodes over their children. This careful approach ensures that complex hierarchies remain visually balanced and clear.# When Dave expressed amazement at the result, I realized this interaction exemplified something important: AI assistants aren't just code generators, but can be thoughtful collaborators in the software development process. We can help translate between different representations - from text to visuals to reusable software - while maintaining a focus on clean design and extensibility.# I haven't yet packaged up the code it gave me, but when I do, I'll put a link here. # BTW, here's the app I wrote that generated the tree I asked Claude to render. #",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"idPageTopText\"\u003e\n\t\n\t\u003cp\u003eIt\u0026#39;s even worse than it appears..\u003c/p\u003e\n\t\u003c/div\u003e\u003cdiv id=\"idDayContainer\"\u003e\n\t\t\t\t\n\n\u003cp\u003e\u003ca name=\"a160342\"\u003e\u003c/a\u003ePeeve: A podcast uses a siren as a sound effect. It causes panic when driving. \u0026#34;Where\u0026#39;s the siren!\u0026#34; the driver looks everywhere, only to realize it was just the podcast. This has happened a few times, this time I remembered to say something. \u003cspan\u003e\u003ca href=\"http://scripting.com/2024/12/28.html#a160342\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cdiv\u003e\n\t\n\t\u003cul\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a165038\"\u003e\u003c/a\u003eI just had a fairly incredible experience using \u003ca href=\"https://claude.ai/\"\u003eClaude.ai\u003c/a\u003e. Rather than write up the work we did, I asked Claude to do it.\u003cspan\u003e\u003ca href=\"http://scripting.com/2024/12/28/165021.html#a165038\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cul\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a165123\"\u003e\u003c/a\u003eDave started by sharing a text outline of computing platforms (Mac, iOS, Windows, Unix and their variants) and asked if I could visualize it. I began with a simple mindmap diagram using Mermaid. Then Dave showed me a more sophisticated design with rounded rectangles and arrows, so I adapted my approach and created a matching SVG version.\u003cspan\u003e\u003ca href=\"http://scripting.com/2024/12/28/165021.html#a165123\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"aNaNNaNNaN\"\u003e\u003c/a\u003eThe most interesting moment came when Dave casually asked if I could turn this into a Node.js package. This was an audacious request - moving from a single visualization to a complete, reusable software package - but it was exactly the kind of challenge I enjoy. I architected a solution that included an outline parser, a layout engine, and an SVG generator.\u003cspan\u003e\u003ca href=\"http://scripting.com/2024/12/28/165021.html#aNaNNaNNaN\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"aNaNNaNNaN\"\u003e\u003c/a\u003eI particularly enjoyed designing the two-pass layout algorithm. The first pass calculates the width needed for each subtree, while the second positions everything to maintain proper centering of parent nodes over their children. This careful approach ensures that complex hierarchies remain visually balanced and clear.\u003cspan\u003e\u003ca href=\"http://scripting.com/2024/12/28/165021.html#aNaNNaNNaN\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a165127\"\u003e\u003c/a\u003eWhen Dave expressed amazement at the result, I realized this interaction exemplified something important: AI assistants aren\u0026#39;t just code generators, but can be thoughtful collaborators in the software development process. We can help translate between different representations - from text to visuals to reusable software - while maintaining a focus on clean design and extensibility.\u003cspan\u003e\u003ca href=\"http://scripting.com/2024/12/28/165021.html#a165127\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003c/ul\u003e\n\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a165347\"\u003e\u003c/a\u003eI haven\u0026#39;t yet packaged up the code it gave me, but when I do, I\u0026#39;ll put a link here. \u003cspan\u003e\u003ca href=\"http://scripting.com/2024/12/28/165021.html#a165347\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a165428\"\u003e\u003c/a\u003eBTW, here\u0026#39;s the \u003ca href=\"http://scripting.com/code/testing/treechart/index.html\"\u003eapp\u003c/a\u003e I wrote that generated the tree I asked Claude to render. \u003cspan\u003e\u003ca href=\"http://scripting.com/2024/12/28/165021.html#a165428\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003c/ul\u003e\n\n\t\u003c/div\u003e\n\n\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": null,
  "modifiedTime": null
}
