{
  "id": "bdfa8c75-c7e5-472e-8f14-5b3b4e15ca59",
  "title": "Microsoft Collaborates with Anthropic to Launch C# SDK for MCP Integration",
  "link": "https://www.infoq.com/news/2025/04/microsoft-csharp-sdk-mcp/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "Microsoft has partnered with Anthropic to develop an official C# SDK for the Model Context Protocol (MCP), an open protocol designed to connect large language models (LLMs) with external tools and data sources. The SDK is open-source and available under the modelcontextprotocol GitHub organization. By Robert Krzaczyński",
  "author": "Robert Krzaczyński",
  "published": "Thu, 10 Apr 2025 19:45:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "SDK",
    "Large language models",
    ".NET",
    "C#",
    "Open Source",
    "Artificial Intelligence",
    "Development",
    "news"
  ],
  "byline": "Robert Krzaczyński",
  "length": 2856,
  "excerpt": "Microsoft has partnered with Anthropic to develop an official C# SDK for the Model Context Protocol (MCP), an open protocol designed to connect large language models (LLMs) with external tools and dat",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s2_20250408104319/apple-touch-icon.png",
  "text": "Microsoft has partnered with Anthropic to develop an official C# SDK for the Model Context Protocol (MCP), an open protocol designed to connect large language models (LLMs) with external tools and data sources. The SDK is open-source and available under the modelcontextprotocol GitHub organization. The C# SDK is based on an existing community project called mcpdotnet, originally started by Peder Holdgaard Pederson. Microsoft acknowledged the groundwork laid by Pederson and other contributors, which helped shape the foundation for this release. David Fowler, a distinguished engineer at Microsoft, noted: Most of the credit goes to Peder Holdgaard Pedersen who we teamed up with after he built a great implementation! Initially introduced by Anthropic in late 2024, MCP has seen increasing adoption across AI platforms. It defines a set of messages and behaviors that allow applications to communicate with tool- and resource-hosting servers in a standardized way. Several Microsoft products, including Copilot Studio, Semantic Kernel, and GitHub Copilot agent mode in VS Code, have already adopted MCP internally. Robert Recalde, a principal engineer and cloud solution architect at Cigna Healthcare, highlighted the significance of the release: As a software architect and engineer deeply rooted in .NET, I am excited about Microsoft's collaboration with Anthropic to deliver the official C# SDK for the Model Context Protocol (MCP). This partnership significantly expands our ability to integrate advanced AI capabilities seamlessly into our .NET applications, empowering our organization and business partners to innovate rapidly and deliver tangible, real-world value. The protocol supports a variety of standard messages for tool execution and resource access, such as ListToolsRequest, CallToolRequest, and ReadResourceRequest. This allows agentic applications to reason across a wider context and consistently call out to external services. Some developers have raised questions about authentication support, including OAuth and OpenID Connect. Responding to these concerns, Microsoft engineer Mike Kistler confirmed: We plan to support all the authentication protocols described in the MCP spec. We do not have a definite target date for this but it is very high on our priority list. The SDK aims to take advantage of modern .NET runtime improvements and is intended to build clients and servers in the MCP ecosystem. Applications built using it can expose functionality via custom MCP servers or connect to others to extend LLM capabilities. The SDK is available now via NuGet. Documentation, samples, and source code can be found in the official GitHub repository. About the Author Robert Krzaczyński",
  "image": "https://res.infoq.com/news/2025/04/microsoft-csharp-sdk-mcp/en/headerimage/generatedHeaderImage-1744313524973.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eMicrosoft has partnered with Anthropic to develop an \u003ca href=\"https://devblogs.microsoft.com/blog/microsoft-partners-with-anthropic-to-create-official-c-sdk-for-model-context-protocol\"\u003eofficial C# SDK for the Model Context Protocol (MCP)\u003c/a\u003e, an open protocol designed to connect large language models (LLMs) with external tools and data sources. The SDK is open-source and available under the modelcontextprotocol GitHub organization.\u003c/p\u003e\n\n\u003cp\u003eThe C# SDK is based on an existing community project called mcpdotnet, originally started by \u003ca href=\"https://www.linkedin.com/in/peder-holdgaard-pedersen-3224b942/\"\u003ePeder Holdgaard Pederson\u003c/a\u003e. Microsoft acknowledged the groundwork laid by Pederson and other contributors, which helped shape the foundation for this release. David Fowler, a distinguished engineer at Microsoft, \u003ca href=\"https://www.linkedin.com/posts/davidfowl_github-modelcontextprotocolcsharp-sdk-activity-7309023431486816256-Krty?utm_source=share\u0026amp;utm_medium=member_desktop\u0026amp;rcm=ACoAACX5yoEBhsg1xPtc5iaJXHCu_Rv298CmfZA\"\u003enoted\u003c/a\u003e:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eMost of the credit goes to Peder Holdgaard Pedersen who we teamed up with after he built a great implementation!\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eInitially introduced by Anthropic in late 2024, MCP has seen increasing adoption across AI platforms. It defines a set of messages and behaviors that allow applications to communicate with tool- and resource-hosting servers in a standardized way. Several Microsoft products, including Copilot Studio, Semantic Kernel, and GitHub Copilot agent mode in VS Code, have already adopted MCP internally.\u003c/p\u003e\n\n\u003cp\u003eRobert Recalde, a principal engineer and cloud solution architect at Cigna Healthcare, \u003ca href=\"https://www.linkedin.com/posts/recalde_microsoft-partners-with-anthropic-to-create-activity-7313340646268846080-Hyzv?utm_source=share\u0026amp;utm_medium=member_desktop\u0026amp;rcm=ACoAACX5yoEBhsg1xPtc5iaJXHCu_Rv298CmfZA\"\u003ehighlighted\u003c/a\u003e the significance of the release:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAs a software architect and engineer deeply rooted in .NET, I am excited about Microsoft\u0026#39;s collaboration with Anthropic to deliver the official C# SDK for the Model Context Protocol (MCP). This partnership significantly expands our ability to integrate advanced AI capabilities seamlessly into our .NET applications, empowering our organization and business partners to innovate rapidly and deliver tangible, real-world value.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe protocol supports a variety of standard messages for tool execution and resource access, such as \u003cem\u003eListToolsRequest\u003c/em\u003e, \u003cem\u003eCallToolRequest\u003c/em\u003e, and \u003cem\u003eReadResourceRequest\u003c/em\u003e. This allows agentic applications to reason across a wider context and consistently call out to external services.\u003c/p\u003e\n\n\u003cp\u003eSome developers have raised questions about authentication support, including OAuth and OpenID Connect. Responding to these concerns, Microsoft engineer Mike Kistler \u003ca href=\"https://devblogs.microsoft.com/blog/microsoft-partners-with-anthropic-to-create-official-c-sdk-for-model-context-protocol?commentid=46#comment-46\"\u003econfirmed\u003c/a\u003e:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eWe plan to support all the authentication protocols described in the MCP spec. We do not have a definite target date for this but it is very high on our priority list.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe SDK aims to take advantage of modern .NET runtime improvements and is intended to build clients and servers in the MCP ecosystem. Applications built using it can expose functionality via custom MCP servers or connect to others to extend LLM capabilities.\u003c/p\u003e\n\n\u003cp\u003eThe SDK is available now via NuGet. Documentation, samples, and source code can be found in the \u003ca href=\"https://github.com/modelcontextprotocol\"\u003eofficial GitHub repository\u003c/a\u003e.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Robert-Krzaczyński\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eRobert Krzaczyński\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": "2025-04-10T00:00:00Z",
  "modifiedTime": null
}
