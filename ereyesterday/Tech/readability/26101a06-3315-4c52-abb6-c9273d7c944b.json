{
  "id": "26101a06-3315-4c52-abb6-c9273d7c944b",
  "title": "I designed my LED matrix PCB with code",
  "link": "https://docs.tscircuit.com/tutorials/building-led-matrix",
  "description": "Comments",
  "author": "",
  "published": "Fri, 25 Apr 2025 21:43:33 +0000",
  "source": "https://news.ycombinator.com/rss",
  "categories": null,
  "byline": "",
  "length": 4742,
  "excerpt": "This tutorial will walk you through building a 3x5 LED matrix controlled by a Raspberry Pi Pico using tscircuit.",
  "siteName": "",
  "favicon": "",
  "text": "Overview​ This tutorial will walk you through building a 3x5 LED matrix controlled by a Raspberry Pi Pico using tscircuit. Objectives of Building an LED Matrix​ Some practical applications of building an LED Matrix include: Signage - Building signs for events, products, etc. Data Visualization Tool - Displaying real-time data metrics like GitHub contributions, website traffic, or temperature readings through color intensity Interactive Notification System - Creating a physical notification system for emails, social media, or calendar events with customizable brightness levels LED Matrix Requirements​ The LED matrix must be WiFi-controllable The matrix layout pattern must be grid-based Each LED should be individually controllable for brightness and color System Diagram​ The matrix connects to the Pico microcontroller via a data chain. The Pico connects to WiFi through the PICO_W module. The components and connections between them are shown in the diagram below: Schematic Capture​ Let's import the Pico microcontroller and LED components by following the steps in the Importing from JLCPCB section. We will follow the following steps to build the circuit step by step: Import the Pico microcontroller Schematic Import the LED Schematic Chain two LEDs together Chain many LEDs together Connect the Pico to the LED matrix Pico Schematic​ Schematic of the Pico microcontroller imported from JLCPCB is shown below: LED Schematic​ We are using IC LEDs (specifically WS2812B), which have an RGB LED and control chip integrated into the same package. These IC LEDs offer several advantages over traditional RGB LEDs: Simplified Wiring - Only 4 pins needed (VDD, GND, Data In, Data Out) compared to 4+ pins for traditional RGB LEDs Serial Communication - LEDs can be daisy-chained together, requiring only one data pin from the microcontroller Individual Control - Each LED in the chain can be controlled independently for color and brightness Chaining Two LEDs together​ To connect two LEDs together, we need to connect the data output DO of the first LED to the data input DI of the second LED. This creates a chain of LEDs. Connecting Pico to the LED Matrix​ The Pico is connected to the LED matrix via a general purpose input/output (GPIO) pin in this example we are using GP6, and the other pins of the Pico are connected to ground. Chaining many LEDs together​ LED Matrix Layout​ We can connect multiple LEDs together by chaining them, but doing this for a large number of LEDs would be tedious. Luckily, tscircuit has a helper function to create a grid of components. We will be using that helper function to create our matrix layout. Here we are using the grid function to create a 3x5 LED matrix. The grid function takes in the number of columns and rows, and the spacing between the components. Connecting the Pico to the LED matrix​ Here we are merging all the learnings from the previous examples to create a complete circuit. The Pico is connected to the LED matrix via the GP6 pin, and the other pins of the Pico are connected to ground. The GP6 pin is connected to the data input DI of the first LED, and the data output DO of each LED is connected to the data input DI of the next LED in the chain. While connecting the LEDs together, we are also connecting the GND and VDD pins of the LEDs to ground and 5V supply respectively. Complete circuit is shown below: PCB Layout​ We can translate our schematic into a PCB layout by specifying the physical positions of components on the board. Here we are adding the positions of the components on the PCB: Pico microcontroller is added at pcbX={-15} pcbY={0} with a rotation of 90deg (Rotation is needed for the Pico to be in the correct orientation) LEDs are added at positions calculated by the grid function with a spacing of 8mm horizontally and 5mm vertically Check out this circuit in our Playground. Ordering the PCB​ You can order this PCB by downloading the fabrication files and uploading them to JLCPCB. Follow the instructions from here. Controlling the LED Matrix​ The LED matrix can be controlled through a simple web interface that provides a visual grid for controlling individual LEDs. The control system includes: Web Interface: A 3x5 grid interface where clicking each cell cycles through: Off (Gray) Red Green Blue API Integration: The matrix state can be controlled and monitored through REST endpoints, making it easy to integrate with other applications. Pico W Connection: The matrix connects to WiFi using the Pico W's wireless capabilities, allowing for remote control through the web interface. The complete implementation, including the web interface and Pico W code, is available in our LED Matrix Server repository.",
  "image": "https://docs.tscircuit.com/logo/logo.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cheader\u003e\u003c/header\u003e\u003ch2 id=\"overview\"\u003eOverview\u003ca href=\"#overview\" aria-label=\"Direct link to Overview\" title=\"Direct link to Overview\"\u003e​\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis tutorial will walk you through building a 3x5 LED matrix controlled by a Raspberry Pi Pico using tscircuit.\u003c/p\u003e\n\n\n\u003ch2 id=\"objectives-of-building-an-led-matrix\"\u003eObjectives of Building an LED Matrix\u003ca href=\"#objectives-of-building-an-led-matrix\" aria-label=\"Direct link to Objectives of Building an LED Matrix\" title=\"Direct link to Objectives of Building an LED Matrix\"\u003e​\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eSome practical applications of building an LED Matrix include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eSignage\u003c/strong\u003e - Building signs for events, products, etc.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eData Visualization Tool\u003c/strong\u003e - Displaying real-time data metrics like GitHub contributions, website traffic, or temperature readings through color intensity\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eInteractive Notification System\u003c/strong\u003e - Creating a physical notification system for emails, social media, or calendar events with customizable brightness levels\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"led-matrix-requirements\"\u003eLED Matrix Requirements\u003ca href=\"#led-matrix-requirements\" aria-label=\"Direct link to LED Matrix Requirements\" title=\"Direct link to LED Matrix Requirements\"\u003e​\u003c/a\u003e\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThe LED matrix must be WiFi-controllable\u003c/li\u003e\n\u003cli\u003eThe matrix layout pattern must be grid-based\u003c/li\u003e\n\u003cli\u003eEach LED should be individually controllable for brightness and color\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"system-diagram\"\u003eSystem Diagram\u003ca href=\"#system-diagram\" aria-label=\"Direct link to System Diagram\" title=\"Direct link to System Diagram\"\u003e​\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThe matrix connects to the Pico microcontroller via a data chain. The Pico connects to WiFi through the \u003ccode\u003ePICO_W\u003c/code\u003e module.\nThe components and connections between them are shown in the diagram below:\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" loading=\"lazy\" alt=\"System Diagram\" src=\"https://docs.tscircuit.com/assets/images/matrix-system-requirements-db266ef7e2f69520f89dec615e6f370c.png\" width=\"2147\" height=\"1460\"/\u003e\u003c/p\u003e\n\u003ch2 id=\"schematic-capture\"\u003eSchematic Capture\u003ca href=\"#schematic-capture\" aria-label=\"Direct link to Schematic Capture\" title=\"Direct link to Schematic Capture\"\u003e​\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eLet\u0026#39;s import the Pico microcontroller and LED components by following the steps in the \u003ca href=\"https://docs.tscircuit.com/guides/importing-modules-and-chips/importing-from-jlcpcb\"\u003eImporting from JLCPCB\u003c/a\u003e section.\u003c/p\u003e\n\u003cp\u003eWe will follow the following steps to build the circuit step by step:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eImport the Pico microcontroller Schematic\u003c/li\u003e\n\u003cli\u003eImport the LED Schematic\u003c/li\u003e\n\u003cli\u003eChain two LEDs together\u003c/li\u003e\n\u003cli\u003eChain many LEDs together\u003c/li\u003e\n\u003cli\u003eConnect the Pico to the LED matrix\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"pico-schematic\"\u003ePico Schematic\u003ca href=\"#pico-schematic\" aria-label=\"Direct link to Pico Schematic\" title=\"Direct link to Pico Schematic\"\u003e​\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eSchematic of the Pico microcontroller \u003ca href=\"https://docs.tscircuit.com/guides/importing-modules-and-chips/importing-from-jlcpcb\"\u003eimported from JLCPCB\u003c/a\u003e is shown below:\u003c/p\u003e\n\n\u003ch3 id=\"led-schematic\"\u003eLED Schematic\u003ca href=\"#led-schematic\" aria-label=\"Direct link to LED Schematic\" title=\"Direct link to LED Schematic\"\u003e​\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eWe are using IC LEDs (specifically \u003ca href=\"https://jlcpcb.com/partdetail/Worldsemi-WS2812B2020/C965555\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eWS2812B\u003c/a\u003e), which have an RGB LED and control chip integrated into the same package. These IC LEDs offer several advantages over traditional RGB LEDs:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eSimplified Wiring\u003c/strong\u003e - Only 4 pins needed (VDD, GND, Data In, Data Out) compared to 4+ pins for traditional RGB LEDs\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSerial Communication\u003c/strong\u003e - LEDs can be daisy-chained together, requiring only one data pin from the microcontroller\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eIndividual Control\u003c/strong\u003e - Each LED in the chain can be controlled independently for color and brightness\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"chaining-two-leds-together\"\u003eChaining Two LEDs together\u003ca href=\"#chaining-two-leds-together\" aria-label=\"Direct link to Chaining Two LEDs together\" title=\"Direct link to Chaining Two LEDs together\"\u003e​\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eTo connect two LEDs together, we need to connect the data output \u003ccode\u003eDO\u003c/code\u003e of the first LED to the data input \u003ccode\u003eDI\u003c/code\u003e of the second LED. This creates a chain of LEDs.\u003c/p\u003e\n\n\u003ch3 id=\"connecting-pico-to-the-led-matrix\"\u003eConnecting Pico to the LED Matrix\u003ca href=\"#connecting-pico-to-the-led-matrix\" aria-label=\"Direct link to Connecting Pico to the LED Matrix\" title=\"Direct link to Connecting Pico to the LED Matrix\"\u003e​\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eThe Pico is connected to the LED matrix via a general purpose input/output (GPIO) pin in this example we are using \u003ccode\u003eGP6\u003c/code\u003e,\nand the other pins of the Pico are connected to ground.\u003c/p\u003e\n\n\u003ch3 id=\"chaining-many-leds-together\"\u003eChaining many LEDs together\u003ca href=\"#chaining-many-leds-together\" aria-label=\"Direct link to Chaining many LEDs together\" title=\"Direct link to Chaining many LEDs together\"\u003e​\u003c/a\u003e\u003c/h3\u003e\n\u003ch4 id=\"led-matrix-layout\"\u003eLED Matrix Layout\u003ca href=\"#led-matrix-layout\" aria-label=\"Direct link to LED Matrix Layout\" title=\"Direct link to LED Matrix Layout\"\u003e​\u003c/a\u003e\u003c/h4\u003e\n\u003cp\u003eWe can connect multiple LEDs together by chaining them, but doing this for a large number of LEDs would be tedious.\nLuckily, tscircuit has a \u003ca href=\"https://github.com/tscircuit/math-utils\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehelper function to create a grid\u003c/a\u003e of components. We will be using that helper function to create our matrix layout.\u003c/p\u003e\n\u003cp\u003eHere we are using the \u003ca href=\"https://github.com/tscircuit/math-utils/blob/main/src/grid.ts\" target=\"_blank\" rel=\"noopener noreferrer\"\u003e\u003ccode\u003egrid\u003c/code\u003e\u003c/a\u003e function to create a 3x5 LED matrix. The \u003ccode\u003egrid\u003c/code\u003e function takes in the number of columns and rows, and the spacing between the components.\u003c/p\u003e\n\n\u003ch3 id=\"connecting-the-pico-to-the-led-matrix\"\u003eConnecting the Pico to the LED matrix\u003ca href=\"#connecting-the-pico-to-the-led-matrix\" aria-label=\"Direct link to Connecting the Pico to the LED matrix\" title=\"Direct link to Connecting the Pico to the LED matrix\"\u003e​\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eHere we are merging all the learnings from the previous examples to create a complete circuit. The Pico is connected to the LED matrix via the \u003ccode\u003eGP6\u003c/code\u003e pin, and the other pins of the Pico are connected to ground.\nThe \u003ccode\u003eGP6\u003c/code\u003e pin is connected to the data input \u003ccode\u003eDI\u003c/code\u003e of the first LED, and the data output \u003ccode\u003eDO\u003c/code\u003e of each LED is connected to the data input \u003ccode\u003eDI\u003c/code\u003e of the next LED in the chain.\nWhile connecting the LEDs together, we are also connecting the \u003ccode\u003eGND\u003c/code\u003e and \u003ccode\u003eVDD\u003c/code\u003e pins of the LEDs to ground and 5V supply respectively.\u003c/p\u003e\n\u003cp\u003eComplete circuit is shown below:\u003c/p\u003e\n\n\u003ch2 id=\"pcb-layout\"\u003ePCB Layout\u003ca href=\"#pcb-layout\" aria-label=\"Direct link to PCB Layout\" title=\"Direct link to PCB Layout\"\u003e​\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eWe can translate our schematic into a PCB layout by specifying the physical positions of components on the board.\u003c/p\u003e\n\u003cp\u003eHere we are adding the positions of the components on the PCB:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePico microcontroller is added at \u003ccode\u003epcbX={-15} pcbY={0}\u003c/code\u003e with a rotation of \u003ccode\u003e90deg\u003c/code\u003e (Rotation is needed for the Pico to be in the correct orientation)\u003c/li\u003e\n\u003cli\u003eLEDs are added at positions calculated by the grid function with a spacing of \u003ccode\u003e8mm\u003c/code\u003e horizontally and \u003ccode\u003e5mm\u003c/code\u003e vertically\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eCheck out this circuit in our \u003ca href=\"https://tscircuit.com/editor?snippet_id=e30ad928-3432-49a4-826c-f50cae1490ef\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ePlayground\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"ordering-the-pcb\"\u003eOrdering the PCB\u003ca href=\"#ordering-the-pcb\" aria-label=\"Direct link to Ordering the PCB\" title=\"Direct link to Ordering the PCB\"\u003e​\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eYou can order this PCB by downloading the fabrication files and uploading them to JLCPCB. Follow the instructions from \u003ca href=\"https://docs.tscircuit.com/building-electronics/ordering-prototypes\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"controlling-the-led-matrix\"\u003eControlling the LED Matrix\u003ca href=\"#controlling-the-led-matrix\" aria-label=\"Direct link to Controlling the LED Matrix\" title=\"Direct link to Controlling the LED Matrix\"\u003e​\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThe LED matrix can be controlled through a simple web interface that provides a visual grid for controlling individual LEDs. The control system includes:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eWeb Interface\u003c/strong\u003e: A 3x5 grid interface where clicking each cell cycles through:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eOff (Gray)\u003c/li\u003e\n\u003cli\u003eRed\u003c/li\u003e\n\u003cli\u003eGreen\u003c/li\u003e\n\u003cli\u003eBlue\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eAPI Integration\u003c/strong\u003e: The matrix state can be controlled and monitored through REST endpoints, making it easy to integrate with other applications.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003ePico W Connection\u003c/strong\u003e: The matrix connects to WiFi using the Pico W\u0026#39;s wireless capabilities, allowing for remote control through the web interface.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThe complete implementation, including the web interface and Pico W code, is available in our \u003ca href=\"https://github.com/tscircuit/led-matrix-server\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eLED Matrix Server repository\u003c/a\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": null,
  "modifiedTime": null
}
