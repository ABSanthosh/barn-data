{
  "id": "6abb33c3-f99e-49e6-a716-c03866bcbbde",
  "title": "What is the new safe C++ proposal and what do programmers need to know?",
  "link": "https://thenextweb.com/news/safe-c-proposal-what-programmers-need-to-know",
  "description": "In 2020, Google identified that more than 70% of its Chrome browser’s severe security bugs were in fact caused by memory safety issues. “That is,” the Chrome team said, “mistakes with pointers in the C or C++ languages which cause memory to be misinterpreted.” In 2022, the NSA weighed in on memory safety with Neal Ziring, its cybersecurity technical director saying that “Memory management issues have been exploited for decades and are still entirely too common today. We have to consistently use memory safe languages and other protections when developing software to eliminate these weaknesses from malicious cyber actors.” That…This story continues at The Next Web",
  "author": "Kirstie McDermott",
  "published": "Tue, 15 Oct 2024 10:39:35 +0000",
  "source": "https://thenextweb.com/feed/",
  "categories": [
    "Startups and technology",
    "Future of work"
  ],
  "byline": "Kirstie McDermott",
  "length": 5006,
  "excerpt": "Memory safe programming is becoming a bigger concern. Find out why, what the C++ community is doing, and other safe languages.",
  "siteName": "TNW | Future-Of-Work",
  "favicon": "https://next.tnwcdn.com/assets/img/favicon/favicon-194x194.png",
  "text": "In 2020, Google identified that more than 70% of its Chrome browser’s severe security bugs were in fact caused by memory safety issues. “That is,” the Chrome team said, “mistakes with pointers in the C or C++ languages which cause memory to be misinterpreted.” In 2022, the NSA weighed in on memory safety with Neal Ziring, its cybersecurity technical director saying that “Memory management issues have been exploited for decades and are still entirely too common today. We have to consistently use memory safe languages and other protections when developing software to eliminate these weaknesses from malicious cyber actors.” That wasn’t the end of the matter, however. Memory safe programming languages have continued to be under an intense spotlight. In February of this year, the US White House Office of the National Cyber Director (ONCD) issued a report advising that all programmers should move to memory-safe programming languages. 5 jobs to discover this week Cybersecurity Coordinator France M/F, MBDA France, Le Plessis-Robinson Data Scientist (F/H), Novencia, Lyon Software Architect, GDV Dienstleistungs-GmbH, Hamburg Software Developer, InTraffic, Utrecht Software Architect, Capgemini, Eindhoven The report pointed out that the burden of cybersecurity threat protection is currently placed on end users, and that, “efforts must be made to proactively eliminate entire categories of software vulnerabilities.” The report elaborated further, saying that, “Experts have identified a few programming languages that both lack traits associated with memory safety and also have high proliferation across critical systems, such as C and C++.” Memory safety matters now more than ever, because so much more of what we do happens online. The pandemic accelerated the rapid adoption of ecommerce, online payments, and digital advertising, according to the World Economic Forum. As a result there are a lot more potential vulnerabilities to exploit. Stack Overflow points out that some of the biggest vulnerability events of the past were memory-safety issues. These include 2014’s Heartbleed, which affected OpenSSL software allowing bad actors to steal X.509 certificates, usernames and passwords, instant messages, and emails. In 2017, the WannaCry ransomware attack garnered massive attention as it spread globally, infecting more than 230,000 computers. A new Consumer Security and Financial Crime Report from Revolut points to Meta platforms as the biggest source of all scams (62%) globally during the first half of 2024. Revolut identified that Facebook had fraud volumes (39%) which were more than double that of WhatsApp (18%). Making C++ safe Memory safe languages do exist and include Rust, Go, Java, Swift, and Python. C++ is under particular scrutiny because of the amount of critical code that has been written in it. Given the context, it isn’t so surprising that the C++ community has reacted, announcing the Safe C++ Extensions proposal in September of this year. ​​The work is being done via the C++ Alliance, and its president and executive director Vinnie Falco said that this was, “a revolutionary proposal that adds memory safety features to the C++ programming language.” Falco added that: “the need for safe code has never been more pressing. With the increasing importance of software security and reliability, developers are facing mounting pressure to adopt safer coding practices. The Safe C++ Extensions aim to address this critical need by introducing novel features that prevent common memory-related errors.” So will this fix the issue? Some critics are skeptical, and the developer from the C++ Alliance, Sean Baxter points out that: “There’s only one popular systems level/non-garbage collected language that provides rigorous memory safety. That’s the Rust language. Although they play in the same space, C++ and Rust have different designs with limited interop capability, making incremental migration from C++ to Rust a painstaking process.” A number of actions are suggested to ensure performant C++ code, including prohibiting developers from writing operations that might result in lifetime safety, type safety, or thread safety undefined behaviors. Additionally, there are other challenges, with Baxter pointing out that, “Although they play in the same space, C++ and Rust have different designs with limited interop capability, making incremental migration from C++ to Rust a painstaking process.” Moving code to memory safe status will be painstaking and time-consuming, but the Defense Advanced Research Projects Agency (DARPA) is seeking to bridge this gap using AI. It is developing a programmatic code conversion vehicle called TRACTOR (Translating All C TO Rust). It says that, “the goal is to achieve the same quality and style that a skilled Rust developer would produce, thereby eliminating the entire class of memory safety security vulnerabilities present in C programs.” Ready to find your next software role? Check out The Next Web Job Board",
  "image": "https://img-cdn.tnwcdn.com/image/tnw-blurple?filter_last=1\u0026fit=1280%2C640\u0026url=https%3A%2F%2Fcdn0.tnwcdn.com%2Fwp-content%2Fblogs.dir%2F1%2Ffiles%2F2024%2F10%2FUntitled-design-7.jpg\u0026signature=5aad12ef466ab36fbdd2020cc50124ff",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"article-main-content\"\u003e\n                            \u003cp\u003eIn 2020, Google identified that more than 70% of its Chrome browser’s \u003ca href=\"https://www.chromium.org/Home/chromium-security/memory-safety\" target=\"_blank\" rel=\"nofollow noopener\"\u003esevere security bugs \u003c/a\u003ewere in fact caused by memory safety issues.\u003c/p\u003e\n\u003cp\u003e“That is,” the Chrome team said, “mistakes with pointers in the C or C++ languages which cause memory to be misinterpreted.”\u003c/p\u003e\n\u003cp\u003eIn 2022, the \u003ca href=\"https://www.nsa.gov/Press-Room/News-Highlights/Article/Article/3215760/nsa-releases-guidance-on-how-to-protect-against-software-memory-safety-issues/\" target=\"_blank\" rel=\"nofollow noopener\"\u003eNSA weighed in\u003c/a\u003e on memory safety with Neal Ziring, its cybersecurity technical director saying that “Memory management issues have been exploited for decades and are still entirely too common today. We have to consistently use memory safe languages and other protections when developing software to eliminate these weaknesses from malicious cyber actors.”\u003c/p\u003e\n\u003cp\u003eThat wasn’t the end of the matter, however. Memory safe \u003ca href=\"https://thenextweb.com/topic/programming-language\" target=\"_blank\" rel=\"noopener\"\u003eprogramming languages\u003c/a\u003e have continued to be under an intense spotlight. In February of this year, the US White House Office of the National Cyber Director (ONCD) \u003ca href=\"https://www.whitehouse.gov/wp-content/uploads/2024/02/Final-ONCD-Technical-Report.pdf\" target=\"_blank\" rel=\"nofollow noopener\"\u003eissued a report\u003c/a\u003e advising that all programmers should move to memory-safe programming languages.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e5 jobs to discover this week\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://talent.thenextweb.com/job/coordinateur-cybersecurite-france-fh-1-at-mbda-france-1/?source=article\u0026amp;utm_source=article\u0026amp;utm_medium=content\u0026amp;utm_campaign=TNW4224\"\u003eCybersecurity Coordinator France M/F, MBDA France, Le Plessis-Robinson\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://talent.thenextweb.com/job/data-scientist-fh-at-novencia-1/?source=article\u0026amp;utm_source=article\u0026amp;utm_medium=content\u0026amp;utm_campaign=TNW4224\"\u003eData Scientist (F/H), Novencia, Lyon\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://talent.thenextweb.com/job/software-architekt-at-gdv-dienstleistungs-gmbh-1/?source=article\u0026amp;utm_source=article\u0026amp;utm_medium=content\u0026amp;utm_campaign=TNW4224\"\u003eSoftware Architect, GDV Dienstleistungs-GmbH, Hamburg\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://talent.thenextweb.com/job/software-developer-12-at-intraffic-1/?source=article\u0026amp;utm_source=article\u0026amp;utm_medium=content\u0026amp;utm_campaign=TNW4224\"\u003eSoftware Developer, InTraffic, Utrecht\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://talent.thenextweb.com/job/software-architect-1-at-capgemini-3/?source=article\u0026amp;utm_source=article\u0026amp;utm_medium=content\u0026amp;utm_campaign=TNW4224\"\u003eSoftware Architect, Capgemini, Eindhoven\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe report pointed out that the burden of cybersecurity threat protection is currently placed on end users, and that, “efforts must be made to proactively eliminate entire categories of software vulnerabilities.”\u003c/p\u003e\n\u003cp\u003eThe report elaborated further, saying that, “Experts have identified a few programming languages that both lack traits associated with memory safety and also have high proliferation across critical systems, such as C and C++.”\u003c/p\u003e\n\u003cp\u003eMemory safety matters now more than ever, because so much more of what we do happens online. The pandemic accelerated the rapid adoption of ecommerce, online payments, and digital advertising, according to the \u003ca href=\"https://www.weforum.org/agenda/2022/04/website-technologies-pandemic/\" target=\"_blank\" rel=\"nofollow noopener\"\u003eWorld Economic Forum\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eAs a result there are a lot more potential vulnerabilities to exploit. \u003ca href=\"https://stackoverflow.blog/2024/03/04/in-rust-we-trust-white-house-office-urges-memory-safety/\" target=\"_blank\" rel=\"nofollow noopener\"\u003eStack Overflow\u003c/a\u003e points out that some of the biggest vulnerability events of the past were memory-safety issues.\u003c/p\u003e\n\u003cp\u003eThese include 2014’s \u003ca href=\"https://heartbleed.com/\" target=\"_blank\" rel=\"nofollow noopener\"\u003eHeartbleed\u003c/a\u003e, which affected OpenSSL software allowing bad actors to steal X.509 certificates, usernames and passwords, instant messages, and emails. In 2017, the \u003ca href=\"https://en.wikipedia.org/wiki/WannaCry_ransomware_attack\" target=\"_blank\" rel=\"nofollow noopener\"\u003eWannaCry\u003c/a\u003e ransomware attack garnered massive attention as it spread globally, infecting more than 230,000 computers.\u003c/p\u003e\n\u003cp\u003eA new \u003ca href=\"https://cdn.revolut.com/pdf/Revolut_Consumer_Security_Report_H1_2024.pdf\" target=\"_blank\" rel=\"nofollow noopener\"\u003eConsumer Security and Financial Crime\u003c/a\u003e Report from Revolut points to Meta platforms as the biggest source of all scams (62%) globally during the first half of 2024. Revolut identified that Facebook had fraud volumes (39%) which were more than double that of WhatsApp (18%).\u003c/p\u003e\n\u003ch2\u003eMaking C++ safe\u003c/h2\u003e\n\u003cp\u003eMemory safe languages do exist and include Rust, Go, Java, Swift, and Python. C++ is under particular scrutiny because of the amount of critical code that has been written in it.\u003c/p\u003e\n\u003cp\u003eGiven the context, it isn’t so surprising that the C++ community has reacted, announcing the \u003ca href=\"https://safecpp.org/P3390R0.html\" target=\"_blank\" rel=\"nofollow noopener\"\u003eSafe C++ Extensions\u003c/a\u003e proposal in September of this year. ​​The work is being done via the C++ Alliance, and its president and executive director \u003ca href=\"https://cppalliance.org/vinnie/2024/09/12/Safe-Cpp-Partnership.html\" target=\"_blank\" rel=\"nofollow noopener\"\u003eVinnie Falco\u003c/a\u003e said that this was, “a revolutionary proposal that adds memory safety features to the C++ programming language.”\u003c/p\u003e\n\u003cp\u003eFalco added that: “the need for safe code has never been more pressing. With the increasing importance of software security and reliability, \u003ca href=\"https://thenextweb.com/topic/software-developer\" target=\"_blank\" rel=\"noopener\"\u003edevelopers\u003c/a\u003e are facing mounting pressure to adopt safer coding practices. The Safe C++ Extensions aim to address this critical need by introducing novel features that prevent common memory-related errors.”\u003c/p\u003e\n\u003cp\u003eSo will this fix the issue? Some critics are skeptical, and the developer from the C++ Alliance, Sean Baxter \u003ca href=\"https://safecpp.org/P3390R0.html\" target=\"_blank\" rel=\"nofollow noopener\"\u003epoints out that\u003c/a\u003e:\u003c/p\u003e\n\u003cp\u003e“There’s only one popular systems level/non-garbage collected language that provides rigorous memory safety. That’s the Rust language. Although they play in the same space, C++ and Rust have different designs with limited interop capability, making incremental migration from C++ to Rust a painstaking process.”\u003c/p\u003e\n\u003cp\u003eA number of actions are suggested to ensure performant C++ code, including prohibiting developers from writing operations that might result in lifetime safety, type safety, or thread safety undefined behaviors.\u003c/p\u003e\n\u003cp\u003eAdditionally, there are other challenges, with Baxter pointing out that, “Although they play in the same space, C++ and Rust have different designs with limited interop capability, making incremental migration from C++ to Rust a painstaking process.”\u003c/p\u003e\n\u003cp\u003eMoving code to memory safe status will be painstaking and time-consuming, but the \u003ca href=\"https://www.darpa.mil/program/translating-all-c-to-rust\" target=\"_blank\" rel=\"nofollow noopener\"\u003eDefense Advanced Research Projects Agency\u003c/a\u003e (DARPA) is seeking to bridge this gap using AI. It is developing a programmatic code conversion vehicle called TRACTOR (Translating All C TO Rust).\u003c/p\u003e\n\u003cp\u003eIt says that, “the goal is to achieve the same quality and style that a skilled Rust developer would produce, thereby eliminating the entire class of memory safety security vulnerabilities present in C programs.”\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eReady to find your next software role? Check out \u003ca href=\"https://talent.thenextweb.com/job-board/?source=article\u0026amp;utm_source=article\u0026amp;utm_medium=content\u0026amp;utm_campaign=TNW4224\"\u003eThe Next Web Job Board\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n                        \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": "2024-10-15T10:39:35Z",
  "modifiedTime": "2024-10-15T10:39:35Z"
}
