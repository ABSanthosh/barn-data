{
  "id": "e7b47e8a-6674-4afb-8181-c4e70066b496",
  "title": "A Console-Friendly Pastebin with binary support",
  "link": "https://paste.c-net.org/",
  "description": "Comments",
  "author": "",
  "published": "Sun, 20 Oct 2024 23:08:42 +0000",
  "source": "https://news.ycombinator.com/rss",
  "categories": null,
  "byline": "",
  "length": 5788,
  "excerpt": "A console friendly, advertising free, no hassle, pastebin that allows binary files. Bash scripts included.",
  "siteName": "",
  "favicon": "https://paste.c-net.org/apple-touch-icon.png",
  "text": "==================================( Welcome )=================================== This is a console friendly pastebin that allows binary files. No fancy website, no intermediate pages to click through, and no CAPTCHAs. Submit a file using POST, or PUT, and get a URL back. Access the URL to get your file, or share it with others. The URL generator uses readable English word combinations that are easy to remember, in case you happen to be physically running between terminals. Generated URL's are not case sensitive. This includes the UUID's and random strings. ================================================================================ ===========================( Support Free Services )============================ If you want to help us keep the lights on and the servers powered, you can buy us a coffee at https://www.buymeacoffee.com/cnet ================================================================================ ==================================( Settings )================================== Contact: pastebin@cathedral-networks.org Maximum file size: 50M Files expire after: 180 days * File expiration will be reset to 180 days every time a file is accessed. Thus, a file that is accessed more often than this will never expire. * HEAD requests are sufficient to reset the expiration: $ curl --head https://paste.c-net.org/ExampleRenew ================================================================================ ==================================( Examples )================================== Upload text using curl: $ curl -s --data 'Hello World!' 'https://paste.c-net.org/' Upload text using wget: $ wget --quiet -O- --post-data='Hello World!' 'https://paste.c-net.org/' Upload a file using curl: $ curl --upload-file '/tmp/file' 'https://paste.c-net.org/' $ curl --upload-file - 'https://paste.c-net.org/' \u003c'/tmp/file' $ curl -s --data-binary @'/tmp/file' 'https://paste.c-net.org/' Upload a file using wget: $ wget --quiet -O- --post-file='/tmp/file' 'https://paste.c-net.org/' Upload using nc: $ echo 'Hello World!' | nc paste.c-net.org 9999 $ dmesg | nc paste.c-net.org 9999 $ nc paste.c-net.org 9999 \u003c'/tmp/file' Upload the output of a command or script using curl: $ ls / | curl -s --data-binary @- 'https://paste.c-net.org/' $ ./bin/hello_world | curl --upload-file - 'https://paste.c-net.org/' $ ./bin/hello_world | curl -s --data-binary @- 'https://paste.c-net.org/' Get a UUID paste name that's pretty much impossible to guess: $ echo 'Hello World!' | curl -s -H \"x-uuid;\" --upload-file - 'https://paste.c-net.org/' https://paste.c-net.org/adcf5eaa-dead-beef-cafe-13371bff862e ...or a somewhat shorter, random string, as used by other pastebins: $ echo 'Hello World!' | curl -s -H \"x-random;\" --upload-file - 'https://paste.c-net.org/' https://paste.c-net.org/l33tb4rf Get a JSON response, including a delete_key: $ echo 'This can be removed later' | curl -s -H \"Accept: application/json, */*\" --upload-file - 'https://paste.c-net.org/' To delete the file, issue a DELETE request, putting the key in a header: $ curl -X DELETE -H \"X-Delete-Key: key_goes_here\" 'https://paste.c-net.org/ExamplePaste' ================================================================================ ===============================( Bash Functions )=============================== You can easily upload and download files and text using Bash functions. Put the following lines in, for instance, ~/.bashrc for your convenience: pastebin() { local url='https://paste.c-net.org/' if (( $# )); then local file for file; do curl -s \\ --data-binary @\"$file\" \\ --header \"X-FileName: ${file##*/}\" \\ \"$url\" done else curl -s --data-binary @- \"$url\" fi } pasteget() { local url='https://paste.c-net.org/' if (( $# )); then local arg for arg; do curl -s \"${url}${arg##*/}\" done else local arg while read -r arg; do curl -s \"${url}${arg##*/}\" done fi } Usage: $ pastebin ./my/file.bin ./my/file2.bin https://paste.c-net.org/ExampleOne https://paste.c-net.org/ExampleTwo $ { printf '%s\\n' \"-- MY DMESG --\"; dmesg; } | pastebin https://paste.c-net.org/ExampleThree $ pasteget ExampleThree -- MY DMESG -- [...] Insane usage: $ echo \"This is a test.\" | pastebin | pasteget This is a test. ================================================================================ =========================( Privacy / Encrypted usage )========================== For sending secrets, or if you don't trust our promise not to snoop on your files, you can encrypt them before sending them to the server. 'pbenc' is a helpful script that encrypts your files with a passphrase, using the AES-256-CBC algorithm, allowing you to easily pass encrypted files to others, from the command line. Available here: https://paste.c-net.org/pbenc ================================================================================ ==============================( Terms of Service )============================== This is written in plain English, so don't pretend you didn't understand it! Don't break the law, don't post illegal shit, don't be an asshole. You know this, we know you know this, and you know we know you know. By using this service, you consent to these terms. ================================================================================ =========================( Obligatory XKCD Reference )========================== This service exists because sending files to people on the Internet should not be a daunting task of trial, error, and porn popups. XKCD explains it best: ================================================================================",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\n\n\u003cdiv id=\"overlay\"\u003e\n\u003cp\u003e\u003cimg id=\"floppyImage\" src=\"https://paste.c-net.org/floppy.svg\" alt=\"Floppy Disk\"/\u003e\n\u003cimg id=\"uploadImage\" src=\"https://paste.c-net.org/upload.svg\" alt=\"Upload\"/\u003e\n\u003c/p\u003e\n\u003c/div\u003e\n\n\n\n\u003cpre\u003e==================================( Welcome )===================================\nThis is a console friendly pastebin that allows binary files.\nNo fancy website, no intermediate pages to click through, and no CAPTCHAs.\n\nSubmit a file using POST, or PUT, and get a URL back.\nAccess the URL to get your file, or share it with others.\n\nThe URL generator uses readable English word combinations that are easy to\nremember, in case you happen to be physically running between terminals.\n\nGenerated URL\u0026#39;s are not case sensitive. This includes the UUID\u0026#39;s and\nrandom strings.\n================================================================================\n\n===========================( Support Free Services )============================\nIf you want to help us keep the lights on and the servers powered, you can buy\nus a coffee at \u003ca href=\"https://www.buymeacoffee.com/cnet\"\u003ehttps://www.buymeacoffee.com/cnet\u003c/a\u003e\n================================================================================\n\n==================================( Settings )==================================\nContact: pastebin@cathedral-networks.org\nMaximum file size: 50M\nFiles expire after: 180 days\n    * File expiration will be reset to 180 days every time a file is accessed.\n      Thus, a file that is accessed more often than this will never expire.\n    * HEAD requests are sufficient to reset the expiration:\n      $ curl --head https://paste.c-net.org/ExampleRenew\n================================================================================\n\n==================================( Examples )==================================\nUpload text using curl:\n$ curl -s --data \u0026#39;Hello World!\u0026#39; \u0026#39;https://paste.c-net.org/\u0026#39;\n\nUpload text using wget:\n$ wget --quiet -O- --post-data=\u0026#39;Hello World!\u0026#39; \u0026#39;https://paste.c-net.org/\u0026#39;\n\nUpload a file using curl:\n$ curl --upload-file \u0026#39;/tmp/file\u0026#39; \u0026#39;https://paste.c-net.org/\u0026#39;\n$ curl --upload-file - \u0026#39;https://paste.c-net.org/\u0026#39; \u0026lt;\u0026#39;/tmp/file\u0026#39;\n$ curl -s --data-binary @\u0026#39;/tmp/file\u0026#39; \u0026#39;https://paste.c-net.org/\u0026#39;\n\nUpload a file using wget:\n$ wget --quiet -O- --post-file=\u0026#39;/tmp/file\u0026#39; \u0026#39;https://paste.c-net.org/\u0026#39;\n\nUpload using nc:\n$ echo \u0026#39;Hello World!\u0026#39; | nc paste.c-net.org 9999\n$ dmesg | nc paste.c-net.org 9999\n$ nc paste.c-net.org 9999 \u0026lt;\u0026#39;/tmp/file\u0026#39;\n\nUpload the output of a command or script using curl:\n$ ls / | curl -s --data-binary @- \u0026#39;https://paste.c-net.org/\u0026#39;\n$ ./bin/hello_world | curl --upload-file - \u0026#39;https://paste.c-net.org/\u0026#39;\n$ ./bin/hello_world | curl -s --data-binary @- \u0026#39;https://paste.c-net.org/\u0026#39;\n\nGet a UUID paste name that\u0026#39;s pretty much impossible to guess:\n$ echo \u0026#39;Hello World!\u0026#39; | curl -s -H \u0026#34;x-uuid;\u0026#34; --upload-file - \u0026#39;https://paste.c-net.org/\u0026#39;\nhttps://paste.c-net.org/adcf5eaa-dead-beef-cafe-13371bff862e\n\n...or a somewhat shorter, random string, as used by other pastebins:\n$ echo \u0026#39;Hello World!\u0026#39; | curl -s -H \u0026#34;x-random;\u0026#34; --upload-file - \u0026#39;https://paste.c-net.org/\u0026#39;\nhttps://paste.c-net.org/l33tb4rf\n\nGet a JSON response, including a delete_key:\n$ echo \u0026#39;This can be removed later\u0026#39; | curl -s -H \u0026#34;Accept: application/json, */*\u0026#34; --upload-file - \u0026#39;https://paste.c-net.org/\u0026#39;\nTo delete the file, issue a DELETE request, putting the key in a header:\n$ curl -X DELETE -H \u0026#34;X-Delete-Key: key_goes_here\u0026#34; \u0026#39;https://paste.c-net.org/ExamplePaste\u0026#39;\n================================================================================\n\n===============================( Bash Functions )===============================\nYou can easily upload and download files and text using Bash functions.\nPut the following lines in, for instance, ~/.bashrc for your convenience:\n\npastebin()\n{\n    local url=\u0026#39;https://paste.c-net.org/\u0026#39;\n    if (( $# )); then\n        local file\n        for file; do\n            curl -s \\\n                --data-binary @\u0026#34;$file\u0026#34; \\\n                --header \u0026#34;X-FileName: ${file##*/}\u0026#34; \\\n                \u0026#34;$url\u0026#34;\n        done\n    else\n        curl -s --data-binary @- \u0026#34;$url\u0026#34;\n    fi\n}\npasteget()\n{\n    local url=\u0026#39;https://paste.c-net.org/\u0026#39;\n    if (( $# )); then\n        local arg\n        for arg; do\n            curl -s \u0026#34;${url}${arg##*/}\u0026#34;\n        done\n    else\n        local arg\n        while read -r arg; do\n            curl -s \u0026#34;${url}${arg##*/}\u0026#34;\n        done\n    fi\n}\n\nUsage:\n$ pastebin ./my/file.bin ./my/file2.bin\nhttps://paste.c-net.org/ExampleOne\nhttps://paste.c-net.org/ExampleTwo\n$ { printf \u0026#39;%s\\n\u0026#39; \u0026#34;-- MY DMESG --\u0026#34;; dmesg; } | pastebin\nhttps://paste.c-net.org/ExampleThree\n$ pasteget ExampleThree\n-- MY DMESG --\n[...]\n\nInsane usage:\n$ echo \u0026#34;This is a test.\u0026#34; | pastebin | pasteget\nThis is a test.\n================================================================================\n\n=========================( Privacy / Encrypted usage )==========================\nFor sending secrets, or if you don\u0026#39;t trust our promise not to snoop on your\nfiles, you can encrypt them before sending them to the server.\n\n\u0026#39;pbenc\u0026#39; is a helpful script that encrypts your files with a passphrase, using\nthe AES-256-CBC algorithm, allowing you to easily pass encrypted files to\nothers, from the command line.\n\nAvailable here:\n\u003ca href=\"https://paste.c-net.org/pbenc\"\u003ehttps://paste.c-net.org/pbenc\u003c/a\u003e\n================================================================================\n\n==============================( Terms of Service )==============================\nThis is written in plain English, so don\u0026#39;t pretend you didn\u0026#39;t understand it!\nDon\u0026#39;t break the law, don\u0026#39;t post illegal shit, don\u0026#39;t be an asshole.\nYou know this, we know you know this, and you know we know you know.\nBy using this service, you consent to these terms.\n================================================================================\n\n=========================( Obligatory XKCD Reference )==========================\nThis service exists because sending files to people on the Internet should not\nbe a daunting task of trial, error, and porn popups. XKCD explains it best:\n\n\u003ca href=\"https://xkcd.com/949/\" target=\"_blank\"\u003e\u003cimg src=\"https://paste.c-net.org/file_transfer.png\" alt=\"XKCD - File Sharing\"/\u003e\u003c/a\u003e\n================================================================================\u003c/pre\u003e\n\n\n\n\n\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": null,
  "modifiedTime": null
}
