{
  "id": "270d30dd-dc14-4fd2-a982-119b54fd84cf",
  "title": "DEDA – Tracking Dots Extraction, Decoding and Anonymisation Toolkit",
  "link": "https://github.com/dfd-tud/deda",
  "description": "Comments",
  "author": "",
  "published": "Tue, 01 Apr 2025 21:11:43 +0000",
  "source": "https://news.ycombinator.com/rss",
  "categories": null,
  "byline": "dfd-tud",
  "length": 4780,
  "excerpt": "Contribute to dfd-tud/deda development by creating an account on GitHub.",
  "siteName": "GitHub",
  "favicon": "https://github.githubassets.com/assets/apple-touch-icon-180x180-a80b8e11abe2.png",
  "text": "DEDA - tracking Dots Extraction, Decoding and Anonymisation toolkit Document Colour Tracking Dots, or yellow dots, are small systematic dots which encode information about the printer and/or the printout itself. This process is integrated in almost every commercial colour laser printer. This means that almost every printout contains coded information about the source device, such as the serial number. On the one hand, this tool gives the possibility to read out and decode these forensic features and on the other hand, it allows anonymisation to prevent arbitrary tracking. If you use this software, please cite the paper: Timo Richter, Stephan Escher, Dagmar Schönfeld, and Thorsten Strufe. 2018. Forensic Analysis and Anonymisation of Printed Documents. In Proceedings of the 6th ACM Workshop on Information Hiding and Multimedia Security (IH\u0026MMSec '18). ACM, New York, NY, USA, 127-138. DOI: https://doi.org/10.1145/3206004.3206019 Installation Install Python 3 Install Deda From PyPI: $ pip3 install --user deda Or from current directory: $ pip3 install --user . Optional requirement by deda_anonmask_apply (Unix and GNU/Linux only): $ pip3 install --user wand Without Wand, pages containing white areas on images cannot be anonymised. Graphical User Interface To open the GUI type: $ deda_gui Terminal Application 1. Reading tracking data Tracking data can be read and sometimes be decoded from a scanned image. For good results the input shall use a lossless compression (e.g. png) and 300 dpi. Make sure to set a neutral contrast $ deda_parse_print INPUTFILE 2. Find a divergent printer in a set of scanned documents $ deda_compare_prints INPUT1 INPUT2 [INPUT3] ... 3. Analysing an unknown tracking pattern New patterns might not be recognised by parse_print. The dots can be extracted for further analysis. $ deda_extract_yd INPUTFILE 4. Create your own tracking dots If you want to create your own tracking dots matrix and add it to a pdf document, pass the contents as parameters (see deda_create_dots -h). $ deda_create_dots PDFINPUT The calibration page ($ deda_anonmask_create -w) may be used as an input. 5. Anonymise a scanned image This (mostly) removes tracking data from a scan: $ deda_clean_document INPUTFILE OUTPUTFILE 6. Anonymise a document for printing Save your document as a PDF file and call it DOCUMENT.PDF. Print the testpage.pdf file created by $ deda_anonmask_create -w without any page margin. Scan the document (300 dpi) and pass the lossless file to $ deda_anonmask_create -r INPUTFILE This creates 'mask.json', the individual printer's anonymisation mask. Now apply the anonymisation mask: $ deda_anonmask_apply mask.json DOCUMENT.PDF This creates 'masked.pdf', the anonymised document. It may be printed with a zero page margin setting. Check whether a masked page covers your printer's tracking dots by using a microscope. The mask's dot radius, x and y offsets can be customised and passed to deda_anonmask_apply as parameters. Note that if DOCUMENT.PDF contains graphics with white or light coloured parts, these can only be masked if \"wand\" is installed (see above). Troubleshooting deda_parse_print: command not found Possible solutions: Install deda accordig to chapter 0 Execute $ export PATH=\"$PATH:$(python -c 'import site,os; print(os.path.join(site.USER_BASE, \"bin\"))')\" Deda does not recognise my tracking dots Set up your scan program so that it does not eliminate the paper structure nor tracking dots by some threshold and check again. Remember that monochrome pages as well as inkjet prints might not contain tracking dots. My printer does not print tracking dots. Can I hide this fact? If there are really no tracking dots, you can either create your own ones (deda_create_dots) or print the calibration page (deda_anonmask_create -w) with another printer and use the mask for your own printer. You can use the anonymised version of the tracking dots or just copy them (deda_anonmask_create --copy). See chapters \"Anonymise a document for printing\" and \"Create your own tracking dots\". Install Error: command 'x86_64-linux-gnu-gcc' failed with exit status 1 This may be caused by the eel dependency which is needed for the GUI. Try $ sudo apt-get install build-essential autoconf libtool pkg-config python3.6-dev gcc \u0026\u0026 pip3 install --user eel wand.exceptions.PolicyError: attempt to perform an operation not allowed by the security policy PDF' @ error/constitute.c/IsCoderAuthorized/408 This is being caused by ImageMagick. Either remove Wand (pip3 uninstall wand) or add \u003cpolicy domain=\"coder\" rights=\"read | write\" pattern=\"PDF\" /\u003e just before \u003c/policymap\u003e in /etc/ImageMagick-*/policy.xml. See also https://stackoverflow.com/questions/52998331/imagemagick-security-policy-pdf-blocking-conversion.",
  "image": "https://opengraph.githubassets.com/6c66e5b8149545d08daa236ba75a2e0455a0feefd2abe3a1227f0636cac80159/dfd-tud/deda",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv data-hpc=\"true\"\u003e\u003carticle itemprop=\"text\"\u003e\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eDEDA - tracking Dots Extraction, Decoding and Anonymisation toolkit\u003c/h2\u003e\u003ca id=\"user-content-deda---tracking-dots-extraction-decoding-and-anonymisation-toolkit\" aria-label=\"Permalink: DEDA - tracking Dots Extraction, Decoding and Anonymisation toolkit\" href=\"#deda---tracking-dots-extraction-decoding-and-anonymisation-toolkit\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eDocument Colour Tracking Dots, or yellow dots, are small systematic dots which encode information about the printer and/or the printout itself. This process is integrated in almost every commercial colour laser printer. This means that almost every printout contains coded information about the source device, such as the serial number.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eOn the one hand, this tool gives the possibility to read out and decode these forensic features and on the other hand, it allows anonymisation to prevent arbitrary tracking.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eIf you use this software, please cite the paper:\nTimo Richter, Stephan Escher, Dagmar Schönfeld, and Thorsten Strufe. 2018. Forensic Analysis and Anonymisation of Printed Documents. In Proceedings of the 6th ACM Workshop on Information Hiding and Multimedia Security (IH\u0026amp;MMSec \u0026#39;18). ACM, New York, NY, USA, 127-138. DOI: \u003ca href=\"https://doi.org/10.1145/3206004.3206019\" rel=\"nofollow\"\u003ehttps://doi.org/10.1145/3206004.3206019\u003c/a\u003e\u003c/p\u003e\n\u003chr/\u003e\n\u003cp dir=\"auto\"\u003e\u003ch4 tabindex=\"-1\" dir=\"auto\"\u003eInstallation\u003c/h4\u003e\u003ca id=\"user-content-installation\" aria-label=\"Permalink: Installation\" href=\"#installation\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eInstall Python 3\u003c/li\u003e\n\u003cli\u003eInstall Deda\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003eFrom PyPI:\n\u003ccode\u003e$ pip3 install --user deda\u003c/code\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eOr from current directory:\n\u003ccode\u003e$ pip3 install --user .\u003c/code\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eOptional requirement by deda_anonmask_apply (Unix and GNU/Linux only):\n\u003ccode\u003e$ pip3 install --user wand\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003eWithout Wand, pages containing white areas on images cannot be anonymised.\u003c/p\u003e\n\u003chr/\u003e\n\u003cp dir=\"auto\"\u003e\u003ch4 tabindex=\"-1\" dir=\"auto\"\u003eGraphical User Interface\u003c/h4\u003e\u003ca id=\"user-content-graphical-user-interface\" aria-label=\"Permalink: Graphical User Interface\" href=\"#graphical-user-interface\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eTo open the GUI type:\n\u003ccode\u003e$ deda_gui\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr/\u003e\n\u003cp dir=\"auto\"\u003e\u003ch4 tabindex=\"-1\" dir=\"auto\"\u003eTerminal Application\u003c/h4\u003e\u003ca id=\"user-content-terminal-application\" aria-label=\"Permalink: Terminal Application\" href=\"#terminal-application\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch5 tabindex=\"-1\" dir=\"auto\"\u003e1. Reading tracking data\u003c/h5\u003e\u003ca id=\"user-content-1-reading-tracking-data\" aria-label=\"Permalink: 1. Reading tracking data\" href=\"#1-reading-tracking-data\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eTracking data can be read and sometimes be decoded from a scanned image. For good results the input shall use a lossless compression (e.g. png) and 300 dpi. Make sure to set a neutral contrast\n\u003ccode\u003e$ deda_parse_print INPUTFILE\u003c/code\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch5 tabindex=\"-1\" dir=\"auto\"\u003e2. Find a divergent printer in a set of scanned documents\u003c/h5\u003e\u003ca id=\"user-content-2-find-a-divergent-printer-in-a-set-of-scanned-documents\" aria-label=\"Permalink: 2. Find a divergent printer in a set of scanned documents\" href=\"#2-find-a-divergent-printer-in-a-set-of-scanned-documents\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ccode\u003e$ deda_compare_prints INPUT1 INPUT2 [INPUT3] ...\u003c/code\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch5 tabindex=\"-1\" dir=\"auto\"\u003e3. Analysing an unknown tracking pattern\u003c/h5\u003e\u003ca id=\"user-content-3-analysing-an-unknown-tracking-pattern\" aria-label=\"Permalink: 3. Analysing an unknown tracking pattern\" href=\"#3-analysing-an-unknown-tracking-pattern\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eNew patterns might not be recognised by parse_print. The dots can be extracted\nfor further analysis.\u003cbr/\u003e\n\u003ccode\u003e$ deda_extract_yd INPUTFILE\u003c/code\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch5 tabindex=\"-1\" dir=\"auto\"\u003e4. Create your own tracking dots\u003c/h5\u003e\u003ca id=\"user-content-4-create-your-own-tracking-dots\" aria-label=\"Permalink: 4. Create your own tracking dots\" href=\"#4-create-your-own-tracking-dots\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eIf you want to create your own tracking dots matrix and add it to a pdf\ndocument, pass the contents as parameters (see \u003ccode\u003ededa_create_dots -h\u003c/code\u003e).\n\u003ccode\u003e$ deda_create_dots PDFINPUT\u003c/code\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eThe calibration page (\u003ccode\u003e$ deda_anonmask_create -w\u003c/code\u003e) may be used as an input.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch5 tabindex=\"-1\" dir=\"auto\"\u003e5. Anonymise a scanned image\u003c/h5\u003e\u003ca id=\"user-content-5-anonymise-a-scanned-image\" aria-label=\"Permalink: 5. Anonymise a scanned image\" href=\"#5-anonymise-a-scanned-image\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eThis (mostly) removes tracking data from a scan:\u003cbr/\u003e\n\u003ccode\u003e$ deda_clean_document INPUTFILE OUTPUTFILE\u003c/code\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch5 tabindex=\"-1\" dir=\"auto\"\u003e6. Anonymise a document for printing\u003c/h5\u003e\u003ca id=\"user-content-6-anonymise-a-document-for-printing\" aria-label=\"Permalink: 6. Anonymise a document for printing\" href=\"#6-anonymise-a-document-for-printing\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003eSave your document as a PDF file and call it DOCUMENT.PDF.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003ePrint the testpage.pdf file created by\u003cbr/\u003e\n\u003ccode\u003e$ deda_anonmask_create -w\u003c/code\u003e\u003cbr/\u003e\nwithout any page margin.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003eScan the document (300 dpi) and pass the lossless file to\u003cbr/\u003e\n\u003ccode\u003e$ deda_anonmask_create -r INPUTFILE\u003c/code\u003e\u003cbr/\u003e\nThis creates \u0026#39;mask.json\u0026#39;, the individual printer\u0026#39;s anonymisation mask.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003eNow apply the anonymisation mask:\u003cbr/\u003e\n\u003ccode\u003e$ deda_anonmask_apply mask.json DOCUMENT.PDF\u003c/code\u003e\nThis creates \u0026#39;masked.pdf\u0026#39;, the anonymised document. It may be printed with a\nzero page margin setting.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003eCheck whether a masked page covers your printer\u0026#39;s tracking dots by using a\nmicroscope. The mask\u0026#39;s dot radius, x and y offsets can be customised and\npassed to \u003ccode\u003ededa_anonmask_apply\u003c/code\u003e as parameters.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eNote that if DOCUMENT.PDF contains graphics with white or light coloured parts, these can only be masked if \u0026#34;wand\u0026#34; is installed (see above).\u003c/p\u003e\n\u003chr/\u003e\n\u003cp dir=\"auto\"\u003e\u003ch4 tabindex=\"-1\" dir=\"auto\"\u003eTroubleshooting\u003c/h4\u003e\u003ca id=\"user-content-troubleshooting\" aria-label=\"Permalink: Troubleshooting\" href=\"#troubleshooting\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch5 tabindex=\"-1\" dir=\"auto\"\u003ededa_parse_print: command not found\u003c/h5\u003e\u003ca id=\"user-content-deda_parse_print-command-not-found\" aria-label=\"Permalink: deda_parse_print: command not found\" href=\"#deda_parse_print-command-not-found\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003ePossible solutions:\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eInstall deda accordig to chapter 0\u003c/li\u003e\n\u003cli\u003eExecute\n\u003ccode\u003e$ export PATH=\u0026#34;$PATH:$(python -c \u0026#39;import site,os; print(os.path.join(site.USER_BASE, \u0026#34;bin\u0026#34;))\u0026#39;)\u0026#34;\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch5 tabindex=\"-1\" dir=\"auto\"\u003eDeda does not recognise my tracking dots\u003c/h5\u003e\u003ca id=\"user-content-deda-does-not-recognise-my-tracking-dots\" aria-label=\"Permalink: Deda does not recognise my tracking dots\" href=\"#deda-does-not-recognise-my-tracking-dots\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eSet up your scan program so that it does not eliminate the paper structure nor tracking dots by some threshold and check again. Remember that monochrome pages as well as inkjet prints might not contain tracking dots.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch5 tabindex=\"-1\" dir=\"auto\"\u003eMy printer does not print tracking dots. Can I hide this fact?\u003c/h5\u003e\u003ca id=\"user-content-my-printer-does-not-print-tracking-dots-can-i-hide-this-fact\" aria-label=\"Permalink: My printer does not print tracking dots. Can I hide this fact?\" href=\"#my-printer-does-not-print-tracking-dots-can-i-hide-this-fact\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eIf there are really no tracking dots, you can either create your own ones (\u003ccode\u003ededa_create_dots\u003c/code\u003e) or print the calibration page (\u003ccode\u003ededa_anonmask_create -w\u003c/code\u003e) with another printer and use the mask for your own printer. You can use the anonymised version of the tracking dots or just copy them (\u003ccode\u003ededa_anonmask_create --copy\u003c/code\u003e). See chapters \u0026#34;Anonymise a document for printing\u0026#34; and \u0026#34;Create your own tracking dots\u0026#34;.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch5 tabindex=\"-1\" dir=\"auto\"\u003eInstall Error: command \u0026#39;x86_64-linux-gnu-gcc\u0026#39; failed with exit status 1\u003c/h5\u003e\u003ca id=\"user-content-install-error-command-x86_64-linux-gnu-gcc-failed-with-exit-status-1\" aria-label=\"Permalink: Install Error: command \u0026#39;x86_64-linux-gnu-gcc\u0026#39; failed with exit status 1\" href=\"#install-error-command-x86_64-linux-gnu-gcc-failed-with-exit-status-1\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eThis may be caused by the eel dependency which is needed for the GUI. Try\n\u003ccode\u003e$ sudo apt-get install build-essential autoconf libtool pkg-config python3.6-dev gcc \u0026amp;\u0026amp; pip3 install --user eel\u003c/code\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch5 tabindex=\"-1\" dir=\"auto\"\u003ewand.exceptions.PolicyError: attempt to perform an operation not allowed by the security policy PDF\u0026#39; @ error/constitute.c/IsCoderAuthorized/408\u003c/h5\u003e\u003ca id=\"user-content-wandexceptionspolicyerror-attempt-to-perform-an-operation-not-allowed-by-the-security-policy-pdf--errorconstituteciscoderauthorized408\" aria-label=\"Permalink: wand.exceptions.PolicyError: attempt to perform an operation not allowed by the security policy PDF\u0026#39; @ error/constitute.c/IsCoderAuthorized/408\" href=\"#wandexceptionspolicyerror-attempt-to-perform-an-operation-not-allowed-by-the-security-policy-pdf--errorconstituteciscoderauthorized408\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eThis is being caused by ImageMagick. Either remove Wand (\u003ccode\u003epip3 uninstall wand\u003c/code\u003e) or add \u003ccode\u003e\u0026lt;policy domain=\u0026#34;coder\u0026#34; rights=\u0026#34;read | write\u0026#34; pattern=\u0026#34;PDF\u0026#34; /\u0026gt;\u003c/code\u003e just before \u003ccode\u003e\u0026lt;/policymap\u0026gt;\u003c/code\u003e in /etc/ImageMagick-*/policy.xml. See also \u003ca href=\"https://stackoverflow.com/questions/52998331/imagemagick-security-policy-pdf-blocking-conversion\" rel=\"nofollow\"\u003ehttps://stackoverflow.com/questions/52998331/imagemagick-security-policy-pdf-blocking-conversion\u003c/a\u003e.\u003c/p\u003e\n\u003c/article\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": null,
  "modifiedTime": null
}
