{
  "id": "845bc136-eeba-4971-b1fa-8d05d712bdcf",
  "title": "The motor turns too much",
  "link": "https://www.projectgus.com/2024/01/kona-motor-turns/",
  "description": "Comments",
  "author": "",
  "published": "Mon, 28 Oct 2024 12:29:57 +0000",
  "source": "https://news.ycombinator.com/rss",
  "categories": null,
  "byline": "",
  "length": 11804,
  "excerpt": "(Posting this one a while after it happened, due to holidays.)",
  "siteName": "",
  "favicon": "",
  "text": "(Posting this one a while after it happened, due to holidays.) This instalment is about the \"Bench Kona\" I've built in the shed. Behold its questionable integrity: You can see the motor and drive unit stack in the foreground, and the battery pack in the background under some junk. These are all the same part assemblies that came out of the crashed Kona, with their original wiring. All of the high voltage connections are exactly the same as in the car, including interlocks and seals. The bench holds other modules taken from the engine bay and the interior of the car, plus large segments of the original wiring (now unwrapped, cut, spliced, and converted into a tangled mess). The green wooden bench was \"obtainium\" that my mate Oli donated. It's far from perfect, but it has the very attractive property that we can cut it, screw into it, and generally mess with it as much as we want. Why would you do this? Like every modern car, the Hyundai Kona Electric is absurdly complicated. More than five separate CAN buses, ten or more kilograms of low voltage wiring, probably over one hundred electronic modules (most with their own CPU and firmware), etc. In order to re-purpose the Kona's powertrain into an EV conversion, we need to find the simplest subset of modules that can work together. Hence, a reverse engineering experiment: the Bench Kona. Plan The rough plan has been: Wire together modules on the bench until the motor turns, and the traction battery can be charged. Progressively remove modules, replacing them with fake CAN messages or other signals. The goal is to find the minimum that will still work. Document this, and design some kind of \"Kona meta-VCU\" that allows the Kona's VCU (Vehicle Control Unit) to drive the motor in an EV conversion. Celebrate wildly, should this step ever be reached. It's important to note that absolutely none of the techniques used to wire up the Bench Kona translate over to a real moving vehicle. This is strictly for reverse engineering purposes. Looming I was able to drape most of the engine bay wiring loom and some of the cabin loom over the bench. The strategy was to find particular wires in the inter-loom connectors and cut them out when needed. Hopefully, once everything works then it'll be straightforward to remove what's left and dramatically reduce the rats nest qualities of this setup: A special mention for these lever-action wire connectors: They're very easy to connect and disconnect, and so far they've been reliable.1 These ones are from Taobao, but looks like they're also on Aliexpress. Elsewhere crimp ferrules and screw terminals were used, instead. The label maker came in particularly handy! Gateway Antics Hoping that the Kona had been engineered in a modular fashion, I was counting on finding some integration points that could be \"sliced\" apart without too much impact. This turned out to be partly true, although the Law of Leaky Abstractions seems to also apply to cars. The first module to eliminate was the Integrated Gateway and Power Module (IGPM): You may remember this module from Part One, when one of its connectors was accidentally damaged by forward probing... Bench Kona has to to replicate at least two functions of the IGPM: Switching power to some modules, especially \"IG3\" which seems to be the power when the car is \"half turned on\" (for example, when charging). Injecting some of the CAN messages that the IGPM forwards between the different buses. Switching power turned out to be pretty straightforward. Bench Kona has kept the original engine bay relay box for now. It still provides the main relays, large fuses, and the heavy-duty wiring for the DC/DC Converter and the 12V battery: A lot of power supply wiring comes out of this box, goes into the IGPM where it's split up into different power domains and individually fused. Then some of these individual power wires come back through the engine bay fuse box. To replace individual IGPM circuits and fuses, Bench Kona has a simple automotive fuse box: The \"IG3\" power supply that's normally switched inside the IGPM by firmware has been replaced by... a switch! Brakes I also wanted to leave out the \"Integrated Electronic Brake\" (IEB) module, if possible. This electric brake booster module incorporates ABS and traction control. This means it relies on input from wheel sensors, among other things. From CAN log analysis it seemed likely that we could spoof the messages from this module, instead. The Kona also has a redundant hard-wired brake signal, which connects the brake pedal to both the Vehicle Control Unit (VCU, part of the EPCU) and the Smart Key Module (SKM, for \"press brake before starting\"). The VCU also independently reads the inverse of this signal on a second wire. Initially a simple switch was used for this, but it turned out to be easier to mount the brake pedal itself, at least for the first version: Removing the return spring and mounting it like this means it can be pushed back and forward like a lever. Odd, but functional! The laptop would run a bench_kona.py program that injected the spoofed IEB CAN messages to the bus, with payloads corresponding to the vehicle sitting still with someone's foot on the brake. This seemed safe enough to me at the time. Narrator: As we shall see, this was not quite safe enough. Smart Key Module The Smart Key Module was shaping up to be the trickiest module. It contains a lot of logic around the various keyless entry features and door locks, and switches on the main ignition \"IG1\" and \"IG2\" power relays. The Bench Kona only needs a few of these functions, so maybe the SKM could be replaced with some switches for now? Unfortunately, the SKM also has three hard-wired connections to the VCU: \"P_STS PWM\", not sure what this is. \"EV Ready Backup\" signal. \"IMMO Signal\", assumed to be the vehicle immobiliser signal. Until/unless these can be spoofed, the Smart Key Module needs to behave as if it is operating normally in a real Kona. This means wiring in all of its various power connections, relay outputs, the car's \"push to start\" power button, and even some of the antennas: Plus the bench_kona.py program had to be augmented to send some spoofed BCAN (Body CAN bus) messages to the Smart Key Module's BCAN transceiver, so it thinks that the doors are closed, etc. And... nothing happens! After triple checking all my custom wiring, it was time to attach the 12V Battery and manully switch on \"IG3\" to start powering up. Various CAN messages appeared on the bus, a few relays clicked in, and... nothing else happend. The power button, attached directly to the Smart Key module, mostly sat silent but occasionally flashed through five mysterious amber blinks: Attempting to pull diagnostic codes from any of the vehicle components failed, presumably because the \"car\" was powered off. This left me back at the same awkward spot as last year with the BMW gear selector - a complex electronic system sitting there silent and inscrutable. RTFM After trying a lot of things that didn't work, I was reading Hyundai forums online discussing various \"won't power on\" issues and someone mentioned there was a failsafe \"limp home\" start method where you press the vehicle key into the power on button. Sure enough, it's right there in the Kona user manual: Pressing the key against the button, it would now replicate the \"five amber blinks\" sequence every time. Still, nothing else came to life... Steering Wheel Lock Going back to first principles, I started probing all of the inputs and outputs of the Smart Key Module to see if it did anything in particular when the button was pressed. It looks as if it very briefly tried to power up the Steering Wheel Lock module. This module hadn't been wired in, on the assumption that the Smart Key Module would not consider it a fatal error if it was totally missing. Turns out the steering wheel (complete with blown airbag) barely fits inside the bench: After wiring the steering wheel lock's data and power lines3, the car finally powered on: Such a glorious blue light! ðŸ¥³ I heard the tell-tale clunks of the main contactors closing in the traction battery pack, and the Bench Kona even went into Drive. However, the wheels wouldn't turn even with the brake pedal \"released\". The bench_kona.py program was spoofing CAN messages saying that someone was standing on the brake. Guessing that's why the motor doesn't turn... Motion Next step, update the bench_kona software and add an input to turn the brake on and off. A very sophisticated user interface: This is a bit clunky as there's a separate hard-wired brake pedal signal as well, but by this point the excitement of a possible breakthrough was making me impatient: Success? This is the motor in Drive steadily trying to \"creep\" forward,2 and also revving up once or twice due to a gentle accelerator press. Too much motion So far the Bench Kona has been put into Drive three times. I only filmed one of the tests, but the other two ended with uncontrolled motor acceleration! ðŸ˜±ðŸ˜±ðŸ˜± Seemingly nothing would stop the motor - even switching to Neutral, putting the brake on (via both switch and CAN), or totally stopping all spoofed CAN messages. After twenty or seconds of the motor spinning flat out, the motor controller flagged a \"Motor Excess Current\" fault code and it came to a stop. This was both unexpected and terrifying, and I realised how unprepared I'd been for this eventuality. I think what was happening is that the Vehicle Control Unit is running a control loop that outputs a motor torque request and reads wheel speed data as feedback. Because the bench_kona.py program was reporting fake 0 wheel speeds all round, the VCU's control loop assumed the torque it was requesting from the motor was either too low (when accelerating) or just fine (when not accelerating). So the controller only ever increased the torque request, or kept it at the same level. Even when I simulated pressing the brake it was like \"Nothing needs to change, we're not even moving!\" Meanwhile, the electric motor controller (MCU) is receiving the torque requests and frantically trying to achieve the requested motor torque by revving the unloaded motor faster and faster. This is an impossible task as the motor is spinning unloaded, so torque is minimal. This theory is a bit surprising, because you'd think the VCU would have some failsafe where it also reads RPM from the motor controller (after all, what happens if a driveshaft breaks and the wheels aren't turning on the real car?) It's pure guesswork at this stage, maybe the real logic is very different. That said, the internet does contain some supporting material. For example, there is a Hyundai patent about motor control that includes this signal diagram: (APS = Accelerator Position Sensor, BPS = Brake Position Sensor.) If zero wheel speed is the culprit, then all that's needed for appropriate motor control is to send spoofed wheel speed data that matches the current motor rpm. I think we know where the motor rpm signal is found out in the CAN messages, but I want to do more logging on a real Kona to be 100% sure. I don't ever want to trigger that uncontrolled acceleration state again! Not to mention that the Bench Kona now needs a few more features added, such as a rudimentary cooling system. It's also past time to write some microcontroller firmware, rather than little desktop Python programs. After all this, it's also possible that the VCU's black box control logic turns out to be too complicated to adapt into a reliable EV conversion. In that case, adapting something like the openinverter motor control board to the Kona's existing IGBT drivers may be the best way to give these parts a second life. We'll see... Stay tuned for the next update, hopefully soon!",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv itemprop=\"description articleBody\"\u003e\n\n\u003cp\u003e(Posting this one a while after it happened, due to holidays.)\u003c/p\u003e\n\u003cp\u003eThis instalment is about the \u0026#34;Bench Kona\u0026#34; I\u0026#39;ve built in the shed. Behold its questionable integrity:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.projectgus.com/images/2024-01/bench-kona.webp\"\u003e\u003cimg alt=\"Mess of Kona components and wires on a bench\" src=\"https://www.projectgus.com/images/2024-01/derivatives/article/1x/bench-kona.webp\" srcset=\"https://www.projectgus.com/images/2024-01/derivatives/article/1x/bench-kona.webp 1x, https://www.projectgus.com/images/2024-01/derivatives/article/2x/bench-kona.webp 2x, https://www.projectgus.com/images/2024-01/derivatives/article/4x/bench-kona.webp 4x\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.projectgus.com/images/2024-01/bench-kona-2.webp\"\u003e\u003cimg alt=\"Different angle, can also see the motor and the battery\" src=\"https://www.projectgus.com/images/2024-01/derivatives/article/1x/bench-kona-2.webp\" srcset=\"https://www.projectgus.com/images/2024-01/derivatives/article/1x/bench-kona-2.webp 1x, https://www.projectgus.com/images/2024-01/derivatives/article/2x/bench-kona-2.webp 2x, https://www.projectgus.com/images/2024-01/derivatives/article/4x/bench-kona-2.webp 4x\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eYou can see the motor and drive unit stack in the foreground, and the battery pack in the background under some junk. These are all the same part assemblies that came out of the crashed Kona, with their original wiring. All of the high voltage connections are exactly the same as in the car, including interlocks and seals.\u003c/p\u003e\n\u003cp\u003eThe bench holds other modules taken from the engine bay and the interior of the car, plus large segments of the original wiring (now unwrapped, cut, spliced, and converted into a tangled mess).\u003c/p\u003e\n\u003cp\u003eThe green wooden bench was \u0026#34;obtainium\u0026#34; that my mate Oli donated. It\u0026#39;s far from perfect, but it has the very attractive property that we can cut it, screw into it, and generally mess with it as much as we want.\u003c/p\u003e\n\u003ch2 id=\"why-would-you-do-this\"\u003eWhy would you do this?\u003c/h2\u003e\n\u003cp\u003eLike every modern car, the Hyundai Kona Electric is absurdly complicated. More than five separate CAN buses, ten or more kilograms of low voltage wiring, probably over one hundred electronic modules (most with their own CPU and firmware), etc.\u003c/p\u003e\n\u003cp\u003eIn order to re-purpose the Kona\u0026#39;s powertrain into an EV conversion, we need to find the simplest subset of modules that can work together.\u003c/p\u003e\n\u003cp\u003eHence, a reverse engineering experiment: the Bench Kona.\u003c/p\u003e\n\u003ch2 id=\"plan\"\u003ePlan\u003c/h2\u003e\n\u003cp\u003eThe rough plan has been:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eWire together modules on the bench until the motor turns, and the traction battery can be charged.\u003c/li\u003e\n\u003cli\u003eProgressively remove modules, replacing them with fake CAN messages or other signals. The goal is to find the minimum that will still work.\u003c/li\u003e\n\u003cli\u003eDocument this, and design some kind of \u0026#34;Kona meta-VCU\u0026#34; that allows the Kona\u0026#39;s VCU (Vehicle Control Unit) to drive the motor in an EV conversion.\u003c/li\u003e\n\u003cli\u003eCelebrate wildly, should this step ever be reached.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eIt\u0026#39;s important to note that \u003cem\u003eabsolutely none\u003c/em\u003e of the techniques used to wire up the Bench Kona translate over to a real moving vehicle. This is strictly for reverse engineering purposes.\u003c/p\u003e\n\u003ch2 id=\"looming\"\u003eLooming\u003c/h2\u003e\n\u003cp\u003eI was able to drape most of the engine bay wiring loom and some of the cabin loom over the bench. The strategy was to find particular wires in the inter-loom connectors and cut them out when needed. Hopefully, once everything works then it\u0026#39;ll be straightforward to remove what\u0026#39;s left and dramatically reduce the rats nest qualities of this setup:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.projectgus.com/images/2024-01/rats-nest.webp\"\u003e\u003cimg alt=\"Different angle of the bench showing even more wires\" src=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/rats-nest.webp\" srcset=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/rats-nest.webp 1x, https://www.projectgus.com/images/2024-01/derivatives/medium/2x/rats-nest.webp 2x, https://www.projectgus.com/images/2024-01/derivatives/medium/4x/rats-nest.webp 4x\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eA special mention for these lever-action wire connectors:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.projectgus.com/images/2024-01/wire-connector.webp\"\u003e\u003cimg alt=\"A four wire lever-action wire connector on the bench\" src=\"https://www.projectgus.com/images/2024-01/derivatives/small/1x/wire-connector.webp\" srcset=\"https://www.projectgus.com/images/2024-01/derivatives/small/1x/wire-connector.webp 1x, https://www.projectgus.com/images/2024-01/derivatives/small/2x/wire-connector.webp 2x, https://www.projectgus.com/images/2024-01/derivatives/small/4x/wire-connector.webp 4x\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eThey\u0026#39;re very easy to connect and disconnect, and so far they\u0026#39;ve been reliable.\u003csup id=\"fnref:bench\"\u003e\u003ca href=\"#fn:bench\"\u003e1\u003c/a\u003e\u003c/sup\u003e These ones are \u003ca href=\"https://detail.tmall.com/item.htm?id=662737832381\"\u003efrom Taobao\u003c/a\u003e, but \u003ca href=\"https://www.aliexpress.com/item/1005006123575098.html\"\u003elooks like they\u0026#39;re also on Aliexpress\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eElsewhere crimp ferrules and screw terminals were used, instead. The label maker came in particularly handy!\u003c/p\u003e\n\u003ch2 id=\"gateway-antics\"\u003eGateway Antics\u003c/h2\u003e\n\u003cp\u003eHoping that the Kona had been engineered in a modular fashion, I was counting on finding some integration points that could be \u0026#34;sliced\u0026#34; apart without too much impact. This turned out to be partly true, although the \u003ca href=\"https://www.joelonsoftware.com/2002/11/11/the-law-of-leaky-abstractions/\"\u003eLaw of Leaky Abstractions\u003c/a\u003e seems to also apply to cars.\u003c/p\u003e\n\u003cp\u003eThe first module to eliminate was the Integrated Gateway and Power Module (IGPM):\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.projectgus.com/images/2024-01/igpm.webp\"\u003e\u003cimg alt=\"Integrated Gateway Power Module\" src=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/igpm.webp\" srcset=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/igpm.webp 1x, https://www.projectgus.com/images/2024-01/derivatives/medium/2x/igpm.webp 2x, https://www.projectgus.com/images/2024-01/derivatives/medium/4x/igpm.webp 4x\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eYou may remember this module from \u003ca href=\"https://www.projectgus.com/2023/03/ev-conversion-one/#finding-a-way-in\"\u003ePart One\u003c/a\u003e, when one of its connectors was accidentally damaged by forward probing...\u003c/p\u003e\n\u003cp\u003eBench Kona has to to replicate at least two functions of the IGPM:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSwitching power to some modules, especially \u0026#34;IG3\u0026#34; which seems to be the power when the car is \u0026#34;half turned on\u0026#34; (for example, when charging).\u003c/li\u003e\n\u003cli\u003eInjecting some of the CAN messages that the IGPM forwards between the different buses.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eSwitching power turned out to be pretty straightforward. Bench Kona has kept the original engine bay relay box for now. It still provides the main relays, large fuses, and the heavy-duty wiring for the DC/DC Converter and the 12V battery:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.projectgus.com/images/2024-01/engine-bay-fuse-box.webp\"\u003e\u003cimg alt=\"Close up on Kona engine bay fuse box\" src=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/engine-bay-fuse-box.webp\" srcset=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/engine-bay-fuse-box.webp 1x, https://www.projectgus.com/images/2024-01/derivatives/medium/2x/engine-bay-fuse-box.webp 2x, https://www.projectgus.com/images/2024-01/derivatives/medium/4x/engine-bay-fuse-box.webp 4x\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eA lot of power supply wiring comes out of this box, goes into the IGPM where it\u0026#39;s split up into different power domains and individually fused. Then some of these individual power wires come back through the engine bay fuse box. To replace individual IGPM circuits and fuses, Bench Kona has a simple automotive fuse box:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.projectgus.com/images/2024-01/fuse-box.webp\"\u003e\u003cimg alt=\"Close up on automotive fuse box on bench\" src=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/fuse-box.webp\" srcset=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/fuse-box.webp 1x, https://www.projectgus.com/images/2024-01/derivatives/medium/2x/fuse-box.webp 2x, https://www.projectgus.com/images/2024-01/derivatives/medium/4x/fuse-box.webp 4x\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eThe \u0026#34;IG3\u0026#34; power supply that\u0026#39;s normally switched inside the IGPM by firmware has been replaced by... a switch!\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.projectgus.com/images/2024-01/ig3-switch.webp\"\u003e\u003cimg alt=\"IG3 relay switch on bench\" src=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/ig3-switch.webp\" srcset=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/ig3-switch.webp 1x, https://www.projectgus.com/images/2024-01/derivatives/medium/2x/ig3-switch.webp 2x, https://www.projectgus.com/images/2024-01/derivatives/medium/4x/ig3-switch.webp 4x\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"brakes\"\u003eBrakes\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://www.projectgus.com/images/2024-01/ieb.webp\"\u003e\u003cimg alt=\"Integrated Electronic Brake module, as installed in Kona\" src=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/ieb.webp\" srcset=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/ieb.webp 1x, https://www.projectgus.com/images/2024-01/derivatives/medium/2x/ieb.webp 2x, https://www.projectgus.com/images/2024-01/derivatives/medium/4x/ieb.webp 4x\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eI also wanted to leave out the \u0026#34;Integrated Electronic Brake\u0026#34; (IEB) module, if possible. This electric brake booster module incorporates ABS and traction control. This means it relies on input from wheel sensors, among other things.\u003c/p\u003e\n\u003cp\u003eFrom \u003ca href=\"https://www.projectgus.com/2023/10/kona-can-decoding/\"\u003eCAN log analysis\u003c/a\u003e it seemed likely that we could spoof the messages from this module, instead.\u003c/p\u003e\n\u003cp\u003eThe Kona also has a redundant hard-wired brake signal, which connects the brake pedal to both the Vehicle Control Unit (VCU, part of the EPCU) and the Smart Key Module (SKM, for \u0026#34;press brake before starting\u0026#34;). The VCU also independently reads the inverse of this signal on a second wire.\u003c/p\u003e\n\u003cp\u003eInitially a simple switch was used for this, but it turned out to be easier to mount the brake pedal itself, at least for the first version:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.projectgus.com/images/2024-01/brake-pedal.webp\"\u003e\u003cimg alt=\"Brake pedal mounted upside down to side of bench\" src=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/brake-pedal.webp\" srcset=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/brake-pedal.webp 1x, https://www.projectgus.com/images/2024-01/derivatives/medium/2x/brake-pedal.webp 2x, https://www.projectgus.com/images/2024-01/derivatives/medium/4x/brake-pedal.webp 4x\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eRemoving the return spring and mounting it like this means it can be pushed back and forward like a lever. Odd, but functional!\u003c/p\u003e\n\u003cp\u003eThe laptop would run a \u003ccode\u003ebench_kona.py\u003c/code\u003e program that injected the spoofed IEB CAN messages to the bus, with payloads corresponding to the vehicle sitting still with someone\u0026#39;s foot on the brake. This seemed safe enough to me at the time.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eNarrator: As we shall see, this was not quite safe enough.\u003c/em\u003e\u003c/p\u003e\n\u003ch2 id=\"smart-key-module\"\u003eSmart Key Module\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://www.projectgus.com/images/2024-01/skm.webp\"\u003e\u003cimg alt=\"My Kona\u0026#39;s Smart Key Module\" src=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/skm.webp\" srcset=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/skm.webp 1x, https://www.projectgus.com/images/2024-01/derivatives/medium/2x/skm.webp 2x, https://www.projectgus.com/images/2024-01/derivatives/medium/4x/skm.webp 4x\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eThe Smart Key Module was shaping up to be the trickiest module. It contains a lot of logic around the various keyless entry features and door locks, and switches on the main ignition \u0026#34;IG1\u0026#34; and \u0026#34;IG2\u0026#34; power relays. The Bench Kona only needs a few of these functions, so maybe the SKM could be replaced with some switches for now?\u003c/p\u003e\n\u003cp\u003eUnfortunately, the SKM also has three hard-wired connections to the VCU:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u0026#34;P_STS PWM\u0026#34;, not sure what this is.\u003c/li\u003e\n\u003cli\u003e\u0026#34;EV Ready Backup\u0026#34; signal.\u003c/li\u003e\n\u003cli\u003e\u0026#34;IMMO Signal\u0026#34;, assumed to be the vehicle immobiliser signal.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eUntil/unless these can be spoofed, the Smart Key Module needs to behave as if it is operating normally in a real Kona. This means wiring in all of its various power connections, relay outputs, the car\u0026#39;s \u0026#34;push to start\u0026#34; power button, and even some of the antennas:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.projectgus.com/images/2024-01/skm-wiring.webp\"\u003e\u003cimg alt=\"Smart Key Module wiring\" src=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/skm-wiring.webp\" srcset=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/skm-wiring.webp 1x, https://www.projectgus.com/images/2024-01/derivatives/medium/2x/skm-wiring.webp 2x, https://www.projectgus.com/images/2024-01/derivatives/medium/4x/skm-wiring.webp 4x\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003ePlus the \u003ccode\u003ebench_kona.py\u003c/code\u003e program had to be augmented to send some spoofed BCAN (Body CAN bus) messages to the Smart Key Module\u0026#39;s BCAN transceiver, so it thinks that the doors are closed, etc.\u003c/p\u003e\n\u003ch2 id=\"and-nothing-happens\"\u003eAnd... nothing happens!\u003c/h2\u003e\n\u003cp\u003eAfter triple checking all my custom wiring, it was time to attach the 12V Battery and manully switch on \u0026#34;IG3\u0026#34; to start powering up. Various CAN messages appeared on the bus, a few relays clicked in, and... nothing else happend.\u003c/p\u003e\n\u003cp\u003eThe power button, attached directly to the Smart Key module, mostly sat silent but occasionally flashed through five mysterious amber blinks:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"GIF of the power button blinking\" src=\"https://www.projectgus.com/images/2024-01/power-blink.gif\"/\u003e\u003c/p\u003e\n\u003cp\u003eAttempting to pull diagnostic codes from any of the vehicle components failed, presumably because the \u0026#34;car\u0026#34; was powered off. This left me back at the same awkward spot as last year with the \u003ca href=\"https://www.projectgus.com/2022/06/bmw-f-series-gear-selector-part-one-failures/\"\u003eBMW gear selector\u003c/a\u003e - a complex electronic system sitting there silent and inscrutable.\u003c/p\u003e\n\u003ch2 id=\"rtfm\"\u003eRTFM\u003c/h2\u003e\n\u003cp\u003eAfter trying a lot of things that didn\u0026#39;t work, I was reading Hyundai forums online discussing various \u0026#34;won\u0026#39;t power on\u0026#34; issues and someone mentioned there was a failsafe \u0026#34;limp home\u0026#34; start method where you press the vehicle key into the power on button. Sure enough, it\u0026#39;s right there in the Kona user manual:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.projectgus.com/images/2024-01/manual.webp\"\u003e\u003cimg alt=\"Page from Kona manual showing how to emergency start with the vehicle key\" src=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/manual.webp\" srcset=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/manual.webp 1x, https://www.projectgus.com/images/2024-01/derivatives/medium/2x/manual.webp 2x, https://www.projectgus.com/images/2024-01/derivatives/medium/4x/manual.webp 4x\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003ePressing the key against the button, it would now replicate the \u0026#34;five amber blinks\u0026#34; sequence every time. Still, nothing else came to life...\u003c/p\u003e\n\u003ch2 id=\"steering-wheel-lock\"\u003eSteering Wheel Lock\u003c/h2\u003e\n\u003cp\u003eGoing back to first principles, I started probing all of the inputs and outputs of the Smart Key Module to see if it did anything in particular when the button was pressed. It looks as if it very briefly tried to power up the Steering Wheel Lock module.\u003c/p\u003e\n\u003cp\u003eThis module hadn\u0026#39;t been wired in, on the assumption that the Smart Key Module would not consider it a fatal error if it was totally missing.\u003c/p\u003e\n\u003cp\u003eTurns out the steering wheel (complete with blown airbag) barely fits inside the bench:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.projectgus.com/images/2024-01/bench-steering.webp\"\u003e\u003cimg alt=\"Steering wheel jammed inside bench\" src=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/bench-steering.webp\" srcset=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/bench-steering.webp 1x, https://www.projectgus.com/images/2024-01/derivatives/medium/2x/bench-steering.webp 2x, https://www.projectgus.com/images/2024-01/derivatives/medium/4x/bench-steering.webp 4x\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eAfter wiring the steering wheel lock\u0026#39;s data and power lines\u003csup id=\"fnref:odd\"\u003e\u003ca href=\"#fn:odd\"\u003e3\u003c/a\u003e\u003c/sup\u003e, the car finally powered on:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.projectgus.com/images/2024-01/power-on.webp\"\u003e\u003cimg alt=\"Kona power button illuminated in blue\" src=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/power-on.webp\" srcset=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/power-on.webp 1x, https://www.projectgus.com/images/2024-01/derivatives/medium/2x/power-on.webp 2x, https://www.projectgus.com/images/2024-01/derivatives/medium/4x/power-on.webp 4x\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eSuch a glorious blue light! ðŸ¥³\u003c/p\u003e\n\u003cp\u003eI heard the tell-tale clunks of the main contactors closing in the traction battery pack, and the Bench Kona even went into Drive. However, the wheels wouldn\u0026#39;t turn even with the brake pedal \u0026#34;released\u0026#34;.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.projectgus.com/images/2024-01/in-drive.webp\"\u003e\u003cimg alt=\"Kona Gear selector with D illuminated\" src=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/in-drive.webp\" srcset=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/in-drive.webp 1x, https://www.projectgus.com/images/2024-01/derivatives/medium/2x/in-drive.webp 2x, https://www.projectgus.com/images/2024-01/derivatives/medium/4x/in-drive.webp 4x\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eThe \u003ccode\u003ebench_kona.py\u003c/code\u003e program was spoofing CAN messages saying that someone was standing on the brake. Guessing that\u0026#39;s why the motor doesn\u0026#39;t turn...\u003c/p\u003e\n\u003ch2 id=\"motion\"\u003eMotion\u003c/h2\u003e\n\u003cp\u003eNext step, update the \u003ccode\u003ebench_kona\u003c/code\u003e software and add an input to turn the brake on and off. A very sophisticated user interface:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.projectgus.com/images/2024-01/bench-kona-ui.webp\"\u003e\u003cimg alt=\"Bench Kona UI screenshot, just a checkbox for Braking\" src=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/bench-kona-ui.webp\" srcset=\"https://www.projectgus.com/images/2024-01/derivatives/medium/1x/bench-kona-ui.webp 1x, https://www.projectgus.com/images/2024-01/derivatives/medium/2x/bench-kona-ui.webp 2x, https://www.projectgus.com/images/2024-01/derivatives/medium/4x/bench-kona-ui.webp 4x\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eThis is a bit clunky as there\u0026#39;s a separate hard-wired brake pedal signal as well, but by this point the excitement of a possible breakthrough was making me impatient:\u003c/p\u003e\n\u003cp\u003e\n\u003ciframe allowfullscreen=\"\" frameborder=\"0\" seamless=\"\" src=\"https://www.youtube.com/embed/Z4nDdb5fkbI\"\u003e\u003c/iframe\u003e\n\u003c/p\u003e\n\u003cp\u003eSuccess? This is the motor in Drive steadily trying to \u0026#34;creep\u0026#34; forward,\u003csup id=\"fnref:creep\"\u003e\u003ca href=\"#fn:creep\"\u003e2\u003c/a\u003e\u003c/sup\u003e and also revving up once or twice due to a gentle accelerator press.\u003c/p\u003e\n\u003ch2 id=\"too-much-motion\"\u003eToo much motion\u003c/h2\u003e\n\u003cp\u003eSo far the Bench Kona has been put into Drive three times. I only filmed one of the tests, but the other two ended with uncontrolled motor acceleration! ðŸ˜±ðŸ˜±ðŸ˜±\u003c/p\u003e\n\u003cp\u003eSeemingly nothing would stop the motor - even switching to Neutral, putting the brake on (via both switch and CAN), or totally stopping all spoofed CAN messages. After twenty or seconds of the motor spinning flat out, the motor controller flagged a \u0026#34;Motor Excess Current\u0026#34; fault code and it came to a stop.\u003c/p\u003e\n\u003cp\u003eThis was both unexpected and terrifying, and I realised how unprepared I\u0026#39;d been for this eventuality.\u003c/p\u003e\n\u003cp\u003eI \u003cem\u003ethink\u003c/em\u003e what was happening is that the Vehicle Control Unit is running a control loop that outputs a motor torque request and reads wheel speed data as feedback. Because the \u003ccode\u003ebench_kona.py\u003c/code\u003e program was reporting fake 0 wheel speeds all round, the VCU\u0026#39;s control loop assumed the torque it was requesting from the motor was either too low (when accelerating) or just fine (when not accelerating). So the controller only ever increased the torque request, or kept it at the same level. Even when I simulated pressing the brake it was like \u0026#34;Nothing needs to change, we\u0026#39;re not even moving!\u0026#34;\u003c/p\u003e\n\u003cp\u003eMeanwhile, the electric motor controller (MCU) is receiving the torque requests and frantically trying to achieve the requested motor torque by revving the unloaded motor faster and faster. This is an impossible task as the motor is spinning unloaded, so torque is minimal.\u003c/p\u003e\n\u003cp\u003eThis theory is a bit surprising, because you\u0026#39;d think the VCU would have some failsafe where it also reads RPM from the motor controller (after all, what happens if a driveshaft breaks and the wheels aren\u0026#39;t turning on the real car?) It\u0026#39;s pure guesswork at this stage, maybe the real logic is very different.\u003c/p\u003e\n\u003cp\u003eThat said, the internet does contain some supporting material. For example, there is a \u003ca href=\"https://patents.google.com/patent/US10421361B2/\"\u003eHyundai patent about motor control\u003c/a\u003e that includes this signal diagram:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.projectgus.com/images/2023-12/patent_fig1.png\"\u003e\u003cimg alt=\"Fig 1 from the linked patent\" src=\"https://www.projectgus.com/images/2023-12/derivatives/medium/1x/patent_fig1.png\" srcset=\"https://www.projectgus.com/images/2023-12/derivatives/medium/1x/patent_fig1.png 1x, https://www.projectgus.com/images/2023-12/derivatives/medium/2x/patent_fig1.png 2x, https://www.projectgus.com/images/2023-12/derivatives/medium/4x/patent_fig1.png 4x\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e(APS = Accelerator Position Sensor, BPS = Brake Position Sensor.)\u003c/p\u003e\n\u003cp\u003eIf zero wheel speed is the culprit, then all that\u0026#39;s needed for appropriate motor control is to send spoofed wheel speed data that matches the current motor rpm. I \u003cem\u003ethink\u003c/em\u003e we know where the motor rpm signal is found out in the CAN messages, but I want to do more logging on a real Kona to be 100% sure. I don\u0026#39;t ever want to trigger that uncontrolled acceleration state again!\u003c/p\u003e\n\u003cp\u003eNot to mention that the Bench Kona now needs a few more features added, such as a rudimentary cooling system. It\u0026#39;s also past time to write some microcontroller firmware, rather than little desktop Python programs.\u003c/p\u003e\n\u003cp\u003eAfter all this, it\u0026#39;s also possible that the VCU\u0026#39;s black box control logic turns out to be too complicated to adapt into a reliable EV conversion. In that case, adapting something like the \u003ca href=\"https://openinverter.org/wiki/Mini_Mainboard\"\u003eopeninverter motor control board\u003c/a\u003e to the Kona\u0026#39;s existing IGBT drivers may be the best way to give these parts a second life. We\u0026#39;ll see...\u003c/p\u003e\n\u003cp\u003eStay tuned for the next update, hopefully soon!\u003c/p\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "13 min read",
  "publishedTime": null,
  "modifiedTime": null
}
