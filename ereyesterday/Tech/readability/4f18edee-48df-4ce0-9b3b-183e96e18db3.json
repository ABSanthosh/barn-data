{
  "id": "4f18edee-48df-4ce0-9b3b-183e96e18db3",
  "title": "GitHub Copilot moves beyond OpenAI models to support Claude 3.5, Gemini",
  "link": "https://arstechnica.com/ai/2024/10/github-copilot-moves-beyond-openai-models-to-support-claude-3-5-gemini/",
  "description": "News sparks speculation Microsoft will go multi-model with other AI products.",
  "author": "Samuel Axon",
  "published": "Tue, 29 Oct 2024 21:11:49 +0000",
  "source": "http://feeds.arstechnica.com/arstechnica/index",
  "categories": [
    "AI",
    "Tech",
    "Anthropic",
    "Claude 3.5 Sonnet",
    "coding",
    "developer",
    "Gemini 1.5 Pro",
    "GitHub",
    "GitHub Copilot",
    "google",
    "GPT o1-mini",
    "GPT o1-preview",
    "GPT-4o",
    "microsoft",
    "openai",
    "Programming",
    "VS Code"
  ],
  "byline": "Samuel Axon",
  "length": 2085,
  "excerpt": "News sparks speculation Microsoft will go multi-model with other AI products.",
  "siteName": "Ars Technica",
  "favicon": "https://cdn.arstechnica.net/wp-content/uploads/2016/10/cropped-ars-logo-512_480-300x300.png",
  "text": "The large language model-based coding assistant GitHub Copilot will switch from using exclusively OpenAI's GPT models to a multi-model approach over the coming weeks, GitHub CEO Thomas Dohmke announced in a post on GitHub's blog. First, Anthropic's Claude 3.5 Sonnet will roll out to Copilot Chat's web and VS Code interfaces over the next few weeks. Google's Gemini 1.5 Pro will come a bit later. Additionally, GitHub will soon add support for a wider range of OpenAI models, including GPT o1-preview and o1-mini, which are intended to be stronger at advanced reasoning than GPT-4, which Copilot has used until now. Developers will be able to switch between the models (even mid-conversation) to tailor the model to fit their needs—and organizations will be able to choose which models will be usable by team members. The new approach makes sense for users, as certain models are better at certain languages or types of tasks. \"There is no one model to rule every scenario,\" wrote Dohmke. \"It is clear the next phase of AI code generation will not only be defined by multi-model functionality, but by multi-model choice.\" It starts with the web-based and VS Code Copilot Chat interfaces, but it won't stop there. \"From Copilot Workspace to multi-file editing to code review, security autofix, and the CLI, we will bring multi-model choice across many of GitHub Copilot’s surface areas and functions soon,\" Dohmke wrote. There are a handful of additional changes coming to GitHub Copilot, too, including extensions, the ability to manipulate multiple files at once from a chat with VS Code, and a preview of Xcode support. GitHub Spark promises natural language app development In addition to the Copilot changes, GitHub announced Spark, a natural language tool for developing apps. Non-coders will be able to use a series of natural language prompts to create simple apps, while coders will be able to tweak more precisely as they go. In either use case, you'll be able to take a conversational approach, requesting changes and iterating as you go, and comparing different iterations.",
  "image": "https://cdn.arstechnica.net/wp-content/uploads/2024/10/Dohmke-1152x648.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n                      \n                      \n          \u003cp\u003eThe large language model-based coding assistant GitHub Copilot will switch from using exclusively OpenAI\u0026#39;s GPT models to a multi-model approach over the coming weeks, GitHub CEO Thomas Dohmke announced in a \u003ca href=\"https://github.blog/news-insights/product-news/bringing-developer-choice-to-copilot/\"\u003epost on GitHub\u0026#39;s blog\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eFirst, Anthropic\u0026#39;s Claude 3.5 Sonnet will roll out to Copilot Chat\u0026#39;s web and VS Code interfaces over the next few weeks. Google\u0026#39;s Gemini 1.5 Pro will come a bit later.\u003c/p\u003e\n\u003cp\u003eAdditionally, GitHub will soon add support for a wider range of OpenAI models, including GPT o1-preview and o1-mini, which are intended to be stronger at advanced reasoning than GPT-4, which Copilot has used until now. Developers will be able to switch between the models (even mid-conversation) to tailor the model to fit their needs—and organizations will be able to choose which models will be usable by team members.\u003c/p\u003e\n\u003cp\u003eThe new approach makes sense for users, as certain models are better at certain languages or types of tasks.\u003c/p\u003e\n\u003cp\u003e\u0026#34;There is no one model to rule every scenario,\u0026#34; wrote Dohmke. \u0026#34;It is clear the next phase of AI code generation will not only be defined by multi-model functionality, but by multi-model choice.\u0026#34;\u003c/p\u003e\n\u003cp\u003eIt starts with the web-based and VS Code Copilot Chat interfaces, but it won\u0026#39;t stop there. \u0026#34;From Copilot Workspace to multi-file editing to code review, security autofix, and the CLI, we will bring multi-model choice across many of GitHub Copilot’s surface areas and functions soon,\u0026#34; Dohmke wrote.\u003c/p\u003e\n\u003cp\u003eThere are a handful of additional changes coming to GitHub Copilot, too, including extensions, the ability to manipulate multiple files at once from a chat with VS Code, and a preview of Xcode support.\u003c/p\u003e\n\u003ch2\u003eGitHub Spark promises natural language app development\u003c/h2\u003e\n\u003cp\u003eIn addition to the Copilot changes, GitHub announced Spark, a natural language tool for developing apps. Non-coders will be able to use a series of natural language prompts to create simple apps, while coders will be able to tweak more precisely as they go. In either use case, you\u0026#39;ll be able to take a conversational approach, requesting changes and iterating as you go, and comparing different iterations.\u003c/p\u003e\n\n          \n                      \n                  \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": "2024-10-29T21:11:49Z",
  "modifiedTime": "2024-10-29T21:11:49Z"
}
