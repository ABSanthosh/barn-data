{
  "id": "912553a9-c067-48f2-ba3e-06f1f24f746b",
  "title": "The developer of SerenityOS is building a challenger to the browser duopoly",
  "link": "https://thenextweb.com/news/serenityos-creator-building-ladybird-browser",
  "description": "There are a handful of challenges that many developers like to tackle as something of a rite of passage to prove their coding worth. One is creating a compiler. That fundamental building block of many programming languages ​​​​translates the more human-understandable code into something a computer understands. Another and far more ambitious challenge is building an operating system. The scope is almost limitless. You could create a Linux distribution, which often requires less coding, but more assembling of pre-existing packages and dependencies. You could create a command line operating system that works on limited hardware or on a low-level machine.…This story continues at The Next Web",
  "author": "Chris Chinchilla",
  "published": "Thu, 30 Jan 2025 11:20:34 +0000",
  "source": "https://thenextweb.com/feed/",
  "categories": [
    "Insider",
    "Startups and technology",
    "Next Featured",
    "Ecosystems",
    "Investors and funding",
    "Corporates and innovation"
  ],
  "byline": "Chris Chinchilla",
  "length": 10358,
  "excerpt": "The creator of SerenityOS is taking on big tech again. This time, he's built the Ladybird browser to rival Google Chrome and Apple's Safari.",
  "siteName": "TNW | Ecosystems",
  "favicon": "https://next.tnwcdn.com/assets/img/favicon/favicon-194x194.png",
  "text": "There are a handful of challenges that many developers like to tackle as something of a rite of passage to prove their coding worth. One is creating a compiler. That fundamental building block of many programming languages ​​​​translates the more human-understandable code into something a computer understands. Another and far more ambitious challenge is building an operating system. The scope is almost limitless. You could create a Linux distribution, which often requires less coding, but more assembling of pre-existing packages and dependencies. You could create a command line operating system that works on limited hardware or on a low-level machine. Or you can create an all-singing, all-dancing graphical operating system in an attempt to take on the Windows, macOS, and Linux oligopoly. Finally, there’s a browser. On the surface, this doesn’t seem as difficult as an operating system, but think of how complex websites have become and the thousands of things a browser needs to handle. Like creating a Linux distribution, you could take an open-source rendering engine, the part that converts the code behind web pages to what you see and interact with, and add an interface. This is the approach many browsers take. Alternatively, you could create everything from scratch and challenge the Chromium (Google Chrome, Edge, Brave, and more) and WebKit (Safari and others) duopoly. A battle that even the venerable Firefox is slowly losing. Or you could do all three. Andreas Kling is one of the people trying to do that. Kling rose to broader public attention around 2018, when he started working on SerenityOS, a retro-inspired operating system built completely from scratch as something of a project to help Kling get through a drug recovery program. “I tried to figure out what to do after rehab, which was like six hours a day, every day,” the Swedish programmer recalls. “And when that ended, what was I supposed to do? I now had these full empty days with nothing to do and all this energy. And I just needed something to do. So, I just started programming, which is what I always do. And I started building an operating system because I thought that would be fun.” From Serenity to the Ladybird SerenityOS found success for two main reasons: it was a perfect project for experienced hackers and it gained attention thanks to Kling’s regular coding live streams where he worked on the OS. The SerenityOS codebase is a monorepo, meaning that contributors can find the code for all functionality in one place. This means they could start with an interest in working on the text editor but gain experience by also digging into and becoming involved with the code that interacts with the host hardware. One of the most popular components of SerenityOS was the Ladybird browser. More on that later. Over time, Kling’s live streams attracted thousands who would watch him code and struggle to solve problems in the Serenity codebase. This helped viewers learn, and helped Kling overcome shyness and emerge from a reclusive lifestyle to become accountable to an increasingly large group of people. At one point, nearly the same number of contributors were involved with Ladybird as Serenity. This situation created challenges for the different contributor groups and led Kling to realise that the web could do with a new browser and browser engine. People were eager to work on this and, more importantly, to finance its development. While Kling had received reasonable but small donations throughout the lifespan of Serenity and Ladybird, in 2023, Ladybird attracted larger donations from Shopify and Chris Wandsworth, a GitHub cofounder. “I reached out to Wandsworth and asked, ‘Hey, do you like Serenity? Do you like browsers, too?’” says Kling. “We connected over this idea of ​​building an open-source browser and trying to avoid the mistakes other open-source browsers have been making, especially regarding how they pay for stuff.” The browser drive This isn’t Kling’s first experience building browsers. For two years, he worked on building browsers for the Qt team at Nokia. Qt is a cross-platform toolkit for building native applications used in various use cases, some of which you likely use daily. In the early 2000s, Qt was pushed as an option to counter the rise of Android and iOS. Those attempts failed, but the project continues, and you can find many engineers from that era spread across European tech. The Qt browsers used WebKit, which has a long and scattered history but is now primarily the rendering engine in Apple’s Safari, which led to Kling working on Apple’s WebKit team. Working for a US company from Sweden for nearly six years took its toll, leading to the drug problem mentioned earlier and where our story about Ladybird began. So why build a new browser at all? It’s an interesting time for the browser market. There are dozens of intriguing competitors to the dominance of Google Chrome and Apple’s Safari, but they barely dent their combined market share of 85%. Even Safari accounts for only 17% of that number. Microsoft’s Edge comprises about 5%, Firefox is around 2.5%, and “all the rest” register such small percentages that you can barely make them out on charts. Despite this, 1 or 2% of 5 billion internet users are still tens of millions of people and a decent-sized business, so browsers like Brave, Arc, and DuckDuckGo, while barely registering on usage charts, are making decent progress. However, without the weight of Google’s advertising revenue (though, in the age of AI chatbots, this is less certain) or Apple’s hardware and services profits behind them, they have to find some way to fund their operations. People don’t expect to have to pay for a browser, so can they convince enough users to either subscribe (Arc) or use privacy-focused ads (Brave and DuckDuckGo) or tokens (Brave again)? Money for the Ladybird Kling plans for Ladybird to be donation-supported, which is challenging for platforms aiming to become market leaders. Could Signal survive on just donations if its user base scaled from the current 70 million to WhatsApp’s 2 billion per month? Could Mastodon survive if it scaled from its 10 million users to the 3 billion per month of Facebook? It would be a challenge. But again, you don’t need a large share of users to be viable and do something meaningful. As Kling puts it: “We feel there should be a browser not beholden to the advertising industry or anybody else for funding. Donations are all no strings attached, so you can’t get us to do anything besides putting your logo on our website. “The world should have a browser that, even if we can’t throw a thousand engineers at performance, we believe we can build something that’s useful to people and works well enough that people would like it.” Browser standards Another reason for building a new browser and rendering engine is standards. While it was during the web’s nascent days, anyone old enough to remember the dominance of Internet Explorer will remember how many websites wouldn’t work in anything but Internet Explorer. With the number of websites I encounter that seem to have only been tested to work in Chromium-based (the open source core of Google Chrome and many other browsers) browsers, sometimes it feels much the same today. The web’s loose standards body, the W3C, publishes specifications and standards on many web features. None of them is binding, and browser engines can interpret them differently, not at all, or use their alternatives instead. With Chromium browsers so dominant, users can come to expect web pages to work a certain way, even if it’s not the “standard” way. And as frustrating as this might be for the spirit of the open and compliant web, with a 70% market share, why should designers and developers spend time building for targets other than Chromium? Kling hopes Ladybird will stick to and implement the W3C specifications as much as possible. “Sticking to the spec is one big reason people like what we’re doing. And it’s a big part of why we want to make a browser. We want to make one that follows the specs, and that proves that the specs are implementable.” Despite its early stages, Ladybird already has representatives in W3C working groups contributing to the project. “We even have people from the W3C who now actively hang out in our community and actively contribute to Ladybird,” says Kling. “And this [plan to stick to spec] is sort of what got them interested.” Building for impact Kling and the Ladybird project aim for an alpha release around mid-2026, which sounds like a long time away, but the project has seven full-time engineers starting from scratch. In comparison, while there are no exact figures, that’s a tiny fraction of the probable size of the Chrome team, and the Chromium project alone has nearly as many lines of code as the Linux Kernel. At Ladybird, Kling aims to prioritise the largest impacts. “I don’t have a full picture of everything needed, but it’s fairly complicated,” he says. “One issue we’re having is that we have to figure out what gives the most benefit across the board. “We could spend a bunch of time getting games to work well in the browser, but maybe that doesn’t benefit most websites, even though it’s fun to do that kind of stuff. We want broad compatibility at reduced fidelity with a large part of the popular web.” Freeing the Ladybird The interests and enthusiasm of the contributor community will guide much of the feature development. As Kling says, sometimes this leads to less popular decisions. “We are deferring on a bunch of things that are not popular. So we’re deferring on Windows and mobile. iOS outside of Europe is basically locked down browser-wise anyway.” Contributing to a browser isn’t the simplest task, even as an experienced developer, but if Ladybird and what it stands for interests you, one task anyone (on macOS and Linux) can get involved with is testing websites to see if they work — and if not, why not. The web and how we interact with it is in a state of change. A change we can be an active part of if we want it. “We’ve all been shepherded into this reality where a big advertising company controls the web,” says Kling. “We’ve accepted that that’s just the way things are. And then the idea that maybe it doesn’t have to be that way. I think that appeals to people.”",
  "image": "https://img-cdn.tnwcdn.com/image/tnw-blurple?filter_last=1\u0026fit=1280%2C640\u0026url=https%3A%2F%2Fcdn0.tnwcdn.com%2Fwp-content%2Fblogs.dir%2F1%2Ffiles%2F2025%2F01%2FUntitled-design-12.jpg\u0026signature=83c6cf7d7f818973a561a7e158999dce",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"article-main-content\"\u003e\n                            \u003cp\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003eThere are a handful of challenges that many developers like to tackle as something of a rite of passage to prove their coding worth.\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003eOne is creating a compiler. That fundamental building block of many programming languages ​​​​translates the more human-understandable code into something a computer understands.\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003eAnother and far more ambitious challenge is building an operating system. The scope is almost limitless. You could create a Linux distribution, which often requires less \u003c/span\u003e\u003c/span\u003e\u003cspan id=\"urn:local-text-annotation-0536qsqchi9s9ig19raoz6j3vbaiauiv\" itemid=\"https://data.thenextweb.com/tnw/entity/coding\"\u003e\u003cspan\u003e\u003cspan\u003ecoding\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e, but more assembling of pre-existing packages and dependencies. You could create a command line operating system that works on limited hardware or on a low-level machine. Or you can create an all-singing, all-dancing graphical operating system in an attempt to take on the Windows, macOS, and Linux oligopoly.\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003eFinally, there’s a \u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003ebrowser. \u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003eOn the surface, this doesn’t seem as difficult as an operating system, but think of how complex websites have become and the thousands of things a browser needs to handle. Like creating a Linux distribution, you could take an open-source rendering engine, the part that converts the \u003c/span\u003e\u003c/span\u003e\u003cspan id=\"urn:local-text-annotation-hdkpt8umghryi55lmow0vkrfpf7vt0qm\" itemid=\"https://data.thenextweb.com/tnw/entity/code\"\u003e\u003cspan\u003e\u003cspan\u003ecode\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e behind web pages to what you see and interact with, and add an interface. This is the approach many browsers take. Alternatively, you could create everything from scratch and challenge the Chromium (Google Chrome, Edge, Brave, and more) and WebKit (Safari and others) duopoly. A battle that even the venerable Firefox is slowly losing.\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003eOr you could do all three.\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e \u003ca href=\"https://awesomekling.com/\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003eAndreas Kling\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e is one of the people trying to do that.\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003eKling rose to broader public attention around 2018, when he started working on \u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003eSerenityOS\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e, a retro-inspired operating system built completely from scratch as something of a project to help Kling get through a drug recovery program.\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e“I tried to figure out what to do after rehab, which was like six hours a day, every day,” the Swedish programmer recalls. “And when that ended, what was I supposed to do? I now had these full empty days with nothing to do and all this energy. And I just needed something to do. So, I just started programming, which is what I always do. And I started building an operating system because I thought that would be fun.”\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003ch2\u003e\u003cspan\u003e\u003cspan\u003eFrom Serenity to the Ladybird\u003c/span\u003e\u003c/span\u003e\u003c/h2\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003eSerenityOS found success for two main reasons: it was a perfect project for experienced hackers and it gained attention thanks to \u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003eKling’s regular \u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003ca href=\"https://www.youtube.com/c/AndreasKling\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003ecoding live streams\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e where he worked on the OS.\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/SerenityOS/serenity\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cspan\u003e\u003cspan\u003eThe SerenityOS codebase\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e\u003cspan\u003e is a monorepo, meaning that contributors can find the code for all functionality in one place. This means they could start with an interest in working on the text editor but gain experience by also digging into and becoming involved with the code that interacts with the host hardware. One of the most popular components of SerenityOS was \u003c/span\u003e\u003c/span\u003e\u003ca href=\"https://ladybird.org/\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cspan\u003e\u003cspan\u003ethe Ladybird browser\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e\u003cspan\u003e. More on that later.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003eOver time, Kling’s live streams attracted thousands who would watch him code and struggle to solve problems in the Serenity codebase. This helped viewers learn, and helped Kling overcome shyness and emerge from a reclusive lifestyle to become accountable to an increasingly large group of people.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003eAt one point, nearly the same number of contributors were involved with Ladybird as Serenity. This situation created challenges for the different contributor groups and led Kling to realise that the web could do with a new browser and browser engine. People were eager to work on this and, more importantly, to finance its development.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003eWhile Kling had received reasonable but small donations throughout the lifespan of Serenity and Ladybird, in 2023, Ladybird attracted larger donations from Shopify and Chris Wandsworth, a GitHub cofounder.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003e“I reached out to Wandsworth and asked, ‘Hey, do you like Serenity? Do you like browsers, too?’” says Kling. “We connected over this idea of ​​building an open-source browser and trying to avoid the mistakes other open-source browsers have been making, especially regarding how they pay for stuff.”\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003ch2\u003eThe browser drive\u003c/h2\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003eThis isn’t Kling’s first experience building browsers. For two years, he worked on building browsers for the \u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003eQt\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e team at Nokia. Qt is a cross-platform toolkit for building native applications used in various use cases, some of which you likely use daily. In the early 2000s, Qt was pushed as an option to counter the rise of Android and iOS. Those attempts failed, but the project continues, and you can find many engineers from that era spread across European tech.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003eThe Qt browsers used \u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003eWebKit\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e, which has a long and scattered history but is now primarily the rendering engine in Apple’s Safari, which led to Kling working on Apple’s WebKit team. Working for a US company from Sweden for nearly six years took its toll, leading to the drug problem mentioned earlier and where our story about Ladybird began.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003eSo why build a new browser at all?\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003eIt’s an interesting time for the \u003ca href=\"https://thenextweb.com/news/europe-restarts-browser-war-against-chrome-safari\" target=\"_blank\" rel=\"noopener\"\u003ebrowser market\u003c/a\u003e. There are dozens of intriguing competitors to the dominance of Google Chrome and Apple’s Safari, but they barely dent \u003c/span\u003e\u003c/span\u003e\u003ca href=\"https://gs.statcounter.com/browser-market-share/\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cspan\u003e\u003cspan\u003etheir combined market share of 85%\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e\u003cspan\u003e. Even Safari accounts for only 17% of that number. Microsoft’s Edge comprises about 5%, Firefox is around 2.5%, and “all the rest” register such small percentages that you can barely make them out on charts. Despite this, 1 or 2% of 5 \u003c/span\u003e\u003c/span\u003e\u003ca href=\"https://www.statista.com/statistics/617136/digital-population-worldwide/\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cspan\u003e\u003cspan\u003ebillion internet users\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e\u003cspan\u003e are still tens of millions of people and a decent-sized business, so browsers like \u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003eBrave\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e, \u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003eArc\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e, and \u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003eDuckDuckGo\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e, while barely registering on usage charts, are making decent progress.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003eHowever, without the weight of Google’s advertising revenue (though, in the age of AI chatbots, this is less certain) or Apple’s hardware and services profits behind them, they have to find some way to fund their operations. People don’t expect to have to pay for a browser, so can they convince enough users to either subscribe (Arc) or use privacy-focused ads (\u003c/span\u003e\u003c/span\u003e\u003ca href=\"https://productmint.com/brave-business-model-how-does-brave-make-money/\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cspan\u003e\u003cspan\u003eBrave\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e\u003cspan\u003e and \u003c/span\u003e\u003c/span\u003e\u003ca href=\"https://duckduckgo.com/duckduckgo-help-pages/company/how-duckduckgo-makes-money/\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cspan\u003e\u003cspan\u003eDuckDuckGo\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e\u003cspan\u003e) or tokens (\u003c/span\u003e\u003c/span\u003e\u003ca href=\"https://productmint.com/brave-business-model-how-does-brave-make-money/\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cspan\u003e\u003cspan\u003eBrave\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e\u003cspan\u003e again\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e)?\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003ch2\u003eMoney for the Ladybird\u003c/h2\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003eKling plans for Ladybird to be donation-supported, which is challenging for platforms aiming to become market leaders. Could Signal survive on just donations if its user base scaled from \u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003ethe current \u003c/span\u003e\u003c/span\u003e\u003ca href=\"https://www.statista.com/statistics/1287453/whatsapp-telegram-signal-downloads-uk/\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cspan\u003e\u003cspan\u003e70 million\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e\u003cspan\u003e to \u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003eWhatsApp’s \u003c/span\u003e\u003c/span\u003e\u003ca href=\"https://backlinko.com/whatsapp-users\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cspan\u003e\u003cspan\u003e2 billion\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e\u003cspan\u003e per month\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e? Could Mastodon survive if it scaled from \u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003eits \u003c/span\u003e\u003c/span\u003e\u003ca href=\"https://www.thinkimpact.com/mastodon-statistics/\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cspan\u003e\u003cspan\u003e10 million\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e\u003cspan\u003e users\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e to \u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003ethe \u003c/span\u003e\u003c/span\u003e\u003ca href=\"https://www.demandsage.com/facebook-statistics/\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cspan\u003e\u003cspan\u003e3 billion \u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e\u003cspan\u003eper month of Facebook\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e? It would be a challenge.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003eBut again, you don’t need a large share of users to be viable and do something meaningful. As Kling puts it:\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003e“We feel there should be a browser not beholden to the advertising industry or anybody else for funding. Donations are all no strings attached, so you can’t get us to do anything besides putting your logo on our website.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003e“The world should have a browser that, even if we can’t throw a thousand engineers at performance, we believe we can build something that’s useful to people and works well enough that people would like it.”\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003ch2\u003eBrowser standards\u003c/h2\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003eAnother reason for building a new browser and rendering engine is standards. While it was during the web’s nascent days, anyone old enough to remember the dominance of Internet Explorer will remember how many websites wouldn’t work in anything but Internet Explorer. With the number of websites I encounter that seem to have only been tested to work in \u003c/span\u003e\u003c/span\u003e\u003ca href=\"https://www.chromium.org/chromium-projects/\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cspan\u003e\u003cspan\u003eChromium\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e\u003cspan\u003e-based (the open source core of Google Chrome and many other browsers) browsers, sometimes it feels much the same today. \u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003eThe web’s loose standards body, \u003c/span\u003e\u003c/span\u003e\u003ca href=\"https://www.w3.org/\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cspan\u003e\u003cspan\u003ethe W3C\u003c/span\u003e\u003c/span\u003e\u003c/a\u003e\u003cspan\u003e\u003cspan\u003e, publishes specifications and standards on many web features. None of them is binding, and browser engines can interpret them differently, not at all, or use their alternatives instead. With Chromium browsers so dominant, users can come to expect web pages to work a certain way, even if it’s not the “standard” way. And as frustrating as this might be for the spirit of the open and compliant web, with a 70% market share, why should designers and developers spend time building for targets other than Chromium?\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003eKling hopes Ladybird will stick to and implement the W3C specifications as much as possible.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003e“Sticking to the spec is one big reason people like what we’re doing. And it’s a big part of why we want to make a browser. We want to make one that follows the specs, and that proves that the specs are implementable.”\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003eDespite its early stages, Ladybird already has representatives in W3C working groups contributing to the project.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003e“We even have people from the W3C who now actively hang out in our community and actively contribute to Ladybird,” says Kling. “And this [plan to stick to spec] is sort of what got them interested.”\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003ch2\u003eBuilding for impact\u003c/h2\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003eKling and the Ladybird project aim for an alpha release around mid-2026, which sounds like a long time away, but the project has seven full-time engineers starting from scratch. In comparison, while there are no exact figures, that’s a tiny fraction of the probable size of the Chrome team, and the Chromium project alone has nearly as many lines of code as the Linux Kernel.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003eAt Ladybird, Kling aims to prioritise the largest impacts.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003e“I don’t have a full picture of everything needed, but it’s fairly complicated,” he says. “One issue we’re having is that we have to figure out what gives the most benefit across the board.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003e“We could spend a bunch of time getting games to work well in the browser, but maybe that doesn’t benefit most websites, even though it’s fun to do that kind of stuff. We want broad compatibility at reduced fidelity with a large part of the popular web.”\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003ch2\u003eFreeing the Ladybird\u003c/h2\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003eThe interests and enthusiasm of the contributor community will guide much of the feature development. As Kling says, sometimes this leads to less popular decisions.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003e“We are deferring on a bunch of things that are not popular. So we’re deferring on Windows and mobile. iOS outside of Europe is basically locked down browser-wise anyway.”\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003eContributing to a browser isn’t the simplest task, even as an experienced developer, but if Ladybird and what it stands for interests you, one task anyone (on macOS and Linux) can get involved with is testing websites to see if they work — and if not, why not.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003eThe web and how we interact with it is in a state of change. A change we can be an active part of if we want it.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e“We’ve all been shepherded into this reality where a big advertising company controls the web,” says Kling. “We’ve \u003c/span\u003e\u003c/span\u003e\u003cspan id=\"urn:local-text-annotation-qcdn3t3wtafy7nk5qyzazdsr35z04vg5\" itemid=\"https://data.thenextweb.com/tnw/entity/coding\"\u003e\u003cspan\u003e\u003cspan\u003eaccepted \u003c/span\u003e\u003c/span\u003e\u003c/span\u003e \u003cspan id=\"urn:local-text-annotation-7xl1tjftwqflrd1l8y5kyp0shq6sztfx\" itemid=\"https://data.thenextweb.com/tnw/entity/code\"\u003e\u003cspan\u003e\u003cspan\u003ethat\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e that’s \u003c/span\u003e\u003c/span\u003e\u003cspan id=\"urn:local-text-annotation-qp2zg3q9nx7ex97ay77kwva8sdt5l9fp\" itemid=\"https://data.thenextweb.com/tnw/entity/apple\"\u003e\u003cspan\u003e\u003cspan\u003ejust\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e the way things are. And then the idea that maybe it doesn’t have to be that way. I think that appeals to people.”\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n                        \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "11 min read",
  "publishedTime": "2025-01-30T11:20:34Z",
  "modifiedTime": "2025-01-30T10:18:23Z"
}
