[
  {
    "id": "12b65264-43a4-4acc-a89e-51cde61c8dce",
    "title": "Fix This Sign",
    "link": "https://xkcd.com/3113/",
    "description": "",
    "author": "",
    "published": "Wed, 09 Jul 2025 04:00:00 -0000",
    "image": "https://imgs.xkcd.com/comics/fix_this_sign.png",
    "source": "https://xkcd.com/rss.xml",
    "categories": null
  },
  {
    "id": "62b09670-8e6f-498b-bc19-8554a133471c",
    "title": "Geology Murder",
    "link": "https://xkcd.com/3112/",
    "description": "",
    "author": "",
    "published": "Mon, 07 Jul 2025 04:00:00 -0000",
    "image": "https://imgs.xkcd.com/comics/geology_murder.png",
    "source": "https://xkcd.com/rss.xml",
    "categories": null
  },
  {
    "id": "bd28a1c0-6321-4e5f-b0fb-7657cf00c881",
    "title": "Comic for 2021.12.21",
    "link": "http://explosm.net/comics/6060/",
    "description": "New Cyanide and Happiness Comic",
    "author": "",
    "published": "Tue, 21 Dec 2021 00:00:00 -0600",
    "image": "",
    "source": "http://feeds.feedburner.com/Explosm",
    "categories": [
      "Comics"
    ]
  },
  {
    "id": "e1d86b57-1fc3-4f07-8101-c3ccab1cfec0",
    "title": "Comic for 2021.12.20",
    "link": "http://explosm.net/comics/6059/",
    "description": "New Cyanide and Happiness Comic",
    "author": "",
    "published": "Mon, 20 Dec 2021 00:00:00 -0600",
    "image": "",
    "source": "http://feeds.feedburner.com/Explosm",
    "categories": [
      "Comics"
    ]
  },
  {
    "id": "345be7a3-9592-402a-8124-fe9258926b40",
    "title": "Sweater People",
    "link": "https://awkwardfamilyphotos.com/sweater-people",
    "description": "“Mom wanted a family photo. So… we family photo’d the heck out of it!” (submitted by Shawna)   The post Sweater People appeared first on AwkwardFamilyPhotos.com.",
    "author": "Team Awkward",
    "published": "Thu, 03 Jul 2025 16:59:54 +0000",
    "image": "https://s3.awkwardfamilyphotos.com/wp-content/uploads/2025/07/03095950/inbound237534454506147220-1024x768.jpg",
    "source": "https://awkwardfamilyphotos.com/feed/",
    "categories": [
      "Family Portrait",
      "Misc"
    ]
  },
  {
    "id": "ca58f7e0-8d4f-484f-ba68-3ed8160d5148",
    "title": "The Wicker Man",
    "link": "https://awkwardfamilyphotos.com/2025/07/01/the-wicker-man/",
    "description": "“Just a totally natural looking family portrait of a massive wicker peacock chair. Oh and me, my dad, and my sister. We apparently took this as a “gift” for my mom, which is why she was missing. Clearly this is the gift she didn’t know she wanted.”   The post The Wicker Man appeared first on AwkwardFamilyPhotos.com.",
    "author": "Jim Rowley",
    "published": "Wed, 02 Jul 2025 04:02:56 +0000",
    "image": "https://awkwardfamilyphotos.com/wp-content/uploads/2020/09/Screen-Shot-2020-09-21-at-4.01.55-PM-1024x1019.jpg",
    "source": "https://awkwardfamilyphotos.com/feed/",
    "categories": [
      "Photos"
    ]
  },
  {
    "id": "507676e9-16de-4986-87e7-1f9f16e0280b",
    "title": "One of the Biggest Hits of ‘Weird Al’s New Tour Is a Clip of Hank Hill",
    "link": "https://www.cracked.com/article_47323_one-of-the-biggest-hits-of-weird-als-new-tour-is-a-clip-of-hank-hill.html?newsletter-cat=movies-tv",
    "description": "By JM McNab Published: July 10th, 2025",
    "author": "",
    "published": "Thu, 10 Jul 2025 16:30:00 -0700",
    "image": "",
    "source": "http://feeds.feedburner.com/CrackedRSS",
    "categories": null
  },
  {
    "id": "026f1893-b193-4ae2-a133-b682e6a6930b",
    "title": "Aghast ‘Abbott Elementary’ Fans React to Quinta Brunson’s C-Word Shocker in ‘It’s Always Sunny in Philadelphia: ‘The Gasp I Gasped’",
    "link": "https://www.cracked.com/article_47325_aghast-abbott-elementary-fans-react-to-quinta-brunsons-c-word-shocker-in-its-always-sunny-in-philadelphia-the-gasp-i-gasped.html?newsletter-cat=movies-tv",
    "description": "By Carly Tennes Published: July 10th, 2025",
    "author": "",
    "published": "Thu, 10 Jul 2025 15:30:00 -0700",
    "image": "",
    "source": "http://feeds.feedburner.com/CrackedRSS",
    "categories": null
  },
  {
    "id": "2ae5bc4e-d914-4474-b33e-39b2a9e80068",
    "title": "Saturday Morning Breakfast Cereal - Wasp",
    "link": "https://www.smbc-comics.com/comic/wasp",
    "description": "Click here to go see the bonus panel!Hovertext:With apologies to Gary Larson.Today's News:",
    "author": "Zach Weinersmith",
    "published": "Thu, 10 Jul 2025 11:20:00 -0400",
    "image": "https://www.smbc-comics.com/comics/1751598559-20250710.png",
    "source": "https://www.smbc-comics.com/comic/rss",
    "categories": null
  },
  {
    "id": "9e610e4d-40ee-4a54-a4b0-878ccb60ca14",
    "title": "Saturday Morning Breakfast Cereal - Special",
    "link": "https://www.smbc-comics.com/comic/special-4",
    "description": "Click here to go see the bonus panel!Hovertext:If Roger Penrose is right, we should be doing this YESTERDAY.Today's News:",
    "author": "Zach Weinersmith",
    "published": "Wed, 09 Jul 2025 11:20:00 -0400",
    "image": "https://www.smbc-comics.com/comics/1751942799-20250715.png",
    "source": "https://www.smbc-comics.com/comic/rss",
    "categories": null
  },
  {
    "id": "c7505bff-07c9-46c8-837c-17d9457f8ba5",
    "title": "Employee quits job without notice after accepting a job offer, leading current CEO to reach out to their new job to complain: ‘He called to tell them I didn't put in a notice’",
    "link": "https://cheezburger.com/41405445/employee-quits-job-without-notice-after-accepting-a-job-offer-leading-current-ceo-to-reach-out-to",
    "description": "When accepting a new job offer, never disclose to your current employer where and who you are leaving them for. There is no reason why they should know, and it can only lead to complications, if you ask us, especially if they were not ready to let you go.Who should you tell? Your parents, your partner, maybe one or two trustworthy coworkers, but definitely NOT the boss, and definitely NOT as you hand them your letter of resignation.Bosses, as we all know, can become really petty people, especially if you push the right (or wrong, in this case) buttons. They can act solely out of the hurt they feel from the damage to their ego, and information like the name of the company you are leaving them for is not something they should have while they are feeling extremely petty.The employee in the story below came to this conclusion too late, after they discovered the CEO of the company they are leaving decided to contanct their new employer, and say some ugly things…",
    "author": "Bar Mor Hazut",
    "published": "Thu, 10 Jul 2025 16:00:00 -0700",
    "image": "",
    "source": "http://feeds.feedburner.com/failblog",
    "categories": [
      "boss",
      "workplace-stories",
      "employee",
      "manager",
      "job",
      "tales-from-the-workplace",
      "new job",
      "reddit story",
      "ceo",
      "overworked-employees",
      "workplace",
      "Reddit",
      "company",
      "funny",
      "quitting"
    ]
  },
  {
    "id": "0b1fe684-f8ab-4da1-9ccf-8243bf119860",
    "title": "26-year-old boyfriend refuses to pay his 22-year-old girlfriend back $240 for a scooter that he promised to buy back from her: 'I feel like I helped him out when he was in a tight spot, and now I’m being put in a corner.'",
    "link": "https://cheezburger.com/41093637/26-year-old-boyfriend-refuses-to-pay-his-22-year-old-girlfriend-back-240-for-a-scooter-that-he",
    "description": "Relationships are a two-way street. Any healthy relationship involves being able to rely on one another when things get hard. Over time, you learn how to work through things like emotional hardships, communication differences, or financial stressors. Love is a give and take, but some people just take and take. If you've had the misfortune of dealing with a freeloading partner, you might relate to this next Reddit story. Here, we have a young couple who live together. When money gets tight, the boyfriend sells his scooter to his girlfriend for $200 and agrees to buy it back from her when his finances are more secure. Well, that time comes, and he starts using the scooter again to get to work but refuses to pay his girlfriend back for it. This leaves her scrambling to figure out her transportation for her college courses and wondering why her boyfriend isn't acting like much of a boyfriend.",
    "author": "Christiana Maimone",
    "published": "Thu, 10 Jul 2025 15:00:00 -0700",
    "image": "",
    "source": "http://feeds.feedburner.com/failblog",
    "categories": [
      "boyfriend",
      "aita",
      "bad boyfriend",
      "AITAH",
      "freeloader",
      "reddit story",
      "relationships",
      "scooter",
      "girlfriend",
      "finances",
      "financial",
      "pay back",
      "exes",
      "relationship fails",
      "Reddit",
      "college"
    ]
  },
  {
    "id": "e4a09a04-22da-402f-94ba-b457af409a44",
    "title": "'We're not a long-term boarding facility': Previous owner calls new pawrent a “cat thief” and demands rehomed cat back, despite giving up her fluffy feline on a whim half a year ago",
    "link": "https://cheezburger.com/41360389/were-not-a-long-term-boarding-facility-previous-owner-calls-new-pawrent-a-cat-thief-and-demands",
    "description": "If you are forced to rehome your cat, that is your time to say goodbye. There are no \"take-backsies\" after giving your fluffy feline up to another purrson that loves them.Rehoming a cat, and introducing them to a new household, is a daunting task. Cats, despite all of their stereotypes, are sensitive creatures and take a lot of time to adjust to new surroundings. It took one of our rescues three full months before she felt comfortable sleeping on the couch, or in her bed. The first couple of weeks, she hid under the bed. You have to give them their space to come to you.So imagine adopting a friend's rehomed cat, taking the time to introduce it to your own cat, and then falling in love with your new fuzzy feline. Then, five months later, the original owner comes back and demands their cat back! No thanks, this cat is ours now. Don't let the door hit you on the way out! Scroll down to read through the spicy story below.Fluff. Chaos. Drama! Our weekly cat newsletter has it all -  subscribe here.",
    "author": "Blake Seidel",
    "published": "Thu, 10 Jul 2025 08:00:00 -0700",
    "image": "https://i.chzbgr.com/completestore/25/7/7/EBGHu32nhkqgOYyLxAlp5g2.png",
    "source": "http://feeds.feedburner.com/icanhascheezburger",
    "categories": [
      "fluffy felines",
      "friendship drama",
      "rehome",
      "cat owners",
      "cat parents",
      "Cats",
      "animals"
    ]
  },
  {
    "id": "8541df37-7469-463b-b3b8-e9c68b2ce2e8",
    "title": "22 Meowsical Memes for When Cats Take Over Your Playlist",
    "link": "https://cheezburger.com/41395973/22-meowsical-memes-for-when-cats-take-over-your-playlist",
    "description": "Cats and music. Two things that make life instantly better, and when you put them together? Pawsitively iconic. Whether it's a fluffy tabby sprawled on a record player like it's a VIP lounge, or a dramatic meow breaking the silence like a true opera diva, cats know how to enjoy a good tune.Some like to vibe in silence, eyes closed, soaking in every note like they're deep in a jazz club. Others prefer chaos: yowling along to pop songs, slapping piano keys like they're composing the next big hit, or attacking your headphones mid-chorus because their taste is clearly superior. And let's not forget the ones who love to nap right in front of the speaker.They might not read music, but they sure know how to feel it. With every tail flick, ear twitch, and soulful stare into the distance, these fur-covered music critics remind us that the best way to enjoy a song is with your whole heart… and maybe a little cattitude.Fluff. Chaos. Drama! Our weekly cat newsletter has it all -  subscribe here.",
    "author": "Sarah Brown",
    "published": "Thu, 10 Jul 2025 16:00:00 -0700",
    "image": "",
    "source": "http://feeds.feedburner.com/icanhascheezburger",
    "categories": [
      "Music",
      "cute",
      "Memes",
      "lol",
      "feline",
      "hissterical",
      "Cats",
      "funny",
      "cat memes"
    ]
  },
  {
    "id": "f895164d-d0d8-42bb-9e1a-e3caad9ba746",
    "title": "01/15/21 PHD comic: 'NEW BOOK! Out of Your Mind!'",
    "link": "http://www.phdcomics.com/comics.php?f=2051",
    "description": "Piled Higher \u0026 Deeper by Jorge Cham www.phdcomics.com title: \"NEW BOOK! Out of Your Mind!\" - originally published 1/15/2021 For the latest news in PHD Comics, CLICK HERE!",
    "author": "",
    "published": "Mon, 31 Jan 2022 11:24:26 -0800",
    "image": "http://www.phdcomics.com/comics/archive/phd011525s.gif",
    "source": "http://phdcomics.com/gradfeed.php",
    "categories": null
  },
  {
    "id": "a2ce644f-939e-45d8-8bd0-15e6aae64861",
    "title": "08/31/23 PHD comic: 'New Book! Oliver's Great Big Universe!'",
    "link": "http://www.phdcomics.com/comics.php?f=2050",
    "description": "Piled Higher \u0026 Deeper by Jorge Cham www.phdcomics.com title: \"New Book! Oliver's Great Big Universe!\" - originally published 8/31/2023 For the latest news in PHD Comics, CLICK HERE!",
    "author": "",
    "published": "Tue, 14 Dec 2021 11:53:03 -0800",
    "image": "http://www.phdcomics.com/comics/archive/phd083123s.gif",
    "source": "http://phdcomics.com/gradfeed.php",
    "categories": null
  },
  {
    "id": "9083c86e-579d-4c4c-bea9-97eea96a540d",
    "title": "Horseplay",
    "link": "https://www.penny-arcade.com/news/post/2025/07/09/horseplay",
    "description": "I watched a streamer man called Northernlion run an Umamusume Pretty Derby tournament and thirty thousand people were in the channel. Haven't heard of this potent brand, just as vigorous as the horses that inspired it? Of course you have. It's the anime/manga/music/game series from Cygames about beautiful, fast young women who are reincarnations of famous historical racehorses. Obviously.",
    "author": "",
    "published": "Wed, 09 Jul 2025 18:22:00 +0000",
    "image": "",
    "source": "https://www.penny-arcade.com/feed",
    "categories": null
  },
  {
    "id": "899d51c0-bd59-45ef-b978-96b7acd5cafa",
    "title": "Horseplay",
    "link": "https://www.penny-arcade.com/comic/2025/07/09/horseplay",
    "description": "New Comic: Horseplay",
    "author": "",
    "published": "Wed, 09 Jul 2025 07:01:00 +0000",
    "image": "",
    "source": "https://www.penny-arcade.com/feed",
    "categories": null
  },
  {
    "id": "86916051-d96e-42c8-9db3-f8710a0483db",
    "title": "Sunday Secrets",
    "link": "https://postsecret.com/2025/07/06/sunday-secrets-561/",
    "description": "The post Sunday Secrets appeared first on PostSecret.",
    "author": "Frank",
    "published": "Sun, 06 Jul 2025 00:14:00 +0000",
    "image": "https://i0.wp.com/postsecret.com/wp-content/uploads/2025/07/brother.jpg?resize=384%2C526\u0026ssl=1",
    "source": "https://postsecret.com/feed/?alt=rss",
    "categories": [
      "Uncategorized"
    ]
  },
  {
    "id": "2aeb31ca-0bda-4dd0-a75d-dd2cb514bae0",
    "title": "Classic Secrets",
    "link": "https://postsecret.com/2025/07/06/classic-secrets-567/",
    "description": "The post Classic Secrets appeared first on PostSecret.",
    "author": "Frank",
    "published": "Sun, 06 Jul 2025 00:11:00 +0000",
    "image": "https://i0.wp.com/postsecret.com/wp-content/uploads/2025/07/judicialchoice.jpg?resize=526%2C361\u0026ssl=1",
    "source": "https://postsecret.com/feed/?alt=rss",
    "categories": [
      "Uncategorized"
    ]
  },
  {
    "id": "34cf675f-6f14-4171-8c06-0066f2970a7d",
    "title": "A toddler tells a joke",
    "link": "http://theoatmeal.com/comics/toddler_joke?no_popup=1",
    "description": "A comic about a toddler telling his first joke.View on my website",
    "author": "Matthew Inman",
    "published": "2025-07-09T21:58:45+01:00",
    "image": "https://s3.amazonaws.com/theoatmeal-img/thumbnails/toddler_joke_big.png",
    "source": "http://feeds.feedburner.com/oatmealfeed",
    "categories": null
  },
  {
    "id": "4ee882fa-b07e-482a-9568-fe5dba218d8b",
    "title": "Rage",
    "link": "http://theoatmeal.com/comics/rat_rage?no_popup=1",
    "description": "A comic about a ratView on my website",
    "author": "Matthew Inman",
    "published": "2025-06-25T17:23:37+01:00",
    "image": "https://s3.amazonaws.com/theoatmeal-img/thumbnails/rat_rage_big.png",
    "source": "http://feeds.feedburner.com/oatmealfeed",
    "categories": null
  },
  {
    "id": "10255619-efec-4c5f-ada7-b9ffc5009c59",
    "title": "Wait…is this going to work?",
    "link": "https://thebloggess.com/2025/07/08/wait-is-this-going-to-work/",
    "description": "I have not been ignoring you but my blog has been broken and giving error messages every time I try to write, but I think maybe it’s fixed? I guess we’ll see if this goes through. I’m too tired to be entirely cohesive or funny but I wanted you to know that Hailey is homeContinue reading \"Wait…is this going to work?\"",
    "author": "thebloggess",
    "published": "Tue, 08 Jul 2025 19:38:03 +0000",
    "image": "",
    "source": "https://thebloggess.com/feed/",
    "categories": [
      "Random Crap"
    ]
  },
  {
    "id": "304efe73-505a-4805-827e-6bb9f8807b82",
    "title": "Rough week",
    "link": "https://thebloggess.com/2025/06/29/rough-week/",
    "description": "It’s been a very rough week and I’m lightly exhausted so instead of writing a real post I’m just sharing the letter I sent everyone on my art substack. Sorry. Any week with spinal taps in it doesn’t count as a real week. Hi friend, I’m writing this from the hospital where I’ve been withContinue reading \"Rough week\"",
    "author": "thebloggess",
    "published": "Mon, 30 Jun 2025 04:17:53 +0000",
    "image": "",
    "source": "https://thebloggess.com/feed/",
    "categories": [
      "Random Crap"
    ]
  },
  {
    "id": "7b72addd-a822-4ddf-9778-fa5e32ad38f7",
    "title": "The Middle(ware) Child",
    "link": "https://thedailywtf.com/articles/the-middle-ware-child",
    "description": "Once upon a time, there was a bank whose business relied on a mainframe. As the decades passed and the 21st century dawned, the bank's bigwigs realized they had to upgrade their frontline systems to applications built in Java and .NET, but—for myriad reasons that boiled down to cost, fear, and stubbornness—they didn't want to migrate away from the mainframe entirely. They also didn't want the new frontline systems to talk directly to the mainframe or vice-versa. So they tasked old-timer Edgar with writing some middleware. Edgar's brainchild was a Windows service that took care of receiving frontline requests, passing them to the mainframe, and sending the responses back. Edgar's middleware worked well, so well that it was largely forgotten about. It outlasted Edgar himself, who, after another solid decade of service, moved on to another company. A few years later, our submitter John F. joined the bank's C# team. By this point, the poor middleware seemed to be showing its age. A strange problem had arisen: between 8:00AM and 5:00PM, every 45 minutes or so, it would lock up and have to be restarted. Outside of those hours, there was no issue. The problem was mitigated by automatic restarts, but it continued to inflict pain and aggravation upon internal users and external customers. A true solution had to be found. Unfortunately, Edgar was long gone. The new \"owner\" of the middleware was an infrastructure team containing zero developers. Had Edgar left them any documentation? No. Source code? Sort of. Edgar had given a copy of the code to his friend Bob prior to leaving. Unfortunately, Bob's copy was a few point releases behind the version of middleware running in production. It was also in C, and there were no C developers to be found anywhere in the company. And so, the bank's bigwigs cobbled together a diverse team of experts. There were operating system people, network people, and software people ... including the new guy, John. Poor John had the unenviable task of sifting through Edgar's source code. Just as the C# key sits right next to the C key on a piano, reasoned the bigwigs, C# couldn't be that different from C. John toiled in an unfamiliar language with no build server or test environment to aid him. It should be no great surprise that he got nowhere. A senior coworker suggested that he check what Windows' Process Monitor registered when the middleware was running. John allowed a full day to pass, then looked at the results: it was now clear that the middleware was constantly creating and destroying threads. John wrote a Python script to analyze the threads, and found that most of them lived for only seconds. However, every 5 minutes, a thread was created but never destroyed. This only happened during the hours of 8:00AM to 5:00PM. At the next cross-functional team meeting behind closed doors, John finally had something of substance to report to the large group seated around the conference room table. There was still a huge mystery to solve: where were these middleware-killing threads coming from? \"Wait a minute! Wasn't Frank doing something like that?\" one of the other team members piped up. \"Frank!\" A department manager with no technical expertise, who insisted on attending every meeting regardless, darted up straight in his chair. For once, he wasn't haranguing them for their lack of progress. He resembled a wolf who'd sniffed blood in the air. \"You mean Frank from Accounting?!\" This was the corporate equivalent of an arrest warrant. Frank from Accounting was duly called forth. \"That's my program.\" Frank stood before the table, laid back and blithe despite the obvious frayed nerves of several individuals within the room. \"It queries the middleware every 5 minutes.\" They were finally getting somewhere. Galvanized, John's heart pounded. \"How?\" he asked. \"Well, it could be that the middleware is down, so first, my program opens a connection just to make sure it's working,\" Frank explained. \"If that works, it opens another connection and sends the query.\" John's confusion mirrored the multiple frowns that filled the room. He forced himself to carefully parse what he'd just heard. \"What happens to the first connection?\" \"What do you mean?\" Frank asked. \"You said your program opens two connections. What do you do with the first one?\" \"Oh! I just use that one to test whether the middleware is up.\" \"You don't need to do that!\" one of the networking experts snarled. \"For Pete's sake, take that out of your code! Don't you realize you're tanking this thing for everyone else?\" Frank's expression made clear that he was entirely oblivious to the chaos wrought by his program. Somehow, he survived the collective venting of frustration that followed within that conference room. After one small update to Frank's program, the middleware stabilized—for the time being. And while Frank became a scapegoat and villain to some, he was a hero to many, many more. After all, he single-handedly convinced the bank's bigwigs that the status quo was too precarious. They began to plan out a full migration away from mainframe, a move that would free them from their dependence upon aging, orphaned middleware. Now that the mystery had been solved, John knew where to look in Edgar's source code. The thread pool had a limit of 10, and every thread began by waiting for input. The middleware could handle bad input well enough, but it hadn't been written to handle the case of no input at all. [Advertisement] Utilize BuildMaster to release your software with confidence, at the pace your business demands. Download today!",
    "author": "Ellis Morning",
    "published": "Thu, 10 Jul 2025 06:30:00 GMT",
    "image": "https://upload.wikimedia.org/wikipedia/commons/thumb/d/d8/Edgar_Degas_-_Waiting_-_Google_Art_Project.jpg/512px-Edgar_Degas_-_Waiting_-_Google_Art_Project.jpg?20121019043457",
    "source": "http://syndication.thedailywtf.com/TheDailyWtf",
    "categories": [
      "Feature Articles"
    ]
  },
  {
    "id": "80f63352-83f0-4c54-aba1-1439a2611169",
    "title": "CodeSOD: The XML Dating Service",
    "link": "https://thedailywtf.com/articles/the-xml-dating-service",
    "description": "One of the endless struggles in writing reusable API endpoints is creating useful schemas to describe them. Each new serialization format comes up with new ways to express your constraints, each with their own quirks and footguns and absolute trainwrecks. Maarten has the \"pleasure\" of consuming an XML-based API, provided by a third party. It comes with an XML schema, for validation. Now, the XML Schema Language has a large number of validators built in. For example, if you want to restrict a field to being a date, you can mark it's type as xsd:date. This will enforce a YYYY-MM-DD format on the data. If you want to ruin that validation, you can do what the vendor did: \u003cxsd:simpleType name=\"DatumType\"\u003e \u003cxsd:annotation\u003e \u003cxsd:documentation\u003eYYYY-MM-DDxsd:documentation\u003e xsd:annotation\u003e \u003cxsd:restriction base=\"xsd:date\"\u003e \u003cxsd:pattern value=\"(1|2)[0-9]{3}-(0|1)[0-9]-[0-3][0-9]\" /\u003e xsd:restriction\u003e xsd:simpleType\u003e You can see the xsd:pattern element, which applies a regular expression to validation. And this regex will \"validate\" dates, excluding things which are definitely not dates, and allowing very valid dates, like February 31st, November 39th, and the 5th of Bureaucracy (the 18th month of the year), as 2025-02-31, 2025-11-39 and 2025-18-05 are all valid strings according to the regex. Now, an astute reader will note that this is a xsd:restriction on a date; this means that it's applied in addition to ensuring the value is a valid date. So this idiocy is harmless. If you removed the xsd:pattern element, the behavior would remain unchanged. That leads us to a series of possible conclusions: either they don't understand how XML schema restrictions work, or they don't understand how dates work. As to which one applies, well, I'd say 1/3 chance they don't understand XML, 1/3 chance they don't understand dates, and a 1/3 chance they don't understand both. [Advertisement] Picking up NuGet is easy. Getting good at it takes time. Download our guide to learn the best practice of NuGet for the Enterprise.",
    "author": "Remy Porter",
    "published": "Wed, 09 Jul 2025 06:30:00 GMT",
    "image": "",
    "source": "http://syndication.thedailywtf.com/TheDailyWtf",
    "categories": [
      "CodeSOD"
    ]
  },
  {
    "id": "bd9931c6-73e9-4f1f-bf0a-eb2ef1db297b",
    "title": "Imposter Uses AI To Impersonate Marco Rubio",
    "link": "https://theonion.com/imposter-uses-ai-to-impersonate-marco-rubio/",
    "description": "An AI-generated impostor posing as Secretary of State Marco Rubio contacted foreign ministers, a U.S. senator, and a governor, raising alarms as the technology becomes more accessible. What do you think? The post Imposter Uses AI To Impersonate Marco Rubio appeared first on The Onion.",
    "author": "The Onion Staff",
    "published": "Thu, 10 Jul 2025 20:43:15 +0000",
    "image": "https://theonion.com/wp-content/uploads/2025/05/Face-Young-Man.jpg?w=200",
    "source": "https://www.theonion.com/rss",
    "categories": [
      "American Voices",
      "Marco Rubio",
      "Technology",
      "Vol 61: Issue 28"
    ]
  },
  {
    "id": "b1428eb3-09b0-4a9f-b853-22464243c80c",
    "title": "Texas Politicians Used Burner Email To Request FEMA Funds",
    "link": "https://theonion.com/texas-politicians-used-burner-email-to-request-fema-funds/",
    "description": "AUSTIN, TX—In an effort to avoid humiliating themselves in front of their fellow conservatives, elected officials in Texas used a burner email to request funds from the Federal Emergency Management Agency following last week’s devastating floods, sources reported Thursday. “I set up an anonymous account, floodmoney@hotmail.com, and shamefully requested more than $70 million in disaster […] The post Texas Politicians Used Burner Email To Request FEMA Funds appeared first on The Onion.",
    "author": "The Onion Staff",
    "published": "Thu, 10 Jul 2025 16:56:08 +0000",
    "image": "",
    "source": "https://www.theonion.com/rss",
    "categories": [
      "Politics",
      "Government",
      "Vol 61: Issue 28"
    ]
  }
]
