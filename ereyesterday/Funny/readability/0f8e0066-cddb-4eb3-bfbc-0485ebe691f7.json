{
  "id": "0f8e0066-cddb-4eb3-bfbc-0485ebe691f7",
  "title": "CodeSOD: A Little Extra Padding",
  "link": "https://thedailywtf.com/articles/a-little-extra-padding",
  "description": "Today's anonymous submitter supplies us with a classic antipattern: padding via switch: string TransactionOrder = (string)dr[\"TransactionOrder\"].ToString().Trim(); switch (TransactionOrder.Length) { case 1: TransactionOrder = \"000\" + TransactionOrder; break; case 2: TransactionOrder = \"00\" + TransactionOrder; break; case 3: TransactionOrder = \"0\" + TransactionOrder; break; default: TransactionOrder = TransactionOrder; break; } There's not much to say here, as we've seen this before, and we'll see it again. It's wrong, it's not how anything should be done, yet here it is, yet again. In this case, it's C#, which also has a lovely set of built-in options for doing this, making this code totally unnecessary. [Advertisement] ProGet’s got you covered with security and access controls on your NuGet feeds. Learn more.",
  "author": "Remy Porter",
  "published": "Mon, 16 Dec 2024 06:30:00 GMT",
  "source": "http://syndication.thedailywtf.com/TheDailyWtf",
  "categories": [
    "CodeSOD"
  ],
  "byline": "Remy Porter",
  "length": 1243,
  "excerpt": "Today's anonymous submitter supplies us with a classic antipattern: padding via switch: string TransactionOrder = (string)dr[\"TransactionOrder\"].ToString().Trim(); switch (TransactionOrder.Length) { case 1: TransactionOrder = \"000\" + TransactionOrder; break; case 2: TransactionOrder = \"00\" + TransactionOrder; break; case 3: TransactionOrder = \"0\" + TransactionOrder; break; default: TransactionOrder = TransactionOrder; break; }",
  "siteName": "The Daily WTF",
  "favicon": "",
  "text": "by in CodeSOD on 2024-12-16 Edit Remy PorterComputers were a mistake, which is why I'm trying to shoot them into space. Editor-in-Chief for TDWTF. Today's anonymous submitter supplies us with a classic antipattern: padding via switch: string TransactionOrder = (string)dr[\"TransactionOrder\"].ToString().Trim(); switch (TransactionOrder.Length) { case 1: TransactionOrder = \"000\" + TransactionOrder; break; case 2: TransactionOrder = \"00\" + TransactionOrder; break; case 3: TransactionOrder = \"0\" + TransactionOrder; break; default: TransactionOrder = TransactionOrder; break; } There's not much to say here, as we've seen this before, and we'll see it again. It's wrong, it's not how anything should be done, yet here it is, yet again. In this case, it's C#, which also has a lovely set of built-in options for doing this, making this code totally unnecessary. [Advertisement] ProGet’s got you covered with security and access controls on your NuGet feeds. Learn more.",
  "image": "https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv itemscope=\"\" itemtype=\"http://schema.org/Article\" id=\"article-page\"\u003e\n\n        \n        \u003cp\u003e\u003cspan\u003eby \n            in \u003ca itemprop=\"articleSection\" href=\"https://thedailywtf.com/series/code-sod\"\u003eCodeSOD\u003c/a\u003e\n            on \u003cspan itemprop=\"datePublished\" content=\"2024-12-16\"\u003e2024-12-16\u003c/span\u003e\n            \u003ca href=\"https://thedailywtf.com/admin/article/edit/10804\" rel=\"nofollow\"\u003eEdit\u003c/a\u003e\n        \u003c/span\u003e\u003c/p\u003e\n        \u003cdiv itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\"\u003e\n            \u003cp\u003e\u003cimg itemprop=\"image\" src=\"https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg\"/\u003e\n            \u003ca itemprop=\"name\" href=\"https://thedailywtf.com/authors/remy-porter\"\u003eRemy Porter\u003c/a\u003e\u003c/p\u003e\u003cp itemprop=\"description\"\u003eComputers were a mistake, which is why I\u0026#39;m trying to shoot them into space. Editor-in-Chief for TDWTF.\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv itemprop=\"articleBody\"\u003e\n            \u003cp\u003eToday\u0026#39;s anonymous submitter supplies us with a classic antipattern: padding via \u003ccode\u003eswitch\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u003cspan\u003estring\u003c/span\u003e TransactionOrder = (\u003cspan\u003estring\u003c/span\u003e)dr[\u003cspan\u003e\u0026#34;TransactionOrder\u0026#34;\u003c/span\u003e].ToString().Trim();\n\n\u003cspan\u003eswitch\u003c/span\u003e (TransactionOrder.Length)\n{\n        \u003cspan\u003ecase\u003c/span\u003e \u003cspan\u003e1\u003c/span\u003e:\n                TransactionOrder = \u003cspan\u003e\u0026#34;000\u0026#34;\u003c/span\u003e + TransactionOrder;\n                \u003cspan\u003ebreak\u003c/span\u003e;\n        \u003cspan\u003ecase\u003c/span\u003e \u003cspan\u003e2\u003c/span\u003e:\n                TransactionOrder = \u003cspan\u003e\u0026#34;00\u0026#34;\u003c/span\u003e + TransactionOrder;\n                \u003cspan\u003ebreak\u003c/span\u003e;\n        \u003cspan\u003ecase\u003c/span\u003e \u003cspan\u003e3\u003c/span\u003e:\n                TransactionOrder = \u003cspan\u003e\u0026#34;0\u0026#34;\u003c/span\u003e + TransactionOrder;\n                \u003cspan\u003ebreak\u003c/span\u003e;\n        \u003cspan\u003edefault\u003c/span\u003e:\n                TransactionOrder = TransactionOrder;\n                \u003cspan\u003ebreak\u003c/span\u003e;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThere\u0026#39;s not much to say here, as we\u0026#39;ve seen this before, and we\u0026#39;ll see it again. It\u0026#39;s wrong, it\u0026#39;s not how anything should be done, yet here it is, yet again. In this case, it\u0026#39;s C#, which also has a lovely set of built-in options for doing this, making this code totally unnecessary.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://thedailywtf.com/images/inedo/proget-icon.png\"/\u003e [Advertisement] \n\tProGet’s got you covered with security and access controls on your NuGet feeds. \u003ca href=\"https://inedo.com/proget/private-nuget-server?utm_source=tdwtf\u0026amp;utm_medium=footer\u0026amp;utm_content=GotYouCoveredFooter\u0026amp;utm_campaign=Cyclops2020\"\u003eLearn more.\u003c/a\u003e\n\u003c/p\u003e\n\n\n        \u003c/div\u003e\n\n        \n    \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": "2024-12-16T06:30:00Z",
  "modifiedTime": null
}
