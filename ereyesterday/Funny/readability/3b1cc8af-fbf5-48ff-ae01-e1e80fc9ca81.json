{
  "id": "3b1cc8af-fbf5-48ff-ae01-e1e80fc9ca81",
  "title": "CodeSOD: A Base Nature",
  "link": "https://thedailywtf.com/articles/a-base-nature",
  "description": "Once again, we take a look at the traditional \"if (boolean) return true; else return false;\" pattern. But today's, from RJ, offers us a bonus twist. public override bool IsValid { get { if (!base.IsValid) return false; return true; } } As promised, this is a useless conditional. return base.IsValid would do the job just as well. Except, that's the twist, isn't it. base is our superclass. We're overriding a method on our superclass to… just do what the base method does. This entire function could just be deleted. No one would notice. And yet, it hasn't been. Everyone agrees that it should be, yet it hasn't been. No one's doing it. It just sits there, like a pimple, begging to be popped. [Advertisement] Keep the plebs out of prod. Restrict NuGet feed privileges with ProGet. Learn more.",
  "author": "Remy Porter",
  "published": "Wed, 30 Oct 2024 06:30:00 GMT",
  "source": "http://syndication.thedailywtf.com/TheDailyWtf",
  "categories": [
    "CodeSOD"
  ],
  "byline": "Remy Porter",
  "length": 1086,
  "excerpt": "Once again, we take a look at the traditional \"if (boolean) return true; else return false;\" pattern. But today's, from RJ, offers us a bonus twist. public override bool IsValid { get { if (!base.IsValid) return false; return true; } }",
  "siteName": "The Daily WTF",
  "favicon": "",
  "text": "by in CodeSOD on 2024-10-30 Edit Remy PorterComputers were a mistake, which is why I'm trying to shoot them into space. Editor-in-Chief for TDWTF. Once again, we take a look at the traditional \"if (boolean) return true; else return false;\" pattern. But today's, from RJ, offers us a bonus twist. public override bool IsValid { get { if (!base.IsValid) return false; return true; } } As promised, this is a useless conditional. return base.IsValid would do the job just as well. Except, that's the twist, isn't it. base is our superclass. We're overriding a method on our superclass to… just do what the base method does. This entire function could just be deleted. No one would notice. And yet, it hasn't been. Everyone agrees that it should be, yet it hasn't been. No one's doing it. It just sits there, like a pimple, begging to be popped. [Advertisement] Keep the plebs out of prod. Restrict NuGet feed privileges with ProGet. Learn more.",
  "image": "https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv itemscope=\"\" itemtype=\"http://schema.org/Article\" id=\"article-page\"\u003e\n\n        \n        \u003cp\u003e\u003cspan\u003eby \n            in \u003ca itemprop=\"articleSection\" href=\"https://thedailywtf.com/series/code-sod\"\u003eCodeSOD\u003c/a\u003e\n            on \u003cspan itemprop=\"datePublished\" content=\"2024-10-30\"\u003e2024-10-30\u003c/span\u003e\n            \u003ca href=\"https://thedailywtf.com/admin/article/edit/10770\" rel=\"nofollow\"\u003eEdit\u003c/a\u003e\n        \u003c/span\u003e\u003c/p\u003e\n        \u003cdiv itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\"\u003e\n            \u003cp\u003e\u003cimg itemprop=\"image\" src=\"https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg\"/\u003e\n            \u003ca itemprop=\"name\" href=\"https://thedailywtf.com/authors/remy-porter\"\u003eRemy Porter\u003c/a\u003e\u003c/p\u003e\u003cp itemprop=\"description\"\u003eComputers were a mistake, which is why I\u0026#39;m trying to shoot them into space. Editor-in-Chief for TDWTF.\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv itemprop=\"articleBody\"\u003e\n            \u003cp\u003eOnce again, we take a look at the traditional \u0026#34;if (boolean) return true; else return false;\u0026#34; pattern. But today\u0026#39;s, from \u003cstrong\u003eRJ\u003c/strong\u003e, offers us a bonus twist.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eoverride\u003c/span\u003e \u003cspan\u003ebool\u003c/span\u003e IsValid\n{\n   \u003cspan\u003eget\u003c/span\u003e\n   {\n      \u003cspan\u003eif\u003c/span\u003e (!\u003cspan\u003ebase\u003c/span\u003e.IsValid)\n         \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003efalse\u003c/span\u003e;\n\n      \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003etrue\u003c/span\u003e;\n   }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eAs promised, this is a useless conditional. \u003ccode\u003ereturn base.IsValid\u003c/code\u003e would do the job just as well. Except, that\u0026#39;s the twist, isn\u0026#39;t it. \u003ccode\u003ebase\u003c/code\u003e is our superclass. We\u0026#39;re overriding a method on our superclass to… just do what the base method does.\u003c/p\u003e\n\u003cp\u003eThis entire function could just be deleted. No one would notice. And yet, it hasn\u0026#39;t been. Everyone agrees that it \u003cem\u003eshould\u003c/em\u003e be, yet it hasn\u0026#39;t been. No one\u0026#39;s doing it. It just sits there, like a pimple, begging to be popped.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://thedailywtf.com/images/inedo/proget-icon.png\"/\u003e [Advertisement] \n\tKeep the plebs out of prod. Restrict NuGet feed privileges with ProGet. \u003ca href=\"https://inedo.com/proget/private-nuget-server?utm_source=tdwtf\u0026amp;utm_medium=footer\u0026amp;utm_content=PlebsFooter\u0026amp;utm_campaign=Cyclops2020\"\u003eLearn more.\u003c/a\u003e\n\u003c/p\u003e\n\n\n        \u003c/div\u003e\n\n        \n    \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": "2024-10-30T06:30:00Z",
  "modifiedTime": null
}
