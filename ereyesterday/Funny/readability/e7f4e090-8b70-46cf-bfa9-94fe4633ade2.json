{
  "id": "e7f4e090-8b70-46cf-bfa9-94fe4633ade2",
  "title": "CodeSOD: One Month",
  "link": "https://thedailywtf.com/articles/one-month",
  "description": "Joseph sends us a tried and true classic: bad date handling code, in JavaScript. We've all seen so much bad date handling code that it takes something special to make me do the \"confused dog\" head tilt. var months=new Array(13); months[1]='January'; months[2]='February'; months[3]='March'; months[4]='April'; months[5]='May'; months[6]='June'; months[7]='July'; months[8]='August'; months[9]='September'; months[10]='October'; months[11]='November'; months[12]='December'; var time=new Date(); var lmonth=months[time.getMonth() + 1]; var date=time.getDate(); var year=time.getFullYear(); document.write(lmonth + ' '); document.write(date + ', ' + year); We create a 13 element array to hold our twelve months, because we can't handle it being zero indexed. This array is going to be our lookup table for month names, so I almost forgive making it one-indexed- January is month 1, normally. Almost. Because not only is that stupid, the getMonth() function on a date returns the month as a zero-indexed number. January is month 0. So they need to add one to the result of getMonth for their lookup table to work, and it's just so dumb. Then of course, be output this all using document.write, so we just know it's terrible JavaScript, all the way around. [Advertisement] ProGet’s got you covered with security and access controls on your NuGet feeds. Learn more.",
  "author": "Remy Porter",
  "published": "Tue, 17 Dec 2024 06:30:00 GMT",
  "source": "http://syndication.thedailywtf.com/TheDailyWtf",
  "categories": [
    "CodeSOD"
  ],
  "byline": "Remy Porter",
  "length": 1660,
  "excerpt": "Joseph sends us a tried and true classic: bad date handling code, in JavaScript. We've all seen so much bad date handling code that it takes something special to make me do the \"confused dog\" head tilt. var months=new Array(13); months[1]='January'; months[2]='February'; months[3]='March'; months[4]='April'; months[5]='May'; months[6]='June'; months[7]='July'; months[8]='August'; months[9]='September'; months[10]='October'; months[11]='November'; months[12]='December'; var time=new Date(); var lmonth=months[time.getMonth() + 1]; var date=time.getDate(); var year=time.getFullYear(); document.write(lmonth + ' '); document.write(date + ', ' + year);",
  "siteName": "The Daily WTF",
  "favicon": "",
  "text": "by in CodeSOD on 2024-12-17 Edit Remy PorterComputers were a mistake, which is why I'm trying to shoot them into space. Editor-in-Chief for TDWTF. Joseph sends us a tried and true classic: bad date handling code, in JavaScript. We've all seen so much bad date handling code that it takes something special to make me do the \"confused dog\" head tilt. var months=new Array(13); months[1]='January'; months[2]='February'; months[3]='March'; months[4]='April'; months[5]='May'; months[6]='June'; months[7]='July'; months[8]='August'; months[9]='September'; months[10]='October'; months[11]='November'; months[12]='December'; var time=new Date(); var lmonth=months[time.getMonth() + 1]; var date=time.getDate(); var year=time.getFullYear(); document.write(lmonth + ' '); document.write(date + ', ' + year); We create a 13 element array to hold our twelve months, because we can't handle it being zero indexed. This array is going to be our lookup table for month names, so I almost forgive making it one-indexed- January is month 1, normally. Almost. Because not only is that stupid, the getMonth() function on a date returns the month as a zero-indexed number. January is month 0. So they need to add one to the result of getMonth for their lookup table to work, and it's just so dumb. Then of course, be output this all using document.write, so we just know it's terrible JavaScript, all the way around. [Advertisement] ProGet’s got you covered with security and access controls on your NuGet feeds. Learn more.",
  "image": "https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv itemscope=\"\" itemtype=\"http://schema.org/Article\" id=\"article-page\"\u003e\n\n        \n        \u003cp\u003e\u003cspan\u003eby \n            in \u003ca itemprop=\"articleSection\" href=\"https://thedailywtf.com/series/code-sod\"\u003eCodeSOD\u003c/a\u003e\n            on \u003cspan itemprop=\"datePublished\" content=\"2024-12-17\"\u003e2024-12-17\u003c/span\u003e\n            \u003ca href=\"https://thedailywtf.com/admin/article/edit/10805\" rel=\"nofollow\"\u003eEdit\u003c/a\u003e\n        \u003c/span\u003e\u003c/p\u003e\n        \u003cdiv itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\"\u003e\n            \u003cp\u003e\u003cimg itemprop=\"image\" src=\"https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg\"/\u003e\n            \u003ca itemprop=\"name\" href=\"https://thedailywtf.com/authors/remy-porter\"\u003eRemy Porter\u003c/a\u003e\u003c/p\u003e\u003cp itemprop=\"description\"\u003eComputers were a mistake, which is why I\u0026#39;m trying to shoot them into space. Editor-in-Chief for TDWTF.\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv itemprop=\"articleBody\"\u003e\n            \u003cp\u003e\u003cstrong\u003eJoseph\u003c/strong\u003e sends us a tried and true classic: bad date handling code, in JavaScript. We\u0026#39;ve all seen so much bad date handling code that it takes something special to make me do the \u0026#34;confused dog\u0026#34; head tilt.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\t\t\u003cspan\u003evar\u003c/span\u003e months=\u003cspan\u003enew\u003c/span\u003e \u003cspan\u003eArray\u003c/span\u003e(\u003cspan\u003e13\u003c/span\u003e);\n\t\tmonths[\u003cspan\u003e1\u003c/span\u003e]=\u003cspan\u003e\u0026#39;January\u0026#39;\u003c/span\u003e;\n\t\tmonths[\u003cspan\u003e2\u003c/span\u003e]=\u003cspan\u003e\u0026#39;February\u0026#39;\u003c/span\u003e;\n\t\tmonths[\u003cspan\u003e3\u003c/span\u003e]=\u003cspan\u003e\u0026#39;March\u0026#39;\u003c/span\u003e;\n\t\tmonths[\u003cspan\u003e4\u003c/span\u003e]=\u003cspan\u003e\u0026#39;April\u0026#39;\u003c/span\u003e;\n\t\tmonths[\u003cspan\u003e5\u003c/span\u003e]=\u003cspan\u003e\u0026#39;May\u0026#39;\u003c/span\u003e;\n\t\tmonths[\u003cspan\u003e6\u003c/span\u003e]=\u003cspan\u003e\u0026#39;June\u0026#39;\u003c/span\u003e;\n\t\tmonths[\u003cspan\u003e7\u003c/span\u003e]=\u003cspan\u003e\u0026#39;July\u0026#39;\u003c/span\u003e;\n\t\tmonths[\u003cspan\u003e8\u003c/span\u003e]=\u003cspan\u003e\u0026#39;August\u0026#39;\u003c/span\u003e;\n\t\tmonths[\u003cspan\u003e9\u003c/span\u003e]=\u003cspan\u003e\u0026#39;September\u0026#39;\u003c/span\u003e;\n\t\tmonths[\u003cspan\u003e10\u003c/span\u003e]=\u003cspan\u003e\u0026#39;October\u0026#39;\u003c/span\u003e;\n\t\tmonths[\u003cspan\u003e11\u003c/span\u003e]=\u003cspan\u003e\u0026#39;November\u0026#39;\u003c/span\u003e;\n\t\tmonths[\u003cspan\u003e12\u003c/span\u003e]=\u003cspan\u003e\u0026#39;December\u0026#39;\u003c/span\u003e;\n\t\t\u003cspan\u003evar\u003c/span\u003e time=\u003cspan\u003enew\u003c/span\u003e \u003cspan\u003eDate\u003c/span\u003e();\n\t\t\u003cspan\u003evar\u003c/span\u003e lmonth=months[time.\u003cspan\u003egetMonth\u003c/span\u003e() + \u003cspan\u003e1\u003c/span\u003e];\n\t\t\u003cspan\u003evar\u003c/span\u003e date=time.\u003cspan\u003egetDate\u003c/span\u003e();\n\t\t\u003cspan\u003evar\u003c/span\u003e year=time.\u003cspan\u003egetFullYear\u003c/span\u003e();\n\t\t\u003cspan\u003edocument\u003c/span\u003e.\u003cspan\u003ewrite\u003c/span\u003e(lmonth + \u003cspan\u003e\u0026#39; \u0026#39;\u003c/span\u003e);\n\t\t\u003cspan\u003edocument\u003c/span\u003e.\u003cspan\u003ewrite\u003c/span\u003e(date + \u003cspan\u003e\u0026#39;, \u0026#39;\u003c/span\u003e + year);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWe create a 13 element array to hold our twelve months, because we can\u0026#39;t handle it being zero indexed. This array is going to be our lookup table for month names, so I almost forgive making it one-indexed- January is month 1, normally.\u003c/p\u003e\n\u003cp\u003eAlmost. Because not only is that stupid, the \u003ccode\u003egetMonth()\u003c/code\u003e function on a date returns the month as a zero-indexed number. January is month 0. So they need to add one to the result of \u003ccode\u003egetMonth\u003c/code\u003e for their lookup table to work, and it\u0026#39;s just so dumb.\u003c/p\u003e\n\u003cp\u003eThen of course, be output this all using \u003ccode\u003edocument.write\u003c/code\u003e, so we just know it\u0026#39;s terrible JavaScript, all the way around.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://thedailywtf.com/images/inedo/proget-icon.png\"/\u003e [Advertisement] \n\tProGet’s got you covered with security and access controls on your NuGet feeds. \u003ca href=\"https://inedo.com/proget/private-nuget-server?utm_source=tdwtf\u0026amp;utm_medium=footer\u0026amp;utm_content=GotYouCoveredFooter\u0026amp;utm_campaign=Cyclops2020\"\u003eLearn more.\u003c/a\u003e\n\u003c/p\u003e\n\n\n        \u003c/div\u003e\n\n        \n    \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": "2024-12-17T06:30:00Z",
  "modifiedTime": null
}
