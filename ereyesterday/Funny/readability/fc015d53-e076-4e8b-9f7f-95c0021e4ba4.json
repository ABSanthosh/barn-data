{
  "id": "fc015d53-e076-4e8b-9f7f-95c0021e4ba4",
  "title": "CodeSOD: A Steady Ship",
  "link": "https://thedailywtf.com/articles/a-steady-ship",
  "description": "You know what definitely never changes? Shipping prices. Famously static, despite all economic conditions and the same across all shipping providers. It doesn't matter where you're shipping from, or to, you know exactly what the price will be to ship that package at all times. Wait, what? You don't think that's true? It must be true, because Chris sent us this function, which calculates shipping prices, and it couldn't be wrong, could it? public double getShippingCharge(String shippingType, bool saturday, double subTot) { double shCharge = 0.00; if(shippingType.Equals(\"Ground\")) { if(subTot \u003c= 29.99 \u0026\u0026 subTot \u003e 0) { shCharge = 4.95; } else if(subTot \u003c= 99.99 \u0026\u0026 subTot \u003e 29.99) { shCharge = 7.95; } else if(subTot \u003c= 299.99 \u0026\u0026 subTot \u003e 99.99) { shCharge = 9.95; } else if(subTot \u003e 299.99) { shCharge = subTot * .05; } } else if(shippingType.Equals(\"Two-Day\")) { if(subTot \u003c= 29.99 \u0026\u0026 subTot \u003e 0) { shCharge = 14.95; } else if(subTot \u003c= 99.99 \u0026\u0026 subTot \u003e 29.99) { shCharge = 19.95; } else if(subTot \u003c= 299.99 \u0026\u0026 subTot \u003e 99.99) { shCharge = 29.95; } else if(subTot \u003e 299.99) { shCharge = subTot * .10; } } else if(shippingType.Equals(\"Next Day\")) { if(subTot \u003c= 29.99 \u0026\u0026 subTot \u003e 0) { shCharge = 24.95; } else if(subTot \u003c= 99.99 \u0026\u0026 subTot \u003e 29.99) { shCharge = 34.95; } else if(subTot \u003c= 299.99 \u0026\u0026 subTot \u003e 99.99) { shCharge = 44.95; } else if(subTot \u003e 299.99) { shCharge = subTot * .15; } } else if(shippingType.Equals(\"Next Day a.m.\")) { if(subTot \u003c= 29.99 \u0026\u0026 subTot \u003e 0) { shCharge = 29.95; } else if(subTot \u003c= 99.99 \u0026\u0026 subTot \u003e 29.99) { shCharge = 39.95; } else if(subTot \u003c= 299.99 \u0026\u0026 subTot \u003e 99.99) { shCharge = 49.95; } else if(subTot \u003e 299.99) { shCharge = subTot * .20; } } return shCharge; } Next you're going to tell me that passing the shipping types around as stringly typed data instead of enums is a mistake, too! [Advertisement] Utilize BuildMaster to release your software with confidence, at the pace your business demands. Download today!",
  "author": "Remy Porter",
  "published": "Thu, 10 Apr 2025 06:30:00 GMT",
  "source": "http://syndication.thedailywtf.com/TheDailyWtf",
  "categories": [
    "CodeSOD"
  ],
  "byline": "Remy Porter",
  "length": 2951,
  "excerpt": "You know what definitely never changes? Shipping prices. Famously static, despite all economic conditions and the same across all shipping providers. It doesn't matter where you're shipping from, or to, you know exactly what the price will be to ship that package at all times. Wait, what? You don't think that's true? It must be true, because Chris sent us this function, which calculates shipping prices, and it couldn't be wrong, could it?",
  "siteName": "The Daily WTF",
  "favicon": "",
  "text": "by in CodeSOD on 2025-04-10 Edit Remy PorterComputers were a mistake, which is why I'm trying to shoot them into space. Editor-in-Chief for TDWTF. You know what definitely never changes? Shipping prices. Famously static, despite all economic conditions and the same across all shipping providers. It doesn't matter where you're shipping from, or to, you know exactly what the price will be to ship that package at all times. Wait, what? You don't think that's true? It must be true, because Chris sent us this function, which calculates shipping prices, and it couldn't be wrong, could it? public double getShippingCharge(String shippingType, bool saturday, double subTot) { double shCharge = 0.00; if(shippingType.Equals(\"Ground\")) { if(subTot \u003c= 29.99 \u0026\u0026 subTot \u003e 0) { shCharge = 4.95; } else if(subTot \u003c= 99.99 \u0026\u0026 subTot \u003e 29.99) { shCharge = 7.95; } else if(subTot \u003c= 299.99 \u0026\u0026 subTot \u003e 99.99) { shCharge = 9.95; } else if(subTot \u003e 299.99) { shCharge = subTot * .05; } } else if(shippingType.Equals(\"Two-Day\")) { if(subTot \u003c= 29.99 \u0026\u0026 subTot \u003e 0) { shCharge = 14.95; } else if(subTot \u003c= 99.99 \u0026\u0026 subTot \u003e 29.99) { shCharge = 19.95; } else if(subTot \u003c= 299.99 \u0026\u0026 subTot \u003e 99.99) { shCharge = 29.95; } else if(subTot \u003e 299.99) { shCharge = subTot * .10; } } else if(shippingType.Equals(\"Next Day\")) { if(subTot \u003c= 29.99 \u0026\u0026 subTot \u003e 0) { shCharge = 24.95; } else if(subTot \u003c= 99.99 \u0026\u0026 subTot \u003e 29.99) { shCharge = 34.95; } else if(subTot \u003c= 299.99 \u0026\u0026 subTot \u003e 99.99) { shCharge = 44.95; } else if(subTot \u003e 299.99) { shCharge = subTot * .15; } } else if(shippingType.Equals(\"Next Day a.m.\")) { if(subTot \u003c= 29.99 \u0026\u0026 subTot \u003e 0) { shCharge = 29.95; } else if(subTot \u003c= 99.99 \u0026\u0026 subTot \u003e 29.99) { shCharge = 39.95; } else if(subTot \u003c= 299.99 \u0026\u0026 subTot \u003e 99.99) { shCharge = 49.95; } else if(subTot \u003e 299.99) { shCharge = subTot * .20; } } return shCharge; } Next you're going to tell me that passing the shipping types around as stringly typed data instead of enums is a mistake, too! [Advertisement] Utilize BuildMaster to release your software with confidence, at the pace your business demands. Download today!",
  "image": "https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv itemscope=\"\" itemtype=\"http://schema.org/Article\" id=\"article-page\"\u003e\n\n        \n        \u003cp\u003e\u003cspan\u003eby \n            in \u003ca itemprop=\"articleSection\" href=\"https://thedailywtf.com/series/code-sod\"\u003eCodeSOD\u003c/a\u003e\n            on \u003cspan itemprop=\"datePublished\" content=\"2025-04-10\"\u003e2025-04-10\u003c/span\u003e\n            \u003ca href=\"https://thedailywtf.com/admin/article/edit/10889\" rel=\"nofollow\"\u003eEdit\u003c/a\u003e\n        \u003c/span\u003e\u003c/p\u003e\n        \u003cdiv itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\"\u003e\n            \u003cp\u003e\u003cimg itemprop=\"image\" src=\"https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg\"/\u003e\n            \u003ca itemprop=\"name\" href=\"https://thedailywtf.com/authors/remy-porter\"\u003eRemy Porter\u003c/a\u003e\u003c/p\u003e\u003cp itemprop=\"description\"\u003eComputers were a mistake, which is why I\u0026#39;m trying to shoot them into space. Editor-in-Chief for TDWTF.\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv itemprop=\"articleBody\"\u003e\n            \u003cp\u003eYou know what definitely never changes? \u003cem\u003eShipping prices\u003c/em\u003e. Famously static, despite all economic conditions and the same across all shipping providers. It doesn\u0026#39;t matter where you\u0026#39;re shipping from, or to, you know exactly what the price will be to ship that package at all times.\u003c/p\u003e\n\u003cp\u003eWait, what? You don\u0026#39;t think that\u0026#39;s true? It must be true, because \u003cstrong\u003eChris\u003c/strong\u003e sent us this function, which calculates shipping prices, and it couldn\u0026#39;t be \u003cem\u003ewrong\u003c/em\u003e, could it?\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003edouble\u003c/span\u003e \u003cspan\u003egetShippingCharge\u003c/span\u003e(\u003cspan\u003eString shippingType, \u003cspan\u003ebool\u003c/span\u003e saturday, \u003cspan\u003edouble\u003c/span\u003e subTot\u003c/span\u003e)\u003c/span\u003e\n{\n    \u003cspan\u003edouble\u003c/span\u003e shCharge = \u003cspan\u003e0.00\u003c/span\u003e;\n    \u003cspan\u003eif\u003c/span\u003e(shippingType.Equals(\u003cspan\u003e\u0026#34;Ground\u0026#34;\u003c/span\u003e))\n    {\n        \u003cspan\u003eif\u003c/span\u003e(subTot \u0026lt;= \u003cspan\u003e29.99\u003c/span\u003e \u0026amp;\u0026amp; subTot \u0026gt; \u003cspan\u003e0\u003c/span\u003e)\n        {\n            shCharge = \u003cspan\u003e4.95\u003c/span\u003e;\n        }\n        \u003cspan\u003eelse\u003c/span\u003e \u003cspan\u003eif\u003c/span\u003e(subTot \u0026lt;= \u003cspan\u003e99.99\u003c/span\u003e \u0026amp;\u0026amp; subTot \u0026gt; \u003cspan\u003e29.99\u003c/span\u003e)\n        {\n            shCharge = \u003cspan\u003e7.95\u003c/span\u003e;\n        }\n        \u003cspan\u003eelse\u003c/span\u003e \u003cspan\u003eif\u003c/span\u003e(subTot \u0026lt;= \u003cspan\u003e299.99\u003c/span\u003e \u0026amp;\u0026amp; subTot \u0026gt; \u003cspan\u003e99.99\u003c/span\u003e)\n        {\n            shCharge = \u003cspan\u003e9.95\u003c/span\u003e;\n        }\n        \u003cspan\u003eelse\u003c/span\u003e \u003cspan\u003eif\u003c/span\u003e(subTot \u0026gt; \u003cspan\u003e299.99\u003c/span\u003e)\n        {\n            shCharge = subTot * \u003cspan\u003e.05\u003c/span\u003e;\n        }              \n    }\n    \u003cspan\u003eelse\u003c/span\u003e \u003cspan\u003eif\u003c/span\u003e(shippingType.Equals(\u003cspan\u003e\u0026#34;Two-Day\u0026#34;\u003c/span\u003e))\n    {\n        \u003cspan\u003eif\u003c/span\u003e(subTot \u0026lt;= \u003cspan\u003e29.99\u003c/span\u003e \u0026amp;\u0026amp; subTot \u0026gt; \u003cspan\u003e0\u003c/span\u003e)\n        {\n            shCharge = \u003cspan\u003e14.95\u003c/span\u003e;\n        }\n        \u003cspan\u003eelse\u003c/span\u003e \u003cspan\u003eif\u003c/span\u003e(subTot \u0026lt;= \u003cspan\u003e99.99\u003c/span\u003e \u0026amp;\u0026amp; subTot \u0026gt; \u003cspan\u003e29.99\u003c/span\u003e)\n        {\n            shCharge = \u003cspan\u003e19.95\u003c/span\u003e;\n        }\n        \u003cspan\u003eelse\u003c/span\u003e \u003cspan\u003eif\u003c/span\u003e(subTot \u0026lt;= \u003cspan\u003e299.99\u003c/span\u003e \u0026amp;\u0026amp; subTot \u0026gt; \u003cspan\u003e99.99\u003c/span\u003e)\n        {\n            shCharge = \u003cspan\u003e29.95\u003c/span\u003e;\n        }\n        \u003cspan\u003eelse\u003c/span\u003e \u003cspan\u003eif\u003c/span\u003e(subTot \u0026gt; \u003cspan\u003e299.99\u003c/span\u003e)\n        {\n            shCharge = subTot * \u003cspan\u003e.10\u003c/span\u003e;\n        }              \n    }\n    \u003cspan\u003eelse\u003c/span\u003e \u003cspan\u003eif\u003c/span\u003e(shippingType.Equals(\u003cspan\u003e\u0026#34;Next Day\u0026#34;\u003c/span\u003e))\n    {\n        \u003cspan\u003eif\u003c/span\u003e(subTot \u0026lt;= \u003cspan\u003e29.99\u003c/span\u003e \u0026amp;\u0026amp; subTot \u0026gt; \u003cspan\u003e0\u003c/span\u003e)\n        {\n            shCharge = \u003cspan\u003e24.95\u003c/span\u003e;\n        }\n        \u003cspan\u003eelse\u003c/span\u003e \u003cspan\u003eif\u003c/span\u003e(subTot \u0026lt;= \u003cspan\u003e99.99\u003c/span\u003e \u0026amp;\u0026amp; subTot \u0026gt; \u003cspan\u003e29.99\u003c/span\u003e)\n        {\n            shCharge = \u003cspan\u003e34.95\u003c/span\u003e;\n        }\n        \u003cspan\u003eelse\u003c/span\u003e \u003cspan\u003eif\u003c/span\u003e(subTot \u0026lt;= \u003cspan\u003e299.99\u003c/span\u003e \u0026amp;\u0026amp; subTot \u0026gt; \u003cspan\u003e99.99\u003c/span\u003e)\n        {\n            shCharge = \u003cspan\u003e44.95\u003c/span\u003e;\n        }\n        \u003cspan\u003eelse\u003c/span\u003e \u003cspan\u003eif\u003c/span\u003e(subTot \u0026gt; \u003cspan\u003e299.99\u003c/span\u003e)\n        {\n            shCharge = subTot * \u003cspan\u003e.15\u003c/span\u003e;\n        }              \n    }\n    \u003cspan\u003eelse\u003c/span\u003e \u003cspan\u003eif\u003c/span\u003e(shippingType.Equals(\u003cspan\u003e\u0026#34;Next Day a.m.\u0026#34;\u003c/span\u003e))\n    {\n        \u003cspan\u003eif\u003c/span\u003e(subTot \u0026lt;= \u003cspan\u003e29.99\u003c/span\u003e \u0026amp;\u0026amp; subTot \u0026gt; \u003cspan\u003e0\u003c/span\u003e)\n        {\n            shCharge = \u003cspan\u003e29.95\u003c/span\u003e;\n        }\n        \u003cspan\u003eelse\u003c/span\u003e \u003cspan\u003eif\u003c/span\u003e(subTot \u0026lt;= \u003cspan\u003e99.99\u003c/span\u003e \u0026amp;\u0026amp; subTot \u0026gt; \u003cspan\u003e29.99\u003c/span\u003e)\n        {\n            shCharge = \u003cspan\u003e39.95\u003c/span\u003e;\n        }\n        \u003cspan\u003eelse\u003c/span\u003e \u003cspan\u003eif\u003c/span\u003e(subTot \u0026lt;= \u003cspan\u003e299.99\u003c/span\u003e \u0026amp;\u0026amp; subTot \u0026gt; \u003cspan\u003e99.99\u003c/span\u003e)\n        {\n            shCharge = \u003cspan\u003e49.95\u003c/span\u003e;\n        }\n        \u003cspan\u003eelse\u003c/span\u003e \u003cspan\u003eif\u003c/span\u003e(subTot \u0026gt; \u003cspan\u003e299.99\u003c/span\u003e)\n        {\n            shCharge = subTot * \u003cspan\u003e.20\u003c/span\u003e;\n        }              \n    }                                      \n    \u003cspan\u003ereturn\u003c/span\u003e shCharge;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eNext you\u0026#39;re going to tell me that passing the shipping types around as stringly typed data instead of enums is a mistake, too!\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://thedailywtf.com/images/inedo/buildmaster-icon.png\"/\u003e [Advertisement] \n\t\u003ca href=\"https://inedo.com/BuildMaster?utm_source=tdwtf\u0026amp;utm_medium=footerad\u0026amp;utm_term=2018\u0026amp;utm_content=Confidence\u0026amp;utm_campaign=Buildmaster_Footer\"\u003eUtilize BuildMaster\u003c/a\u003e to release your software with confidence, at the pace your business demands. \u003ca href=\"https://inedo.com/BuildMaster/download?utm_source=tdwtf\u0026amp;utm_medium=footerad\u0026amp;utm_term=2018\u0026amp;utm_content=Confidence\u0026amp;utm_campaign=Buildmaster_Footer\"\u003eDownload\u003c/a\u003e today!  \n\u003c/p\u003e\n\n\n        \u003c/div\u003e\n\n        \n    \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": "2025-04-10T06:30:00Z",
  "modifiedTime": null
}
