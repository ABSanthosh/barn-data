{
  "id": "6f60ea07-9479-4ddb-b560-69598dda10a2",
  "title": "CodeSOD: Halfway to a Date",
  "link": "https://thedailywtf.com/articles/halfway-to-a-date",
  "description": "Roger took on a contract to fix up a PHP website. During the negotiations, he asked some questions about the design, like, \"Is it object-oriented or more procedural?\" \"No, it's PHP,\" said the developer. Which about sums it up, I suppose. Have some date handling code: function MnameToMnumber($mname) //takes month name 'January' and returns month number '01' { if($mname == 'January'){$mnum = '01';} elseif($mname == 'February'){$mnum = '02';} elseif($mname == 'March'){$mnum = '03';} elseif($mname == 'April'){$mnum = '04';} elseif($mname == 'May'){$mnum = '05';} elseif($mname == 'June'){$mnum = '06';} elseif($mname == 'July'){$mnum = '07';} elseif($mname == 'August'){$mnum = '08';} elseif($mname == 'September'){$mnum = '09';} elseif($mname == 'October'){$mnum = '10';} elseif($mname == 'November'){$mnum = '11';} elseif($mname == 'December'){$mnum = '12';} return $mnum; } function MnumberToMname($mname) //takes month number '01' and returns month name '01' { if($mnum= '01'){$mname = 'January';} elseif($mnum= '02'){$mname = 'February';} elseif($mnum= '03'){$mname = 'March';} elseif($mname == 'April'){$mnum = '04';} elseif($mnum= '05'){$mname = 'May';} elseif($mnum= '06'){$mname = 'June';} elseif($mnum= '07'){$mname = 'July';} elseif($mnum= '08'){$mname = 'August';} elseif($mnum= '09'){$mname = 'September';} elseif($mnum= '10'){$mname = 'October';} elseif($mnum= '11'){$mname = 'November';} elseif($mnum= '12'){$mname = 'December';} return $mname; } So, for starters, I \"love\" the use of Whitesmiths indenting. I don't think I've seen this in the wild. (I predict the comments section will be links to articles where I have seen this in the wild). Beyond that, there's nothing terribly surprising here, in terms of bad date handling code, with a few small exceptions. First is their insistence on the conversion itself being stringly typed: January isn't month 1, but \"01\". But more notable: MnumberToMname just doesn't work. They're using the assignment operator instead of the equality operator. At least, for all the cases where they're doing the correct comparison direction. A stray \"name to number\" conversion is lurking in April. Not that it matters- this will always return January. [Advertisement] Keep the plebs out of prod. Restrict NuGet feed privileges with ProGet. Learn more.",
  "author": "Remy Porter",
  "published": "Thu, 16 Jan 2025 06:30:00 GMT",
  "source": "http://syndication.thedailywtf.com/TheDailyWtf",
  "categories": [
    "CodeSOD"
  ],
  "byline": "Remy Porter",
  "length": 2807,
  "excerpt": "Roger took on a contract to fix up a PHP website. During the negotiations, he asked some questions about the design, like, \"Is it object-oriented or more procedural?\" \"No, it's PHP,\" said the developer. Which about sums it up, I suppose. Have some date handling code:",
  "siteName": "The Daily WTF",
  "favicon": "",
  "text": "by in CodeSOD on 2025-01-16 Edit Remy PorterComputers were a mistake, which is why I'm trying to shoot them into space. Editor-in-Chief for TDWTF. Roger took on a contract to fix up a PHP website. During the negotiations, he asked some questions about the design, like, \"Is it object-oriented or more procedural?\" \"No, it's PHP,\" said the developer. Which about sums it up, I suppose. Have some date handling code: function MnameToMnumber($mname) //takes month name 'January' and returns month number '01' { if($mname == 'January'){$mnum = '01';} elseif($mname == 'February'){$mnum = '02';} elseif($mname == 'March'){$mnum = '03';} elseif($mname == 'April'){$mnum = '04';} elseif($mname == 'May'){$mnum = '05';} elseif($mname == 'June'){$mnum = '06';} elseif($mname == 'July'){$mnum = '07';} elseif($mname == 'August'){$mnum = '08';} elseif($mname == 'September'){$mnum = '09';} elseif($mname == 'October'){$mnum = '10';} elseif($mname == 'November'){$mnum = '11';} elseif($mname == 'December'){$mnum = '12';} return $mnum; } function MnumberToMname($mname) //takes month number '01' and returns month name '01' { if($mnum= '01'){$mname = 'January';} elseif($mnum= '02'){$mname = 'February';} elseif($mnum= '03'){$mname = 'March';} elseif($mname == 'April'){$mnum = '04';} elseif($mnum= '05'){$mname = 'May';} elseif($mnum= '06'){$mname = 'June';} elseif($mnum= '07'){$mname = 'July';} elseif($mnum= '08'){$mname = 'August';} elseif($mnum= '09'){$mname = 'September';} elseif($mnum= '10'){$mname = 'October';} elseif($mnum= '11'){$mname = 'November';} elseif($mnum= '12'){$mname = 'December';} return $mname; } So, for starters, I \"love\" the use of Whitesmiths indenting. I don't think I've seen this in the wild. (I predict the comments section will be links to articles where I have seen this in the wild). Beyond that, there's nothing terribly surprising here, in terms of bad date handling code, with a few small exceptions. First is their insistence on the conversion itself being stringly typed: January isn't month 1, but \"01\". But more notable: MnumberToMname just doesn't work. They're using the assignment operator instead of the equality operator. At least, for all the cases where they're doing the correct comparison direction. A stray \"name to number\" conversion is lurking in April. Not that it matters- this will always return January. [Advertisement] Keep the plebs out of prod. Restrict NuGet feed privileges with ProGet. Learn more.",
  "image": "https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv itemscope=\"\" itemtype=\"http://schema.org/Article\" id=\"article-page\"\u003e\n\n        \n        \u003cp\u003e\u003cspan\u003eby \n            in \u003ca itemprop=\"articleSection\" href=\"https://thedailywtf.com/series/code-sod\"\u003eCodeSOD\u003c/a\u003e\n            on \u003cspan itemprop=\"datePublished\" content=\"2025-01-16\"\u003e2025-01-16\u003c/span\u003e\n            \u003ca href=\"https://thedailywtf.com/admin/article/edit/10828\" rel=\"nofollow\"\u003eEdit\u003c/a\u003e\n        \u003c/span\u003e\u003c/p\u003e\n        \u003cdiv itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\"\u003e\n            \u003cp\u003e\u003cimg itemprop=\"image\" src=\"https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg\"/\u003e\n            \u003ca itemprop=\"name\" href=\"https://thedailywtf.com/authors/remy-porter\"\u003eRemy Porter\u003c/a\u003e\u003c/p\u003e\u003cp itemprop=\"description\"\u003eComputers were a mistake, which is why I\u0026#39;m trying to shoot them into space. Editor-in-Chief for TDWTF.\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv itemprop=\"articleBody\"\u003e\n            \u003cp\u003e\u003cstrong\u003eRoger\u003c/strong\u003e took on a contract to fix up a PHP website. During the negotiations, he asked some questions about the design, like, \u0026#34;Is it object-oriented or more procedural?\u0026#34; \u0026#34;No, it\u0026#39;s PHP,\u0026#34; said the developer.\u003c/p\u003e\n\u003cp\u003eWhich about sums it up, I suppose. Have some date handling code:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e\u003cspan\u003efunction\u003c/span\u003e \u003cspan\u003eMnameToMnumber\u003c/span\u003e(\u003cspan\u003e\u003cspan\u003e$mname\u003c/span\u003e\u003c/span\u003e) //\u003cspan\u003etakes\u003c/span\u003e \u003cspan\u003emonth\u003c/span\u003e \u003cspan\u003ename\u003c/span\u003e \u0026#39;\u003cspan\u003eJanuary\u003c/span\u003e\u0026#39; \u003cspan\u003eand\u003c/span\u003e \u003cspan\u003ereturns\u003c/span\u003e \u003cspan\u003emonth\u003c/span\u003e \u003cspan\u003enumber\u003c/span\u003e \u0026#39;01\u0026#39;\n        \u003c/span\u003e{\n        \u003cspan\u003eif\u003c/span\u003e(\u003cspan\u003e$mname\u003c/span\u003e == \u003cspan\u003e\u0026#39;January\u0026#39;\u003c/span\u003e){\u003cspan\u003e$mnum\u003c/span\u003e = \u003cspan\u003e\u0026#39;01\u0026#39;\u003c/span\u003e;}\n        \u003cspan\u003eelseif\u003c/span\u003e(\u003cspan\u003e$mname\u003c/span\u003e == \u003cspan\u003e\u0026#39;February\u0026#39;\u003c/span\u003e){\u003cspan\u003e$mnum\u003c/span\u003e = \u003cspan\u003e\u0026#39;02\u0026#39;\u003c/span\u003e;}\n        \u003cspan\u003eelseif\u003c/span\u003e(\u003cspan\u003e$mname\u003c/span\u003e == \u003cspan\u003e\u0026#39;March\u0026#39;\u003c/span\u003e){\u003cspan\u003e$mnum\u003c/span\u003e = \u003cspan\u003e\u0026#39;03\u0026#39;\u003c/span\u003e;}\n        \u003cspan\u003eelseif\u003c/span\u003e(\u003cspan\u003e$mname\u003c/span\u003e == \u003cspan\u003e\u0026#39;April\u0026#39;\u003c/span\u003e){\u003cspan\u003e$mnum\u003c/span\u003e = \u003cspan\u003e\u0026#39;04\u0026#39;\u003c/span\u003e;}\n        \u003cspan\u003eelseif\u003c/span\u003e(\u003cspan\u003e$mname\u003c/span\u003e == \u003cspan\u003e\u0026#39;May\u0026#39;\u003c/span\u003e){\u003cspan\u003e$mnum\u003c/span\u003e = \u003cspan\u003e\u0026#39;05\u0026#39;\u003c/span\u003e;}\n        \u003cspan\u003eelseif\u003c/span\u003e(\u003cspan\u003e$mname\u003c/span\u003e == \u003cspan\u003e\u0026#39;June\u0026#39;\u003c/span\u003e){\u003cspan\u003e$mnum\u003c/span\u003e = \u003cspan\u003e\u0026#39;06\u0026#39;\u003c/span\u003e;}\n        \u003cspan\u003eelseif\u003c/span\u003e(\u003cspan\u003e$mname\u003c/span\u003e == \u003cspan\u003e\u0026#39;July\u0026#39;\u003c/span\u003e){\u003cspan\u003e$mnum\u003c/span\u003e = \u003cspan\u003e\u0026#39;07\u0026#39;\u003c/span\u003e;}\n        \u003cspan\u003eelseif\u003c/span\u003e(\u003cspan\u003e$mname\u003c/span\u003e == \u003cspan\u003e\u0026#39;August\u0026#39;\u003c/span\u003e){\u003cspan\u003e$mnum\u003c/span\u003e = \u003cspan\u003e\u0026#39;08\u0026#39;\u003c/span\u003e;}\n        \u003cspan\u003eelseif\u003c/span\u003e(\u003cspan\u003e$mname\u003c/span\u003e == \u003cspan\u003e\u0026#39;September\u0026#39;\u003c/span\u003e){\u003cspan\u003e$mnum\u003c/span\u003e = \u003cspan\u003e\u0026#39;09\u0026#39;\u003c/span\u003e;}\n        \u003cspan\u003eelseif\u003c/span\u003e(\u003cspan\u003e$mname\u003c/span\u003e == \u003cspan\u003e\u0026#39;October\u0026#39;\u003c/span\u003e){\u003cspan\u003e$mnum\u003c/span\u003e = \u003cspan\u003e\u0026#39;10\u0026#39;\u003c/span\u003e;}\n        \u003cspan\u003eelseif\u003c/span\u003e(\u003cspan\u003e$mname\u003c/span\u003e == \u003cspan\u003e\u0026#39;November\u0026#39;\u003c/span\u003e){\u003cspan\u003e$mnum\u003c/span\u003e = \u003cspan\u003e\u0026#39;11\u0026#39;\u003c/span\u003e;}\n        \u003cspan\u003eelseif\u003c/span\u003e(\u003cspan\u003e$mname\u003c/span\u003e == \u003cspan\u003e\u0026#39;December\u0026#39;\u003c/span\u003e){\u003cspan\u003e$mnum\u003c/span\u003e = \u003cspan\u003e\u0026#39;12\u0026#39;\u003c/span\u003e;}\n        \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003e$mnum\u003c/span\u003e;\n        }\n\n\u003cspan\u003e\u003cspan\u003efunction\u003c/span\u003e \u003cspan\u003eMnumberToMname\u003c/span\u003e(\u003cspan\u003e\u003cspan\u003e$mname\u003c/span\u003e\u003c/span\u003e) //\u003cspan\u003etakes\u003c/span\u003e \u003cspan\u003emonth\u003c/span\u003e \u003cspan\u003enumber\u003c/span\u003e \u0026#39;01\u0026#39; \u003cspan\u003eand\u003c/span\u003e \u003cspan\u003ereturns\u003c/span\u003e \u003cspan\u003emonth\u003c/span\u003e \u003cspan\u003ename\u003c/span\u003e \u0026#39;01\u0026#39;\n        \u003c/span\u003e{\n        \u003cspan\u003eif\u003c/span\u003e(\u003cspan\u003e$mnum\u003c/span\u003e= \u003cspan\u003e\u0026#39;01\u0026#39;\u003c/span\u003e){\u003cspan\u003e$mname\u003c/span\u003e = \u003cspan\u003e\u0026#39;January\u0026#39;\u003c/span\u003e;}\n        \u003cspan\u003eelseif\u003c/span\u003e(\u003cspan\u003e$mnum\u003c/span\u003e= \u003cspan\u003e\u0026#39;02\u0026#39;\u003c/span\u003e){\u003cspan\u003e$mname\u003c/span\u003e = \u003cspan\u003e\u0026#39;February\u0026#39;\u003c/span\u003e;}\n        \u003cspan\u003eelseif\u003c/span\u003e(\u003cspan\u003e$mnum\u003c/span\u003e= \u003cspan\u003e\u0026#39;03\u0026#39;\u003c/span\u003e){\u003cspan\u003e$mname\u003c/span\u003e = \u003cspan\u003e\u0026#39;March\u0026#39;\u003c/span\u003e;}\n        \u003cspan\u003eelseif\u003c/span\u003e(\u003cspan\u003e$mname\u003c/span\u003e == \u003cspan\u003e\u0026#39;April\u0026#39;\u003c/span\u003e){\u003cspan\u003e$mnum\u003c/span\u003e = \u003cspan\u003e\u0026#39;04\u0026#39;\u003c/span\u003e;}\n        \u003cspan\u003eelseif\u003c/span\u003e(\u003cspan\u003e$mnum\u003c/span\u003e= \u003cspan\u003e\u0026#39;05\u0026#39;\u003c/span\u003e){\u003cspan\u003e$mname\u003c/span\u003e = \u003cspan\u003e\u0026#39;May\u0026#39;\u003c/span\u003e;}\n        \u003cspan\u003eelseif\u003c/span\u003e(\u003cspan\u003e$mnum\u003c/span\u003e= \u003cspan\u003e\u0026#39;06\u0026#39;\u003c/span\u003e){\u003cspan\u003e$mname\u003c/span\u003e = \u003cspan\u003e\u0026#39;June\u0026#39;\u003c/span\u003e;}\n        \u003cspan\u003eelseif\u003c/span\u003e(\u003cspan\u003e$mnum\u003c/span\u003e= \u003cspan\u003e\u0026#39;07\u0026#39;\u003c/span\u003e){\u003cspan\u003e$mname\u003c/span\u003e = \u003cspan\u003e\u0026#39;July\u0026#39;\u003c/span\u003e;}\n        \u003cspan\u003eelseif\u003c/span\u003e(\u003cspan\u003e$mnum\u003c/span\u003e= \u003cspan\u003e\u0026#39;08\u0026#39;\u003c/span\u003e){\u003cspan\u003e$mname\u003c/span\u003e = \u003cspan\u003e\u0026#39;August\u0026#39;\u003c/span\u003e;}\n        \u003cspan\u003eelseif\u003c/span\u003e(\u003cspan\u003e$mnum\u003c/span\u003e= \u003cspan\u003e\u0026#39;09\u0026#39;\u003c/span\u003e){\u003cspan\u003e$mname\u003c/span\u003e = \u003cspan\u003e\u0026#39;September\u0026#39;\u003c/span\u003e;}\n        \u003cspan\u003eelseif\u003c/span\u003e(\u003cspan\u003e$mnum\u003c/span\u003e= \u003cspan\u003e\u0026#39;10\u0026#39;\u003c/span\u003e){\u003cspan\u003e$mname\u003c/span\u003e = \u003cspan\u003e\u0026#39;October\u0026#39;\u003c/span\u003e;}\n        \u003cspan\u003eelseif\u003c/span\u003e(\u003cspan\u003e$mnum\u003c/span\u003e= \u003cspan\u003e\u0026#39;11\u0026#39;\u003c/span\u003e){\u003cspan\u003e$mname\u003c/span\u003e = \u003cspan\u003e\u0026#39;November\u0026#39;\u003c/span\u003e;}\n        \u003cspan\u003eelseif\u003c/span\u003e(\u003cspan\u003e$mnum\u003c/span\u003e= \u003cspan\u003e\u0026#39;12\u0026#39;\u003c/span\u003e){\u003cspan\u003e$mname\u003c/span\u003e = \u003cspan\u003e\u0026#39;December\u0026#39;\u003c/span\u003e;}\n        \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003e$mname\u003c/span\u003e;\n        }\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eSo, for starters, I \u0026#34;love\u0026#34; the use of Whitesmiths indenting. I don\u0026#39;t think I\u0026#39;ve seen this in the wild. (I predict the comments section will be links to articles where I have seen this in the wild).\u003c/p\u003e\n\u003cp\u003eBeyond that, there\u0026#39;s nothing terribly surprising here, in terms of bad date handling code, with a few small exceptions. First is their insistence on the conversion itself being stringly typed: January isn\u0026#39;t month \u003ccode\u003e1\u003c/code\u003e, but \u003ccode\u003e\u0026#34;01\u0026#34;\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eBut more notable: \u003ccode\u003eMnumberToMname\u003c/code\u003e just doesn\u0026#39;t work. They\u0026#39;re using the assignment operator instead of the equality operator. At least, for all the cases where they\u0026#39;re doing the correct comparison direction. A stray \u0026#34;name to number\u0026#34; conversion is lurking in April. Not that it matters- this will always return January.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://thedailywtf.com/images/inedo/proget-icon.png\"/\u003e [Advertisement] \n\tKeep the plebs out of prod. Restrict NuGet feed privileges with ProGet. \u003ca href=\"https://inedo.com/proget/private-nuget-server?utm_source=tdwtf\u0026amp;utm_medium=footer\u0026amp;utm_content=PlebsFooter\u0026amp;utm_campaign=Cyclops2020\"\u003eLearn more.\u003c/a\u003e\n\u003c/p\u003e\n\n\n        \u003c/div\u003e\n\n        \n    \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": "2025-01-16T06:30:00Z",
  "modifiedTime": null
}
