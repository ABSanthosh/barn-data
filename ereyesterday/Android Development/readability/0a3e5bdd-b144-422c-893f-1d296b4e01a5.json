{
  "id": "0a3e5bdd-b144-422c-893f-1d296b4e01a5",
  "title": "Three Dots Loading Animation with Jetpack Compose",
  "link": "https://blog.kotlin-academy.com/three-dots-loading-animation-with-jetpack-compose-0c1e6cc9e2af?source=rss----e57b304801ef---4",
  "description": "",
  "author": "Souvik Sarkar",
  "published": "Wed, 12 Feb 2025 08:35:30 GMT",
  "source": "https://blog.kotlin-academy.com/feed",
  "categories": [
    "kotlin",
    "jetpack-compose",
    "coding",
    "android-studio",
    "android"
  ],
  "byline": "Souvik Sarkar",
  "length": 3524,
  "excerpt": "Sometimes in life, finding the easiest solutions is hard. Thatâ€™s why in this article, weâ€™ll talk about creating a simple Three Dots Loading Animation in Jetpack Compose. CongratulationsðŸ¥³! Weâ€™veâ€¦",
  "siteName": "Kt. Academy",
  "favicon": "https://miro.medium.com/v2/resize:fill:256:256/1*2grDGjzH0tfX8XiaF4Izaw.png",
  "text": "Sometimes in life, finding the easiest solutions is hard. Thatâ€™s why in this article, weâ€™ll talk about creating a simple Three Dots Loading Animation in Jetpack Compose.So, letâ€™s dive in.Three Dots Loading AnimationAnimation Setup:val infiniteTransition = rememberInfiniteTransition()// First dot animation (starts immediately)val anchor1 by infiniteTransition.animateFloat( initialValue = 0f, targetValue = 1f, animationSpec = infiniteRepeatable( animation = tween(500), // 0.5 second animation repeatMode = RepeatMode.Reverse // Ping-pong effect ) )// Second dot animation (250ms delay for staggered effectval anchor2 by infiniteTransition.animateFloat( initialValue = 0f, targetValue = 1f, animationSpec = infiniteRepeatable( animation = tween(500), initialStartOffset = StartOffset(250, StartOffsetType.Delay), // Stagger delay repeatMode = RepeatMode.Reverse ) )// Third dot animation (500ms delay)val anchor3 by infiniteTransition.animateFloat( initialValue = 0f, targetValue = 1f, animationSpec = infiniteRepeatable( animation = tween(500), initialStartOffset = StartOffset(500, StartOffsetType.Delay), repeatMode = RepeatMode.Reverse ) )Dot Modifier:As all three dots have the same behavior, letâ€™s create a single modifier:// Shared modifier for all three dotsfun Modifier.dotBehaviour(anchor: Float) = this .offset { // Vertical bounce animation: -2 * size * progress IntOffset(0, (-2 * size * anchor.dp.toPx()).toInt()) } .scale(lerp(1f, 1.25f, anchor)) // Size pulse effect .alpha(lerp(0.7f, 1f, anchor)) // Fade-in/out effectComposable Function:Row( horizontalArrangement = Arrangement.spacedBy(size.dp), modifier = Modifier.padding(4.dp) ) { // First Dot Box( modifier = Modifier .dotBehaviour(anchor1) .size(size.dp) .clip(CircleShape) .background(color) ) // Second Dot Box( modifier = Modifier .dotBehaviour(anchor2) .size(size.dp) .clip(CircleShape) .background(color) ) // Third Dot Box( modifier = Modifier .dotBehaviour(anchor3) .size(size.dp) .clip(CircleShape) .background(color) ) }Crafting the Function:Now, letâ€™s see what the final function looks like:@Composablefun ThreeDotsLoaderAnimation( size: Int, // Variable size color: Color, // Variale color) { // ====================== // ANIMATION SETUP // ====================== // ====================== // DOT MODIFIER // ====================== // ====================== // COMPOSABLE STRUCTURE // ======================}infiniteTransition: The heartbeat of animation.animateFloat: Mapping time to visual change.lerp(): Used to have smooth transitions.StartOffset: For creating the wave effect.Customization Tips:Try these variations to match your brand:Change dot count.Modify bounce height.Add horizontal movement.Experiment with different easing curves.CongratulationsðŸ¥³! Weâ€™ve successfully built it. If you want me to cover any specific animation topic, feel free to share it in the responses down below.Souvik Sarkar, founder @Kaffein, â€” writes about the hurdles of first-time founders.",
  "image": "https://miro.medium.com/v2/da:true/resize:fit:800/1*mvwv_Cc0bVXMzzpNvgjJqg.gif",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://medium.com/@souvik.0204?source=post_page---byline--0c1e6cc9e2af---------------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Souvik Sarkar\" src=\"https://miro.medium.com/v2/resize:fill:88:88/1*xeyIMmEKdpY6O7FVTGwA2w.png\" width=\"44\" height=\"44\" loading=\"lazy\" data-testid=\"authorPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://blog.kotlin-academy.com/?source=post_page---byline--0c1e6cc9e2af---------------------------------------\" rel=\"noopener  ugc nofollow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Kt. Academy\" src=\"https://miro.medium.com/v2/resize:fill:48:48/1*2grDGjzH0tfX8XiaF4Izaw.png\" width=\"24\" height=\"24\" loading=\"lazy\" data-testid=\"publicationPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/div\u003e\u003cp id=\"a2d5\"\u003eSometimes in life, finding the easiest solutions is hard. Thatâ€™s why in this article, weâ€™ll talk about creating a simple \u003cstrong\u003eThree Dots Loading Animation\u003c/strong\u003e in Jetpack Compose.\u003c/p\u003e\u003cp id=\"42c2\"\u003eSo, letâ€™s dive in.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eThree Dots Loading Animation\u003c/figcaption\u003e\u003c/figure\u003e\u003ch2 id=\"568d\"\u003eAnimation Setup:\u003c/h2\u003e\u003cpre\u003e\u003cspan id=\"cb04\"\u003eval infiniteTransition = rememberInfiniteTransition()\u003cp\u003e// First dot animation (starts immediately)\u003cbr/\u003eval anchor1 by infiniteTransition.animateFloat(\u003cbr/\u003e        initialValue = 0f,\u003cbr/\u003e        targetValue = 1f,\u003cbr/\u003e        animationSpec = infiniteRepeatable(\u003cbr/\u003e            animation = tween(500), // 0.5 second animation\u003cbr/\u003e            repeatMode = RepeatMode.Reverse // Ping-pong effect\u003cbr/\u003e        )\u003cbr/\u003e    )\u003c/p\u003e\u003cp\u003e// Second dot animation (250ms delay for staggered effect\u003cbr/\u003eval anchor2 by infiniteTransition.animateFloat(\u003cbr/\u003e        initialValue = 0f,\u003cbr/\u003e        targetValue = 1f,\u003cbr/\u003e        animationSpec = infiniteRepeatable(\u003cbr/\u003e            animation = tween(500),\u003cbr/\u003e            initialStartOffset = StartOffset(250, StartOffsetType.Delay), // Stagger delay\u003cbr/\u003e            repeatMode = RepeatMode.Reverse\u003cbr/\u003e        )\u003cbr/\u003e    )\u003c/p\u003e\u003cp\u003e// Third dot animation (500ms delay)\u003cbr/\u003eval anchor3 by infiniteTransition.animateFloat(\u003cbr/\u003e        initialValue = 0f,\u003cbr/\u003e        targetValue = 1f,\u003cbr/\u003e        animationSpec = infiniteRepeatable(\u003cbr/\u003e            animation = tween(500),\u003cbr/\u003e            initialStartOffset = StartOffset(500, StartOffsetType.Delay),\u003cbr/\u003e            repeatMode = RepeatMode.Reverse\u003cbr/\u003e        )\u003cbr/\u003e    )\u003c/p\u003e\u003c/span\u003e\u003c/pre\u003e\u003ch2 id=\"733e\"\u003eDot Modifier:\u003c/h2\u003e\u003cp id=\"a560\"\u003eAs all three dots have the same behavior, letâ€™s create a single \u003ccode\u003emodifier\u003c/code\u003e:\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"d52a\"\u003e// Shared modifier for all three dots\u003cbr/\u003efun Modifier.dotBehaviour(anchor: Float) = this\u003cbr/\u003e        .offset {\u003cbr/\u003e            // Vertical bounce animation: -2 * size * progress\u003cbr/\u003e            IntOffset(0, (-2 * size * anchor.dp.toPx()).toInt())\u003cbr/\u003e        }\u003cbr/\u003e        .scale(lerp(1f, 1.25f, anchor)) // Size pulse effect\u003cbr/\u003e        .alpha(lerp(0.7f, 1f, anchor)) // Fade-in/out effect\u003c/span\u003e\u003c/pre\u003e\u003ch2 id=\"4293\"\u003eComposable Function:\u003c/h2\u003e\u003cpre\u003e\u003cspan id=\"539f\"\u003eRow(\u003cbr/\u003e        horizontalArrangement = Arrangement.spacedBy(size.dp),\u003cbr/\u003e        modifier = Modifier.padding(4.dp)\u003cbr/\u003e    ) {\u003cbr/\u003e        // First Dot\u003cbr/\u003e        Box(\u003cbr/\u003e            modifier = Modifier\u003cbr/\u003e                .dotBehaviour(anchor1)\u003cbr/\u003e                .size(size.dp)\u003cbr/\u003e                .clip(CircleShape)\u003cbr/\u003e                .background(color)\u003cbr/\u003e        )\u003cp\u003e        // Second Dot\u003cbr/\u003e        Box(\u003cbr/\u003e            modifier = Modifier\u003cbr/\u003e                .dotBehaviour(anchor2)\u003cbr/\u003e                .size(size.dp)\u003cbr/\u003e                .clip(CircleShape)\u003cbr/\u003e                .background(color)\u003cbr/\u003e        )\u003c/p\u003e\u003cp\u003e        // Third Dot\u003cbr/\u003e        Box(\u003cbr/\u003e            modifier = Modifier\u003cbr/\u003e                .dotBehaviour(anchor3)\u003cbr/\u003e                .size(size.dp)\u003cbr/\u003e                .clip(CircleShape)\u003cbr/\u003e                .background(color)\u003cbr/\u003e        )\u003cbr/\u003e    }\u003c/p\u003e\u003c/span\u003e\u003c/pre\u003e\u003ch2 id=\"dcdc\"\u003eCrafting the Function:\u003c/h2\u003e\u003cp id=\"efd5\"\u003eNow, letâ€™s see what the final function looks like:\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"778d\"\u003e@Composable\u003cbr/\u003efun ThreeDotsLoaderAnimation(\u003cbr/\u003e    size: Int, // Variable size\u003cbr/\u003e    color: Color, // Variale color\u003cbr/\u003e) {\u003cbr/\u003e    // ======================\u003cbr/\u003e    // ANIMATION SETUP\u003cbr/\u003e    // ======================\u003cp\u003e    // ======================\u003cbr/\u003e    // DOT MODIFIER\u003cbr/\u003e    // ======================\u003c/p\u003e\u003cp\u003e    // ======================\u003cbr/\u003e    // COMPOSABLE STRUCTURE\u003cbr/\u003e    // ======================\u003cbr/\u003e}\u003c/p\u003e\u003c/span\u003e\u003c/pre\u003e\u003cul\u003e\u003cli id=\"8c69\"\u003e\u003ccode\u003einfiniteTransition\u003c/code\u003e: The heartbeat of animation.\u003c/li\u003e\u003cli id=\"8033\"\u003e\u003ccode\u003eanimateFloat\u003c/code\u003e: Mapping time to visual change.\u003c/li\u003e\u003cli id=\"7e0e\"\u003e\u003ccode\u003elerp()\u003c/code\u003e: Used to have smooth transitions.\u003c/li\u003e\u003cli id=\"5dff\"\u003e\u003ccode\u003eStartOffset\u003c/code\u003e: For creating the wave effect.\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"7051\"\u003e\u003cstrong\u003eCustomization Tips:\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"2166\"\u003eTry these variations to match your brand:\u003c/p\u003e\u003cul\u003e\u003cli id=\"c840\"\u003eChange dot count.\u003c/li\u003e\u003cli id=\"9434\"\u003eModify bounce height.\u003c/li\u003e\u003cli id=\"7a02\"\u003eAdd horizontal movement.\u003c/li\u003e\u003cli id=\"7eff\"\u003eExperiment with different easing curves.\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"e38c\"\u003eCongratulationsðŸ¥³! Weâ€™ve successfully built it. If you want me to cover any specific animation topic, feel free to share it in the responses down below.\u003c/p\u003e\u003cblockquote\u003e\u003cp id=\"3c44\"\u003e\u003cstrong\u003eSouvik Sarkar\u003c/strong\u003e,\u003cstrong\u003e \u003c/strong\u003efounder @\u003ca href=\"https://kaffein.in/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eKaffein\u003c/a\u003e, â€” writes about the hurdles of first-time founders.\u003c/p\u003e\u003c/blockquote\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": "2025-02-12T08:35:30.112Z",
  "modifiedTime": null
}
