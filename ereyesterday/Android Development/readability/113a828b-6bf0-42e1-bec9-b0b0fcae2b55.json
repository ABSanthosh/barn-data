{
  "id": "113a828b-6bf0-42e1-bec9-b0b0fcae2b55",
  "title": "Building \u0026 Deploying a simple KMP app — Part 1: App icons",
  "link": "https://proandroiddev.com/building-deploying-a-simple-kmm-app-part-1-app-icons-8e8b739c7981?source=rss----c72404660798---4",
  "description": "",
  "author": "Robert Munro",
  "published": "Fri, 09 May 2025 13:35:57 GMT",
  "source": "https://proandroiddev.com/feed",
  "categories": [
    "android",
    "android-app-development",
    "kotlin",
    "kotlin-multiplatform",
    "androiddev"
  ],
  "byline": "Robert Munro",
  "length": 5221,
  "excerpt": "In this series I will go through build and deployment of a simple property website in Kotlin multi-platform. The aim is to cover more of the platform dependent issues and provide an example of a…",
  "siteName": "Medium",
  "favicon": "https://miro.medium.com/v2/resize:fill:256:256/1*A8VytPZQhvUf_MG6hm_Dlw.png",
  "text": "Everything to make your app icons on all platforms.In this series I will go through build and deployment of a simple property website in Kotlin multi-platform. The aim is to cover more of the platform dependent issues and provide an example of a fully deployed app over Android, iOS, Desktop and Web.The Github repository is here: https://github.com/sentinelweb/house-shoreditchIn this series:App iconsSecretsLaunchersDependency InjectionCI — DevelopCI — Release BuildsDeploymentApp iconographyThere are many ways to make icons, sites like the ones below are all worth checking out, obviously it depends on the level design expertise available:AndroidGenerally launcher icons go to the drawable/mipmap-XX resource directory. They can be PNG files of various sizes or adaptive icons which have separate foreground and background images so can adapt to different screen densities:res/ mipmap-mdpi/ic_launcher.png (48x48) mipmap-hdpi/ic_launcher.png (72x72) mipmap-xhdpi/ic_launcher.png (96x96) mipmap-xxhdpi/ic_launcher.png (144x144) mipmap-xxxhdpi/ic_launcher.png (192x192) mipmap-anydpi-v26/ic_launcher.xml \u003c-- Adaptive Icon XMLWe can reference our icon in the Android Manifest\u003capplication android:icon=”@mipmap/ic_launcher”...Read more about working with android icons and also adaptive icons.Project LinkiOSIn iOS app icons are provided in various dimensions ranging from 16px to 1024px. They are supplied in an appiconset directory.The icon set is selected in the App info \u003e App target \u003e App Icons and Launch Screen section in XCode.The iosApp/iosApp/Assets.xcassets/AppIcon.appiconset is used for this project.Project linkDesktop MacMac icons are provided in the .icns format. It compiles multiple images into a single file. This format can be build by the iconutil tool on mac.iconutil -c icns MacOsIcon.iconset -o MacOsIcon.icnsThe built icns file is then referenced in the build.gradle.kts file for the mac desktop. I have left the file in a separate media folder and referenced it using a relative path from the build.gradle.kts — but this is an arbitrary decision.compose { desktop { application { ... nativeDistributions { targetFormats(TargetFormat.Dmg, TargetFormat.Msi, TargetFormat.Deb) ... macOS { dockName = libs.versions.app.name.get() iconFile.set(project.file(\"../media/appicon/MacOsIcon.icns\"))If you are using figma or another design tool then this is a good link for more information [1]Project linkDesktop WindowsWindows uses the ico format, there are many ico file generators out there i used this one below.Similarly this is linked in the build.gradle.kts using a relative path, again this is arbitrary. I choose 512px resolution for adaptability, but probably it could be smaller without hurting the app aesthetics.compose { desktop { application { ... nativeDistributions { targetFormats(TargetFormat.Dmg, TargetFormat.Msi, TargetFormat.Deb) ... windows { iconFile.set(project.file(\"../media/appicon/icon_512.ico\"))Project linkDesktop LinuxLinux just uses the png format directly which can obviously just be converted in any image editor. Again, I used 512px but probably smaller would suffice here also.compose { desktop { application { ... nativeDistributions { targetFormats(TargetFormat.Dmg, TargetFormat.Msi, TargetFormat.Deb) ... linux { iconFile.set(project.file(\"../media/appicon/icon_512.png\"))Project linkWebWeb icons are generally just the icons in the browser tab. They can be specified for various targets and platforms in the webpages index.html. I used another web tool for converting my initial icon to the various formats to supply for the app website. It build multiple versions and generates the site manifest files and various link tags.We can then just copy the icons directory into the wasmJsMain/resources folder and update our index.html to use these resources.\u003clink rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"favicon_io/apple-touch-icon.png\"\u003e\u003clink rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"favicon_io/favicon-32x32.png\"\u003e\u003clink rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"favicon_io/favicon-16x16.png\"\u003e\u003clink rel=\"manifest\" href=\"favicon_io/site.webmanifest\"\u003eProject linkConclusionSo that’s it for app icons, we have covered all the targets and it can be quite a bit of work especially if you need to go through multiple iterations to refine the icon. It’s the simplest of the areas we will cover in this series, but obviously very important for your app.I found it a bit of work to track down the requirement for each different platform — so I hope this helps someone out there :)Next: SecretsReferences[1] Serge K., 5 Steps to create a macOS app icon in .ICNS format, https://medium.com/design-bootcamp/5-steps-to-create-a-macos-app-icon-in-icns-format-a659f27f1a85[2] Photo credit: https://unsplash.com/photos/a-number-of-dices-with-different-colored-hearts-on-them-gBIoMp44Bvg?utm_content=creditShareLink\u0026utm_medium=referral\u0026utm_source=twitter",
  "image": "https://miro.medium.com/v2/resize:fit:1200/1*bM5AlJkcVfF61FfI-IXURA.jpeg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://medium.com/@rrmunro?source=post_page---byline--8e8b739c7981---------------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Robert Munro\" src=\"https://miro.medium.com/v2/resize:fill:64:64/1*ubtXZYacoDkIQ1kOdLroWg.png\" width=\"32\" height=\"32\" loading=\"lazy\" data-testid=\"authorPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"df2d\"\u003eEverything to make your app icons on all platforms.\u003c/p\u003e\u003cp id=\"801a\"\u003eIn this series I will go through build and deployment of a simple property website in Kotlin multi-platform. The aim is to cover more of the platform dependent issues and provide an example of a fully deployed app over Android, iOS, Desktop and Web.\u003c/p\u003e\u003cp id=\"b311\"\u003eThe Github repository is here: \u003ca href=\"https://github.com/sentinelweb/house-shoreditch\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ehttps://github.com/sentinelweb/house-shoreditch\u003c/a\u003e\u003c/p\u003e\u003cp id=\"0fe5\"\u003eIn this series:\u003c/p\u003e\u003col\u003e\u003cli id=\"ee32\"\u003eApp icons\u003c/li\u003e\u003cli id=\"9c96\"\u003e\u003ca href=\"https://medium.com/@rrmunro/building-deploying-a-simple-kmp-app-part-2-secrets-9678deb403a4\" rel=\"noopener\"\u003eSecrets\u003c/a\u003e\u003c/li\u003e\u003cli id=\"da25\"\u003e\u003ca href=\"https://medium.com/@rrmunro/building-deploying-a-simple-kmp-app-part-3-launchers-ff8ec2c60d06\" rel=\"noopener\"\u003eLaunchers\u003c/a\u003e\u003c/li\u003e\u003cli id=\"bbd2\"\u003e\u003ca href=\"https://medium.com/@rrmunro/building-deploying-a-simple-kmp-app-part-4-dependency-injection-b7189b15e1ba\" rel=\"noopener\"\u003eDependency Injection\u003c/a\u003e\u003c/li\u003e\u003cli id=\"e995\"\u003e\u003ca href=\"https://medium.com/@rrmunro/building-deploying-a-simple-kmp-app-part-5-develop-ci-on-github-776ce5d29ca3\" rel=\"noopener\"\u003eCI — Develop\u003c/a\u003e\u003c/li\u003e\u003cli id=\"2077\"\u003e\u003ca href=\"https://medium.com/@rrmunro/building-deploying-a-simple-kmp-app-part-6-release-ci-on-github-bfc8bb2783cc\" rel=\"noopener\"\u003eCI — Release Builds\u003c/a\u003e\u003c/li\u003e\u003cli id=\"0cd6\"\u003e\u003ca href=\"https://medium.com/@rrmunro/building-deploying-a-simple-kmp-app-part-7-deployment-b3e6f4d10518\" rel=\"noopener\"\u003eDeployment\u003c/a\u003e\u003c/li\u003e\u003c/ol\u003e\u003ch2 id=\"1734\"\u003eApp iconography\u003c/h2\u003e\u003cp id=\"0c4b\"\u003eThere are many ways to make icons, sites like the ones below are all worth checking out, obviously it depends on the level design expertise available:\u003c/p\u003e\u003ch2 id=\"ef1a\"\u003e\u003cstrong\u003eAndroid\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"259e\"\u003eGenerally launcher icons go to the \u003ccode\u003edrawable/mipmap-XX\u003c/code\u003e resource directory. They can be PNG files of various sizes or \u003ca href=\"https://developer.android.com/develop/ui/views/launch/icon_design_adaptive\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eadaptive icons\u003c/a\u003e which have separate foreground and background images so can adapt to different screen densities:\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"5a3d\"\u003eres/\u003cbr/\u003e  mipmap-mdpi/ic_launcher.png (48x48)\u003cbr/\u003e  mipmap-hdpi/ic_launcher.png (72x72)\u003cbr/\u003e  mipmap-xhdpi/ic_launcher.png (96x96)\u003cbr/\u003e  mipmap-xxhdpi/ic_launcher.png (144x144)\u003cbr/\u003e  mipmap-xxxhdpi/ic_launcher.png (192x192)\u003cbr/\u003e  mipmap-anydpi-v26/ic_launcher.xml  \u0026lt;-- Adaptive Icon XML\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"3bdf\"\u003eWe can reference our icon in the \u003ca href=\"https://github.com/sentinelweb/house-shoreditch/blob/main/composeApp/src/androidMain/AndroidManifest.xml\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eAndroid Manifest\u003c/a\u003e\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"dbaa\"\u003e\u0026lt;application\u003cbr/\u003e    android:icon=”@mipmap/ic_launcher”\u003cbr/\u003e...\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"7891\"\u003eRead more about working with \u003ca href=\"https://developer.android.com/studio/write/create-app-icons\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eandroid icons\u003c/a\u003e and also \u003ca href=\"https://developer.android.com/develop/ui/views/launch/icon_design_adaptive\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eadaptive icons\u003c/a\u003e.\u003c/p\u003e\u003cp id=\"ebe6\"\u003e\u003ca href=\"https://github.com/sentinelweb/house-shoreditch/tree/develop/composeApp/src/androidMain/res\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eProject Link\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"039b\"\u003eiOS\u003c/h2\u003e\u003cp id=\"477f\"\u003eIn iOS app icons are provided in various dimensions ranging from 16px to 1024px. They are supplied in an \u003ccode\u003eappiconset\u003c/code\u003e directory.\u003c/p\u003e\u003cp id=\"a338\"\u003eThe icon set is selected in the App info \u0026gt; App target \u0026gt; App Icons and Launch Screen section in XCode.\u003c/p\u003e\u003cp id=\"ea0f\"\u003eThe \u003ccode\u003eiosApp/iosApp/Assets.xcassets/AppIcon.appiconset\u003c/code\u003e is used for this project.\u003c/p\u003e\u003cp id=\"eba6\"\u003e\u003ca href=\"https://github.com/sentinelweb/house-shoreditch/tree/develop/iosApp/iosApp/Assets.xcassets/AppIcon.appiconset\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eProject link\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"ce8d\"\u003eDesktop Mac\u003c/h2\u003e\u003cp id=\"ce6e\"\u003eMac icons are provided in the \u003ccode\u003e.icns\u003c/code\u003e format. It compiles multiple images into a single file. This format can be build by the \u003ccode\u003eiconutil\u003c/code\u003e tool on mac.\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"9089\"\u003eiconutil -c icns MacOsIcon.iconset -o MacOsIcon.icns\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"12b8\"\u003eThe built icns file is then referenced in the \u003ccode\u003ebuild.gradle.kts\u003c/code\u003e file for the mac desktop. I have left the file in a separate media folder and referenced it using a relative path from the \u003ccode\u003ebuild.gradle.kts\u003c/code\u003e — but this is an arbitrary decision.\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"3c2a\"\u003ecompose {\u003cbr/\u003e    desktop {\u003cbr/\u003e        application {\u003cbr/\u003e            ...\u003cbr/\u003e            nativeDistributions {\u003cbr/\u003e                targetFormats(TargetFormat.Dmg, TargetFormat.Msi, TargetFormat.Deb)\u003cbr/\u003e                ...\u003cp\u003e                macOS {\u003cbr/\u003e                    dockName = libs.versions.app.name.get()\u003cbr/\u003e                    iconFile.set(project.file(\u0026#34;../media/appicon/MacOsIcon.icns\u0026#34;))\u003c/p\u003e\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"781e\"\u003eIf you are using figma or another design tool then this is a good link for \u003ca href=\"https://medium.com/design-bootcamp/5-steps-to-create-a-macos-app-icon-in-icns-format-a659f27f1a85\" rel=\"noopener\"\u003emore information\u003c/a\u003e [1]\u003c/p\u003e\u003cp id=\"0b0e\"\u003e\u003ca href=\"https://github.com/sentinelweb/house-shoreditch/tree/develop/media/appicon\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eProject link\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"3bc0\"\u003eDesktop Windows\u003c/h2\u003e\u003cp id=\"826a\"\u003eWindows uses the ico format, there are many ico file generators out there i used this one below.\u003c/p\u003e\u003cp id=\"7fa9\"\u003eSimilarly this is linked in the \u003ccode\u003ebuild.gradle.kts\u003c/code\u003e using a relative path, again this is arbitrary. I choose 512px resolution for adaptability, but probably it could be smaller without hurting the app aesthetics.\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"2cc8\"\u003ecompose {\u003cbr/\u003e    desktop {\u003cbr/\u003e        application {\u003cbr/\u003e            ...\u003cbr/\u003e            nativeDistributions {\u003cbr/\u003e                targetFormats(TargetFormat.Dmg, TargetFormat.Msi, TargetFormat.Deb)\u003cbr/\u003e                ...\u003cbr/\u003e                windows {\u003cbr/\u003e                  iconFile.set(project.file(\u0026#34;../media/appicon/icon_512.ico\u0026#34;))\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"b68d\"\u003e\u003ca href=\"https://github.com/sentinelweb/house-shoreditch/tree/develop/media/appicon\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eProject link\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"e30e\"\u003eDesktop Linux\u003c/h2\u003e\u003cp id=\"647d\"\u003eLinux just uses the png format directly which can obviously just be converted in any image editor. Again, I used 512px but probably smaller would suffice here also.\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"23e2\"\u003ecompose {\u003cbr/\u003e    desktop {\u003cbr/\u003e        application {\u003cbr/\u003e            ...\u003cbr/\u003e            nativeDistributions {\u003cbr/\u003e                targetFormats(TargetFormat.Dmg, TargetFormat.Msi, TargetFormat.Deb)\u003cbr/\u003e                ...\u003cbr/\u003e                linux {\u003cbr/\u003e                  iconFile.set(project.file(\u0026#34;../media/appicon/icon_512.png\u0026#34;))\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"7a7f\"\u003e\u003ca href=\"https://github.com/sentinelweb/house-shoreditch/tree/develop/media/appicon\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eProject link\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"6038\"\u003eWeb\u003c/h2\u003e\u003cp id=\"6f17\"\u003eWeb icons are generally just the icons in the browser tab. They can be specified for various targets and platforms in the webpages \u003ccode\u003eindex.html\u003c/code\u003e. I used another web tool for converting my initial icon to the various formats to supply for the app website. It build multiple versions and generates the site manifest files and various link tags.\u003c/p\u003e\u003cp id=\"f91f\"\u003eWe can then just copy the icons directory into the \u003ccode\u003ewasmJsMain/resources\u003c/code\u003e folder and update our \u003ccode\u003eindex.html\u003c/code\u003e to use these resources.\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"8ad6\"\u003e\u0026lt;link rel=\u0026#34;apple-touch-icon\u0026#34; sizes=\u0026#34;180x180\u0026#34; href=\u0026#34;favicon_io/apple-touch-icon.png\u0026#34;\u0026gt;\u003cbr/\u003e\u0026lt;link rel=\u0026#34;icon\u0026#34; type=\u0026#34;image/png\u0026#34; sizes=\u0026#34;32x32\u0026#34; href=\u0026#34;favicon_io/favicon-32x32.png\u0026#34;\u0026gt;\u003cbr/\u003e\u0026lt;link rel=\u0026#34;icon\u0026#34; type=\u0026#34;image/png\u0026#34; sizes=\u0026#34;16x16\u0026#34; href=\u0026#34;favicon_io/favicon-16x16.png\u0026#34;\u0026gt;\u003cbr/\u003e\u0026lt;link rel=\u0026#34;manifest\u0026#34; href=\u0026#34;favicon_io/site.webmanifest\u0026#34;\u0026gt;\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"fb2b\"\u003e\u003ca href=\"https://github.com/sentinelweb/house-shoreditch/tree/develop/composeApp/src/wasmJsMain/resources\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eProject link\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"7c40\"\u003eConclusion\u003c/h2\u003e\u003cp id=\"6b5e\"\u003eSo that’s it for app icons, we have covered all the targets and it can be quite a bit of work especially if you need to go through multiple iterations to refine the icon. It’s the simplest of the areas we will cover in this series, but obviously very important for your app.\u003c/p\u003e\u003cp id=\"1c1b\"\u003eI found it a bit of work to track down the requirement for each different platform — so I hope this helps someone out there :)\u003c/p\u003e\u003cp id=\"cdc3\"\u003e\u003cstrong\u003eNext\u003c/strong\u003e: \u003ca href=\"https://medium.com/@rrmunro/building-deploying-a-simple-kmp-app-part-2-secrets-9678deb403a4\" rel=\"noopener\"\u003eSecrets\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"9801\"\u003eReferences\u003c/h2\u003e\u003cp id=\"b2c3\"\u003e[1] \u003ca href=\"https://medium.com/@serge-creates\" rel=\"noopener\"\u003eSerge K.\u003c/a\u003e, \u003cstrong\u003e5 Steps to create a macOS app icon in .ICNS format\u003c/strong\u003e, \u003ca href=\"https://medium.com/design-bootcamp/5-steps-to-create-a-macos-app-icon-in-icns-format-a659f27f1a85\" rel=\"noopener\"\u003ehttps://medium.com/design-bootcamp/5-steps-to-create-a-macos-app-icon-in-icns-format-a659f27f1a85\u003c/a\u003e\u003c/p\u003e\u003cp id=\"c59c\"\u003e[2] Photo credit: \u003ca href=\"https://unsplash.com/photos/a-number-of-dices-with-different-colored-hearts-on-them-gBIoMp44Bvg?utm_content=creditShareLink\u0026amp;utm_medium=referral\u0026amp;utm_source=twitter\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ehttps://unsplash.com/photos/a-number-of-dices-with-different-colored-hearts-on-them-gBIoMp44Bvg?utm_content=creditShareLink\u0026amp;utm_medium=referral\u0026amp;utm_source=twitter\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": "2025-02-23T23:51:16.098Z",
  "modifiedTime": null
}
