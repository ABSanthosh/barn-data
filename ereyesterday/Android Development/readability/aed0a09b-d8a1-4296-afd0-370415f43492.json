{
  "id": "aed0a09b-d8a1-4296-afd0-370415f43492",
  "title": "Crafting Multi-Tone Themed app icons in Android : guide to adaptive \u0026 themed icons",
  "link": "https://proandroiddev.com/android-adaptive-themed-icons-guide-8e690263f7aa?source=rss----c72404660798---4",
  "description": "",
  "author": "Dinoy Raj",
  "published": "Sun, 06 Apr 2025 18:03:58 GMT",
  "source": "https://proandroiddev.com/feed",
  "categories": [
    "android-icon",
    "kotlin",
    "material-design",
    "android",
    "jetpack-compose"
  ],
  "byline": "Dinoy Raj",
  "length": 9658,
  "excerpt": "Learn how to create and add themed app icons and adaptive app icons for Android apps. This guide covers how to craft multi tone android app icons , design tips, implementation steps, and best practices for modern Android icon design.",
  "siteName": "ProAndroidDev",
  "favicon": "https://miro.medium.com/v2/resize:fill:256:256/1*A8VytPZQhvUf_MG6hm_Dlw.png",
  "text": "Ultimate Guide For Creating Multi-tone Themed App Icons \u0026 Adaptive App icons for Androidü§ñ: A Step-by-Step Guide üé®Adaptive and themed icons were introduced to ensure consistency across app icons displayed by the launcher on the home screen. In this article, we‚Äôll explore the process of designing multi-tone and gradient-themed icons. Learn how to create adaptive and themed icons for Android apps. This guide covers design tips, implementation steps, and best practices for modern Android icon design.App icon evolution across different android versionsWhat Are Adaptive Iconsüíà in Android?Android introduced adaptive icons back in android O(Oreo :)) providesEnsure a consistent look across devices, regardless of the shape or mask used by different OEMs or third-party launcherswith separate layer for background and foreground layer that enable visual effects between layers while performing motions ( scrolling through home feed and app opening)Typically, the background layer is designed with a solid, opaque color, while the actual app icon is placed in the foreground layer with transparencyBackground (plain colour) and foreground layer (vector icon)which is stacked to create adaptive iconBy moving certain elements to the background layer, we can create distinct motion effects between the foreground and background layers, enhancing the overall dynamic experience during interactions.Background and foreground layer (both contains vector) which is stacked to create adaptive iconAlternatively, we can design the icon by placing the mask in the foreground layer and using transparency for the background layer. This approach achieves a similar visual appearance to the previous method but creates a different motion effect during interactions.Background and foreground layer which is stacked to create adaptive icon where foreground layer act as mask to background layerHow play store create icon by using foreground layer as maskHow to Create Adaptive Icons for Android Apps üßÆadaptive icon generated by stacking background and foreground layer. both should be of size 108 dp x 108 dp with maximum masking of upto 72 dpAdaptive icons design guideline (size and safe area)To ensure that the mask doesn‚Äôt crop any parts of your icon, it‚Äôs recommended to place the icon within a 66 dp area. This ensures the icon remains fully visible while still adhering to the mask‚Äôs constraints.Different masks used by Different OEM and resulting masked app iconsHow to Add Adaptive Icon to your android app üéäadaptive icon is AdaptiveIconDrawable created using \u003cadaptive-icon\u003e xml tag.The background and foreground layers are specified within this element and saved in the res/mipmap-anydpi-v26/ic_launcher.xmlLauncher icon resource\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e...\u003cadaptive-icon xmlns:android=\"http://schemas.android.com/apk/res/android\"\u003e \u003cbackground android:drawable=\"@drawable/ic_launcher_background\" /\u003e \u003cforeground android:drawable=\"@drawable/ic_launcher_foreground\" /\u003e\u003c/adaptive-icon\u003eBackground and Foreground vector\u003cvector xmlns:android=\"http://schemas.android.com/apk/res/android\" android:width=\"108dp\" android:height=\"108dp\" android:viewportWidth=\"48.0\" android:viewportHeight=\"48.0\"\u003e \u003c!-- Your background vector --\u003e\u003c/vector\u003eIf your background doesn‚Äôt include any vector elements of the icon or logo, it‚Äôs best to use a solid, opaque color for the background layer.\u003cresources\u003e \u003ccolor name=\"ic_launcher_background\"\u003e#FFDCC0\u003c/color\u003e\u003c/resources\u003eReplace android: icon and rounded icon properties with corresponding adaptive iconsAlternatively, you can replace your existing icons using the Android Image Asset Studio. make sure to select ‚ÄúLauncher Icons (Adaptive and Legacy)‚Äù as the icon type and adjust the background layer to a solid colour.Studio will automatically generate adaptive icon and update it in the manifest.Image Asset studio for creating adaptive iconsAdaptive App Icon Pre-view üëÄTry AdaptiveIconPlayground, which offers a preview and allows you to test different masks and visual effects that can be applied to adaptive icons. It lets you evaluate your icon design alongside other app icons on the home screen, helping you fine-tune its appearance and behaviour.What Are Adaptive Icons üé® in Android ?Introduced in android 13 where app icon colour unified to colour scheme that fetched dynamically from current user wallpaper or we can set custom set of colours.it provide more personalised and streamlined home screen, avoiding a cluttered look filled with a variety of colours.a small tweak to existing adaptive icon will be enough to produce themed icon. add a additional monochrome layer\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e...\u003cadaptive-icon xmlns:android=\"http://schemas.android.com/apk/res/android\"\u003e \u003cbackground android:drawable=\"@drawable/ic_launcher_background\" /\u003e \u003cforeground android:drawable=\"@drawable/ic_launcher_foreground\" /\u003e // Starting with Android 13 (API level 33), you can opt-in to providing a // \u003cmonochrome\u003e drawable. \u003cmonochrome android:drawable=\"@drawable/ic_launcher_monochrome\" /\u003e\u003c/adaptive-icon\u003eyou could either go for separate monochrome drawable or go for same foreground layer if your icon is simple enoughHow to Create Multi tone themed icons? ü™ÑDesigning an adaptive icon is straightforward when your app icon features a simple, single shape with a uniform colour.what if we have multi tone icons like the examples below how can we design themed multi tone icons?Left One ‚Äî Material Todo app | Right one ‚Äî Pinit appthese multi tones can be achieved by transparency of foreground layer often can be tweaked either making that portion of actual image more transparent and creating different tones of the foreground primary material colour (theme colour)or we can directly edit path files add opacity properties to certain parts of the icon that require a distinct tonelets look into steps for crafting tick icon( material todo app icon )1.Using png file formatask help of your designer friend :)Tweak transparency of multiple portions relatively each other and combine and export as single png filesetting different transparency to each portion ‚Äî craft combination2.Using vector formatsFor vector formats like SVG, both the fill and android:fillAlpha properties can be directly edited within the XML.By adjusting the transparency of specific paths, you can create a blended effect or achieve multi-tone variations, allowing for more dynamic and visually appealing icons\u003cvector xmlns:android=\"http://schemas.android.com/apk/res/android\" android:width=\"108dp\" android:height=\"108dp\" android:viewportWidth=\"512\" android:viewportHeight=\"512\"\u003e \u003cgroup android:scaleX=\"0.46\" android:scaleY=\"0.46\" android:translateX=\"138.24\" android:translateY=\"138.24\"\u003e \u003cpath android:pathData=\"M424.77,132.28L424.77,132.28A40,40 64.83,0 1,424.77 188.85L233.85,379.77A40,40 0,0 1,177.28 379.77L177.28,379.77A40,40 0,0 1,177.28 323.2L368.2,132.28A40,40 64.83,0 1,424.77 132.28z\" android:fillColor=\"#C9513D\" android:fillAlpha=\".9\" \u003c-------- transparency tweak for left rectangle /\u003e \u003cpath android:pathData=\"M92.28,237.95L92.28,237.95A40,40 0,0 1,148.85 237.95L233.71,322.8A40,40 0,0 1,233.71 379.37L233.71,379.37A40,40 0,0 1,177.14 379.37L92.28,294.52A40,40 0,0 1,92.28 237.95z\" android:fillColor=\"#C9513D\" android:fillAlpha=\".7\". \u003c-------- transparency tweak right rectangle /\u003e \u003c/group\u003e\u003c/vector\u003eResult üéâAdaptive multi-tone app icon preview in different colour schemeFor vector drawables, Apart from fillAlpha you can add gradient colours check out thisCommon Pitfalls üíÄForgot to add monochrome layer to rounded icon resourceThemed icons won‚Äôt function properly unless a monochrome layer is included in the ic_launcher_round.xml file\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\u003cadaptive-icon xmlns:android=\"http://schemas.android.com/apk/res/android\"\u003e \u003cbackground android:drawable=\"@color/ic_launcher_background\"/\u003e \u003cforeground android:drawable=\"@mipmap/ic_launcher_foreground\"/\u003e // add monochrome layer for rounded:icon // ic_launcher_rounded.xml \u003cmonochrome android:drawable=\"@mipmap/ic_launcher_foreground\"/\u003e\u003c/adaptive-icon\u003e2. Transparency of foreground layerMany people encounter issues when using formats like JPEG or other file types that don‚Äôt support transparency, resulting in the icon displaying only a solid theme color instead of the actual icon.To avoid this, ensure that the foreground layer is always transparent by using PNG formats or vector formats like SVG.For vector resources, you can directly edit the vector paths and remove the android:fillColor property to achieve the desired transparency.Themed icon viewer üò¶Android studio provides a option to view adaptive icons designProvide options toswitch colour scheme from wallpapernight colour scheme and not night colour schemeTest out different masksSide by side Adaptive icon viewer in android studioYou can also use a real or virtual device to preview themed icons by enabling the ‚ÄúThemed Icon‚Äù beta feature within the Wallpaper and Style settings. This allows you to see how your icons will appear with the current wallpaper and theme.Turn on themed icons feature in virtual/real deviceAndroid introduced themed icon way before IOS yet it has not been fully enforced. As an opt-in feature, many popular apps still choose not to adopt themed icons, leaving them out of the unified aesthetic that the feature offers.hope everyone will migrate soon üòÑApps with and without themed icon implementationFor more on guidelines refer official docs from google about designing themed and adaptive iconsConnect through socials",
  "image": "https://miro.medium.com/v2/resize:fit:1200/1*Iys8hCabUkxh0tJs9My-Jg.jpeg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cdiv\u003e\u003ch2 id=\"5e04\" data-testid=\"storyTitle\"\u003eUltimate Guide For Creating Multi-tone Themed App Icons \u0026amp; Adaptive App icons for Androidü§ñ: A Step-by-Step Guide üé®\u003c/h2\u003e\u003cdiv\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://medium.com/@dinoyraj?source=post_page---byline--8e690263f7aa---------------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Dinoy Raj\" src=\"https://miro.medium.com/v2/resize:fill:88:88/1*qnAGzcufQmzpjjLwop1aRw.jpeg\" width=\"44\" height=\"44\" loading=\"lazy\" data-testid=\"authorPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://proandroiddev.com/?source=post_page---byline--8e690263f7aa---------------------------------------\" rel=\"noopener  ugc nofollow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"ProAndroidDev\" src=\"https://miro.medium.com/v2/resize:fill:48:48/1*XVtdl45m8YaYrPI4buJ5yQ.png\" width=\"24\" height=\"24\" loading=\"lazy\" data-testid=\"publicationPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cp id=\"86bf\"\u003eAdaptive and themed icons were introduced to ensure consistency across app icons displayed by the launcher on the home screen. In this article, we‚Äôll explore the process of designing multi-tone and gradient-themed icons. Learn how to create adaptive and themed icons for Android apps. This guide covers design tips, implementation steps, and best practices for modern Android icon design.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eApp icon evolution across different android versions\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"4f65\"\u003e\u003cstrong\u003eWhat Are Adaptive Iconsüíà in Android?\u003c/strong\u003e\u003c/p\u003e\u003cp id=\"4c8a\"\u003eAndroid introduced adaptive icons back in android O(Oreo :)) provides\u003c/p\u003e\u003cul\u003e\u003cli id=\"08d2\"\u003eEnsure a consistent look across devices, regardless of the shape or mask used by different OEMs or third-party launchers\u003c/li\u003e\u003cli id=\"8fba\"\u003ewith separate layer for background and foreground layer that enable visual effects between layers while performing motions ( scrolling through home feed and app opening)\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"1951\"\u003eTypically, the background layer is designed with a solid, opaque color, while the actual app icon is placed in the foreground layer with transparency\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eBackground (plain colour) and foreground layer (vector icon)which is stacked to create adaptive icon\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"d50a\"\u003eBy moving certain elements to the background layer, we can create distinct motion effects between the foreground and background layers, enhancing the overall dynamic experience during interactions.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eBackground and foreground layer (both contains vector) which is stacked to create adaptive icon\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"968a\"\u003eAlternatively, we can design the icon by placing the mask in the foreground layer and using transparency for the background layer. This approach achieves a similar visual appearance to the previous method but creates a different motion effect during interactions.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eBackground and foreground layer which is stacked to create adaptive icon where foreground layer act as mask to background layer\u003c/figcaption\u003e\u003c/figure\u003e\u003cfigure\u003e\u003cfigcaption\u003eHow play store create icon by using foreground layer as mask\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"446e\"\u003e\u003cstrong\u003eHow to Create Adaptive Icons for Android Apps \u003c/strong\u003eüßÆ\u003c/p\u003e\u003cp id=\"42ed\"\u003eadaptive icon generated by stacking background and foreground layer. both should be of size 108 dp x 108 dp with maximum masking of upto 72 dp\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eAdaptive icons design guideline (size and safe area)\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"f9c9\"\u003eTo ensure that the mask doesn‚Äôt crop any parts of your icon, it‚Äôs recommended to place the icon within a 66 dp area. This ensures the icon remains fully visible while still adhering to the mask‚Äôs constraints.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eDifferent masks used by Different OEM and resulting masked app icons\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"72ad\"\u003e\u003cstrong\u003eHow to Add Adaptive Icon to your android app \u003c/strong\u003eüéä\u003c/p\u003e\u003cp id=\"409b\"\u003eadaptive icon is \u003ca href=\"https://developer.android.com/reference/android/graphics/drawable/AdaptiveIconDrawable\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eAdaptiveIconDrawable\u003c/a\u003e created using \u0026lt;adaptive-icon\u0026gt; xml tag.The background and foreground layers are specified within this element and saved in the \u003cem\u003eres/mipmap-anydpi-v26/ic_launcher.xml\u003c/em\u003e\u003c/p\u003e\u003cp id=\"3b03\"\u003eLauncher icon resource\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"04d7\"\u003e\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34;?\u0026gt;\u003cbr/\u003e...\u003cbr/\u003e\u0026lt;adaptive-icon xmlns:android=\u0026#34;http://schemas.android.com/apk/res/android\u0026#34;\u0026gt;\u003cbr/\u003e    \u0026lt;background android:drawable=\u0026#34;@drawable/ic_launcher_background\u0026#34; /\u0026gt;\u003cbr/\u003e    \u0026lt;foreground android:drawable=\u0026#34;@drawable/ic_launcher_foreground\u0026#34; /\u0026gt;\u003cbr/\u003e\u0026lt;/adaptive-icon\u0026gt;\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"8bff\"\u003eBackground and Foreground vector\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"eac9\"\u003e\u0026lt;vector xmlns:android=\u0026#34;http://schemas.android.com/apk/res/android\u0026#34;\u003cbr/\u003e        android:width=\u0026#34;108dp\u0026#34;\u003cbr/\u003e        android:height=\u0026#34;108dp\u0026#34;\u003cbr/\u003e        android:viewportWidth=\u0026#34;48.0\u0026#34;\u003cbr/\u003e        android:viewportHeight=\u0026#34;48.0\u0026#34;\u0026gt;\u003cbr/\u003e  \u0026lt;!-- Your background vector --\u0026gt;\u003cbr/\u003e\u0026lt;/vector\u0026gt;\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"7218\"\u003eIf your background doesn‚Äôt include any vector elements of the icon or logo, it‚Äôs best to use a solid, opaque color for the background layer.\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"9fe7\"\u003e\u0026lt;resources\u0026gt;\u003cbr/\u003e    \u0026lt;color name=\u0026#34;ic_launcher_background\u0026#34;\u0026gt;#FFDCC0\u0026lt;/color\u0026gt;\u003cbr/\u003e\u0026lt;/resources\u0026gt;\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"19ea\"\u003eReplace android: icon and rounded icon properties with corresponding adaptive icons\u003c/p\u003e\u003cp id=\"73c7\"\u003eAlternatively, you can replace your existing icons using the Android Image Asset Studio. make sure to select ‚ÄúLauncher Icons (Adaptive and Legacy)‚Äù as the icon type and adjust the background layer to a solid colour.\u003c/p\u003e\u003cp id=\"39b0\"\u003eStudio will automatically generate adaptive icon and update it in the manifest.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eImage Asset studio for creating adaptive icons\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"5a7c\"\u003e\u003cstrong\u003eAdaptive App Icon Pre-view \u003c/strong\u003eüëÄ\u003c/p\u003e\u003cp id=\"f985\"\u003eTry AdaptiveIconPlayground, which offers a preview and allows you to test different masks and visual effects that can be applied to adaptive icons. It lets you evaluate your icon design alongside other app icons on the home screen, helping you fine-tune its appearance and behaviour.\u003c/p\u003e\u003cp id=\"a5ff\"\u003e\u003cstrong\u003eWhat Are Adaptive Icons \u003c/strong\u003eüé® \u003cstrong\u003ein Android ?\u003c/strong\u003e\u003c/p\u003e\u003cp id=\"9996\"\u003eIntroduced in android 13 where app icon colour unified to colour scheme that fetched dynamically from current user wallpaper or we can set custom set of colours.it provide more personalised and streamlined home screen, avoiding a cluttered look filled with a variety of colours.\u003c/p\u003e\u003cp id=\"2e18\"\u003ea small tweak to existing adaptive icon will be enough to produce themed icon. add a additional monochrome layer\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"8ed2\"\u003e\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34;?\u0026gt;\u003cbr/\u003e...\u003cbr/\u003e\u0026lt;adaptive-icon xmlns:android=\u0026#34;http://schemas.android.com/apk/res/android\u0026#34;\u0026gt;\u003cbr/\u003e    \u0026lt;background android:drawable=\u0026#34;@drawable/ic_launcher_background\u0026#34; /\u0026gt;\u003cbr/\u003e    \u0026lt;foreground android:drawable=\u0026#34;@drawable/ic_launcher_foreground\u0026#34; /\u0026gt;\u003cp\u003e    // Starting with Android 13 (API level 33), you can opt-in to providing a\u003cbr/\u003e    // \u0026lt;monochrome\u0026gt; drawable.\u003cbr/\u003e    \u0026lt;monochrome android:drawable=\u0026#34;@drawable/ic_launcher_monochrome\u0026#34; /\u0026gt;\u003cbr/\u003e\u0026lt;/adaptive-icon\u0026gt;\u003c/p\u003e\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"bf42\"\u003eyou could either go for separate monochrome drawable or go for same foreground layer if your icon is simple enough\u003c/p\u003e\u003cp id=\"2a24\"\u003e\u003cstrong\u003eHow to Create Multi tone themed icons? \u003c/strong\u003eü™Ñ\u003c/p\u003e\u003cp id=\"1207\"\u003eDesigning an adaptive icon is straightforward when your app icon features a simple, single shape with a uniform colour.\u003c/p\u003e\u003cp id=\"51bb\"\u003ewhat if we have multi tone icons like the examples below how can we design themed multi tone icons?\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eLeft One ‚Äî Material Todo app | Right one ‚Äî Pinit app\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"eb02\"\u003ethese multi tones can be achieved by transparency of foreground layer often can be tweaked either making that portion of actual image more transparent and creating different tones of the foreground primary material colour (theme colour)\u003c/p\u003e\u003cp id=\"7c75\"\u003eor we can directly edit path files add opacity properties to certain parts of the icon that require a distinct tone\u003c/p\u003e\u003cp id=\"e28d\"\u003elets look into steps for crafting tick icon( material todo app icon )\u003c/p\u003e\u003cp id=\"b27b\"\u003e\u003cstrong\u003e1.Using png file format\u003c/strong\u003e\u003c/p\u003e\u003cp id=\"3b1d\"\u003eask help of your designer friend :)\u003c/p\u003e\u003cp id=\"654d\"\u003eTweak transparency of multiple portions relatively each other and combine and export as single png file\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003esetting different transparency to each portion ‚Äî craft combination\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"a75b\"\u003e\u003cstrong\u003e2.Using vector formats\u003c/strong\u003e\u003c/p\u003e\u003cp id=\"f67a\"\u003eFor vector formats like SVG, both the \u003ccode\u003efill\u003c/code\u003e and \u003ccode\u003eandroid:fillAlpha\u003c/code\u003e properties can be directly edited within the XML.\u003c/p\u003e\u003cp id=\"1fbb\"\u003eBy adjusting the transparency of specific paths, you can create a blended effect or achieve multi-tone variations, allowing for more dynamic and visually appealing icons\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"b511\"\u003e\u0026lt;vector xmlns:android=\u0026#34;http://schemas.android.com/apk/res/android\u0026#34;\u003cbr/\u003e    android:width=\u0026#34;108dp\u0026#34;\u003cbr/\u003e    android:height=\u0026#34;108dp\u0026#34;\u003cbr/\u003e    android:viewportWidth=\u0026#34;512\u0026#34;\u003cbr/\u003e    android:viewportHeight=\u0026#34;512\u0026#34;\u0026gt;\u003cbr/\u003e  \u0026lt;group android:scaleX=\u0026#34;0.46\u0026#34;\u003cbr/\u003e      android:scaleY=\u0026#34;0.46\u0026#34;\u003cbr/\u003e      android:translateX=\u0026#34;138.24\u0026#34;\u003cbr/\u003e      android:translateY=\u0026#34;138.24\u0026#34;\u0026gt;\u003cbr/\u003e    \u0026lt;path\u003cbr/\u003e        android:pathData=\u0026#34;M424.77,132.28L424.77,132.28A40,40 64.83,0 1,424.77 188.85L233.85,379.77A40,40 0,0 1,177.28 379.77L177.28,379.77A40,40 0,0 1,177.28 323.2L368.2,132.28A40,40 64.83,0 1,424.77 132.28z\u0026#34;\u003cbr/\u003e        android:fillColor=\u0026#34;#C9513D\u0026#34; \u003cbr/\u003e        android:fillAlpha=\u0026#34;.9\u0026#34; \u0026lt;-------- transparency tweak for left rectangle\u003cbr/\u003e    /\u0026gt;\u003cbr/\u003e    \u0026lt;path\u003cbr/\u003e        android:pathData=\u0026#34;M92.28,237.95L92.28,237.95A40,40 0,0 1,148.85 237.95L233.71,322.8A40,40 0,0 1,233.71 379.37L233.71,379.37A40,40 0,0 1,177.14 379.37L92.28,294.52A40,40 0,0 1,92.28 237.95z\u0026#34;\u003cbr/\u003e        android:fillColor=\u0026#34;#C9513D\u0026#34; \u003cbr/\u003e        android:fillAlpha=\u0026#34;.7\u0026#34;. \u0026lt;-------- transparency tweak right rectangle\u003cbr/\u003e     /\u0026gt;\u003cbr/\u003e  \u0026lt;/group\u0026gt;\u003cbr/\u003e\u0026lt;/vector\u0026gt;\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"288f\"\u003e\u003cstrong\u003eResult üéâ\u003c/strong\u003e\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eAdaptive multi-tone app icon preview in different colour scheme\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"ebdc\"\u003eFor vector drawables, Apart from fillAlpha you can add gradient colours check out \u003ca href=\"https://developer.android.com/reference/android/R.styleable#GradientColor\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ethis\u003c/a\u003e\u003c/p\u003e\u003cp id=\"83bf\"\u003e\u003cstrong\u003eCommon Pitfalls \u003c/strong\u003eüíÄ\u003c/p\u003e\u003col\u003e\u003cli id=\"c95d\"\u003eForgot to add monochrome layer to rounded icon resource\u003c/li\u003e\u003c/ol\u003e\u003cp id=\"ce24\"\u003eThemed icons won‚Äôt function properly unless a monochrome layer is included in the \u003ccode\u003eic_launcher_round.xml\u003c/code\u003e file\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"4b44\"\u003e\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34;?\u0026gt;\u003cbr/\u003e\u0026lt;adaptive-icon xmlns:android=\u0026#34;http://schemas.android.com/apk/res/android\u0026#34;\u0026gt;\u003cbr/\u003e    \u0026lt;background android:drawable=\u0026#34;@color/ic_launcher_background\u0026#34;/\u0026gt;\u003cbr/\u003e    \u0026lt;foreground android:drawable=\u0026#34;@mipmap/ic_launcher_foreground\u0026#34;/\u0026gt;\u003cp\u003e    // add monochrome layer for rounded:icon\u003cbr/\u003e    // ic_launcher_rounded.xml\u003cbr/\u003e    \u0026lt;monochrome android:drawable=\u0026#34;@mipmap/ic_launcher_foreground\u0026#34;/\u0026gt;\u003c/p\u003e\u003cp\u003e\u0026lt;/adaptive-icon\u0026gt;\u003c/p\u003e\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"ef49\"\u003e2. Transparency of foreground layer\u003c/p\u003e\u003cp id=\"07c3\"\u003eMany people encounter issues when using formats like JPEG or other file types that don‚Äôt support transparency, resulting in the icon displaying only a solid theme color instead of the actual icon.\u003c/p\u003e\u003cp id=\"4778\"\u003eTo avoid this, ensure that the foreground layer is always transparent by using PNG formats or vector formats like SVG.\u003c/p\u003e\u003cp id=\"fed9\"\u003eFor vector resources, you can directly edit the vector paths and remove the \u003ccode\u003eandroid:fillColor\u003c/code\u003e property to achieve the desired transparency.\u003c/p\u003e\u003cp id=\"7d1c\"\u003e\u003cstrong\u003eThemed icon viewer \u003c/strong\u003eüò¶\u003c/p\u003e\u003cp id=\"7096\"\u003eAndroid studio provides a option to view adaptive icons design\u003c/p\u003e\u003cp id=\"90bd\"\u003eProvide options to\u003c/p\u003e\u003cul\u003e\u003cli id=\"95ad\"\u003eswitch colour scheme from wallpaper\u003c/li\u003e\u003cli id=\"e761\"\u003enight colour scheme and not night colour scheme\u003c/li\u003e\u003cli id=\"e5d7\"\u003eTest out different masks\u003c/li\u003e\u003c/ul\u003e\u003cfigure\u003e\u003cfigcaption\u003eSide by side Adaptive icon viewer in android studio\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"a1fa\"\u003eYou can also use a real or virtual device to preview themed icons by enabling the ‚ÄúThemed Icon‚Äù beta feature within the Wallpaper and Style settings. This allows you to see how your icons will appear with the current wallpaper and theme.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eTurn on themed icons feature in virtual/real device\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"29e9\"\u003eAndroid introduced themed icon way before IOS yet it has not been fully enforced. As an opt-in feature, many popular apps still choose not to adopt themed icons, leaving them out of the unified aesthetic that the feature offers.\u003c/p\u003e\u003cp id=\"8e75\"\u003ehope everyone will migrate soon üòÑ\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eApps with and without themed icon implementation\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"3ed1\"\u003eFor more on guidelines refer official docs from google about designing themed and adaptive icons\u003c/p\u003e\u003cp id=\"6b0a\"\u003eConnect through socials\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "11 min read",
  "publishedTime": "2025-04-06T18:03:58.347Z",
  "modifiedTime": null
}
