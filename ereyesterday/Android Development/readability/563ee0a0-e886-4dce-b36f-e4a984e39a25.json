{
  "id": "563ee0a0-e886-4dce-b36f-e4a984e39a25",
  "title": "Getting Started with Material Design 3 in Jetpack Compose",
  "link": "https://proandroiddev.com/getting-started-with-material-design-3-in-jetpack-compose-e2e6db2b9fce?source=rss----c72404660798---4",
  "description": "",
  "author": "Mubarak Native",
  "published": "Thu, 17 Apr 2025 13:36:41 GMT",
  "source": "https://proandroiddev.com/feed",
  "categories": [
    "jetpack-compose",
    "android-app-development",
    "androiddev",
    "andro√Ød",
    "material-design"
  ],
  "byline": "Mubarak Native",
  "length": 3949,
  "excerpt": "If you don‚Äôt want to rely on dynamic colors or manually create a color scheme, you can create your own custom color scheme that might reflect your branding to do this ‚ÄîMaterial 3 provides a Theme‚Ä¶",
  "siteName": "ProAndroidDev",
  "favicon": "https://miro.medium.com/v2/resize:fill:256:256/1*A8VytPZQhvUf_MG6hm_Dlw.png",
  "text": "Photo by Daniel Korpai on UnsplashIn this article, you‚Äôll learn how to integrate Material 3 in your Compose app, use the updated components, and apply best practices for building beautiful Android UIs.Why Material 3?Material Design 3 is Google‚Äôs latest design system, aiming to create a more expressive, adaptive, and accessible UI across Android apps. Some key benefits include:Dynamic color that matches the user‚Äôs wallpaper (Android 12+)New UI components like FilledTonalButton, AssistChip, and BottomAppBarBetter control over shape, elevation, and typographyNative support in Jetpack ComposeStep 1: Add Material 3 to Your ProjectIn your build.gradle(:app) file, add: Find the latest version heredependencies { implementation(\"androidx.compose.material3:material3:1.3.2\")}Step 2: Set Up Your Theme with Material 3Create or update your Theme.kt to use MaterialTheme with dynamic color support:@Composablefun MyAppTheme( darkTheme: Boolean = isSystemInDarkTheme(), dynamicColor: Boolean = true, content: @Composable () -\u003e Unit) { val context = LocalContext.current val colorScheme = when { dynamicColor \u0026\u0026 Build.VERSION.SDK_INT \u003e= Build.VERSION_CODES.S -\u003e { if (darkTheme) dynamicDarkColorScheme(context) else dynamicLightColorScheme(context) } darkTheme -\u003e darkColorScheme() else -\u003e lightColorScheme() } MaterialTheme( colorScheme = colorScheme, typography = Typography, content = content )}Then wrap your app‚Äôs setContent with it:setContent { MyAppTheme { Scaffold() { // Your UI goes here } }}Custom Color SchemeIf you don‚Äôt want to rely on dynamic colors or manually create a color scheme, you can create your own custom color scheme that might reflect your branding to do this ‚ÄîMaterial 3 provides a Theme builder where you generate Color and Theme by mentioning your base color.Step 3: Use Material 3 ComponentsMaterial 3 introduces redesigned components with updated styling:@Composablefun Material3Buttons() { Column(modifier = Modifier.padding(16.dp)) { Button(onClick = { /*TODO*/ }) { Text(\"Default Button\") } FilledTonalButton(onClick = { }) { Text(\"Tonal Button\") } ElevatedButton(onClick = { }) { Text(\"Elevated Button\") } }}Try Card, TextField, TopAppBar, NavigationBar, and more ‚Äî The full list can be founded here.Typography \u0026 ShapesMaterial 3 introduces modern typography styles like:displayLarge, headlineSmall, titleMedium, labelLarge, etc.You can customize them in your Typography.kt:val Typography = Typography( titleLarge = TextStyle( fontWeight = FontWeight.Bold, fontSize = 22.sp, letterSpacing = 0.15.sp ))The same goes for shapes:val Shapes = Shapes( small = RoundedCornerShape(8.dp), medium = RoundedCornerShape(16.dp), large = RoundedCornerShape(24.dp))Dynamic Color on Android 12+One of the coolest features of M3 is dynamic theming. On Android 12+, the system can generate color schemes from the user‚Äôs wallpaper.This happens automatically when you use dynamicDarkColorScheme() or dynamicLightColorScheme() ‚Äî it just works.On older versions, you can fall back to predefined colors with lightColorScheme() and darkColorScheme().Best PracticesUse MaterialTheme.colorScheme and MaterialTheme.typography instead of hardcoded valuesTest your UI in light/dark mode and with accessibility settingsAvoid mixing Material 2 and Material 3 unless necessarySample ProjectCheck out this GitHub repo for a full Material 3 Compose sample:In this quick blog, we learned how to set up material 3 design system in jetpack compose and also learned its advantages. I hope you will like this article. If so, please likeüëè this story and share it with your friends and family, don‚Äôt forgot to follow me. And I will see you in the next upcoming article with an interesting topic.Signing off, Mubarak.M Basha",
  "image": "https://miro.medium.com/v2/da:true/resize:fit:1200/0*a-qJK7BMHy55qFN1",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cfigure\u003e\u003cfigcaption\u003ePhoto by \u003ca href=\"https://unsplash.com/@danielkorpai?utm_source=medium\u0026amp;utm_medium=referral\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eDaniel Korpai\u003c/a\u003e on \u003ca href=\"https://unsplash.com/?utm_source=medium\u0026amp;utm_medium=referral\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eUnsplash\u003c/a\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003cdiv\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://mubaraknative.medium.com/?source=post_page---byline--e2e6db2b9fce---------------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Mubarak Native\" src=\"https://miro.medium.com/v2/resize:fill:88:88/1*UDMb5Rfs_Vvpb92Kmd76vw.jpeg\" width=\"44\" height=\"44\" loading=\"lazy\" data-testid=\"authorPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://proandroiddev.com/?source=post_page---byline--e2e6db2b9fce---------------------------------------\" rel=\"noopener  ugc nofollow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"ProAndroidDev\" src=\"https://miro.medium.com/v2/resize:fill:48:48/1*XVtdl45m8YaYrPI4buJ5yQ.png\" width=\"24\" height=\"24\" loading=\"lazy\" data-testid=\"publicationPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/div\u003e\u003cblockquote\u003e\u003cp id=\"0d1a\"\u003eIn this article, you‚Äôll learn how to integrate Material 3 in your Compose app, use the updated components, and apply best practices for building beautiful Android UIs.\u003c/p\u003e\u003c/blockquote\u003e\u003ch2 id=\"2f98\"\u003eWhy Material 3?\u003c/h2\u003e\u003cblockquote\u003e\u003cp id=\"0da9\"\u003e\u003ca href=\"https://developer.android.com/develop/ui/compose/designsystems/material3\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eMaterial Design 3\u003c/a\u003e is Google‚Äôs latest design system, aiming to create a more expressive, adaptive, and accessible UI across Android apps. Some key benefits include:\u003c/p\u003e\u003c/blockquote\u003e\u003cul\u003e\u003cli id=\"5f4c\"\u003e\u003cstrong\u003eDynamic color\u003c/strong\u003e that matches the user‚Äôs wallpaper (Android 12+)\u003c/li\u003e\u003cli id=\"71cf\"\u003eNew UI components like \u003ccode\u003eFilledTonalButton\u003c/code\u003e, \u003ccode\u003eAssistChip\u003c/code\u003e, and \u003ccode\u003eBottomAppBar\u003c/code\u003e\u003c/li\u003e\u003cli id=\"d269\"\u003eBetter control over shape, elevation, and typography\u003c/li\u003e\u003cli id=\"c527\"\u003eNative support in Jetpack Compose\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"06d4\"\u003eStep 1: Add Material 3 to Your Project\u003c/h2\u003e\u003cp id=\"539f\"\u003eIn your \u003ccode\u003ebuild.gradle(:app)\u003c/code\u003e file, add: Find the latest version \u003ca href=\"https://developer.android.com/jetpack/androidx/releases/compose-material3\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ehere\u003c/a\u003e\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"d057\"\u003edependencies {\u003cbr/\u003e   implementation(\u0026#34;androidx.compose.material3:material3:1.3.2\u0026#34;)\u003cbr/\u003e}\u003c/span\u003e\u003c/pre\u003e\u003ch2 id=\"b1ec\"\u003eStep 2: Set Up Your Theme with Material 3\u003c/h2\u003e\u003cp id=\"8785\"\u003eCreate or update your \u003ccode\u003eTheme.kt\u003c/code\u003e to use \u003ccode\u003eMaterialTheme\u003c/code\u003e with dynamic color support:\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"ab61\"\u003e@Composable\u003cbr/\u003efun MyAppTheme(\u003cbr/\u003e    darkTheme: Boolean = isSystemInDarkTheme(),\u003cbr/\u003e    dynamicColor: Boolean = true,\u003cbr/\u003e    content: @Composable () -\u0026gt; Unit\u003cbr/\u003e) {\u003cbr/\u003e    val context = LocalContext.current\u003cbr/\u003e    val colorScheme = when {\u003cbr/\u003e        dynamicColor \u0026amp;\u0026amp; Build.VERSION.SDK_INT \u0026gt;= Build.VERSION_CODES.S -\u0026gt; {\u003cbr/\u003e            if (darkTheme) dynamicDarkColorScheme(context) else dynamicLightColorScheme(context)\u003cbr/\u003e        }\u003cbr/\u003e        darkTheme -\u0026gt; darkColorScheme()\u003cbr/\u003e        else -\u0026gt; lightColorScheme()\u003cbr/\u003e    }\u003cp\u003e    MaterialTheme(\u003cbr/\u003e        colorScheme = colorScheme,\u003cbr/\u003e        typography = Typography,\u003cbr/\u003e        content = content\u003cbr/\u003e    )\u003cbr/\u003e}\u003c/p\u003e\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"85f5\"\u003eThen wrap your app‚Äôs \u003ccode\u003esetContent\u003c/code\u003e with it:\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"230b\"\u003esetContent {\u003cbr/\u003e    MyAppTheme {\u003cbr/\u003e        Scaffold() {\u003cbr/\u003e            // Your UI goes here\u003cbr/\u003e        }\u003cbr/\u003e    }\u003cbr/\u003e}\u003c/span\u003e\u003c/pre\u003e\u003ch2 id=\"b9fd\"\u003eCustom Color Scheme\u003c/h2\u003e\u003cp id=\"d344\"\u003eIf you don‚Äôt want to rely on dynamic colors or manually create a color scheme, you can create your own custom color scheme that might reflect your branding to do this ‚ÄîMaterial 3 provides a \u003ca href=\"https://developer.android.com/develop/ui/compose/designsystems/material3#generate_color_schemes\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eTheme builder\u003c/a\u003e where you generate Color and Theme by mentioning your base color.\u003c/p\u003e\u003ch2 id=\"d37f\"\u003eStep 3: Use Material 3 Components\u003c/h2\u003e\u003cp id=\"af0a\"\u003eMaterial 3 introduces redesigned components with updated styling:\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"4969\"\u003e@Composable\u003cbr/\u003efun Material3Buttons() {\u003cbr/\u003e    Column(modifier = Modifier.padding(16.dp)) {\u003cbr/\u003e        Button(onClick = { /*TODO*/ }) {\u003cbr/\u003e            Text(\u0026#34;Default Button\u0026#34;)\u003cbr/\u003e        }\u003cp\u003e        FilledTonalButton(onClick = { }) {\u003cbr/\u003e            Text(\u0026#34;Tonal Button\u0026#34;)\u003cbr/\u003e        }\u003c/p\u003e\u003cp\u003e        ElevatedButton(onClick = { }) {\u003cbr/\u003e            Text(\u0026#34;Elevated Button\u0026#34;)\u003cbr/\u003e        }\u003cbr/\u003e    }\u003cbr/\u003e}\u003c/p\u003e\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"963c\"\u003eTry \u003ccode\u003eCard\u003c/code\u003e, \u003ccode\u003eTextField\u003c/code\u003e, \u003ccode\u003eTopAppBar\u003c/code\u003e, \u003ccode\u003eNavigationBar\u003c/code\u003e, and more ‚Äî The full list can be founded \u003ca href=\"https://developer.android.com/develop/ui/compose/components\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003ehere\u003c/strong\u003e\u003c/a\u003e.\u003c/p\u003e\u003ch2 id=\"fe05\"\u003eTypography \u0026amp; Shapes\u003c/h2\u003e\u003cp id=\"31cf\"\u003eMaterial 3 introduces modern typography styles like:\u003c/p\u003e\u003cul\u003e\u003cli id=\"c848\"\u003e\u003ccode\u003edisplayLarge\u003c/code\u003e, \u003ccode\u003eheadlineSmall\u003c/code\u003e, \u003ccode\u003etitleMedium\u003c/code\u003e, \u003ccode\u003elabelLarge\u003c/code\u003e, etc.\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"bfc8\"\u003eYou can customize them in your \u003ccode\u003eTypography.kt\u003c/code\u003e:\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"3923\"\u003eval Typography = Typography(\u003cbr/\u003e    titleLarge = TextStyle(\u003cbr/\u003e        fontWeight = FontWeight.Bold,\u003cbr/\u003e        fontSize = 22.sp,\u003cbr/\u003e        letterSpacing = 0.15.sp\u003cbr/\u003e    )\u003cbr/\u003e)\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"081e\"\u003eThe same goes for \u003ca href=\"https://developer.android.com/develop/ui/compose/designsystems/material3#shapes\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eshapes\u003c/a\u003e:\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"da97\"\u003eval Shapes = Shapes(\u003cbr/\u003e    small = RoundedCornerShape(8.dp),\u003cbr/\u003e    medium = RoundedCornerShape(16.dp),\u003cbr/\u003e    large = RoundedCornerShape(24.dp)\u003cbr/\u003e)\u003c/span\u003e\u003c/pre\u003e\u003ch2 id=\"1e0d\"\u003eDynamic Color on Android 12+\u003c/h2\u003e\u003cp id=\"6b8e\"\u003eOne of the coolest features of M3 is \u003ca href=\"https://developer.android.com/develop/ui/compose/designsystems/material3#dynamic_color_schemes\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003edynamic theming\u003c/strong\u003e\u003c/a\u003e. On Android 12+, the system can generate color schemes from the user‚Äôs wallpaper.\u003c/p\u003e\u003cp id=\"156b\"\u003eThis happens automatically when you use \u003ccode\u003edynamicDarkColorScheme()\u003c/code\u003e or \u003ccode\u003edynamicLightColorScheme()\u003c/code\u003e ‚Äî it just works.\u003c/p\u003e\u003cp id=\"e968\"\u003eOn older versions, you can fall back to predefined colors with \u003ccode\u003elightColorScheme()\u003c/code\u003e and \u003ccode\u003edarkColorScheme()\u003c/code\u003e.\u003c/p\u003e\u003ch2 id=\"4c37\"\u003eBest Practices\u003c/h2\u003e\u003cul\u003e\u003cli id=\"7908\"\u003eUse \u003ccode\u003eMaterialTheme.colorScheme\u003c/code\u003e and \u003ccode\u003eMaterialTheme.typography\u003c/code\u003e instead of hardcoded values\u003c/li\u003e\u003cli id=\"61af\"\u003eTest your UI in light/dark mode and with accessibility settings\u003c/li\u003e\u003cli id=\"0c6b\"\u003eAvoid mixing Material 2 and Material 3 unless necessary\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"fd69\"\u003eSample Project\u003c/h2\u003e\u003cp id=\"d528\"\u003eCheck out this GitHub repo for a full Material 3 Compose sample:\u003c/p\u003e\u003cp id=\"1e51\"\u003eIn this quick blog, we learned \u003cem\u003ehow to set up material 3 design system in jetpack compose and also learned its advantages.\u003c/em\u003e I hope you will like this article. If so, please likeüëè this story and share it with your friends and family, don‚Äôt forgot to follow me. And I will see you in the next upcoming article with an interesting topic.\u003c/p\u003e\u003cp id=\"bdde\"\u003eSigning off, \u003ca href=\"https://mubaraknative.github.io\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eMubarak.M Basha\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": "2025-04-17T13:36:41.171Z",
  "modifiedTime": null
}
