{
  "id": "e0e43985-5d6b-40c1-9714-5685563731ed",
  "title": "Android Weekly Issue #663",
  "link": "https://androidweekly.net/issues/issue-663/rss.xml",
  "description": "Articles \u0026 Tutorials Sponsored Why mobile releases need to be managed [webinar] The hidden costs of mobile releases‚Äîwasted time, rising risks, and developer frustration‚Äîadd up quickly. Watch our on-demand webinar to learn why mobile releases are challenging‚Äîand how teams are cutting release times by 25% to deliver features faster and with confidence. Flat approach for tabbed Navigation in Jetpack Compose Anil Kumar Beesetti proposes a flat navigation structure in Jetpack Compose to seamlessly integrate screens with and without bottom tabs, enhancing URL mapping and back navigation consistency. Hints in Compose Viktor Mykhailiv provides a comprehensive guide on creating custom tooltips in Jetpack Compose, detailing steps such as overlaying a dimmed background, calculating anchor coordinates, clipping out anchor shapes, and rendering the hint content. Sponsored How Koin's Plugin Helps You Spot Kotlin App Issues Join Arnaud \u0026 Miguel for a technical webinar exploring the new Koin Plugin for IntelliJ \u0026 Android Studio. Learn how it detects dependency issues directly in your IDE, highlights potential app issues, and integrates with the Kotzilla Console for advanced debugging and root-cause analysis. Gradle Plugins Best Practices Tim Malseed recommends centralizing Gradle plugin declarations in the top-level build.gradle to ensure consistency and avoid dependency issues in multi-module projects. Static App Shortcuts in Android: A Simple Implementation Guide Eknath Dhuri provides a step-by-step guide to implementing static app shortcuts, enhancing user experience by allowing quick access to key features directly from the app icon. Beware of READ_MEDIA_IMAGES: not just a feeling of rejection Alejandra Stamato highlights issues with the READ_MEDIA_IMAGES permission in Android, explaining how its inclusion in the manifest can block deployment to the Alpha channel. Kotlin Guards Explained: Boost Code Clarity with when Statements Ioannis Anifantakis introduces Kotlin Guards, an experimental feature in Kotlin 2.1 that enhances the when statement by allowing additional condition checks directly within each branch. Handling Token Expiration in Retrofit: Automatic Token Refresh with OkHttp Dobri Kostadinov provides a comprehensive guide on managing token expiration in Retrofit by utilizing OkHttp‚Äôs Authenticator to automatically refresh tokens. Reliable Timekeeping with the TrustedTime API in Android Ignacio Carri√≥n discusses the TrustedTime API, which provides Android developers with a reliable and tamper-resistant time source, independent of device settings, enhancing functionalities like scheduling and security. Unit Testing ViewModels Marcello Galhardo introduces ViewModelScenario, a helper in Lifecycle 2.9.0-alpha01 that simplifies unit testing of ViewModels by facilitating the testing of onCleared() and state restoration. Deprecating idling resource libraries Jake Wharton announces the deprecation of two idling condition testing libraries, expressing concerns that idling resources expose application internals to testing frameworks, leading to brittle tests. How I prototype with colors in Jetpack Compose Sina Samaki shares strategies for efficient color prototyping in Jetpack Compose, implementing a dark-light color chooser using an infix extension function, and utilizing Android Studio‚Äôs preview feature for rapid iteration. Place a sponsored post Advertise your Android dev course to over 80k readers We reach out to more than 80k Android developers around the world, every week, through our email newsletter and social media channels. Advertise your Android development course! Libraries \u0026 Code LuckyWheelViewCompose A custom lightweight component that displays a Lucky Wheel developed with Kotlin and Jetpack Compose. Features easy customize of colors, text, icon, arrow, animation, rotation and addition of items and it's very easy to integrate in your application. News OpenAI vs. DeepSeek: Which AI Understands Kotlin Better? Vera Kudrevskaia evaluates AI models‚Äô proficiency with Kotlin, revealing that DeepSeek-R1 outperforms OpenAI‚Äôs latest models, including o1 and o3-mini, in understanding and generating Kotlin code Videos \u0026 Podcasts Request And Display User's Current Location Daniel Atitienei shows how to request user location permissions and retrieve their current location. 3 Ways How Attackers Can Reverse Engineer Your Android App Philipp Lackner's deep dive into different approaches to reverse engineering on Android to better understand how an attacker could get to secrets in your app - and finally to understand how we can protect against that. Data Oriented Programming Dive into the programming paradigm of Data Oriented Programming (DOP) and why making data the star can simplify your code. What Are The Different Kinds of Test Doubles Jov Mit explains the different kinds of test doubles. Community has spoken! Android Studio is the Winner üèÜ Community has spoken! Android Studio is the winner and Fleet loses out. Compose for TV | Jetpack Compose Tips Compose for TV is the modern approach for building Android TV user interfaces Building KMP Libraries: The RevenueCat Story Sebastian and M√°rton discuss building KMP libraries with Jay Shortway, the author of RevenueCat‚Äôs Kotlin Multiplatform SDK for in-app purchases. Kotlin Multi Platform RSS Feeds parser: Debugging Madness Code With The Italians, where they dive into the wild world of RSS feeds and environment variables with special guest Marco Gomiero! Gradle Build Tool 8.12.1 - What's new and team demos What's new in Gradle Build Tool 8.12.x",
  "author": "",
  "published": "Sun, 23 Feb 2025 10:08:49 +0000",
  "source": "https://androidweekly.net/rss.xml",
  "categories": null,
  "byline": "",
  "length": 2015,
  "excerpt": "",
  "siteName": "",
  "favicon": "",
  "text": "The hidden costs of mobile releases‚Äîwasted time, rising risks, and developer frustration‚Äîadd up quickly. Watch our on-demand webinar to learn why mobile releases are challenging‚Äîand how teams are cutting release times by 25% to deliver features faster and with confidence. Viktor Mykhailiv provides a comprehensive guide on creating custom tooltips in Jetpack Compose, detailing steps such as overlaying a dimmed background, calculating anchor coordinates, clipping out anchor shapes, and rendering the hint content. Join Arnaud \u0026 Miguel for a technical webinar exploring the new Koin Plugin for IntelliJ \u0026 Android Studio. Learn how it detects dependency issues directly in your IDE, highlights potential app issues, and integrates with the Kotzilla Console for advanced debugging and root-cause analysis. Tim Malseed recommends centralizing Gradle plugin declarations in the top-level build.gradle to ensure consistency and avoid dependency issues in multi-module projects. Marcello Galhardo introduces ViewModelScenario, a helper in Lifecycle 2.9.0-alpha01 that simplifies unit testing of ViewModels by facilitating the testing of onCleared() and state restoration. Jake Wharton announces the deprecation of two idling condition testing libraries, expressing concerns that idling resources expose application internals to testing frameworks, leading to brittle tests. Sina Samaki shares strategies for efficient color prototyping in Jetpack Compose, implementing a dark-light color chooser using an infix extension function, and utilizing Android Studio‚Äôs preview feature for rapid iteration. A custom lightweight component that displays a Lucky Wheel developed with Kotlin and Jetpack Compose. Features easy customize of colors, text, icon, arrow, animation, rotation and addition of items and it's very easy to integrate in your application. Dive into the programming paradigm of Data Oriented Programming (DOP) and why making data the star can simplify your code. ]]\u003e",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://www.runway.team/webinar/why-mobile-releases-need-to-be-managed?utm_source=newsletter\u0026amp;utm_medium=android-weekly\u0026amp;utm_campaign=jan-26-25\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/67baf3/243c93bc225a000889/square_rnway.jpeg\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003cdiv\u003e\u003cp\u003eThe hidden costs of mobile releases‚Äîwasted time, rising risks, and developer frustration‚Äîadd up quickly. Watch our on-demand webinar to learn why mobile releases are challenging‚Äîand how teams are cutting release times by 25% to deliver features faster and with confidence.\n\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cp\u003eViktor Mykhailiv provides a comprehensive guide on creating custom tooltips in Jetpack Compose, detailing steps such as overlaying a dimmed background, calculating anchor coordinates, clipping out anchor shapes, and rendering the hint content.  \n\u003c/p\u003e\u003c/div\u003e\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://content.kotzilla.io/koin-ide-plugin-webinar?utm_source=androidweekly\u0026amp;utm_medium=newsletter\u0026amp;utm_campaign=kotzilla_platform_lead_gen_february_2025\u0026amp;utm_content=webinar_registration\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/67baf2/c13c93bc225a00084c/square_kotzilla.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003cdiv\u003e\u003cp\u003eJoin Arnaud  \u0026amp; Miguel for a technical webinar exploring the new Koin Plugin for IntelliJ \u0026amp; Android Studio. Learn how it detects dependency issues directly in your IDE, highlights potential app issues, and integrates with the Kotzilla Console for advanced debugging and root-cause analysis.\n\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp\u003eTim Malseed recommends centralizing Gradle plugin declarations in the top-level build.gradle to ensure consistency and avoid dependency issues in multi-module projects.\n\u003c/p\u003e\u003c/div\u003e\n\n\n\n\n\n\u003cdiv\u003e\u003cp\u003eMarcello Galhardo introduces ViewModelScenario, a helper in Lifecycle 2.9.0-alpha01 that simplifies unit testing of ViewModels by facilitating the testing of onCleared() and state restoration.\n\u003c/p\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cp\u003eJake Wharton announces the deprecation of two idling condition testing libraries, expressing concerns that idling resources expose application internals to testing frameworks, leading to brittle tests.\n\u003c/p\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cp\u003eSina Samaki shares strategies for efficient color prototyping in Jetpack Compose, implementing a dark-light color chooser using an infix extension function, and utilizing Android Studio‚Äôs preview feature for rapid iteration.\n\u003c/p\u003e\u003c/div\u003e\n\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://androidweekly.net/jobs/new\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/67baf2/903c93bc225a00083c/square_aw.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cp\u003eA custom lightweight component that displays a Lucky Wheel developed with Kotlin and Jetpack Compose. Features easy customize of colors, text, icon, arrow, animation, rotation and addition of items and it\u0026#39;s very easy to integrate in your application. \n\u003c/p\u003e\u003c/div\u003e\n\n\n\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://www.youtube.com/watch?v=42WGGS2EDZQ\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/67ba8a/aa3c93bc0761017e8a/square_Bildschirmfoto_2025-02-23_um_11.07.30.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cp\u003eDive into the programming paradigm of Data Oriented Programming (DOP) and why making data the star can simplify your code.\n\u003c/p\u003e\u003c/div\u003e\n\n\n\n\n\n\n]]\u0026gt;\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": null,
  "modifiedTime": null
}
