{
  "id": "7f6a9c94-edef-43ee-821d-6fe2862f5d90",
  "title": "254 - 8× faster 5× memory savings with Dan Rusu’s Immutable Arrays",
  "link": "https://fragmentedpodcast.com/episodes/254",
  "description": "In this episode, discover how Dan Rusu’s pods4k Immutable Arrays library can deliver 2–8× speed boosts and 5× lower memory usage in Kotlin/Android apps. We first revisit the fundamentals of autoboxing/unboxing and immutability to understand their impact on performance. Then we hear from Dan himself on his library, motiviations for building it, how the benchmarks were calculated and much much more. Our grand finale episode for 2024. Hope you enjoy it!Full Shownotes at https://fragmentedpodcast.com/episodes/254.Show NotesImmutable Arrays on githubImmutability episode #66 on Immutability with Ryan HarterJMH - Java Microbenchmark HarnessImmutable Arrays Benchmarks page for Immutable Arrays (pods4k)Dan's post - Kotlin avoids entire categories of Java defectsK2 compilerDan RusuWebsitepods4k github discussionsContact usfragmentedpodcast.comContact usYoutubeKaushik:kau.sh (links to everything)ThreadsBlueskyYoutube@kaushikgopalDisclaimer: Links shared might be affiliate links. They help support the production of Fragmented. Thank you for your support.",
  "author": "Dan Rusu, Kaushik Gopal",
  "published": "Tue, 24 Dec 2024 09:00:00 +0000",
  "source": "https://feeds.simplecast.com/LpAGSLnY",
  "categories": [
    "mutable-array",
    " kotlin",
    " pods4k",
    " immutable-arrays",
    " data-structures",
    " immutability",
    " dan-rusu"
  ],
  "byline": "",
  "length": 1157,
  "excerpt": "Download directly In this episode, discover how Dan Rusu’s pods4k Immutable Arrays library can deliver 2–8× speed boosts and 5× lower memory usage in Kotlin/Android apps. We first revisit the fundamentals of autoboxing/unboxing and immutability to understand their impact on performance. Then we hear from Dan himself on his library, motiviations for building it, how the benchmarks were calculated and much much more. Our grand finale episode for 2024. Hope you enjoy it! Full Shownotes at https://fragmentedpodcast.com/episodes/254.",
  "siteName": "",
  "favicon": "https://fragmentedpodcast.com/images/favicon.png",
  "text": "Download directly In this episode, discover how Dan Rusu’s pods4k Immutable Arrays library can deliver 2–8× speed boosts and 5× lower memory usage in Kotlin/Android apps. We first revisit the fundamentals of autoboxing/unboxing and immutability to understand their impact on performance. Then we hear from Dan himself on his library, motiviations for building it, how the benchmarks were calculated and much much more. Our grand finale episode for 2024. Hope you enjoy it! Full Shownotes at https://fragmentedpodcast.com/episodes/254. Show Notes Immutable Arrays on github Immutability episode #66 on Immutability with Ryan Harter JMH - Java Microbenchmark Harness Immutable Arrays Benchmarks page for Immutable Arrays (pods4k) Dan’s post - Kotlin avoids entire categories of Java defects K2 compiler Dan Rusu Website pods4k github discussions fragmentedpodcast.com Contact us Youtube Kaushik: kau.sh (links to everything) Threads Bluesky Youtube @kaushikgopal Discuss on Bluesky, Reddit r/androiddev r/kotlin, Youtube. Disclaimer: Links shared might be affiliate links. They help support the production of Fragmented. Thank you for your support.",
  "image": "http://fragmentedpodcast.com/images/branding/banner-3000x1000-dark.webp",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003csection\u003e\n\n    \n\n    \n    \u003carticle\u003e\n        \n\u003cp\u003e\n    \u003ca href=\"https://cdn.simplecast.com/audio/20f35050-e836-44cd-8f7f-fd13e8cb2e44/episodes/a7ad9258-e0f2-4aa6-9db4-a4f7169917d0/audio/9d96d8bd-e37b-429e-b81d-a388b4615c3d/default_tc.mp3\"\u003eDownload directly\u003c/a\u003e\n\u003c/p\u003e\n\u003cp\u003eIn this episode, discover how Dan Rusu’s pods4k Immutable Arrays library can deliver 2–8× speed boosts and 5× lower memory usage in Kotlin/Android apps. We first revisit the fundamentals of autoboxing/unboxing and immutability to understand their impact on performance. Then we hear from Dan himself on his library, motiviations for building it, how the benchmarks were calculated and much much more. Our grand finale episode for 2024. Hope you enjoy it!\u003c/p\u003e\n\u003cp\u003eFull Shownotes at \u003ca href=\"https://fragmentedpodcast.com/episodes/254\"\u003ehttps://fragmentedpodcast.com/episodes/254\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"show-notes\"\u003eShow Notes\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/daniel-rusu/pods4k/tree/main/immutable-arrays\"\u003eImmutable Arrays on github\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://fragmentedpodcast.com/episodes/66/\"\u003eImmutability episode #66\u003c/a\u003e on Immutability with Ryan Harter\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://jenkov.com/tutorials/java-performance/jmh.html\"\u003eJMH\u003c/a\u003e - Java Microbenchmark Harness\u003c/li\u003e\n\u003cli\u003eImmutable Arrays \u003ca href=\"https://github.com/daniel-rusu/pods4k/blob/main/immutable-arrays/BENCHMARKS.md\"\u003eBenchmarks page\u003c/a\u003e for Immutable Arrays (pods4k)\u003c/li\u003e\n\u003cli\u003eDan’s post - \u003ca href=\"https://proandroiddev.com/kotlin-avoids-entire-categories-of-java-defects-89f160ba4671\"\u003eKotlin avoids entire categories of Java defects\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://kotlinlang.org/docs/k2-compiler-migration-guide.html\"\u003eK2 compiler\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDan Rusu\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://danrusu.com/\"\u003eWebsite\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/daniel-rusu/pods4k/discussions\"\u003epods4k github discussions\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://fragmentedpodcast.com\"\u003efragmentedpodcast.com\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://fragmentedpodcast.com/contact\"\u003eContact us\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/@fragmentedpodcast\"\u003eYoutube\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"kaushik\"\u003eKaushik:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://kau.sh/contact\"\u003ekau.sh\u003c/a\u003e (links to everything)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://threads.kau.sh\"\u003eThreads\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://bluesky.kau.sh\"\u003eBluesky\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://youtube.kau.sh\"\u003eYoutube\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://twitter.kau.sh\"\u003e@kaushikgopal\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eDiscuss on \u003ca href=\"https://bsky.app/profile/fragmentedpodcast.com/post/3le26qnlg5l2i\"\u003eBluesky\u003c/a\u003e, \u003ca href=\"https://www.reddit.com/r/androiddev/comments/1hlkulw/8_faster_5_memory_savings_with_dan_rusus/\"\u003eReddit r/androiddev\u003c/a\u003e \u003ca href=\"https://www.reddit.com/r/Kotlin/comments/1hlbge9/8_faster_5_memory_savings_with_dan_rusus/\"\u003er/kotlin\u003c/a\u003e, \u003ca href=\"https://youtu.be/aRkZAlBJTcA\"\u003eYoutube\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eDisclaimer: Links shared might be affiliate links. They help support the production of Fragmented. Thank you for your support.\u003c/em\u003e\u003c/p\u003e\n    \u003c/article\u003e\n\n\u003c/section\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": null,
  "modifiedTime": null
}
