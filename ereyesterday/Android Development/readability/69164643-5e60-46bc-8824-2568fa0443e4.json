{
  "id": "69164643-5e60-46bc-8824-2568fa0443e4",
  "title": "Android Studio Meerkat Feature Drop is stable",
  "link": "http://android-developers.googleblog.com/2025/05/android-studio-meerkat-feature-drop-is-stable.html",
  "description": "",
  "author": "Android Developers",
  "published": "2025-05-06T10:15:00.000-07:00",
  "source": "http://feeds.feedburner.com/blogspot/hsDu",
  "categories": [
    "#APK",
    "#releases",
    "#Studio",
    "Android",
    "Android Development",
    "Android Studio",
    "Gemini",
    "Jetpack Compose",
    "KMP",
    "Kotlin Multiplatform"
  ],
  "byline": "",
  "length": 9009,
  "excerpt": "Download the Android Studio Meerkat Feature Drop (2024.3.2) with key features like Gemini Prompt Library, improved KMP integration, and more.",
  "siteName": "Android Developers Blog",
  "favicon": "",
  "text": "Posted by Adarsh Fernando, Group Product Manager Today, we're excited to announce the stable release of Android Studio Meerkat Feature Drop (2024.3.2)! This release brings a host of new features and improvements designed to boost your productivity and enhance your development workflow. With numerous enhancements, this latest release helps you build high-quality Android apps faster and more efficiently: streamlined Jetpack Compose previews, new Gemini capabilities, better Kotlin Multiplatform (KMP) integration, improved device management, and more. Read on to learn about the key updates in Android Studio Meerkat Feature Drop, and download the latest stable version today to explore them yourself! Developer Productivity Enhancements Analyze Crash Reports with Gemini in Android Studio Debugging production crashes can require you to spend significant time switching contexts between your crash reporting tool, such as Firebase Crashlytics and Android Vitals, and investigating root causes in the IDE. Now, when viewing reports in App Quality Insights (AQI), click the Insights tab. Gemini provides a summary of the crash, generates insights, and links to useful documentation. If you also provide Gemini with access to local code context, it can provide more accurate results, relevant next steps, and code suggestions. This helps you reduce the time spent diagnosing and resolving issues. Gemini helps you investigate, understand, and resolve crashes in your app much more quickly in the App Quality Insights tool window. Generate Unit Test Scenarios with Gemini Writing effective unit tests is crucial but can be time-consuming. Gemini now helps kickstart this process by generating relevant test scenarios. Right-click on a class in your editor and select Gemini \u003e Generate Unit Test Scenarios. Gemini analyzes the code and suggests test cases with descriptive names, outlining what to test. While you still implement the specific test logic, this significantly speeds up the initial setup and ensures better test coverage by suggesting scenarios you might have missed. Gemini helps you generate unit test scenarios for your app. Gemini Prompt Library No more retyping your most frequently used prompts for Gemini! The new Prompt Library lets you save prompts directly within Android Studio (Settings \u003e Gemini \u003e Prompt Library). Whether it's a specific code generation pattern, a refactoring instruction, or a debugging query you use often, save it once from the chat (right-click \u003e Save prompt) and re-apply it instantly from the editor (right-click \u003e Gemini \u003e Prompt Library). Prompts that you save can also be shared and standardized across your team. The prompt library saves your frequently used Gemini prompts to make them easier to use. You have the option to store prompts on IDE level or Project level: IDE level prompts are private and can be used across multiple projects. Project level prompts can be shared across teams working on the same project (if .idea folder is added to VCS). Compose and UI Development Themed Icon Support Preview Ensure your app's branding looks great with Android’s themed icons. Android Studio now lets you preview how your existing launcher icon adapts to the monochromatic theming algorithm directly within the IDE. This quick visual check helps you identify potential contrast issues or undesirable shapes early in the workflow, even before you provide a dedicated monochromatic drawable. This allows for faster iteration on your app's visual identity. Themed icon support in Preview helps you visually check how your existing launcher icon adapts to monochromatic theming. Compose Preview Enhancements Iterating on your Compose UI is now faster and better organized: Enhanced Zoom: Navigate complex layouts more easily with smoother, more responsive zooming in your Compose previews. Collapsible Groups: Tidy up your preview surface by collapsing groups of related composables under their @Preview annotation names, letting you focus on specific parts of the UI without clutter. Grid Mode by Default: Grid mode is now the default for a clear overview. Gallery mode (for flipping through individual previews) is available via right-click, while List view has been removed to streamline the experience. Compose previews render more smoothly and make it easier to hide previews you’re not focused on. Build and Deploy KMP Shared Module Integration Android Studio now streamlines adding shared logic to your Android app with the new Kotlin Multiplatform Shared Module template. This provides a dedicated starting point within your Android project, making it easier to structure and build shared business logic for both Android and iOS directly from Android Studio. The new Kotlin Multiplatform module template makes it easier to add shared business logic to your existing app. Updated UX for Adding Devices Spend less time configuring test devices. The new Device Manager UX for adding virtual and remote devices makes it much easier to configure the devices you want from the Device Manager. To get started, click the ‘+’ action at the top of the window and select one of these options: Create Virtual Device: New filters, recommendations, and creation flow guide you towards creating AVDs that are best suited for your intended purpose and your machine's performance. Add Remote Devices: With Android Device Streaming, powered by Firebase, you can connect and debug your app with a variety of real physical devices. With a new catalog view and filters, it's now easier to locate and start using the device you need in just a few clicks. It’s now easier to configure virtual devices that are optimized for your workstation. Google Play Deprecated SDK Warnings Stay more informed about SDKs you publish with your app. Android Studio now displays warnings from the Google Play SDK Index when an SDK used in your app has been deprecated by its author. These warnings include information about suggested alternative SDKs, helping you proactively manage dependencies and avoid potential issues related to outdated or insecure libraries. Play deprecated SDK warnings help you avoid potential issues related to outdated or insecure libraries. Updated Build Menu and Actions We've refined the Build menu for a more intuitive experience: New 'Build run-configuration-name' Action: Builds the currently selected run configuration (e.g., :app or a specific test). This is now the default action for the toolbar button and Control/Command+F9. Reordered Actions: The new build action is prioritized at the top, followed by Compile and Assemble actions. Clearer Naming: \"Rebuild Project\" is now \"Clean and Assemble Project with Tests\". \"Make Project\" is renamed to \"Assemble Project\", and a new \"Assemble Project with Tests\" action is available. The Build menu includes behavior and naming changes to simplify and streamline the experience. Standardized Config Directories Switching between Stable, Beta, and Canary versions of Android Studio is now smoother. Configuration directories are standardized, removing the \"Preview\" suffix for non-stable builds. We've also added the micro version (e.g., AndroidStudio2024.3.2) to the path, allowing different feature drops to run side-by-side without conflicts. This simplifies managing your IDE settings, especially if you work with multiple Android Studio installations. IntelliJ platform update Android Studio Meerkat Feature Drop (2024.3.2) includes the IntelliJ 2024.3 platform release, which has many new features such as a feature complete K2 mode, more reliable Java** and Kotlin code inspections, grammar checks during indexing, debugger improvements, speed and quality of life improvements to Terminal, and more. For more information, read the full IntelliJ 2024.3 release notes. Summary Android Studio Meerkat Feature Drop (2024.3.2) delivers these key features and enhancements: Developer Productivity: Analyze Crash Reports with Gemini Generate Unit Test Scenarios with Gemini Gemini Prompt Library Compose and UI: Themed Icon Preview Compose Preview Enhancements (Zoom, Collapsible Groups, View Modes) Build and Deploy: KMP Shared Module Template Updated UX for Adding Devices Google Play SDK Insights: Deprecated SDK Warnings Updated Build Menu \u0026 Actions Standardized Config Directories IntelliJ Platform Update Feature complete K2 mode Improved Kotlin and Java** inspection reliability Debugger improvements Speed and quality of life improvements in Terminal Getting Started Ready to elevate your Android development? Download Android Studio Meerkat Feature Drop and start using these powerful new features today! As always, your feedback is crucial. Check known issues, report bugs, suggest improvements, and connect with the community on LinkedIn, Medium, YouTube, or X. Let's continue building amazing Android apps together! **Java is a trademark or registered trademark of Oracle and/or its affiliates.",
  "image": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjMvVd0ki5AZKMdn2stU4L6aXO8m1wvVDi1Jit-l_Qk_ibT6H8CcCaEOZhRNj0fRrpaOZ1USYQZyxDPR1038vnKohSzfhm5pKSghaMOyv_A-etCojbASl2fNqfslHhWN03Zrv5zjTz_aUq415lz4riXCB1FkQTQubLG5Bj1XM6Wp4zadygoIT41YngXRQE/w1200-h630-p-k-no-nu/image3.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\u003cmeta content=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjMvVd0ki5AZKMdn2stU4L6aXO8m1wvVDi1Jit-l_Qk_ibT6H8CcCaEOZhRNj0fRrpaOZ1USYQZyxDPR1038vnKohSzfhm5pKSghaMOyv_A-etCojbASl2fNqfslHhWN03Zrv5zjTz_aUq415lz4riXCB1FkQTQubLG5Bj1XM6Wp4zadygoIT41YngXRQE/s1600/image3.png\" name=\"twitter:image\"/\u003e\n\u003cp\u003e\n\n\u003cem\u003ePosted by \u003cauthor\u003eAdarsh Fernando, Group Product Manager\u003c/author\u003e\u003c/em\u003e\n\n\u003ca href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjMvVd0ki5AZKMdn2stU4L6aXO8m1wvVDi1Jit-l_Qk_ibT6H8CcCaEOZhRNj0fRrpaOZ1USYQZyxDPR1038vnKohSzfhm5pKSghaMOyv_A-etCojbASl2fNqfslHhWN03Zrv5zjTz_aUq415lz4riXCB1FkQTQubLG5Bj1XM6Wp4zadygoIT41YngXRQE/s1600/image3.png\"\u003e\u003cimg data-original-height=\"800\" data-original-width=\"100%\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjMvVd0ki5AZKMdn2stU4L6aXO8m1wvVDi1Jit-l_Qk_ibT6H8CcCaEOZhRNj0fRrpaOZ1USYQZyxDPR1038vnKohSzfhm5pKSghaMOyv_A-etCojbASl2fNqfslHhWN03Zrv5zjTz_aUq415lz4riXCB1FkQTQubLG5Bj1XM6Wp4zadygoIT41YngXRQE/s1600/image3.png\"/\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003eToday, we\u0026#39;re excited to announce the stable release of \u003cb\u003eAndroid Studio Meerkat Feature Drop (2024.3.2)\u003c/b\u003e!\u003c/p\u003e\n\n\u003cp\u003eThis release brings a host of new features and improvements designed to boost your productivity and enhance your development workflow. With numerous enhancements, this latest release helps you build high-quality Android apps faster and more efficiently: streamlined Jetpack Compose previews, new Gemini capabilities, better Kotlin Multiplatform (KMP) integration, improved device management, and more.\n\n\u003c/p\u003e\u003cp\u003eRead on to learn about the key updates in Android Studio Meerkat Feature Drop, and \u003ca href=\"https://developer.android.com/studio\" target=\"_blank\"\u003edownload\u003c/a\u003e the latest stable version today to explore them yourself!\u003c/p\u003e\n\n\u003ch2\u003e\u003cspan\u003eDeveloper Productivity Enhancements\u003c/span\u003e\u003c/h2\u003e\n\n\u003ch3\u003e\u003cspan\u003eAnalyze Crash Reports with Gemini in Android Studio\u003c/span\u003e\u003c/h3\u003e\n\n\u003cp\u003eDebugging production crashes can require you to spend significant time switching contexts between your crash reporting tool, such as Firebase Crashlytics and Android Vitals, and investigating root causes in the IDE. Now, when viewing reports in App Quality Insights (AQI), click the \u003cb\u003eInsights\u003c/b\u003e tab. Gemini provides a summary of the crash, generates insights, and links to useful documentation. If you also provide Gemini with access to local code context, it can provide more accurate results, relevant next steps, and code suggestions. This helps you reduce the time spent diagnosing and resolving issues.\u003c/p\u003e\n\n\n\u003cp\u003e\u003cimg alt=\"moving image of Gemini in the App Quality Insights tool window in Android Studio\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh2egh1tCFKbcl3dInOil3q03kOdOINp4IFHiXulUueV4wqLfGcGu2ld2clSIfte6TbNtgQq2tis-XXt3_r5bgRyf4EwngCTBOS44psHuVrqcPYGB1LcRphX-RnBj1kNJhOhFMTo8YMuylR34eFLfnQZl4n6hTzBIcAarDN9NB2QCmKAX5_VJP0tDBFGLA/s16000/aqi-insights-blog.gif\"/\u003e\u003c/p\u003e\u003cimgcaption\u003e\u003ccenter\u003e\u003cem\u003eGemini helps you investigate, understand, and resolve crashes in your app much more quickly in the App Quality Insights tool window.\u003c/em\u003e\u003c/center\u003e\u003c/imgcaption\u003e\u003cbr/\u003e\n\n\n\u003ch3\u003e\u003cspan\u003eGenerate Unit Test Scenarios with Gemini\u003c/span\u003e\u003c/h3\u003e\n\n\u003cp\u003eWriting effective unit tests is crucial but can be time-consuming. Gemini now helps kickstart this process by generating relevant test scenarios. Right-click on a class in your editor and select \u003cspan\u003eGemini \u0026gt; Generate Unit Test Scenarios\u003c/span\u003e. Gemini analyzes the code and suggests test cases with descriptive names, outlining what to test. While you still implement the specific test logic, this significantly speeds up the initial setup and ensures better test coverage by suggesting scenarios you might have missed.\u003c/p\u003e\n\n\n\u003cp\u003e\u003cimg alt=\"moving image of generating unit test scenarios in Android Studio\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgVufzjFSNoHOOGJPLmu9qJcEy_5Al8EqBZUq_gMaUa4fpQJ-ds6cbw79_jylVNIAxlO4x53Ss8JgLMx5sokTlf6wzNyRYoI2wRTBoH0NVVw_-_UCHaacPrJWAnU8uO85RZSlydSmMJD4xIJ3Kh-yb6mTy5iQ-dOg29TUBhrHpFFVQZw-2T8gkAVemyCYQ/s16000/generate-unit-test.gif\"/\u003e\u003c/p\u003e\u003cimgcaption\u003e\u003ccenter\u003e\u003cem\u003eGemini helps you generate unit test scenarios for your app.\n\u003c/em\u003e\u003c/center\u003e\u003c/imgcaption\u003e\u003cbr/\u003e\n\n\n\u003ch3\u003e\u003cspan\u003eGemini Prompt Library\u003c/span\u003e\u003c/h3\u003e\n\n\u003cp\u003eNo more retyping your most frequently used prompts for Gemini! The new \u003cb\u003ePrompt Library\u003c/b\u003e lets you save prompts directly within Android Studio (\u003cspan\u003eSettings \u0026gt; Gemini \u0026gt; Prompt Library\u003c/span\u003e). Whether it\u0026#39;s a specific code generation pattern, a refactoring instruction, or a debugging query you use often, save it once from the chat (right-click \u003cspan\u003e \u0026gt; Save prompt\u003c/span\u003e) and re-apply it instantly from the editor (right-click \u003cspan\u003e\u0026gt; Gemini \u0026gt; Prompt Library\u003c/span\u003e). Prompts that you save can also be shared and standardized across your team.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"moving image of prompt library in Android Studio\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhqhR47fsp5evXRDrqgWOFaUTM95GOWrHiV99xpcXXbLWjjzxqlyvVVNtG4vGox1RepadTuF2tUj4NWrQ9HjE7HW4qYTE0kPuOrdEhYsXF5GLFoqYhsgEyy_ZyviHrf3PJh02Fxlieyr-LwmVDq95FN4axukIO7G-EnL66d4TZ8YtVW2WkoiMEmQsWOEpM/s16000/prompt-library-blog.gif\"/\u003e\u003c/p\u003e\u003cimgcaption\u003e\u003ccenter\u003e\u003cem\u003eThe prompt library saves your frequently used Gemini prompts to make them easier to use.\n\u003c/em\u003e\u003c/center\u003e\u003c/imgcaption\u003e\n\n\u003cp\u003eYou have the option to store prompts on IDE level or Project level:\u003c/p\u003e\n\u003cul\u003e\u003cul\u003e\n\u003cli\u003eIDE level prompts are private and can be used across multiple projects.\u003c/li\u003e\n\u003cli\u003eProject level prompts can be shared across teams working on the same project (if .idea folder is added to VCS).\u003c/li\u003e\n\u003c/ul\u003e\u003c/ul\u003e\n  \n\u003ch2\u003e\u003cspan\u003eCompose and UI Development\u003c/span\u003e\u003c/h2\u003e\n\n\u003ch3\u003e\u003cspan\u003eThemed Icon Support Preview\u003c/span\u003e\u003c/h3\u003e\n\n\u003cp\u003eEnsure your app\u0026#39;s branding looks great with Android’s \u003ca href=\"https://developer.android.com/about/versions/13/features#themed-app-icons\" target=\"_blank\"\u003ethemed icons\u003c/a\u003e. Android Studio now lets you \u003cb\u003epreview how your existing launcher icon adapts\u003c/b\u003e to the monochromatic theming algorithm directly within the IDE. This quick visual check helps you identify potential contrast issues or undesirable shapes early in the workflow, even before you provide a dedicated monochromatic drawable. This allows for faster iteration on your app\u0026#39;s visual identity.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"moving image of themed icon support in preview in Android Studio\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi2EKjhd3_uC6lh4Uca8gv8aFj-qaNZLI1MM3Ggn6XtCGIh5u_0_Q6ST4K61LTQeUfT5CymgyKIbZQh5dq__dBB5M-kUj14j0NXSs5S0iIrJX8JNK7MnGgi_wrStZwPlsB6BUvK892-x5aUyWuWTxM4VyonoWsrBmV5Xrq2340t825uvc66Og9iHTOhGsY/s16000/themed-icon-support-in-preview.gif\"/\u003e\u003c/p\u003e\u003cimgcaption\u003e\u003ccenter\u003e\u003cem\u003eThemed icon support in Preview helps you visually check how your existing launcher icon adapts to monochromatic theming.\u003c/em\u003e\u003c/center\u003e\u003c/imgcaption\u003e\u003cbr/\u003e\n\n\u003ch3\u003e\u003cspan\u003eCompose Preview Enhancements\u003c/span\u003e\u003c/h3\u003e\n\n\u003cp\u003eIterating on your Compose UI is now faster and better organized:\u003c/p\u003e\n\u003cul\u003e\u003cul\u003e\n\u003cli\u003e\u003cb\u003eEnhanced Zoom:\u003c/b\u003e Navigate complex layouts more easily with smoother, more responsive zooming in your Compose previews.\u003c/li\u003e\n\u003cli\u003e\u003cb\u003eCollapsible Groups:\u003c/b\u003e Tidy up your preview surface by collapsing groups of related composables under their \u003cspan\u003e@Preview\u003c/span\u003e annotation names, letting you focus on specific parts of the UI without clutter.\u003c/li\u003e\n\u003cli\u003e\u003cb\u003eGrid Mode by Default:\u003c/b\u003e Grid mode is now the default for a clear overview. Gallery mode (for flipping through individual previews) is available via right-click, while List view has been removed to streamline the experience.\u003c/li\u003e\n\u003c/ul\u003e\u003c/ul\u003e\n\n\n\u003cp\u003e\u003cimg alt=\"moving image of Compose previews in Android Studio\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh9e1QqbAVktSeSsXTYv79DbghmYOmksndUGPPQh536rhFYYl91QHb93BpuA4Hx2fSr3g4bYZ-l7neUfzsai9sDtYJPsVFHN3E5RjH7UWrtOmqtMifE14rQT-ks0jFSWqf34-S8mxP_dLsyJjihUX01ReXBW4zAEZTr0c2FIPB0OeMo1HjUDvnu3TRev_E/s16000/compose-previews-blog.gif\"/\u003e\u003c/p\u003e\u003cimgcaption\u003e\u003ccenter\u003e\u003cem\u003eCompose previews render more smoothly and make it easier to hide previews you’re not focused on.\u003c/em\u003e\u003c/center\u003e\u003c/imgcaption\u003e\u003cbr/\u003e\n\n\u003ch2\u003e\u003cspan\u003eBuild and Deploy\u003c/span\u003e\u003c/h2\u003e\n\n\u003ch3\u003e\u003cspan\u003eKMP Shared Module Integration\u003c/span\u003e\u003c/h3\u003e\n\n\u003cp\u003eAndroid Studio now streamlines adding shared logic to your Android app with the new \u003cb\u003eKotlin Multiplatform Shared Module\u003c/b\u003e template. This provides a dedicated starting point within your Android project, making it easier to structure and build shared business logic for both Android and iOS directly from Android Studio.\u003c/p\u003e\n\n\n\u003cp\u003e\u003cimg alt=\"Kotlin Multiplatform template in Android Studio\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh7quODtI4vvt1SEu1yh7FORhLgRjczn8H6A7EztoH72QyyFhXdUUXyvcihJjSWAeOaaeDqfZfVBaXdLfyvwHfK2MITWs6Vf1S0LwA-th2whCmzLlnGA3xLI4JqIAxPgdyDzCZMNtwuyDGWNte9ug3F08qz-rXa_8cfn5kASebxdQstWLiCqOCLER7Gd_w/s16000/kmp-template.png\"/\u003e\u003c/p\u003e\u003cimgcaption\u003e\u003ccenter\u003e\u003cem\u003eThe new Kotlin Multiplatform module template makes it easier to add shared business logic to your existing app.\u003c/em\u003e\u003c/center\u003e\u003c/imgcaption\u003e\u003cbr/\u003e\n\n\u003ch3\u003e\u003cspan\u003eUpdated UX for Adding Devices\u003c/span\u003e\u003c/h3\u003e\n\n\u003cp\u003eSpend less time configuring test devices. The new Device Manager UX for adding virtual and remote devices makes it much easier to configure the devices you want from the \u003cb\u003eDevice Manager\u003c/b\u003e. To get started, click the ‘+’ action at the top of the window and select one of these options:\u003c/p\u003e\n\u003cul\u003e\u003cul\u003e\n\u003cli\u003e\u003cb\u003eCreate Virtual Device:\u003c/b\u003e New filters, recommendations, and creation flow guide you towards creating AVDs that are best suited for your intended purpose and your machine\u0026#39;s performance.\u003c/li\u003e\n\u003cli\u003e\u003cb\u003eAdd Remote Devices:\u003c/b\u003e With Android Device Streaming, powered by Firebase, you can connect and debug your app with a variety of real physical devices. With a new catalog view and filters, it\u0026#39;s now easier to locate and start using the device you need in just a few clicks.\u003c/li\u003e\n\u003c/ul\u003e\u003c/ul\u003e\n\n\u003cp\u003e\u003cimg alt=\"moving image of configuring virtual devices in Android Studio\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgfJ_sjwIpD5qB9RoOtFGvxKCW2wUPHnB9oexMEZOLbQTXZcJnwa99lZGQFhyphenhyphenRnW6R5B6XGwXRtvfsIK3ERqk55gBEuZ6iUI1oX2eaqnwV1_U8w2M2ThSJdhe7Wp1EI2Pyq6Wv3bwfU3RROPuTEEc9R7p9mOU6L_YQHqjxQXbLRVbLvqZenjjPyNER-mYk/s16000/configure-avd-blog.gif\"/\u003e\u003c/p\u003e\u003cimgcaption\u003e\u003ccenter\u003e\u003cem\u003eIt’s now easier to configure virtual devices that are optimized for your workstation.\u003c/em\u003e\u003c/center\u003e\u003c/imgcaption\u003e\u003cbr/\u003e\n\n\u003ch3\u003e\u003cspan\u003eGoogle Play Deprecated SDK Warnings\u003c/span\u003e\u003c/h3\u003e\n\n\u003cp\u003eStay more informed about SDKs you publish with your app. Android Studio now displays warnings from the Google Play SDK Index when an SDK used in your app has been deprecated by its author. These warnings include information about suggested alternative SDKs, helping you proactively manage dependencies and avoid potential issues related to outdated or insecure libraries.\u003c/p\u003e\n\n\u003cp\u003e\u003cspan\u003e\u003cimg alt=\"Google Play Deprecated SDK warnings in Android Studio\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj3cHA-kd7-Gjjtbo2CH4m3oScKeRvwSHIiqBodONyuZGJV8odSiq3CIU6HjXnKdPT9selTxcsNmU8GTabqdawLqj0PA7dpwZsmjEslhTPq94M67xWwoNN5Fu_5D-XcN5BTc-_Wt_SHeaydVloFLYVPEotFzd7TsoVtttuXvu8SpUuYoYLN6Ed-YS4_r90/s16000/play-deprecated-sdk-warnings.png\"/\u003e\u003c/span\u003e\u003c/p\u003e\u003cimgcaption\u003e\u003ccenter\u003e\u003cem\u003ePlay deprecated SDK warnings help you avoid potential issues related to outdated or insecure libraries.\n\u003c/em\u003e\u003c/center\u003e\u003c/imgcaption\u003e\u003cbr/\u003e\n\n\u003ch3\u003e\u003cspan\u003eUpdated Build Menu and Actions\u003c/span\u003e\u003c/h3\u003e\n\n\u003cp\u003eWe\u0026#39;ve refined the Build menu for a more intuitive experience:\u003c/p\u003e\n\u003cul\u003e\u003cul\u003e\n\u003cli\u003e\u003cb\u003eNew \u0026#39;Build run-configuration-name\u0026#39; Action:\u003c/b\u003e Builds the currently selected run configuration (e.g., \u003cspan\u003e:app\u003c/span\u003e or a specific test). This is now the default action for the toolbar button and \u003cspan\u003eControl/Command+F9\u003c/span\u003e.\u003c/li\u003e\n\u003cli\u003e\u003cb\u003eReordered Actions:\u003c/b\u003e The new build action is prioritized at the top, followed by Compile and Assemble actions.\u003c/li\u003e\n\u003cli\u003e\u003cb\u003eClearer Naming:\u003c/b\u003e \u0026#34;Rebuild Project\u0026#34; is now \u0026#34;Clean and Assemble Project with Tests\u0026#34;. \u0026#34;Make Project\u0026#34; is renamed to \u0026#34;Assemble Project\u0026#34;, and a new \u0026#34;Assemble Project with Tests\u0026#34; action is available.\u003c/li\u003e\n\u003c/ul\u003e\u003c/ul\u003e\n\n\u003cp\u003e\u003cimg alt=\"Build menu in Android Studio\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjyK_ht_5HrDtrU2RZ0-owv9L5tX8fV2peVXOFJ3gQpsP9A_q0l0OMv6Uk_xa5FGfnOwIRFifM2hYF1xXJvoIwrWkRhD5d62ZY7ki5PBjreM0Wgtawk9LkWVI6SpGaBS_Jyb4wlpqkWCBCYba9M5q4Yk6WU1e1CAM_CfYmCyYrewmxFE1E7p7jGfE81ioI/s16000/build-menu.png\"/\u003e\u003c/p\u003e\u003cimgcaption\u003e\u003ccenter\u003e\u003cem\u003eThe Build menu includes behavior and naming changes to simplify and streamline the experience.\u003c/em\u003e\u003c/center\u003e\u003c/imgcaption\u003e\u003cbr/\u003e\n\n\u003ch3\u003e\u003cspan\u003eStandardized Config Directories\u003c/span\u003e\u003c/h3\u003e\n\n\u003cp\u003eSwitching between Stable, Beta, and Canary versions of Android Studio is now smoother. Configuration directories are standardized, removing the \u0026#34;Preview\u0026#34; suffix for non-stable builds. We\u0026#39;ve also added the micro version (e.g., \u003cspan\u003eAndroidStudio2024.3.2\u003c/span\u003e) to the path, allowing different feature drops to run side-by-side without conflicts. This simplifies managing your IDE settings, especially if you work with multiple Android Studio installations.\u003c/p\u003e\n\n\u003ch2\u003e\u003cspan\u003eIntelliJ platform update\u003c/span\u003e\u003c/h2\u003e\n\n\u003cp\u003eAndroid Studio Meerkat Feature Drop (2024.3.2) includes the IntelliJ 2024.3 platform release, which has many new features such as a feature complete K2 mode, more reliable Java** and Kotlin code inspections, grammar checks during indexing, debugger improvements, speed and quality of life improvements to Terminal, and more.\u003c/p\u003e\n\n\u003cp\u003eFor more information, read the full \u003ca href=\"https://blog.jetbrains.com/idea/2024/11/intellij-idea-2024-3/\" target=\"_blank\"\u003eIntelliJ 2024.3 release notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\u003cspan\u003e\u003cb\u003eSummary\u003c/b\u003e\u003c/span\u003e\u003c/h2\u003e\n\n\u003cp\u003eAndroid Studio Meerkat Feature Drop (2024.3.2) delivers these key features and enhancements:\u003c/p\u003e\n\u003cul\u003e\u003cul\u003e\n\u003cli\u003e\u003cb\u003eDeveloper Productivity:\u003c/b\u003e\n\u003cul\u003e\u003cul\u003e\n  \u003cli\u003eAnalyze Crash Reports with Gemini\u003c/li\u003e\n  \u003cli\u003eGenerate Unit Test Scenarios with Gemini\u003c/li\u003e\n  \u003cli\u003eGemini Prompt Library\u003c/li\u003e\n\u003c/ul\u003e\u003c/ul\u003e\n\u003c/li\u003e\u003cli\u003e\u003cb\u003eCompose and UI:\u003c/b\u003e\n\u003cul\u003e\u003cul\u003e  \n  \u003cli\u003eThemed Icon Preview\u003c/li\u003e\n  \u003cli\u003eCompose Preview Enhancements (Zoom, Collapsible Groups, View Modes)\u003c/li\u003e\n \u003c/ul\u003e\u003c/ul\u003e\n\u003c/li\u003e\u003cli\u003e\u003cb\u003eBuild and Deploy:\u003c/b\u003e\n\u003cul\u003e\u003cul\u003e\n  \u003cli\u003eKMP Shared Module Template\u003c/li\u003e\n  \u003cli\u003eUpdated UX for Adding Devices\u003c/li\u003e\n  \u003cli\u003eGoogle Play SDK Insights: Deprecated SDK Warnings\u003c/li\u003e\n  \u003cli\u003eUpdated Build Menu \u0026amp; Actions\u003c/li\u003e\n  \u003cli\u003eStandardized Config Directories\u003c/li\u003e\n\u003c/ul\u003e\u003c/ul\u003e\n\u003c/li\u003e\u003cli\u003e\u003cb\u003eIntelliJ Platform Update\u003c/b\u003e\n\u003cul\u003e\u003cul\u003e\n  \u003cli\u003eFeature complete K2 mode\u003c/li\u003e\n  \u003cli\u003eImproved Kotlin and Java\u003csup\u003e**\u003c/sup\u003e inspection reliability\u003c/li\u003e\n  \u003cli\u003eDebugger improvements\u003c/li\u003e\n  \u003cli\u003eSpeed and quality of life improvements in Terminal\u003c/li\u003e\u003c/ul\u003e\u003c/ul\u003e\n\u003c/li\u003e\u003c/ul\u003e\u003c/ul\u003e\n\n\u003ch2\u003e\u003cspan\u003e\u003cb\u003eGetting Started\u003c/b\u003e\u003c/span\u003e\u003c/h2\u003e\n\n\u003cp\u003eReady to elevate your Android development? Download Android Studio Meerkat Feature Drop and start using these powerful new features today!\u003c/p\u003e\n\n\u003cp\u003eAs always, your feedback is crucial. Check \u003ca href=\"https://developer.android.com/studio/known-issues\" target=\"_blank\"\u003eknown issues\u003c/a\u003e, \u003ca href=\"https://developer.android.com/studio/report-bugs\" target=\"_blank\"\u003ereport bugs\u003c/a\u003e, suggest improvements, and connect with the community on \u003ca href=\"https://www.linkedin.com/showcase/androiddev/posts/\" target=\"_blank\"\u003eLinkedIn\u003c/a\u003e, \u003ca href=\"https://medium.com/androiddevelopers\" target=\"_blank\"\u003eMedium\u003c/a\u003e, \u003ca href=\"https://www.youtube.com/c/AndroidDevelopers/videos\" target=\"_blank\"\u003eYouTube\u003c/a\u003e, or \u003ca href=\"https://twitter.com/androidstudio\" target=\"_blank\"\u003eX\u003c/a\u003e. Let\u0026#39;s continue building amazing Android apps together!\u003c/p\u003e\n\n\u003cp\u003e\u003csmall\u003e\u003cem\u003e\u003csup\u003e**\u003c/sup\u003eJava is a trademark or registered trademark of Oracle and/or its affiliates.\u003c/em\u003e\u003c/small\u003e\u003c/p\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "10 min read",
  "publishedTime": null,
  "modifiedTime": null
}
