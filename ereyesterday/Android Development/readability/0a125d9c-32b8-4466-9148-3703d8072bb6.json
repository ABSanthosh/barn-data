{
  "id": "0a125d9c-32b8-4466-9148-3703d8072bb6",
  "title": "SonarQube in Android — Implementation tips and challenges faced",
  "link": "https://proandroiddev.com/sonarqube-in-android-implementation-tips-and-challenges-faced-36d9d973a21f?source=rss----c72404660798---4",
  "description": "",
  "author": "Dilipchandar",
  "published": "Mon, 11 Nov 2024 15:20:25 GMT",
  "source": "https://proandroiddev.com/feed",
  "categories": [
    "software-tools",
    "sonarqube",
    "androiddev",
    "android",
    "android-app-development"
  ],
  "byline": "Dilipchandar",
  "length": 6527,
  "excerpt": "I followed this medium article https://medium.com/@niranjanky14/sonarqube-tutorial-for-getting-started-in-android-app-7d11e2ef6932 while trying to implement SonarQube. Keep Docker Application open in…",
  "siteName": "ProAndroidDev",
  "favicon": "https://miro.medium.com/v2/resize:fill:256:256/1*A8VytPZQhvUf_MG6hm_Dlw.png",
  "text": "Introduction:SonarQube is an open-source tool that helps developers and teams improve the quality of their code:Code quality analysis: Analyzes code quality for over 30 languages, frameworks, and IaC platformsAutomatic reviews: Performs automatic reviews with static analysis of code to detect bugs and code smellsIntegration with DevOps platforms: Integrates with GitHub, GitLab, Azure, and BitbucketReal-time feedback: Provides immediate feedback in your IDE as you write codeQuality gates: Keeps code with issues from being released to productionSteps to implement:I followed this medium article https://medium.com/@niranjanky14/sonarqube-tutorial-for-getting-started-in-android-app-7d11e2ef6932 while trying to implement SonarQube.Step 1: Download SonarQube Free Edition from below linkStep 2: Download and install Docker from below linkStep 3: Open terminal and run the following commanddocker pull sonarqube:latestIf you get an error — Docker command not found, then export its pathexport PATH=\"$PATH:/Applications/Docker.app/Contents/Resources/bin/\"Keep Docker Application open in your system while typing the command docker pull sonarqube:latest, otherwise you may get the following errorCannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?If Step 3 is successful, you will see the followinglatest: Pulling from library/sonarqubea186900671ab: Download complete 4821edbf1831: Download complete 4bec9b5f92ec: Download complete b0c3c08b4553: Download complete 4f4fb700ef54: Download complete 666db0722bb8: Download complete 26811a6e12de: Download complete 6c88cd8dd883: Download complete Digest: sha256:0842dcd4c8f851ce44f8edaf45ac93f7c9079017d60d99f614663e60cef5efe9Status: Downloaded newer image for sonarqube:latestdocker.io/library/sonarqube:latestStep 4: After step 3, enter the following command to pull all the necessary postgres librarydocker run -d --name sonarqube-db -e POSTGRES_USER=sonar -e POSTGRES_PASSWORD=sonar -e POSTGRES_DB=sonarqube postgres:alpineIf Step 4 is successful, you will see the following resultsUnable to find image 'postgres:alpine' locallyalpine: Pulling from library/postgres440196fcba86: Download complete c97ff27562e7: Download complete 2f5a5dbb159e: Download complete e64e42d2e378: Download complete 0a8fa91fd8dd: Download complete 368fad94fbf5: Download complete cf04c63912e1: Download complete 044d9972b6f9: Download complete 1c4b963fa70b: Download complete fc336a10ac24: Download complete Digest: sha256:14195b0729fce792f47ae3c3704d6fd04305826d57af3b01d5b4d004667df174Status: Downloaded newer image for postgres:alpine44c04103a85884090a9cbe479c4dd3c2fa73f4d61c56c35cfaed5c474db52528Step 5: Setup the SonarQube container with a link to PostgresSQL using the following commanddocker run -d --name sonarqube -p 9000:9000 --link sonarqube-db:db -e SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonarqube -e SONAR_JDBC_USERNAME=sonar -e SONAR_JDBC_PASSWORD=sonar sonarqubeOn successful completion of Step 5, you will see a hash value. For me it wasb473d891d6f9e842fe2e7ba72b2b0493640ca44552250e6770d6d9468ad1c956Once SonarQube is up and running, you can access the web interface by opening http://localhost:9000 (or the appropriate IP address if running on a remote server) in your web browser.The default login credentials for the first-time login are admin for both username and password. You'll be prompted to change the password after the initial login.Next, we can see how to configure SonarQube in Android StudioConfiguration:Step 1: In app’s build.gradle, if we add SonarQube Plugin and other details like thisallprojects { apply plugin: 'org.sonarqube' sonar { properties { property \"sonar.host.url\", \"http://localhost:9000\" property \"sonar.test.inclusions\", \"src/test/**\" property 'sonar.profile', 'Android Lint' property \"sonar.sourceEncoding\", \"UTF-8\" property \"sonar.projectName\", \"SonarTestApp\" property \"sonar.projectKey\", \"SonarTestKey\" property \"sonar.projectVersion\", 1.0.0 property \"sonar.login\", \"sqp_123123kj123k123j123kj123j1k23k123jk132j\" } }}we may get the following error Plugin with id ‘org.sonarqube’ not foundSo, we can try this instead (applying plugin outside allprojects and mentioning other details inside allprojects)plugins { id \"org.sonarqube\" version \"4.0.0.2929\"}allprojects { sonar { properties { property \"sonar.host.url\", \"http://localhost:9000\" property \"sonar.test.inclusions\", \"src/test/**\" property 'sonar.profile', 'Android Lint' property \"sonar.sourceEncoding\", \"UTF-8\" property \"sonar.projectName\", \"SonarTestApp\" property \"sonar.projectKey\", \"SonarTestKey\" property \"sonar.projectVersion\", 1.0.0 property \"sonar.login\", \"sqp_123123kj123k123j123kj123j1k23k123jk132j\" } }}In the above code, property “sonar.projectVersion” should match your project’s versionName.Step 2: In gradle.propertiessystemProp.sonar.host.url=http://localhost:9000# (Optional, if not using credentials in build.gradle)systemProp.sonar.login=your_sonar_usernamesystemProp.sonar.password=your_sonar_passwordStep 3: Finally run your sonar analysis for your project using this command in Android Studio Terminal:./gradlew sonarqubeYou may get the following error if JDK is not installed.The operation couldn’t be completed. Unable to locate a Java Runtime.I downloaded suitable JDK Version 17 as my Android Gradle plugin requires Java 17 to run. After installing JDK and typing the same command ./gradlew sonarqube againBuild was getting failed due to an error.Execution failed for task ‘:app:sonarqube’. \u003e Cannot get property ‘0.0’ on null objectSolution? From Step 2, we should replace property “sonar.projectVersion”, 1.0.0 to “sonar.projectVersion”, 1.0 (as my project’s versionName is 1.0) like thisallprojects { sonar { properties { property \"sonar.host.url\", \"http://localhost:9000\" property \"sonar.test.inclusions\", \"src/test/**\" property 'sonar.profile', 'Android Lint' property \"sonar.sourceEncoding\", \"UTF-8\" property \"sonar.projectName\", \"SonarTestApp\" property \"sonar.projectKey\", \"SonarTestKey\" property \"sonar.projectVersion\", 1.0 property \"sonar.login\", \"sqp_123123kj123k123j123kj123j1k23k123jk132j\" } }}After all steps are successful, we will get BUILD SUCCESSFUL message in terminal",
  "image": "https://miro.medium.com/v2/resize:fit:1200/1*Qb_6n_mQxOyOTuuf48s9XQ.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://medium.com/@dilipchandar89?source=post_page---byline--36d9d973a21f--------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Dilipchandar\" src=\"https://miro.medium.com/v2/resize:fill:88:88/1*_ahsRfI76vTCn4JWIGHHGg.jpeg\" width=\"44\" height=\"44\" loading=\"lazy\" data-testid=\"authorPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://proandroiddev.com/?source=post_page---byline--36d9d973a21f--------------------------------\" rel=\"noopener  ugc nofollow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"ProAndroidDev\" src=\"https://miro.medium.com/v2/resize:fill:48:48/1*XVtdl45m8YaYrPI4buJ5yQ.png\" width=\"24\" height=\"24\" loading=\"lazy\" data-testid=\"publicationPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/div\u003e\u003cfigure\u003e\u003c/figure\u003e\u003ch2 id=\"ac9b\"\u003eIntroduction:\u003c/h2\u003e\u003cp id=\"2ec1\"\u003eSonarQube is an open-source tool that helps developers and teams improve the quality of their code:\u003c/p\u003e\u003cul\u003e\u003cli id=\"f0d2\"\u003e\u003cstrong\u003eCode quality analysis\u003c/strong\u003e: Analyzes code quality for over 30 languages, frameworks, and IaC platforms\u003c/li\u003e\u003cli id=\"789f\"\u003e\u003cstrong\u003eAutomatic reviews\u003c/strong\u003e: Performs automatic reviews with static analysis of code to detect bugs and code smells\u003c/li\u003e\u003cli id=\"b4de\"\u003e\u003cstrong\u003eIntegration with DevOps platforms\u003c/strong\u003e: Integrates with GitHub, GitLab, Azure, and Bitbucket\u003c/li\u003e\u003cli id=\"f8b6\"\u003e\u003cstrong\u003eReal-time feedback\u003c/strong\u003e: Provides immediate feedback in your IDE as you write code\u003c/li\u003e\u003cli id=\"fa09\"\u003e\u003cstrong\u003eQuality gates\u003c/strong\u003e: Keeps code with issues from being released to production\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"95c1\"\u003eSteps to implement:\u003c/h2\u003e\u003cp id=\"8d12\"\u003eI followed this medium article \u003ca href=\"https://medium.com/@niranjanky14/sonarqube-tutorial-for-getting-started-in-android-app-7d11e2ef6932\" rel=\"noopener\"\u003e\u003cstrong\u003ehttps://medium.com/@niranjanky14/sonarqube-tutorial-for-getting-started-in-android-app-7d11e2ef6932\u003c/strong\u003e\u003c/a\u003e while trying to implement SonarQube.\u003c/p\u003e\u003cp id=\"71e2\"\u003e\u003cstrong\u003eStep 1:\u003c/strong\u003e Download \u003cstrong\u003eSonarQube Free Edition\u003c/strong\u003e from below link\u003c/p\u003e\u003cp id=\"4f8c\"\u003e\u003cstrong\u003eStep 2: \u003c/strong\u003eDownload and install \u003cstrong\u003eDocker\u003c/strong\u003e from below link\u003c/p\u003e\u003cp id=\"29fd\"\u003e\u003cstrong\u003eStep 3\u003c/strong\u003e: Open terminal and run the following command\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"7950\"\u003edocker pull sonarqube:latest\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"0e47\"\u003eIf you get an error — \u003cstrong\u003eDocker command not found\u003c/strong\u003e, then export its path\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"f9da\"\u003eexport PATH=\u0026#34;$PATH:/Applications/Docker.app/Contents/Resources/bin/\u0026#34;\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"3313\"\u003eKeep Docker Application open in your system while typing the command \u003cstrong\u003edocker pull sonarqube:latest, \u003c/strong\u003eotherwise you may get the following error\u003c/p\u003e\u003cblockquote\u003e\u003cp id=\"cee8\"\u003e\u003cem\u003eCannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?\u003c/em\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003cp id=\"5896\"\u003eIf Step 3 is successful, you will see the following\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"4ec7\"\u003elatest: Pulling from library/sonarqube\u003cbr/\u003ea186900671ab: Download complete \u003cbr/\u003e4821edbf1831: Download complete \u003cbr/\u003e4bec9b5f92ec: Download complete \u003cbr/\u003eb0c3c08b4553: Download complete \u003cbr/\u003e4f4fb700ef54: Download complete \u003cbr/\u003e666db0722bb8: Download complete \u003cbr/\u003e26811a6e12de: Download complete \u003cbr/\u003e6c88cd8dd883: Download complete \u003cbr/\u003eDigest: sha256:0842dcd4c8f851ce44f8edaf45ac93f7c9079017d60d99f614663e60cef5efe9\u003cbr/\u003eStatus: Downloaded newer image for sonarqube:latest\u003cbr/\u003edocker.io/library/sonarqube:latest\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"e3d2\"\u003e\u003cstrong\u003eStep 4:\u003c/strong\u003e After step 3, enter the following command to pull all the necessary postgres library\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"d180\"\u003edocker run -d --name sonarqube-db -e POSTGRES_USER=sonar -e POSTGRES_PASSWORD=sonar -e POSTGRES_DB=sonarqube postgres:alpine\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"c6b0\"\u003eIf Step 4 is successful, you will see the following results\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"4c39\"\u003eUnable to find image \u0026#39;postgres:alpine\u0026#39; locally\u003cbr/\u003ealpine: Pulling from library/postgres\u003cbr/\u003e440196fcba86: Download complete \u003cbr/\u003ec97ff27562e7: Download complete \u003cbr/\u003e2f5a5dbb159e: Download complete \u003cbr/\u003ee64e42d2e378: Download complete \u003cbr/\u003e0a8fa91fd8dd: Download complete \u003cbr/\u003e368fad94fbf5: Download complete \u003cbr/\u003ecf04c63912e1: Download complete \u003cbr/\u003e044d9972b6f9: Download complete \u003cbr/\u003e1c4b963fa70b: Download complete \u003cbr/\u003efc336a10ac24: Download complete \u003cbr/\u003eDigest: sha256:14195b0729fce792f47ae3c3704d6fd04305826d57af3b01d5b4d004667df174\u003cbr/\u003eStatus: Downloaded newer image for postgres:alpine\u003cbr/\u003e44c04103a85884090a9cbe479c4dd3c2fa73f4d61c56c35cfaed5c474db52528\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"e7e5\"\u003e\u003cstrong\u003eStep 5:\u003c/strong\u003e Setup the SonarQube container with a link to PostgresSQL using the following command\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"ade1\"\u003edocker run -d --name sonarqube -p 9000:9000 --link sonarqube-db:db -e SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonarqube -e SONAR_JDBC_USERNAME=sonar -e SONAR_JDBC_PASSWORD=sonar sonarqube\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"1578\"\u003eOn successful completion of Step 5, you will see a \u003cstrong\u003ehash\u003c/strong\u003e value. For me it was\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"55ff\"\u003eb473d891d6f9e842fe2e7ba72b2b0493640ca44552250e6770d6d9468ad1c956\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"021f\"\u003eOnce SonarQube is up and running, you can access the web interface by opening \u003ccode\u003ehttp://localhost:9000\u003c/code\u003e (or the appropriate IP address if running on a remote server) in your web browser.\u003c/p\u003e\u003cp id=\"e37f\"\u003eThe default login credentials for the first-time login are \u003ccode\u003eadmin\u003c/code\u003e for both \u003cstrong\u003eusername and password\u003c/strong\u003e. You\u0026#39;ll be prompted to change the password after the initial login.\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"3e47\"\u003eNext, we can see how to configure SonarQube in Android Studio\u003c/p\u003e\u003ch2 id=\"1640\"\u003eConfiguration:\u003c/h2\u003e\u003cp id=\"ffc3\"\u003e\u003cstrong\u003eStep 1: \u003c/strong\u003eIn app’s build.gradle, if we add SonarQube Plugin and other details like this\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"0bb3\"\u003eallprojects {\u003cbr/\u003e    apply plugin: \u0026#39;org.sonarqube\u0026#39;\u003cbr/\u003e    sonar {\u003cbr/\u003e        properties {\u003cbr/\u003e            property \u0026#34;sonar.host.url\u0026#34;, \u0026#34;http://localhost:9000\u0026#34; \u003cbr/\u003e            property \u0026#34;sonar.test.inclusions\u0026#34;, \u0026#34;src/test/**\u0026#34;\u003cbr/\u003e            property \u0026#39;sonar.profile\u0026#39;, \u0026#39;Android Lint\u0026#39;\u003cbr/\u003e            property \u0026#34;sonar.sourceEncoding\u0026#34;, \u0026#34;UTF-8\u0026#34;\u003cbr/\u003e            property \u0026#34;sonar.projectName\u0026#34;, \u0026#34;SonarTestApp\u0026#34;\u003cbr/\u003e            property \u0026#34;sonar.projectKey\u0026#34;, \u0026#34;SonarTestKey\u0026#34;\u003cbr/\u003e            property \u0026#34;sonar.projectVersion\u0026#34;, 1.0.0\u003cbr/\u003e            property \u0026#34;sonar.login\u0026#34;, \u0026#34;sqp_123123kj123k123j123kj123j1k23k123jk132j\u0026#34;\u003cbr/\u003e        }\u003cbr/\u003e    }\u003cbr/\u003e}\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"cbb2\"\u003ewe may get the following error \u003cstrong\u003ePlugin with id ‘org.sonarqube’ not found\u003c/strong\u003e\u003c/p\u003e\u003cp id=\"5d88\"\u003eSo, we can try this instead (applying plugin outside allprojects and mentioning other details inside allprojects)\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"38a1\"\u003eplugins {\u003cbr/\u003e    id \u0026#34;org.sonarqube\u0026#34; version \u0026#34;4.0.0.2929\u0026#34;\u003cbr/\u003e}\u003c/span\u003e\u003c/pre\u003e\u003cpre\u003e\u003cspan id=\"be4f\"\u003eallprojects {\u003cbr/\u003e    sonar {\u003cbr/\u003e        properties {\u003cbr/\u003e            property \u0026#34;sonar.host.url\u0026#34;, \u0026#34;http://localhost:9000\u0026#34;\u003cbr/\u003e            property \u0026#34;sonar.test.inclusions\u0026#34;, \u0026#34;src/test/**\u0026#34;\u003cbr/\u003e            property \u0026#39;sonar.profile\u0026#39;, \u0026#39;Android Lint\u0026#39;\u003cbr/\u003e            property \u0026#34;sonar.sourceEncoding\u0026#34;, \u0026#34;UTF-8\u0026#34;\u003cbr/\u003e            property \u0026#34;sonar.projectName\u0026#34;, \u0026#34;SonarTestApp\u0026#34;\u003cbr/\u003e            property \u0026#34;sonar.projectKey\u0026#34;, \u0026#34;SonarTestKey\u0026#34;\u003cbr/\u003e            property \u0026#34;sonar.projectVersion\u0026#34;, 1.0.0\u003cbr/\u003e            property \u0026#34;sonar.login\u0026#34;, \u0026#34;sqp_123123kj123k123j123kj123j1k23k123jk132j\u0026#34;\u003cbr/\u003e        }\u003cbr/\u003e    }\u003cbr/\u003e}\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"5029\"\u003eIn the above code, property “sonar.projectVersion” should match your project’s \u003cstrong\u003eversionName.\u003c/strong\u003e\u003c/p\u003e\u003cp id=\"ac99\"\u003e\u003cstrong\u003eStep 2:\u003c/strong\u003e In gradle.properties\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"d012\"\u003esystemProp.sonar.host.url=http://localhost:9000\u003cbr/\u003e# (Optional, if not using credentials in build.gradle)\u003cbr/\u003esystemProp.sonar.login=your_sonar_username\u003cbr/\u003esystemProp.sonar.password=your_sonar_password\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"b2b8\"\u003e\u003cstrong\u003eStep 3:\u003c/strong\u003e Finally run your sonar analysis for your project using this command in Android Studio Terminal:\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"176f\"\u003e./gradlew sonarqube\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"cad2\"\u003eYou may get the following error if JDK is not installed.\u003c/p\u003e\u003cblockquote\u003e\u003cp id=\"39ff\"\u003eThe operation couldn’t be completed. Unable to locate a Java Runtime.\u003c/p\u003e\u003c/blockquote\u003e\u003cp id=\"9efe\"\u003eI downloaded suitable JDK Version 17 as my \u003cstrong\u003eAndroid Gradle plugin requires Java 17 to run. \u003c/strong\u003eAfter installing JDK and typing the same command \u003cstrong\u003e./gradlew sonarqube\u003c/strong\u003e again\u003c/p\u003e\u003cp id=\"da27\"\u003eBuild was getting failed due to an error.\u003c/p\u003e\u003cblockquote\u003e\u003cp id=\"e99b\"\u003eExecution failed for task ‘:app:sonarqube’. \u0026gt; Cannot get property ‘0.0’ on null object\u003c/p\u003e\u003c/blockquote\u003e\u003cp id=\"ea1c\"\u003e\u003cstrong\u003eSolution?\u003c/strong\u003e From Step 2, we should replace property \u003cstrong\u003e“sonar.projectVersion”, 1.0.0\u003c/strong\u003e to \u003cstrong\u003e“sonar.projectVersion”, 1.0\u003c/strong\u003e (as my project’s versionName is 1.0) like this\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"e35f\"\u003eallprojects {\u003cbr/\u003e    sonar {\u003cbr/\u003e        properties {\u003cbr/\u003e            property \u0026#34;sonar.host.url\u0026#34;, \u0026#34;http://localhost:9000\u0026#34;\u003cbr/\u003e            property \u0026#34;sonar.test.inclusions\u0026#34;, \u0026#34;src/test/**\u0026#34;\u003cbr/\u003e            property \u0026#39;sonar.profile\u0026#39;, \u0026#39;Android Lint\u0026#39;\u003cbr/\u003e            property \u0026#34;sonar.sourceEncoding\u0026#34;, \u0026#34;UTF-8\u0026#34;\u003cbr/\u003e            property \u0026#34;sonar.projectName\u0026#34;, \u0026#34;SonarTestApp\u0026#34;\u003cbr/\u003e            property \u0026#34;sonar.projectKey\u0026#34;, \u0026#34;SonarTestKey\u0026#34;\u003cbr/\u003e            property \u0026#34;sonar.projectVersion\u0026#34;, 1.0\u003cbr/\u003e            property \u0026#34;sonar.login\u0026#34;, \u0026#34;sqp_123123kj123k123j123kj123j1k23k123jk132j\u0026#34;\u003cbr/\u003e        }\u003cbr/\u003e    }\u003cbr/\u003e}\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"6e33\"\u003eAfter all steps are successful, we will get \u003cstrong\u003eBUILD SUCCESSFUL\u003c/strong\u003e message in terminal\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": "2024-11-11T11:14:16.282Z",
  "modifiedTime": null
}
