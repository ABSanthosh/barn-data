{
  "id": "d752e4af-aa4e-48a4-a2c1-eb231e794ad5",
  "title": "Agentic AI takes Gemini in Android Studio to the next level",
  "link": "http://android-developers.googleblog.com/2025/06/agentic-ai-takes-gemini-in-android-studio-to-next-level.html",
  "description": "",
  "author": "Android Developers",
  "published": "2025-06-23T10:00:00.000-07:00",
  "source": "http://feeds.feedburner.com/blogspot/hsDu",
  "categories": [
    "#GenerativeAI",
    "Agentic AI",
    "Android Studio",
    "app development",
    "code completion",
    "Developer Tools",
    "Gemini",
    "Narwhal Canary"
  ],
  "byline": "",
  "length": 7515,
  "excerpt": "Explore Gemini's Agent mode in Android Studio, a new experimental capability offering intelligent assistance for faster, more intuitive development.",
  "siteName": "Android Developers Blog",
  "favicon": "",
  "text": "Posted by Sandhya Mohan ‚Äì Product Manager, and Jose Alc√©rreca ‚Äì Developer Relations Engineer Software development is undergoing a significant evolution, moving beyond reactive assistants to intelligent agents. These agents don't just offer suggestions; they can create execution plans, utilize external tools, and make complex, multi-file changes. This results in a more capable AI that can iteratively solve challenging problems, fundamentally changing how developers work. At Google I/O 2025, we offered a glimpse into our work on agentic AI in Android Studio, the integrated development environment (IDE) focused on Android development. We showcased that by combining agentic AI with the built-in portfolio of tools inside of Android Studio, the IDE is able to assist you in developing Android apps in ways that were never possible before. We are now incredibly excited to announce the next frontier in Android development with the availability of 'Agent Mode' for Gemini in Android Studio. These features are available in the latest Android Studio Narwhal Feature Drop Canary release, and will be rolled out to business tier subscribers in the coming days. As with all new Android Studio features, we invite developers to provide feedback to direct our development efforts and ensure we are creating the tools you need to build better apps, faster. Agent Mode Gemini in Android Studio's Agent Mode is a new experimental capability designed to handle complex development tasks that go beyond what you can experience by just chatting with Gemini. With Agent Mode, you can describe a complex goal in natural language ‚Äî from generating unit tests to complex refactors ‚Äî and the agent formulates an execution plan that can span multiple files in your project and executes under your direction. Agent Mode uses a range of IDE tools for reading and modifying code, building the project, searching the codebase and more to help Gemini complete complex tasks from start to finish with minimal oversight from you. To use Agent Mode, click Gemini in the sidebar, then select the Agent tab, and describe a task you'd like the agent to perform. Some examples of tasks you can try in Agent Mode include: Build my project and fix any errors Extract any hardcoded strings used across my project and migrate to strings.xml Add support for dark mode to my application Given an attached screenshot, implement a new screen in my application using Material 3 The agent then suggests edits and iteratively fixes bugs to complete tasks. You can review, accept, or reject the proposed changes along the way, and ask the agent to iterate on your feedback. Gemini breaks tasks down into a plan with simple steps. It also shows the list of IDE tools it needs to complete each step. While powerful, you are firmly in control, with the ability to review, refine and guide the agent‚Äôs output at every step. When the agent proposes code changes, you can choose to accept or reject them. The Agent waits for the developer to approve or reject a change. Additionally, you can enable ‚ÄúAuto-approve‚Äù if you are feeling lucky üòé ‚Äî especially useful when you want to iterate on ideas as rapidly as possible. You can delegate routine, time-consuming work to the agent, freeing up your time for more creative, high-value work. Try out Agent Mode in the latest preview version of Android Studio ‚Äì we look forward to seeing what you build! We are investing in building more agentic experiences for Gemini in Android Studio to make your development even more intuitive, so you can expect to see more agentic functionality over the next several releases. Gemini is capable of understanding the context of your app Supercharge Agent Mode with your Gemini API key The default Gemini model has a generous no-cost daily quota with a limited context window. However, you can now add your own Gemini API key to expand Agent Mode's context window to a massive 1 million tokens with Gemini 2.5 Pro. A larger context window lets you send more instructions, code and attachments to Gemini, leading to even higher quality responses. This is especially useful when working with agents, as the larger context provides Gemini 2.5 Pro with the ability to reason about complex or long-running tasks. Add your API key in the Gemini settings To enable this feature, get a Gemini API key by navigating to Google AI Studio. Sign in and get a key by clicking on the ‚ÄúGet API key‚Äù button. Then, back in Android Studio, navigate to the settings by going to File (Android Studio on macOS) \u003e Settings \u003e Tools \u003e Gemini to enter your Gemini API key. Relaunch Gemini in Android Studio and get even better responses from Agent Mode. Be sure to safeguard your Gemini API key, as additional charges apply for Gemini API usage associated with a personal API key. You can monitor your Gemini API key usage by navigating to AI Studio and selecting Get API key \u003e Usage \u0026 Billing. Note that business tier subscribers already get access to Gemini 2.5 Pro and the expanded context window automatically with their Gemini Code Assist license, so these developers will not see an API key option. Model Context Protocol (MCP) Gemini in Android Studio's Agent Mode can now interact with external tools via the Model Context Protocol (MCP). This feature provides a standardized way for Agent Mode to use tools and extend knowledge and capabilities with the external environment. There are many tools you can connect to the MCP Host in Android Studio. For example you could integrate with the Github MCP Server to create pull requests directly from Android Studio. Here are some additional use cases to consider. In this initial release of MCP support in the IDE you will configure your MCP servers through a mcp.json file placed in the configuration directory of Studio, using the following format: { \"mcpServers\": { \"memory\": { \"command\": \"npx\", \"args\": [ \"-y\", \"@modelcontextprotocol/server-memory\" ] }, \"sequential-thinking\": { \"command\": \"npx\", \"args\": [ \"-y\", \"@modelcontextprotocol/server-sequential-thinking\" ] }, \"github\": { \"command\": \"docker\", \"args\": [ \"run\", \"-i\", \"--rm\", \"-e\", \"GITHUB_PERSONAL_ACCESS_TOKEN\", \"ghcr.io/github/github-mcp-server\" ], \"env\": { \"GITHUB_PERSONAL_ACCESS_TOKEN\": \"\u003cYOUR_TOKEN\u003e\" } } } } Example configuration with two MCP servers For this initial release, we support interacting with external tools via the stdio transport as defined in the MCP specification. We plan to support the full suite of MCP features in upcoming Android Studio releases, including the Streamable HTTP transport, external context resources, and prompt templates. For more information on how to use MCP in Studio, including the mcp.json configuration file format, please refer to the Android Studio MCP Host documentation. By delegating routine tasks to Gemini through Agent Mode, you‚Äôll be able to focus on more innovative and enjoyable aspects of app development. Download the latest preview version of Android Studio on the canary release channel today to try it out, and let us know how much faster app development is for you! As always, your feedback is important to us ‚Äì check known issues, report bugs, suggest improvements, and be part of our vibrant community on LinkedIn, Medium, YouTube, or X. Let's build the future of Android apps together!",
  "image": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhJ3Vmdz70OU49TvruUdrMujKEp5PyTvsWP70-nQ071f5KypREpfA18DzW4dwp_WHeZSTW-uFaIL05ZnKNDCzdPr6og0GzN7rAiMOlO3xtxKpOWNQfca4oggymaio8cSpAkEX_pd70ltlPTpwvWx_MckKTdgYtgHG5G-mb-d5T-bIgBccX47QebsDzdxTQ/w1200-h630-p-k-no-nu/AgenticAI_SocialLoop_1280x720_01.gif",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\u003cmeta content=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhJ3Vmdz70OU49TvruUdrMujKEp5PyTvsWP70-nQ071f5KypREpfA18DzW4dwp_WHeZSTW-uFaIL05ZnKNDCzdPr6og0GzN7rAiMOlO3xtxKpOWNQfca4oggymaio8cSpAkEX_pd70ltlPTpwvWx_MckKTdgYtgHG5G-mb-d5T-bIgBccX47QebsDzdxTQ/s1600/AgenticAI_SocialLoop_1280x720_01.gif\" name=\"twitter:image\"/\u003e\n\u003cp\u003e\n\n\u003cem\u003ePosted by \u003ca href=\"https://x.com/sandhyam1312\" target=\"_blank\"\u003eSandhya Mohan\u003c/a\u003e ‚Äì Product Manager, and \u003ca href=\"https://bsky.app/profile/josealcerreca.bsky.social\" target=\"_blank\"\u003eJose Alc√©rreca\u003c/a\u003e ‚Äì Developer Relations Engineer \u003c/em\u003e\n\n\u003ca href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiAN3pixiL5jrI5QCjO0VlwcuXbmdV8VNvHkVDqRmGnup7p98ECZfvS0F1wg1JoHFuyIlYLwJdty5Mcs2y9e0JGbP3sbEd5rXIPo5oKtn9bPOsNzUde_ZaKd3adWMPLernVzOTJsfitBsj3JSYlzKs9EoUPDW6vFmvw_0-tln1c37X3XhC_4NjXl_tiCqI/s1600/agentic-ai-gemini-android-studio-banner.png\"\u003e\u003cimg data-original-height=\"800\" data-original-width=\"100%\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiAN3pixiL5jrI5QCjO0VlwcuXbmdV8VNvHkVDqRmGnup7p98ECZfvS0F1wg1JoHFuyIlYLwJdty5Mcs2y9e0JGbP3sbEd5rXIPo5oKtn9bPOsNzUde_ZaKd3adWMPLernVzOTJsfitBsj3JSYlzKs9EoUPDW6vFmvw_0-tln1c37X3XhC_4NjXl_tiCqI/s1600/agentic-ai-gemini-android-studio-banner.png\"/\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003eSoftware development is undergoing a significant evolution, moving beyond reactive assistants to \u003cb\u003eintelligent agents\u003c/b\u003e. These agents don\u0026#39;t just offer suggestions; they can \u003cb\u003ecreate execution plans\u003c/b\u003e, utilize external tools, and make complex, multi-file changes. This results in a more capable AI that can \u003cb\u003eiteratively solve challenging problems\u003c/b\u003e, fundamentally changing how developers work.\u003c/p\u003e\n\n\u003cp\u003eAt Google I/O 2025, we \u003ca href=\"https://youtu.be/KXKP2tDPW4Y?si=y1xMu4MTESO420VD\u0026amp;t=895\" target=\"_blank\"\u003eoffered a glimpse into our work\u003c/a\u003e on agentic AI in Android Studio, the integrated development environment (IDE) focused on Android development. We showcased that by combining agentic AI with the built-in portfolio of tools inside of Android Studio, the IDE is able to assist you in developing Android apps in ways that were never possible before. We are now incredibly excited to announce the next frontier in Android development with \u003cb\u003ethe availability of \u0026#39;Agent Mode\u0026#39; for Gemini in Android Studio\u003c/b\u003e.\u003c/p\u003e \n\n\u003cp\u003eThese features are available in the latest \u003ca href=\"https://developer.android.com/studio/preview\" target=\"_blank\"\u003eAndroid Studio Narwhal Feature Drop Canary\u003c/a\u003e release, and will be rolled out to \u003ca href=\"https://developer.android.com/gemini-for-businesses\" target=\"_blank\"\u003ebusiness tier subscribers\u003c/a\u003e in the coming days. As with all new Android Studio features, we invite developers to \u003ca href=\"https://developer.android.com/studio/report-bugs\" target=\"_blank\"\u003eprovide feedback\u003c/a\u003e to direct our development efforts and ensure we are creating the tools you need to build better apps, faster.\u003c/p\u003e\n\n\u003ch2\u003e\u003cspan\u003eAgent Mode\u003c/span\u003e\u003c/h2\u003e\n  \n\u003cp\u003eGemini in Android Studio\u0026#39;s \u003ca href=\"http://d.android.com/studio/preview/gemini/agent-mode\" target=\"_blank\"\u003eAgent Mode\u003c/a\u003e is a new experimental capability designed to handle complex development tasks that go beyond what you can experience by just chatting with Gemini.\u003c/p\u003e\n\n\u003cp\u003eWith Agent Mode, you can describe a complex goal in natural language ‚Äî from generating unit tests to complex refactors ‚Äî and the agent formulates an execution plan that can span multiple files in your project and executes under your direction. Agent Mode uses a range of IDE tools for reading and modifying code, building the project, searching the codebase and more to help Gemini complete complex tasks from start to finish with minimal oversight from you.\u003c/p\u003e\n\n\u003cp\u003eTo use Agent Mode, click Gemini in the sidebar, then select the Agent tab, and describe a task you\u0026#39;d like the agent to perform. Some examples of tasks you can try in Agent Mode include:\u003c/p\u003e\n\u003cul\u003e\u003cul\u003e\n\u003cli\u003eBuild my project and fix any errors\u003c/li\u003e\n\u003cli\u003eExtract any hardcoded strings used across my project and migrate to strings.xml\u003c/li\u003e\n\u003cli\u003eAdd support for dark mode to my application\u003c/li\u003e\n\u003cli\u003eGiven an attached screenshot, implement a new screen in my application using Material 3\u003c/li\u003e\n\u003c/ul\u003e\u003c/ul\u003e\n\n\u003cp\u003eThe agent then suggests edits and iteratively fixes bugs to complete tasks. You can review, accept, or reject the proposed changes along the way, and ask the agent to iterate on your feedback.\u003c/p\u003e\n  \n\u003cp\u003e\u003cimg alt=\"moving image showing Gemini breaking tasks down into a plan with simple steps, and the list of IDE tools it needs to complete each step\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg_iWsYepnNDH7Gj19bjf08zQvaLX81l-vqUm7Oaw-rAb8Dzw23Fx_hpexPG-RjUs8jGdhnODTL6JpLY6A5n5KuyKct4Ah9rcRfBvWDV4eWNWKeAMdBPP-CPNB9q0jFZC1OTcZg1vH_WI-ivSr508alXcWavPHA5V7d_SDSTQZ4_numO5qVCrFlqMO7RtQ/s1600/gemini-in-android-studio.gif\"/\u003e\u003c/p\u003e\u003cimgcaption\u003e\u003ccenter\u003e\u003cem\u003eGemini breaks tasks down into a plan with simple steps. It also shows the list of IDE tools it needs to complete each step.\u003c/em\u003e\u003c/center\u003e\u003c/imgcaption\u003e\n\n  \n\u003cp\u003eWhile powerful, you are firmly in control, with the ability to review, refine and guide the agent‚Äôs output at every step. When the agent proposes code changes, you can choose to accept or reject them.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"screenshot of Gemini in Android Studio showing the Agent prompting the user to accept or reject a change\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj_MOdlWuZ1kh64G_VA_8U2-MRWHU7zOs3RS9ir8DLfnAJTf3OiCGTqwuKtq8pNeawRtHUUQasiHRpRKX7uu5xfh0jXL276SpjL-gmPZQu_1Nr-lD5IESidnO_EfuI-XPW2b-D2anB5ENSVXUCUVwuKWGYKLrNSxtfjKDIoo2IsaGivL-DvFbhjKbq9QNk/s1600/agent-in-gemini-android-studio.png\"/\u003e\u003c/p\u003e\u003cimgcaption\u003e\u003ccenter\u003e\u003cem\u003eThe Agent waits for the developer to approve or reject a change.\u003c/em\u003e\u003c/center\u003e\u003c/imgcaption\u003e\n\n\u003cp\u003eAdditionally, you can enable ‚ÄúAuto-approve‚Äù if you are feeling lucky üòé  ‚Äî especially useful when you want to iterate on ideas as rapidly as possible.\u003c/p\u003e\n\n\u003cp\u003eYou can delegate routine, time-consuming work to the agent, freeing up your time for more creative, high-value work. Try out Agent Mode in the latest preview version of Android Studio ‚Äì we look forward to seeing what you build! We are investing in building more agentic experiences for Gemini in Android Studio to make your development even more intuitive, so you can expect to see more agentic functionality over the next several releases.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"moving image showing that Gemini understanding the context of an app\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj0tWxq6yTKECYHyh0z-oza6S-6Girc2qmH1Lozyh8_5D6WowwdnZz66OuhjwVGU0axSOv3-Dkct7vjpkn1Kerj5_EeVjoE6HmN8ByEFSApNL-IZDuFxE7xZVBLZQp4v4RPyUygmk7kTT-9udBnbJPGmji7z2DAIJBjEcecxDv9FJ8vOSmUlBzGUS61iAI/s1600/context-understanding-gemini-in-android-studio.gif\"/\u003e\u003c/p\u003e\u003cimgcaption\u003e\u003ccenter\u003e\u003cem\u003eGemini is capable of understanding the context of your app\u003c/em\u003e\u003c/center\u003e\u003c/imgcaption\u003e\u003cbr/\u003e\n\n\u003ch2\u003e\u003cspan\u003eSupercharge Agent Mode with your Gemini API key\u003c/span\u003e\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg alt=\"screenshot of Gemini API key prompt in Android Studio\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjmkpKWA7uSvl-mJ-fE6F9Ln4E12yydtyRhFCRz4nABeImVR7gEqlonSFsIhyBtOaHtIA_R6fcXZK3bqDOoQiEKaWrBkzaeTrw-UFFJ-pk0d5MEANzVyRA6BdYzact_Da_5kTNElEo7iKJ8QUDw1JYzA-139Nbo6vOfptCBcb-2M4Qv-RSW34H-KmlQ1O4/s16000/add-or-generate-gemini-api-key.png\"/\u003e\u003c/p\u003e\n\n\u003cp\u003eThe default Gemini model has a generous no-cost daily quota with a limited context window. However, you can now add your own Gemini API key to expand Agent Mode\u0026#39;s context window to a massive \u003cb\u003e1 million tokens\u003c/b\u003e with Gemini 2.5 Pro.\u003c/p\u003e\n\n\u003cp\u003eA larger context window lets you send more instructions, code and attachments to Gemini, leading to even higher quality responses. This is especially useful when working with agents, as the larger context provides Gemini 2.5 Pro with the ability to reason about complex or long-running tasks.\u003c/p\u003e\n\n\n\u003cp\u003e\u003cimg alt=\"screenshot of how to add your API Key in the Gemini settings\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgCXx1ivZCdx9Shko9-63hKCT0BwWyYK4Ryaxgo0dzCkggmGBQ2MXgEdQfizoBRNWO6KbFrd4xjLoXTdiR3iAfEuTgxzW7C0-bzApRitP58NLGxaTiqrulhcnmfffO-T57Prqw6AwstjKoyJmtLkC3fa4p227X25EFPz_mGhXpIykTcoEN0LNXgmnrT4EU/s16000/add-your-gemini-api-key-settings.png\"/\u003e\u003c/p\u003e\u003cimgcaption\u003e\u003ccenter\u003e\u003cem\u003eAdd your API key in the Gemini settings\u003c/em\u003e\u003c/center\u003e\u003c/imgcaption\u003e\n\n\u003cp\u003eTo enable this feature, get a Gemini API key by navigating to \u003ca href=\"https://aistudio.google.com/\" target=\"_blank\"\u003eGoogle AI Studio\u003c/a\u003e. Sign in and get a key by clicking on the ‚ÄúGet API key‚Äù button. Then, back in Android Studio, navigate to the settings by going to \u003cb\u003eFile\u003c/b\u003e (\u003cb\u003eAndroid Studio\u003c/b\u003e on macOS) \u003cb\u003e\u0026gt; Settings \u0026gt; Tools \u0026gt; Gemini\u003c/b\u003e to enter your Gemini API key. Relaunch Gemini in Android Studio and get even better responses from Agent Mode.\u003c/p\u003e\n\n\u003cp\u003eBe sure to safeguard your Gemini API key, as \u003ca href=\"https://ai.google.dev/gemini-api/docs/pricing\" target=\"_blank\"\u003eadditional charges\u003c/a\u003e apply for Gemini API usage associated with a personal API key. You can monitor your Gemini API key usage by navigating to \u003ca href=\"https://aistudio.google.com/\" target=\"_blank\"\u003eAI Studio\u003c/a\u003e and selecting \u003cb\u003eGet API key \u0026gt; Usage \u0026amp; Billing\u003c/b\u003e.\u003c/p\u003e\n\n\u003cp\u003eNote that \u003ca href=\"https://developer.android.com/gemini-for-businesses\" target=\"_blank\"\u003ebusiness tier subscribers\u003c/a\u003e already get access to Gemini 2.5 Pro and the expanded context window automatically with their Gemini Code Assist license, so these developers will not see an API key option.\u003c/p\u003e\n\n\u003ch2\u003e\u003cspan\u003eModel Context Protocol (MCP)\u003c/span\u003e\u003c/h2\u003e\n\n\u003cp\u003eGemini in Android Studio\u0026#39;s Agent Mode can now interact with external tools via the Model Context Protocol (MCP). This feature provides a standardized way for Agent Mode to use tools and extend knowledge and capabilities with the external environment.\u003c/p\u003e\n\n\u003cp\u003eThere are many tools you can connect to the MCP Host in Android Studio. For example you could integrate with the Github MCP Server to create pull requests directly from Android Studio. Here are some additional \u003ca href=\"https://modelcontextprotocol.io/examples\" target=\"_blank\"\u003euse cases\u003c/a\u003e to consider.\u003c/p\u003e \n\n\u003cp\u003eIn this initial release of MCP support in the IDE you will configure your MCP servers through a mcp.json file placed in the \u003ca href=\"https://developer.android.com/studio/troubleshoot#directories\" target=\"_blank\"\u003econfiguration directory\u003c/a\u003e of Studio, using the following format:\u003c/p\u003e\n\n\u003cdiv\u003e\u003cpre\u003e{\n  \u003cspan\u003e\u0026#34;mcpServers\u0026#34;\u003c/span\u003e: {\n    \u003cspan\u003e\u0026#34;memory\u0026#34;\u003c/span\u003e: {\n      \u003cspan\u003e\u0026#34;command\u0026#34;\u003c/span\u003e: \u003cspan\u003e\u0026#34;npx\u0026#34;\u003c/span\u003e,\n      \u003cspan\u003e\u0026#34;args\u0026#34;\u003c/span\u003e: [\n        \u003cspan\u003e\u0026#34;-y\u0026#34;\u003c/span\u003e,\n        \u003cspan\u003e\u0026#34;@modelcontextprotocol/server-memory\u0026#34;\u003c/span\u003e\n      ]\n    },\n    \u003cspan\u003e\u0026#34;sequential-thinking\u0026#34;\u003c/span\u003e: {\n      \u003cspan\u003e\u0026#34;command\u0026#34;\u003c/span\u003e: \u003cspan\u003e\u0026#34;npx\u0026#34;\u003c/span\u003e,\n      \u003cspan\u003e\u0026#34;args\u0026#34;\u003c/span\u003e: [\n        \u003cspan\u003e\u0026#34;-y\u0026#34;\u003c/span\u003e,\n        \u003cspan\u003e\u0026#34;@modelcontextprotocol/server-sequential-thinking\u0026#34;\u003c/span\u003e\n      ]\n    },\n    \u003cspan\u003e\u0026#34;github\u0026#34;\u003c/span\u003e: {\n      \u003cspan\u003e\u0026#34;command\u0026#34;\u003c/span\u003e: \u003cspan\u003e\u0026#34;docker\u0026#34;\u003c/span\u003e,\n      \u003cspan\u003e\u0026#34;args\u0026#34;\u003c/span\u003e: [\n        \u003cspan\u003e\u0026#34;run\u0026#34;\u003c/span\u003e,\n        \u003cspan\u003e\u0026#34;-i\u0026#34;\u003c/span\u003e,\n        \u003cspan\u003e\u0026#34;--rm\u0026#34;\u003c/span\u003e,\n        \u003cspan\u003e\u0026#34;-e\u0026#34;\u003c/span\u003e,\n        \u003cspan\u003e\u0026#34;GITHUB_PERSONAL_ACCESS_TOKEN\u0026#34;\u003c/span\u003e,\n        \u003cspan\u003e\u0026#34;ghcr.io/github/github-mcp-server\u0026#34;\u003c/span\u003e\n      ],\n      \u003cspan\u003e\u0026#34;env\u0026#34;\u003c/span\u003e: {\n        \u003cspan\u003e\u0026#34;GITHUB_PERSONAL_ACCESS_TOKEN\u0026#34;\u003c/span\u003e: \u003cspan\u003e\u0026#34;\u0026lt;YOUR_TOKEN\u0026gt;\u0026#34;\u003c/span\u003e\n      }\n    }\n  }  \n}\n\u003c/pre\u003e\u003c/div\u003e\n\n\u003cdiv\u003e\u003ccenter\u003e\u003cem\u003eExample configuration with two MCP servers\u003c/em\u003e\u003c/center\u003e\n  \n\u003cp\u003eFor this initial release, we support interacting with external tools via the \u003ci\u003estdio\u003c/i\u003e transport as defined in the \u003ca href=\"https://modelcontextprotocol.io/specification/\" target=\"_blank\"\u003eMCP specification\u003c/a\u003e. We plan to support the full suite of MCP features in upcoming Android Studio releases, including the Streamable HTTP transport, external context resources, and prompt templates.\u003c/p\u003e\n\n\u003cp\u003eFor more information on how to use MCP in Studio, including the \u003cspan\u003emcp.json\u003c/span\u003e configuration file format, please refer to the \u003ca href=\"http://developer.android.com/studio/preview/gemini/agent-mode#add-mcp\" target=\"_blank\"\u003eAndroid Studio MCP Host documentation\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eBy delegating routine tasks to Gemini through Agent Mode, you‚Äôll be able to focus on more innovative and enjoyable aspects of app development. Download the latest preview version of Android Studio on the canary release channel today to try it out, and let us know how much faster app development is for you!\u003c/p\u003e\n\n\u003cp\u003eAs always, your feedback is important to us ‚Äì \u003ca href=\"https://developer.android.com/studio/known-issues\" target=\"_blank\"\u003echeck known issues\u003c/a\u003e, \u003ca href=\"https://developer.android.com/studio/report-bugs\" target=\"_blank\"\u003ereport bugs\u003c/a\u003e, \u003ca href=\"https://developer.android.com/studio/report-bugs\" target=\"_blank\"\u003esuggest improvements\u003c/a\u003e, and be part of our vibrant community on \u003ca href=\"https://www.linkedin.com/showcase/androiddev/posts/?feedView=all\" target=\"_blank\"\u003eLinkedIn\u003c/a\u003e, \u003ca href=\"https://medium.com/androiddevelopers\" target=\"_blank\"\u003eMedium\u003c/a\u003e, \u003ca href=\"https://www.youtube.com/c/AndroidDevelopers/videos\" target=\"_blank\"\u003eYouTube\u003c/a\u003e, or \u003ca href=\"https://twitter.com/androidstudio\" target=\"_blank\"\u003eX\u003c/a\u003e. Let\u0026#39;s build the future of Android apps together!\u003c/p\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "8 min read",
  "publishedTime": null,
  "modifiedTime": null
}
