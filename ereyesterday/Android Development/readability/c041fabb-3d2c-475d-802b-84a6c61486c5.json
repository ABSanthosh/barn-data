{
  "id": "c041fabb-3d2c-475d-802b-84a6c61486c5",
  "title": "A product manager’s guide to adapting Android apps across devices",
  "link": "https://medium.com/androiddevelopers/a-product-managers-guide-to-adapting-android-apps-across-devices-b2e9b8bfe5f1?source=rss----95b274b437c2---4",
  "description": "",
  "author": "Android Developers",
  "published": "Tue, 10 Jun 2025 18:06:14 GMT",
  "source": "https://medium.com/feed/androiddevelopers",
  "categories": [
    "large-screen-display",
    "layout",
    "google-io-2025",
    "featured",
    "adaptive"
  ],
  "byline": "Android Developers",
  "length": 9727,
  "excerpt": "From phones and foldables to tablets, Chromebooks, TVs, cars, Wear and XR, Android users expect their apps to run seamlessly across an increasingly diverse range of form factors. Yet, many Android…",
  "siteName": "Android Developers",
  "favicon": "https://miro.medium.com/v2/resize:fill:1000:1000/7*GAOKVe--MXbEJmV9230oOQ.png",
  "text": "With new form factors emerging continually, the Android ecosystem is more dynamic than ever.From phones and foldables to tablets, Chromebooks, TVs, cars, Wear and XR, Android users expect their apps to run seamlessly across an increasingly diverse range of form factors. Yet, many Android apps fall short of these expectations as they are built with UI constraints such as being locked to a single orientation or restricted in resizability.With this in mind, Android 16 introduced API changes for apps targeting SDK level 36 to ignore orientation and resizability restrictions starting with large screen devices, shifting toward a unified model where adaptive apps are the norm. This is the moment to move ahead. Adaptive apps aren’t just the future of Android, they’re the expectation for your app to stand out across Android form factors.Why you should prioritize adaptive nowSource: internal Google dataPrioritizing optimizations to make your app adaptive isn’t just about keeping up with the orientation and resizability API changes in Android 16 for apps targeting SDK 36. Adaptive apps unlock tangible benefits across user experience, development efficiency, and market reach.Mobile apps can now reach users on over 500 million active large screen devices: Mobile apps run on foldables, tablets, Chromebooks, and even compatible cars, with minimal changes. Android 16 will introduce significant advancements in desktop windowing for a true desktop-like experience on large screens, including connected displays. And Android XR opens a new dimension, allowing your existing apps to be available in immersive environments. The user expectation is clear: a consistent, high-quality experience that intelligently adapts to any screen — be it a foldable, a tablet with a keyboard, or a movable, resizable window on a Chromebook.“The new baseline” with orientation and resizability API changes in Android 16: We believe mobile apps are undergoing a shift to have UI adapt responsively to any screen size, just like websites. Android 16 will ignore app-defined restrictions like fixed orientation (portrait-only) and non-resizable windows, beginning with large screens (smallest width of the device is \u003e= 600dp) including tablets and inner displays on foldables. For most apps, it’s key to helping them stretch to any screen size. In some cases if your app isn’t adaptive, it could deliver a broken user experience on these screens. This moves adaptive design from a nice-to-have to a foundational requirement.Increase user reach and app discoverability in Play: Adaptive apps are better positioned to be ranked higher in Play, and featured in editorial articles across form factors, reaching a wider audience across Play search and homepages. Additionally, Google Play Store surfaces ratings and reviews across all form factors. If your app is not optimized, a potential user’s first impression might be tainted by a 1-star review complaining about a stretched UI on a device they don’t even own yet. Users are also more likely to engage with apps that provide a great experience across their devices.Increased engagement on large screens: Users on large screen devices often have different interaction patterns. On large screens, users may engage for longer sessions, perform more complex tasks, and consume more content.Concepts saw a 70% increase in user engagement on large screens after optimizing.Usage for 6 major media streaming apps in the US was up to 3x more for tablet and phone users, as compared to phone only users.More accessible app experiences: According to the World Bank, 15% of the world’s population has some type of disability. People with disabilities depend on apps and services that support accessibility to communicate, learn, and work. Matching the user’s preferred orientation improves the accessibility of applications, helping to create an inclusive experience for all.Today, most apps are building for smartphones only“…looking at the number of users, the ROI does not justify the investment”.That’s a frequent pushback from product managers and decision-makers, and if you’re just looking at top-line analytics comparing the number of tablet sessions to smartphone sessions, it might seem like a closed case.While top-line analytics might show lower session numbers on tablets compared to smartphones, concluding that large screens aren’t worth the effort based solely on current volume can be a trap, causing you to miss out on valuable engagement and future opportunities.Let’s take a deeper look into why:The user experience ‘chicken and egg’ loop: Is it possible that the low usage is a symptom rather than the root cause? Users are quick to abandon apps that feel clunky or broken. If your app on large screens is a stretched-out phone interface, the app likely provides a negative user experience. The lack of users might reflect the lack of a good experience, not always necessarily lack of potential users.Beyond user volume, look at user engagement: Don’t just count users, analyze their worth. Users interact with apps on large screens differently. The large screen often leads to longer sessions and more immersive experiences. As mentioned above, usage data shows that engagement time increases significantly for users who interact with apps on both their phone and tablet, as compared to phone only users.Market evolution: The Android device ecosystem is continuing to evolve. With the rise of foldables, upcoming connected displays support in Android 16, and form factors like XR and Android Auto, adaptive design is now more critical than ever. Building for a specific screen size creates technical debt, and may slow your development velocity and compromise the product quality in the long run.Okay, I am convinced. Where do I start?For organizations ready to move forward, Android offers many resources and developer tools to optimize apps to be adaptive. See below for how to get started:1: Check how your app looks on large screens todayBegin by looking at your app’s current state on tablets, foldables (in different postures), Chromebooks, and environments like desktop windowing. Confirm if your app is available on these devices or if you are unintentionally leaving out these users by requiring unnecessary features within your app.2: Address common UI issuesAssess what feels awkward in your app UI today. We have a lot of guidance available on how you can easily translate your mobile app to other screens.a) Check the Large screens design gallery for inspiration and understanding how your app UI can evolve across devices using proven solutions to common UI challenges.b) Start with quick wins. For example, prevent buttons from stretching to the full screen width, or switch to a vertical navigation bar on large screens to improve ergonomics.c) Identify patterns where canonical layouts (e.g. list-detail) could solve any UI awkwardness you identified. Could a list-detail view improve your app’s navigation? Would a supporting pane on the side make better use of the extra space than a bottom sheet?3: Optimize your app incrementally, screen by screenIt may be helpful to prioritize how you approach optimization because not everything needs to be perfectly adaptive on day one. Incrementally improve your app based on what matters most — it’s not all or nothing.a) Start with the foundations. Check out the large screen app quality guidelines which tier and prioritize the fixes that are most critical to users. Remove orientation restrictions to support portrait and landscape, and ensure support for resizability (for when users are in split screen), and prevent major stretching of buttons, text fields, and images. These foundational fixes are critical, especially with API changes in Android 16 that will make these aspects even more important.b) Implement adaptive layout optimizations with a focus on core user journeys or screens first.i. Identify screens where optimizations (for example a two-pane layout) offer the biggest UX winii. And then proceed to screens or parts of the app that are not as often used on large screensc) Support input methods beyond touch, including keyboard, mouse, trackpad, and stylus input. With new form factors and connected displays support, this sets users up to interact with your UI seamlessly.d) Add differentiating hero user experiences like support for tabletop mode or dual-screen mode on foldables. This can happen on a per-use-case basis — for example, tabletop mode is great for watching videos, and dual screen mode is great for video calls.While there’s an upfront investment in adopting adaptive principles (using tools like Jetpack Compose and window size classes), the long-term payoff may be significant. By designing and building features once, and letting them adapt across screen sizes, the benefits outweigh the cost of creating multiple bespoke layouts. Check out the adaptive apps developer guidance for more.Unlock your app’s potential with adaptive app designThe message for my fellow product managers, decision-makers, and businesses is clear: adaptive design will uplevel your app for high-quality Android experiences in 2025 and beyond. An adaptive, responsive UI is the scalable way to support the many devices in Android without developing on a per-form factor basis. If you ignore the diverse device ecosystem of foldables, tablets, Chromebooks, and emerging form factors like XR and cars, your business is accepting hidden costs from negative user reviews, lower discovery in Play, increased technical debt, and missed opportunities for increased user engagement and user acquisition.Maximize your apps’ impact and unlock new user experiences. Learn more about building adaptive apps today.",
  "image": "https://miro.medium.com/v2/resize:fit:1200/1*1Im05SgMaUsfqgUUdMQzJw.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cp id=\"bf7b\"\u003eWith new form factors emerging continually, the Android ecosystem is more dynamic than ever.\u003c/p\u003e\u003cp id=\"c86a\"\u003eFrom phones and foldables to tablets, Chromebooks, TVs, cars, Wear and XR, Android users expect their apps to run seamlessly across an increasingly diverse range of form factors. Yet, many Android apps fall short of these expectations as they are built with UI constraints such as being locked to a single orientation or restricted in resizability.\u003c/p\u003e\u003cp id=\"235a\"\u003eWith this in mind, \u003ca href=\"https://android-developers.googleblog.com/2025/01/orientation-and-resizability-changes-in-android-16.html\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eAndroid 16 introduced API changes\u003c/a\u003e for apps targeting SDK level 36 to ignore orientation and resizability restrictions starting with large screen devices, shifting toward a unified model where adaptive apps are the norm. This is the moment to move ahead. Adaptive apps aren’t just the future of Android, they’re the expectation for your app to stand out across Android form factors.\u003c/p\u003e\u003ch2 id=\"bb7f\"\u003eWhy you should prioritize adaptive now\u003c/h2\u003e\u003cfigure\u003e\u003cfigcaption\u003e\u003cem\u003eSource: internal Google data\u003c/em\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"27c6\"\u003ePrioritizing optimizations to make your app \u003cem\u003eadaptive\u003c/em\u003e isn’t just about keeping up with \u003ca href=\"https://android-developers.googleblog.com/2025/01/orientation-and-resizability-changes-in-android-16.html\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ethe orientation and resizability API changes in Android 16\u003c/a\u003e for apps targeting SDK 36. Adaptive apps unlock tangible benefits across user experience, development efficiency, and market reach.\u003c/p\u003e\u003cul\u003e\u003cli id=\"cfc0\"\u003e\u003cstrong\u003eMobile apps can now reach users on over 500 million active large screen devices:\u003c/strong\u003e Mobile apps run on foldables, tablets, Chromebooks, and even compatible cars, with minimal changes. Android 16 will introduce significant advancements in desktop windowing for a true desktop-like experience on large screens, including connected displays. And Android XR opens a new dimension, allowing your existing apps to be available in immersive environments. The user expectation is clear: a consistent, high-quality experience that intelligently adapts to any screen — be it a foldable, a tablet with a keyboard, or a movable, resizable window on a Chromebook.\u003c/li\u003e\u003cli id=\"0a76\"\u003e\u003cstrong\u003e“The new baseline” with orientation and resizability API changes in Android 16:\u003c/strong\u003e We believe mobile apps are undergoing a shift to have UI adapt responsively to any screen size, just like websites. Android 16 will ignore app-defined restrictions like fixed orientation (portrait-only) and non-resizable windows, beginning with large screens (smallest width of the device is \u0026gt;= 600dp) including tablets and inner displays on foldables. For most apps, it’s key to helping them stretch to any screen size. In some cases if your app isn’t adaptive, it could deliver a broken user experience on these screens. This moves adaptive design from a nice-to-have to a foundational requirement.\u003c/li\u003e\u003c/ul\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cul\u003e\u003cli id=\"c317\"\u003e\u003cstrong\u003eIncrease user reach and app discoverability in Play:\u003c/strong\u003e Adaptive apps are better positioned to be ranked higher in Play, and featured in editorial articles across form factors, reaching a wider audience across Play search and homepages. Additionally, Google Play Store surfaces ratings and reviews across all form factors. If your app is not optimized, a potential user’s first impression might be tainted by a 1-star review complaining about a stretched UI on a device they don’t even own yet. Users are also more likely to engage with apps that provide a great experience across their devices.\u003c/li\u003e\u003cli id=\"26df\"\u003e\u003cstrong\u003eIncreased engagement on large screens:\u003c/strong\u003e Users on large screen devices often have different interaction patterns. On large screens, users may engage for longer sessions, perform more complex tasks, and consume more content.\u003c/li\u003e\u003c/ul\u003e\u003cblockquote\u003e\u003cp id=\"c4ab\"\u003e\u003ca href=\"https://www.youtube.com/watch?v=WSnfe3KiXbg\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eConcepts saw a 70% increase in user engagement\u003c/strong\u003e\u003c/a\u003e on large screens after optimizing.\u003c/p\u003e\u003cp id=\"5429\"\u003eUsage for 6 major media streaming apps in the US was up to \u003cstrong\u003e3x more for tablet and phone users\u003c/strong\u003e, as compared to phone only users.\u003c/p\u003e\u003c/blockquote\u003e\u003cul\u003e\u003cli id=\"4095\"\u003e\u003cstrong\u003eMore accessible app experiences:\u003c/strong\u003e According to the World Bank, \u003ca href=\"https://www.worldbank.org/en/news/immersive-story/2022/02/15/an-accessible-future-for-persons-with-disabilities-what-does-it-take#:~:text=10%20Commitments%0Aon%20Disability%2DInclusion\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e15%\u003c/a\u003e of the world’s population has some type of disability. People with disabilities depend on apps and services that support accessibility to communicate, learn, and work. Matching the user’s preferred orientation improves the accessibility of applications, helping to create an inclusive experience for all.\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"f16c\"\u003eToday, most apps are building for smartphones only\u003c/h2\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"d325\"\u003e\u003cem\u003e“…looking at the number of users, the ROI does not justify the investment”.\u003c/em\u003e\u003c/p\u003e\u003cp id=\"1e3d\"\u003eThat’s a frequent pushback from product managers and decision-makers, and if you’re just looking at top-line analytics comparing the number of tablet sessions to smartphone sessions, it might seem like a closed case.\u003c/p\u003e\u003cp id=\"2c18\"\u003eWhile top-line analytics might show lower session numbers on tablets compared to smartphones, concluding that large screens aren’t worth the effort based solely on current volume can be a trap, causing you to miss out on valuable engagement and future opportunities.\u003c/p\u003e\u003cp id=\"1796\"\u003eLet’s take a deeper look into why:\u003c/p\u003e\u003col\u003e\u003cli id=\"8872\"\u003e\u003cstrong\u003eThe user experience ‘chicken and egg’ loop:\u003c/strong\u003e Is it possible that the low usage is a symptom rather than the root cause? Users are quick to abandon apps that feel clunky or broken. If your app on large screens is a stretched-out phone interface, the app likely provides a negative user experience. The lack of users might reflect the lack of a good experience, not always necessarily lack of potential users.\u003c/li\u003e\u003cli id=\"b042\"\u003e\u003cstrong\u003eBeyond user volume, look at user engagement:\u003c/strong\u003e Don’t just count users, analyze their worth. Users interact with apps on large screens differently. The large screen often leads to longer sessions and more immersive experiences. As mentioned above, usage data shows that engagement time increases significantly for users who interact with apps on both their phone and tablet, as compared to phone only users.\u003c/li\u003e\u003cli id=\"b532\"\u003e\u003cstrong\u003eMarket evolution:\u003c/strong\u003e The Android device ecosystem is continuing to evolve. With the rise of foldables, upcoming \u003ca href=\"https://android-developers.googleblog.com/2025/06/developer-preview-enhanced-android-desktop-experiences-connected-displays.html\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003econnected displays support\u003c/a\u003e in Android 16, and form factors like XR and Android Auto, adaptive design is now more critical than ever. Building for a specific screen size creates technical debt, and may slow your development velocity and compromise the product quality in the long run.\u003c/li\u003e\u003c/ol\u003e\u003ch2 id=\"cb57\"\u003eOkay, I am convinced. Where do I start?\u003c/h2\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"0233\"\u003eFor organizations ready to move forward, Android offers many resources and developer tools to optimize apps to be adaptive. See below for how to get started:\u003c/p\u003e\u003ch2 id=\"1482\"\u003e\u003cstrong\u003e1: Check how your app looks on large screens today\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"34ae\"\u003eBegin by looking at your app’s current state on tablets, foldables (in different postures), Chromebooks, and environments like desktop windowing. Confirm if your app is available on these devices or if you are unintentionally leaving out these users by requiring \u003ca href=\"https://android-developers.googleblog.com/2023/12/increase-your-apps-availability-across-device-types.html\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eunnecessary features\u003c/a\u003e within your app.\u003c/p\u003e\u003ch2 id=\"6983\"\u003e\u003cstrong\u003e2: Address common UI issues\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"2cae\"\u003eAssess what feels awkward in your app UI today. We have a lot of guidance available on how you can easily translate your mobile app to other screens.\u003c/p\u003e\u003cp id=\"72f3\"\u003ea) Check the \u003ca href=\"https://developer.android.com/large-screens/gallery\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eLarge screens design gallery\u003c/a\u003e for inspiration and understanding how your app UI can evolve across devices using proven solutions to common UI challenges.\u003c/p\u003e\u003cp id=\"d10b\"\u003eb) Start with quick wins. For example, prevent buttons from stretching to the full screen width, or switch to a vertical navigation bar on large screens to improve ergonomics.\u003c/p\u003e\u003cp id=\"8ded\"\u003ec) Identify patterns where \u003ca href=\"https://developer.android.com/develop/ui/compose/layouts/adaptive/canonical-layouts\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ecanonical layouts\u003c/a\u003e (e.g. list-detail) could solve any UI awkwardness you identified. Could a list-detail view improve your app’s navigation? Would a supporting pane on the side make better use of the extra space than a bottom sheet?\u003c/p\u003e\u003ch2 id=\"92b3\"\u003e\u003cstrong\u003e3: Optimize your app incrementally, screen by screen\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"0595\"\u003eIt may be helpful to prioritize how you approach optimization because not everything needs to be perfectly adaptive on day one. Incrementally improve your app based on what matters most — it’s not all or nothing.\u003c/p\u003e\u003cp id=\"3c7d\"\u003ea) Start with the foundations. Check out the \u003ca href=\"https://developer.android.com/docs/quality-guidelines/large-screen-app-quality\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003elarge screen app quality guidelines\u003c/a\u003e which tier and prioritize the fixes that are most critical to users. Remove orientation restrictions to support portrait and landscape, and ensure support for resizability (for when users are in split screen), and prevent major stretching of buttons, text fields, and images. These foundational fixes are critical, especially with API changes in Android 16 that will make these aspects even more important.\u003c/p\u003e\u003cp id=\"75db\"\u003eb) Implement adaptive layout optimizations with a focus on core user journeys or screens first.\u003c/p\u003e\u003cp id=\"9ba6\"\u003ei. Identify screens where optimizations (for example a \u003ca href=\"https://m3.material.io/foundations/layout/canonical-layouts/list-detail\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003etwo-pane layout\u003c/a\u003e) offer the biggest UX win\u003c/p\u003e\u003cp id=\"5370\"\u003eii. And then proceed to screens or parts of the app that are not as often used on large screens\u003c/p\u003e\u003cp id=\"f8df\"\u003ec) Support input methods beyond touch, including keyboard, mouse, trackpad, and stylus input. With new form factors and connected displays support, this sets users up to interact with your UI seamlessly.\u003c/p\u003e\u003cp id=\"d294\"\u003ed) Add differentiating hero user experiences like support for tabletop mode or dual-screen mode on foldables. This can happen on a per-use-case basis — for example, tabletop mode is great for watching videos, and dual screen mode is great for video calls.\u003c/p\u003e\u003cp id=\"9088\"\u003eWhile there’s an upfront investment in adopting adaptive principles (using tools like Jetpack Compose and window size classes), the long-term payoff may be significant. By designing and building features once, and letting them adapt across screen sizes, the benefits outweigh the cost of creating multiple bespoke layouts. Check out the adaptive apps \u003ca href=\"https://developer.android.com/adaptive-apps\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003edeveloper guidance\u003c/a\u003e for more.\u003c/p\u003e\u003ch2 id=\"56fd\"\u003eUnlock your app’s potential with adaptive app design\u003c/h2\u003e\u003cp id=\"eef8\"\u003eThe message for my fellow product managers, decision-makers, and businesses is clear: \u003cstrong\u003eadaptive design will uplevel your app\u003c/strong\u003e for high-quality Android experiences in 2025 and beyond. An adaptive, responsive UI is the scalable way to support the many devices in Android without developing on a per-form factor basis. If you ignore the diverse device ecosystem of foldables, tablets, Chromebooks, and emerging form factors like XR and cars, your business is accepting hidden costs from negative user reviews, lower discovery in Play, increased technical debt, and missed opportunities for increased user engagement and user acquisition.\u003c/p\u003e\u003cp id=\"4a8c\"\u003eMaximize your apps’ impact and unlock new user experiences. Learn more about \u003ca href=\"https://developer.android.com/adaptive-apps\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ebuilding adaptive apps\u003c/a\u003e today.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "11 min read",
  "publishedTime": "2025-06-10T18:06:14.708Z",
  "modifiedTime": null
}
