{
  "id": "a81a68f1-0eda-4eee-b870-a8b64ed8c019",
  "title": "The First Developer Preview of Android 16",
  "link": "http://android-developers.googleblog.com/2024/11/the-first-developer-preview-android16.html",
  "description": "",
  "author": "Android Developers",
  "published": "2024-11-18T11:00:00.000-08:00",
  "source": "http://feeds.feedburner.com/blogspot/hsDu",
  "categories": [
    "Android",
    "android16",
    "Developer Preview",
    "Featured",
    "latest"
  ],
  "byline": "",
  "length": 7426,
  "excerpt": "The first Developer Preview of Android 16 is available now, featuring faster API releases, new API level constants, an embedded photo picker and more.",
  "siteName": "Android Developers Blog",
  "favicon": "",
  "text": "Posted by Matthew McCullough – VP of Product Management, Android Developer Android 16 Developer Preview 1 is available now to test with your apps. This is the start of Android having more frequent API releases as part of our effort to drive faster innovation in apps and devices. Two Android API releases in 2025 This preview is for the next major release of Android with a planned launch in Q2 of 2025. This release is similar to all of our API releases in the past, where we can have planned behavior changes that are often tied to a targetSdkVersion. We’re planning the major release a quarter earlier (Q2 rather than Q3 in prior years) to better align with the schedule of device launches across our ecosystem, so more devices can get the major release of Android sooner. With the major release coming in Q2, you’ll need to do your annual compatibility testing a few months earlier than in previous years to make sure your apps are ready. We plan to have another release in Q4 of 2025 which also will include new developer APIs. The Q2 major release will be the only release in 2025 to include planned behavior changes that could affect apps. In addition to new developer APIs, the Q4 minor release will pick up feature updates, optimizations, and bug fixes; it will not include any app-impacting behavior changes. We'll continue to have quarterly Android releases. The Q1 and Q3 updates in-between the API releases will provide incremental updates to help ensure continuous quality. We’re actively working with our device partners to bring the Q2 release to as many devices as possible. Using new APIs with major and minor releases Guarding a code block with a check for Android's API level is done today using the SDK_INT constant with VERSION_CODES. This will continue to be supported for major Android releases. if (SDK_INT \u003e= VERSION_CODES.BAKLAVA) { // Use APIs introduced in Android 16 } The new SDK_INT_FULL constant can be used for API checks against both major and minor versions with the new VERSION_CODES_FULL enumeration. if (SDK_INT_FULL \u003e= VERSION_CODES_FULL.[MAJOR or MINOR RELEASE]) { // Use APIs introduced in a major or minor release } You can also use the Build.getMinorSdkVersion() method to get just the minor SDK version. val minorSdkVersion = Build.getMinorSdkVersion(VERSION_CODES_FULL.BAKLAVA) These APIs have not yet been finalized and are subject to change, so please send us feedback if you have any concerns. Note that there’s no change to the target API level requirements and the associated dates for apps in Google Play; our plans are for one annual requirement each year, and that will be tied to the major API level. Embedded photo picker The photo picker provides a safe, built-in way for users to grant your app access to selected images and videos from both local and cloud storage, instead of their entire media library. Using a combination of Modular System Components through Google System Updates and Google Play services, it's supported back to Android 4.4 (API level 19). Integration requires just a few lines of code with the associated Android Jetpack library. The developer preview includes new APIs that enable apps to embed the photo picker into their view hierarchy. This allows it to feel like a more integrated part of the app while still leveraging the process isolation that allows users to select media without the app needing overly-broad permissions. To maximize compatibility across platform versions and simplify your integration, you'll want to use the forthcoming Android Jetpack library if you wish to integrate the embedded photo picker. Health records The developer preview of Health Connect contains an early version of APIs supporting health records. This allows apps to read and write medical records in FHIR format with explicit user consent. This API is currently in an early access program. Sign up to be part of our early access program. Privacy Sandbox on Android Android 16 incorporates the latest version of the Privacy Sandbox on Android, part of our ongoing work to develop technologies where users know their privacy is protected. Our website has more about the Privacy Sandbox on Android developer beta program to help you get started. Check out the SDK Runtime which allows SDKs to run in a dedicated runtime environment separate from the app they are serving, providing stronger safeguards around user data collection and sharing. How to get ready In addition to performing compatibility testing on the next major release, make sure that you're compiling your apps against the new SDK, and use the compatibility framework to enable targetSdkVersion-gated behavior changes as they become available for early testing. App compatibility The Android 16 Preview program runs from November 2024 until the final public release next year. At key development milestones, we'll deliver updates for your development and testing environments. Each update includes SDK tools, system images, emulators, API reference, and API diffs. We'll highlight critical APIs as they are ready to test in the preview program in blogs and on the Android 16 developer website. We’re targeting Late Q1 of 2025 for our Platform Stability milestone. At this milestone, we’ll deliver final SDK/NDK APIs and also final internal APIs and app-facing system behaviors. We’re expecting to reach Platform Stability in March 2025, and from that time you’ll have several months before the official release to do your final testing. Visit our Android Developers site for details on the release timeline. Get started with Android 16 You can get started today with Developer Preview 1 by flashing a system image and updating the tools. We're looking for your feedback so please report issues and submit feature requests on the feedback page. The earlier we get your feedback, the more we can include in the final release. For the best development experience with Android 16, we recommend that you use the latest preview of the Android Studio Ladybug feature drop. Once you’re set up, here are some of the things you should do: Compile against the new SDK, test in CI environments, and report any issues in our tracker on the feedback page. Test your current app for compatibility, learn whether your app is affected by changes in Android 16, and install your app onto a device or emulator running Android 16 and extensively test it. We’ll update the preview system images and SDK regularly throughout the Android 16 release cycle. This initial preview release is for developers only and not intended for daily or consumer use, so we're making it available by manual download only. Once you’ve manually installed a preview build, you’ll automatically get future updates over-the-air for all later previews and Betas. Visit the Android developer website for further information on Android updates. If you've already installed Beta 1 from the Android 15 QPR2 Beta program, you will not be able to move to the Android 16 Developer Preview program without wiping your device. Consider avoiding installing future betas to transition to the next developer preview build without a data wipe. As we reach our Beta releases, we'll be inviting consumers to try Android 16 as well, and we'll open up enrollment for Android 16 in the Android Beta program at that time. For complete information, visit the Android 16 developer site.",
  "image": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEipxy9M_N_1ALvqd9gX2gr49EHwhZl5la4BL6IuD4HOQ6DYUAkIU3riaDVpFiLKFoCfW5PZk1gRfcp8o5DBmuayvSK3irYNGK0uyAkWS6lpLHQuUIO4ddYm88Q33bvMbcAGfTvn4ZqnIskRuMvOZh3WputmbIzxrdTH5Jzd79qXMh_1qIEzkwg6EWKNwxU/w1200-h630-p-k-no-nu/A16DP1-Feature%20%281%29.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\u003cmeta content=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEipxy9M_N_1ALvqd9gX2gr49EHwhZl5la4BL6IuD4HOQ6DYUAkIU3riaDVpFiLKFoCfW5PZk1gRfcp8o5DBmuayvSK3irYNGK0uyAkWS6lpLHQuUIO4ddYm88Q33bvMbcAGfTvn4ZqnIskRuMvOZh3WputmbIzxrdTH5Jzd79qXMh_1qIEzkwg6EWKNwxU/s1600/A16DP1-Feature%20%281%29.png\" name=\"twitter:image\"/\u003e\n\u003cp\u003e\n\n\u003cem\u003e Posted by Matthew McCullough – VP of Product Management, Android Developer\u003c/em\u003e\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgzSaHHuD_g2OfrXVDWsS3bG2buhYeEinrxt3WYp0qqEiv6QfR_QxJguw_gUprGOtbfkN6rZ-C2vUPzEYBpdoQKga4DqTbqulMDiuD2ECzZSs6-XrBPslsgGBGB-s03DoPQAu1Vxt1CDn4Xsugru5SuOaLjBKatTZ_RjcSrjHsy2v4qtlyIwca0I5-BCh4/s1600/android_16_platlogo_512px.png\"\u003e\u003cimg data-original-height=\"1024\" data-original-width=\"1024\" height=\"320\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgzSaHHuD_g2OfrXVDWsS3bG2buhYeEinrxt3WYp0qqEiv6QfR_QxJguw_gUprGOtbfkN6rZ-C2vUPzEYBpdoQKga4DqTbqulMDiuD2ECzZSs6-XrBPslsgGBGB-s03DoPQAu1Vxt1CDn4Xsugru5SuOaLjBKatTZ_RjcSrjHsy2v4qtlyIwca0I5-BCh4/w320-h320/android_16_platlogo_512px.png\" width=\"320\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eAndroid 16 Developer Preview 1 is available now to test with your apps. This is the start of Android having more frequent API releases as part of our effort to drive faster innovation in apps and devices.\u003c/p\u003e\n\n\u003ch3\u003eTwo Android API releases in 2025\u003c/h3\u003e\n\n\u003cul\u003e\u003cul\u003e\n\u003cli\u003eThis preview is for the next major release of Android with a planned launch in Q2 of 2025. This release is similar to all of our API releases in the past, where we can have planned behavior changes that are often tied to a \u003cspan\u003etargetSdkVersion\u003c/span\u003e.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\n\n\u003cli\u003eWe’re planning the major release a quarter earlier (Q2 rather than Q3 in prior years) to better align with the schedule of device launches across our ecosystem, so more devices can get the major release of Android sooner. With the major release coming in Q2, you’ll need to do your annual compatibility testing a few months earlier than in previous years to make sure your apps are ready.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\n  \n\u003cli\u003eWe plan to have another release in Q4 of 2025 which also will include new developer APIs. The Q2 major release will be the only release in 2025 to include planned behavior changes that could affect apps.\u003c/li\u003e \n\u003c/ul\u003e\u003c/ul\u003e\n  \n\u003cp\u003eIn addition to new developer APIs, the Q4 minor release will pick up feature updates, optimizations, and bug fixes; it will not include any app-impacting behavior changes.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"A timeline shows the release schedule for software development kits (SDKs), marked as 25Q1 through 25Q4.  25Q2 is a major release with behavior changes, APIs, and features, while 25Q4 is a minor release with APIs and features; 25Q1 and 25Q3 include features only.\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiAaLP-m3QRddUjzrMlgC-uH0casI6gqtooaIPGwldGS-pbcotGLA2jKeBWjjpHBm7D8c6TkYWIwIqne_ajvA5N8KpXt8ZqOfHXqrHYVin5SbxlZsqkMA0KELPl9YbO1H7D49SCKAhnkp-wnH6EWuVzVDAaWmXRzlTgmY15n-Dj4bEHqEuFurdIqvrcjyE/s1600/image3.png\" width=\"640\"/\u003e\u003c/p\u003e\n\n\n\u003cp\u003eWe\u0026#39;ll continue to have quarterly Android releases. The Q1 and Q3 updates  in-between the API releases will provide incremental updates to help ensure continuous quality. We’re actively working with our device partners to bring the Q2 release to as many devices as possible.\u003c/p\u003e\n\n\u003ciframe allowfullscreen=\"\" height=\"413\" src=\"https://www.youtube.com/embed/tU9-p4jME_w\" width=\"100%\" youtube-src-id=\"tU9-p4jME_w\"\u003e\u003c/iframe\u003e\n\n\u003ch3\u003eUsing new APIs with major and minor releases\u003c/h3\u003e\n\n\u003cp\u003eGuarding a code block with a check for Android\u0026#39;s API level is done today using the \u003cspan\u003e\u003ca href=\"https://developer.android.com/reference/android/os/Build.VERSION#SDK_INT\" target=\"_blank\"\u003eSDK_INT\u003c/a\u003e\u003c/span\u003e constant with \u003cspan\u003e\u003ca href=\"https://developer.android.com/reference/android/os/Build.VERSION_CODES\" target=\"_blank\"\u003eVERSION_CODES\u003c/a\u003e\u003c/span\u003e. This will continue to be supported for major Android releases.\u003c/p\u003e\n\n\u003cdiv\u003e\u003cpre\u003e\u003cspan\u003eif\u003c/span\u003e (SDK_INT \u0026gt;= VERSION_CODES.BAKLAVA) {\n  \u003cspan\u003e// Use APIs introduced in Android 16\u003c/span\u003e\n}\n\u003c/pre\u003e\u003c/div\u003e\n\n\u003cp\u003eThe new \u003cspan\u003e\u003ca href=\"https://developer.android.com/reference/android/os/Build.VERSION#SDK_INT_FULL\" target=\"_blank\"\u003eSDK_INT_FULL\u003c/a\u003e\u003c/span\u003e constant can be used for API checks against both major and minor versions with the new \u003cspan\u003e\u003ca href=\"https://developer.android.com/reference/android/os/Build.VERSION_CODES_FULL\" target=\"_blank\"\u003eVERSION_CODES_FULL\u003c/a\u003e\u003c/span\u003e enumeration.\u003c/p\u003e\n\n\u003cdiv\u003e\u003cpre\u003e\u003cspan\u003eif\u003c/span\u003e (SDK_INT_FULL \u0026gt;= VERSION_CODES_FULL.[MAJOR or MINOR RELEASE]) {\n  \u003cspan\u003e// Use APIs introduced in a major or minor release\u003c/span\u003e\n}\n\u003c/pre\u003e\u003c/div\u003e\n\n\u003cp\u003eYou can also use the \u003cspan\u003e\u003ca href=\"https://developer.android.com/reference/android/os/Build#getMinorSdkVersion%28int%29\" target=\"_blank\"\u003eBuild.getMinorSdkVersion()\u003c/a\u003e\u003c/span\u003e method to get just the minor SDK version.\u003c/p\u003e\n\n\u003cdiv\u003e\u003cpre\u003e\u003cspan\u003eval\u003c/span\u003e minorSdkVersion = Build.getMinorSdkVersion(VERSION_CODES_FULL.BAKLAVA)\n\u003c/pre\u003e\u003c/div\u003e\n\n\u003cp\u003eThese APIs have not yet been finalized and are subject to change, so please send us \u003ca href=\"https://developer.android.com/about/versions/16/feedback\" target=\"_blank\"\u003efeedback\u003c/a\u003e if you have any concerns.\u003c/p\u003e\n\n\u003cblockquote\u003eNote that there’s no change to the target API level requirements and the associated dates for apps in Google Play; our plans are for one annual requirement each year, and that will be tied to the major API level.\u003c/blockquote\u003e\n  \n\u003ch3\u003eEmbedded photo picker\u003c/h3\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://developer.android.com/training/data-storage/shared/photopicker\" target=\"_blank\"\u003ephoto picker\u003c/a\u003e provides a safe, built-in way for users to grant your app access to selected images and videos from both local and cloud storage, instead of their entire media library. Using a combination of  \u003ca href=\"https://source.android.com/devices/architecture/modular-system\" target=\"_blank\"\u003eModular System Components\u003c/a\u003e through \u003ca href=\"https://support.google.com/product-documentation/answer/11412553\" target=\"_blank\"\u003eGoogle System Updates\u003c/a\u003e and \u003ca href=\"https://developers.google.com/android/guides/overview\" target=\"_blank\"\u003eGoogle Play services\u003c/a\u003e, it\u0026#39;s supported back to \u003ca href=\"https://developer.android.com/reference/android/os/Build.VERSION_CODES#KITKAT\" target=\"_blank\"\u003eAndroid 4.4 (API level 19)\u003c/a\u003e. Integration requires just a few lines of code with the associated \u003ca href=\"https://developer.android.com/jetpack/androidx/releases/activity\" target=\"_blank\"\u003eAndroid Jetpack library\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe developer preview \u003ca href=\"https://developer.android.com/reference/android/widget/photopicker/package-summary\" target=\"_blank\"\u003eincludes new APIs\u003c/a\u003e that enable apps to embed the photo picker into their view hierarchy. This allows it to feel like a more integrated part of the app while still leveraging the process isolation that allows users to select media without the app needing overly-broad permissions. To maximize compatibility across platform versions and simplify your integration, you\u0026#39;ll want to use the forthcoming Android Jetpack library if you wish to integrate the embedded photo picker.\u003c/p\u003e\n\n\u003ch3\u003eHealth records\u003c/h3\u003e\n\n\u003cp\u003eThe developer preview of Health Connect contains an early version of APIs supporting health records. This allows apps to read and write medical records in FHIR format with explicit user consent. This API is currently in an early access program. Sign up to be part of our \u003ca href=\"https://forms.gle/43HJz4Fm2UQLWy5W8\" target=\"_blank\"\u003eearly access program\u003c/a\u003e.\n\n\u003c/p\u003e\u003ch3\u003ePrivacy Sandbox on Android\u003c/h3\u003e\n\n\u003cp\u003eAndroid 16 incorporates the latest version of the \u003ca href=\"https://developers.google.com/privacy-sandbox/overview/android\" target=\"_blank\"\u003ePrivacy Sandbox on Android\u003c/a\u003e, part of our ongoing work to develop technologies where users know their privacy is protected. Our \u003ca href=\"https://developer.android.com/design-for-safety/privacy-sandbox/program-overview\" target=\"_blank\"\u003ewebsite has more\u003c/a\u003e about the Privacy Sandbox on Android developer beta program to help you get started. Check out the \u003ca href=\"https://developers.google.com/privacy-sandbox/private-advertising/sdk-runtime\" target=\"_blank\"\u003eSDK Runtime\u003c/a\u003e which allows SDKs to run in a dedicated runtime environment separate from the app they are serving, providing stronger safeguards around user data collection and sharing.\u003c/p\u003e\n\n\u003ch3\u003eHow to get ready\u003c/h3\u003e\n\n\u003cp\u003eIn addition to performing compatibility testing on the next major release, make sure that you\u0026#39;re compiling your apps against the new SDK, and use the compatibility framework to enable \u003cspan\u003etargetSdkVersion\u003c/span\u003e-gated behavior changes as they become available for early testing.\u003c/p\u003e\n\n\u003ch3\u003eApp compatibility\u003c/h3\u003e\n\n\u003cp\u003e\u003cimg alt=\"A timeline shows the release stages of a product from November 2024 to the final release after April 2025.\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgxJjYTjZ-hHP2hPtBvkX2AH4TxOpKIq1Ml2QBlHxqNEg0pfItX6_0M9f1du8_xjJAev-bl2oiPaHZQRteNswfkbPwsqW3v3KqKpGeQS3Odit1bmNYq6WuKtNUqiVAXfoNj1lQO1oQGI6fb0jx45Vthj2WUQbaM0nbOezdgUVoorGeeBMVMTQyJ1f175fI/s1600/image1.png\" width=\"640\"/\u003e\u003c/p\u003e\n\n\n\u003cp\u003eThe Android 16 Preview program runs from November 2024 until the final public release next year. At key development milestones, we\u0026#39;ll deliver updates for your development and testing environments. Each update includes SDK tools, system images, emulators, API reference, and API diffs. We\u0026#39;ll highlight critical APIs as they are ready to test in the preview program in blogs and on the \u003ca href=\"https://developer.android.com/about/versions/16\" target=\"_blank\"\u003eAndroid 16 developer website.\u003c/a\u003e\u003c/p\u003e\n  \n\u003cp\u003eWe’re targeting Late Q1 of 2025 for our Platform Stability milestone. At this milestone, we’ll deliver final SDK/NDK APIs and also final internal APIs and app-facing system behaviors. We’re expecting to reach Platform Stability in March 2025, and from that time you’ll have several months before the official release to do your final testing. Visit our Android Developers site for \u003ca href=\"https://developer.android.com/about/versions/16/overview#timeline\" target=\"_blank\"\u003edetails on the release timeline\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003eGet started with Android 16\u003c/h3\u003e\n\n\u003cp\u003eYou can get started today with Developer Preview 1 by \u003ca href=\"https://developer.android.com/about/versions/16/get\" target=\"_blank\"\u003eflashing a system image\u003c/a\u003e and \u003ca href=\"https://developer.android.com/about/versions/16/setup-sdk\" target=\"_blank\"\u003eupdating the tools\u003c/a\u003e. We\u0026#39;re looking for your feedback so please \u003ca href=\"https://developer.android.com/about/versions/16/feedback\" target=\"_blank\"\u003ereport issues and submit feature requests on the feedback page\u003c/a\u003e. The earlier we get your feedback, the more we can include in the final release.\u003c/p\u003e\n  \n\u003cp\u003eFor the best development experience with Android 16, we recommend that you use the \u003ca href=\"https://developer.android.com/studio/preview\" target=\"_blank\"\u003elatest preview of the Android Studio Ladybug feature drop\u003c/a\u003e. Once you’re set up, here are some of the things you should do:\u003c/p\u003e\n\u003cul\u003e\u003cul\u003e\n\u003cli\u003eCompile against the new SDK, test in CI environments, and report any issues in our tracker on the \u003ca href=\"https://developer.android.com/about/versions/16/feedback\" target=\"_blank\"\u003efeedback page\u003c/a\u003e.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\n\u003cli\u003eTest your current app for compatibility, learn whether your app is affected by changes in Android 16, and install your app onto a device or emulator running Android 16 and extensively test it.\u003c/li\u003e\u003c/ul\u003e\u003c/ul\u003e\n\n\u003cp\u003eWe’ll update the preview system images and SDK regularly throughout the Android 16 release cycle. This initial preview release is for developers only and not intended for daily or consumer use, so we\u0026#39;re making it available by manual download only. Once you’ve manually installed a preview build, you’ll automatically get future updates over-the-air for all later previews and Betas. Visit the Android developer website for \u003ca href=\"https://developer.android.com/about/versions/16/overview#pixel\" target=\"_blank\"\u003efurther information on Android updates\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf you\u0026#39;ve already installed Beta 1 from the \u003ca href=\"https://developer.android.com/about/versions/15/get-qpr\" target=\"_blank\"\u003eAndroid 15 QPR2 Beta program\u003c/a\u003e, you will not be able to move to the Android 16 Developer Preview program without wiping your device.  Consider avoiding installing future betas to transition to the next developer preview build without a data wipe.\u003c/p\u003e \n\n\u003cp\u003eAs we reach our Beta releases, we\u0026#39;ll be inviting consumers to try Android 16 as well, and we\u0026#39;ll open up enrollment for Android 16 in the Android Beta program at that time.\u003c/p\u003e\n\n\u003cp\u003eFor complete information, visit the \u003ca href=\"https://developer.android.com/about/versions/16\" target=\"_blank\"\u003eAndroid 16 developer site\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "8 min read",
  "publishedTime": null,
  "modifiedTime": null
}
