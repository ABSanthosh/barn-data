{
  "id": "77ad1778-4d2c-42d4-b22a-21dd30ac6783",
  "title": "Announcing Kotlin Multiplatform Shared Module Template",
  "link": "http://android-developers.googleblog.com/2025/05/kotlin-multiplatform-shared-module-templates.html",
  "description": "",
  "author": "Android Developers",
  "published": "2025-05-20T15:00:00.000-07:00",
  "source": "http://feeds.feedburner.com/blogspot/hsDu",
  "categories": [
    "Android Development",
    "Android Studio",
    "code sharing",
    "cross-platform development",
    "DataStore",
    "iOS development",
    "Jetpack Libraries",
    "KMP",
    "Kotlin",
    "Kotlin Multiplatform",
    "KotlinConf 2025",
    "Room",
    "SQLite"
  ],
  "byline": "",
  "length": 4623,
  "excerpt": "Explore Android Studio's new Kotlin Multiplatform Shared Module Template designed to simplify cross-platform development across Android and iOS apps.",
  "siteName": "Android Developers Blog",
  "favicon": "",
  "text": "Posted by Ben Trengrove - Developer Relations Engineer, Matt Dyor - Product Manager To empower Android developers, we’re excited to announce Android Studio’s new Kotlin Multiplatform (KMP) Shared Module Template. This template was specifically designed to allow developers to use a single codebase and apply business logic across platforms. More specifically, developers will be able to add shared modules to existing Android apps and share the business logic across their Android and iOS applications. This makes it easier for Android developers to craft, maintain, and most importantly, own the business logic. The KMP Shared Module Template is available within Android Studio when you create a new module within a project. Shared Module Templates are found under the New Module tab A single code base for business logic Most developers have grown accustomed to maintaining different code bases, platform to platform. In the past, whenever there’s an update to the business logic, it must be carefully updated in each codebase. But with the KMP Shared Module Template: Developers can write once and publish the business logic to wherever they need it. Engineering teams can do more faster. User experiences are more consistent across the entire audience, regardless of platform or form factor. Releases are better coordinated and launched with fewer errors. Customers and developer teams who adopt KMP Shared Module Templates should expect to achieve greater ROI from mobile teams who can turn their attention towards delighting their users more and worrying about inconsistent code less. KMP enthusiasm The Android developer community remains very excited about KMP, especially after Google I/O 2024 where Google announced official support for shared logic across Android and iOS. We have seen continued momentum and enthusiasm from the community. For example, there are now over 1,500 KMP libraries listed on JetBrains' klibs.io. Our customers are excited because KMP has made Android developers more productive. Consistently, Android developers have said that they want solutions that allow them to share code more easily and they want tools which boost productivity. This is why we recommend KMP; KMP simultaneously delivers a great experience for Android users while boosting ROI for the app makers. The KMP Shared Module Template is the latest step towards a developer ecosystem where user experience is consistent and applications are updated seamlessly. Large scale KMP adoptions This KMP Shared Module Template is new, but KMP more broadly is a maturing technology with several large-scale migrations underway. In fact, KMP has matured enough to support mission critical applications at Google. Google Docs, for example, is now running KMP in production on iOS with runtime performance on par or better than before. Beyond Google, Stone’s 130 mobile developers are sharing over 50% of their code, allowing existing mobile teams to ship features approximately 40% faster to both Android and iOS. KMP was designed for Android development As always, we've designed the Shared Module Template with the needs of Android developer teams in mind. Making the KMP Shared Module Template part of the native Android Studio experience allows developers to efficiently add a shared module to an existing Android application and immediately start building shared business logic that leverages several KMP-ready Jetpack libraries including Room, SQLite, and DataStore to name just a few. Come check it out at KotlinConf Releasing Android Studio’s KMP Shared Module Template marks a significant step toward empowering Android development teams to innovate faster, to efficiently manage business logic, and to build high-quality applications with greater confidence. It means that Android developers can be responsible for the code that drives the business logic for every app across Android and iOS. We’re excited to bring Shared Module Template to KotlinConf in Copenhagen, May 21 - 23. Get started with KMP Shared Module Template To get started, you'll need the latest edition of Android Studio. In your Android project, the Shared Module Template is available within Android Studio when you create a new module. Click on “File” then “New” then “New Module” and finally “Kotlin Multiplatform Shared Module” and you are ready to add a KMP Shared Module to your Android app. We appreciate any feedback on things you like or features you would like to see. If you find a bug, please report the issue. Remember to also follow us on X, LinkedIn, Blog, or YouTube for more Android development updates!",
  "image": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi2UwvjbFzf_BidFrger9mzJQmJ61A9kJAU5ENv_32s55N6fh3GVFLtz47TAl1Ax3mWkk3ltsaDFubqlqDHfX6y0WYax4Je92Zlebv-qih3X68zHR1MD8xEkkK7cPXCexw69PLzkKPzEQ8NQPAHNjhc7TLSVRRasiTDa_sIPDn144dN9D5hT9A_XwlkJ-o/w1200-h630-p-k-no-nu/Op2_AndroidKoitlin_Multiplatform_SharedModule_Blogger.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\u003cmeta content=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi2UwvjbFzf_BidFrger9mzJQmJ61A9kJAU5ENv_32s55N6fh3GVFLtz47TAl1Ax3mWkk3ltsaDFubqlqDHfX6y0WYax4Je92Zlebv-qih3X68zHR1MD8xEkkK7cPXCexw69PLzkKPzEQ8NQPAHNjhc7TLSVRRasiTDa_sIPDn144dN9D5hT9A_XwlkJ-o/s1600/Op2_AndroidKoitlin_Multiplatform_SharedModule_Blogger.png\" name=\"twitter:image\"/\u003e\n\u003cp\u003e\n\n\u003cem\u003ePosted by Ben Trengrove - Developer Relations Engineer, Matt Dyor - Product Manager\u003c/em\u003e\n\n\u003ca href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgQeI-Ng_f6_CGYh-v9eO-sy0P3PTXLcfl6GLOqSZoH9GJ6XWx0h0-9f23NYL8f2gV-TRGQzOtjKH5Jj8IUa70Gc_lgZWi_158AcAkYd98kBWGoW7necXpKtHQK8821bIgjY1m8hlso0kMTr3gw10liioR0c0YUY0tI9boFGOcvCKKZsJEm1C63UPKNEfE/s1600/Op2_AndroidKoitlin_Multiplatform_SharedModule_Hero_Blog.png\"\u003e\u003cimg data-original-height=\"800\" data-original-width=\"100%\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgQeI-Ng_f6_CGYh-v9eO-sy0P3PTXLcfl6GLOqSZoH9GJ6XWx0h0-9f23NYL8f2gV-TRGQzOtjKH5Jj8IUa70Gc_lgZWi_158AcAkYd98kBWGoW7necXpKtHQK8821bIgjY1m8hlso0kMTr3gw10liioR0c0YUY0tI9boFGOcvCKKZsJEm1C63UPKNEfE/s1600/Op2_AndroidKoitlin_Multiplatform_SharedModule_Hero_Blog.png\"/\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003eTo empower Android developers, we’re excited to announce Android Studio’s new Kotlin Multiplatform (KMP) Shared Module Template. This template was specifically designed to allow developers to use a single codebase and apply business logic across platforms. More specifically, developers will be able to add shared modules to existing Android apps and share the business logic across their Android and iOS applications.\u003c/p\u003e\n\n\u003cp\u003eThis makes it easier for Android developers to craft,  maintain, and most importantly, own the  business logic. The \u003cb\u003eKMP Shared Module Template\u003c/b\u003e is available within Android Studio when you create a new module within a project.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"a screen shot of the new module tab in Android Studio\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjDB0ElhUV2jcJKU98tUhA81TvYEn6FzSIDIlgrfr-bIeTvYdM81iGhhmIf02isCk11k9um51JZaIerFZxvzSP6RMMRVcXaNGzHeK0YACo6sZZO7FWaPscCatJdns3VB3ftchu3ZXeP6bUR7c8U4JJq5R7bAWbabMqWHe3oA7CkraAYHWAQ1QRD3ZNtckg/s16000/shared-module-template-new-module-tab-kotlin-multiplatform-google-io.png\"/\u003e\u003c/p\u003e\u003cimgcaption\u003e\u003ccenter\u003e\u003cem\u003eShared Module Templates are found under the New Module tab\u003c/em\u003e\u003c/center\u003e\u003c/imgcaption\u003e\u003cbr/\u003e\n\n\u003ch2\u003e\u003cspan\u003eA single code base for business logic\u003c/span\u003e\u003c/h2\u003e\n\n\u003cp\u003eMost developers have grown accustomed to maintaining different code bases, platform to platform.  In the past, whenever there’s an update to the business logic, it must be carefully updated in each codebase. But with the KMP Shared Module Template:\u003c/p\u003e\n\n\u003cul\u003e\u003cul\u003e\n\u003cli\u003eDevelopers can write once and publish the business logic to wherever they need it.\u003c/li\u003e\n\u003cli\u003eEngineering teams can do more faster.\u003c/li\u003e\n\u003cli\u003eUser experiences are more consistent across the entire audience, regardless of platform or form factor.\u003c/li\u003e\n\u003cli\u003eReleases are better coordinated and launched with fewer errors.\u003c/li\u003e\n\u003c/ul\u003e\u003c/ul\u003e\n\n\u003cp\u003eCustomers and developer teams who adopt KMP Shared Module Templates should expect to achieve greater ROI from mobile teams who can turn their attention towards delighting their users more and worrying about inconsistent code less.\u003c/p\u003e\n\n\u003ch2\u003e\u003cspan\u003eKMP enthusiasm\u003c/span\u003e\u003c/h2\u003e\n\u003cp\u003eThe Android developer community remains very excited about KMP, especially after Google I/O 2024 where Google announced official support for shared logic across Android and iOS. We have seen continued momentum and enthusiasm from the community. For example, there are now over 1,500 KMP libraries listed on JetBrains\u0026#39; \u003ca href=\"https://klibs.io/\" target=\"_blank\"\u003eklibs.io\u003c/a\u003e.\u003c/p\u003e \n\n\u003cp\u003eOur customers are excited because KMP has made Android developers more productive. Consistently, Android developers have said that they want solutions that allow them to share code more easily and they want tools which boost productivity. This is why we recommend KMP; KMP simultaneously delivers a great experience for Android users while boosting ROI for the app makers. The KMP Shared Module Template is the latest step towards a developer ecosystem where user experience is consistent and applications are updated seamlessly.\u003c/p\u003e \n\n\u003ch2\u003e\u003cspan\u003eLarge scale KMP adoptions\u003c/span\u003e\u003c/h2\u003e\n\u003cp\u003eThis KMP Shared Module Template is new, but KMP more broadly is a maturing technology with several large-scale migrations underway.  In fact, KMP has matured enough to support mission critical applications at Google. Google Docs, for example, is now running KMP in production on iOS with runtime performance on par or better than before. Beyond Google, \u003ca href=\"https://www.stoneco.com.br/en/\" target=\"_blank\"\u003eStone’s\u003c/a\u003e 130 mobile developers are sharing over 50% of their code, allowing existing mobile teams to ship features approximately 40% faster to both Android and iOS.\u003c/p\u003e \n\n\u003ch2\u003e\u003cspan\u003eKMP was designed for Android development\u003c/span\u003e\u003c/h2\u003e\n\u003cp\u003eAs always, we\u0026#39;ve designed the Shared Module Template with the needs of Android developer teams in mind. Making the KMP Shared Module Template part of the native Android Studio experience allows developers to efficiently add a shared module to an existing Android application and immediately start building shared business logic that leverages several KMP-ready Jetpack libraries including Room, SQLite, and DataStore to name just a few.\u003c/p\u003e \n\n\u003ch2\u003e\u003cspan\u003eCome check it out at KotlinConf\u003c/span\u003e\u003c/h2\u003e\n\u003cp\u003eReleasing Android Studio’s KMP Shared Module Template marks a significant step toward empowering Android development teams to innovate faster, to efficiently manage business logic, and to build high-quality applications with greater confidence. It means that Android developers can be responsible for the code that drives the business logic for every app across Android and iOS. We’re excited to bring Shared Module Template to \u003ca href=\"https://kotlinconf.com/\" target=\"_blank\"\u003e\u003cb\u003eKotlinConf in Copenhagen, May 21 - 23\u003c/b\u003e\u003c/a\u003e.\u003c/p\u003e \n\n\n\u003cp\u003e\u003cimg alt=\"KotlinConf 2025 Copenhagen Denmark, May 21 Workshops May 22-23 Conference\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj3C2szkC05YnqraA6dkb0Q0PQRoHvGXCE1q67H09RfZ1vzqr3BYzRtblX82Sqzysn2rMsiXKZK3z7rz_YqdKlkkyAiH7hG8GS3THSElpsSoVuAqOMId5S3P1Yhs7wUWbyTwjfM5wHVfCvqFmtxNtmaqzSSt2ke48mnrfihTBqTwviopIU5snnaVald3y0/s1600/kotlinconf-2025-copenhagen-denmark-workshops-conference-google-io.png\"/\u003e\u003c/p\u003e\u003cbr/\u003e\n\n\n\u003ch2\u003e\u003cspan\u003eGet started with KMP Shared Module Template\u003c/span\u003e\u003c/h2\u003e\n\n\u003cp\u003eTo get started, you\u0026#39;ll need the latest edition of Android Studio. In your Android project, the Shared Module Template is available within Android Studio when you create a new module. Click on “File” then “New” then “New Module” and finally “Kotlin Multiplatform Shared Module” and you are ready to add a KMP Shared Module to your Android app.\u003c/p\u003e \n\n\u003cp\u003eWe appreciate any feedback on things you like or features you would like to see. If you find a bug, please report the issue. Remember to also follow us on X, LinkedIn, Blog, or YouTube for more Android development updates!\u003c/p\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": null,
  "modifiedTime": null
}
