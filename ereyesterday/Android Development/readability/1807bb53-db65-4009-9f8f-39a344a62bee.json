{
  "id": "1807bb53-db65-4009-9f8f-39a344a62bee",
  "title": "The Third Beta of Android 16",
  "link": "http://android-developers.googleblog.com/2025/03/the-third-beta-of-android-16.html",
  "description": "",
  "author": "Android Developers",
  "published": "2025-03-13T11:00:00.000-07:00",
  "source": "http://feeds.feedburner.com/blogspot/hsDu",
  "categories": [
    "Android",
    "android16",
    "Beta",
    "Featured",
    "latest"
  ],
  "byline": "",
  "length": 9256,
  "excerpt": "Test your apps for compatibility with Android 16's changes, including those related to JobScheduler, broadcasts, and accessibility.",
  "siteName": "Android Developers Blog",
  "favicon": "",
  "text": "Posted by Matthew McCullough – VP of Product Management, Android Developer Android 16 has officially reached Platform Stability today with Beta 3! That means the API surface is locked, the app-facing behaviors are final, and you can push your Android 16-targeted apps to the Play store right now. Read on for coverage of new security and accessibility features in Beta 3. Android delivers enhancements and new features year-round, and your feedback on the Android beta program plays a key role in helping Android continuously improve. The Android 16 developer site has more information about the beta, including how to get it onto devices and the release timeline. We’re looking forward to hearing what you think, and thank you in advance for your continued help in making Android a platform that benefits everyone. New in Android 16 Beta 3 At this late stage in the development cycle, there are only a few new things in the Android 16 Beta 3 release for you to consider when developing your apps. Broadcast audio support Pixel 9 devices on Android 16 Beta now support Auracast broadcast audio with compatible LE Audio hearing aids, part of Android's work to enhance audio accessibility. Built on the LE Audio standard, Auracast enables compatible hearing aids and earbuds to receive direct audio streams from public venues like airports, concerts, and classrooms. Our Keyword post has more on this technology. Outline text for maximum text contrast Users with low vision often have reduced contrast sensitivity, making it challenging to distinguish objects from their backgrounds. To help these users, Android 16 Beta 3 introduces outline text, replacing high contrast text, which draws a larger contrasting area around text to greatly improve legibility. Android 16 also contains new AccessibilityManager APIs to allow your apps to check or register a listener to see if this mode is enabled. This is primarily for UI Toolkits like Compose to offer a similar visual experience. If you maintain a UI Toolkit library or your app performs custom text rendering that bypasses the android.text.Layout class then you can use this to know when outline text is enabled. Text with enhanced contrast before and after Android 16's new outline text accessibility feature Test your app with Local Network Protection Android 16 Beta 3 adds the ability to test the Local Network Protection (LNP) feature which is planned for a future Android major release. It gives users more control over which apps can access devices on their local network. What's Changing? Currently, any app with the INTERNET permission can communicate with devices on the user's local network. LNP will eventually require apps to request a specific permission to access the local network. Beta 3: Opt-In and Test In Beta 3, LNP is an opt-in feature. This is your chance to test your app and identify any parts that rely on local network access. Use this adb command to enable LNP restrictions for your app: adb shell am compat enable RESTRICT_LOCAL_NETWORK \u003cyour_package_name\u003e After rebooting your device, your app's local network access is restricted. Test features that might interact with local devices (e.g., device discovery, media casting, connecting to IoT devices). Expect to see socket errors like EPERM or ECONNABORTED if your app tries to access the local network without the necessary permission. See the developer guide for more information, including how to re-enable local network access. This is a significant change, and we're committed to working with you to ensure a smooth transition. By testing and providing feedback now, you can help us build a more private and secure Android ecosystem. Get your apps, libraries, tools, and game engines ready! If you develop an SDK, library, tool, or game engine, it's even more important to prepare any necessary updates now to prevent your downstream app and game developers from being blocked by compatibility issues and allow them to target the latest SDK features. Please let your developers know if updates are needed to fully support Android 16. Testing involves installing your production app or a test app making use of your library or engine using Google Play or other means onto a device or emulator running Android 16 Beta 3. Work through all your app's flows and look for functional or UI issues. Review the behavior changes to focus your testing. Each release of Android contains platform changes that improve privacy, security, and overall user experience, and these changes can affect your apps. Here are several changes to focus on that apply, even if you don't yet target Android 16: JobScheduler: JobScheduler quotas are enforced more strictly in Android 16; enforcement will occur if a job executes while the app is on top, when a foreground service is running, or in the active standby bucket. setImportantWhileForeground is now a no-op. The new stop reason STOP_REASON_TIMEOUT_ABANDONED occurs when we detect that the app can no longer stop the job. Broadcasts: Ordered broadcasts using priorities only work within the same process. Use other IPC if you need cross-process ordering. ART: If you use reflection, JNI, or any other means to access Android internals, your app might break. This is never a best practice. Test thoroughly. Intents: Android 16 has stronger security against Intent redirection attacks. Test your Intent handling, and only opt-out of the protections if absolutely necessary. 16KB Page Size: If your app isn't 16KB-page-size ready, you can use the new compatibility mode flag, but we recommend migrating to 16KB for best performance. Accessibility: announceForAccessibility is deprecated; use the recommended alternatives. Bluetooth: Android 16 improves Bluetooth bond loss handling that impacts the way re-pairing occurs. Other changes that will be impactful once your app targets Android 16: User Experience: Changes include the removal of edge-to-edge opt-out, requiring migration or opt-out for predictive back, and disabling elegant font APIs. Core Functionality: Optimizations have been made to fixed-rate work scheduling. Large Screen Devices: Orientation, resizability, and aspect ratio restrictions will be ignored. Ensure your layouts support all orientations across a variety of aspect ratios. Health and Fitness: Changes have been implemented for health and fitness permissions. Remember to thoroughly exercise libraries and SDKs that your app is using during your compatibility testing. You may need to update to current SDK versions or reach out to the developer for help if you encounter any issues. Once you’ve published the Android 16-compatible version of your app, you can start the process to update your app's targetSdkVersion. Review the behavior changes that apply when your app targets Android 16 and use the compatibility framework to help quickly detect issues. Two Android API releases in 2025 This preview is for the next major release of Android with a planned launch in Q2 of 2025 and we plan to have another release with new developer APIs in Q4. This Q2 major release will be the only release in 2025 that includes behavior changes that could affect apps. The Q4 minor release will pick up feature updates, optimizations, and bug fixes; like our non-SDK quarterly releases, it will not include any intentional app-breaking behavior changes. We'll continue to have quarterly Android releases. The Q1 and Q3 updates provide incremental updates to ensure continuous quality. We’re putting additional energy into working with our device partners to bring the Q2 release to as many devices as possible. There’s no change to the target API level requirements and the associated dates for apps in Google Play; our plans are for one annual requirement each year, tied to the major API level. Get started with Android 16 You can enroll any supported Pixel device to get this and future Android Beta updates over-the-air. If you don’t have a Pixel device, you can use the 64-bit system images with the Android Emulator in Android Studio. If you are currently on Android 16 Beta 2 or are already in the Android Beta program, you will be offered an over-the-air update to Beta 3. While the API and behaviors are final, we're still looking for your feedback so please report issues on the feedback page. The earlier we get your feedback, the better chance we'll be able to address it in this or a future release. For the best development experience with Android 16, we recommend that you use the latest feature drop of Android Studio (Meerkat). Once you’re set up, here are some of the things you should do: Compile against the new SDK, test in CI environments, and report any issues in our tracker on the feedback page. Test your current app for compatibility, learn whether your app is affected by changes in Android 16, and install your app onto a device or emulator running Android 16 and extensively test it. We’ll update the beta system images and SDK regularly throughout the Android 16 release cycle. Once you’ve installed a beta build, you’ll automatically get future updates over-the-air for all later previews and Betas. For complete information on Android 16 please visit the Android 16 developer site.",
  "image": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjc6KbFCPUa_RB6bL1i4NhyphenhyphencptybHQM-joo2Bj19ZMT8wtRnHHHQPMcWnudH1X5rh5i7JJt81hPBw6WSB5joOyCEswbtfONT8qG_CtHZelak8VFk2sUvzkxeVCt6Tc3MZUUFsSdrnGMr19cTLzEFtaA7zSGVdqH3iXr6rF-qL2Ll2iQ8cWZUzqvNjHXPeU/w1200-h630-p-k-no-nu/A16-moving.gif",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\u003cmeta content=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjc6KbFCPUa_RB6bL1i4NhyphenhyphencptybHQM-joo2Bj19ZMT8wtRnHHHQPMcWnudH1X5rh5i7JJt81hPBw6WSB5joOyCEswbtfONT8qG_CtHZelak8VFk2sUvzkxeVCt6Tc3MZUUFsSdrnGMr19cTLzEFtaA7zSGVdqH3iXr6rF-qL2Ll2iQ8cWZUzqvNjHXPeU/s1600/A16-moving.gif\" name=\"twitter:image\"/\u003e\n\u003cp\u003e\n\n\u003cem\u003e Posted by \u003cauthor\u003eMatthew McCullough\u003c/author\u003e – VP of Product Management, Android Developer\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjTbEtmcMRsVnZNjDLfHHmaHRbWrOxiuKlPvOEKOdTQv5zdrBXiwR2seAo7nH7WHr5OBn-40Cokd-O8A39uNI8YPwNPS0KyNKmR5KfMdKWylTB2urSRAtJKSybArxjCTCi5dJghCUPgA49ZVOn3_4TLqppzii0bc5PDKdbeHzGfG0DrNeAyjbt5VSoOVYI/s1600/image1.gif\"\u003e\u003cimg data-original-height=\"1024\" data-original-width=\"1024\" height=\"320\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjTbEtmcMRsVnZNjDLfHHmaHRbWrOxiuKlPvOEKOdTQv5zdrBXiwR2seAo7nH7WHr5OBn-40Cokd-O8A39uNI8YPwNPS0KyNKmR5KfMdKWylTB2urSRAtJKSybArxjCTCi5dJghCUPgA49ZVOn3_4TLqppzii0bc5PDKdbeHzGfG0DrNeAyjbt5VSoOVYI/w320-h320/image1.gif\" width=\"320\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eAndroid 16 has officially reached Platform Stability today with Beta 3! That means the API surface is locked, the app-facing behaviors are final, and you can push your Android 16-targeted apps to the Play store right now. Read on for coverage of new security and accessibility features in Beta 3.\u003c/p\u003e\n  \n\u003cp\u003eAndroid delivers enhancements and new features year-round, and your feedback on the \u003ca href=\"https://www.google.com/android/beta\" target=\"_blank\"\u003eAndroid beta\u003c/a\u003e program plays a key role in helping Android continuously improve. The \u003ca href=\"https://developer.android.com/about/versions/16\" target=\"_blank\"\u003eAndroid 16 developer site\u003c/a\u003e has more information about the beta, including how to get it onto devices and the \u003ca href=\"https://developer.android.com/about/versions/16/overview#timeline\" target=\"_blank\"\u003erelease timeline\u003c/a\u003e. We’re looking forward to \u003ca href=\"https://developer.android.com/about/versions/16/feedback\" target=\"_blank\"\u003ehearing what you think\u003c/a\u003e, and thank you in advance for your continued help in making Android a platform that benefits everyone.\u003c/p\u003e\n\n\u003ch2\u003e\u003cspan\u003eNew in Android 16 Beta 3\u003c/span\u003e\u003c/h2\u003e\n\n\u003cp\u003eAt this late stage in the development cycle, there are only a few new things in the Android 16 Beta 3 release for you to consider when developing your apps.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"Android 16 timeline showing we are on time with Beta releases ending in March\" height=\"148\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEijHstEtz1Q3FhN2VSDSBflUA23fFjS1iU1RM2FKkh0YEQfmOWFEAyS6UIcP4ixRjkN_DkjbeNFcuhVMJHCfSQrj6H-EInb3POG5H6JpqMdCth1abtfL0BWOnehQbw6l9H74OwGhtXChyveCnXkHpBqjb1eYNQgegId6fekf_JAwloXBHiAz_-NF3bbNMo/w640-h148/image1.png\" width=\"640\"/\u003e\u003c/p\u003e\u003cbr/\u003e\n\n\u003ch3\u003e\u003cspan\u003eBroadcast audio support\u003c/span\u003e\u003c/h3\u003e\n\n\u003cp\u003ePixel 9 devices on Android 16 Beta now support Auracast broadcast audio with compatible LE Audio hearing aids, part of Android\u0026#39;s work to enhance audio accessibility. Built on the LE Audio standard, Auracast enables compatible hearing aids and earbuds to receive direct audio streams from public venues like airports, concerts, and classrooms. \u003ca href=\"http://blog.google/feed/auracast-hearing-aids-earbuds\" target=\"_blank\"\u003eOur Keyword post has more on this technology\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003e\u003cspan\u003eOutline text for maximum text contrast\u003c/span\u003e\u003c/h3\u003e\n\n\u003cp\u003eUsers with low vision often have reduced contrast sensitivity, making it challenging to distinguish objects from their backgrounds. To help these users, Android 16 Beta 3 introduces outline text, replacing high contrast text, which draws a larger contrasting area around text to greatly improve legibility.\u003c/p\u003e\n\n\u003cp\u003eAndroid 16 also contains new \u003cspan\u003e\u003ca href=\"https://developer.android.com/reference/android/view/accessibility/AccessibilityManager\" target=\"_blank\"\u003eAccessibilityManager\u003c/a\u003e\u003c/span\u003e APIs to allow your apps to \u003ca href=\"https://developer.android.com/reference/android/view/accessibility/AccessibilityManager#isHighContrastTextEnabled%28%29\" target=\"_blank\"\u003echeck\u003c/a\u003e or \u003ca href=\"https://developer.android.com/reference/android/view/accessibility/AccessibilityManager#addHighContrastTextStateChangeListener(java.util.concurrent.Executor,%20android.view.accessibility.AccessibilityManager.HighContrastTextStateChangeListener)\" target=\"_blank\"\u003eregister a listener\u003c/a\u003e to see if this mode is enabled. This is primarily for UI Toolkits like Compose to offer a similar visual experience. If you maintain a UI Toolkit library or your app performs custom text rendering that bypasses the \u003cspan\u003eandroid.text.Layout\u003c/span\u003e class then you can use this to know when outline text is enabled.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"Text with enhanced contrast before and after Android 16\u0026#39;s new outline text accessibility feature\" height=\"309\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgSDSy8VrsdSyEqBiSg6RrqGGFr6dpKV4HnrdrsBuJKSuIIntmtPy9vfvHrn7Qk95um_FuSUmmWHz0dwn3KZnU4B6MPz0VuMiqns4umhM4aw1uowH2VDWLAqO3Hz8EZnCL66uu9CLlPyfFcFaNqQ8sbY4pNMwOB-fDPo7mYhEcCiSoB03UXIqcG_ls-kdI/w640-h309/image3.png\" width=\"640\"/\u003e\u003c/p\u003e\u003cimgcaption\u003e\u003ccenter\u003e\u003cem\u003eText with enhanced contrast before and after Android 16\u0026#39;s new outline text accessibility feature\u003c/em\u003e\u003c/center\u003e\u003c/imgcaption\u003e\u003cbr/\u003e\n\n\u003ch3\u003e\u003cspan\u003eTest your app with Local Network Protection\u003c/span\u003e\u003c/h3\u003e\n\n\u003cp\u003eAndroid 16 Beta 3 adds the ability to test the \u003ca href=\"https://developer.android.com/privacy-and-security/local-network-permission\" target=\"_blank\"\u003eLocal Network Protection\u003c/a\u003e (LNP) feature which is planned for a future Android major release.  It gives users more control over which apps can access devices on their local network.\u003c/p\u003e\n\n\u003ch4\u003e\u003cspan\u003eWhat\u0026#39;s Changing?\u003c/span\u003e\u003c/h4\u003e\n\n\u003cp\u003eCurrently, any app with the \u003cspan\u003eINTERNET\u003c/span\u003e permission can communicate with devices on the user\u0026#39;s local network. LNP will eventually require apps to request a specific permission to access the local network.\u003c/p\u003e\n\n\u003ch4\u003e\u003cspan\u003eBeta 3: Opt-In and Test\u003c/span\u003e\u003c/h4\u003e\n\n\u003cp\u003eIn Beta 3, LNP is an opt-in feature. This is your chance to test your app and identify any parts that rely on local network access. Use this adb command to enable LNP restrictions for your app:\u003c/p\u003e\n\n\u003cdiv\u003e\u003cpre\u003eadb shell am compat enable RESTRICT_LOCAL_NETWORK \u0026lt;your_package_name\u0026gt;\n\u003c/pre\u003e\u003c/div\u003e\n\n\u003cp\u003eAfter rebooting your device, your app\u0026#39;s local network access is restricted. Test features that might interact with local devices (e.g., device discovery, media casting, connecting to IoT devices). Expect to see socket errors like \u003cspan\u003eEPERM\u003c/span\u003e or \u003cspan\u003eECONNABORTED\u003c/span\u003e if your app tries to access the local network without the necessary permission. See the \u003ca href=\"https://developer.android.com/privacy-and-security/local-network-permission\" target=\"_blank\"\u003edeveloper guide\u003c/a\u003e for more information, including how to re-enable local network access.\u003c/p\u003e\n\n\u003cp\u003eThis is a significant change, and we\u0026#39;re committed to working with you to ensure a smooth transition. By testing and providing feedback now, you can help us build a more private and secure Android ecosystem.\u003c/p\u003e\n\n\u003ch3\u003e\u003cspan\u003eGet your apps, libraries, tools, and game engines ready!\u003c/span\u003e\u003c/h3\u003e\n\n\u003cp\u003eIf you develop an SDK, library, tool, or game engine, it\u0026#39;s even more important to prepare any necessary updates now to prevent your downstream app and game developers from being blocked by compatibility issues and allow them to target the latest SDK features. Please let your developers know if updates are needed to fully support Android 16.\u003c/p\u003e\n\n\u003cp\u003eTesting involves installing your production app or a test app making use of your library or engine  using Google Play or other means onto a device or emulator running Android 16 Beta 3. Work through all your app\u0026#39;s flows and look for functional or UI issues. Review the \u003ca href=\"https://developer.android.com/about/versions/16/behavior-changes-all\" target=\"_blank\"\u003ebehavior changes\u003c/a\u003e to focus your testing. Each release of Android contains platform changes that improve privacy, security, and overall user experience, and these changes can affect your apps. Here are several changes to focus on that apply, \u003cb\u003eeven if you don\u0026#39;t yet target Android 16\u003c/b\u003e:\u003c/p\u003e\n\n\u003cul\u003e\u003cul\u003e\n\u003cli\u003e\u003cb\u003eJobScheduler:\u003c/b\u003e \u003ca href=\"https://developer.android.com/about/versions/16/behavior-changes-all#job-quota-opt\" target=\"_blank\"\u003eJobScheduler quotas are enforced more strictly in Android 16\u003c/a\u003e;  enforcement will occur if a job executes while the app is on top, when a foreground service is running, or in the active standby bucket. \u003cspan\u003esetImportantWhileForeground\u003c/span\u003e \u003ca href=\"https://developer.android.com/about/versions/16/behavior-changes-all#jobinfo-setimportantwhileforeground\" target=\"_blank\"\u003eis now a no-op\u003c/a\u003e. The new stop reason \u003cspan\u003eSTOP_REASON_TIMEOUT_ABANDONED\u003c/span\u003e occurs when we detect that the app can no longer stop the job.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\n\u003cli\u003e\u003cb\u003eBroadcasts:\u003c/b\u003e Ordered broadcasts using priorities only work within the same process. Use other IPC if you need cross-process ordering.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\n\u003cli\u003e\u003cb\u003eART:\u003c/b\u003e If you use reflection, JNI, or any other means to access Android internals, \u003ca href=\"https://developer.android.com/about/versions/16/behavior-changes-all#art-changes\" target=\"_blank\"\u003eyour app might break\u003c/a\u003e. This is \u003cb\u003enever\u003c/b\u003e a best practice. Test thoroughly.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\n\u003cli\u003e\u003cb\u003eIntents:\u003c/b\u003e Android 16 has \u003ca href=\"https://developer.android.com/privacy-and-security/risks/intent-redirection\" target=\"_blank\"\u003estronger security against Intent redirection attacks\u003c/a\u003e. Test your Intent handling, and only opt-out of the protections if absolutely necessary.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\n\u003cli\u003e\u003cb\u003e16KB Page Size:\u003c/b\u003e If your app isn\u0026#39;t 16KB-page-size ready, you can use the \u003ca href=\"https://developer.android.com/about/versions/16/behavior-changes-all#16-kb-compatibility-mode\" target=\"_blank\"\u003enew compatibility mode flag\u003c/a\u003e, but we recommend migrating  to 16KB for best performance.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\n  \u003cli\u003e\u003cb\u003eAccessibility:\u003c/b\u003e \u003cspan\u003eannounceForAccessibility\u003c/span\u003e is deprecated; use the \u003ca href=\"https://developer.android.com/about/versions/16/behavior-changes-all#disruptive-a11y\" target=\"_blank\"\u003erecommended alternatives\u003c/a\u003e.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\n\u003cli\u003e\u003cb\u003eBluetooth:\u003c/b\u003e Android 16 improves Bluetooth bond loss handling that \u003ca href=\"https://developer.android.com/about/versions/16/behavior-changes-all#improved-bond-loss-handling\" target=\"_blank\"\u003eimpacts the way re-pairing occurs\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\u003c/ul\u003e\n\n\u003cp\u003eOther changes that will be impactful once your app targets Android 16:\u003c/p\u003e\n\u003cul\u003e\u003cul\u003e\n\u003cli\u003e\u003cb\u003eUser Experience:\u003c/b\u003e Changes include the removal of \u003ca href=\"https://developer.android.com/about/versions/16/behavior-changes-16#edge-to-edge\" target=\"_blank\"\u003eedge-to-edge opt-out\u003c/a\u003e, requiring \u003ca href=\"https://developer.android.com/about/versions/16/behavior-changes-16#predictive-back\" target=\"_blank\"\u003emigration or opt-out for predictive back\u003c/a\u003e, and \u003ca href=\"https://developer.android.com/about/versions/16/behavior-changes-16#elegant-text-height\" target=\"_blank\"\u003edisabling elegant font APIs\u003c/a\u003e.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\n\u003cli\u003e\u003cb\u003eCore Functionality:\u003c/b\u003e Optimizations have been made to \u003ca href=\"https://developer.android.com/about/versions/16/behavior-changes-16#schedule-at-fixed-rate\" target=\"_blank\"\u003efixed-rate work scheduling\u003c/a\u003e.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\n\u003cli\u003e\u003cb\u003eLarge Screen Devices:\u003c/b\u003e \u003ca href=\"https://developer.android.com/about/versions/16/behavior-changes-16#ignore-orientation\" target=\"_blank\"\u003eOrientation, resizability, and aspect ratio restrictions will be ignored\u003c/a\u003e. Ensure your layouts support all orientations across a variety of aspect ratios.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\n\u003cli\u003e\u003cb\u003eHealth and Fitness:\u003c/b\u003e Changes have been implemented for \u003ca href=\"https://developer.android.com/about/versions/16/behavior-changes-16#health-fitness-permissions\" target=\"_blank\"\u003ehealth and fitness permissions\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\u003c/ul\u003e\n\n\u003cp\u003eRemember to thoroughly exercise libraries and SDKs that your app is using during your compatibility testing. You may need to update to current SDK versions or reach out to the developer for help if you encounter any issues.\u003c/p\u003e\n\n\u003cp\u003eOnce you’ve published the Android 16-compatible version of your app, you can start the process to update your app\u0026#39;s targetSdkVersion. Review the behavior changes that apply when your app targets Android 16 and use the compatibility framework to help quickly detect issues.\u003c/p\u003e\n\n\u003ch2\u003e\u003cspan\u003eTwo Android API releases in 2025\u003c/span\u003e\u003c/h2\u003e\n\n\u003cp\u003eThis preview is for the next major release of Android with a planned launch in Q2 of 2025 and we plan to have \u003ca href=\"https://android-developers.googleblog.com/2024/10/android-sdk-release-update.html\" target=\"_blank\"\u003eanother release with new developer APIs in Q4\u003c/a\u003e. This Q2 major release will be the only release in 2025 that includes behavior changes that could affect apps. The Q4 minor release will pick up feature updates, optimizations, and bug fixes; like our non-SDK quarterly releases, it will not include any intentional app-breaking behavior changes.\u003c/p\u003e\n\n\n\u003cp\u003e\u003cimg alt=\"Android API release timeline 2025\" height=\"201\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj4TyRCHb1BbS7zOxcj1IbBdCb2MYvMB7bqqeP_2FuU3T0JAaZdHok_Ykp2fhrCsczJiLClGqf24ezfwcAbE_lycCqB1HoCFULrPNtcT_VBT_fxC2EDomLL28LgRuNKaK-fOM58nsQL5bfCYvbeNzvXb-uyJt_mc0Cd6W0yNmEEd4xQ3MhkZA8w6RuHFoU/w640-h201/image2.png\" width=\"640\"/\u003e\u003c/p\u003e\n\n\n\u003cp\u003eWe\u0026#39;ll continue to have quarterly Android releases. The Q1 and Q3 updates provide incremental updates to ensure continuous quality. We’re putting additional energy into working with our device partners to bring the Q2 release to as many devices as possible.\u003c/p\u003e\n\n\u003cp\u003eThere’s no change to the target API level requirements and the associated dates for apps in Google Play; our plans are for one annual requirement each year, tied to the major API level.\u003c/p\u003e\n\n\u003ch2\u003e\u003cspan\u003eGet started with Android 16\u003c/span\u003e\u003c/h2\u003e\n\n\u003cp\u003eYou can \u003ca href=\"https://www.google.com/android/beta\" target=\"_blank\"\u003eenroll any supported Pixel device\u003c/a\u003e to get this and future Android Beta updates over-the-air. If you don’t have a Pixel device, you can \u003ca href=\"https://developer.android.com/about/versions/16/get#on_emulator\" target=\"_blank\"\u003euse the 64-bit system images with the Android Emulator\u003c/a\u003e in Android Studio. If you are currently on Android 16 Beta 2 or are already in the Android Beta program, you will be offered an over-the-air update to Beta 3.\u003c/p\u003e\n\n\u003cp\u003eWhile the API and behaviors are final, we\u0026#39;re still looking for your feedback so please \u003ca href=\"https://developer.android.com/about/versions/16/feedback\" target=\"_blank\"\u003ereport issues\u003c/a\u003e on the \u003ca href=\"https://developer.android.com/about/versions/16/feedback\" target=\"_blank\"\u003efeedback page\u003c/a\u003e. The earlier we get your feedback, the better chance we\u0026#39;ll be able to address it in this or a future release.\u003c/p\u003e\n\n\u003cp\u003eFor the best development experience with Android 16, we recommend that you use the latest feature drop of Android Studio (Meerkat). Once you’re set up, here are some of the things you should do:\u003c/p\u003e\n\u003cul\u003e\u003cul\u003e\n\u003cli\u003eCompile against the new SDK, test in CI environments, and report any issues in our tracker on the \u003ca href=\"https://developer.android.com/about/versions/16/feedback\" target=\"_blank\"\u003efeedback page\u003c/a\u003e.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\n\u003cli\u003eTest your current app for compatibility, learn whether your app is \u003ca href=\"https://developer.android.com/about/versions/16/behavior-changes-all\" target=\"_blank\"\u003eaffected by changes in Android 16\u003c/a\u003e, and install your app onto a device or \u003ca href=\"https://developer.android.com/studio/run/emulator\" target=\"_blank\"\u003eemulator\u003c/a\u003e running Android 16 and extensively test it.\u003c/li\u003e\n\u003c/ul\u003e\u003c/ul\u003e\n\n\u003cp\u003eWe’ll update the \u003ca href=\"https://developer.android.com/about/versions/16/download\" target=\"_blank\"\u003ebeta system images\u003c/a\u003e and SDK regularly throughout the Android 16 release cycle. Once you’ve installed a beta build, you’ll automatically get future updates over-the-air for all later previews and Betas.\u003c/p\u003e\n\n\u003cp\u003eFor complete information on Android 16 please visit the \u003ca href=\"https://developer.android.com/about/versions/16\" target=\"_blank\"\u003eAndroid 16 developer site\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\n\n\n\n\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "10 min read",
  "publishedTime": null,
  "modifiedTime": null
}
