{
  "id": "0ecad003-75cf-4807-aaf8-7be60d5e4310",
  "title": "What's New in WebGPU (Chrome 137)",
  "link": "https://developer.chrome.com/blog/new-in-webgpu-137?hl=en",
  "description": "Use texture view for externalTexture binding, buffers copy without specifying offsets and size, WGSL workgroupUniformLoad using pointer to atomic, and more.",
  "author": "",
  "published": "Mon, 26 May 2025 07:00:00 GMT",
  "source": "https://developer.chrome.com/static/blog/feed.xml",
  "categories": null,
  "byline": "GitHub",
  "length": 11134,
  "excerpt": "Use texture view for externalTexture binding, buffers copy without specifying offsets and size, WGSL workgroupUniformLoad using pointer to atomic, and more.",
  "siteName": "Chrome for Developers",
  "favicon": "https://www.gstatic.com/devrel-devsite/prod/v6dc4611c4232bd02b2b914c4948f523846f90835f230654af18f87f75fe9f73c/chrome/images/favicon.png",
  "text": "Skip to main content What's New in WebGPU (Chrome 137) Stay organized with collections Save and categorize content based on your preferences. Published: May 26, 2025 Use texture view for externalTexture binding A compatible GPUTextureView (2D, single subresource) is now allowed to be used in place of a GPUExternalTexture binding when creating a GPUBindGroup. This simplifies shader logic in video effects pipelines where both GPUExternalTexture (for source video) and GPUTextureView (for intermediate processing) have to be handled. It also reduces the need to dynamically compile shaders depending on where the texture comes from. See Intent to Ship: WebGPU: GPUTextureView for externalTexture binding. const texture = myDevice.createTexture({ size: [42, 42], format: navigator.gpu.getPreferredCanvasFormat(), usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING, }); const code = ` @group(0) @binding(0) var texture : texture_external; @group(0) @binding(1) var\u003cstorage, read_write\u003e buffer: vec2u; @compute @workgroup_size(1) fn main() { buffer = textureDimensions(texture); }`; const pipeline = myDevice.createComputePipeline({ layout: \"auto\", compute: { module: myDevice.createShaderModule({ code }) }, }); const bindGroup = myDevice.createBindGroup({ layout: pipeline.getBindGroupLayout(0), entries: [ { binding: 0, resource: texture.createView() }, // Use texture view for an externalTexture binding { binding: 1, resource: { buffer: myBuffer } }, ], }); Buffers copy without specifying offsets and size A new GPUCommandEncoder method overload lets developers omit offsets and size parameters when using copyBufferToBuffer() to simplify the copy of entire buffers. See Intent to Ship: WebGPU: copyBufferToBuffer overload. const size = 42; const srcBuffer = myDevice.createBuffer({ size, usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC, }); const dstBuffer = myDevice.createBuffer({ size, usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ, }); // Copy entire buffer. myCommandEncoder.copyBufferToBuffer(srcBuffer, dstBuffer); // This is the same as the following. // myCommandEncoder.copyBufferToBuffer(srcBuffer, 0, dstBuffer, 0, size); WGSL workgroupUniformLoad using pointer to atomic A new workgroupUniformLoad(ptr) overload in WGSL has been added for developer convenience. It atomically loads the value pointed to by ptr and returns it to all invocations in the workgroup, where ptr is a pointer-to-atomic inside a workgroup variable. See issue 408241039. @group(0) @binding(0) var\u003cstorage, read_write\u003e buffer : array\u003cu32, 1\u003e; var\u003cworkgroup\u003e wgvar : atomic\u003cu32\u003e; @compute @workgroup_size(1, 1) fn main(@builtin(local_invocation_index) lid: u32) { if (lid == 0) { atomicStore(\u0026(wgvar), 42u); } buffer[lid] = workgroupUniformLoad(\u0026wgvar); } GPUAdapterInfo powerPreference attribute The non-standard powerPreference GPUAdapterInfo string attribute is now available when the user has enabled the \"WebGPU Developer Features\" flag at chrome://flags/#enable-webgpu-developer-features. If supported, the powerPreference value can be either \"low-power\" or \"high-performance\" depending on the GPUPowerPreference value that was used in GPURequestAdapterOptions. See CL 6438860. function checkPowerPreferenceForGpuDevice(device) { const powerPreference = device.adapterInfo.powerPreference; if (powerPreference === \"high-performance\") { // High-performance GPU detected. Enabling enhanced graphics settings. } else if (powerPreference === \"low-power\") { // Low-power GPU detected. Optimizing for battery life. } } Remove GPURequestAdapterOptions compatibilityMode attribute The experimental GPURequestAdapterOptions compatibilityMode attribute has been removed in favor of the standardized featureLevel attribute added in Chrome 133. See issue 366151404. Dawn updates Developers can build WebGPU projects in languages like C++, using webgpu.h to target both WebAssembly and specific platforms. Dawn's newly-released \"emdawnwebgpu\" (\"Emscripten Dawn WebGPU\") implements the latest standardized webgpu.h over the browser API. Emdawnwebgpu is a (maintained) fork of Emscripten's (now unmaintained) built-in bindings (USE_WEBGPU). All new development is being done on emdawnwebgpu, and Emscripten's built-in bindings will be removed as developers transition to emdawnwebgpu. Emdawnwebgpu's C header is very close to Dawn's, whereas the built-in bindings are significantly outdated. Download emdawnwebgpu from Dawn's GitHub releases page and read the package's README.md for information on how to use it. The source files can be found in the Dawn repository. For a complete guide, check out the updated Build an app with WebGPU documentation. This covers only some of the key highlights. Check out the exhaustive list of commits. A list of everything that has been covered in the What's New in WebGPU series. Chrome 137 Use texture view for externalTexture binding Buffers copy without specifying offsets and size WGSL workgroupUniformLoad using pointer to atomic GPUAdapterInfo powerPreference attribute Remove GPURequestAdapterOptions compatibilityMode attribute Dawn updates Chrome 136 GPUAdapterInfo isFallbackAdapter attribute Shader compilation time improvements on D3D12 Save and copy canvas images Lift compatibility mode restrictions Dawn updates Chrome 135 Allow creating pipeline layout with null bind group layout Allow viewports to extend past the render targets bounds Easier access to the experimental compatibility mode on Android Remove maxInterStageShaderComponents limit Dawn updates Chrome 134 Improve machine-learning workloads with subgroups Remove float filterable texture types support as blendable Dawn updates Chrome 133 Additional unorm8x4-bgra and 1-component vertex formats Allow unknown limits to be requested with undefined value WGSL alignment rules changes WGSL performance gains with discard Use VideoFrame displaySize for external textures Handle images with non-default orientations using copyExternalImageToTexture Improving developer experience Enable compatibility mode with featureLevel Experimental subgroup features cleanup Deprecate maxInterStageShaderComponents limit Dawn updates Chrome 132 Texture view usage 32-bit float textures blending GPUDevice adapterInfo attribute Configuring canvas context with invalid format throw JavaScript error Filtering sampler restrictions on textures Extended subgroups experimentation Improving developer experience Experimental support for 16-bit normalized texture formats Dawn updates Chrome 131 Clip distances in WGSL GPUCanvasContext getConfiguration() Point and line primitives must not have depth bias Inclusive scan built-in functions for subgroups Experimental support for multi-draw indirect Shader module compilation option strict math Remove GPUAdapter requestAdapterInfo() Dawn updates Chrome 130 Dual source blending Shader compilation time improvements on Metal Deprecation of GPUAdapter requestAdapterInfo() Dawn updates Chrome 129 HDR support with canvas tone mapping mode Expanded subgroups support Dawn updates Chrome 128 Experimenting with subgroups Deprecate setting depth bias for lines and points Hide uncaptured error DevTools warning if preventDefault WGSL interpolate sampling first and either Dawn updates Chrome 127 Experimental support for OpenGL ES on Android GPUAdapter info attribute WebAssembly interop improvements Improved command encoder errors Dawn updates Chrome 126 Increase maxTextureArrayLayers limit Buffer upload optimization for Vulkan backend Shader compilation time improvements Submitted command buffers must be unique Dawn updates Chrome 125 Subgroups (feature in development) Render to slice of 3D texture Dawn updates Chrome 124 Read-only and read-write storage textures Service workers and shared workers support New adapter information attributes Bug fixes Dawn updates Chrome 123 DP4a built-in functions support in WGSL Unrestricted pointer parameters in WGSL Syntax sugar for dereferencing composites in WGSL Separate read-only state for stencil and depth aspects Dawn updates Chrome 122 Expand reach with compatibility mode (feature in development) Increase maxVertexAttributes limit Dawn updates Chrome 121 Support WebGPU on Android Use DXC instead of FXC for shader compilation on Windows Timestamp queries in compute and render passes Default entry points to shader modules Support display-p3 as GPUExternalTexture color space Memory heaps info Dawn updates Chrome 120 Support for 16-bit floating-point values in WGSL Push the limits Changes to depth-stencil state Adapter information updates Timestamp queries quantization Spring-cleaning features Chrome 119 Filterable 32-bit float textures unorm10-10-10-2 vertex format rgb10a2uint texture format Dawn updates Chrome 118 HTMLImageElement and ImageData support in copyExternalImageToTexture() Experimental support for read-write and read-only storage texture Dawn updates Chrome 117 Unset vertex buffer Unset bind group Silence errors from async pipeline creation when device is lost SPIR-V shader module creation updates Improving developer experience Caching pipelines with automatically generated layout Dawn updates Chrome 116 WebCodecs integration Lost device returned by GPUAdapter requestDevice() Keep video playback smooth if importExternalTexture() is called Spec conformance Improving developer experience Dawn updates Chrome 115 Supported WGSL language extensions Experimental support for Direct3D 11 Get discrete GPU by default on AC power Improving developer experience Dawn updates Chrome 114 Optimize JavaScript getCurrentTexture() on unconfigured canvas throws InvalidStateError WGSL updates Dawn updates Chrome 113 Use WebCodecs VideoFrame source in importExternalTexture() Except as otherwise noted, the content of this page is licensed under the Creative Commons Attribution 4.0 License, and code samples are licensed under the Apache 2.0 License. For details, see the Google Developers Site Policies. Java is a registered trademark of Oracle and/or its affiliates. Last updated 2025-05-26 UTC. [[[\"Easy to understand\",\"easyToUnderstand\",\"thumb-up\"],[\"Solved my problem\",\"solvedMyProblem\",\"thumb-up\"],[\"Other\",\"otherUp\",\"thumb-up\"]],[[\"Missing the information I need\",\"missingTheInformationINeed\",\"thumb-down\"],[\"Too complicated / too many steps\",\"tooComplicatedTooManySteps\",\"thumb-down\"],[\"Out of date\",\"outOfDate\",\"thumb-down\"],[\"Samples / code issue\",\"samplesCodeIssue\",\"thumb-down\"],[\"Other\",\"otherDown\",\"thumb-down\"]],[\"Last updated 2025-05-26 UTC.\"],[],[]]",
  "image": "https://developer.chrome.com/static/blog/new-in-webgpu-137/image/new-in-webgpu-137.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\n    \u003cdevsite-progress type=\"indeterminate\" id=\"app-progress\"\u003e\u003c/devsite-progress\u003e\n  \n    \u003ca href=\"#main-content\"\u003e\n      \n      Skip to main content\n    \u003c/a\u003e\n    \u003csection\u003e\n      \u003cdevsite-cookie-notification-bar\u003e\u003c/devsite-cookie-notification-bar\u003e\u003cdevsite-header role=\"banner\"\u003e\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\u003c/devsite-header\u003e\n      \n      \u003csection id=\"gc-wrapper\"\u003e\n        \u003cmain role=\"main\" id=\"main-content\" has-sidebar=\"\"\u003e\n          \n          \u003cdevsite-content\u003e\n            \n              \n\n\n\n\n\n\n\n\n\n\n\n\n\u003carticle\u003e\n  \n  \n  \n  \n  \n\n  \n  \n    \u003ch2 tabindex=\"-1\"\u003e\n      What\u0026#39;s New in WebGPU (Chrome 137)\n      \u003cp data-nosnippet=\"\"\u003e\u003cdevsite-feature-tooltip ack-key=\"AckCollectionsBookmarkTooltipDismiss\" analytics-category=\"Site-Wide Custom Events\" analytics-action-show=\"Callout Profile displayed\" analytics-action-close=\"Callout Profile dismissed\" analytics-label=\"Create Collection Callout\" dismiss-button=\"true\" id=\"devsite-collections-dropdown\" dismiss-button-text=\"Dismiss\" close-button-text=\"Got it\"\u003e\n\n    \n    \u003cdevsite-bookmark\u003e\u003c/devsite-bookmark\u003e\n\n    \u003cspan slot=\"popout-heading\"\u003e\n      \n      Stay organized with collections\n    \u003c/span\u003e\n    \u003cspan slot=\"popout-contents\"\u003e\n      \n      Save and categorize content based on your preferences.\n    \u003c/span\u003e\n  \u003c/devsite-feature-tooltip\u003e\u003c/p\u003e\n  \n    \u003c/h2\u003e\n  \n  \n\n  \u003cdevsite-toc depth=\"2\" devsite-toc-embedded=\"\"\u003e\n  \u003c/devsite-toc\u003e\n  \n    \n  \n\n  \u003cdiv\u003e\n\n  \n    \n\n\n\n\n\u003cdiv translate=\"no\"\u003e\n        \n          \u003cp\u003e\u003cimg alt=\"François Beaufort\" src=\"https://web.dev/images/authors/beaufortfrancois.jpg\" decoding=\"async\" height=\"64\" loading=\"lazy\" width=\"64\"/\u003e\u003c/p\u003e\n      \u003c/div\u003e\n\n\u003cp\u003e\n  Published: May 26, 2025\n\u003c/p\u003e\n\n\n\u003ch2 id=\"use_texture_view_for_externaltexture_binding\" data-text=\"Use texture view for externalTexture binding\" tabindex=\"-1\"\u003eUse texture view for externalTexture binding\u003c/h2\u003e\n\n\u003cp\u003eA compatible GPUTextureView (2D, single subresource) is now allowed to be used in place of a GPUExternalTexture binding when creating a GPUBindGroup.\u003c/p\u003e\n\n\u003cp\u003eThis simplifies shader logic in video effects pipelines where both GPUExternalTexture (for source video) and GPUTextureView (for intermediate processing) have to be handled. It also reduces the need to dynamically compile shaders depending on where the texture comes from. See \u003ca href=\"https://groups.google.com/a/chromium.org/g/blink-dev/c/_uF6EV6PXRo/m/J0543SHmAwAJ\"\u003eIntent to Ship: WebGPU: GPUTextureView for externalTexture binding\u003c/a\u003e.\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"JavaScript\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003econst\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etexture\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003emyDevice\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ecreateTexture\u003c/span\u003e\u003cspan\u003e({\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003esize\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e[\u003c/span\u003e\u003cspan\u003e42\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e42\u003c/span\u003e\u003cspan\u003e],\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003eformat\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003enavigator\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egpu\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetPreferredCanvasFormat\u003c/span\u003e\u003cspan\u003e(),\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003eusage\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eGPUTextureUsage\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eRENDER_ATTACHMENT\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e|\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eGPUTextureUsage\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eTEXTURE_BINDING\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n\u003cspan\u003e});\u003c/span\u003e\n\n\u003cspan\u003econst\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ecode\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e`\u003c/span\u003e\n\u003cspan\u003e@group(0) @binding(0) var texture : texture_external;\u003c/span\u003e\n\u003cspan\u003e@group(0) @binding(1) var\u0026lt;storage, read_write\u0026gt; buffer: vec2u;\u003c/span\u003e\n\u003cspan\u003e    \u003c/span\u003e\n\u003cspan\u003e@compute @workgroup_size(1) fn main() {\u003c/span\u003e\n\u003cspan\u003e  buffer = textureDimensions(texture);\u003c/span\u003e\n\u003cspan\u003e}`\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\n\u003cspan\u003econst\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003epipeline\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003emyDevice\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ecreateComputePipeline\u003c/span\u003e\u003cspan\u003e({\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003elayout\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#34;auto\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003ecompute\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003emodule\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003emyDevice\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ecreateShaderModule\u003c/span\u003e\u003cspan\u003e({\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ecode\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e})\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e},\u003c/span\u003e\n\u003cspan\u003e});\u003c/span\u003e\n\n\u003cspan\u003econst\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ebindGroup\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003emyDevice\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ecreateBindGroup\u003c/span\u003e\u003cspan\u003e({\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003elayout\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003epipeline\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetBindGroupLayout\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e0\u003c/span\u003e\u003cspan\u003e),\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003eentries\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e[\u003c/span\u003e\n\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ebinding\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e0\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eresource\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etexture\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ecreateView\u003c/span\u003e\u003cspan\u003e()\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e},\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e// Use texture view for an externalTexture binding\u003c/span\u003e\n\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ebinding\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eresource\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ebuffer\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003emyBuffer\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e},\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e],\u003c/span\u003e\n\u003cspan\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003ch2 id=\"buffers_copy_without_specifying_offsets_and_size\" data-text=\"Buffers copy without specifying offsets and size\" tabindex=\"-1\"\u003eBuffers copy without specifying offsets and size\u003c/h2\u003e\n\n\u003cp\u003eA new GPUCommandEncoder method overload lets developers omit offsets and size parameters when using \u003ccode translate=\"no\" dir=\"ltr\"\u003ecopyBufferToBuffer()\u003c/code\u003e to simplify the copy of entire buffers. See \u003ca href=\"https://groups.google.com/a/chromium.org/g/blink-dev/c/rjtrmhywpf0\"\u003eIntent to Ship: WebGPU: copyBufferToBuffer overload\u003c/a\u003e.\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"JavaScript\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003econst\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003esize\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e42\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003econst\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003esrcBuffer\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003emyDevice\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ecreateBuffer\u003c/span\u003e\u003cspan\u003e({\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003esize\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003eusage\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eGPUBufferUsage\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eSTORAGE\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e|\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eGPUBufferUsage\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eCOPY_SRC\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n\u003cspan\u003e});\u003c/span\u003e\n\u003cspan\u003econst\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003edstBuffer\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003emyDevice\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ecreateBuffer\u003c/span\u003e\u003cspan\u003e({\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003esize\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003eusage\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eGPUBufferUsage\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eCOPY_DST\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e|\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eGPUBufferUsage\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eMAP_READ\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n\u003cspan\u003e});\u003c/span\u003e\n\n\u003cspan\u003e// Copy entire buffer.\u003c/span\u003e\n\u003cspan\u003emyCommandEncoder\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ecopyBufferToBuffer\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003esrcBuffer\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003edstBuffer\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\n\n\u003cspan\u003e// This is the same as the following.\u003c/span\u003e\n\u003cspan\u003e// myCommandEncoder.copyBufferToBuffer(srcBuffer, 0, dstBuffer, 0, size);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003ch2 id=\"wgsl_workgroupuniformload_using_pointer_to_atomic\" data-text=\"WGSL workgroupUniformLoad using pointer to atomic\" tabindex=\"-1\"\u003eWGSL workgroupUniformLoad using pointer to atomic\u003c/h2\u003e\n\n\u003cp\u003eA new \u003ccode translate=\"no\" dir=\"ltr\"\u003eworkgroupUniformLoad(ptr)\u003c/code\u003e overload in WGSL has been added for developer convenience. It atomically loads the value pointed to by \u003ccode translate=\"no\" dir=\"ltr\"\u003eptr\u003c/code\u003e and returns it to all invocations in the workgroup, where \u003ccode translate=\"no\" dir=\"ltr\"\u003eptr\u003c/code\u003e is a pointer-to-atomic inside a workgroup variable. See \u003ca href=\"https://issues.chromium.org/issues/408241039\"\u003eissue 408241039\u003c/a\u003e.\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"WebGPU Shading Language\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003e@group\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e0\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e@binding\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e0\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003evar\u0026lt;storage\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eread_write\u003c/span\u003e\u0026gt;\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ebuffer\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003earray\u0026lt;u32\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e1\u003c/span\u003e\u0026gt;\u003cspan\u003e;\u003c/span\u003e\n\n\u003cspan\u003evar\u0026lt;workgroup\u0026gt;\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ewgvar\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eatomic\u0026lt;u32\u0026gt;\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\n\u003cspan\u003e@compute\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e@workgroup_size\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003cspan\u003efn\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003emain\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e@builtin\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003elocal_invocation_index\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003elid\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eu32\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003eif\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003elid\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e==\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e0\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003eatomicStore\u003c/span\u003e\u003cspan\u003e(\u0026amp;(\u003c/span\u003e\u003cspan\u003ewgvar\u003c/span\u003e\u003cspan\u003e),\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e42u\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003ebuffer\u003c/span\u003e\u003cspan\u003e[\u003c/span\u003e\u003cspan\u003elid\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eworkgroupUniformLoad\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u0026amp;\u003cspan\u003ewgvar\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003ch2 id=\"gpuadapterinfo_powerpreference_attribute\" data-text=\"GPUAdapterInfo powerPreference attribute\" tabindex=\"-1\"\u003eGPUAdapterInfo powerPreference attribute\u003c/h2\u003e\n\n\u003cp\u003eThe non-standard \u003ccode translate=\"no\" dir=\"ltr\"\u003epowerPreference\u003c/code\u003e GPUAdapterInfo string attribute is now available when the user has enabled the \u0026#34;WebGPU Developer Features\u0026#34; flag at \u003ccode translate=\"no\" dir=\"ltr\"\u003echrome://flags/#enable-webgpu-developer-features\u003c/code\u003e. If supported, the \u003ccode translate=\"no\" dir=\"ltr\"\u003epowerPreference\u003c/code\u003e value can be either \u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026#34;low-power\u0026#34;\u003c/code\u003e or \u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026#34;high-performance\u0026#34;\u003c/code\u003e depending on the GPUPowerPreference value that was used in \u003ca href=\"https://gpuweb.github.io/gpuweb/#dictdef-gpurequestadapteroptions\"\u003eGPURequestAdapterOptions\u003c/a\u003e. See \u003ca href=\"https://chromium-review.googlesource.com/c/chromium/src/+/6438860\"\u003eCL 6438860\u003c/a\u003e.\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"JavaScript\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003efunction\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003echeckPowerPreferenceForGpuDevice\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003edevice\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003econst\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003epowerPreference\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003edevice\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eadapterInfo\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003epowerPreference\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003eif\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003epowerPreference\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e===\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#34;high-performance\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e// High-performance GPU detected. Enabling enhanced graphics settings.\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eelse\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eif\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003epowerPreference\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e===\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#34;low-power\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e// Low-power GPU detected. Optimizing for battery life.\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003ch2 id=\"remove_gpurequestadapteroptions_compatibilitymode_attribute\" data-text=\"Remove GPURequestAdapterOptions compatibilityMode attribute\" tabindex=\"-1\"\u003eRemove GPURequestAdapterOptions compatibilityMode attribute\u003c/h2\u003e\n\n\u003cp\u003eThe experimental GPURequestAdapterOptions \u003ccode translate=\"no\" dir=\"ltr\"\u003ecompatibilityMode\u003c/code\u003e attribute has been removed in favor of the standardized \u003ccode translate=\"no\" dir=\"ltr\"\u003efeatureLevel\u003c/code\u003e attribute added \u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-133#enable_compatibility_mode_with_featurelevel\"\u003ein Chrome 133\u003c/a\u003e. See \u003ca href=\"https://issues.chromium.org/issues/366151404\"\u003eissue 366151404\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"dawn_updates\" data-text=\"Dawn updates\" tabindex=\"-1\"\u003eDawn updates\u003c/h2\u003e\n\n\u003cp\u003eDevelopers can build WebGPU projects in languages like C++, using webgpu.h to target both WebAssembly and specific platforms. Dawn\u0026#39;s newly-released \u0026#34;emdawnwebgpu\u0026#34; (\u0026#34;Emscripten Dawn WebGPU\u0026#34;) implements the latest standardized webgpu.h over the browser API.\u003c/p\u003e\n\n\u003cp\u003eEmdawnwebgpu is a (maintained) fork of Emscripten\u0026#39;s (now unmaintained) built-in bindings (\u003ccode translate=\"no\" dir=\"ltr\"\u003eUSE_WEBGPU\u003c/code\u003e). All new development is being done on emdawnwebgpu, and Emscripten\u0026#39;s built-in bindings will be removed as developers transition to emdawnwebgpu. Emdawnwebgpu\u0026#39;s C header is very close to Dawn\u0026#39;s, whereas the built-in bindings are significantly outdated.\u003c/p\u003e\n\n\u003cp\u003eDownload emdawnwebgpu from \u003ca href=\"https://github.com/google/dawn/releases\"\u003eDawn\u0026#39;s GitHub releases page\u003c/a\u003e and read the \u003ca href=\"https://dawn.googlesource.com/dawn/+/refs/heads/main/src/emdawnwebgpu/pkg/README.md\"\u003epackage\u0026#39;s README.md\u003c/a\u003e for information on how to use it. The source files can be found in the \u003ca href=\"https://dawn.googlesource.com/dawn/+/refs/heads/main/src/emdawnwebgpu/\"\u003eDawn repository\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eFor a complete guide, check out the updated \u003ca href=\"https://developer.chrome.com/docs/web-platform/webgpu/build-app\"\u003eBuild an app with WebGPU\u003c/a\u003e documentation.\u003c/p\u003e\n\n\u003cp\u003eThis covers only some of the key highlights. Check out the exhaustive \u003ca href=\"https://dawn.googlesource.com/dawn/+log/chromium/7103..chromium/7151?n=1000\"\u003elist of commits\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cp\u003eA list of everything that has been covered in the \u003ca href=\"https://developer.chrome.com/docs/web-platform/webgpu/news\"\u003eWhat\u0026#39;s New in WebGPU\u003c/a\u003e series.\u003c/p\u003e\n\n\u003ch3 id=\"chrome137\" data-text=\"Chrome 137\" tabindex=\"-1\"\u003eChrome 137\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-137#use_texture_view_for_externaltexture_binding\"\u003eUse texture view for externalTexture binding\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-137#buffers_copy_without_specifying_offsets_and_size\"\u003eBuffers copy without specifying offsets and size\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-137#wgsl_workgroupuniformload_using_pointer_to_atomic\"\u003eWGSL workgroupUniformLoad using pointer to atomic\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-137#gpuadapterinfo_powerpreference_attribute\"\u003eGPUAdapterInfo powerPreference attribute\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-137#remove_gpurequestadapteroptions_compatibilitymode_attribute\"\u003eRemove GPURequestAdapterOptions compatibilityMode attribute\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-137#dawn_updates\"\u003eDawn updates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"chrome136\" data-text=\"Chrome 136\" tabindex=\"-1\"\u003eChrome 136\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-136#gpuadapterinfo_isfallbackadapter_attribute\"\u003eGPUAdapterInfo isFallbackAdapter attribute\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-136#shader_compilation_time_improvements_on_d3d12\"\u003eShader compilation time improvements on D3D12\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-136#save_and_copy_canvas_images\"\u003eSave and copy canvas images\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-136#lift_compatibility_mode_restrictions\"\u003eLift compatibility mode restrictions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-136#dawn_updates\"\u003eDawn updates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"chrome135\" data-text=\"Chrome 135\" tabindex=\"-1\"\u003eChrome 135\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-135#allow_creating_pipeline_layout_with_null_bind_group_layout\"\u003eAllow creating pipeline layout with null bind group layout\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-135#allow_viewports_to_extend_past_the_render_targets_bounds\"\u003eAllow viewports to extend past the render targets bounds\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-135#easier_access_to_the_experimental_compatibility_mode_on_android\"\u003eEasier access to the experimental compatibility mode on Android\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-135#remove_maxinterstageshadercomponents_limit\"\u003eRemove maxInterStageShaderComponents limit\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-135#dawn_updates\"\u003eDawn updates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"chrome134\" data-text=\"Chrome 134\" tabindex=\"-1\"\u003eChrome 134\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-134#improve_machine-learning_workloads_with_subgroups\"\u003eImprove machine-learning workloads with subgroups\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-134#remove_float_filterable_texture_types_support_as_blendable\"\u003eRemove float filterable texture types support as blendable\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-134#dawn_updates\"\u003eDawn updates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"chrome133\" data-text=\"Chrome 133\" tabindex=\"-1\"\u003eChrome 133\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-133#additional_unorm8x4-bgra_and_1-component_vertex_formats\"\u003eAdditional unorm8x4-bgra and 1-component vertex formats\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-133#allow_unknown_limits_to_be_requested_with_undefined_value\"\u003eAllow unknown limits to be requested with undefined value\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-133#wgsl_alignment_rules_changes\"\u003eWGSL alignment rules changes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-133#wgsl_performance_gains_with_discard\"\u003eWGSL performance gains with discard\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-133#use_videoframe_displaysize_for_external_textures\"\u003eUse VideoFrame displaySize for external textures\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-133#handle_images_with_non-default_orientations_using_copyexternalimagetotexture\"\u003eHandle images with non-default orientations using copyExternalImageToTexture\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-133#improving_developer_experience\"\u003eImproving developer experience\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-133#enable_compatibility_mode_with_featurelevel\"\u003eEnable compatibility mode with featureLevel\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-133#experimental_subgroup_features_cleanup\"\u003eExperimental subgroup features cleanup\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-133#deprecate_maxinterstageshadercomponents_limit\"\u003eDeprecate maxInterStageShaderComponents limit\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-133#dawn_updates\"\u003eDawn updates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"chrome132\" data-text=\"Chrome 132\" tabindex=\"-1\"\u003eChrome 132\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-132#texture_view_usage\"\u003eTexture view usage\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-132#32-bit_float_textures_blending\"\u003e32-bit float textures blending\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-132#gpudevice_adapterinfo_attribute\"\u003eGPUDevice adapterInfo attribute\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-132#configuring_canvas_context_with_invalid_format_throw_javascript_error\"\u003eConfiguring canvas context with invalid format throw JavaScript error\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-132#filtering_sampler_restrictions_on_textures\"\u003eFiltering sampler restrictions on textures\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-132#extended_subgroups_experimentation\"\u003eExtended subgroups experimentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-132#improving_developer_experience\"\u003eImproving developer experience\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-132#experimental_support_for_16-bit_normalized_texture_formats\"\u003eExperimental support for 16-bit normalized texture formats\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-132#dawn_updates\"\u003eDawn updates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"chrome131\" data-text=\"Chrome 131\" tabindex=\"-1\"\u003eChrome 131\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-131#clip_distances_in_wgsl\"\u003eClip distances in WGSL\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-131#gpucanvascontext_getconfiguration\"\u003eGPUCanvasContext getConfiguration()\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-131#point_and_line_primitives_must_not_have_depth_bias\"\u003ePoint and line primitives must not have depth bias\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-131#inclusive_scan_built-in_functions_for_subgroups\"\u003eInclusive scan built-in functions for subgroups\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-131#experimental_support_for_multi-draw_indirect\"\u003eExperimental support for multi-draw indirect\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-131#shader_module_compilation_option_strict_math\"\u003eShader module compilation option strict math\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-131#remove_gpuadapter_requestadapterinfo\"\u003eRemove GPUAdapter requestAdapterInfo()\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-131#dawn_updates\"\u003eDawn updates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"chrome130\" data-text=\"Chrome 130\" tabindex=\"-1\"\u003eChrome 130\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-130#dual_source_blending\"\u003eDual source blending\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-130#shader_compilation_time_improvements_on_metal\"\u003eShader compilation time improvements on Metal\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-130#deprecation_of_gpuadapter_requestadapterinfo\"\u003eDeprecation of GPUAdapter requestAdapterInfo()\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-130#dawn_updates\"\u003eDawn updates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"chrome129\" data-text=\"Chrome 129\" tabindex=\"-1\"\u003eChrome 129\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-129#hdr_support_with_canvas_tone_mapping_mode\"\u003eHDR support with canvas tone mapping mode\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-129#expanded_subgroups_support\"\u003eExpanded subgroups support\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-129#dawn_updates\"\u003eDawn updates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"chrome128\" data-text=\"Chrome 128\" tabindex=\"-1\"\u003eChrome 128\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-128#experimenting_with_subgroups\"\u003eExperimenting with subgroups\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-128#deprecate_setting_depth_bias_for_lines_and_points\"\u003eDeprecate setting depth bias for lines and points\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-128#hide_uncaptured_error_devtools_warning_if_preventdefault\"\u003eHide uncaptured error DevTools warning if preventDefault\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-128#wgsl_interpolate_sampling_first_and_either\"\u003eWGSL interpolate sampling first and either\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-128#dawn_updates\"\u003eDawn updates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"chrome127\" data-text=\"Chrome 127\" tabindex=\"-1\"\u003eChrome 127\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-127#experimental_support_for_opengl_es_on_android\"\u003eExperimental support for OpenGL ES on Android\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-127#gpuadapter_info_attribute\"\u003eGPUAdapter info attribute\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-127#webassembly_interop_improvements\"\u003eWebAssembly interop improvements\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-127#improved_command_encoder_errors\"\u003eImproved command encoder errors\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-127#dawn_updates\"\u003eDawn updates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"chrome126\" data-text=\"Chrome 126\" tabindex=\"-1\"\u003eChrome 126\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-126#increase_maxtexturearraylayers_limit\"\u003eIncrease maxTextureArrayLayers limit\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-126#buffer_upload_optimization_for_vulkan_backend\"\u003eBuffer upload optimization for Vulkan backend\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-126#shader_compilation_time_improvements\"\u003eShader compilation time improvements\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-126#submitted_command_buffers_must_be_unique\"\u003eSubmitted command buffers must be unique\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-126#dawn_updates\"\u003eDawn updates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"chrome125\" data-text=\"Chrome 125\" tabindex=\"-1\"\u003eChrome 125\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-125#subgroups_feature_in_development\"\u003eSubgroups (feature in development)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-125#render_to_slice_of_3d_texture\"\u003eRender to slice of 3D texture\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-125#dawn_updates\"\u003eDawn updates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"chrome124\" data-text=\"Chrome 124\" tabindex=\"-1\"\u003eChrome 124\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-124#read-only_and_read-write_storage_textures\"\u003eRead-only and read-write storage textures\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-124#service_workers_and_shared_workers_support\"\u003eService workers and shared workers support\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-124#new_adapter_information_attributes\"\u003eNew adapter information attributes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-124#bug_fixes\"\u003eBug fixes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-124#dawn_updates\"\u003eDawn updates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"chrome123\" data-text=\"Chrome 123\" tabindex=\"-1\"\u003eChrome 123\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-123#dp4a_built-in_functions_support_in_wgsl\"\u003eDP4a built-in functions support in WGSL\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-123#unrestricted_pointer_parameters_in_wgsl\"\u003eUnrestricted pointer parameters in WGSL\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-123#syntax_sugar_for_dereferencing_composites_in_wgsl\"\u003eSyntax sugar for dereferencing composites in WGSL\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-123#separate_read-only_state_for_stencil_and_depth_aspects\"\u003eSeparate read-only state for stencil and depth aspects\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-123#dawn_updates\"\u003eDawn updates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"chrome122\" data-text=\"Chrome 122\" tabindex=\"-1\"\u003eChrome 122\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-122#expand_reach_with_compatibility_mode_feature_in_development\"\u003eExpand reach with compatibility mode (feature in development)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-122#increase_maxvertexattributes_limit\"\u003eIncrease maxVertexAttributes limit\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-122#dawn_updates\"\u003eDawn updates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"chrome121\" data-text=\"Chrome 121\" tabindex=\"-1\"\u003eChrome 121\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-121#support-webgpu-on-android\"\u003eSupport WebGPU on Android\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-121#use_dxc_instead_of_fxc_for_shader_compilation_on_windows\"\u003eUse DXC instead of FXC for shader compilation on Windows\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-121#timestamp_queries_in_compute_and_render_passes\"\u003eTimestamp queries in compute and render passes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-121#default_entry_points_to_shader_modules\"\u003eDefault entry points to shader modules\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-121#support_display-p3_as_gpuexternaltexture_color_space\"\u003eSupport display-p3 as GPUExternalTexture color space\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-121#memory_heaps_info\"\u003eMemory heaps info\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-121#dawn_updates\"\u003eDawn updates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"chrome120\" data-text=\"Chrome 120\" tabindex=\"-1\"\u003eChrome 120\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-120#support_for_16-bit_floating-point_values_in_wgsl\"\u003eSupport for 16-bit floating-point values in WGSL\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-120#push_the_limits\"\u003ePush the limits\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-120#changes_to_depth-stencil_state\"\u003eChanges to depth-stencil state\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-120#adapter_information_updates\"\u003eAdapter information updates\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-120#timestamp_queries_quantization\"\u003eTimestamp queries quantization\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-120#spring-cleaning_features\"\u003eSpring-cleaning features\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"chrome119\" data-text=\"Chrome 119\" tabindex=\"-1\"\u003eChrome 119\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-119#filterable_32-bit_float_textures\"\u003eFilterable 32-bit float textures\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-119#unorm10-10-10-2_vertex_format\"\u003eunorm10-10-10-2 vertex format\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-119#rgb10a2uint_texture_format\"\u003ergb10a2uint texture format\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-119#dawn_updates\"\u003eDawn updates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"chrome118\" data-text=\"Chrome 118\" tabindex=\"-1\"\u003eChrome 118\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-118#htmlimageelement_and_imagedata_support_in_copyexternalimagetotexture\"\u003eHTMLImageElement and ImageData support in \u003ccode translate=\"no\" dir=\"ltr\"\u003ecopyExternalImageToTexture()\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-118#experimental_support_for_read-write_and_read-only_storage_texture\"\u003eExperimental support for read-write and read-only storage texture\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-118#dawn_updates\"\u003eDawn updates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"chrome117\" data-text=\"Chrome 117\" tabindex=\"-1\"\u003eChrome 117\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-117#unset_vertex_buffer\"\u003eUnset vertex buffer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-117#unset_bind_group\"\u003eUnset bind group\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-117#silence_errors_from_async_pipeline_creation_when_device_is_lost\"\u003eSilence errors from async pipeline creation when device is lost\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-117#spir-v_shader_module_creation_updates\"\u003eSPIR-V shader module creation updates\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-117#improving_developer_experience\"\u003eImproving developer experience\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-117#caching_pipelines_with_automatically_generated_layout\"\u003eCaching pipelines with automatically generated layout\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-117#dawn_updates\"\u003eDawn updates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"chrome116\" data-text=\"Chrome 116\" tabindex=\"-1\"\u003eChrome 116\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-116#webcodecs_integration\"\u003eWebCodecs integration\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-116#lost_device_returned_by_gpuadapter_requestdevice\"\u003eLost device returned by GPUAdapter \u003ccode translate=\"no\" dir=\"ltr\"\u003erequestDevice()\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-116#keep_video_playback_smooth_if_importexternaltexture_is_called\"\u003eKeep video playback smooth if \u003ccode translate=\"no\" dir=\"ltr\"\u003eimportExternalTexture()\u003c/code\u003e is called\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-116#spec_conformance\"\u003eSpec conformance\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-116#improving_developer_experience\"\u003eImproving developer experience\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-116#dawn_updates\"\u003eDawn updates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"chrome115\" data-text=\"Chrome 115\" tabindex=\"-1\"\u003eChrome 115\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-115#supported_wgsl_language_extensions\"\u003eSupported WGSL language extensions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-115#experimental_support_for_direct3d_11\"\u003eExperimental support for Direct3D 11\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-115#get_discrete_gpu_by_default_on_ac_power\"\u003eGet discrete GPU by default on AC power\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-115#improving_developer_experience\"\u003eImproving developer experience\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-115#dawn_updates\"\u003eDawn updates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"chrome114\" data-text=\"Chrome 114\" tabindex=\"-1\"\u003eChrome 114\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-114#optimize_javascript\"\u003eOptimize JavaScript\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-114#getcurrenttexture_on_unconfigured_canvas_throws_invalidstateerror\"\u003egetCurrentTexture() on unconfigured canvas throws InvalidStateError\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-114#wgsl_updates\"\u003eWGSL updates\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-114#dawn_updates\"\u003eDawn updates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"chrome113\" data-text=\"Chrome 113\" tabindex=\"-1\"\u003eChrome 113\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.chrome.com/blog/new-in-webgpu-113#use_webcodecs_videoframe_source_in_importexternaltexture\"\u003eUse WebCodecs VideoFrame source in \u003ccode translate=\"no\" dir=\"ltr\"\u003eimportExternalTexture()\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n  \n\n  \n\u003c/div\u003e\n\n  \n\n  \n    \n    \n      \n    \u003cdevsite-thumb-rating position=\"footer\"\u003e\n    \u003c/devsite-thumb-rating\u003e\n  \n       \n    \n    \n  \n\n  \n  \n\u003c/article\u003e\n\n\n\u003cdevsite-content-footer\u003e\n  \u003cp\u003eExcept as otherwise noted, the content of this page is licensed under the \u003ca href=\"https://creativecommons.org/licenses/by/4.0/\"\u003eCreative Commons Attribution 4.0 License\u003c/a\u003e, and code samples are licensed under the \u003ca href=\"https://www.apache.org/licenses/LICENSE-2.0\"\u003eApache 2.0 License\u003c/a\u003e. For details, see the \u003ca href=\"https://developers.google.com/site-policies\"\u003eGoogle Developers Site Policies\u003c/a\u003e. Java is a registered trademark of Oracle and/or its affiliates.\u003c/p\u003e\n  \u003cp\u003eLast updated 2025-05-26 UTC.\u003c/p\u003e\n\u003c/devsite-content-footer\u003e\n\n\n\u003cdevsite-notification\u003e\n\u003c/devsite-notification\u003e\n\n\n  \n\u003cp\u003e\n  \n  \n    \u003ctemplate\u003e\n      [[[\u0026#34;Easy to understand\u0026#34;,\u0026#34;easyToUnderstand\u0026#34;,\u0026#34;thumb-up\u0026#34;],[\u0026#34;Solved my problem\u0026#34;,\u0026#34;solvedMyProblem\u0026#34;,\u0026#34;thumb-up\u0026#34;],[\u0026#34;Other\u0026#34;,\u0026#34;otherUp\u0026#34;,\u0026#34;thumb-up\u0026#34;]],[[\u0026#34;Missing the information I need\u0026#34;,\u0026#34;missingTheInformationINeed\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Too complicated / too many steps\u0026#34;,\u0026#34;tooComplicatedTooManySteps\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Out of date\u0026#34;,\u0026#34;outOfDate\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Samples / code issue\u0026#34;,\u0026#34;samplesCodeIssue\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Other\u0026#34;,\u0026#34;otherDown\u0026#34;,\u0026#34;thumb-down\u0026#34;]],[\u0026#34;Last updated 2025-05-26 UTC.\u0026#34;],[],[]]\n    \u003c/template\u003e\n  \n\u003c/p\u003e\n            \n          \u003c/devsite-content\u003e\n        \u003c/main\u003e\n        \n        \n        \n        \u003cdevsite-panel\u003e\n          \n        \u003c/devsite-panel\u003e\n        \n      \u003c/section\u003e\u003c/section\u003e\n    \u003cdevsite-sitemask\u003e\u003c/devsite-sitemask\u003e\n    \u003cdevsite-snackbar\u003e\u003c/devsite-snackbar\u003e\n    \u003cdevsite-tooltip\u003e\u003c/devsite-tooltip\u003e\n    \u003cdevsite-heading-link\u003e\u003c/devsite-heading-link\u003e\n    \u003cdevsite-analytics\u003e\n      \n        \n\n      \n    \u003c/devsite-analytics\u003e\n    \n      \u003cdevsite-badger\u003e\u003c/devsite-badger\u003e\n    \n    \n    \n\n\n    \u003cdevsite-a11y-announce\u003e\u003c/devsite-a11y-announce\u003e\n  \n\u003c/div\u003e",
  "readingTime": "12 min read",
  "publishedTime": null,
  "modifiedTime": null
}
