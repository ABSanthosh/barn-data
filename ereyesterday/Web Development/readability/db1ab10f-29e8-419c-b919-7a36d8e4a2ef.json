{
  "id": "db1ab10f-29e8-419c-b919-7a36d8e4a2ef",
  "title": "CSS text-box-trim",
  "link": "https://developer.chrome.com/blog/css-text-box-trim?hl=en",
  "description": "Take back space from above and below your text content; achieve optical balance.",
  "author": "",
  "published": "Tue, 14 Jan 2025 08:00:00 GMT",
  "source": "https://developer.chrome.com/static/blog/feed.xml",
  "categories": null,
  "byline": "",
  "length": 7807,
  "excerpt": "Take back space from above and below your text content; achieve optical balance.",
  "siteName": "Chrome for Developers",
  "favicon": "https://www.gstatic.com/devrel-devsite/prod/vda41147226ae308b24384f785d31d739107d2716272d99cd11c490ff3892954d/chrome/images/favicon.png",
  "text": "Stay organized with collections Save and categorize content based on your preferences. Take back space from above and below your text content; achieve optical balance. Published: Jan 14, 2025 From Chrome 133, text-box lets developers and designers tailor the space above and below text. Longhand: text-box-trim: trim-start | trim-end | trim-both | none; text-box-edge: cap | ex | text | leading + alphabetic | text; Shorthand: text-box: trim-both cap alphabetic; This property lets you control the space above and below text, for example \u003ch1\u003e, \u003cbutton\u003e and \u003cp\u003e. Every font produces a different amount of this block directional space which contributes to the element's size. This chaotic space contribution is not easily measured, and has been impossible to control until now. The font knows, now CSS knows! https://codepen.io/web-dot-dev/pen/xbKjRxL The space above and below a font is due to how the web lays out text, called \"half-leading\". This is expertly covered in a post by Matthias Ott called The Thing With Leading In CSS. Essentially, when typesetting was done by hand, pieces of metal lead were used to separate lines of text. The web, inspired by leading, divides that piece of lead in half and distributes a piece above and a piece below the content. Source This history is meaningful because, text-box gives us names for each half: over and under. Plus, the ability to trim it off. There is prior art to text-box also, you may recall the exciting post from Ethan Wang called Leading-Trim: The Future Of Digital Typesetting, where leading-trim (the name text-box previously had) was first introduced. Your entry point into text trimming might be from Figma and its \"vertical trim\" controls for designers. This X post demonstrates where this vertical trim option is and how it's helpful for buttons. Source Regardless of how you got here, this small sounding typography control can make a big difference. Feature and syntax overview Here, in my opinion, are the two most common one-liners you'll need when working with text-box: h1 { /* trim both sides to the capital letters */ text-box: trim-both cap alphabetic; /* trim both sides to the lowercase letter x */ text-box: trim-both ex alphabetic; } Trimming both to cap alphabetic will be the most common use of this feature. The following demos use this many times. However, the previous example also shows ex alphabetic because it is useful for optical balance in its own unique ways. Explorer playground The following demo lets you explore the syntax and see results using dropdown menus. You can change fonts, change over and under trim values, and follow along with the color coded visuals and labels. Things to try: Visually inspecting how text-box-trim works across single line and multi-line text variants. Hovering over a variant, seeing the trim values used to achieve that effect. Changing the font. Trimming only one side of a text box. Review the syntax as you play. https://codepen.io/web-dot-dev/pen/RNbyooE What can I build with it or what problems does it solve? There are some much simpler centering and alignment solutions that emerge from this trim capability. You can even get closer to proper leading, where something like gap can be used between contents. https://codepen.io/web-dot-dev/pen/RNbyoKE Easier centering For smaller, more inline and content intrinsic components, padding: 10px is a reasonable style to specify for an element for equal spacing on all sides. However, the result can confuse people, as it often has extra space on the top and bottom. To work around this, developers often explicitly putting less padding on the top and bottom (block) to offset the effects of half leading. button { padding-block: 5px; padding-inline: 10px; } At this point we're left to try value combinations until things are optically centered. This might look good on one screen and operating system, but not on another. text-box allows us to trim the half leading space from the text, making equal padding values like 10px useful: button { text-box: trim-both cap alphabetic; padding: 10px; } https://codepen.io/web-dot-dev/pen/NPKMbgq Here are a few \u003cbutton\u003e elements that show how trimming the space with text-box makes padding: 10px look equal on all sides in a practical interactive element. Notice how the alternative font can produce some wildly different half leading space. https://codepen.io/web-dot-dev/pen/mybLOMg Here are \u003cspan\u003e elements, often used to show categories or badges. Another moment where equal sided padding should be the best solution, but until text-box we've had to work around it. https://codepen.io/web-dot-dev/pen/mybLOMg Easier Alignment The extra, uncontrollable, half leading space above (over) and below (under) a text box also makes alignment difficult. The following examples show when half leading can make alignment difficult and how trimming the block sides of a text box can create better alignments. Here an image is placed next to text. The image will grow to the height that the text needs, but without text-box, the image is always a little bit taller. With text-box, the image can perfectly align with the text content. https://codepen.io/web-dot-dev/pen/yyBjVpg Notice the whitespace is above the first formatted line of text and below the last formatted line of text in scenarios with line wrapping. In the following example, notice how the feature logically adapts to a change in writing-mode. Try changing the text, watch how the layout continues to stay aligned. https://codepen.io/web-dot-dev/pen/dPbeOJQ Continue study Want to know more? The following list of links offer various amounts of additional information and use cases. https://codepen.io/collection/zxQBaL - a Codepen collection of all the above demo's https://github.com/jantimon/text-box-trim-examples - Great research and demos by Jan Nicklas https://css-tricks.com/two-css-properties-for-trimming-text-box-whitespace/ https://drafts.csswg.org/css-inline-3/#text-edges Not to be confused with size-adjust or ascent-override https://web.dev/articles/css-size-adjust https://www.smashingmagazine.com/2012/12/css-baseline-the-good-the-bad-and-the-ugly/ https://css-tricks.com/two-css-properties-for-trimming-text-box-whitespace/ applied to many HTML elements https://codepen.io/nileshprajapati/pen/RweKdmw Safari's blog post https://webkit.org/blog/16301/webkit-features-in-safari-18-2/ https://piccalil.li/blog/why-im-excited-about-text-box-trim-as-a-designer/ Except as otherwise noted, the content of this page is licensed under the Creative Commons Attribution 4.0 License, and code samples are licensed under the Apache 2.0 License. For details, see the Google Developers Site Policies. Java is a registered trademark of Oracle and/or its affiliates. Last updated 2025-01-14 UTC. [[[\"Easy to understand\",\"easyToUnderstand\",\"thumb-up\"],[\"Solved my problem\",\"solvedMyProblem\",\"thumb-up\"],[\"Other\",\"otherUp\",\"thumb-up\"]],[[\"Missing the information I need\",\"missingTheInformationINeed\",\"thumb-down\"],[\"Too complicated / too many steps\",\"tooComplicatedTooManySteps\",\"thumb-down\"],[\"Out of date\",\"outOfDate\",\"thumb-down\"],[\"Samples / code issue\",\"samplesCodeIssue\",\"thumb-down\"],[\"Other\",\"otherDown\",\"thumb-down\"]],[\"Last updated 2025-01-14 UTC.\"],[],[]]",
  "image": "https://developer.chrome.com/static/blog/css-text-box-trim/thumb.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv role=\"main\" has-sidebar=\"\"\u003e\n          \n          \n          \n          \n          \u003cdevsite-content\u003e\n            \n              \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003carticle\u003e\n  \n  \n  \n  \n  \n\n  \n  \n    \n  \u003cdevsite-feature-tooltip ack-key=\"AckCollectionsBookmarkTooltipDismiss\" analytics-category=\"Site-Wide Custom Events\" analytics-action-show=\"Callout Profile displayed\" analytics-action-close=\"Callout Profile dismissed\" analytics-label=\"Create Collection Callout\" dismiss-button=\"true\" id=\"devsite-collections-dropdown\" dismiss-button-text=\"Dismiss\" close-button-text=\"Got it\"\u003e\n\n    \n    \u003cdevsite-bookmark\u003e\u003c/devsite-bookmark\u003e\n\n    \u003cspan slot=\"popout-heading\"\u003e\n      \n      Stay organized with collections\n    \u003c/span\u003e\n    \u003cspan slot=\"popout-contents\"\u003e\n      \n      Save and categorize content based on your preferences.\n    \u003c/span\u003e\n  \u003c/devsite-feature-tooltip\u003e\n  \n  \n\n  \u003cdevsite-toc depth=\"2\" devsite-toc-embedded=\"\"\u003e\n  \u003c/devsite-toc\u003e\n  \n    \n  \n\n  \n\n\n\n\n\n\n\u003cdiv\u003e\n\n  \n    \n\n\n\n\n\u003cp\u003eTake back space from above and below your text content; achieve optical balance.\u003c/p\u003e\n\n\u003cdiv translate=\"no\"\u003e\n        \n          \u003cp\u003e\u003cimg alt=\"Adam Argyle\" src=\"https://web.dev/images/authors/argyle.jpg\" decoding=\"async\" height=\"64\" loading=\"lazy\" width=\"64\"/\u003e\u003c/p\u003e\n      \u003c/div\u003e\n\n\u003cp\u003e\n  Published: Jan 14, 2025\n\u003c/p\u003e\n\n\n\u003cp\u003eFrom Chrome 133, \u003ccode translate=\"no\" dir=\"ltr\"\u003etext-box\u003c/code\u003e lets developers and designers tailor the space above and below text. \u003c/p\u003e\n\n\n    \n    \n    \n  \n\n\u003cp\u003e\u003cstrong\u003eLonghand:\u003c/strong\u003e\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"CSS\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003etext-box-trim\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etrim-start\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e|\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etrim-end\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e|\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etrim-both\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e|\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003enone\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003etext-box-edge\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ecap\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e|\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eex\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e|\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etext\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e|\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eleading\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e+\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ealphabetic\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e|\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etext\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003cp\u003e\u003cstrong\u003eShorthand:\u003c/strong\u003e\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"CSS\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003etext-box\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etrim-both\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ecap\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ealphabetic\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003cp\u003eThis property lets you control the space above and below text, for example \u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026lt;h1\u0026gt;\u003c/code\u003e, \u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026lt;button\u0026gt;\u003c/code\u003e and \u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026lt;p\u0026gt;\u003c/code\u003e. Every font produces a different amount of this block directional space which contributes to the element\u0026#39;s size. This chaotic space contribution is not easily measured, and has been impossible to control until now.\u003c/p\u003e\n\n\u003cp\u003eThe font knows, now CSS knows!\u003c/p\u003e\n\n\u003cfigure\u003e\n  \u003cvideo autoplay=\"\" loop=\"\" muted=\"\" playsinline=\"\" controls=\"\" width=\"950\" height=\"534\"\u003e\n    \u003csource src=\"https://developer.chrome.com/static/blog/css-text-box-trim/text-box-intro.mp4\" type=\"video/mp4\"/\u003e\n  \u003c/video\u003e\n  \u003cfigcaption\u003e\n    \u003ca href=\"https://codepen.io/web-dot-dev/pen/xbKjRxL\"\u003ehttps://codepen.io/web-dot-dev/pen/xbKjRxL\u003c/a\u003e      \n  \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eThe space above and below a font is due to how the web lays out text, called \u0026#34;half-leading\u0026#34;. This is expertly covered in a post by \u003ca href=\"https://matthiasott.com/\"\u003eMatthias Ott\u003c/a\u003e called \u003ca href=\"https://matthiasott.com/notes/the-thing-with-leading-in-css\"\u003eThe Thing With Leading In CSS\u003c/a\u003e. Essentially, when typesetting was done by hand, pieces of metal lead were used to separate lines of text. The web, inspired by leading, divides that piece of lead in half and distributes a piece above and a piece below the content.\u003c/p\u003e\n\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/css-text-box-trim/half-leading.png\" alt=\"A headline is shown with a hotpink bar above and below the text to show half-leading.\" width=\"1536\" height=\"633\" srcset=\"https://developer.chrome.com/static/blog/css-text-box-trim/half-leading_36.png 36w,https://developer.chrome.com/static/blog/css-text-box-trim/half-leading_48.png 48w,https://developer.chrome.com/static/blog/css-text-box-trim/half-leading_72.png 72w,https://developer.chrome.com/static/blog/css-text-box-trim/half-leading_96.png 96w,https://developer.chrome.com/static/blog/css-text-box-trim/half-leading_480.png 480w,https://developer.chrome.com/static/blog/css-text-box-trim/half-leading_720.png 720w,https://developer.chrome.com/static/blog/css-text-box-trim/half-leading_856.png 856w,https://developer.chrome.com/static/blog/css-text-box-trim/half-leading_960.png 960w,https://developer.chrome.com/static/blog/css-text-box-trim/half-leading_1440.png 1440w,https://developer.chrome.com/static/blog/css-text-box-trim/half-leading_1920.png 1920w,https://developer.chrome.com/static/blog/css-text-box-trim/half-leading_2880.png 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n  \u003cfigcaption\u003e\n    \u003ca href=\"https://matthiasott.com/notes/the-thing-with-leading-in-css\"\u003eSource\u003c/a\u003e      \n  \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eThis history is meaningful because, \u003ccode translate=\"no\" dir=\"ltr\"\u003etext-box\u003c/code\u003e gives us names for each half: over and under. Plus, the ability to trim it off.\u003c/p\u003e\n\n\u003cp\u003eThere is prior art to \u003ccode translate=\"no\" dir=\"ltr\"\u003etext-box\u003c/code\u003e also, you may recall the exciting post from Ethan Wang called \u003ca href=\"https://medium.com/microsoft-design/leading-trim-the-future-of-digital-typesetting-d082d84b202\"\u003eLeading-Trim: The Future Of Digital Typesetting\u003c/a\u003e, where \u003ccode translate=\"no\" dir=\"ltr\"\u003eleading-trim\u003c/code\u003e (the name \u003ccode translate=\"no\" dir=\"ltr\"\u003etext-box\u003c/code\u003e previously had) was first introduced.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://developer.chrome.com/static/blog/css-text-box-trim/gutenberg-leading-trim.gif\" alt=\"A headline is shown with excess space above and below appear to be cut with scissors and removed.\" width=\"1666\" height=\"592\"/\u003e\u003c/p\u003e\n\n\u003cp\u003eYour entry point into text trimming might be from \u003ca href=\"https://help.figma.com/hc/en-us/articles/360039956634-Explore-text-properties#h_01H96FW9Z3W7J7Z2HEN8V17BZT\"\u003eFigma and its \u0026#34;vertical trim\u0026#34; controls\u003c/a\u003e for designers. \u003ca href=\"https://x.com/figma/status/1640750882613493760\"\u003eThis X post demonstrates where this vertical trim option is\u003c/a\u003e and how it\u0026#39;s helpful for buttons.\u003c/p\u003e\n\n\u003cfigure\u003e\n  \u003cvideo autoplay=\"\" loop=\"\" muted=\"\" playsinline=\"\" controls=\"\" width=\"1080\" height=\"1080\"\u003e\n    \u003csource src=\"https://developer.chrome.com/static/blog/css-text-box-trim/figma-text-box-trim.mp4\" type=\"video/mp4\"/\u003e\n  \u003c/video\u003e\n  \u003cfigcaption\u003e\n    \u003ca href=\"https://x.com/figma/status/1640750882613493760\"\u003eSource\u003c/a\u003e      \n  \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eRegardless of how you got here, this small sounding typography control can make a big difference.\u003c/p\u003e\n\n\u003ch2 id=\"feature_and_syntax_overview\" data-text=\"Feature and syntax overview\" tabindex=\"-1\"\u003eFeature and syntax overview\u003c/h2\u003e\n\n\u003cp\u003eHere, in my opinion, are the two most common one-liners you\u0026#39;ll need when working with \u003ccode translate=\"no\" dir=\"ltr\"\u003etext-box\u003c/code\u003e:\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"CSS\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003eh1\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e/* trim both sides to the capital letters */\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003etext-box\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etrim-both\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ecap\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ealphabetic\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e/* trim both sides to the lowercase letter x */\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003etext-box\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etrim-both\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eex\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ealphabetic\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003cp\u003eTrimming both to \u003ccode translate=\"no\" dir=\"ltr\"\u003ecap alphabetic\u003c/code\u003e will be the most common use of this feature. The following demos use this many times. However, the previous example also shows \u003ccode translate=\"no\" dir=\"ltr\"\u003eex alphabetic\u003c/code\u003e because it is useful for optical balance in its own unique ways.\u003c/p\u003e\n\n\u003ch3 id=\"explorer_playground\" data-text=\"Explorer playground\" tabindex=\"-1\"\u003eExplorer playground\u003c/h3\u003e\n\n\u003cp\u003eThe following demo lets you \u003ca href=\"https://codepen.io/web-dot-dev/pen/RNbyooE\"\u003eexplore the syntax\u003c/a\u003e and see results using dropdown menus. You can change fonts, change over and under trim values, and follow along with the color coded visuals and labels.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://developer.chrome.com/static/blog/css-text-box-trim/syntax-explorer.png\" alt=\"A screenshot of the syntax explorer demo. Shows the font and a dropdown to choose a different font. A syntax preview with text-box: trim-both cap alphabetic syntax highlighted and shown. Finall, there\u0026#39;s 3 more dropdowns to choose trim values.\" width=\"1146\" height=\"385\" srcset=\"https://developer.chrome.com/static/blog/css-text-box-trim/syntax-explorer_36.png 36w,https://developer.chrome.com/static/blog/css-text-box-trim/syntax-explorer_48.png 48w,https://developer.chrome.com/static/blog/css-text-box-trim/syntax-explorer_72.png 72w,https://developer.chrome.com/static/blog/css-text-box-trim/syntax-explorer_96.png 96w,https://developer.chrome.com/static/blog/css-text-box-trim/syntax-explorer_480.png 480w,https://developer.chrome.com/static/blog/css-text-box-trim/syntax-explorer_720.png 720w,https://developer.chrome.com/static/blog/css-text-box-trim/syntax-explorer_856.png 856w,https://developer.chrome.com/static/blog/css-text-box-trim/syntax-explorer_960.png 960w,https://developer.chrome.com/static/blog/css-text-box-trim/syntax-explorer_1440.png 1440w,https://developer.chrome.com/static/blog/css-text-box-trim/syntax-explorer_1920.png 1920w,https://developer.chrome.com/static/blog/css-text-box-trim/syntax-explorer_2880.png 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eThings to try:\u003c/strong\u003e\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eVisually inspecting how \u003ccode translate=\"no\" dir=\"ltr\"\u003etext-box-trim\u003c/code\u003e works across single line and multi-line text variants.\u003c/li\u003e\n\u003cli\u003eHovering over a variant, seeing the trim values used to achieve that effect.\u003c/li\u003e\n\u003cli\u003eChanging the font.\u003c/li\u003e\n\u003cli\u003eTrimming only one side of a text box.\u003c/li\u003e\n\u003cli\u003eReview the syntax as you play.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cfigure\u003e\n  \u003cvideo autoplay=\"\" loop=\"\" muted=\"\" playsinline=\"\" controls=\"\" width=\"1921\" height=\"1080\"\u003e\n    \u003csource src=\"https://developer.chrome.com/static/blog/css-text-box-trim/syntax-explorer.mp4\" type=\"video/mp4\"/\u003e\n  \u003c/video\u003e\n  \u003cfigcaption\u003e\n    \u003ca href=\"https://codepen.io/web-dot-dev/pen/RNbyooE\"\u003ehttps://codepen.io/web-dot-dev/pen/RNbyooE\u003c/a\u003e      \n  \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003ch2 id=\"what_can_i_build_with_it_or_what_problems_does_it_solve\" data-text=\"What can I build with it or what problems does it solve?\" tabindex=\"-1\"\u003eWhat can I build with it or what problems does it solve?\u003c/h2\u003e\n\n\u003cp\u003eThere are some much simpler centering and alignment solutions that emerge from this trim capability. You can even get closer to proper leading, where something like \u003ccode translate=\"no\" dir=\"ltr\"\u003egap\u003c/code\u003e can be used between contents.\u003c/p\u003e\n\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/css-text-box-trim/leading.png\" alt=\"A comparison is shown between 2 groups of content. The first group has half-leading, the second has trimmed leading. The result is the second group is tighter together.\" width=\"1884\" height=\"510\" srcset=\"https://developer.chrome.com/static/blog/css-text-box-trim/leading_36.png 36w,https://developer.chrome.com/static/blog/css-text-box-trim/leading_48.png 48w,https://developer.chrome.com/static/blog/css-text-box-trim/leading_72.png 72w,https://developer.chrome.com/static/blog/css-text-box-trim/leading_96.png 96w,https://developer.chrome.com/static/blog/css-text-box-trim/leading_480.png 480w,https://developer.chrome.com/static/blog/css-text-box-trim/leading_720.png 720w,https://developer.chrome.com/static/blog/css-text-box-trim/leading_856.png 856w,https://developer.chrome.com/static/blog/css-text-box-trim/leading_960.png 960w,https://developer.chrome.com/static/blog/css-text-box-trim/leading_1440.png 1440w,https://developer.chrome.com/static/blog/css-text-box-trim/leading_1920.png 1920w,https://developer.chrome.com/static/blog/css-text-box-trim/leading_2880.png 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n  \u003cfigcaption\u003e\n    \u003ca href=\"https://codepen.io/web-dot-dev/pen/RNbyoKE\"\u003ehttps://codepen.io/web-dot-dev/pen/RNbyoKE\u003c/a\u003e      \n  \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003ch3 id=\"easier_centering\" data-text=\"Easier centering\" tabindex=\"-1\"\u003eEasier centering\u003c/h3\u003e\n\n\u003cp\u003eFor smaller, more inline and content intrinsic components, \u003ccode translate=\"no\" dir=\"ltr\"\u003epadding: 10px\u003c/code\u003e is a reasonable style to specify for an element for equal spacing on all sides. However, the result can confuse people, as it often has extra space on the top and bottom. \u003c/p\u003e\n\n\u003cp\u003eTo work around this, developers often explicitly putting less padding on the top and bottom (block) to offset the effects of half leading.\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"CSS\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003ebutton\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003epadding-block\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e5\u003c/span\u003e\u003cspan\u003epx\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003epadding-inline\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e10\u003c/span\u003e\u003cspan\u003epx\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003cp\u003eAt this point we\u0026#39;re left to try value combinations until things are optically centered. This might look good on one screen and operating system, but not on another.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003etext-box\u003c/code\u003e allows us to trim the half leading space from the text, making equal padding values like \u003ccode translate=\"no\" dir=\"ltr\"\u003e10px\u003c/code\u003e useful:\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"CSS\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003ebutton\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003etext-box\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etrim-both\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ecap\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ealphabetic\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003epadding\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e10\u003c/span\u003e\u003cspan\u003epx\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/css-text-box-trim/centering.png\" alt=\"Two examples are shown. The first shows an element with padding: 10px and half-leading. The second shows the same element with text-box: trim-both cap alphabetic. The result is the second button is optically centered.\" width=\"773\" height=\"171\" srcset=\"https://developer.chrome.com/static/blog/css-text-box-trim/centering_36.png 36w,https://developer.chrome.com/static/blog/css-text-box-trim/centering_48.png 48w,https://developer.chrome.com/static/blog/css-text-box-trim/centering_72.png 72w,https://developer.chrome.com/static/blog/css-text-box-trim/centering_96.png 96w,https://developer.chrome.com/static/blog/css-text-box-trim/centering_480.png 480w,https://developer.chrome.com/static/blog/css-text-box-trim/centering_720.png 720w,https://developer.chrome.com/static/blog/css-text-box-trim/centering_856.png 856w,https://developer.chrome.com/static/blog/css-text-box-trim/centering_960.png 960w,https://developer.chrome.com/static/blog/css-text-box-trim/centering_1440.png 1440w,https://developer.chrome.com/static/blog/css-text-box-trim/centering_1920.png 1920w,https://developer.chrome.com/static/blog/css-text-box-trim/centering_2880.png 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n  \u003cfigcaption\u003e\n    \u003ca href=\"https://codepen.io/web-dot-dev/pen/NPKMbgq\"\u003ehttps://codepen.io/web-dot-dev/pen/NPKMbgq\u003c/a\u003e      \n  \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\n\n\u003cp\u003eHere are a few \u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026lt;button\u0026gt;\u003c/code\u003e elements that show how trimming the space with \u003ccode translate=\"no\" dir=\"ltr\"\u003etext-box\u003c/code\u003e makes \u003ccode translate=\"no\" dir=\"ltr\"\u003epadding: 10px\u003c/code\u003e look equal on all sides in a practical interactive element. Notice how the alternative font can produce some wildly different half leading space.\u003c/p\u003e\n\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/css-text-box-trim/buttons.png\" alt=\"Three groups of buttons are shown. The first group shows a regular sans serif font. The second group shows a fancy or fun font. The third group shows the same effect but with a hand writing font. The point is to show each font has different half leading space, but the trim values are the same and can normalize the space.\" width=\"2456\" height=\"990\" srcset=\"https://developer.chrome.com/static/blog/css-text-box-trim/buttons_36.png 36w,https://developer.chrome.com/static/blog/css-text-box-trim/buttons_48.png 48w,https://developer.chrome.com/static/blog/css-text-box-trim/buttons_72.png 72w,https://developer.chrome.com/static/blog/css-text-box-trim/buttons_96.png 96w,https://developer.chrome.com/static/blog/css-text-box-trim/buttons_480.png 480w,https://developer.chrome.com/static/blog/css-text-box-trim/buttons_720.png 720w,https://developer.chrome.com/static/blog/css-text-box-trim/buttons_856.png 856w,https://developer.chrome.com/static/blog/css-text-box-trim/buttons_960.png 960w,https://developer.chrome.com/static/blog/css-text-box-trim/buttons_1440.png 1440w,https://developer.chrome.com/static/blog/css-text-box-trim/buttons_1920.png 1920w,https://developer.chrome.com/static/blog/css-text-box-trim/buttons_2880.png 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n  \u003cfigcaption\u003e\n    \u003ca href=\"https://codepen.io/web-dot-dev/pen/mybLOMg\"\u003ehttps://codepen.io/web-dot-dev/pen/mybLOMg\u003c/a\u003e      \n  \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eHere are \u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026lt;span\u0026gt;\u003c/code\u003e elements, often used to show categories or badges. Another moment where equal sided padding should be the best solution, but until \u003ccode translate=\"no\" dir=\"ltr\"\u003etext-box\u003c/code\u003e we\u0026#39;ve had to work around it.\u003c/p\u003e\n\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/css-text-box-trim/tags.png\" alt=\"Tags are shown compared side by side. The first group has half-leading, the second has trimmed leading. The result is the second group is tighter together and optically centered.\" width=\"2456\" height=\"990\" srcset=\"https://developer.chrome.com/static/blog/css-text-box-trim/tags_36.png 36w,https://developer.chrome.com/static/blog/css-text-box-trim/tags_48.png 48w,https://developer.chrome.com/static/blog/css-text-box-trim/tags_72.png 72w,https://developer.chrome.com/static/blog/css-text-box-trim/tags_96.png 96w,https://developer.chrome.com/static/blog/css-text-box-trim/tags_480.png 480w,https://developer.chrome.com/static/blog/css-text-box-trim/tags_720.png 720w,https://developer.chrome.com/static/blog/css-text-box-trim/tags_856.png 856w,https://developer.chrome.com/static/blog/css-text-box-trim/tags_960.png 960w,https://developer.chrome.com/static/blog/css-text-box-trim/tags_1440.png 1440w,https://developer.chrome.com/static/blog/css-text-box-trim/tags_1920.png 1920w,https://developer.chrome.com/static/blog/css-text-box-trim/tags_2880.png 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n  \u003cfigcaption\u003e\n    \u003ca href=\"https://codepen.io/web-dot-dev/pen/mybLOMg\"\u003ehttps://codepen.io/web-dot-dev/pen/mybLOMg\u003c/a\u003e      \n  \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003ch3 id=\"easier_alignment\" data-text=\"Easier Alignment\" tabindex=\"-1\"\u003eEasier Alignment\u003c/h3\u003e\n\n\u003cp\u003eThe extra, uncontrollable, half leading space above (\u003ccode translate=\"no\" dir=\"ltr\"\u003eover\u003c/code\u003e) and below (\u003ccode translate=\"no\" dir=\"ltr\"\u003eunder\u003c/code\u003e) a text box also makes alignment difficult. The following examples show when half leading can make alignment difficult and how trimming the block sides of a text box can create better alignments.\u003c/p\u003e\n\n\u003cp\u003eHere an image is placed next to text. The image will grow to the height that the text needs, but without \u003ccode translate=\"no\" dir=\"ltr\"\u003etext-box\u003c/code\u003e, the image is always a little bit taller. With \u003ccode translate=\"no\" dir=\"ltr\"\u003etext-box\u003c/code\u003e, the image can perfectly align with the text content.\u003c/p\u003e\n\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/css-text-box-trim/trimmed-half-leading-for-alignment.jpg\" alt=\"\" width=\"1507\" height=\"863\" srcset=\"https://developer.chrome.com/static/blog/css-text-box-trim/trimmed-half-leading-for-alignment_36.jpg 36w,https://developer.chrome.com/static/blog/css-text-box-trim/trimmed-half-leading-for-alignment_48.jpg 48w,https://developer.chrome.com/static/blog/css-text-box-trim/trimmed-half-leading-for-alignment_72.jpg 72w,https://developer.chrome.com/static/blog/css-text-box-trim/trimmed-half-leading-for-alignment_96.jpg 96w,https://developer.chrome.com/static/blog/css-text-box-trim/trimmed-half-leading-for-alignment_480.jpg 480w,https://developer.chrome.com/static/blog/css-text-box-trim/trimmed-half-leading-for-alignment_720.jpg 720w,https://developer.chrome.com/static/blog/css-text-box-trim/trimmed-half-leading-for-alignment_856.jpg 856w,https://developer.chrome.com/static/blog/css-text-box-trim/trimmed-half-leading-for-alignment_960.jpg 960w,https://developer.chrome.com/static/blog/css-text-box-trim/trimmed-half-leading-for-alignment_1440.jpg 1440w,https://developer.chrome.com/static/blog/css-text-box-trim/trimmed-half-leading-for-alignment_1920.jpg 1920w,https://developer.chrome.com/static/blog/css-text-box-trim/trimmed-half-leading-for-alignment_2880.jpg 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n  \u003cfigcaption\u003e\n    \u003ca href=\"https://codepen.io/web-dot-dev/pen/yyBjVpg\"\u003ehttps://codepen.io/web-dot-dev/pen/yyBjVpg\u003c/a\u003e      \n  \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eNotice the whitespace is above the first formatted line of text and below the last formatted line of text in scenarios with line wrapping.\u003c/p\u003e\n\n\u003cp\u003eIn the following example, notice how the feature \u003ca href=\"https://web.dev/learn/css/logical-properties\"\u003elogically adapts\u003c/a\u003e to a change in \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/writing-mode\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003ewriting-mode\u003c/code\u003e\u003c/a\u003e. Try changing the text, watch how the layout continues to stay aligned.\u003c/p\u003e\n\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/css-text-box-trim/super-rad-design.png\" alt=\"\" width=\"1446\" height=\"1410\" srcset=\"https://developer.chrome.com/static/blog/css-text-box-trim/super-rad-design_36.png 36w,https://developer.chrome.com/static/blog/css-text-box-trim/super-rad-design_48.png 48w,https://developer.chrome.com/static/blog/css-text-box-trim/super-rad-design_72.png 72w,https://developer.chrome.com/static/blog/css-text-box-trim/super-rad-design_96.png 96w,https://developer.chrome.com/static/blog/css-text-box-trim/super-rad-design_480.png 480w,https://developer.chrome.com/static/blog/css-text-box-trim/super-rad-design_720.png 720w,https://developer.chrome.com/static/blog/css-text-box-trim/super-rad-design_856.png 856w,https://developer.chrome.com/static/blog/css-text-box-trim/super-rad-design_960.png 960w,https://developer.chrome.com/static/blog/css-text-box-trim/super-rad-design_1440.png 1440w,https://developer.chrome.com/static/blog/css-text-box-trim/super-rad-design_1920.png 1920w,https://developer.chrome.com/static/blog/css-text-box-trim/super-rad-design_2880.png 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n  \u003cfigcaption\u003e\n    \u003ca href=\"https://codepen.io/web-dot-dev/pen/dPbeOJQ\"\u003ehttps://codepen.io/web-dot-dev/pen/dPbeOJQ\u003c/a\u003e      \n  \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003ch2 id=\"continue_study\" data-text=\"Continue study\" tabindex=\"-1\"\u003eContinue study\u003c/h2\u003e\n\n\u003cp\u003eWant to know more? The following list of links offer various amounts of additional information and use cases.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://codepen.io/collection/zxQBaL\"\u003ehttps://codepen.io/collection/zxQBaL\u003c/a\u003e - a Codepen collection of all the above demo\u0026#39;s\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/jantimon/text-box-trim-examples\"\u003ehttps://github.com/jantimon/text-box-trim-examples\u003c/a\u003e - Great research and demos by Jan Nicklas\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://css-tricks.com/two-css-properties-for-trimming-text-box-whitespace/\"\u003ehttps://css-tricks.com/two-css-properties-for-trimming-text-box-whitespace/\u003c/a\u003e \u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://drafts.csswg.org/css-inline-3/#text-edges\"\u003ehttps://drafts.csswg.org/css-inline-3/#text-edges\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eNot to be confused with \u003ccode translate=\"no\" dir=\"ltr\"\u003esize-adjust\u003c/code\u003e or \u003ccode translate=\"no\" dir=\"ltr\"\u003eascent-override\u003c/code\u003e https://web.dev/articles/css-size-adjust \u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.smashingmagazine.com/2012/12/css-baseline-the-good-the-bad-and-the-ugly/\"\u003ehttps://www.smashingmagazine.com/2012/12/css-baseline-the-good-the-bad-and-the-ugly/\u003c/a\u003e \u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://css-tricks.com/two-css-properties-for-trimming-text-box-whitespace/\"\u003ehttps://css-tricks.com/two-css-properties-for-trimming-text-box-whitespace/\u003c/a\u003e \u003c/li\u003e\n\u003cli\u003eapplied to many HTML elements \u003ca href=\"https://codepen.io/nileshprajapati/pen/RweKdmw\"\u003ehttps://codepen.io/nileshprajapati/pen/RweKdmw\u003c/a\u003e \u003c/li\u003e\n\u003cli\u003eSafari\u0026#39;s blog post \u003ca href=\"https://webkit.org/blog/16301/webkit-features-in-safari-18-2/\"\u003ehttps://webkit.org/blog/16301/webkit-features-in-safari-18-2/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://piccalil.li/blog/why-im-excited-about-text-box-trim-as-a-designer/\"\u003ehttps://piccalil.li/blog/why-im-excited-about-text-box-trim-as-a-designer/\u003c/a\u003e \u003c/li\u003e\n\u003c/ul\u003e\n\n  \n\n  \n\u003c/div\u003e\n\n  \n\n  \n    \n    \n      \n    \u003cdevsite-thumb-rating position=\"footer\"\u003e\n    \u003c/devsite-thumb-rating\u003e\n  \n       \n    \n    \n  \n\n  \n  \n\u003c/article\u003e\n\n\n\u003cdevsite-content-footer\u003e\n  \u003cp\u003eExcept as otherwise noted, the content of this page is licensed under the \u003ca href=\"https://creativecommons.org/licenses/by/4.0/\"\u003eCreative Commons Attribution 4.0 License\u003c/a\u003e, and code samples are licensed under the \u003ca href=\"https://www.apache.org/licenses/LICENSE-2.0\"\u003eApache 2.0 License\u003c/a\u003e. For details, see the \u003ca href=\"https://developers.google.com/site-policies\"\u003eGoogle Developers Site Policies\u003c/a\u003e. Java is a registered trademark of Oracle and/or its affiliates.\u003c/p\u003e\n  \u003cp\u003eLast updated 2025-01-14 UTC.\u003c/p\u003e\n\u003c/devsite-content-footer\u003e\n\n\n\u003cdevsite-notification\u003e\n\u003c/devsite-notification\u003e\n\n\n  \n\u003cp\u003e\n  \n  \n    \u003ctemplate\u003e\n      [[[\u0026#34;Easy to understand\u0026#34;,\u0026#34;easyToUnderstand\u0026#34;,\u0026#34;thumb-up\u0026#34;],[\u0026#34;Solved my problem\u0026#34;,\u0026#34;solvedMyProblem\u0026#34;,\u0026#34;thumb-up\u0026#34;],[\u0026#34;Other\u0026#34;,\u0026#34;otherUp\u0026#34;,\u0026#34;thumb-up\u0026#34;]],[[\u0026#34;Missing the information I need\u0026#34;,\u0026#34;missingTheInformationINeed\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Too complicated / too many steps\u0026#34;,\u0026#34;tooComplicatedTooManySteps\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Out of date\u0026#34;,\u0026#34;outOfDate\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Samples / code issue\u0026#34;,\u0026#34;samplesCodeIssue\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Other\u0026#34;,\u0026#34;otherDown\u0026#34;,\u0026#34;thumb-down\u0026#34;]],[\u0026#34;Last updated 2025-01-14 UTC.\u0026#34;],[],[]]\n    \u003c/template\u003e\n  \n\u003c/p\u003e\n            \n          \u003c/devsite-content\u003e\n        \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "9 min read",
  "publishedTime": null,
  "modifiedTime": null
}
