{
  "id": "c87e8c89-b66a-4dea-a911-299a3f2dbfc2",
  "title": "How to Add a Header to a curl Request",
  "link": "https://davidwalsh.name/curl-add-header",
  "description": "curl is one of those great utilities that’s been around seemingly forever and has endless use cases. These days I find myself using curl to batch download files and test APIs. Sometimes my testing leads me to using different HTTP headers in my requests. To add a header to a curl request, use the -H […] The post How to Add a Header to a curl Request appeared first on David Walsh Blog.",
  "author": "David Walsh",
  "published": "Sat, 03 Aug 2024 16:51:46 +0000",
  "source": "https://davidwalsh.name/feed",
  "categories": [
    "Quick Tips",
    "Shell"
  ],
  "byline": "David Walsh",
  "length": 1260,
  "excerpt": "curl is one of those great utilities that's been around seemingly forever and has endless use cases. These days I find myself using curl to batch download",
  "siteName": "David Walsh Blog",
  "favicon": "https://davidwalsh.name/wp-content/themes/punky/images/favicon-144.png",
  "text": "curl is one of those great utilities that's been around seemingly forever and has endless use cases. These days I find myself using curl to batch download files and test APIs. Sometimes my testing leads me to using different HTTP headers in my requests. To add a header to a curl request, use the -H flag: curl -X 'GET' \\ 'https://nft.api.cx.metamask.io/collections?chainId=1' \\ -H 'accept: application/json' \\ -H 'Version: 1' You can add multiple headers with multiple -H uses. Header format is usually [key]: [value]. Recent FeaturesCSS @supportsFeature detection via JavaScript is a client side best practice and for all the right reasons, but unfortunately that same functionality hasn't been available within CSS.  What we end up doing is repeating the same properties multiple times with each browser prefix.  Yuck.  Another thing we...Incredible DemosSpyjax: Ajax For Evil Using DojoThe idea of Spyjax is nothing new. In pasts posts I've covered how you can spy on your user's history with both MooTools and jQuery. Today we'll cover how to check user history using the Dojo Toolkit. The HTML For the sake of this...",
  "image": "https://davidwalsh.name/wp-content/themes/punky/images/logo.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cmain id=\"main\"\u003e\u003carticle itemscope=\"\" itemtype=\"http://schema.org/Article\"\u003e\n\u003cp\u003e\u003ccode\u003ecurl\u003c/code\u003e is one of those great utilities that\u0026#39;s been around seemingly forever and has endless use cases.  These days I find myself \u003ca href=\"https://davidwalsh.name/continue-download-curl\"\u003eusing \u003c/a\u003e\u003ccode\u003e\u003ca href=\"https://davidwalsh.name/continue-download-curl\"\u003ecurl\u003c/a\u003e\u003c/code\u003e\u003ca href=\"https://davidwalsh.name/continue-download-curl\"\u003e to batch download files\u003c/a\u003e and test APIs.  Sometimes my testing leads me to using different HTTP headers in my requests.\u003c/p\u003e\n\n\n\n\u003cp\u003eTo add a header to a \u003ccode\u003ecurl\u003c/code\u003e request, use the \u003ccode\u003e-H\u003c/code\u003e flag:\u003c/p\u003e\n\n\n\n\u003cpre\u003ecurl -X \u0026#39;GET\u0026#39; \\\n \u0026#39;https://nft.api.cx.metamask.io/collections?chainId=1\u0026#39; \\\n -H \u0026#39;accept: application/json\u0026#39; \\\n -H \u0026#39;Version: 1\u0026#39;\n\u003c/pre\u003e\n\n\n\n\u003cp\u003eYou can add multiple headers with multiple \u003ccode\u003e-H\u003c/code\u003e uses.  Header format is usually \u003ccode\u003e[key]: [value]\u003c/code\u003e.\u003c/p\u003e\n\n\n\n\u003cdiv\u003e\n    \n    \n    \u003cp\u003e\u003ca href=\"https://requestmetrics.com/?utm_source=davidwalsh\"\u003e\n        \u003cimg src=\"https://davidwalsh.name/demo/rm_perf_banner-728.min.svg\" alt=\"Request Metrics real user monitoring\" loading=\"lazy\" width=\"728\" height=\"90\"/\u003e\n    \u003c/a\u003e\n    \u003c/p\u003e\n    \u003cp\u003e\u003ca href=\"https://requestmetrics.com/?utm_source=davidwalsh\"\u003e\n        \u003cimg src=\"https://davidwalsh.name/demo/rm_perf_block_300.min.svg\" alt=\"Request Metrics real user monitoring\" loading=\"lazy\" width=\"300\" height=\"250\"/\u003e\n    \u003c/a\u003e\n    \u003c/p\u003e\n\u003c/div\u003e\n\n\n\n\n\n\u003c/article\u003e\n\n\u003cdiv\u003e\n  \n    \n    \n\u003cp\u003e\u003ca href=\"https://requestmetrics.com/?utm_source=davidwalsh\"\u003e\n    \u003cimg src=\"https://davidwalsh.name/demo/rm_perf_banner-728.min.svg\" alt=\"Request Metrics real user monitoring\" loading=\"lazy\" width=\"728\" height=\"90\"/\u003e\n  \u003c/a\u003e\n\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://requestmetrics.com/?utm_source=davidwalsh\"\u003e\n    \u003cimg src=\"https://davidwalsh.name/demo/rm_perf_block_300.min.svg\" alt=\"Request Metrics real user monitoring\" loading=\"lazy\" width=\"300\" height=\"250\"/\u003e\n  \u003c/a\u003e\n\u003c/p\u003e\n\n  \n\n\u003c/div\u003e\n\n\n\u003cdiv\u003e\u003ch2\u003e\u003ca href=\"https://davidwalsh.name/tutorials/features\"\u003eRecent Features\u003ci\u003e\u003c/i\u003e\u003c/a\u003e\u003c/h2\u003e\u003cul\u003e\u003cli data-url=\"https://davidwalsh.name/css-supports\" itemscope=\"\" itemtype=\"http://schema.org/Article\"\u003e\u003cspan itemscope=\"\" itemtype=\"https://schema.org/ImageObject\"\u003e\u003cimg data-src=\"/demo/css3logo250.jpg?preview\" alt=\"CSS @supports\" src=\"https://davidwalsh.name/demo/css3logo250.jpg?preview\"/\u003e\u003c/span\u003e\u003cdiv\u003e\u003ch3 itemprop=\"name\"\u003e\u003ca href=\"https://davidwalsh.name/css-supports\" itemprop=\"url\"\u003eCSS @supports\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eFeature detection via JavaScript is a client side best practice and for all the right reasons, but unfortunately that same functionality hasn\u0026#39;t been available within CSS.  What we end up doing is repeating the same properties multiple times with each browser prefix.  Yuck.  Another thing we...\u003c/p\u003e\u003c/div\u003e\u003c/li\u003e\u003cli data-url=\"https://davidwalsh.name/pornhub-interview\" itemscope=\"\" itemtype=\"http://schema.org/Article\"\u003e\u003cspan itemscope=\"\" itemtype=\"https://schema.org/ImageObject\"\u003e\u003cimg data-src=\"https://davidwalsh.name/demo/PornHubLogo.png?preview\" alt=\"Interview with a Pornhub Web Developer\" src=\"https://davidwalsh.name/demo/PornHubLogo.png?preview\"/\u003e\u003c/span\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003cdiv\u003e\u003ch2\u003e\u003ca href=\"https://davidwalsh.name/tutorials/demos\"\u003eIncredible Demos\u003ci\u003e\u003c/i\u003e\u003c/a\u003e\u003c/h2\u003e\u003cul\u003e\u003cli data-url=\"https://davidwalsh.name/drag-drop-stacking\" itemscope=\"\" itemtype=\"http://schema.org/Article\"\u003e\u003cspan itemscope=\"\" itemtype=\"https://schema.org/ImageObject\"\u003e\u003cimg data-src=\"https://davidwalsh.name/demo/drag-opacity.jpg?preview\" alt=\"Drag and Drop Z-Index Stacking\" src=\"https://davidwalsh.name/demo/drag-opacity.jpg?preview\"/\u003e\u003c/span\u003e\u003c/li\u003e\u003cli data-url=\"https://davidwalsh.name/spyjax-dojo\" itemscope=\"\" itemtype=\"http://schema.org/Article\"\u003e\u003cspan itemscope=\"\" itemtype=\"https://schema.org/ImageObject\"\u003e\u003cimg data-src=\"/demo/css3logo250.jpg?preview\" alt=\"Spyjax:  Ajax For Evil Using Dojo\" src=\"https://davidwalsh.name/demo/css3logo250.jpg?preview\"/\u003e\u003c/span\u003e\u003cdiv\u003e\u003ch3 itemprop=\"name\"\u003e\u003ca href=\"https://davidwalsh.name/spyjax-dojo\" itemprop=\"url\"\u003eSpyjax:  Ajax For Evil Using Dojo\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eThe idea of Spyjax is nothing new.  In pasts posts I\u0026#39;ve covered how you can spy on your user\u0026#39;s history with both \u003ca href=\"https://davidwalsh.name/ajax-evil-spyjax\"\u003eMooTools\u003c/a\u003e and \u003ca href=\"https://davidwalsh.name/jquery-spyjax\"\u003ejQuery\u003c/a\u003e.  Today we\u0026#39;ll cover how to check user history using the Dojo Toolkit.\n\n\n\nThe HTML\n\n\n\nFor the sake of this...\u003c/p\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/main\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": "2024-08-03T16:51:46Z",
  "modifiedTime": "2024-08-03T16:51:47Z"
}
