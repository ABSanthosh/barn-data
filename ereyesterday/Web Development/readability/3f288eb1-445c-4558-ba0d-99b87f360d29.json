{
  "id": "3f288eb1-445c-4558-ba0d-99b87f360d29",
  "title": "2024: More CSS At-Rules Than the Past Decade Combined",
  "link": "https://css-tricks.com/2024-more-css-at-rules-than-the-past-decade-combined/",
  "description": "More times than I can count, while writing, I get myself into random but interesting topics with little relation to the original post. In the end, I have to make the simple but painful choice of deleting or archiving hours … 2024: More CSS At-Rules Than the Past Decade Combined originally published on CSS-Tricks, which is part of the DigitalOcean family. You should get the newsletter.",
  "author": "Juan Diego Rodríguez",
  "published": "Wed, 09 Oct 2024 14:10:33 +0000",
  "source": "https://css-tricks.com/feed/",
  "categories": [
    "Articles",
    "at-rules"
  ],
  "byline": "Juan Diego Rodríguez",
  "length": 4338,
  "excerpt": "More times than I can count, while writing, I get myself into random but interesting topics with little relation to the original post. In the end, I have to",
  "siteName": "CSS-Tricks",
  "favicon": "https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/07/star.png?fit=180%2C180\u0026ssl=1",
  "text": "DigitalOcean provides cloud products for every stage of your journey. Get started with $200 in free credit! More times than I can count, while writing, I get myself into random but interesting topics with little relation to the original post. In the end, I have to make the simple but painful choice of deleting or archiving hours of research and writing because I know most people click on a post with a certain expectation of what they’ll get, and I know it isn’t me bombing them with unrelated rants about CSS. This happened to me while working on Monday’s article about at-rules. All I did there was focus on a number of recipes to test browser support for CSS at-rules. In the process, I began to realize, geez we have so many new at-rules — I wonder how many of them are from this year alone. That’s the rabbit hole I found myself in once I wrapped up the article I was working on. And guess what, my hunch was right: 2024 has brought more at-rules than an entire decade of CSS. It all started when I asked myself why we got a selector() wrapper function for the @supports at-rule but are still waiting for an at-rule() version. I can’t pinpoint the exact reasoning there, but I’m certain there wasn’t much of a need to check the support of at-rules because, well, there weren’t that many of them — it’s just recently that we got a windfall of at-rules. Some historical context So, right around 1998 when the CSS 2 recommendation was released, @import and @page were the only at-rules that made it into the CSS spec. That’s pretty much how things remained until the CSS 2.1 recommendation in 2011 introduced @media. Of course, there were other at-rules like — @font-face, @namespace and @keyframes to name a few — that had already debuted in their own respective modules. By this time, CSS dropped semantic versioning, and the specification didn’t give a true picture of the whole, but rather individual modules organized by feature. Random tangent: The last accepted consensus says we are at “CSS 3”, but that was a decade ago and some even say we should start getting into CSS 5. Wherever we are is beside the point, although it’s certainly a topic of discussion happening. Is it even useful to have a named version? The @supports at-rule was released in 2011 in CSS Conditional Rules Module Level 3 — Levels 1 and 2 don’t formally exist but refer to the original CSS 1 and 2 recommendations. We didn’t actually get support for it in most browsers until 2015, and at that time, the existing at-rules already had widespread support. The @supports was only geared towards new properties and values, designed to test browser support for CSS features before attempting to apply styles. The numbers As of today, we have a grand total of 18 at-rules in CSS that are supported by at least one major browser. If we look at the year each at-rule was initially defined in a CSSWG Working Draft, we can see they all have been published at a fairly consistent rate: If we check the number of at-rules supported on each browser per year, however, we can see the massive difference in browser activity: If we just focus on the last year a major browser shipped each at-rule, we will notice that 2024 has brought us a whopping seven at-rules to date! Data collected from caniuse. I like little thought experiments like this. Something you’re researching leads to researching about the same topic; out of scope, but tangentially related. It may not be the sort of thing you bookmark and reference daily, but it is good cocktail chatter. If nothing else, it’s affirming the feeling that CSS is moving fast, like really fast in a way we haven’t seen since CSS 3 first landed. It also adds context for the CSS features we have — and don’t have. There was no at-rule() function initially because there weren’t many at-rules to begin with. Now that we’ve exploded with more new at-rules than the past decade combined, it may be no coincidence that just last week the Chrome Team updated the function’s status from New to Assigned! One last note: the reason I’m even thinking about at-rules at all is that we’ve updated the CSS Almanac, expanding it to include more CSS features including at-rules. I’m trying to fill it up and you can always help by becoming a guest writer.",
  "image": "https://css-tricks.com/wp-json/social-image-generator/v1/image/381678",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cp\u003e\n\tDigitalOcean provides cloud products for every stage of your journey. Get started with \u003ca href=\"https://try.digitalocean.com/css-tricks/?utm_medium=content_acq\u0026amp;utm_source=css-tricks\u0026amp;utm_campaign=global_brand_ad_en\u0026amp;utm_content=conversion_prearticle_everystage\"\u003e$200 in free credit!\u003c/a\u003e\n\u003c/p\u003e\u003cdiv\u003e\n\n          \n          \n\u003cp\u003eMore times than I can count, while writing, I get myself into random but interesting topics with little relation to the original post. In the end, I have to make the simple but painful choice of deleting or archiving hours of research and writing because I know most people click on a post with a certain expectation of what they’ll get, and I know it isn’t me bombing them with unrelated rants about CSS.\u003c/p\u003e\n\n\n\n\u003cp\u003eThis happened to me while working on \u003ca href=\"https://css-tricks.com/recipes-for-detecting-support-for-css-at-rules/\"\u003eMonday’s article about at-rules\u003c/a\u003e. All I did there was focus on a number of recipes to test browser support for CSS at-rules. In the process, I began to realize, \u003cem\u003egeez we have so many new at-rules — I wonder how many of them are from this year alone\u003c/em\u003e. That’s the rabbit hole I found myself in once I wrapped up the article I was working on.\u003c/p\u003e\n\n\n\n\u003cp\u003eAnd guess what, my hunch was right: \u003cstrong\u003e2024 has brought more at-rules than an entire decade of CSS.\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003eIt all started when I asked myself why we got a \u003ccode\u003eselector()\u003c/code\u003e wrapper function for the \u003ccode\u003e@supports\u003c/code\u003e at-rule but are still waiting for an \u003ccode\u003eat-rule()\u003c/code\u003e version. I can’t pinpoint the exact reasoning there, but I’m certain there wasn’t much of a need to check the support of at-rules because, well, there weren’t that many of them — it’s just recently that we got a windfall of at-rules.\u003c/p\u003e\n\n\n\u003ch3 id=\"little-history-of-at-rules\"\u003eSome historical context\u003c/h3\u003e\n\n\n\u003cp\u003eSo, right around 1998 when the CSS 2 recommendation was released, \u003ccode\u003e@import\u003c/code\u003e and \u003ccode\u003e@page\u003c/code\u003e were the only at-rules that made it into the CSS spec. That’s pretty much how things remained until the CSS 2.1 recommendation in 2011 introduced \u003ccode\u003e@media\u003c/code\u003e. Of course, there were other at-rules like — \u003ccode\u003e@font-face\u003c/code\u003e, \u003ccode\u003e@namespace\u003c/code\u003e and \u003ccode\u003e@keyframes\u003c/code\u003e to name a few — that had already debuted in their own respective modules. By this time, CSS dropped semantic versioning, and the specification didn’t give a true picture of the whole, but rather individual modules organized by feature.\u003c/p\u003e\n\n\n\n\u003cp\u003eRandom tangent: The last \u003cem\u003eaccepted\u003c/em\u003e consensus says we are at “CSS 3”, but that was a decade ago and some even say we should start getting into CSS 5. Wherever we are is beside the point, although \u003ca href=\"https://www.smashingmagazine.com/2024/08/time-to-talk-about-css5/\" rel=\"noopener\"\u003eit’s certainly a topic of discussion happening\u003c/a\u003e. Is it even useful to have a named version?\u003c/p\u003e\n\n\n\n\u003cp\u003eThe \u003ccode\u003e@supports\u003c/code\u003e at-rule was released in 2011 in \u003ca href=\"https://www.w3.org/TR/2011/WD-css3-conditional-20110901/\" rel=\"noopener\"\u003eCSS Conditional Rules Module Level 3\u003c/a\u003e — Levels 1 and 2 don’t formally exist but refer to the original CSS 1 and 2 recommendations. We didn’t actually get support for it in most browsers until 2015, and at that time, the existing at-rules already had widespread support. The \u003ccode\u003e@supports\u003c/code\u003e was only geared towards new properties and values, designed to test browser support for CSS features before attempting to apply styles.\u003c/p\u003e\n\n\n\u003ch3 id=\"the-numbers\"\u003eThe numbers\u003c/h3\u003e\n\n\n\u003cp\u003eAs of today, we have a grand total of 18 at-rules in CSS that are supported by at least one major browser. If we look at the year each at-rule was initially defined in a CSSWG Working Draft, we can see they all have been published at a fairly consistent rate:\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" fetchpriority=\"high\" decoding=\"async\" width=\"787\" height=\"486\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/numbers-of-at-rules-per-year-in-FPWD.png?resize=787%2C486\u0026amp;ssl=1\" alt=\"Number of at-rules per year in FWPD. They all have been added at an average rate of 1 per year, with the highest being 4 in 2021\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/numbers-of-at-rules-per-year-in-FPWD.png?w=787\u0026amp;ssl=1 787w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/numbers-of-at-rules-per-year-in-FPWD.png?resize=300%2C185\u0026amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/numbers-of-at-rules-per-year-in-FPWD.png?resize=768%2C474\u0026amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eIf we check the number of at-rules supported on each browser per year, however, we can see the massive difference in browser activity:\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" decoding=\"async\" width=\"787\" height=\"486\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/at-rules-in-each-browser.png?resize=787%2C486\u0026amp;ssl=1\" alt=\"Number of at-rules per year in FWPD visualized by the browsers that implemented them in a colorful vertical bar chart.\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/at-rules-in-each-browser.png?w=787\u0026amp;ssl=1 787w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/at-rules-in-each-browser.png?resize=300%2C185\u0026amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/at-rules-in-each-browser.png?resize=768%2C474\u0026amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eIf we just focus on the last year a major browser shipped each at-rule, we will notice that 2024 has brought us a whopping \u003cstrong\u003eseven\u003c/strong\u003e at-rules to date!\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" loading=\"lazy\" decoding=\"async\" width=\"787\" height=\"486\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/numbers-of-at-rules-per-year-supported-in-browsers.png?resize=787%2C486\u0026amp;ssl=1\" alt=\"Numbers of at-rules with support in at least one major browsers. There have been seven that gained support in 2024\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/numbers-of-at-rules-per-year-supported-in-browsers.png?w=787\u0026amp;ssl=1 787w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/numbers-of-at-rules-per-year-supported-in-browsers.png?resize=300%2C185\u0026amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/numbers-of-at-rules-per-year-supported-in-browsers.png?resize=768%2C474\u0026amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\"/\u003e\u003cfigcaption\u003eData collected from \u003ca href=\"https://caniuse.com/\" rel=\"noopener\"\u003ecaniuse\u003c/a\u003e.\u003c/figcaption\u003e\u003c/figure\u003e\n\n\n\n\u003chr/\u003e\n\n\n\n\u003cp\u003eI like little thought experiments like this. Something you’re researching leads to researching about the same topic; out of scope, but tangentially related. It may not be the sort of thing you bookmark and reference daily, but it is good cocktail chatter. If nothing else, it’s affirming the feeling that CSS is moving fast, like \u003cem\u003ereally\u003c/em\u003e fast in a way we haven’t seen since CSS 3 first landed.\u003c/p\u003e\n\n\n\n\u003cp\u003eIt also adds context for the CSS features we have — and don’t have. There was no \u003ccode\u003eat-rule()\u003c/code\u003e function initially because there weren’t many at-rules to begin with. Now that we’ve exploded with more new at-rules than the past decade combined, it may be no coincidence that \u003ca href=\"https://issues.chromium.org/issues/40211832\" rel=\"noopener\"\u003ejust last week\u003c/a\u003e \u003cstrong\u003ethe Chrome Team updated the function’s status from New to Assigned!\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003eOne last note: the reason I’m even thinking about at-rules at all is that \u003ca href=\"https://css-tricks.com/re-working-the-css-almanac/\"\u003ewe’ve updated the CSS Almanac\u003c/a\u003e, expanding it to include more CSS features including at-rules. I’m trying to fill it up and you can always help by \u003ca href=\"https://css-tricks.com/guest-writing/\"\u003ebecoming a guest writer\u003c/a\u003e.\u003c/p\u003e\n\n          \n        \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": "2024-10-09T08:10:33-06:00",
  "modifiedTime": "2024-10-09T10:53:47-06:00"
}
