{
  "id": "6bc5dff1-750c-4122-87af-b7310c73693c",
  "title": "CSS conditionals with the new if() function",
  "link": "https://developer.chrome.com/blog/if-article?hl=en",
  "description": "Learn about the new CSS if function, which enables a cleaner developer interface for dynamic styles like style queries and media queries.",
  "author": "",
  "published": "Tue, 01 Jul 2025 07:00:00 GMT",
  "source": "https://developer.chrome.com/static/blog/feed.xml",
  "categories": null,
  "byline": "",
  "length": 5568,
  "excerpt": "Learn about the new CSS if function, which enables a cleaner developer interface for dynamic styles like style queries and media queries.",
  "siteName": "Chrome for Developers",
  "favicon": "https://www.gstatic.com/devrel-devsite/prod/v46d043083f27fa7361aea8506dabbd161e0b84f5a7c6df8d5e3cfad447dd4376/chrome/images/favicon.png",
  "text": "Skip to main content CSS conditionals with the new if() function Published: July 1, 2025 From Chrome 137 you can try out CSS inline conditionals with the if() function. if() enables a cleaner developer interface for dynamic styles like style queries and media queries, with some key differences, which you can learn about in this post. The CSS if() function works using a series of condition-value pairs, structured as follows: property: if(condition-1: value-1; condition-2: value-2; condition-3: value-3); You can provide an else statement, which is used if none of the other conditions are satisfied: property: if(condition-1: value-1; condition-2: value-2; condition-3: value-3; else: value-4); At this time, if() works with three different types of queries: style(): Style queries media(): Media queries supports(): Supports queries Let us put this into context with some examples: Using if() is a great way to include inline media queries in your styles. For example, you could check for a user's theming preference (light or dark), or do inline media queries for the viewport width. The following example shows the media query for pointer devices. The default size of the button would be 30px on a device with a fine pointer, like a mouse, but for touchscreen devices, such as those with a coarse pointer, the size of the button would be the minimum-recommended 44px for appropriate touch spacing for easier access. button { aspect-ratio: 1; width: if(media(any-pointer: fine): 30px; else: 44px); } The preceding code is gives the same result as the following media query: button { aspect-ratio: 1; width: 44px; } @media (any-pointer: fine) { button { width: 30px; } } Using the if() format lets you have the logic inline, without requiring the styling logic in two different places. Demo where using if() increases font-size of the button on devices with course pointers. Demo: Inline support queries Another way to use if() is to create inline support queries. For example, to check for wide-gamut color support, like OKLCH, you could use: body { background-color: if( supports(color: oklch(0.7 0.185 232)): oklch(0.7 0.185 232); else: #00adf3; ); \u0026::after { content: if( supports(color: oklch(0.7 0.185 232)): \"Your browser supports OKLCH\"; else: \"Your browser does not support OKLCH\"; ); } } With this code, if the browser supports the oklch color space, the user will see the more vivid color, and will also get the message: \"Your browser supports OKLCH\" in ::after pseudo content. A support query using the if() function. To learn more and see the difference between rgb and more advanced color spaces, check out the color picker and resources at oklch.com. Demo: Visualizing UI state You can also use if() for state-based styling. For example, styling progress cards based on their UI state (pending or complete). Store the status in a data attribute or a custom property directly, and then apply styles inline to the property, using if(). \u003cdiv class=\"card\" data-status=\"complete\"\u003e ... \u003c/div\u003e .card { --status: attr(data-status type(\u003ccustom-ident\u003e)); border-color: if( style(--status: pending): royalblue; style(--status: complete): seagreen; else: gray); background-color: if( style(--status: pending): #eff7fa; style(--status: complete): #f6fff6; else: #f7f7f7); } Styling stateful labels inline to the property using the if() function. With style() inside of an if() function, you can directly style the element you are targeting, no need for a parent element like CSS style queries would require. This demo shows a basic case of how you can use if() to support a new architectural approach to CSS. One benefit of using CSS custom properties over classes is the ease of updating them in CSS. For example, they could be updated using media queries or pseudo states such as :hover. What's next The addition of if() provides a new architectural opportunity for CSS developers. As technologies like style queries evolve, range querying will likely be possible within if() functions, and they will also be useful when combined with the upcoming custom functions proposal (CSS @function). To learn more about these features, check out: 3-minute video walkthrough of Demo #3 Article from Lea Verou Except as otherwise noted, the content of this page is licensed under the Creative Commons Attribution 4.0 License, and code samples are licensed under the Apache 2.0 License. For details, see the Google Developers Site Policies. Java is a registered trademark of Oracle and/or its affiliates. Last updated 2025-07-01 UTC. [[[\"Easy to understand\",\"easyToUnderstand\",\"thumb-up\"],[\"Solved my problem\",\"solvedMyProblem\",\"thumb-up\"],[\"Other\",\"otherUp\",\"thumb-up\"]],[[\"Missing the information I need\",\"missingTheInformationINeed\",\"thumb-down\"],[\"Too complicated / too many steps\",\"tooComplicatedTooManySteps\",\"thumb-down\"],[\"Out of date\",\"outOfDate\",\"thumb-down\"],[\"Samples / code issue\",\"samplesCodeIssue\",\"thumb-down\"],[\"Other\",\"otherDown\",\"thumb-down\"]],[\"Last updated 2025-07-01 UTC.\"],[],[]]",
  "image": "https://developer.chrome.com/static/blog/if-article/image/if-thumb.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\n    \u003cdevsite-progress type=\"indeterminate\" id=\"app-progress\"\u003e\u003c/devsite-progress\u003e\n  \n    \u003ca href=\"#main-content\"\u003e\n      \n      Skip to main content\n    \u003c/a\u003e\n    \u003csection\u003e\n      \u003cdevsite-cookie-notification-bar\u003e\u003c/devsite-cookie-notification-bar\u003e\u003cdevsite-header role=\"banner\"\u003e\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\u003c/devsite-header\u003e\n      \n      \u003csection id=\"gc-wrapper\"\u003e\n        \u003cmain role=\"main\" id=\"main-content\" has-sidebar=\"\"\u003e\n          \n          \u003cdevsite-content\u003e\n            \n              \n\n\n\n\n\n\n\n\n\n\n\n\n\u003carticle\u003e\n  \n  \n  \n  \n  \n\n  \n  \n    \u003ch2 tabindex=\"-1\"\u003e\n      CSS conditionals with the new if() function\n  \n      \n    \u003c/h2\u003e\n  \n  \n\n  \u003cdevsite-toc depth=\"2\" devsite-toc-embedded=\"\"\u003e\n  \u003c/devsite-toc\u003e\n  \n    \n  \u003cdiv\u003e\n\n  \n    \n\n\n\n\n\u003cdiv translate=\"no\"\u003e\n        \n          \u003cp\u003e\u003cimg alt=\"Una Kravets\" src=\"https://web.dev/images/authors/unakravets.jpg\" decoding=\"async\" height=\"64\" loading=\"lazy\" width=\"64\"/\u003e\u003c/p\u003e\n      \u003c/div\u003e\n\n\u003cp\u003e\n  Published: July 1, 2025\n\u003c/p\u003e\n\n\n\u003cp\u003eFrom Chrome 137 you can try out CSS inline conditionals with the \u003ccode translate=\"no\" dir=\"ltr\"\u003eif()\u003c/code\u003e function. \u003ccode translate=\"no\" dir=\"ltr\"\u003eif()\u003c/code\u003e enables a cleaner developer interface for dynamic styles like style queries and media queries, with some key differences, which you can learn about in this post.\u003c/p\u003e\n\n\u003cp\u003eThe CSS \u003ccode translate=\"no\" dir=\"ltr\"\u003eif()\u003c/code\u003e function works using a series of condition-value pairs, structured as follows:\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"CSS\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003eproperty\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eif\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003econdition-1\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003evalue-1\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003econdition-2\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003evalue-2\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003econdition-3\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003evalue-3\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003cp\u003eYou can provide an \u003ccode translate=\"no\" dir=\"ltr\"\u003eelse\u003c/code\u003e statement, which is used if none of the other conditions are satisfied:\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"CSS\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003eproperty\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eif\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003econdition-1\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003evalue-1\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003econdition-2\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003evalue-2\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003econdition-3\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003evalue-3\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eelse\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003evalue-4\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003cp\u003eAt this time, \u003ccode translate=\"no\" dir=\"ltr\"\u003eif()\u003c/code\u003e works with three different types of queries:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003estyle()\u003c/code\u003e: Style queries\u003c/li\u003e\n\u003cli\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003emedia()\u003c/code\u003e: Media queries\u003c/li\u003e\n\u003cli\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003esupports()\u003c/code\u003e: Supports queries\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eLet us put this into context with some examples:\u003c/p\u003e\n\n\n\n\u003cp\u003eUsing \u003ccode translate=\"no\" dir=\"ltr\"\u003eif()\u003c/code\u003e is a great way to include inline media queries in your styles. For example, you could check for a user\u0026#39;s theming preference (light or dark), or do inline media queries for the viewport width. The following example shows the media query for pointer devices. The default size of the button would be 30px on a device with a fine pointer, like a mouse, but for touchscreen devices, such as those with a coarse pointer, the size of the button would be the minimum-recommended 44px for appropriate touch spacing for easier access.\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"CSS\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003ebutton\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003easpect-ratio\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003ewidth\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eif\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003emedia\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eany\u003c/span\u003e\u003cspan\u003e-pointer\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003efine\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e30\u003c/span\u003e\u003cspan\u003epx\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eelse\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e44\u003c/span\u003e\u003cspan\u003epx\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003cp\u003eThe preceding code is gives the same result as the following media query:\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"CSS\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003ebutton\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003easpect-ratio\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003ewidth\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e44\u003c/span\u003e\u003cspan\u003epx\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\n\u003cspan\u003e@\u003c/span\u003e\u003cspan\u003emedia\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eany-pointer\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003efine\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003ebutton\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003ewidth\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e30\u003c/span\u003e\u003cspan\u003epx\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003cp\u003eUsing the \u003ccode translate=\"no\" dir=\"ltr\"\u003eif()\u003c/code\u003e format lets you have the logic inline, without requiring the styling logic in two different places.\u003c/p\u003e\n\n\u003cfigure\u003e\n  \n  \u003cfigcaption\u003eDemo where using \u003ccode translate=\"no\" dir=\"ltr\"\u003eif()\u003c/code\u003e increases font-size of the button on devices with course pointers.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003ch2 id=\"demo_inline_support_queries\" data-text=\"Demo: Inline support queries\" tabindex=\"-1\"\u003eDemo: Inline support queries\u003c/h2\u003e\n\n\u003cp\u003eAnother way to use \u003ccode translate=\"no\" dir=\"ltr\"\u003eif()\u003c/code\u003e is to create inline support queries. For example, to check for wide-gamut color support, like OKLCH, you could use:\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"CSS\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003ebody\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003ebackground-color\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eif\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003esupports\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003ecolor\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eoklch\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e0.7\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e0.185\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e232\u003c/span\u003e\u003cspan\u003e))\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eoklch\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e0.7\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e0.185\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e232\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003eelse\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e#00adf3\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u0026amp;\u003cspan\u003e::after\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003econtent\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eif\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003esupports\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003ecolor\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eoklch\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e0.7\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e0.185\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e232\u003c/span\u003e\u003cspan\u003e))\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#34;Your browser supports OKLCH\u0026#34;\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003eelse\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#34;Your browser does not support OKLCH\u0026#34;\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003cp\u003eWith this code, if the browser supports the \u003ccode translate=\"no\" dir=\"ltr\"\u003eoklch\u003c/code\u003e color space, the user will see the more vivid color, and will also get the message: \u0026#34;Your browser supports OKLCH\u0026#34; in \u003ccode translate=\"no\" dir=\"ltr\"\u003e::after\u003c/code\u003e pseudo content.\u003c/p\u003e\n\n\u003cfigure\u003e\n  \n  \u003cfigcaption\u003eA support query using the \u003ccode translate=\"no\" dir=\"ltr\"\u003eif()\u003c/code\u003e function.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eTo learn more and see the difference between rgb and more advanced color spaces, check out the color picker and resources at \u003ca href=\"https://oklch.com/#0.7,0.185,232,100\"\u003eoklch.com\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"demo_visualizing_ui_state\" data-text=\"Demo: Visualizing UI state\" tabindex=\"-1\"\u003eDemo: Visualizing UI state\u003c/h2\u003e\n\n\u003cp\u003eYou can also use \u003ccode translate=\"no\" dir=\"ltr\"\u003eif()\u003c/code\u003e for state-based styling. For example, styling progress cards based on their UI state (pending or complete). Store the status in a data attribute or a custom property directly, and then apply styles inline to the property, using \u003ccode translate=\"no\" dir=\"ltr\"\u003eif()\u003c/code\u003e.\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"HTML\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026lt;div class=\u0026#34;card\u0026#34; data-status=\u0026#34;complete\u0026#34;\u0026gt;\n  ...\n\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"CSS\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ecard\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e--status\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eattr\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003edata\u003c/span\u003e\u003cspan\u003e-status\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etype\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u0026lt;\u003cspan\u003ecustom\u003c/span\u003e\u003cspan\u003e-ident\u003c/span\u003e\u0026gt;\u003cspan\u003e));\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003eborder-color\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eif\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n\u003cspan\u003e                \u003c/span\u003e\u003cspan\u003estyle\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e--status\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003epending\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eroyalblue\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e                \u003c/span\u003e\u003cspan\u003estyle(\u003c/span\u003e\u003cspan\u003e--status\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ecomplete\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eseagreen\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e                \u003c/span\u003e\u003cspan\u003eelse\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003egray\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003ebackground-color\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eif\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n\u003cspan\u003e                \u003c/span\u003e\u003cspan\u003estyle\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e--status\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003epending\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e#eff7fa\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e                \u003c/span\u003e\u003cspan\u003estyle(\u003c/span\u003e\u003cspan\u003e--status\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ecomplete\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e#f6fff6\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e                \u003c/span\u003e\u003cspan\u003eelse\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e#f7f7f7\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003cfigure\u003e\n  \n  \u003cfigcaption\u003eStyling stateful labels inline to the property using the \u003ccode translate=\"no\" dir=\"ltr\"\u003eif()\u003c/code\u003e function.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eWith \u003ccode translate=\"no\" dir=\"ltr\"\u003estyle()\u003c/code\u003e inside of an \u003ccode translate=\"no\" dir=\"ltr\"\u003eif()\u003c/code\u003e function, you can directly style the element you are targeting, no need for a parent element like CSS style queries would require.\u003c/p\u003e\n\n\u003cp\u003eThis demo shows a basic case of how you can use \u003ccode translate=\"no\" dir=\"ltr\"\u003eif()\u003c/code\u003e to support a new architectural approach to CSS. One benefit of using CSS custom properties over classes is the ease of updating them in CSS. For example, they could be updated using media queries or pseudo states such as \u003ccode translate=\"no\" dir=\"ltr\"\u003e:hover\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"whats_next\" data-text=\"What\u0026#39;s next\" tabindex=\"-1\"\u003eWhat\u0026#39;s next\u003c/h2\u003e\n\n\u003cp\u003eThe addition of \u003ccode translate=\"no\" dir=\"ltr\"\u003eif()\u003c/code\u003e provides a new architectural opportunity for CSS developers. As technologies like style queries evolve, range querying will likely be possible within \u003ccode translate=\"no\" dir=\"ltr\"\u003eif()\u003c/code\u003e functions, and they will also be useful when combined with the upcoming custom functions proposal (CSS \u003ccode translate=\"no\" dir=\"ltr\"\u003e@function\u003c/code\u003e).\u003c/p\u003e\n\n\u003cp\u003eTo learn more about these features, check out:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=Apn8ucs7AL0\"\u003e3-minute video walkthrough of Demo #3\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lea.verou.me/blog/2024/css-conditionals/\"\u003eArticle from Lea Verou\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n  \n\n  \n\u003c/div\u003e\n\n  \n    \n    \n      \n    \u003cdevsite-thumb-rating position=\"footer\"\u003e\n    \u003c/devsite-thumb-rating\u003e\n  \n       \n    \n    \n  \n\n  \u003c/article\u003e\n\n\n\u003cdevsite-content-footer\u003e\n  \u003cp\u003eExcept as otherwise noted, the content of this page is licensed under the \u003ca href=\"https://creativecommons.org/licenses/by/4.0/\"\u003eCreative Commons Attribution 4.0 License\u003c/a\u003e, and code samples are licensed under the \u003ca href=\"https://www.apache.org/licenses/LICENSE-2.0\"\u003eApache 2.0 License\u003c/a\u003e. For details, see the \u003ca href=\"https://developers.google.com/site-policies\"\u003eGoogle Developers Site Policies\u003c/a\u003e. Java is a registered trademark of Oracle and/or its affiliates.\u003c/p\u003e\n  \u003cp\u003eLast updated 2025-07-01 UTC.\u003c/p\u003e\n\u003c/devsite-content-footer\u003e\n\n\n\u003cdevsite-notification\u003e\n\u003c/devsite-notification\u003e\n\n\n  \n\u003cp\u003e\n  \n  \n    \u003ctemplate\u003e\n      [[[\u0026#34;Easy to understand\u0026#34;,\u0026#34;easyToUnderstand\u0026#34;,\u0026#34;thumb-up\u0026#34;],[\u0026#34;Solved my problem\u0026#34;,\u0026#34;solvedMyProblem\u0026#34;,\u0026#34;thumb-up\u0026#34;],[\u0026#34;Other\u0026#34;,\u0026#34;otherUp\u0026#34;,\u0026#34;thumb-up\u0026#34;]],[[\u0026#34;Missing the information I need\u0026#34;,\u0026#34;missingTheInformationINeed\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Too complicated / too many steps\u0026#34;,\u0026#34;tooComplicatedTooManySteps\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Out of date\u0026#34;,\u0026#34;outOfDate\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Samples / code issue\u0026#34;,\u0026#34;samplesCodeIssue\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Other\u0026#34;,\u0026#34;otherDown\u0026#34;,\u0026#34;thumb-down\u0026#34;]],[\u0026#34;Last updated 2025-07-01 UTC.\u0026#34;],[],[]]\n    \u003c/template\u003e\n  \n\u003c/p\u003e\n            \n          \u003c/devsite-content\u003e\n        \u003c/main\u003e\n        \n        \n        \n        \u003cdevsite-panel\u003e\n          \n        \u003c/devsite-panel\u003e\n        \n      \u003c/section\u003e\u003c/section\u003e\n    \u003cdevsite-sitemask\u003e\u003c/devsite-sitemask\u003e\n    \u003cdevsite-snackbar\u003e\u003c/devsite-snackbar\u003e\n    \u003cdevsite-tooltip\u003e\u003c/devsite-tooltip\u003e\n    \u003cdevsite-heading-link\u003e\u003c/devsite-heading-link\u003e\n    \u003cdevsite-analytics\u003e\n      \n        \n\n      \n    \u003c/devsite-analytics\u003e\n    \n      \u003cdevsite-badger\u003e\u003c/devsite-badger\u003e\n    \n    \n    \n\n\n    \u003cdevsite-a11y-announce\u003e\u003c/devsite-a11y-announce\u003e\n  \n\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": null,
  "modifiedTime": null
}
