{
  "id": "f3ade35d-95a7-4430-83dd-3f14ba4f61ab",
  "title": "You can style alt text like any other text",
  "link": "https://css-tricks.com/you-can-style-alt-text-like-any-other-text/",
  "description": "Clever, clever that Andy Bell. He shares a technique for displaying image alt text when the image fails to load. Well, more precisely, it's a technique to apply styles to the alt when the image doesn't load, offering a nice UI fallback for what would otherwise be a busted-looking error. You can style alt text like any other text originally published on CSS-Tricks, which is part of the DigitalOcean family. You should get the newsletter.",
  "author": "Geoff Graham",
  "published": "Thu, 22 May 2025 14:43:09 +0000",
  "source": "https://css-tricks.com/feed/",
  "categories": [
    "Notes",
    "accessibility",
    "images"
  ],
  "byline": "Geoff Graham",
  "length": 1342,
  "excerpt": "Clever, clever that Andy Bell. He shares a technique for displaying image alt text when the image fails to load. Well, more precisely, it's a technique to apply styles to the alt when the image doesn't load, offering a nice UI fallback for what would otherwise be a busted-looking error.",
  "siteName": "CSS-Tricks",
  "favicon": "https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/07/star.png?fit=180%2C180\u0026ssl=1",
  "text": "Clever, clever that Andy Bell. He shares a technique for displaying image alt text when the image fails to load. Well, more precisely, it‚Äôs a technique to apply styles to the alt when the image doesn‚Äôt load, offering a nice UI fallback for what would otherwise be a busted-looking error. The recipe? First, make sure you‚Äôre using alt in the HTML. Then, a little JavaScript snippet that detects when an image fails to load: const images = document.querySelectorAll(\"img\"); if (images) { images.forEach((image) =\u003e { image.onerror = () =\u003e { image.setAttribute(\"data-img-loading-error\", \"\"); }; }); } That slaps an attribute on the image ‚Äî data-img-loading-error ‚Äî that is selected in CSS: img[data-img-loading-error] { --img-border-style: 0.25em solid color-mix(in srgb, currentColor, transparent 75%); --img-border-space: 1em; border-inline-start: var(--img-border-style); border-block-end: var(--img-border-style); padding-inline-start: var(--img-border-space); padding-block: var(--img-border-space); max-width: 42ch; margin-inline: auto; } And what you get is a lovely little presentation of the alt that looks a bit like a blockquote and is is only displayed when needed. Andy does note, however, that Safari does not render alt text if it goes beyond a single line, which ü§∑‚Äç‚ôÇÔ∏è.",
  "image": "https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/08/puzzle-pieces-scatter.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\n          \n          \n\u003cp\u003eClever, clever that Andy Bell. He shares \u003ca href=\"https://piccalil.li/blog/you-can-style-alt-text-like-any-other-text/?ref=main-rss-feed\" rel=\"noopener\"\u003ea technique for displaying image \u003ccode\u003ealt\u003c/code\u003e text when the image fails to load\u003c/a\u003e. Well, more precisely, it‚Äôs a technique to apply styles to the \u003ccode\u003ealt\u003c/code\u003e when the image doesn‚Äôt load, offering a nice UI fallback for what would otherwise be a busted-looking error.\u003c/p\u003e\n\n\n\n\u003cp\u003eThe recipe? First, make sure you‚Äôre using \u003ccode\u003ealt\u003c/code\u003e in the HTML. Then, a little JavaScript snippet that detects when an image fails to load:\u003c/p\u003e\n\n\n\n\u003cpre rel=\"JavaScript\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003econst images = document.querySelectorAll(\u0026#34;img\u0026#34;);\n\nif (images) {\n  images.forEach((image) =\u0026gt; {\n    image.onerror = () =\u0026gt; {\n      image.setAttribute(\u0026#34;data-img-loading-error\u0026#34;, \u0026#34;\u0026#34;);\n    };\n  });\n}\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eThat slaps an attribute on the image ‚Äî \u003ccode\u003edata-img-loading-error\u003c/code\u003e ‚Äî that is selected in CSS:\u003c/p\u003e\n\n\n\n\u003cpre rel=\"CSS\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003eimg[data-img-loading-error] {\n  --img-border-style: 0.25em solid\n    color-mix(in srgb, currentColor, transparent 75%);\n  --img-border-space: 1em;\n\n  border-inline-start: var(--img-border-style);\n  border-block-end: var(--img-border-style);\n  padding-inline-start: var(--img-border-space);\n  padding-block: var(--img-border-space);\n  max-width: 42ch;\n  margin-inline: auto;\n}\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eAnd what you get is a lovely little presentation of the \u003ccode\u003ealt\u003c/code\u003e that looks a bit like a blockquote and is is only displayed when needed.\u003c/p\u003e\n\n\n\n\n\n\n\n\u003cp\u003eAndy does note, however, that Safari does not render \u003ccode\u003ealt\u003c/code\u003e text if it goes beyond a single line, which ü§∑‚Äç‚ôÇÔ∏è.\u003c/p\u003e\n\n          \n        \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": "2025-05-22T08:43:09-06:00",
  "modifiedTime": "2025-05-22T08:43:12-06:00"
}
