{
  "id": "53afb932-3a5c-496b-9348-6c505f468909",
  "title": "Getting Creative With HTML Dialog",
  "link": "https://css-tricks.com/getting-creative-with-html-dialog/",
  "description": "So, how can you take dialogue box design beyond the generic look of frameworks and templates? How can you style them to reflect a brand’s visual identity and help to tell its stories? Here’s how I do it in CSS using ::backdrop, backdrop-filter, and animations. Getting Creative With HTML Dialog originally published on CSS-Tricks, which is part of the DigitalOcean family. You should get the newsletter.",
  "author": "Andy Clarke",
  "published": "Tue, 03 Jun 2025 14:39:04 +0000",
  "source": "https://css-tricks.com/feed/",
  "categories": [
    "Articles",
    "dialog"
  ],
  "byline": "Andy Clarke",
  "length": 8457,
  "excerpt": "So, how can you take dialogue box design beyond the generic look of frameworks and templates? How can you style them to reflect a brand’s visual identity and help to tell its stories? Here’s how I do it in CSS using ::backdrop, backdrop-filter, and animations.",
  "siteName": "CSS-Tricks",
  "favicon": "https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/07/star.png?fit=180%2C180\u0026ssl=1",
  "text": "Like ’em or loath ’em, whether you’re showing an alert, a message, or a newsletter signup, dialogue boxes draw attention to a particular piece of content without sending someone to a different page. In the past, dialogues relied on a mix of divisions, ARIA, and JavaScript. But the HTML dialog element has made them more accessible and style-able in countless ways. So, how can you take dialogue box design beyond the generic look of frameworks and templates? How can you style them to reflect a brand’s visual identity and help to tell its stories? Here’s how I do it in CSS using ::backdrop, backdrop-filter, and animations. Design by Andy Clarke, Stuff \u0026 Nonsense. Mike Worth’s website will launch in June 2025, but you can see examples from this article on CodePen. I mentioned before that Emmy-award-winning game composer Mike Worth hired me to create a highly graphical design. Mike loves ’90s animation, and he challenged me to find ways to incorporate its retro style without making a pastiche. However, I also needed to achieve that retro feel while maintaining accessibility, performance, responsiveness, and semantics. A brief overview of dialog and ::backdrop Let’s run through a quick refresher. Note: While I mostly refer to “dialogue boxes” throughout, the HTML element is spelt dialog. dialog is an HTML element designed for implementing modal and non-modal dialogue boxes in products and website interfaces. It comes with built-in functionality, including closing a box using the keyboard Esc key, focus trapping to keep it inside the box, show and hide methods, and a ::backdrop pseudo-element for styling a box’s overlay. The HTML markup is just what you might expect: \u003cdialog\u003e \u003ch2\u003eKeep me informed\u003c/h2\u003e \u003c!-- ... --\u003e \u003cbutton\u003eClose\u003c/button\u003e \u003c/dialog\u003e This type of dialogue box is hidden by default, but adding the open attribute makes it visible when the page loads: \u003cdialog open\u003e \u003ch2\u003eKeep me informed\u003c/h2\u003e \u003c!-- ... --\u003e \u003cbutton\u003eClose\u003c/button\u003e \u003c/dialog\u003e I can’t imagine too many applications for non-modals which are open by default, so ordinarily I need a button which opens a dialogue box: \u003cdialog\u003e \u003c!-- ... --\u003e \u003c/dialog\u003e \u003cbutton\u003eKeep me informed\u003c/button\u003e Plus a little bit of JavaScript, which opens the modal: const dialog = document.querySelector(\"dialog\"); const showButton = document.querySelector(\"dialog + button\"); showButton.addEventListener(\"click\", () =\u003e { dialog.showModal(); }); Closing a dialogue box also requires JavaScript: const closeButton = document.querySelector(\"dialog button\"); closeButton.addEventListener(\"click\", () =\u003e { dialog.close(); }); Unless the box contains a form using method=\"dialog\", which allows it to close automatically on submit without JavaScript: \u003cdialog\u003e \u003cform method=\"dialog\"\u003e \u003cbutton\u003eSubmit\u003c/button\u003e \u003c/form\u003e \u003c/dialog\u003e The dialog element was developed to be accessible out of the box. It traps focus, supports the Esc key, and behaves like a proper modal. But to help screen readers announce dialogue boxes properly, you’ll want to add an aria-labelledby attribute. This tells assistive technology where to find the dialogue box’s title so it can be read aloud when the modal opens. \u003cdialog aria-labelledby=\"dialog-title\"\u003e \u003ch2 id=\"dialog-title\"\u003eKeep me informed\u003c/h2\u003e \u003c!-- ... --\u003e \u003c/dialog\u003e Most tutorials I’ve seen include very little styling for dialog and ::backdrop, which might explain why so many dialogue boxes have little more than border radii and a box-shadow applied. Out-of-the-box dialogue designs I believe that every element in a design — no matter how small or infrequently seen — is an opportunity to present a brand and tell a story about its products or services. I know there are moments during someone’s journey through a design where paying special attention to design can make their experience more memorable. Dialogue boxes are just one of those moments, and Mike Worth’s design offers plenty of opportunities to reflect his brand or connect directly to someone’s place in Mike’s story. That might be by styling a newsletter sign-up dialogue to match the scrolls in his news section. Mike Worth concept design, designed by Andy Clarke, Stuff \u0026 Nonsense. Or making the form modal on his error pages look like a comic-book speech balloon. Mike Worth concept design, designed by Andy Clarke, Stuff \u0026 Nonsense. dialog in action Mike’s drop-down navigation menu looks like an ancient stone tablet. Mike Worth, designed by Andy Clarke, Stuff \u0026 Nonsense. I wanted to extend this look to his dialogue boxes with a three-dimensional tablet and a jungle leaf-filled backdrop. Mike Worth, designed by Andy Clarke, Stuff \u0026 Nonsense. This dialog contains a newsletter sign-up form with an email input and a submit button: \u003cdialog\u003e \u003ch2\u003eKeep me informed\u003c/h2\u003e \u003cform\u003e \u003clabel for=\"email\" data-visibility=\"hidden\"\u003eEmail address\u003c/label\u003e \u003cinput type=\"email\" id=\"email\" required\u003e \u003cbutton\u003eSubmit\u003c/button\u003e \u003c/form\u003e \u003cbutton\u003ex\u003c/button\u003e \u003c/dialog\u003e I started by applying dimensions to the dialog and adding the SVG stone tablet background image: dialog { width: 420px; height: 480px; background-color: transparent; background-image: url(\"dialog.svg\"); background-repeat: no-repeat; background-size: contain; } Then, I added the leafy green background image to the dialogue box’s generated backdrop using the ::backdrop pseudo element selector: dialog::backdrop { background-image: url(\"backdrop.svg\"); background-size: cover; } Mike Worth, designed by Andy Clarke, Stuff \u0026 Nonsense. I needed to make it clear to anyone filling in Mike’s form that their email address is in a valid format. So I combined :has and :valid CSS pseudo-class selectors to change the color of the submit button from grey to green: dialog:has(input:valid) button { background-color: #7e8943; color: #fff; } I also wanted this interaction to reflect Mike’s fun personality. So, I also changed the dialog background image and applied a rubberband animation to the box when someone inputs a valid email address: dialog:has(input:valid) { background-image: url(\"dialog-valid.svg\"); animation: rubberBand 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both; } @keyframes rubberBand { from { transform: scale3d(1, 1, 1); } 30% { transform: scale3d(1.25, 0.75, 1); } 40% { transform: scale3d(0.75, 1.25, 1); } 50% { transform: scale3d(1.15, 0.85, 1); } 65% { transform: scale3d(0.95, 1.05, 1); } 75% { transform: scale3d(1.05, 0.95, 1); } to { transform: scale3d(1, 1, 1); } } Tip: Daniel Eden’s Animate.css library is a fabulous source of “Just-add-water CSS animations” like the rubberband I used for this dialogue box. Changing how an element looks when it contains a valid input is a fabulous way to add interactions that are, at the same time, fun and valuable for the user. Mike Worth, designed by Andy Clarke, Stuff \u0026 Nonsense. That combination of :has and :valid selectors can even be extended to the ::backdrop pseudo-class, to change the backdrop’s background image: dialog:has(input:valid)::backdrop { background-image: url(\"backdrop-valid.svg\"); } Try it for yourself: Conclusion We often think of dialogue boxes as functional elements, as necessary interruptions, but nothing more. But when you treat them as opportunities for expression, even the smallest parts of a design can help shape a product or website’s personality. The HTML dialog element, with its built-in behaviours and styling potential, opens up opportunities for branding and creative storytelling. There’s no reason a dialogue box can’t be as distinctive as the rest of your design. Andy Clarke Often referred to as one of the pioneers of web design, Andy Clarke has been instrumental in pushing the boundaries of web design and is known for his creative and visually stunning designs. His work has inspired countless designers to explore the full potential of product and website design. Andy’s written several industry-leading books, including ‘Transcending CSS,’ ‘Hardboiled Web Design,’ and ‘Art Direction for the Web.’ He’s also worked with businesses of all sizes and industries to achieve their goals through design. Visit Andy’s studio, Stuff \u0026 Nonsense, and check out his Contract Killer, the popular web design contract template trusted by thousands of web designers and developers.",
  "image": "https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693352461_2025-05-17-3.webp",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\n          \n          \n\u003cp\u003eLike ’em or loath ’em, whether you’re showing an alert, a message, or a newsletter signup, dialogue boxes draw attention to a particular piece of content without sending someone to a different page. In the past, dialogues relied on a mix of divisions, ARIA, and JavaScript. But the \u003ca href=\"https://css-tricks.com/some-hands-on-with-the-html-dialog-element/\"\u003eHTML \u003ccode\u003edialog\u003c/code\u003e element\u003c/a\u003e has made them more accessible and style-able in countless ways.\u003c/p\u003e\n\n\n\n\u003cp\u003eSo, how can you take dialogue box design beyond the generic look of frameworks and templates? How can you style them to reflect a brand’s visual identity and help to tell its stories? Here’s how I do it in CSS using \u003ca href=\"https://css-tricks.com/almanac/pseudo-selectors/b/backdrop/\"\u003e\u003ccode\u003e::backdrop\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://css-tricks.com/almanac/properties/b/backdrop-filter/\"\u003e\u003ccode\u003ebackdrop-filter\u003c/code\u003e\u003c/a\u003e, and animations.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" fetchpriority=\"high\" decoding=\"async\" width=\"1600\" height=\"1080\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/6Cols-BQ.png?resize=1600%2C1080\u0026amp;ssl=1\" alt=\"Homepage design for Mike Worth website, showing a cartoon gorilla in a dark cave in an Indiana Jones style.\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/6Cols-BQ.png?w=1600\u0026amp;ssl=1 1600w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/6Cols-BQ.png?resize=300%2C203\u0026amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/6Cols-BQ.png?resize=1024%2C691\u0026amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/6Cols-BQ.png?resize=768%2C518\u0026amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/6Cols-BQ.png?resize=1536%2C1037\u0026amp;ssl=1 1536w\" sizes=\"(min-width: 735px) 864px, 96vw\"/\u003e\u003cfigcaption\u003eDesign by Andy Clarke, Stuff \u0026amp; Nonsense. Mike Worth’s website will launch in June 2025, but you can see examples from this article on CodePen.\u003c/figcaption\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eI mentioned \u003ca href=\"https://css-tricks.com/revisiting-css-border-image/\"\u003ebefore\u003c/a\u003e that Emmy-award-winning game composer Mike Worth hired me to create a highly graphical design. Mike loves ’90s animation, and he challenged me to find ways to incorporate its retro style without making a pastiche. However, I also needed to achieve that retro feel while maintaining accessibility, performance, responsiveness, and semantics.\u003c/p\u003e\n\n\n\u003ch3 id=\"a-brief-overview-of-dialog-and-backdrop-\"\u003eA brief overview of \u003ccode\u003edialog\u003c/code\u003e and \u003ccode\u003e::backdrop\u003c/code\u003e\u003c/h3\u003e\n\n\n\u003cp\u003eLet’s run through a quick refresher.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e While I mostly refer to “dialogue boxes” throughout, the HTML element is spelt \u003ccode\u003edialog\u003c/code\u003e.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003ccode\u003edialog\u003c/code\u003e is an HTML element designed for implementing modal and non-modal dialogue boxes in products and website interfaces. It comes with built-in functionality, including closing a box using the keyboard \u003ccode\u003eEsc\u003c/code\u003e key, focus trapping to keep it inside the box, show and hide methods, and a \u003ccode\u003e::backdrop\u003c/code\u003e pseudo-element for styling a box’s overlay.\u003c/p\u003e\n\n\n\n\u003cp\u003eThe HTML markup is just what you might expect:\u003c/p\u003e\n\n\n\n\u003cpre rel=\"HTML\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003e\u0026lt;dialog\u0026gt;\n  \u0026lt;h2\u0026gt;Keep me informed\u0026lt;/h2\u0026gt;\n  \u0026lt;!-- ... --\u0026gt;\n  \u0026lt;button\u0026gt;Close\u0026lt;/button\u0026gt;\n\u0026lt;/dialog\u0026gt;\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eThis type of dialogue box is hidden by default, but adding the \u003ccode\u003eopen\u003c/code\u003e attribute makes it visible when the page loads:\u003c/p\u003e\n\n\n\n\u003cpre rel=\"HTML\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003e\u0026lt;dialog open\u0026gt;\n  \u0026lt;h2\u0026gt;Keep me informed\u0026lt;/h2\u0026gt;\n  \u0026lt;!-- ... --\u0026gt;\n  \u0026lt;button\u0026gt;Close\u0026lt;/button\u0026gt;\n\u0026lt;/dialog\u0026gt;\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eI can’t imagine too many applications for non-modals which are open by default, so ordinarily I need a button which opens a dialogue box:\u003c/p\u003e\n\n\n\n\u003cpre rel=\"HTML\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003e\u0026lt;dialog\u0026gt;\n  \u0026lt;!-- ... --\u0026gt;\n\u0026lt;/dialog\u0026gt;\n\u0026lt;button\u0026gt;Keep me informed\u0026lt;/button\u0026gt;\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003ePlus a little bit of JavaScript, which opens the modal:\u003c/p\u003e\n\n\n\n\u003cpre rel=\"JavaScript\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003econst dialog = document.querySelector(\u0026#34;dialog\u0026#34;);\nconst showButton = document.querySelector(\u0026#34;dialog + button\u0026#34;);\nshowButton.addEventListener(\u0026#34;click\u0026#34;, () =\u0026gt; {\n  dialog.showModal();\n});\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eClosing a dialogue box also requires JavaScript:\u003c/p\u003e\n\n\n\n\u003cpre rel=\"JavaScript\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003econst closeButton = document.querySelector(\u0026#34;dialog button\u0026#34;);\ncloseButton.addEventListener(\u0026#34;click\u0026#34;, () =\u0026gt; {\n  dialog.close();\n});\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eUnless the box contains a form using \u003ccode\u003emethod=\u0026#34;dialog\u0026#34;\u003c/code\u003e, which allows it to close automatically on submit without JavaScript:\u003c/p\u003e\n\n\n\n\u003cpre rel=\"HTML\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003e\u0026lt;dialog\u0026gt;\n  \u0026lt;form method=\u0026#34;dialog\u0026#34;\u0026gt;\n    \u0026lt;button\u0026gt;Submit\u0026lt;/button\u0026gt;\n  \u0026lt;/form\u0026gt;\n\u0026lt;/dialog\u0026gt;\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eThe \u003ccode\u003edialog\u003c/code\u003e element was developed to be accessible out of the box. It traps focus, supports the \u003ccode\u003eEsc\u003c/code\u003e key, and behaves like a proper modal. But to help screen readers announce dialogue boxes properly, you’ll want to add an \u003ccode\u003earia-labelledby\u003c/code\u003e attribute. This tells assistive technology where to find the dialogue box’s title so it can be read aloud when the modal opens.\u003c/p\u003e\n\n\n\n\u003cpre rel=\"HTML\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003e\u0026lt;dialog aria-labelledby=\u0026#34;dialog-title\u0026#34;\u0026gt;\n  \u0026lt;h2 id=\u0026#34;dialog-title\u0026#34;\u0026gt;Keep me informed\u0026lt;/h2\u0026gt;\n  \u0026lt;!-- ... --\u0026gt;\n\u0026lt;/dialog\u0026gt;\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eMost tutorials I’ve seen include very little styling for \u003ccode\u003edialog\u003c/code\u003e and \u003ccode\u003e::backdrop\u003c/code\u003e, which might explain why so many dialogue boxes have little more than border radii and a \u003ccode\u003ebox-shadow\u003c/code\u003e applied.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" decoding=\"async\" width=\"1600\" height=\"1080\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693318934_2025-05-17-2.webp?resize=1600%2C1080\u0026amp;ssl=1\" alt=\"Two examples of plain-looking dialogs with white backgrounds and box shadows.\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693318934_2025-05-17-2.webp?w=1600\u0026amp;ssl=1 1600w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693318934_2025-05-17-2.webp?resize=300%2C203\u0026amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693318934_2025-05-17-2.webp?resize=1024%2C691\u0026amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693318934_2025-05-17-2.webp?resize=768%2C518\u0026amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693318934_2025-05-17-2.webp?resize=1536%2C1037\u0026amp;ssl=1 1536w\" sizes=\"(min-width: 735px) 864px, 96vw\"/\u003e\u003cfigcaption\u003eOut-of-the-box dialogue designs\u003c/figcaption\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eI believe that every element in a design — no matter how small or infrequently seen — is an opportunity to present a brand and tell a story about its products or services. I know there are moments during someone’s journey through a design where paying special attention to design can make their experience more memorable.\u003c/p\u003e\n\n\n\n\u003cp\u003eDialogue boxes are just one of those moments, and Mike Worth’s design offers plenty of opportunities to reflect his brand or connect directly to someone’s place in Mike’s story. That might be by styling a newsletter sign-up dialogue to match the scrolls in his news section.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" decoding=\"async\" width=\"1600\" height=\"1080\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693352461_2025-05-17-3-1.webp?resize=1600%2C1080\u0026amp;ssl=1\" alt=\"Dialog in the design is an open scroll with script lettering and an email signup form.\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693352461_2025-05-17-3-1.webp?w=1600\u0026amp;ssl=1 1600w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693352461_2025-05-17-3-1.webp?resize=300%2C203\u0026amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693352461_2025-05-17-3-1.webp?resize=1024%2C691\u0026amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693352461_2025-05-17-3-1.webp?resize=768%2C518\u0026amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693352461_2025-05-17-3-1.webp?resize=1536%2C1037\u0026amp;ssl=1 1536w\" sizes=\"(min-width: 735px) 864px, 96vw\"/\u003e\u003cfigcaption\u003eMike Worth concept design, designed by Andy Clarke, Stuff \u0026amp; Nonsense.\u003c/figcaption\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eOr making the form modal on his error pages look like a comic-book speech balloon.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" loading=\"lazy\" decoding=\"async\" width=\"1600\" height=\"1080\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693372945_2025-05-17-4.webp?resize=1600%2C1080\u0026amp;ssl=1\" alt=\"Example of a dialog in the shape of a shat bubble with an email signup form inside.\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693372945_2025-05-17-4.webp?w=1600\u0026amp;ssl=1 1600w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693372945_2025-05-17-4.webp?resize=300%2C203\u0026amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693372945_2025-05-17-4.webp?resize=1024%2C691\u0026amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693372945_2025-05-17-4.webp?resize=768%2C518\u0026amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693372945_2025-05-17-4.webp?resize=1536%2C1037\u0026amp;ssl=1 1536w\" sizes=\"auto, (min-width: 735px) 864px, 96vw\"/\u003e\u003cfigcaption\u003eMike Worth concept design, designed by Andy Clarke, Stuff \u0026amp; Nonsense.\u003c/figcaption\u003e\u003c/figure\u003e\n\n\n\u003ch3 id=\"-dialog-in-action\"\u003e\u003ccode\u003edialog\u003c/code\u003e in action\u003c/h3\u003e\n\n\n\u003cp\u003eMike’s drop-down navigation menu looks like an ancient stone tablet.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" loading=\"lazy\" decoding=\"async\" width=\"1600\" height=\"1080\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693396867_2025-05-17-5.webp?resize=1600%2C1080\u0026amp;ssl=1\" alt=\"A menu of links set against a cartoon stone tablet illustration.\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693396867_2025-05-17-5.webp?w=1600\u0026amp;ssl=1 1600w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693396867_2025-05-17-5.webp?resize=300%2C203\u0026amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693396867_2025-05-17-5.webp?resize=1024%2C691\u0026amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693396867_2025-05-17-5.webp?resize=768%2C518\u0026amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693396867_2025-05-17-5.webp?resize=1536%2C1037\u0026amp;ssl=1 1536w\" sizes=\"auto, (min-width: 735px) 864px, 96vw\"/\u003e\u003cfigcaption\u003eMike Worth, designed by Andy Clarke, Stuff \u0026amp; Nonsense.\u003c/figcaption\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eI wanted to extend this look to his dialogue boxes with a three-dimensional tablet and a jungle leaf-filled backdrop.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" loading=\"lazy\" decoding=\"async\" width=\"1600\" height=\"1080\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/dialog.webp?resize=1600%2C1080\u0026amp;ssl=1\" alt=\"A dialog against a cartoon stone tablet illustration with an email signup for inside.\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/dialog.webp?w=1600\u0026amp;ssl=1 1600w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/dialog.webp?resize=300%2C203\u0026amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/dialog.webp?resize=1024%2C691\u0026amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/dialog.webp?resize=768%2C518\u0026amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/dialog.webp?resize=1536%2C1037\u0026amp;ssl=1 1536w\" sizes=\"auto, (min-width: 735px) 864px, 96vw\"/\u003e\u003cfigcaption\u003eMike Worth, designed by Andy Clarke, Stuff \u0026amp; Nonsense.\u003c/figcaption\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eThis \u003ccode\u003edialog\u003c/code\u003e contains a newsletter sign-up form with an email input and a submit button:\u003c/p\u003e\n\n\n\n\u003cpre rel=\"HTML\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003e\u0026lt;dialog\u0026gt;\n  \u0026lt;h2\u0026gt;Keep me informed\u0026lt;/h2\u0026gt;\n  \u0026lt;form\u0026gt;\n    \u0026lt;label for=\u0026#34;email\u0026#34; data-visibility=\u0026#34;hidden\u0026#34;\u0026gt;Email address\u0026lt;/label\u0026gt;\n    \u0026lt;input type=\u0026#34;email\u0026#34; id=\u0026#34;email\u0026#34; required\u0026gt;\n    \u0026lt;button\u0026gt;Submit\u0026lt;/button\u0026gt;\n  \u0026lt;/form\u0026gt;\n  \u0026lt;button\u0026gt;x\u0026lt;/button\u0026gt;\n\u0026lt;/dialog\u0026gt;\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eI started by applying dimensions to the \u003ccode\u003edialog\u003c/code\u003e and adding the SVG stone tablet background image:\u003c/p\u003e\n\n\n\n\u003cpre rel=\"CSS\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003edialog {\n  width: 420px;\n  height: 480px;\n  background-color: transparent;\n  background-image: url(\u0026#34;dialog.svg\u0026#34;);\n  background-repeat: no-repeat;\n  background-size: contain;\n}\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eThen, I added the leafy green background image to the dialogue box’s generated backdrop using the \u003ccode\u003e::backdrop\u003c/code\u003e pseudo element selector:\u003c/p\u003e\n\n\n\n\u003cpre rel=\"CSS\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003edialog::backdrop {\n  background-image: url(\u0026#34;backdrop.svg\u0026#34;);\n  background-size: cover;\n}\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" loading=\"lazy\" decoding=\"async\" width=\"1600\" height=\"1080\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/dialog-signup-form.webp?resize=1600%2C1080\" alt=\"Dialog sitting on top of a safari jungle pattern as the backdrop. The dialog is styled with a cartoon stone tablet illustration with an email signup form inside.\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/dialog-signup-form.webp?w=1600\u0026amp;ssl=1 1600w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/dialog-signup-form.webp?resize=300%2C203\u0026amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/dialog-signup-form.webp?resize=1024%2C691\u0026amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/dialog-signup-form.webp?resize=768%2C518\u0026amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/dialog-signup-form.webp?resize=1536%2C1037\u0026amp;ssl=1 1536w\" sizes=\"auto, (min-width: 735px) 864px, 96vw\"/\u003e\u003cfigcaption\u003eMike Worth, designed by Andy Clarke, Stuff \u0026amp; Nonsense.\u003c/figcaption\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eI needed to make it clear to anyone filling in Mike’s form that their email address is in a valid format. So I combined \u003ca href=\"https://css-tricks.com/almanac/pseudo-selectors/h/has/\"\u003e\u003ccode\u003e:has\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://css-tricks.com/almanac/pseudo-selectors/v/valid/\"\u003e\u003ccode\u003e:valid\u003c/code\u003e\u003c/a\u003e CSS pseudo-class selectors to change the color of the submit button from grey to green:\u003c/p\u003e\n\n\n\n\u003cpre rel=\"CSS\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003edialog:has(input:valid) button {\n  background-color: #7e8943;\n  color: #fff;\n}\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eI also wanted this interaction to reflect Mike’s fun personality. So, I also changed the \u003ccode\u003edialog\u003c/code\u003e background image and applied a rubberband animation to the box when someone inputs a valid email address:\u003c/p\u003e\n\n\n\n\u003cpre rel=\"CSS\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003edialog:has(input:valid) {\n  background-image: url(\u0026#34;dialog-valid.svg\u0026#34;);\n  animation: rubberBand 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;\n}\n\n@keyframes rubberBand {\n  from { transform: scale3d(1, 1, 1); }\n  30% { transform: scale3d(1.25, 0.75, 1); }\n  40% { transform: scale3d(0.75, 1.25, 1); }\n  50% { transform: scale3d(1.15, 0.85, 1); }\n  65% { transform: scale3d(0.95, 1.05, 1); }\n  75% { transform: scale3d(1.05, 0.95, 1); }\n  to { transform: scale3d(1, 1, 1); }\n}\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eTip\u003c/strong\u003e: Daniel Eden’s \u003ca href=\"https://animate.style\" rel=\"noopener\"\u003eAnimate.css library\u003c/a\u003e is a fabulous source of “Just-add-water CSS animations” like the rubberband I used for this dialogue box.\u003c/p\u003e\n\n\n\n\u003cp\u003eChanging how an element looks when it contains a valid input is a fabulous way to add interactions that are, at the same time, fun and valuable for the user.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" loading=\"lazy\" decoding=\"async\" width=\"1600\" height=\"1080\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693579867_2025-05-17-7-3.webp?resize=1600%2C1080\u0026amp;ssl=1\" alt=\"Dialog sitting on top of a safari jungle pattern as the backdrop. The dialog is styled with a cartoon stone tablet illustration with an email signup form inside.\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693579867_2025-05-17-7-3.webp?w=1600\u0026amp;ssl=1 1600w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693579867_2025-05-17-7-3.webp?resize=300%2C203\u0026amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693579867_2025-05-17-7-3.webp?resize=1024%2C691\u0026amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693579867_2025-05-17-7-3.webp?resize=768%2C518\u0026amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/s_EE59C5A105545DD153C51E60D867441DC316D04D9E44A41B5CC2A0033D85A746_1747693579867_2025-05-17-7-3.webp?resize=1536%2C1037\u0026amp;ssl=1 1536w\" sizes=\"auto, (min-width: 735px) 864px, 96vw\"/\u003e\u003cfigcaption\u003eMike Worth, designed by Andy Clarke, Stuff \u0026amp; Nonsense.\u003c/figcaption\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eThat combination of \u003ccode\u003e:has\u003c/code\u003e and \u003ccode\u003e:valid\u003c/code\u003e selectors can even be extended to the \u003ccode\u003e::backdrop\u003c/code\u003e pseudo-class, to change the backdrop’s background image:\u003c/p\u003e\n\n\n\n\u003cpre rel=\"CSS\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003edialog:has(input:valid)::backdrop {\n  background-image: url(\u0026#34;backdrop-valid.svg\u0026#34;);\n}\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eTry it for yourself:\u003c/p\u003e\n\n\n\n\n\n\n\u003ch3 id=\"conclusion\"\u003eConclusion\u003c/h3\u003e\n\n\n\u003cp\u003eWe often think of dialogue boxes as functional elements, as necessary interruptions, but nothing more. But when you treat them as opportunities for expression, even the smallest parts of a design can help shape a product or website’s personality.\u003c/p\u003e\n\n\n\n\u003cp\u003eThe HTML \u003ccode\u003edialog\u003c/code\u003e element, with its built-in behaviours and styling potential, opens up opportunities for branding and creative storytelling. There’s no reason a dialogue box can’t be as distinctive as the rest of your design.\u003c/p\u003e\n\n\n\n\u003chr/\u003e\n\n\n\u003ch3 id=\"andy-clarke\"\u003eAndy Clarke\u003c/h3\u003e\n\n\n\u003cp\u003eOften referred to as one of the pioneers of web design, \u003ca href=\"https://stuffandnonsense.co.uk/\" rel=\"noopener\"\u003eAndy Clarke\u003c/a\u003e has been instrumental in pushing the boundaries of web design and is known for his creative and visually stunning designs. His work has inspired countless designers to explore the full potential of product and website design.\u003c/p\u003e\n\n\n\n\u003cp\u003eAndy’s written several industry-leading books, including ‘Transcending CSS,’ ‘Hardboiled Web Design,’ and ‘Art Direction for the Web.’ He’s also worked with businesses of all sizes and industries to achieve their goals through design.\u003c/p\u003e\n\n\n\n\u003cp\u003eVisit Andy’s studio, \u003ca href=\"https://stuffandnonsense.co.uk/\" rel=\"noopener\"\u003eStuff \u0026amp; Nonsense\u003c/a\u003e, and check out his \u003ca href=\"https://stuffandnonsense.co.uk/projects/contract-killer\" rel=\"noopener\"\u003eContract Killer\u003c/a\u003e, the popular web design contract template trusted by thousands of web designers and developers.\u003c/p\u003e\n\n          \n        \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "9 min read",
  "publishedTime": "2025-06-03T08:39:04-06:00",
  "modifiedTime": "2025-06-03T08:39:07-06:00"
}
