{
  "id": "b3d0d53a-eae3-4e80-b3c8-d77288509877",
  "title": "A Feature from 10 Years Ago Is Back – with a Twist – in My Favorite RSS Client",
  "link": "https://www.macstories.net/ios/a-feature-from-10-years-ago-is-back-with-a-twist-in-my-favorite-rss-client/",
  "description": "Unread’s new custom shortcuts. When it comes to productivity apps, especially those that have to work within the constraints of iOS and iPadOS, it’s rare these days to stumble upon a new idea that has never been tried before. With the exception of objectively new technologies such as LLMs, or unless there’s a new framework […]",
  "author": "Federico Viticci",
  "published": "Tue, 19 Nov 2024 14:21:37 +0000",
  "source": "https://www.macstories.net/feed",
  "categories": [
    "iOS",
    "automation",
    "iPadOS",
    "Mr. Reader",
    "RSS",
    "shortcuts"
  ],
  "byline": "Federico Viticci",
  "length": 7885,
  "excerpt": "When it comes to productivity apps, especially those that have to work within the constraints of iOS and iPadOS, it’s rare these days to stumble upon a new idea that has never been tried before. With the exception of objectively new technologies such as LLMs, or unless there’s a new framework that Apple is opening",
  "siteName": "",
  "favicon": "https://www.macstories.net/app/themes/macstories4/images/apple-touch-icon-152x152-precomposed.png",
  "text": "When it comes to productivity apps, especially those that have to work within the constraints of iOS and iPadOS, it’s rare these days to stumble upon a new idea that has never been tried before. With the exception of objectively new technologies such as LLMs, or unless there’s a new framework that Apple is opening up to developers, it can often feel like most ideas have been attempted before and we’re simply retreading old ground. Let me be clear: I don’t think there’s anything inherently wrong with that. I’ve been writing about iPhone and iPad apps for over a decade now, and I believe there are dozens of design patterns and features that have undeservedly fallen out of fashion. But such is life. Today marks the return of a very MacStories-y feature in one of my longtime favorite apps￼, which – thanks to this new functionality – is gaining a permanent spot on my Home Screen. Namely, the RSS client Unread now lets you create custom article actions powered by the Shortcuts app. To understand why this feature is a big deal to me, we need to travel back in time to 2013, when an incredible RSS client known as Mr. Reader1 pioneered the idea of sending parts of an article to other apps via custom actions you could pin to the app’s context menu. Here’s what I wrote at the time: Mr. Reader’s developer, Oliver Fürniß, supported a lot of apps in previous versions of his Google Reader client. Since the very first updates, Mr. Reader became well known for allowing users to open an article’s link in an alternative browser, or sending a URL to OmniFocus to create a new task. All these actions, which spanned browsers, to-do managers, note-taking apps, and more, were hard-coded by Oliver. It means he had to manually insert them in the code of the app, without offering his users the possibility to customize them or create new ones entirely. Mr. Reader was versatile, but as URL schemes started becoming more popular, there was always going to be an app that wasn’t supported, which required Oliver to go back and hard-code it again into the app. Oliver tells me he received “hundreds of requests” to add support for a specific app that had been updated with a URL scheme capable of receiving URLs or text. It was getting out of hand. The new generic solution allows you to build as many actions as you want, using the parameters you want, using either URL schemes from sample actions or by entering your own. In terms of iOS automation, this is the DIY version of Services: actions will appear in standard menus, but they will launch an app – they won’t display a part of an app inline. The idea was simple: Mr. Reader’s developer had been inundated with feature requests to support specific app integrations, so at some point, they just decided to let people build their own actions using URL schemes. The technology made sense for its time. Workflow (which would later become Shortcuts) didn’t exist yet, so we only had apps like Pythonista, Editorial, Drafts, and Launch Center Pro to automate our devices. As it turns out, that idea – letting people create their own enhancements for an RSS reader – is still sound today. This is what developer John Brayton is doing with the latest version of Unread, the elegant RSS client for Apple platforms that we have covered several times on MacStories. In version 4.3, you can create custom actions to send articles from Unread to any app you want. In 2024, though, you no longer do that with URL schemes; you do it with Shortcuts. I have to imagine that, just like developer Oliver Fürniß 11 years ago, John Brayton must have gotten all kinds of requests to support third-party apps for saving links from Unread. Case in point: this version also adds built-in integrations for Anybox, Flyleaf, Matter, and Wallabag. This approach works, but it isn’t sustainable long-term, and, more importantly, it doesn’t scale to power users who want the ability to do whatever they want with their RSS client without having to wait for its developer to support their ideas. Letting power users create their own enhancements is a safer investment; the developer saves time and makes their most loyal users happier and more productive. It’s a win-win, especially when you consider the fact that these power user actions require a premium Unread subscription. But back to the feature itself. It’s 2024, and URL schemes have largely been abstracted from iOS automation. What Unread does is clever: it includes a menu in the app’s preferences where you can define a list of custom shortcuts you want to run for selected articles. To add a shortcut, all you have to do is enter its name as it appears in the Shortcuts app. Then, these shortcuts will show up in Unread’s context menu when you swipe inside the article viewer or long-press an article in a list: It gets even better, though. On devices with a hardware keyboard, Unread 4.3 lets you define custom keyboard shortcuts to immediately trigger specific article actions as well as these new custom shortcuts. This option is glorious. I was able to program Unread to save an article to a specific Reminders list by pressing ⌃ + U, which opens the Shortcuts app, runs a shortcut, and automatically returns to Unread.2 So how does Unread do it? There’s an entire support page about this, but the gist is that Unread sends a custom JSON object to the Shortcuts app that contains multiple variables for the selected article, including its URL, summary, and title, as well as the name of the feed it comes from. In Shortcuts, you can then decide what to do with each of these variables by parsing the JSON input as a dictionary. Here’s what it looks like: {\"url\":\"https:\\/\\/9to5mac.com\\/2024\\/11\\/18\\/iphone-16-magsafe-battery-pack-memories\\/\",\"summary\":\"Following the introduction of MagSafe charging on the iPhone 12, Apple unveiled a MagSafe Battery Pack accessory.\",\"title\":\"Apple’s MagSafe Battery Pack for iPhone shouldn’t have been a one-and-done experiment\",\"article_url\":\"https:\\/\\/9to5mac.com\\/2024\\/11\\/18\\/iphone-16-magsafe-battery-pack-memories\\/\",\"feed_name\":\"9to5Mac\",\"type\":\"article\"} And here’s all you need to do in Shortcuts to get the input from Unread and extract some of its variables: If you’re the type of person who’s fascinated by a feature like this, I think you can see why this is a definite improvement over how we used to do this kind of thing in 2013. We don’t need to worry about percent-encoding and decoding URL schemes anymore; we can just send some input data to Shortcuts, parse it using visual actions, and work with those variables to connect them to whatever service or app we want. Want to publish an article from Unread on your blog as a linked post? Thinking of ways to pair Unread with your task manager? Looking to use ChatGPT’s actions with input from your RSS reader? All of this is possible thanks to this new integration between Unread and Shortcuts. As you can tell, I love this feature. However, there are two aspects I would like to see improve. I should be able to design a custom icon for an action in Unread by picking a color and SF Symbol that match the icon of a shortcut in the Shortcuts app, for consistency’s sake. Furthermore, I’d like to see an expansion of the variables that Unread passes to Shortcuts: publication date, selected text, and author names would be nice to have for automation purposes. If you told me in 2013 that in 2024, I’d still be writing about running custom actions in my RSS reader…I mean, let’s face it, I would have totally believed you. This feature has always been a great idea, and I’m glad developer John Brayton put a new spin on it by embracing the Shortcuts app and its immense potential for power users. Everything old is new again. Unread 4.3 is available now on the App Store. A premium subscription, which costs $4.99/month or $29.99/year, is required for custom article actions.",
  "image": "https://cdn.macstories.net/image-1732022779937.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n                        \n\u003cp id=\"p2\"\u003eWhen it comes to productivity apps, especially those that have to work within the constraints of iOS and iPadOS, it’s rare these days to stumble upon a new idea that has never been tried before. With the exception of objectively new technologies such as LLMs, or unless there’s a new \u003ca href=\"https://developer.apple.com/documentation/appintents/making-onscreen-content-available-to-siri-and-apple-intelligence\" rel=\"noopener noreferrer\"\u003eframework\u003c/a\u003e that Apple is opening up to developers, it can often feel like most ideas have been attempted before and we’re simply retreading old ground.\u003c/p\u003e\n\u003cp id=\"p3\"\u003eLet me be clear: I don’t think there’s anything inherently wrong with that. I’ve been writing about iPhone and iPad apps for over a decade now, and I believe there are dozens of \u003ca href=\"https://bsky.app/profile/sandropennisi.bsky.social/post/3lba4l2ukbs2o\" rel=\"noopener noreferrer\"\u003edesign patterns\u003c/a\u003e and features that have undeservedly fallen out of fashion. But such is life.\u003c/p\u003e\n\u003cp id=\"p4\"\u003eToday marks the return of a very \u003cem\u003eMacStories-y\u003c/em\u003e feature in one of my longtime favorite apps￼, which – thanks to this new functionality – is gaining a permanent spot on my Home Screen. Namely, the RSS client \u003ca href=\"https://www.goldenhillsoftware.com/unread/\" rel=\"noopener noreferrer\"\u003eUnread\u003c/a\u003e now lets you create \u003cstrong\u003ecustom article actions\u003c/strong\u003e powered by the Shortcuts app.\u003c/p\u003e\n\n\u003cp id=\"p6\"\u003eTo understand why this feature is a big deal to me, we need to travel back in time to 2013, when an incredible RSS client known as \u003ca href=\"https://www.macstories.net/reviews/review-mr-reader-takes-on-reeder-for-king-of-ipad-rss-apps/\" rel=\"noopener noreferrer\"\u003eMr. Reader\u003c/a\u003e\u003csup id=\"fnref-77279-1\"\u003e\u003ca href=\"#fn-77279-1\" rel=\"noopener noreferrer\"\u003e1\u003c/a\u003e\u003c/sup\u003e pioneered the idea of sending parts of an article to other apps via custom actions you could pin to the app’s context menu. Here’s \u003ca href=\"https://www.macstories.net/reviews/mr-reader-and-the-services-menu-for-ios/\" rel=\"noopener noreferrer\"\u003ewhat I wrote at the time\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote id=\"blockquote7\"\u003e\u003cp\u003e\n  Mr. Reader’s developer, Oliver Fürniß, supported a lot of apps in previous versions of his Google Reader client. Since the very first updates, Mr. Reader became well known for allowing users to open an article’s link in an alternative browser, or sending a URL to OmniFocus to create a new task. All these actions, which spanned browsers, to-do managers, note-taking apps, and more, were hard-coded by Oliver. It means he had to manually insert them in the code of the app, without offering his users the possibility to customize them or create new ones entirely. Mr. Reader was versatile, but as URL schemes started becoming more popular, there was always going to be an app that wasn’t supported, which required Oliver to go back and hard-code it again into the app. Oliver tells me he received “hundreds of requests” to add support for a specific app that had been updated with a URL scheme capable of receiving URLs or text. It was getting out of hand.\u003c/p\u003e\n\u003cp\u003e  The new generic solution allows you to build as many actions as you want, using the parameters you want, using either URL schemes from sample actions or by entering your own. In terms of iOS automation, this is the DIY version of Services: actions will appear in standard menus, but they will launch an app – they won’t display a part of an app inline.\n\u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp id=\"p9\"\u003eThe idea was simple: Mr. Reader’s developer had been inundated with feature requests to support specific app integrations, so at some point, they just decided to let people build their own actions using URL schemes. The technology made sense for its time. \u003ca href=\"https://www.macstories.net/reviews/workflow-review-integrated-automation-for-ios-8/\" rel=\"noopener noreferrer\"\u003eWorkflow\u003c/a\u003e (which would later \u003ca href=\"https://www.macstories.net/news/apple-acquires-workflow/\" rel=\"noopener noreferrer\"\u003ebecome Shortcuts\u003c/a\u003e) didn’t exist yet, so we only had apps like \u003ca href=\"https://www.macstories.net/stories/automating-ios-how-pythonista-changed-my-workflow/\" rel=\"noopener noreferrer\"\u003ePythonista\u003c/a\u003e, \u003ca href=\"https://www.macstories.net/stories/editorial-for-ipad-review/\" rel=\"noopener noreferrer\"\u003eEditorial\u003c/a\u003e, \u003ca href=\"https://www.macstories.net/reviews/drafts-3-review-better-ios-automation-and-workflows/\" rel=\"noopener noreferrer\"\u003eDrafts\u003c/a\u003e, and \u003ca href=\"https://www.macstories.net/reviews/launch-center-pro-2-0-review/\" rel=\"noopener noreferrer\"\u003eLaunch Center Pro\u003c/a\u003e to automate our devices.\u003c/p\u003e\n\u003cp id=\"p10\"\u003eAs it turns out, that idea – letting people create their own enhancements for an RSS reader – is still sound today. This is what developer John Brayton is doing with the latest version of Unread, the elegant RSS client for Apple platforms that we have \u003ca href=\"https://www.macstories.net/reviews/unread-2-review-the-elegant-rss-client-leaps-into-modernity/\" rel=\"noopener noreferrer\"\u003ecovered\u003c/a\u003e \u003ca href=\"https://www.macstories.net/linked/unread-3-3/\" rel=\"noopener noreferrer\"\u003eseveral\u003c/a\u003e \u003ca href=\"https://www.macstories.net/reviews/unread-4-0-brings-a-fast-and-native-rss-reader-to-the-mac/\" rel=\"noopener noreferrer\"\u003etimes\u003c/a\u003e on MacStories. In version 4.3, you can create custom actions to send articles from Unread to any app you want. In 2024, though, you no longer do that with URL schemes; you do it with Shortcuts.\u003c/p\u003e\n\u003cp id=\"p11\"\u003eI have to imagine that, just like developer Oliver Fürniß 11 years ago, John Brayton must have gotten all kinds of requests to support third-party apps for saving links from Unread. Case in point: this version also adds built-in integrations for \u003ca href=\"https://apps.apple.com/us/app/anybox-bookmark-read-later/id1593408455\" rel=\"noopener noreferrer\"\u003eAnybox\u003c/a\u003e, \u003ca href=\"https://apps.apple.com/us/app/flyleaf-read-later/id6475200381\" rel=\"noopener noreferrer\"\u003eFlyleaf\u003c/a\u003e, \u003ca href=\"https://apps.apple.com/us/app/matter-1-smarter-every-day/id1501592184\" rel=\"noopener noreferrer\"\u003eMatter\u003c/a\u003e, and \u003ca href=\"https://apps.apple.com/us/app/wallabag-2-official/id1170800946\" rel=\"noopener noreferrer\"\u003eWallabag\u003c/a\u003e. This approach works, but it isn’t sustainable long-term, and, more importantly, it doesn’t scale to power users who want the ability to do \u003cem\u003ewhatever\u003c/em\u003e they want with their RSS client without having to wait for its developer to support their ideas. Letting power users create their own enhancements is a safer investment; the developer saves time and makes their most loyal users happier and more productive. It’s a win-win, especially when you consider the fact that these power user actions require a premium Unread subscription.\u003c/p\u003e\n\u003cp id=\"p12\"\u003eBut back to the feature itself. It’s 2024, and URL schemes have largely been abstracted from iOS automation. What Unread does is clever: it includes a menu in the app’s preferences where you can define a list of custom shortcuts you want to run for selected articles. To add a shortcut, all you have to do is enter its name as it appears in the Shortcuts app. Then, these shortcuts will show up in Unread’s context menu when you swipe inside the article viewer or long-press an article in a list:\u003c/p\u003e\n\n\u003cp id=\"p14\"\u003eIt gets even better, though. On devices with a hardware keyboard, Unread 4.3 lets you define custom keyboard shortcuts to immediately trigger specific article actions as well as these new custom shortcuts. This option is \u003cem\u003eglorious\u003c/em\u003e. I was able to program Unread to save an article to a specific Reminders list by pressing ⌃ + U, which opens the Shortcuts app, runs a shortcut, and automatically returns to Unread.\u003csup id=\"fnref-77279-2\"\u003e\u003ca href=\"#fn-77279-2\" rel=\"noopener noreferrer\"\u003e2\u003c/a\u003e\u003c/sup\u003e\u003c/p\u003e\n\n\u003cp id=\"p16\"\u003eSo how does Unread do it? There’s an \u003ca href=\"https://www.goldenhillsoftware.com/unread/shortcuts/\" rel=\"noopener noreferrer\"\u003eentire support page\u003c/a\u003e about this, but the gist is that Unread sends a custom JSON object to the Shortcuts app that contains multiple variables for the selected article, including its URL, summary, and title, as well as the name of the feed it comes from. In Shortcuts, you can then decide what to do with each of these variables by parsing the JSON input as a dictionary. Here’s what it looks like:\u003c/p\u003e\n\u003cpre id=\"pre17\"\u003e\u003ccode\u003e\u003cspan\u003e{\u0026#34;url\u0026#34;:\u0026#34;https:\\/\\/9to5mac.com\\/2024\\/11\\/18\\/iphone-16-magsafe-battery-pack-memories\\/\u0026#34;,\u0026#34;summary\u0026#34;:\u0026#34;Following the introduction of MagSafe charging on the iPhone 12, Apple unveiled a MagSafe Battery Pack accessory.\u0026#34;,\u0026#34;title\u0026#34;:\u0026#34;Apple’s MagSafe Battery Pack for iPhone shouldn’t have been a one-and-done experiment\u0026#34;,\u0026#34;article_url\u0026#34;:\u0026#34;https:\\/\\/9to5mac.com\\/2024\\/11\\/18\\/iphone-16-magsafe-battery-pack-memories\\/\u0026#34;,\u0026#34;feed_name\u0026#34;:\u0026#34;9to5Mac\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;article\u0026#34;}\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\u003cp id=\"p18\"\u003eAnd here’s all you need to do in Shortcuts to get the input from Unread and extract some of its variables:\u003c/p\u003e\n\n\u003cp id=\"p20\"\u003eIf you’re the type of person who’s fascinated by a feature like this, I think you can see why this is a definite improvement over how we used to do this kind of thing in 2013. We don’t need to worry about percent-encoding and decoding URL schemes anymore; we can just send some input data to Shortcuts, parse it using visual actions, and work with those variables to connect them to whatever service or app we want. Want to publish an article from Unread on your blog as a linked post? Thinking of ways to pair Unread with your task manager? Looking to use \u003ca href=\"https://apps.apple.com/us/app/chatgpt/id6448311069\" rel=\"noopener noreferrer\"\u003eChatGPT\u003c/a\u003e’s actions with input from your RSS reader? All of this is possible thanks to this new integration between Unread and Shortcuts.\u003c/p\u003e\n\u003cp id=\"p21\"\u003eAs you can tell, I \u003cem\u003elove\u003c/em\u003e this feature. However, there are two aspects I would like to see improve. I should be able to design a custom icon for an action in Unread by picking a color and SF Symbol that match the icon of a shortcut in the Shortcuts app, for consistency’s sake. Furthermore, I’d like to see an expansion of the variables that Unread passes to Shortcuts: publication date, selected text, and author names would be nice to have for automation purposes.\u003c/p\u003e\n\u003cp id=\"p22\"\u003eIf you told me in 2013 that in 2024, I’d still be writing about running custom actions in my RSS reader…I mean, let’s face it, I would have totally believed you. This feature has always been a great idea, and I’m glad developer John Brayton put a new spin on it by embracing the Shortcuts app and its immense potential for power users. Everything old is new again.\u003c/p\u003e\n\u003cp id=\"p23\"\u003eUnread 4.3 is \u003ca href=\"https://apps.apple.com/us/app/unread-an-rss-reader/id1363637349\" rel=\"noopener noreferrer\"\u003eavailable now on the App Store\u003c/a\u003e. A premium subscription, which costs $4.99/month or $29.99/year, is required for custom article actions.\u003c/p\u003e\n\n            \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "9 min read",
  "publishedTime": "2024-11-19T14:21:37-05:00",
  "modifiedTime": null
}
