{
  "id": "f520dc3d-ef31-48ef-934d-5162226331b1",
  "title": "Swift Assist, Part Deux",
  "link": "https://www.macstories.net/stories/swift-assist-part-deux/",
  "description": "At WWDC 2024, I attended a developer tools briefing with Jason Snell, Dan Moren, and John Gruber. Later, I wrote about Swift Assist, an AI-based code generation tool that Apple was working on for Xcode. That first iteration of Swift Assist caught my eye as promising, but I remember asking at the time whether it […]",
  "author": "John Voorhees",
  "published": "Thu, 19 Jun 2025 15:47:09 +0000",
  "source": "https://www.macstories.net/feed",
  "categories": [
    "stories",
    "developer tools",
    "developers",
    "Swift",
    "Xcode"
  ],
  "byline": "John Voorhees",
  "length": 4203,
  "excerpt": "At WWDC 2024, I attended a developer tools briefing with Jason Snell, Dan Moren, and John Gruber. Later, I wrote about Swift Assist, an AI-based code generation tool that Apple was working on for Xcode. That first iteration of Swift Assist caught my eye as promising, but I remember asking at the time whether it",
  "siteName": "",
  "favicon": "https://www.macstories.net/app/themes/macstories4/images/apple-touch-icon-152x152-precomposed.png",
  "text": "At WWDC 2024, I attended a developer tools briefing with Jason Snell, Dan Moren, and John Gruber. Later, I wrote about Swift Assist, an AI-based code generation tool that Apple was working on for Xcode. That first iteration of Swift Assist caught my eye as promising, but I remember asking at the time whether it could modify multiple files in a project at once and being told it couldn’t. What I saw was rudimentary by 2025’s standards with things like Cursor, but I was glad to see that Apple was working on a generative tool for Xcode users. In the months that followed, I all but forgot that briefing and story, until a wave of posts asking, “Whatever happened to Swift Assist?” started appearing on social media and blogs. John Gruber and Nick Heer picked up on the thread and came across my story, citing it as evidence that the MIA feature was real but curiously absent from any of 2024’s Xcode betas. This year, Jason Snell and I had a mini reunion of sorts during another developer tools briefing. This time, it was just the two of us. Among the Xcode features we saw was a much more robust version of Swift Assist that, unlike in 2024, is already part of the Xcode 26 betas. Having been the only one who wrote about the feature last year, I couldn’t let the chance to document what I saw this year slip by. I’m not a developer, so I’m not going to review Swift Assist (a name that is conspicuously absent from Apple’s developer tool press release, by the way), but the changes are so substantial that the feature I was shown this year hardly resembles what I saw in 2024. Unlike last year’s demo, this version can revise multiple project files and includes support for multiple large language models, including OpenAI’s ChatGPT, which has been tuned to work with Swift and Xcode. Getting started with ChatGPT doesn’t require an OpenAI account, but developers can choose to use their account credentials from OpenAI or another provider, like Anthropic. Swift Assist also supports local model integration. If your chosen AI model takes you down a dead end, code changes can be rolled back incrementally at any time. It’s also notable that this is Apple’s first stab – in any app – at a chatbot. The chat interface lives in the left sidebar, where you can request code changes, bug fixes, documentation, and other information relevant to a project. Changes proposed by your selected LLM are color-coded to make them easy to review, too. It’s great to see Apple go down a path that gives developers the flexibility to choose whichever model they’d like, visualize changes, and roll them back as needed. Whether that’s enough to satisfy developers who have increasingly looked to third-party options to incorporate AI into their workflows remains to be seen. The reactions that I’ve seen to Xcode 26’s new features run the gamut. Some developers are cautiously optimistic and even enthusiastic about Xcode 26, while others have run into roadblocks or decided the update is too little, too late. Still, what I saw this year struck me as a more solid foundation to build on. My hope is that, by getting these features in developers’ hands at the beginning of the beta period, Apple will have a chance to incorporate developer feedback before releasing Xcode 26 publicly this fall. Access Extra Content and PerksFounded in 2015, Club MacStories has delivered exclusive content every week for nearly a decade. What started with weekly and monthly email newsletters has blossomed into a family of memberships designed every MacStories fan. Learn more here and from our Club FAQs. Club MacStories: Weekly and monthly newsletters via email and the web that are brimming with apps, tips, automation workflows, longform writing, early access to the MacStories Unwind podcast, periodic giveaways, and more; Club MacStories+: Everything that Club MacStories offers, plus an active Discord community, advanced search and custom RSS features for exploring the Club’s entire back catalog, bonus columns, and dozens of app discounts; Club Premier: All of the above and AppStories+, an extended version of our flagship podcast that’s delivered early, ad-free, and in high-bitrate audio.",
  "image": "https://cdn.macstories.net/apple-wwdc25-macos-tahoe-26-xcode-26-250609-1750276626798.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n                        \n\u003cp id=\"p2\"\u003eAt WWDC 2024, I attended a developer tools briefing with Jason Snell, Dan Moren, and John Gruber. Later, \u003ca href=\"https://www.macstories.net/news/a-look-at-code-completion-and-swift-assist-coming-in-xcode-16/\" rel=\"noopener noreferrer\"\u003eI wrote about Swift Assist\u003c/a\u003e, an AI-based code generation tool that Apple was working on for Xcode.\u003c/p\u003e\n\u003cp id=\"p3\"\u003eThat first iteration of Swift Assist caught my eye as promising, but I remember asking at the time whether it could modify multiple files in a project at once and being told it couldn’t. What I saw was rudimentary by 2025’s standards with things like \u003ca href=\"https://www.cursor.com/en\" rel=\"noopener noreferrer\"\u003eCursor\u003c/a\u003e, but I was glad to see that Apple was working on a generative tool for Xcode users.\u003c/p\u003e\n\u003cp id=\"p4\"\u003eIn the months that followed, I all but forgot that briefing and story, until a wave of posts asking, “Whatever happened to Swift Assist?” started appearing on social media and blogs. \u003ca href=\"https://daringfireball.net/linked/2025/03/15/swift-assist-voorhees\" rel=\"noopener noreferrer\"\u003eJohn Gruber\u003c/a\u003e and \u003ca href=\"https://pxlnv.com/linklog/where-is-swift-assist/\" rel=\"noopener noreferrer\"\u003eNick Heer\u003c/a\u003e picked up on the thread and came across my story, citing it as evidence that the MIA feature was real but curiously absent from any of 2024’s Xcode betas.\u003c/p\u003e\n\u003cp id=\"p5\"\u003eThis year, Jason Snell and I had a mini reunion of sorts during another developer tools briefing. This time, it was just the two of us. Among the Xcode features we saw was a much more robust version of Swift Assist that, unlike in 2024, is already part of the Xcode 26 betas. Having been the only one who wrote about the feature last year, I couldn’t let the chance to document what I saw this year slip by.\u003c/p\u003e\n\n\n\u003cp id=\"p8\"\u003eI’m not a developer, so I’m not going to review Swift Assist (a name that is conspicuously absent from \u003ca href=\"https://www.apple.com/newsroom/2025/06/apple-supercharges-its-tools-and-technologies-for-developers/\" rel=\"noopener noreferrer\"\u003eApple’s developer tool press release\u003c/a\u003e, by the way), but the changes are so substantial that the feature I was shown this year hardly resembles what I saw in 2024. Unlike last year’s demo, this version can revise multiple project files and \u003ca href=\"https://www.apple.com/newsroom/2025/06/apple-supercharges-its-tools-and-technologies-for-developers/\" rel=\"noopener noreferrer\"\u003eincludes support for multiple large language models\u003c/a\u003e, including OpenAI’s ChatGPT, which has been tuned to work with Swift and Xcode. Getting started with ChatGPT doesn’t require an OpenAI account, but developers can choose to use their account credentials from OpenAI or another provider, like Anthropic. Swift Assist also supports local model integration. If your chosen AI model takes you down a dead end, code changes can be rolled back incrementally at any time.\u003c/p\u003e\n\n\u003cp id=\"p10\"\u003eIt’s also notable that this is Apple’s first stab – in any app – at a chatbot. The chat interface lives in the left sidebar, where you can request code changes, bug fixes, documentation, and other information relevant to a project. Changes proposed by your selected LLM are color-coded to make them easy to review, too.\u003c/p\u003e\n\u003cp id=\"p11\"\u003eIt’s great to see Apple go down a path that gives developers the flexibility to choose whichever model they’d like, visualize changes, and roll them back as needed. Whether that’s enough to satisfy developers who have increasingly looked to third-party options to incorporate AI into their workflows remains to be seen. The reactions that I’ve seen to Xcode 26’s new features run the gamut. Some developers are \u003ca href=\"https://medium.com/@guillaumesabran/whats-finally-shipping-in-swift-assist-and-how-to-bring-it-to-modern-days-ai-with-claude-code-fbe874634c0e\" rel=\"noopener noreferrer\"\u003ecautiously optimistic\u003c/a\u003e and even \u003ca href=\"https://mastodon.social/@stroughtonsmith/114670331413685869\" rel=\"noopener noreferrer\"\u003eenthusiastic\u003c/a\u003e about Xcode 26, while \u003ca href=\"https://mastodon.social/@kayathomas/114706430614584797\" rel=\"noopener noreferrer\"\u003eothers have run into roadblocks\u003c/a\u003e or decided the update is \u003ca href=\"https://mastodon.social/@steipete/114706509663078631\" rel=\"noopener noreferrer\"\u003etoo little, too late\u003c/a\u003e.\u003c/p\u003e\n\u003cp id=\"p12\"\u003eStill, what I saw this year struck me as a more solid foundation to build on. My hope is that, by getting these features in developers’ hands at the beginning of the beta period, Apple will have a chance to incorporate developer feedback before releasing Xcode 26 publicly this fall.\u003c/p\u003e\n            \u003c/div\u003e\u003cdiv\u003e\n            \u003cdiv\u003e\u003cp\u003e\u003cimg src=\"https://www.macstories.net/app/themes/macstories4/images/logo-shape-gold.svg\" alt=\"Club MacStories\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003ch3\u003eAccess Extra Content and Perks\u003c/h3\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cp\u003eFounded in 2015, \u003ca href=\"https://club.macstories.net/plans?utm_source=ms\u0026amp;utm_medium=web-inline\" rel=\"noopener noreferrer\"\u003eClub MacStories\u003c/a\u003e has delivered exclusive content every week for nearly a decade.\u003c/p\u003e\n\u003cp\u003eWhat started with weekly and monthly email newsletters has blossomed into \u003ca href=\"https://club.macstories.net/plans?utm_source=ms\u0026amp;utm_medium=web-inline\" rel=\"noopener noreferrer\"\u003ea family of memberships\u003c/a\u003e designed every MacStories fan.\u003c/p\u003e\n\u003cp\u003eLearn more \u003ca href=\"https://club.macstories.net/plans?utm_source=ms\u0026amp;utm_medium=web-inline\" rel=\"noopener noreferrer\"\u003ehere\u003c/a\u003e and from our \u003ca href=\"https://club.macstories.net/faq\" rel=\"noopener noreferrer\"\u003eClub FAQs\u003c/a\u003e.\u003c/p\u003e\n\u003c/div\u003e\u003cdiv\u003e\u003cp\u003e\u003cstrong\u003e\u003ca href=\"https://club.macstories.net/plans/club\" rel=\"noopener noreferrer\"\u003eClub MacStories\u003c/a\u003e\u003c/strong\u003e: Weekly and monthly newsletters via email and the web that are brimming with apps, tips, automation workflows, longform writing, early access to the \u003ca href=\"https://www.macstories.net/unwind/\" rel=\"noopener noreferrer\"\u003eMacStories Unwind podcast\u003c/a\u003e, periodic giveaways, and more;\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca href=\"https://club.macstories.net/plans/plus\" rel=\"noopener noreferrer\"\u003eClub MacStories+\u003c/a\u003e\u003c/strong\u003e: Everything that Club MacStories offers, plus an active Discord community, advanced search and custom RSS features for exploring the Club’s entire back catalog, bonus columns, and dozens of app discounts;\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca href=\"https://club.macstories.net/plans/premier\" rel=\"noopener noreferrer\"\u003eClub Premier\u003c/a\u003e\u003c/strong\u003e: All of the above \u003cem\u003eand\u003c/em\u003e AppStories+, an extended version of our flagship podcast that’s delivered early, ad-free, and in high-bitrate audio.\u003c/p\u003e\n\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e        \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": "2025-06-19T15:47:09-04:00",
  "modifiedTime": null
}
