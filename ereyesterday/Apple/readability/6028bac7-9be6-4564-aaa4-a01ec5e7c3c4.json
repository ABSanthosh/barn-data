{
  "id": "6028bac7-9be6-4564-aaa4-a01ec5e7c3c4",
  "title": "Also From the Archive: ‘“Beta” Is Not an Excuse’",
  "link": "https://daringfireball.net/2006/11/beta_excuse",
  "description": "",
  "author": "John Gruber",
  "published": "2025-01-08T03:23:21Z",
  "source": "https://daringfireball.net/feeds/main",
  "categories": null,
  "byline": "Monday, 13 November 2006",
  "length": 7175,
  "excerpt": "Released software that is labeled “beta” is still released software, and is fair game for the same level of criticism as any released software. You can’t “semi-release” your 1.0 just because you want it out there but aren’t yet finished. Being semi-released is like being semi-pregnant.",
  "siteName": "",
  "favicon": "https://daringfireball.net/graphics/apple-touch-icon.png",
  "text": "Rory Prior, discussing Disco in his widely-linked weblog entry, “On the Death of the HIG and the Triumph of Eye Candy Over Usability”: What you cry, how can it be awful, it smokes and shines and shimmers?! Yet those things don’t excuse its most basic of usability failings — like an application from the 1980s designed for a Mac Plus it stubbornly won’t allow you to resize its application window, making browsing the list of files you’re trying to burn excruciating. You can’t even look inside a folder to check what files are present once you’ve dragged them into the application, you have to resort to going back to the Finder. … It’s only a beta and I’m sure many of these issues will be fixed and I really don’t want to heap on these guys too much because it looks like a really promising app. Laurie A. Duncan, in “Dissing Disco” at TUAW: The glossy black-and-gray translucent theme is only interesting to look at for the first 5 seconds of the first launch. After that I found myself staring at it and noticing how unappealing it really was. Thinking an app’s UI is ugly normally wouldn’t dissuade me from using it as long as the app performed well, but it took me a good minute to figure out how and at what point to name the disc I was about to burn, which is not a good sign. … Before I get flamed to high heaven, I am fully aware that Disco is currently in BETA and it’s not a final release candidate. Some of my gripes may be addressed in future builds. Tom Burns, in “Disco Sucks” on his Sans Telos weblog: I know that this is a beta release, and that the folks behind Disco continue to promise that there’s more to come, but if what’s to come is anything like what I’ve seen so far it’s not going to be pretty. “MJR”, in a comment posted on Paul Kafasis’s “The Delicious Generation” essay on Rogue Amoeba’s Under the Microscope weblog: You make some good points, but never mention that Disco is in Beta [sic].  As in, not finished.  I’m glad everyone has ripped apart Disco, because the criticism will only improve the final version of the app. Notice a theme here? Here’s one more quote, from William Shakespeare’s Romeo and Juliet: What’s in a name? that which we call a rose By any other name would smell as sweet; What Disco smells like to me is released. And released software — particularly released software that is available for sale — is open for criticism. In what way does Disco, or any other app that is labeled “beta” but is available for sale to the public, deserve to be cut any critical slack? What if it were a movie? Released to theaters, with money charged for admission, but the posters and advertisements have a starburst-shaped badge in the corner reading: “Beta”. What’s the argument? That something labeled with the magic word “Beta” can’t be criticized, or that if you do criticize it you’re obligated to dilute everything with a big “but of course, it’s just a beta” disclaimer? The sentiment here is that it’s somehow unfair to developers to treat software labeled “beta” with the same critical eye as non-beta software. That’s true, in the case of actual beta software, where by “actual beta” I mean “not yet released, but close”. Released vs. not-released is the distinction that warrants critical restraint. Film critics don’t write reviews of rough cuts. Book critics don’t review non-final manuscripts of novels. Released software that is labeled “beta” is still released software, and is fair game for the same level of criticism as any released software. You can’t “semi-release” your 1.0 just because you want it out there but aren’t yet finished. Being semi-released is like being semi-pregnant. It’s worth pointing out what I’m not talking about here: Public betas of commercial software for which there exists a stable, official version, and for which the public beta, when finished, will be a free upgrade. Public betas of freeware and open source; e.g. Camino, which was in beta (or whatever state it is that software is in when its version number is less than 1.0) for years before it hit 1.0 in February. Public betas of software that is not yet for sale; e.g. Adobe Lightroom. That’s not to say such software is off limits for criticism; only that such software, when criticized, deserves at least some degree of slack. In the traditional meaning of the word, “beta” comes before release. Different developers have different definitions for precisely what it is that constitutes the beta cycle of software development, but a rough consensus might be “feature complete but with essential bug fixes and polish not yet applied”. The home stretch is the hardest part of software development. You’ve already been working for months, often even a year or longer. But just because you can see the finish line doesn’t mean you’re actually near it. Sometimes half the engineering effort is spent on what seems like the last 10 percent of the project. You want to ship. You’ve already blown the original deadline. The software works, and you know it’s cool, and you really think users are going to love it. But if it isn’t done, it isn’t done. What exactly is meant by software that is released, but labeled “beta”? That there are missing features? All software has missing features. I’ve never met a single developer working on a significant software project who has completely zeroed out the features-to-do list. Knowing how to draw that line between features that make it for this release and features postponed for later is a big part of the art of shipping. No, what “beta” means in this context is “buggy”. It’s a euphemism that siphons the cachet of “beta” in its traditional sense — that certain nerdy coolness that comes with being part of a private development process. If you really think about its use in the context of released, commercial software, it’s absurd. An app is either good enough to release and sell, or else development isn’t yet done. A label doesn’t affect this equation. Using “beta” as a badge of honor for released commercial software makes no more sense than using “buggy” in the same context, and it makes no more sense as an excuse, either. Let’s return to the “but it’s a beta” disclaimers from the Disco critics I quoted at the outset, substituting “buggy” for “beta”: “It’s only [a buggy version] and I’m sure many of these issues will be fixed and I really don’t want to heap on these guys too much because it looks like a really promising app.” “Before I get flamed to high heaven, I am fully aware that Disco is currently [BUGGY] and it’s not a final release candidate.” “I know that this is a [buggy] release, and that the folks behind Disco continue to promise that there’s more to come…” And my favorite: “You make some good points, but never mention that Disco is [buggy].” My advice to fellow critics is that there’s no need for disclaimers such as these. My advice to developers is to realize that “beta” is a warning, not an excuse. And if you’re going to release software that you feel requires a warning, don’t reach for a euphemism when a more accurate word is right at hand: (My thanks to Bryan Bell for the art.)",
  "image": "https://daringfireball.net/graphics/df-square-1024",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"Box\"\u003e\n\n\n\n\u003cp\u003eRory Prior, discussing \u003ca href=\"http://discoapp.com/\"\u003eDisco\u003c/a\u003e in his widely-linked weblog entry, “\u003ca href=\"http://www.thinkmac.co.uk/blog/2006/11/on-death-of-hig-and-triumph-of-eye.html\"\u003eOn the Death of the HIG and the Triumph of Eye Candy Over Usability\u003c/a\u003e”:\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eWhat you cry, how can it be awful, it smokes and shines and\nshimmers?! Yet those things don’t excuse its most basic of\nusability failings — like an application from the 1980s designed\nfor a Mac Plus it stubbornly won’t allow you to resize its\napplication window, making browsing the list of files you’re\ntrying to burn excruciating. You can’t even look inside a folder\nto check what files are present once you’ve dragged them into the\napplication, you have to resort to going back to the Finder. …\u003c/p\u003e\n\n\u003cp\u003eIt’s only a beta and I’m sure many of these issues will be\nfixed and I really don’t want to heap on these guys too much\nbecause it looks like a really promising app.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eLaurie A. Duncan, in “\u003ca href=\"http://www.tuaw.com/2006/11/03/dissing-disco/\"\u003eDissing Disco\u003c/a\u003e” at TUAW:\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eThe glossy black-and-gray translucent theme is only interesting\nto look at for the first 5 seconds of the first launch. After\nthat I found myself staring at it and noticing how unappealing\nit really was. Thinking an app’s UI is ugly normally wouldn’t\ndissuade me from using it as long as the app performed well, but\nit took me a good minute to figure out how and at what point to\nname the disc I was about to burn, which is not a good sign. …\u003c/p\u003e\n\n\u003cp\u003eBefore I get flamed to high heaven, I am fully aware that Disco is\ncurrently in BETA and it’s not a final release candidate. Some of\nmy gripes may be addressed in future builds. \u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eTom Burns, in “\u003ca href=\"http://sanstelos.com/2006/11/04/disco-sucks/\"\u003eDisco Sucks\u003c/a\u003e” on his Sans Telos weblog:\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eI know that this is a beta release, and that the folks behind\nDisco continue to promise that there’s more to come, but if what’s\nto come is anything like what I’ve seen so far it’s not going to\nbe pretty.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e“MJR”, in a comment posted on Paul Kafasis’s “\u003ca href=\"http://www.rogueamoeba.com/utm/posts/Article/DeliciousGeneration-2006-11-06-10-00\"\u003eThe Delicious Generation\u003c/a\u003e” essay on Rogue Amoeba’s Under the Microscope weblog:\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eYou make some good points, but never mention that Disco is in\nBeta [\u003cem\u003esic\u003c/em\u003e].  As in, not finished.  I’m glad everyone has\nripped apart Disco, because the criticism will only improve\nthe final version of the app. \u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eNotice a theme here?\u003c/p\u003e\n\n\u003cp\u003eHere’s one more quote, from William Shakespeare’s \u003cem\u003e\u003ca href=\"http://www-tech.mit.edu/Shakespeare/romeo_juliet/romeo_juliet.2.2.html\"\u003eRomeo and Juliet\u003c/a\u003e\u003c/em\u003e:\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eWhat’s in a name? that which we call a rose \u003cbr/\u003e\nBy any other name would smell as sweet;\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eWhat Disco smells like to me is \u003cem\u003ereleased\u003c/em\u003e. And released software — particularly released software that is available for sale — is open for criticism.\u003c/p\u003e\n\n\u003cp\u003eIn what way does Disco, or any other app that is labeled “beta” but is available for sale to the public, deserve to be cut any critical slack?\u003c/p\u003e\n\n\u003cp\u003eWhat if it were a movie? Released to theaters, with money charged for admission, but the posters and advertisements have a starburst-shaped badge in the corner reading: “Beta”. What’s the argument? That something labeled with the magic word “Beta” can’t be criticized, or that if you do criticize it you’re obligated to dilute everything with a big “\u003cem\u003ebut of course, it’s just a beta\u003c/em\u003e” disclaimer?\u003c/p\u003e\n\n\u003cp\u003eThe sentiment here is that it’s somehow unfair to developers to treat software labeled “beta” with the same critical eye as non-beta software. That’s true, in the case of \u003cem\u003eactual\u003c/em\u003e beta software, where by “actual beta” I mean “not yet released, but close”.\u003c/p\u003e\n\n\u003cp\u003eReleased vs. not-released is the distinction that warrants critical restraint. Film critics don’t write reviews of rough cuts. Book critics don’t review non-final manuscripts of novels.\u003c/p\u003e\n\n\u003cp\u003eReleased software that is labeled “beta” is still released software, and is fair game for the same level of criticism as any released software. You can’t “semi-release” your 1.0 just because you want it out there but aren’t yet finished. Being semi-released is like being semi-pregnant.\u003c/p\u003e\n\n\u003cp\u003eIt’s worth pointing out what I’m \u003cem\u003enot\u003c/em\u003e talking about here:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ePublic betas of commercial software for which there exists a\nstable, official version, and for which the public beta, when\nfinished, will be a free upgrade.\u003c/li\u003e\n\u003cli\u003ePublic betas of freeware and open source; e.g. \u003ca href=\"http://www.caminobrowser.org/\"\u003eCamino\u003c/a\u003e, which\nwas in beta (or whatever state it is that software is in when\nits version number is less than 1.0) for years before it hit 1.0\nin February.\u003c/li\u003e\n\u003cli\u003ePublic betas of software that is not yet for sale; e.g. \u003ca href=\"http://labs.adobe.com/technologies/lightroom/\"\u003eAdobe\nLightroom\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThat’s not to say such software is off limits for criticism; only that such software, when criticized, deserves at least some degree of slack.\u003c/p\u003e\n\n\u003cp\u003eIn the traditional meaning of the word, “beta” comes \u003cem\u003ebefore\u003c/em\u003e release. Different developers have different definitions for precisely what it is that constitutes the beta cycle of software development, but a rough consensus might be “feature complete but with essential bug fixes and polish not yet applied”.\u003c/p\u003e\n\n\u003cp\u003eThe home stretch is the hardest part of software development. You’ve already been working for months, often even a year or longer. But just because you can \u003cem\u003esee\u003c/em\u003e the finish line doesn’t mean you’re actually near it. Sometimes half the engineering effort is spent on what seems like the last 10 percent of the project. You want to ship. You’ve already blown the original deadline. The software works, and you know it’s cool, and you really think users are going to love it. But if it isn’t done, it isn’t done.\u003c/p\u003e\n\n\u003cp\u003eWhat exactly is meant by software that is released, but labeled “beta”? That there are missing features? \u003cem\u003eAll\u003c/em\u003e software has missing features. I’ve never met a single developer working on a significant software project who has completely zeroed out the features-to-do list. Knowing how to draw that line between features that make it for this release and features postponed for later is a big part of the art of shipping.\u003c/p\u003e\n\n\u003cp\u003eNo, what “beta” means in this context is “buggy”. It’s a euphemism that siphons the cachet of “beta” in its traditional sense — that certain nerdy coolness that comes with being part of a \u003cem\u003eprivate\u003c/em\u003e development process.\u003c/p\u003e\n\n\u003cp\u003eIf you really think about its use in the context of released, commercial software, it’s absurd. An app is either good enough to release and sell, or else development isn’t yet done. A label doesn’t affect this equation.\u003c/p\u003e\n\n\u003cp\u003eUsing “beta” as a badge of honor for released commercial software makes no more sense than using “buggy” in the same context, and it makes no more sense as an excuse, either. Let’s return to the “but it’s a beta” disclaimers from the Disco critics I quoted at the outset, substituting “buggy” for “beta”:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e“It’s only [a buggy version] and I’m sure many of these issues\nwill be fixed and I really don’t want to heap on these guys too\nmuch because it looks like a really promising app.”\u003c/li\u003e\n\u003cli\u003e“Before I get flamed to high heaven, I am fully aware that\nDisco is currently [BUGGY] and it’s not a final release\ncandidate.”\u003c/li\u003e\n\u003cli\u003e“I know that this is a [buggy] release, and that the folks behind\nDisco continue to promise that there’s more to come…”\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAnd my favorite:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e“You make some good points, but never mention that Disco is\n[buggy].”\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eMy advice to fellow critics is that there’s no need for disclaimers such as these.\u003c/p\u003e\n\n\u003cp\u003eMy advice to developers is to realize that “beta” is a warning, not an excuse. And if you’re going to release software that you feel requires a warning, don’t reach for a euphemism when a more accurate word is right at hand:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"http://daringfireball.net/misc/2006/11/buggy.png\" alt=\"Starburst-shaped badge that reads ‘Buggy’.\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e(My thanks to \u003ca href=\"http://bryanbell.com/\"\u003eBryan Bell\u003c/a\u003e for the art.)\u003c/p\u003e\n\n\n\n \n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "8 min read",
  "publishedTime": null,
  "modifiedTime": null
}
