{
  "id": "6e71874e-5c7f-49bd-91fb-405f42d95784",
  "title": "Previewing Content Changes In Your Work With document.designMode",
  "link": "https://smashingmagazine.com/2025/03/previewing-content-changes-work-documentdesignmode/",
  "description": "You probably already know that you can use developer tools in your browser to make on-the-spot changes to a webpage — simply click the node in the Inspector and make your edits. But have you tried `document.designMode`? Victor Ayomipo explains how it can be used to preview content changes and demonstrates several use cases where it comes in handy for everything from basic content editing to improving team collaboration.",
  "author": "Victor Ayomipo",
  "published": "Fri, 21 Mar 2025 08:00:00 GMT",
  "source": "https://www.smashingmagazine.com/feed",
  "categories": null,
  "byline": "About The Author",
  "length": 8175,
  "excerpt": "You probably already know that you can use developer tools in your browser to make on-the-spot changes to a webpage — simply click the node in the Inspector and make your edits. But have you tried `document.designMode`? Victor Ayomipo explains how it can be used to preview content changes and demonstrates several use cases where it comes in handy for everything from basic content editing to improving team collaboration.",
  "siteName": "Smashing Magazine",
  "favicon": "https://smashingmagazine.com/images/favicon/apple-touch-icon.png",
  "text": "6 min readDevTools, Browsers, Testing, Tools, DebuggingYou probably already know that you can use developer tools in your browser to make on-the-spot changes to a webpage — simply click the node in the Inspector and make your edits. But have you tried document.designMode? Victor Ayomipo explains how it can be used to preview content changes and demonstrates several use cases where it comes in handy for everything from basic content editing to improving team collaboration.So, you just deployed a change to your website. Congrats! Everything went according to plan, but now that you look at your work in production, you start questioning your change. Perhaps that change was as simple as a new heading and doesn’t seem to fit the space. Maybe you added an image, but it just doesn’t feel right in that specific context.What do you do? Do you start deploying more changes? It’s not like you need to crack open Illustrator or Figma to mock up a small change like that, but previewing your changes before deploying them would still be helpful.Enter document.designMode. It’s not new. In fact, I just recently came across it for the first time and had one of those “Wait, this exists?” moments because it’s a tool we’ve had forever, even in Internet Explorer 6. But for some reason, I’m only now hearing about it, and it turns out that many of my colleagues are also hearing about it for the first time.What exactly is document.designMode? Perhaps a little video demonstration can help demonstrate how it allows you to make direct edits to a page.Video demonstration of how document.designMode works.At its simplest, document.designMode makes webpages editable, similar to a text editor. I’d say it’s like having an edit mode for the web — one can click anywhere on a webpage to modify existing text, move stuff around, and even delete elements. It’s like having Apple’s “Distraction Control” feature at your beck and call.I think this is a useful tool for developers, designers, clients, and regular users alike.You might be wondering if this is just like contentEditable because, at a glance, they both look similar. But no, the two serve different purposes. contentEditable is more focused on making a specific element editable, while document.designMode makes the whole page editable.Enabling document.designMode can be done in the browser’s developer tools:Right-click anywhere on a webpage and click Inspect.Click the Console tab.Type document.designMode = \"on\" and press Enter.To turn it off, refresh the page. That’s it.Another method is to create a bookmark that activates the mode when clicked:Create a new bookmark in your browser.You can name it whatever, e.g., “EDIT_MODE”.Input this code in the URL field:javascript:(function(){document.designMode = document.designMode === 'on' ? 'off' : 'on';})(); And now you have a switch that toggles document.designMode on and off.Use CasesThere are many interesting, creative, and useful ways to use this tool.Basic Content EditingI dare say this is the core purpose of document.designMode, which is essentially editing any text element of a webpage for whatever reason. It could be the headings, paragraphs, or even bullet points. Whatever the case, your browser effectively becomes a “What You See Is What You Get” (WYSIWYG) editor, where you can make and preview changes on the spot.Basic content editing using document.designMode.Landing Page A/B TestingLet’s say we have a product website with an existing copy, but then you check out your competitors, and their copy looks more appealing. Naturally, you’d want to test it out. Instead of editing on the back end or taking notes for later, you can use document.designMode to immediately see how that copy variation would fit into the landing page layout and then easily compare and contrast the two versions.Landing page A/B testing with document.designMode.This could also be useful for copywriters or solo developers.SEO Title And Meta DescriptionEveryone wants their website to rank at the top of search results because that means more traffic. However, as broad as SEO is as a practice, the \u003ctitle\u003e tag and \u003cmeta\u003e description is a website’s first impression in search results, both for visitors and search engines, as they can make or break the click-through rate.The question that arises is, how do you know if certain text gets cut off in search results? I think document.designMode can fix that before pushing it live.SEO title and meta description with document.designMode.With this tool, I think it’d be a lot easier to see how different title lengths look when truncated, whether the keywords are instantly visible, and how compelling it’d be compared to other competitors on the same search result.Developer WorkflowsTo be completely honest, developers probably won’t want to use document.designMode for actual development work. However, it can still be handy for breaking stuff on a website, moving elements around, repositioning images, deleting UI elements, and undoing what was deleted, all in real time.This could help if you’re skeptical about the position of an element or feel a button might do better at the top than at the bottom; document.designMode sure could help. It sure beats rearranging elements in the codebase just to determine if an element positioned differently would look good. But again, most of the time, we’re developing in a local environment where these things can be done just as effectively, so your mileage may vary as far as how useful you find document.designMode in your development work.Client And Team CollaborationIt is a no-brainer that some clients almost always have last-minute change requests — stuff like “Can we remove this button?” or “Let’s edit the pricing features in the free tier.”To the client, these are just little tweaks, but to you, it could be a hassle to start up your development environment to make those changes. I believe document.designMode can assist in such cases by making those changes in seconds without touching production and sharing screenshots with the client.Client and team collaboration with document.designMod.It could also become useful in team meetings when discussing UI changes. Seeing changes in real-time through screen sharing can help facilitate discussion and lead to quicker conclusions.Live DOM TutorialsFor beginners learning web development, I feel like document.designMode can help provide a first look at how it feels to manipulate a webpage and immediately see the results — sort of like a pre-web development stage, even before touching a code editor.As learners experiment with moving things around, an instructor can explain how each change works and affects the flow of the page.Social Media Content PreviewWe can use the same idea to preview social media posts before publishing them! For instance, document.designMode can gauge the effectiveness of different call-to-action phrases or visualize how ad copy would look when users stumble upon it when scrolling through the platform. This would be effective on any social media platform.Social media content preview with document.designMode.MemesI didn’t think it’d be fair not to add this. It might seem out of place, but let’s be frank: creating memes is probably one of the first things that comes to mind when anyone discovers document.designMode.You can create parody versions of social posts, tweak article headlines, change product prices, and manipulate YouTube views or Reddit comments, just to name a few of the ways you could meme things. Just remember: this shouldn’t be used to spread false information or cause actual harm. Please keep it respectful and ethical!Conclusiondocument.designMode = \"on\" is one of those delightful browser tricks that can be immediately useful when you discover it for the first time. It’s a raw and primitive tool, but you can’t deny its utility and purpose.So, give it a try, show it to your colleagues, or even edit this article. You never know when it might be exactly what you need.Further Reading“New Front-End Features For Designers In 2025,” Cosima Mielke“Useful DevTools Tips and Tricks,” Patrick Brosset“Useful CSS Tips And Techniques,” Cosima Mielke (gg, yk)",
  "image": "https://files.smashing.media/articles/previewing-content-changes-work-documentdesignmode/previewing-content-changes-work-documentdesignmode.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"article__content\"\u003e\u003cul\u003e\u003cli\u003e6 min read\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://smashingmagazine.com/category/devtools\"\u003eDevTools\u003c/a\u003e,\n\u003ca href=\"https://smashingmagazine.com/category/browsers\"\u003eBrowsers\u003c/a\u003e,\n\u003ca href=\"https://smashingmagazine.com/category/testing\"\u003eTesting\u003c/a\u003e,\n\u003ca href=\"https://smashingmagazine.com/category/tools\"\u003eTools\u003c/a\u003e,\n\u003ca href=\"https://smashingmagazine.com/category/debugging\"\u003eDebugging\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003csection aria-label=\"Quick summary\"\u003eYou probably already know that you can use developer tools in your browser to make on-the-spot changes to a webpage — simply click the node in the Inspector and make your edits. But have you tried \u003ccode\u003edocument.designMode\u003c/code\u003e? Victor Ayomipo explains how it can be used to preview content changes and demonstrates several use cases where it comes in handy for everything from basic content editing to improving team collaboration.\u003c/section\u003e\u003c/p\u003e\u003cp\u003eSo, you just deployed a change to your website. Congrats! Everything went according to plan, but now that you look at your work in production, you start questioning your change. Perhaps that change was as simple as a new heading and doesn’t seem to fit the space. Maybe you added an image, but it just doesn’t feel right in that specific context.\u003c/p\u003e\u003cp\u003eWhat do you do? Do you start deploying more changes? It’s not like you need to crack open Illustrator or Figma to mock up a small change like that, but previewing your changes before deploying them would still be helpful.\u003c/p\u003e\u003cp\u003eEnter \u003ccode\u003edocument.designMode\u003c/code\u003e. It’s not new. In fact, I just recently came across it for the first time and had one of those \u003cem\u003e“Wait, this exists?”\u003c/em\u003e moments because it’s a tool \u003ca href=\"https://caniuse.com/mdn-api_document_designmode\"\u003ewe’ve had forever\u003c/a\u003e, even in Internet Explorer 6. But for some reason, I’m only now hearing about it, and it turns out that many of my colleagues are also hearing about it for the first time.\u003c/p\u003e\u003cp\u003eWhat exactly is \u003ccode\u003edocument.designMode\u003c/code\u003e? Perhaps a little video demonstration can help demonstrate how it allows you to make direct edits to a page.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eVideo demonstration of how \u003ccode\u003edocument.designMode\u003c/code\u003e works.\u003c/figcaption\u003e\u003c/figure\u003e\u003cp\u003eAt its simplest, \u003ccode\u003edocument.designMode\u003c/code\u003e makes webpages editable, similar to a text editor. I’d say it’s like having \u003cstrong\u003ean edit mode for the web\u003c/strong\u003e — one can click anywhere on a webpage to modify existing text, move stuff around, and even delete elements. It’s like having \u003ca href=\"https://support.apple.com/en-la/120682\"\u003eApple’s “Distraction Control” feature\u003c/a\u003e at your beck and call.\u003c/p\u003e\u003cp\u003eI think this is a useful tool for developers, designers, clients, and regular users alike.\u003c/p\u003e\u003cp\u003eYou might be wondering if this is just like \u003ca href=\"https://css-tricks.com/the-browser-can-remember-edited-content/\"\u003e\u003ccode\u003econtentEditable\u003c/code\u003e\u003c/a\u003e because, at a glance, they both look similar. But no, the two serve different purposes. \u003ccode\u003econtentEditable\u003c/code\u003e is more focused on making a specific element editable, while \u003ccode\u003edocument.designMode\u003c/code\u003e makes \u003cem\u003ethe whole\u003c/em\u003e page editable.\u003c/p\u003e\u003cp\u003eEnabling \u003ccode\u003edocument.designMode\u003c/code\u003e can be done in the browser’s developer tools:\u003c/p\u003e\u003col\u003e\u003cli\u003eRight-click anywhere on a webpage and click \u003ckbd\u003eInspect\u003c/kbd\u003e.\u003c/li\u003e\u003cli\u003eClick the \u003ckbd\u003eConsole\u003c/kbd\u003e tab.\u003c/li\u003e\u003cli\u003eType \u003ccode\u003edocument.designMode = \u0026#34;on\u0026#34;\u003c/code\u003e and press \u003ckbd\u003eEnter\u003c/kbd\u003e.\u003c/li\u003e\u003c/ol\u003e\u003cp\u003eTo turn it off, refresh the page. That’s it.\u003c/p\u003e\u003cp\u003eAnother method is to create a bookmark that activates the mode when clicked:\u003c/p\u003e\u003col\u003e\u003cli\u003eCreate a new bookmark in your browser.\u003c/li\u003e\u003cli\u003eYou can name it whatever, e.g., “EDIT_MODE”.\u003c/li\u003e\u003cli\u003eInput this code in the URL field:\u003c/li\u003e\u003c/ol\u003e\u003cdiv\u003e\u003cpre\u003e\u003ccode\u003ejavascript:(function(){document.designMode = document.designMode === \u0026#39;on\u0026#39; ? \u0026#39;off\u0026#39; : \u0026#39;on\u0026#39;;})();\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd now you have a switch that toggles \u003ccode\u003edocument.designMode\u003c/code\u003e on and off.\u003c/p\u003e\u003ch2 id=\"use-cases\"\u003eUse Cases\u003c/h2\u003e\u003cp\u003eThere are many interesting, creative, and useful ways to use this tool.\u003c/p\u003e\u003ch3 id=\"basic-content-editing\"\u003eBasic Content Editing\u003c/h3\u003e\u003cp\u003eI dare say this is the core purpose of \u003ccode\u003edocument.designMode\u003c/code\u003e, which is essentially editing any text element of a webpage for whatever reason. It could be the headings, paragraphs, or even bullet points. Whatever the case, your browser effectively becomes a \u003cstrong\u003e“What You See Is What You Get” (WYSIWYG) editor\u003c/strong\u003e, where you can make and preview changes on the spot.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eBasic content editing using \u003ccode\u003edocument.designMode\u003c/code\u003e.\u003c/figcaption\u003e\u003c/figure\u003e\u003ch3 id=\"landing-page-a-b-testing\"\u003eLanding Page A/B Testing\u003c/h3\u003e\u003cp\u003eLet’s say we have a product website with an existing copy, but then you check out your competitors, and their copy looks more appealing. Naturally, you’d want to test it out. Instead of editing on the back end or taking notes for later, you can use \u003ccode\u003edocument.designMode\u003c/code\u003e to immediately see how that copy variation would fit into the landing page layout and then easily compare and contrast the two versions.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eLanding page A/B testing with \u003ccode\u003edocument.designMode\u003c/code\u003e.\u003c/figcaption\u003e\u003c/figure\u003e\u003cp\u003eThis could also be useful for copywriters or \u003ca href=\"https://www.smashingmagazine.com/2025/01/solo-development-learning-to-let-go-of-perfection/\"\u003esolo developers\u003c/a\u003e.\u003c/p\u003e\u003ch3 id=\"seo-title-and-meta-description\"\u003eSEO Title And Meta Description\u003c/h3\u003e\u003cp\u003eEveryone wants their website to rank at the top of search results because that means more traffic. However, as broad as SEO is as a practice, the \u003ccode\u003e\u0026lt;title\u0026gt;\u003c/code\u003e tag and \u003ccode\u003e\u0026lt;meta\u0026gt;\u003c/code\u003e description is a website’s first impression in search results, both for visitors and search engines, as they can make or break the click-through rate.\u003c/p\u003e\u003cp\u003eThe question that arises is, how do you know if certain text gets cut off in search results? I think \u003ccode\u003edocument.designMode\u003c/code\u003e can fix that before pushing it live.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eSEO title and meta description with \u003ccode\u003edocument.designMode\u003c/code\u003e.\u003c/figcaption\u003e\u003c/figure\u003e\u003cp\u003eWith this tool, I think it’d be a lot easier to see how different title lengths look when truncated, whether the keywords are instantly visible, and how compelling it’d be compared to other competitors on the same search result.\u003c/p\u003e\u003ch3 id=\"developer-workflows\"\u003eDeveloper Workflows\u003c/h3\u003e\u003cp\u003eTo be completely honest, developers probably won’t want to use \u003ccode\u003edocument.designMode\u003c/code\u003e for actual development work. However, it can still be handy for breaking stuff on a website, moving elements around, repositioning images, deleting UI elements, and undoing what was deleted, all in real time.\u003c/p\u003e\u003cp\u003eThis could help if you’re skeptical about the position of an element or feel a button might do better at the top than at the bottom; \u003ccode\u003edocument.designMode\u003c/code\u003e sure could help. It sure beats rearranging elements in the codebase just to determine if an element positioned differently would look good. But again, most of the time, we’re developing in a local environment where these things can be done just as effectively, so your mileage may vary as far as how useful you find \u003ccode\u003edocument.designMode\u003c/code\u003e in your development work.\u003c/p\u003e\u003ch3 id=\"client-and-team-collaboration\"\u003eClient And Team Collaboration\u003c/h3\u003e\u003cp\u003eIt is a no-brainer that some clients almost always have last-minute change requests — stuff like \u003cem\u003e“Can we remove this button?”\u003c/em\u003e or \u003cem\u003e“Let’s edit the pricing features in the free tier.”\u003c/em\u003e\u003c/p\u003e\u003cp\u003eTo the client, these are just little tweaks, but to you, it could be a hassle to start up your development environment to make those changes. I believe \u003ccode\u003edocument.designMode\u003c/code\u003e can assist in such cases by making those changes in seconds without touching production and sharing screenshots with the client.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eClient and team collaboration with \u003ccode\u003edocument.designMod\u003c/code\u003e.\u003c/figcaption\u003e\u003c/figure\u003e\u003cp\u003eIt could also become useful in \u003cstrong\u003eteam meetings when discussing UI changes\u003c/strong\u003e. Seeing changes in real-time through screen sharing can help facilitate discussion and lead to quicker conclusions.\u003c/p\u003e\u003ch3 id=\"live-dom-tutorials\"\u003eLive DOM Tutorials\u003c/h3\u003e\u003cp\u003eFor beginners learning web development, I feel like \u003ccode\u003edocument.designMode\u003c/code\u003e can help provide a first look at how it feels to manipulate a webpage and immediately see the results — sort of like \u003cstrong\u003ea pre-web development stage\u003c/strong\u003e, even before touching a code editor.\u003c/p\u003e\u003cp\u003eAs learners experiment with moving things around, an instructor can explain how each change works and affects the flow of the page.\u003c/p\u003e\u003ch3 id=\"social-media-content-preview\"\u003eSocial Media Content Preview\u003c/h3\u003e\u003cp\u003eWe can use the same idea to preview social media posts before publishing them! For instance, \u003ccode\u003edocument.designMode\u003c/code\u003e can gauge the effectiveness of different call-to-action phrases or visualize how ad copy would look when users stumble upon it when scrolling through the platform. This would be effective on any social media platform.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eSocial media content preview with \u003ccode\u003edocument.designMode\u003c/code\u003e.\u003c/figcaption\u003e\u003c/figure\u003e\u003ch3 id=\"memes\"\u003eMemes\u003c/h3\u003e\u003cp\u003eI didn’t think it’d be fair not to add this. It might seem out of place, but let’s be frank: creating memes is probably one of the first things that comes to mind when anyone discovers \u003ccode\u003edocument.designMode\u003c/code\u003e.\u003c/p\u003e\u003cp\u003eYou can create parody versions of social posts, tweak article headlines, change product prices, and manipulate YouTube views or Reddit comments, just to name a few of the ways you could meme things. Just remember: this shouldn’t be used to spread false information or cause actual harm. Please keep it respectful and ethical!\u003c/p\u003e\u003ch2 id=\"conclusion\"\u003eConclusion\u003c/h2\u003e\u003cp\u003e\u003ccode\u003edocument.designMode = \u0026#34;on\u0026#34;\u003c/code\u003e is one of those delightful browser tricks that can be immediately useful when you discover it for the first time. It’s a raw and primitive tool, but you can’t deny its utility and purpose.\u003c/p\u003e\u003cp\u003eSo, give it a try, show it to your colleagues, or even edit this article. You never know when it might be exactly what you need.\u003c/p\u003e\u003ch3 id=\"further-reading\"\u003eFurther Reading\u003c/h3\u003e\u003cul\u003e\u003cli\u003e“\u003ca href=\"https://www.smashingmagazine.com/2024/12/new-front-end-features-for-designers-in-2025/\"\u003eNew Front-End Features For Designers In 2025\u003c/a\u003e,” Cosima Mielke\u003c/li\u003e\u003cli\u003e“\u003ca href=\"https://www.smashingmagazine.com/2023/06/popular-devtools-tips/\"\u003eUseful DevTools Tips and Tricks\u003c/a\u003e,” Patrick Brosset\u003c/li\u003e\u003cli\u003e“\u003ca href=\"https://www.smashingmagazine.com/2024/06/css-tips-and-techniques/\"\u003eUseful CSS Tips And Techniques\u003c/a\u003e,” Cosima Mielke\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003cimg src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\"/\u003e\n\u003cspan\u003e(gg, yk)\u003c/span\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "9 min read",
  "publishedTime": "2025-03-21T08:00:00Z",
  "modifiedTime": "2025-03-21T08:00:00Z"
}
