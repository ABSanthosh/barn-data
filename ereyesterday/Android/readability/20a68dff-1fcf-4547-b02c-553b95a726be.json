{
  "id": "20a68dff-1fcf-4547-b02c-553b95a726be",
  "title": "I set up an SSH honeypot, and the internet is a scary place",
  "link": "https://www.xda-developers.com/set-up-ssh-honeypot-internet-scary/",
  "description": "Don't try this at home.",
  "author": "Adam Conway",
  "published": "Mon, 05 May 2025 00:00:19 GMT",
  "source": "https://www.xda-developers.com/feed/",
  "categories": [
    "Networking",
    "World Password Day"
  ],
  "byline": "Adam Conway",
  "length": 48811,
  "excerpt": "Don\u0026#039;t try this at home.",
  "siteName": "XDA",
  "favicon": "https://static0.xdaimages.com/assets/images/favicon-240x240.43161a66.png",
  "text": "Sign in to your XDA account I've been playing around with networking in recent months, including setting up my own OPNsense box and deploying Proxmox on a few machines. I've been loving it, and from a security enthusiast's point of view, some of the data that I could see in OPNsense was very interesting. Through tools like CrowdSec, I could see automated port scanners getting blocked, and it made me take a closer look at home networking and security in general. That's why I set up an SSH honeypot, to try and catch a glimpse of what these people do when they gain access to a system, and the results were pretty scary. Unless you know what you're doing, I don't suggest setting up your own honeypot, and definitely not on your home network. I deployed a barebones Ubuntu virtual machine running on its own host, without any other data, and set up a tool called Cowrie. Cowrie is an SSH honeypot that will simulate a real SSH connection, complete with responses to commands that look legitimate. It can accept file transfers, too, so that scripts and other malicious files can be intercepted and analyzed by a security researcher. We'll be taking a look at some of that too. I used this GitHub repository to configure Cowrie with an ElasticSearch database (though I needed to modify the setup script), and altered the Kibana dashboard to display the information that I specifically wanted to see. The data shown here is especially important not just because it captures the real-time attempts from those looking to automate intrusions into self-hosted services that are exposed to the internet, but it also shows what can happen when you don't use a secure password. Nearly all of these attempts were using passwords that find themselves on lists of the most common passwords, but someone specifically targeting you may also try to tailor their attempts specifically to you. Cowrie is a honeypot that you control every aspect of It looks like a normal SSH connection Cowrie is an SSH and Telnet honeypot, designed to log interactions. It's written in Python and emulates a Unix system, though it can also act as a proxy to a real machine if you'd prefer. It's completely customizable, so you can change the login banner, the accepted logins, the filesystem, and so much more. Plus, not only are interactions logged, but file transfers are also saved locally to the machine so that they can be analyzed later. Cowrie can be run in a containerized environment (such as with Podman or Docker), or it can be run as a regular application using Python. The point of it is that the person connecting to the honeypot doesn't know that it's a honeypot. It responds to commands with plausible responses, including commands that are designed to print system information. As we'll get to, there were a lot of those, and some of the actions undertaken by those who connected to my honeypot were very interesting. I deployed my Cowrie instance on the 23rd of April, 2025, and all data discussed in this article has been collected since then. There were 29,282 unique interactions, with the most active day being the 1st of May, 2025, logging a total of 7,438 unique interactions. An \"interaction\" is defined as any individual action, such as an attempted login, an executed command, or the client disconnecting. There were 447 unique IP addresses identified in the dataset after filtering out my own IP address when I was testing it. Usernames and passwords most commonly used The usual suspects First and foremost, we'll have a look at the usernames and passwords that were used the most. Unsurprisingly, \"root\" was the most-attempted user, representing just over a sixth of all attempts. This makes sense, as the root user is the most privileged user on a Linux-based system. With root access, the attacker controls your entire system and can access every single file present. It's essentially the holy grail, which is why it's recommended to use SSH keys for remote access in general. On top of that, if you don't need the root user enabled, it's better to disable the root user entirely and instead rely on sudo commands to gain those elevated privileges when you need them from your own account. Looking at the other commonly used usernames, most of them are unsurprising. \"admin\" and \"user\" make a lot of sense, as does \"support\". Interestingly, \"ubnt\" is the default username on most Ubiquiti products, and that username is one of the more commonly-tried usernames in my dataset. \"usario\" is Spanish for \"user\", and \"oracle\", \"ubuntu\", and \"pi\" are all fairly self-explanatory. Most of the other usernames attempted here appear to mainly attack specific services, such as \"hadoop\", \"ec2-user\", and \"nginx\", to name a few. Finally, there were also references to cryptocurrency names, suggesting that some attackers may have been looking to find cryptocurrency wallets relating to mining operations. Next up are the passwords, and none of these are all too surprising. These are passwords you'll find on common password lists, aside from some specific ones like \"raspberryraspberry993311\". This password appears to be used by a worm, according to one researcher, that will report to an IRC server, change the password to that password, and then scan for other potential victim devices. Some attackers may use this password in their attempts in order to seize control of a device from another attacker, while the ones who deployed it may use this password as a way to tell if they have already gained access to this system in the past. There's not a whole lot to say here; these passwords are terrible and represent the first attempts by hackers when trying to gain access to a system. If you're using one of these passwords (or any other commonly used password), you should change it. For SSH access to your server, especially, you should use SSH keys or, at the very least, ensure that you use a strong password. Like in the case of the \"raspberryraspberry993311\" password attempt, we can get information from other passwords that were attempted, too. One password, \"0l0ctyQh243O63uD\", was attempted multiple times and appears to be used by the Mirai-based NoaBot, according to Akamai security. Commands most frequently executed Some surprises Unsurprisingly, the most commonly-used command was \"uname -s -v -n -r -m\". This prints the kernel name, the kernel version (build date and other information), the network node hostname, the kernel release version, and the machine hardware name. This can be used to identify a honeypot, but it's also used to determine the kind of hardware the attacker has connected to in general. Many disconnected immediately after running this command, suggesting that it wasn't what they were looking for. Interestingly, Telegram was also specifically targeted. Both the \"locate D877F783D5D3EF8Cs\" and the Telegram commands are related, with \"D877F783D5D3EF8Cs\" containing the user ID and encryption key for communication between the Telegram client and servers. Other commands were run to gain information about what the system was capable of, while others were used to execute scripts and applications that were downloaded. Of course, these couldn't actually be executed, as the files were intercepted by Cowrie and placed outside of the container for later review. Most other commands that frequently appeared relate to the attempted execution of those files, including attempting to grant execution rights to them, and \"scp -t\" commands to receive a file and place it in the /tmp folder. Looking at one of the files received Ghidra is my tool of choice There were a total of 18 items transferred to my honeypot throughout the data collection period, with files ranging from a measly 1 KB to nearly 30 MB. I took a look at one of them just to see how it began execution, as reverse engineering software can take a long time. It's typically best to analyze malware in a virtual machine, and I'm using Ghidra for this process. In the above screenshot, we can see one of the files obtained from the honeypot, opened in Ghidra. Ghidra is a free and open-source tool, released by the National Security Agency in the United States, and is used for reverse engineering software. This, paired with another tool like radare2, can give a fascinating insight into how a piece of software works. In the above screenshot, I followed the function map from the application's entry point (where it starts executing) to understand how data flows through it. This is one of the earlier functions that actually does something, and seemed like a good candidate to analyze as a result. In the highlighted portion, we can see that this is likely a check for something separated by dots. cVar1 = *pcVar7;while ((byte)(cVar1 - 0x30U) unaff_EBX = pcVar7 + 1; uVar4 = (int)cVar1 - 0x30; cVar1 = pcVar7[1]; while ((byte)(cVar1 - 0x30U) unaff_EBX = unaff_EBX + 1; uVar4 = cVar1 + -0x30 + uVar4 * 10; cVar1 = *unaff_EBX; } iVar3 = iVar3 + 1; uVar8 = uVar8 if (cVar1 != '.') break; pcVar7 = unaff_EBX + 1; cVar1 = *pcVar7;} This code reads the first character in cVar1, which is taken from a pointer reference to pcVar1. pcVar1 likely contains the kernel version, and we'll get to why later. It then checks if itâ€™s a digit (since '0' = 0x30), so this loop only continues if the character is '0'-'9'. It then initializes uVar4 to the value of the current digit. and moves to the next character. The second, nested while loop parses a multi-digit number as it repeatedly multiplies the previous value by 10 and adds the next digit, handling multi-digit octets. It then shifts the existing uVar8 value left by 8 bits and adds the newly parsed octet, putting it into a single unit. Finally, when it reaches a '.', it moves to the next octet, breaking the loop when nothing is left. This next block is pretty interesting, but is where I'll be stopping on this analysis, as this is a quick overview of what you can do with a honeypot and the data you collect. This code starts by inverting all the bits in uVar8, the parsed value we talked about earlier, and then right-shifting it by 31 bits. This effectively checks if the original value is not all 1s (0xFFFFFFFF) or 0, treating those values as special cases. If the result of the shift is 0, the code skips the upcoming logic entirely and instead attempts to read the kernel version by accessing /proc/sys/kernel/osrelease. If itâ€™s non-zero, meaning it's a \"normal\" value, it enters a loop that uses uVar8 along with a global value called DAT_080d7e64. It then creates a 64-bit value from those two 32-bit values (uVar9), possibly for use as a compound state or unique identifier. If the global DAT_080d7e64 is not zero, the code compares the two parts of the 64-bit value. Based on that, it decides whether to update the global with the newly parsed value or keep the previous value. Once all of that is done, it checks whether the value (or a derived value from it) is less than a specific threshold: 0x20609. If it is, the code prints the message \"FATAL: kernel too old\" and jumps to a function that presumably halts execution. This entire function serves to analyze the system's kernel version and throws an error if it is. That threshold would correspond to Linux kernel version 2.6.9, which was released in 2004. There are a lot of dangers on the internet Be safe out there As you can see throughout this article, the internet is a pretty scary place. There are lots of automated scanners trying to find victims, and many of them are successful in finding them. In this case, there was no damage, but on a real server, the consequences could be catastrophic. It's clear that these bad actors can do anything once they gain access, from stealing credentials and cryptocurrency wallets to deploying malware that attempts to spread to other devices. As always, be vigilant when it comes to security. Use proper passwords, don't expose devices to the internet that don't need to be exposed, and adhere to common sense principles when browsing the web. This was one server that I ran for just over a week, and the results are scary if unsurprising. Imagine the countless devices out there that have already been compromised without the owner's awareness? These scripts are designed to hide themselves, so in my case, if my server had been compromised, I'd have needed to actively look for it to find it.",
  "image": "https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-honeypot-ssh-feature-image.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\n        \n        \n        \n\n\n\n            \u003carticle\u003e\n\n        \n                \n    \n\n\n\n    \n    \n    \n        \n           \u003cheader\u003e\n            \n                                                \n\n\n    \n                           \n            \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n    \n        \n    \n        \n                                                                                                                            \n    \n            \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n    \n        \n    \n        \n                            \n            \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n    \n        \n    \n                    \n                                        \n\n\u003cdiv\u003e\n                            \u003cp\u003e\u003cimg src=\"https://static1.xdaimages.com/wordpress%2Fwp-content%2Fauthors%2F6697d8346a578-adamconway-pfp-updated-valnet.png?fit=crop\u0026amp;w=90\u0026amp;h=90\" alt=\"4\" loading=\"lazy\" decoding=\"async\"/\u003e\n                                    \u003c/p\u003e\n                    \u003c/div\u003e\n\n            \n\n\n            \u003ca id=\"login-button-article-sidebar\"\u003e\n            \u003cp\u003eSign in to your \u003cspan\u003eXDA\u003c/span\u003e account\u003c/p\u003e\n            \n        \u003c/a\u003e\n            \n                                \n                                    \n                                                                                                                        \n                        \n                                                    \n    \u003cdiv data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-honeypot-ssh-feature-image.jpg\" data-modal-id=\"single-image-modal\" data-modal-container-id=\"single-image-modal-container\" data-img-caption=\"\u0026#34;\u0026#34;\"\u003e\n\n        \n    \n\n\n\n\u003cfigure\u003e\n        \u003cpicture\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n            \n            \u003csource media=\"(min-width: 1024px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-honeypot-ssh-feature-image.jpg?q=49\u0026amp;fit=crop\u0026amp;w=1140\u0026amp;h=\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-honeypot-ssh-feature-image.jpg?q=49\u0026amp;fit=crop\u0026amp;w=1140\u0026amp;h=\u0026amp;dpr=2\"/\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n            \n            \u003csource media=\"(min-width: 768px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-honeypot-ssh-feature-image.jpg?q=49\u0026amp;fit=crop\u0026amp;w=943\u0026amp;h=\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-honeypot-ssh-feature-image.jpg?q=49\u0026amp;fit=crop\u0026amp;w=943\u0026amp;h=\u0026amp;dpr=2\"/\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n            \n            \u003csource media=\"(min-width: 481px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-honeypot-ssh-feature-image.jpg?q=49\u0026amp;fit=crop\u0026amp;w=767\u0026amp;h=\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-honeypot-ssh-feature-image.jpg?q=49\u0026amp;fit=crop\u0026amp;w=767\u0026amp;h=\u0026amp;dpr=2\"/\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n            \n            \u003csource media=\"(min-width: 0px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-honeypot-ssh-feature-image.jpg?q=49\u0026amp;fit=crop\u0026amp;w=480\u0026amp;h=\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-honeypot-ssh-feature-image.jpg?q=49\u0026amp;fit=crop\u0026amp;w=480\u0026amp;h=\u0026amp;dpr=2\"/\u003e\n                \u003cimg width=\"5184\" height=\"2916\" alt=\"Cowrie-Honeypot-SSH-Feature-Image\" data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-honeypot-ssh-feature-image.jpg\" src=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-honeypot-ssh-feature-image.jpg\"/\u003e\n    \u003c/picture\u003e\n                                    \n    \u003c/figure\u003e\n\n\n    \u003c/div\u003e\n\n\n            \n                \n    \n    \n        \n    \n\n    \n            \u003c/header\u003e\n\n                            \n        \n\n        \n                                        \n                                \n            \n                        \n        \n        \n\n    \n            \n    \n                                                            \n            \n    \n    \n                                                                            \n                                \n                                \n                                                \n            \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n                                                    \n                        \n    \n                                                        \n                                                                                                                                    \n                                \n                                                \n            \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n    \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                        \n                                \n                                \n                                                \n            \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                                                                                                                            \n            \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n    \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                        \n                                \n                                                                    \n                                                \n            \n        \n    \n        \n                                                                                                                                                                                                        \n                                    \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                        \n                                \n                                \n                                                \n            \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                        \n                                \n                                \n                                                \n            \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                                                                                                                                                                                                                                            \n            \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n    \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                        \n                                \n                                                                    \n                                                \n            \n        \n    \n        \n                                                                                                                                                                                                        \n                                    \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                        \n                                \n                                \n                                                \n            \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                        \n                                \n                                                                    \n                                                \n            \n        \n    \n        \n                                                                                                                                                                                                        \n                                    \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                        \n                                \n                                \n                                                \n            \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                                                                                                                                                                                                                                            \n            \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n    \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                        \n                                \n                                                                    \n                                                \n            \n        \n    \n        \n                                                                                                                                                                                                        \n                                    \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                        \n                                \n                                \n                                                \n            \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                        \n                                \n                                \n                                                \n            \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                                                                                                                                                                                                                                            \n            \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n    \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                        \n                                \n                                                                    \n                                                \n            \n        \n    \n        \n                                                                                                                                                                                                        \n                                    \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                        \n                                \n                                \n                                                \n            \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                        \n                                \n                                \n                                                \n            \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                        \n                                \n                                \n                                                \n            \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                        \n                                \n                                                                    \n                                                \n            \n        \n    \n        \n                                                                                                                                                                                                        \n                                    \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                        \n                                \n                                \n                                                \n            \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                                                                                                                                                                                                                                            \n            \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n    \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                \n        \n    \n        \n                                                                                                                                                                                                        \n                \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                        \n                                \n                                                                    \n                                                \n            \n        \n    \n        \n                                                                                                                                                                                                        \n                                    \n    \n    \n        \n    \n\n    \n    \n            \n    \n    \n            \n    \n    \n                                                        \n                                \n                                \n                                                \n            \n        \n    \n        \n                                                                                                                                                                                                        \n            \n    \n    \n        \n                \n                    \n                        \n                                    \u003cdiv id=\"article-body\" itemprop=\"articleBody\"\u003e\n\u003cp\u003eI\u0026#39;ve been playing around with networking in recent months, including setting up my own OPNsense box and deploying Proxmox on a few machines. I\u0026#39;ve been loving it, and from a security enthusiast\u0026#39;s point of view, some of the data that I could see in OPNsense was very interesting. Through tools like CrowdSec, I could see automated port scanners getting blocked, and it made me take a closer look at home networking and security in general. That\u0026#39;s why I set up an SSH honeypot, to try and catch a glimpse of what these people do when they gain access to a system, and the results were pretty scary.\u003c/p\u003e    \n\u003cp\u003eUnless you know what you\u0026#39;re doing, I don\u0026#39;t suggest setting up your own honeypot, and definitely not on your home network. I deployed a barebones Ubuntu virtual machine running on its own host, without any other data, and set up a tool called Cowrie. Cowrie is an SSH honeypot that will simulate a real SSH connection, complete with responses to commands that \u003cem\u003elook\u003c/em\u003e legitimate. It can accept file transfers, too, so that scripts and other malicious files can be intercepted and analyzed by a security researcher. We\u0026#39;ll be taking a look at some of that too.\u003c/p\u003e    \u003cp\u003e\u003ca href=\"https://www.xda-developers.com/world-password-day/\"\u003e\n\u003cimg alt=\"World Password Day\" data-image-id=\"336437\" height=\"262\" src=\"https://static0.xdaimages.com/wordpress/wp-content/uploads/2025/04/world-password-day.png\" width=\"2100\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eI used \u003ca href=\"https://github.com/code-byter/Awesome-Honeypot\" rel=\"noopener noreferrer nofollow\" target=\"_blank\"\u003ethis GitHub repository\u003c/a\u003e to configure Cowrie with an ElasticSearch database (though I needed to \u003ca href=\"https://github.com/Incipiens/Awesome-Honeypot/commit/c3952bb93481ab7895b3e4325703963d827bcf95\" rel=\"noopener noreferrer nofollow\" target=\"_blank\"\u003emodify the setup script\u003c/a\u003e), and altered the Kibana dashboard to display the information that I specifically wanted to see. The data shown here is especially important not just because it captures the real-time attempts from those looking to automate intrusions into self-hosted services that are exposed to the internet, but it also shows what can happen when you don\u0026#39;t use a secure password. Nearly all of these attempts were using passwords that find themselves on \u003ca href=\"https://www.xda-developers.com/some-of-you-are-still-using-these-terrible-passwords-in-2025/\" target=\"_blank\"\u003elists of the most common passwords\u003c/a\u003e, but someone specifically targeting you may also try to tailor their attempts specifically to you.\u003c/p\u003e    \u003ch2 id=\"cowrie-is-a-honeypot-that-you-control-every-aspect-of\"\u003e\n                        Cowrie is a honeypot that you control every aspect of\n               \u003c/h2\u003e\u003ch3 id=\"it-looks-like-a-normal-ssh-connection\"\u003e\n            It looks like a normal SSH connection\n    \u003c/h3\u003e\n\n                \n    \n    \n    \n                \n    \n                \n        \n                                                            \n                                                                                                                        \n                                        \n    \n    \n    \n    \n    \u003cdiv data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/03/tailscale-ssh.jpg\" data-modal-id=\"single-image-modal\" data-modal-container-id=\"single-image-modal-container\" data-img-caption=\"\u0026#34;\u0026#34;\"\u003e\n\n            \n\n\n\n\n\u003cfigure\u003e\n        \u003cpicture\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 1024px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/03/tailscale-ssh.jpg?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/03/tailscale-ssh.jpg?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\"/\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 768px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/03/tailscale-ssh.jpg?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/03/tailscale-ssh.jpg?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\"/\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 481px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/03/tailscale-ssh.jpg?q=49\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/03/tailscale-ssh.jpg?q=49\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=2\"/\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 0px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/03/tailscale-ssh.jpg?q=49\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/03/tailscale-ssh.jpg?q=49\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=2\"/\u003e\n                \u003cimg width=\"2240\" height=\"1260\" loading=\"lazy\" decoding=\"async\" alt=\"Using Tailscale to SSH into a remote machine\" data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/03/tailscale-ssh.jpg\" src=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/03/tailscale-ssh.jpg\"/\u003e\n    \u003c/picture\u003e\n                                    \n    \u003c/figure\u003e\n\n\n        \u003c/div\u003e\n\n\u003cp\u003eCowrie is an SSH and Telnet honeypot, designed to log interactions. It\u0026#39;s written in Python and emulates a Unix system, though it can also act as a proxy to a real machine if you\u0026#39;d prefer. It\u0026#39;s completely customizable, so you can change the login banner, the accepted logins, the filesystem, and so much more. Plus, not only are interactions logged, but file transfers are also saved locally to the machine so that they can be analyzed later.\u003c/p\u003e    \n\u003cp\u003eCowrie can be run in a containerized environment (such as with \u003ca href=\"https://www.xda-developers.com/i-switched-to-podman-instead-of-docker/\" target=\"_blank\"\u003ePodman\u003c/a\u003e or \u003ca href=\"https://www.xda-developers.com/tried-these-docker-containers-cant-live-without-them/\" target=\"_blank\"\u003eDocker\u003c/a\u003e), or it can be run as a regular application using Python. The point of it is that the person connecting to the honeypot doesn\u0026#39;t know that it\u0026#39;s a honeypot. It responds to commands with plausible responses, including commands that are designed to print system information. As we\u0026#39;ll get to, there were a lot of those, and some of the actions undertaken by those who connected to my honeypot were very interesting.\u003c/p\u003e    \n\u003cp\u003eI deployed my Cowrie instance on the 23rd of April, 2025, and all data discussed in this article has been collected since then. There were 29,282 unique interactions, with the most active day being the 1st of May, 2025, logging a total of 7,438 unique interactions. An \u0026#34;interaction\u0026#34; is defined as any individual action, such as an attempted login, an executed command, or the client disconnecting. There were 447 unique IP addresses identified in the dataset after filtering out my own IP address when I was testing it.\u003c/p\u003e    \u003ch2 id=\"usernames-and-passwords-most-commonly-used\"\u003e\n                        Usernames and passwords most commonly used\n               \u003c/h2\u003e\u003ch3 id=\"the-usual-suspects\"\u003e\n            The usual suspects\n    \u003c/h3\u003e\n\n                \n    \n    \n    \n                \n    \n                \n        \n                                                            \n                                                                                                                        \n                                        \n    \n    \n    \n    \n    \u003cdiv data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-usernames.png\" data-modal-id=\"single-image-modal\" data-modal-container-id=\"single-image-modal-container\" data-img-caption=\"\u0026#34;\u0026#34;\"\u003e\n\n            \n\n\n\n\n\u003cfigure\u003e\n        \u003cpicture\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 1024px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-usernames.png?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-usernames.png?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\"/\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 768px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-usernames.png?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-usernames.png?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\"/\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 481px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-usernames.png?q=49\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-usernames.png?q=49\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=2\"/\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 0px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-usernames.png?q=49\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-usernames.png?q=49\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=2\"/\u003e\n                \u003cimg width=\"3833\" height=\"1810\" loading=\"lazy\" decoding=\"async\" alt=\"cowrie-ssh-honeypot-usernames\" data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-usernames.png\" src=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-usernames.png\"/\u003e\n    \u003c/picture\u003e\n                                    \n    \u003c/figure\u003e\n\n\n        \u003c/div\u003e\n\n\u003cp\u003e First and foremost, we\u0026#39;ll have a look at the usernames and passwords that were used the most. Unsurprisingly, \u0026#34;root\u0026#34; was the most-attempted user, representing just over a sixth of all attempts. This makes sense, as the root user is the most privileged user on a Linux-based system. With root access, the attacker controls your entire system and can access every single file present. It\u0026#39;s essentially the holy grail, which is why it\u0026#39;s recommended to use SSH keys for remote access in general. On top of that, if you don\u0026#39;t need the root user enabled, it\u0026#39;s better to disable the root user entirely and instead rely on sudo commands to gain those elevated privileges when you need them from your own account.\u003c/p\u003e    \n\u003cp\u003eLooking at the other commonly used usernames, most of them are unsurprising. \u0026#34;admin\u0026#34; and \u0026#34;user\u0026#34; make a lot of sense, as does \u0026#34;support\u0026#34;. Interestingly, \u0026#34;ubnt\u0026#34; is the default username on most Ubiquiti products, and that username is one of the more commonly-tried usernames in my dataset. \u0026#34;usario\u0026#34; is Spanish for \u0026#34;user\u0026#34;, and \u0026#34;oracle\u0026#34;, \u0026#34;ubuntu\u0026#34;, and \u0026#34;pi\u0026#34; are all fairly self-explanatory. Most of the other usernames attempted here appear to mainly attack specific services, such as \u0026#34;hadoop\u0026#34;, \u0026#34;ec2-user\u0026#34;, and \u0026#34;nginx\u0026#34;, to name a few. Finally, there were also references to cryptocurrency names, suggesting that some attackers may have been looking to find cryptocurrency wallets relating to mining operations.\u003c/p\u003e    \n                \n    \n    \n    \n                \n    \n                \n        \n                                                            \n                                                                                                                        \n                                        \n    \n    \n    \n    \n    \u003cdiv data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-passwords.png\" data-modal-id=\"single-image-modal\" data-modal-container-id=\"single-image-modal-container\" data-img-caption=\"\u0026#34;\u0026#34;\"\u003e\n\n            \n\n\n\n\n\u003cfigure\u003e\n        \u003cpicture\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 1024px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-passwords.png?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-passwords.png?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\"/\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 768px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-passwords.png?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-passwords.png?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\"/\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 481px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-passwords.png?q=49\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-passwords.png?q=49\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=2\"/\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 0px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-passwords.png?q=49\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-passwords.png?q=49\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=2\"/\u003e\n                \u003cimg width=\"3836\" height=\"1802\" loading=\"lazy\" decoding=\"async\" alt=\"Cowrie Honeypot SSH passwords\" data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-passwords.png\" src=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-passwords.png\"/\u003e\n    \u003c/picture\u003e\n                                    \n    \u003c/figure\u003e\n\n\n        \u003c/div\u003e\n\n\u003cp\u003e Next up are the passwords, and none of these are all too surprising. These are passwords you\u0026#39;ll find on common password lists, aside from some specific ones like \u0026#34;raspberryraspberry993311\u0026#34;. This password appears to be used by a worm, \u003ca href=\"https://medium.com/@dmrickert/what-ssh-hacking-attempts-look-like-8f698e70a4f5\" rel=\"noopener noreferrer nofollow\" target=\"_blank\"\u003eaccording to one researcher\u003c/a\u003e, that will report to an IRC server, change the password to that password, and then scan for other potential victim devices. Some attackers may use this password in their attempts in order to seize control of a device from another attacker, while the ones who deployed it may use this password as a way to tell if they have already gained access to this system in the past.\u003c/p\u003e    \n\u003cp\u003eThere\u0026#39;s not a whole lot to say here; these passwords are terrible and represent the first attempts by hackers when trying to gain access to a system. If you\u0026#39;re using one of these passwords (or any other commonly used password), you should change it. For SSH access to your server, especially, you should use SSH keys or, at the very least, ensure that you use a strong password. Like in the case of the \u0026#34;raspberryraspberry993311\u0026#34; password attempt, we can get information from other passwords that were attempted, too. One password, \u0026#34;0l0ctyQh243O63uD\u0026#34;, was attempted multiple times and appears to be used by the Mirai-based NoaBot, \u003ca href=\"https://github.com/akamai/akamai-security-research/blob/main/malware/noabot/credentials/noa_pass_set.txt\" rel=\"noopener noreferrer nofollow\" target=\"_blank\"\u003eaccording to Akamai security\u003c/a\u003e.\u003c/p\u003e    \u003ch2 id=\"commands-most-frequently-executed\"\u003e\n                        Commands most frequently executed\n               \u003c/h2\u003e\u003ch3 id=\"some-surprises\"\u003e\n            Some surprises\n    \u003c/h3\u003e\n\n                \n    \n    \n    \n                \n    \n                \n        \n                                                            \n                                                                                                                        \n                                        \n    \n    \n    \n    \n    \u003cdiv data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-commands.png\" data-modal-id=\"single-image-modal\" data-modal-container-id=\"single-image-modal-container\" data-img-caption=\"\u0026#34;\u0026#34;\"\u003e\n\n            \n\n\n\n\n\u003cfigure\u003e\n        \u003cpicture\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 1024px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-commands.png?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-commands.png?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\"/\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 768px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-commands.png?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-commands.png?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\"/\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 481px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-commands.png?q=49\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-commands.png?q=49\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=2\"/\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 0px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-commands.png?q=49\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-commands.png?q=49\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=2\"/\u003e\n                \u003cimg width=\"3833\" height=\"1807\" loading=\"lazy\" decoding=\"async\" alt=\"Cowrie SSH honeypot commands used\" data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-commands.png\" src=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-commands.png\"/\u003e\n    \u003c/picture\u003e\n                                    \n    \u003c/figure\u003e\n\n\n        \u003c/div\u003e\n\n\u003cp\u003eUnsurprisingly, the most commonly-used command was \u0026#34;uname -s -v -n -r -m\u0026#34;. This prints the kernel name, the kernel version (build date and other information), the network node hostname, the kernel release version, and the machine hardware name. This can be used to identify a honeypot, but it\u0026#39;s also used to determine the kind of hardware the attacker has connected to in general. Many disconnected immediately after running this command, suggesting that it wasn\u0026#39;t what they were looking for.\u003c/p\u003e    \n\u003cp\u003eInterestingly, Telegram was also specifically targeted. Both the \u0026#34;locate D877F783D5D3EF8Cs\u0026#34; and the Telegram commands are related, with \u0026#34;D877F783D5D3EF8Cs\u0026#34; containing the user ID and encryption key for communication between the Telegram client and servers. Other commands were run to gain information about what the system was capable of, while others were used to execute scripts and applications that were downloaded. Of course, these couldn\u0026#39;t actually be executed, as the files were intercepted by Cowrie and placed outside of the container for later review.\u003c/p\u003e    \n\u003cp\u003eMost other commands that frequently appeared relate to the attempted execution of those files, including attempting to grant execution rights to them, and \u0026#34;scp -t\u0026#34; commands to receive a file and place it in the /tmp folder.\u003c/p\u003e    \u003ch2 id=\"looking-at-one-of-the-files-received\"\u003e\n                        Looking at one of the files received\n               \u003c/h2\u003e\u003ch3 id=\"ghidra-is-my-tool-of-choice\"\u003e\n            Ghidra is my tool of choice\n    \u003c/h3\u003e\n\n                \n    \n    \n    \n                \n    \n                \n        \n                                                            \n                                                                                                                        \n                                        \n    \n    \n    \n    \n    \u003cdiv data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-ghidra-1.png\" data-modal-id=\"single-image-modal\" data-modal-container-id=\"single-image-modal-container\" data-img-caption=\"\u0026#34;\u0026#34;\"\u003e\n\n            \n\n\n\n\n\u003cfigure\u003e\n        \u003cpicture\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 1024px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-ghidra-1.png?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-ghidra-1.png?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\"/\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 768px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-ghidra-1.png?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-ghidra-1.png?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\"/\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 481px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-ghidra-1.png?q=49\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-ghidra-1.png?q=49\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=2\"/\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 0px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-ghidra-1.png?q=49\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-ghidra-1.png?q=49\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=2\"/\u003e\n                \u003cimg width=\"3834\" height=\"2076\" loading=\"lazy\" decoding=\"async\" alt=\"Analyzing malware in Ghidra\" data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-ghidra-1.png\" src=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-ghidra-1.png\"/\u003e\n    \u003c/picture\u003e\n                                    \n    \u003c/figure\u003e\n\n\n        \u003c/div\u003e\n\n\u003cp\u003e There were a total of 18 items transferred to my honeypot throughout the data collection period, with files ranging from a measly 1 KB to nearly 30 MB. I took a look at one of them just to see how it began execution, as reverse engineering software can take a long time. It\u0026#39;s typically best to analyze malware in a virtual machine, and I\u0026#39;m using Ghidra for this process. In the above screenshot, we can see one of the files obtained from the honeypot, opened in Ghidra. Ghidra is a free and open-source tool, released by the National Security Agency in the United States, and is used for reverse engineering software. This, paired with another tool like radare2, can give a fascinating insight into how a piece of software works.\u003c/p\u003e    \n\u003cp\u003eIn the above screenshot, I followed the function map from the application\u0026#39;s entry point (where it starts executing) to understand how data flows through it. This is one of the earlier functions that actually does something, and seemed like a good candidate to analyze as a result. In the highlighted portion, we can see that this is likely a check for something separated by dots.\u003c/p\u003e    \n\u003cpre\u003ecVar1 = *pcVar7;\u003cbr/\u003ewhile ((byte)(cVar1 - 0x30U)  unaff_EBX = pcVar7 + 1;\u003cbr/\u003e uVar4 = (int)cVar1 - 0x30;\u003cbr/\u003e cVar1 = pcVar7[1];\u003cbr/\u003e while ((byte)(cVar1 - 0x30U)  unaff_EBX = unaff_EBX + 1;\u003cbr/\u003e uVar4 = cVar1 + -0x30 + uVar4 * 10;\u003cbr/\u003e cVar1 = *unaff_EBX;\u003cbr/\u003e }\u003cbr/\u003e iVar3 = iVar3 + 1;\u003cbr/\u003e uVar8 = uVar8  if (cVar1 != \u0026#39;.\u0026#39;) break;\u003cbr/\u003e pcVar7 = unaff_EBX + 1;\u003cbr/\u003e cVar1 = *pcVar7;\u003cbr/\u003e}\u003cbr/\u003e\u003c/pre\u003e    \n\u003cp\u003eThis code reads the first character in cVar1, which is taken from a pointer reference to pcVar1. pcVar1 likely contains the kernel version, and we\u0026#39;ll get to why later. It then checks if itâ€™s a digit (since \u0026#39;0\u0026#39; = 0x30), so this loop only continues if the character is \u0026#39;0\u0026#39;-\u0026#39;9\u0026#39;. It then initializes uVar4 to the value of the current digit. and moves to the next character. The second, nested while loop parses a multi-digit number as it repeatedly multiplies the previous value by 10 and adds the next digit, handling multi-digit octets. It then shifts the existing uVar8 value left by 8 bits and adds the newly parsed octet, putting it into a single unit. Finally, when it reaches a \u0026#39;.\u0026#39;, it moves to the next octet, breaking the loop when nothing is left.\u003c/p\u003e    \n                \n    \n    \n    \n                \n    \n                \n        \n                                                            \n                                                                                                                        \n                                        \n    \n    \n    \n    \n    \u003cdiv data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-ghidra-2.png\" data-modal-id=\"single-image-modal\" data-modal-container-id=\"single-image-modal-container\" data-img-caption=\"\u0026#34;\u0026#34;\"\u003e\n\n            \n\n\n\n\n\u003cfigure\u003e\n        \u003cpicture\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 1024px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-ghidra-2.png?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-ghidra-2.png?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\"/\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 768px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-ghidra-2.png?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-ghidra-2.png?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\"/\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 481px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-ghidra-2.png?q=49\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-ghidra-2.png?q=49\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=2\"/\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 0px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-ghidra-2.png?q=49\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-ghidra-2.png?q=49\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=2\"/\u003e\n                \u003cimg width=\"3831\" height=\"2074\" loading=\"lazy\" decoding=\"async\" alt=\"Analyzing code in Ghidra\" data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-ghidra-2.png\" src=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-ghidra-2.png\"/\u003e\n    \u003c/picture\u003e\n                                    \n    \u003c/figure\u003e\n\n\n        \u003c/div\u003e\n\n\u003cp\u003e This next block is pretty interesting, but is where I\u0026#39;ll be stopping on this analysis, as this is a quick overview of what you \u003cem\u003ecan\u003c/em\u003e do with a honeypot and the data you collect. This code starts by inverting all the bits in uVar8, the parsed value we talked about earlier, and then right-shifting it by 31 bits. This effectively checks if the original value is not all 1s (0xFFFFFFFF) or 0, treating those values as special cases. If the result of the shift is 0, the code skips the upcoming logic entirely and instead attempts to read the kernel version by accessing /proc/sys/kernel/osrelease. If itâ€™s non-zero, meaning it\u0026#39;s a \u0026#34;normal\u0026#34; value, it enters a loop that uses uVar8 along with a global value called DAT_080d7e64. It then creates a 64-bit value from those two 32-bit values (uVar9), possibly for use as a compound state or unique identifier. If the global DAT_080d7e64 is not zero, the code compares the two parts of the 64-bit value. Based on that, it decides whether to update the global with the newly parsed value or keep the previous value.\u003c/p\u003e    \n\u003cp\u003eOnce all of that is done, it checks whether the value (or a derived value from it) is less than a specific threshold: 0x20609. If it is, the code prints the message \u0026#34;FATAL: kernel too old\u0026#34; and jumps to a function that presumably halts execution. This entire function serves to analyze the system\u0026#39;s kernel version and throws an error if it is. That threshold would correspond to Linux kernel version 2.6.9, which was released in 2004.\u003c/p\u003e    \u003ch2 id=\"there-are-a-lot-of-dangers-on-the-internet\"\u003e\n                        There are a lot of dangers on the internet\n               \u003c/h2\u003e\u003ch3 id=\"be-safe-out-there\"\u003e\n            Be safe out there\n    \u003c/h3\u003e\n\n                \n    \n    \n    \n                \n    \n                \n        \n                                                            \n                                                                                                                        \n                                        \n    \n    \n    \n    \n    \u003cdiv data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-dashboard.png\" data-modal-id=\"single-image-modal\" data-modal-container-id=\"single-image-modal-container\" data-img-caption=\"\u0026#34;\u0026#34;\"\u003e\n\n            \n\n\n\n\n\u003cfigure\u003e\n        \u003cpicture\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 1024px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-dashboard.png?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-dashboard.png?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\"/\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 768px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-dashboard.png?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-dashboard.png?q=49\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=2\"/\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 481px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-dashboard.png?q=49\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-dashboard.png?q=49\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=2\"/\u003e\n        \n                                        \n                                    \n                                                                                                                                                                            \n            \n                                                \n                        \n            \n            \n                                        \n            \u003csource media=\"(min-width: 0px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-dashboard.png?q=49\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-dashboard.png?q=49\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=2\"/\u003e\n                \u003cimg width=\"3833\" height=\"1880\" loading=\"lazy\" decoding=\"async\" alt=\"cowrie-ssh-honeypot-dashboard\" data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-dashboard.png\" src=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2025/05/cowrie-ssh-honeypot-dashboard.png\"/\u003e\n    \u003c/picture\u003e\n                                    \n    \u003c/figure\u003e\n\n\n        \u003c/div\u003e\n\n\u003cp\u003e As you can see throughout this article, the internet is a pretty scary place. There are lots of automated scanners trying to find victims, and many of them \u003cem\u003eare\u003c/em\u003e successful in finding them. In this case, there was no damage, but on a \u003cem\u003ereal\u003c/em\u003e server, the consequences could be catastrophic. It\u0026#39;s clear that these bad actors can do anything once they gain access, from stealing credentials and cryptocurrency wallets to deploying malware that attempts to spread to other devices.\u003c/p\u003e    \n\u003cp\u003eAs always, be vigilant when it comes to security. Use proper passwords, \u003ca href=\"https://www.xda-developers.com/please-stop-exposing-iot-devices-internet/\" target=\"_blank\"\u003edon\u0026#39;t expose devices to the internet that don\u0026#39;t need to be exposed\u003c/a\u003e, and adhere to common sense principles when browsing the web. This was one server that I ran for just over a week, and the results are scary if unsurprising. Imagine the countless devices out there that have already been compromised without the owner\u0026#39;s awareness? These scripts are designed to hide themselves, so in my case, if my server \u003cem\u003ehad\u003c/em\u003e been compromised, I\u0026#39;d have needed to actively look for it to find it.\u003c/p\u003e    \u003c/div\u003e\n    \n                \n        \n        \n\n\n        \n\n\n\n\n\n                    \n                            \n\n\n\n\n        \n    \u003c/article\u003e\n\n    \n            \n        \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "51 min read",
  "publishedTime": "2025-05-05T00:00:19Z",
  "modifiedTime": "2025-05-05T00:00:19Z"
}
