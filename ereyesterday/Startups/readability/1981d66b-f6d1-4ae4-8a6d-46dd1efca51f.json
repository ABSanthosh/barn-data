{
  "id": "1981d66b-f6d1-4ae4-8a6d-46dd1efca51f",
  "title": "Ten Years of JSON Web Token and Preparing for the Future",
  "link": "https://self-issued.info/?p=2708",
  "description": "Article URL: https://self-issued.info/?p=2708 Comments URL: https://news.ycombinator.com/item?id=44092102 Points: 52 # Comments: 4",
  "author": "mooreds",
  "published": "Sun, 25 May 2025 23:05:36 +0000",
  "source": "https://hnrss.org/frontpage",
  "categories": null,
  "byline": "",
  "length": 2883,
  "excerpt": "Ten years ago this week, in May 2015, the JSON Web Token (JWT) became RFC 7519. This was the culmination of a 4.5 year journey to create a simple JSON-based security token format and underlying JSON-based cryptographic standards. The full set of RFCs published together was:",
  "siteName": "",
  "favicon": "",
  "text": "Ten years ago this week, in May 2015, the JSON Web Token (JWT) became RFC 7519. This was the culmination of a 4.5 year journey to create a simple JSON-based security token format and underlying JSON-based cryptographic standards. The full set of RFCs published together was: RFC 7515: JSON Web Signature (JWS) RFC 7516: JSON Web Encryption (JWE) RFC 7517: JSON Web Key (JWK) RFC 7518: JSON Web Algorithms (JWA) RFC 7519: JSON Web Token (JWT) RFC 7520: Examples of Protecting Content Using JSON Object Signing and Encryption (JOSE) RFC 7521: Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants RFC 7522: Security Assertion Markup Language (SAML) 2.0 Profile for OAuth 2.0 Client Authentication and Authorization Grants RFC 7523: JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants It’s certainly the case that we co-designed JWT and its underpinnings with OpenID Connect, while also attempting to create general-purpose, widely useful standards. Given the adoption that’s ensued, it seems that we succeeded. As I wrote in my post JWTs helping combat fraudulent and unwanted telephone calls, “It’s often said that one sign of a standard having succeeded is that it’s used for things that the inventors never imagined.” I’m gratified that this applies to JWT and the related specifications. As was written in the post Essential Moments in the OAuth and OpenID Connect Timeline, it’s now hard to imagine an online security world without these standards. That said, there’s work underway to keep JWTs and the use of them secure for the next decade. Five years ago, the JSON Web Token Best Current Practices specification was created. As I wrote then: This Best Current Practices specification contains a compendium of lessons learned from real JWT deployments and implementations over that period. It describes pitfalls and how to avoid them as well as new recommended practices that enable proactively avoiding problems that could otherwise arise. My coauthors Yaron Sheffer and Dick Hardt and I are now updating the JWT BCP to describe additional threats and mitigations that have become known in the last five years. See the updated JSON Web Token Best Current Practices specification. Similarly, my coauthors Brian Campbell and Chuck Mortimore of the JWT Profile for OAuth 2.0 Client Authentication and Authorization Grants are updating it and related specifications to address vulnerabilities caused by ambiguities in the audience values of tokens sent to the authorization server. See the RFC7523bis specification. I’m truly grateful that my coauthors John Bradley and Nat Sakimura and I created something useful and widely used ten years ago, of course with substantial contributions from the OAuth, JOSE, and OpenID Connect working groups. I look forward to what the next decade will bring!",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"site-content\"\u003e\n\n\t\t\t\n\t\t\t\t\t\u003carticle id=\"post-2708\"\u003e\n\n\t\t\t\t\t\t\u003cdiv\u003e\n\n\t\t\t\t\t\t\t\t\t\u003cp\u003e\u003cspan\u003e\u003cimg decoding=\"async\" src=\"https://self-issued.info/images/ietf-logo.png\" alt=\"IETF logo\"/\u003e\u003c/span\u003eTen years ago this week, in May 2015, the JSON Web Token (JWT) became \u003ca href=\"https://www.rfc-editor.org/rfc/rfc7519.html\"\u003eRFC 7519\u003c/a\u003e.  This was the culmination of a \u003ca href=\"https://self-issued.info/?p=1387\"\u003e4.5 year journey\u003c/a\u003e to create a simple JSON-based security token format and underlying JSON-based cryptographic standards.  The full set of RFCs published together was:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://www.rfc-editor.org/rfc/rfc7515.html\"\u003eRFC 7515\u003c/a\u003e:  JSON Web Signature (JWS)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.rfc-editor.org/rfc/rfc7516.html\"\u003eRFC 7516\u003c/a\u003e:  JSON Web Encryption (JWE)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.rfc-editor.org/rfc/rfc7517.html\"\u003eRFC 7517\u003c/a\u003e:  JSON Web Key (JWK)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.rfc-editor.org/rfc/rfc7518.html\"\u003eRFC 7518\u003c/a\u003e:  JSON Web Algorithms (JWA)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.rfc-editor.org/rfc/rfc7519.html\"\u003eRFC 7519\u003c/a\u003e:  JSON Web Token (JWT)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.rfc-editor.org/rfc/rfc7520.html\"\u003eRFC 7520\u003c/a\u003e:  Examples of Protecting Content Using JSON Object Signing and Encryption (JOSE)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.rfc-editor.org/rfc/rfc7521.html\"\u003eRFC 7521\u003c/a\u003e:  Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.rfc-editor.org/rfc/rfc7522.html\"\u003eRFC 7522\u003c/a\u003e:  Security Assertion Markup Language (SAML) 2.0 Profile for OAuth 2.0 Client Authentication and Authorization Grants\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.rfc-editor.org/rfc/rfc7523.html\"\u003eRFC 7523\u003c/a\u003e:  JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIt’s certainly the case that we co-designed JWT and its underpinnings with \u003ca href=\"https://openid.net/connect\"\u003eOpenID Connect\u003c/a\u003e, while also attempting to create general-purpose, widely useful standards.  Given the adoption that’s ensued, it seems that we succeeded.\u003c/p\u003e\n\u003cp\u003eAs I wrote in my post \u003ca href=\"https://self-issued.info/?p=2045\"\u003eJWTs helping combat fraudulent and unwanted telephone calls\u003c/a\u003e, “\u003ci\u003e\u003cb\u003eIt’s often said that one sign of a standard having succeeded is that it’s used for things that the inventors never imagined.\u003c/b\u003e\u003c/i\u003e”  I’m gratified that this applies to JWT and the related specifications.  As was written in the post \u003ca href=\"https://blog.duendesoftware.com/posts/20250520-essential-moments-in-the-oauth-and-openid-connect-timeline/\"\u003eEssential Moments in the OAuth and OpenID Connect Timeline\u003c/a\u003e, it’s now hard to imagine an online security world without these standards.\u003c/p\u003e\n\u003cp\u003eThat said, there’s work underway to keep JWTs and the use of them secure for the next decade.  Five years ago, the \u003ca href=\"https://www.rfc-editor.org/rfc/rfc8725.html\"\u003eJSON Web Token Best Current Practices\u003c/a\u003e specification was created.  As \u003ca href=\"https://self-issued.info/?p=2052\"\u003eI wrote then\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\u003cp\u003e\nThis Best Current Practices specification contains a compendium of lessons learned from real JWT deployments and implementations over that period. It describes pitfalls and how to avoid them as well as new recommended practices that enable proactively avoiding problems that could otherwise arise.\n\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eMy coauthors \u003ca href=\"https://www.linkedin.com/in/yaronf/\"\u003eYaron Sheffer\u003c/a\u003e and \u003ca href=\"https://www.linkedin.com/in/dickhardt/\"\u003eDick Hardt\u003c/a\u003e and I are now updating the JWT BCP to describe additional threats and mitigations that have become known in the last five years.  See the \u003ca href=\"https://www.ietf.org/archive/id/draft-sheffer-oauth-rfc8725bis-01.html\"\u003eupdated JSON Web Token Best Current Practices\u003c/a\u003e specification.\u003c/p\u003e\n\u003cp\u003eSimilarly, my coauthors \u003ca href=\"https://www.linkedin.com/in/bcampbell/\"\u003eBrian Campbell\u003c/a\u003e and \u003ca href=\"https://www.linkedin.com/in/cmort/\"\u003eChuck Mortimore\u003c/a\u003e of the \u003ca href=\"https://www.rfc-editor.org/rfc/rfc7523.html\"\u003eJWT Profile for OAuth 2.0 Client Authentication and Authorization Grants\u003c/a\u003e are updating it and related specifications to address vulnerabilities caused by \u003ca href=\"https://openid.net/notice-of-a-security-vulnerability/\"\u003eambiguities in the audience values\u003c/a\u003e of tokens sent to the authorization server.  See the \u003ca href=\"https://www.ietf.org/archive/id/draft-ietf-oauth-rfc7523bis-01.html\"\u003eRFC7523bis\u003c/a\u003e specification.\u003c/p\u003e\n\u003cp\u003eI’m truly grateful that my coauthors \u003ca href=\"https://www.linkedin.com/in/ve7jtb/\"\u003eJohn Bradley\u003c/a\u003e and \u003ca href=\"https://www.linkedin.com/in/natsakimura/\"\u003eNat Sakimura\u003c/a\u003e and I created something useful and widely used ten years ago, of course with substantial contributions from the OAuth, JOSE, and OpenID Connect working groups.  I look forward to what the next decade will bring!\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\u003c/div\u003e\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\u003c/article\u003e\n\n\t\t\t\t\t\n\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": null,
  "modifiedTime": null
}
