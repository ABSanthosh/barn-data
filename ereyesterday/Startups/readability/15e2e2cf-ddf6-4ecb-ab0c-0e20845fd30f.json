{
  "id": "15e2e2cf-ddf6-4ecb-ab0c-0e20845fd30f",
  "title": "Vibecoding Prompts",
  "link": "https://feld.com/archives/2025/05/vibecoding-prompts/",
  "description": "A long time ago, in a galaxy far, far away, I was a CTO of a large, fast-growing public company. Well, I was a Quasi CTO in the same way […] The post Vibecoding Prompts appeared first on Feld Thoughts.",
  "author": "Brad Feld",
  "published": "Sat, 31 May 2025 18:33:20 +0000",
  "source": "https://feld.com/feed",
  "categories": [
    "Code",
    "vibe coding",
    "system prompt",
    "michael natkin"
  ],
  "byline": "Brad Feld",
  "length": 4899,
  "excerpt": "A long time ago, in a galaxy far, far away, I was a CTO of a large, fast-growing public company. Well, I was a Quasi CTO in the same way […]",
  "siteName": "Feld Thoughts",
  "favicon": "https://i0.wp.com/feld.com/wp-content/uploads/2021/10/favicon-1.png?fit=16%2C16\u0026ssl=1",
  "text": "A long time ago, in a galaxy far, far away, I was a CTO of a large, fast-growing public company. Well, I was a Quasi CTO in the same way the United States and the First French Republic had a Quasi War between 1798 and 1800 (basically, sort of a war; sort of a CTO … but not really.)As I rediscover my second love (my first love is Amy), I’ve relied on several mentors to help guide me. One of them is Michael Natkin, who has been helping me with Cursor in the background at a few key moments.He recently sent me his most recent Vibecoding prompt for Cursor, which builds on a tweet by @vasumanmoza.Given all the things I’ve learned about what works and doesn’t work, often through trial and error (and rolling back things when Cursor+Claude go off the rails), Michael’s approach was a nice improvement over where I had gotten to. So – sharing it below (with Michael’s permission).I recommend using Claude Sonnet 4, and you can do all of this entirely in Cursor. This applies whether you are creating a greenfield project or making a substantial change to an existing one. You can repeat the process with architecture2.md, tasks2.md as needed, don’t throw them away.Be sure to install the Puppeteer MCP so it can test in the browser.OverviewDo the architecture step, see belowReview architecture.md, and make any changes you want – either by hand editing, asking for changes, or starting over. Particularly note if it is overcomplicating things, and ask for the simplifications you want.Do the task planning step, see belowReview tasks.md, and make any changes you want – either by hand editing, asking for changes, or starting over. You should end up with, sa,y at least 10 steps, and often 25 or more. It will typically arrange them in phases, which is nice. Again, look for and correct excess complication.Start a new chatGive it the coding step prompt. It should execute the first task very cheerfully. After it is done, review it and then say “go” to get the next step. If it screwed up, you can either tell it to fix whatever it did wrong, or more usually restore checkpoint in cursor, and tell it something like “go, but use litellm for that” or whatever you need to be different.Rinse and repeat!Optionally, esp. If you are going to be away for a while, you can sa,y “I’m going to be afk for a bit. You can keep going on steps without waiting for me as long as both the manual and automated tests pass.” It will still stop after 25 steps or if it ignores you and runs something interactive, but it often makes a lot of progress.Highly recommended: run /Generate Cursor Rules after each stepSomething I haven’t tried yet, but should work well – tell it to mark what is complete in tasks.md, so you can start fresh chats periodically and not keep such a huge message history.Architecture Step – GreenfieldI’m building a [description of your product – the more detailed the better].[Any tech requirements, i.e. use Python for backend and React + Material-UI for the frontend. The more the better.] Put the full architecture in architecture.md– File + folder structure– What each part does– Where the state lives, how services connectFormat this entire document in Markdown.Architecture Step – Existing CodebaseI want to modify this codebase so that it performs [whatever].Do all of your work consistently with the existing style and architecture.Put the full architecture in architecture.md– File + folder structure– What each part does– Where the state lives, how services connectFormat this entire document in Markdown.Task Planning StepUsing that architecture, write a granular step-by-step plan to build the MVP.Each task should:– Be incredibly small + testable – it should both have unit tests that you can run, and also a manual test that you can run from the command line or using the browser tool– Have a clear start + end– Focus on one concernI’ll be passing this off to an engineering LLM that’ll be instructed to complete one task at a time, allowing me to test in between. Save it as tasks.md.Coding Step You’re an engineer building this codebase.You’ve been given @tasks.md and @architecture.md – Read both carefully. There should be no ambiguity about what we’re building.– Follow tasks.md and complete one task at a time, then run the automated tests you’ve written and use the command line or browser tool to manually test– After each task is completed, stop. I’ll test it and review your code. If it works, commit to git and move to the next one.”You are already in the correct directory. Build the project here. DO NOT CREATE A SUBDIRECTORY.You have my permission to delete files IN THIS DIRECTORY without asking for approval.BE VERY CAREFUL never to run any interactive commands in the foreground, because you’ll be stuck. For example, be sure to run the development server once, in the background with hot reloading.Example of What A Task Step Looks LikeOne step of building:",
  "image": "https://feld.com/wp-content/uploads/2025/05/create-a-high-resolution-highly-detailed-featured-image-for-a-blog.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cp\u003eA long time ago, in a galaxy far, far away, I was a CTO of a large, fast-growing public company. Well, I was a Quasi CTO in the same way the \u003ca href=\"https://en.wikipedia.org/wiki/Quasi-War\"\u003eUnited States and the First French Republic had a Quasi War between 1798 and 1800\u003c/a\u003e (basically, sort of a war; sort of a CTO … but not really.)\u003c/p\u003e\u003cp\u003eAs I rediscover my \u003ca href=\"https://en.wikipedia.org/wiki/Computer_programming\"\u003esecond love \u003c/a\u003e(my first love is Amy), I’ve relied on several mentors to help guide me. One of them is \u003ca href=\"https://x.com/michaelnatkin\"\u003eMichael Natkin\u003c/a\u003e, who has been helping me with Cursor in the background at a few key moments.\u003c/p\u003e\u003cp\u003eHe recently sent me his most recent Vibecoding prompt for Cursor, which builds on a tweet by \u003ca href=\"https://x.com/vasumanmoza\"\u003e@vasumanmoza\u003c/a\u003e.\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp\u003eGiven all the things I’ve learned about what works and doesn’t work, often through trial and error (and rolling back things when Cursor+Claude go off the rails), Michael’s approach was a nice improvement over where I had gotten to. So – sharing it below (with Michael’s permission).\u003c/p\u003e\u003chr/\u003e\u003cp\u003eI recommend using Claude Sonnet 4, and you can do all of this entirely in Cursor. This applies whether you are creating a greenfield project or making a substantial change to an existing one. You can repeat the process with architecture2.md, tasks2.md as needed, don’t throw them away.\u003c/p\u003e\u003cp\u003eBe sure to install the Puppeteer MCP so it can test in the browser.\u003c/p\u003e\u003ch2\u003eOverview\u003c/h2\u003e\u003col\u003e\u003cli\u003eDo the architecture step, see below\u003c/li\u003e\u003cli\u003eReview architecture.md, and make any changes you want – either by hand editing, asking for changes, or starting over. Particularly note if it is overcomplicating things, and ask for the simplifications you want.\u003c/li\u003e\u003cli\u003eDo the task planning step, see below\u003c/li\u003e\u003cli\u003eReview tasks.md, and make any changes you want – either by hand editing, asking for changes, or starting over. You should end up with, sa,y at least 10 steps, and often 25 or more. It will typically arrange them in phases, which is nice. Again, look for and correct excess complication.\u003c/li\u003e\u003cli\u003eStart a new chat\u003c/li\u003e\u003cli\u003eGive it the coding step prompt. It should execute the first task very cheerfully. \u003c/li\u003e\u003cli\u003eAfter it is done, review it and then say “go” to get the next step. If it screwed up, you can either tell it to fix whatever it did wrong, or more usually restore checkpoint in cursor, and tell it something like “go, but use litellm for that” or whatever you need to be different.\u003c/li\u003e\u003cli\u003eRinse and repeat!\u003c/li\u003e\u003cli\u003eOptionally, esp. If you are going to be away for a while, you can sa,y “I’m going to be afk for a bit. You can keep going on steps without waiting for me as long as both the manual and automated tests pass.” It will still stop after 25 steps or if it ignores you and runs something interactive, but it often makes a lot of progress.\u003c/li\u003e\u003cli\u003eHighly recommended: run /Generate Cursor Rules after each step\u003c/li\u003e\u003c/ol\u003e\u003cp\u003eSomething I haven’t tried yet, but should work well – tell it to mark what is complete in \u003ca href=\"http://tasks.md\"\u003etasks.md\u003c/a\u003e, so you can start fresh chats periodically and not keep such a huge message history.\u003c/p\u003e\u003ch2\u003eArchitecture Step – Greenfield\u003c/h2\u003e\u003cp\u003eI’m building a [description of your product – the more detailed the better].\u003cbr/\u003e[Any tech requirements, i.e. use Python for backend and React + Material-UI for the frontend. The more the better.] \u003cbr/\u003ePut the full architecture in architecture.md\u003cbr/\u003e– File + folder structure\u003cbr/\u003e– What each part does\u003cbr/\u003e– Where the state lives, how services connect\u003cbr/\u003eFormat this entire document in Markdown.\u003c/p\u003e\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" fetchpriority=\"high\" decoding=\"async\" width=\"1600\" height=\"925\" src=\"https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXfq9UfLuzi82RghsrBxMDsINaW5-Dqa11509Cpu7Lfi_JL3bYCL05cAD8PzcXtdsyaHXV9UzNibZ_HFmOUo5s4-wmh1C8ijkA-216vANJ5PG4sATGdfNGpRgxHyHw2WOKsQ85M1Rg.png?resize=1600%2C925\u0026amp;ssl=1\" alt=\"A screenshot of a document titled \u0026#39;Multi-LLM Chat Tool Architecture\u0026#39;, outlining the overview, tech stack, and project structure for the application.\" srcset=\"https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXfq9UfLuzi82RghsrBxMDsINaW5-Dqa11509Cpu7Lfi_JL3bYCL05cAD8PzcXtdsyaHXV9UzNibZ_HFmOUo5s4-wmh1C8ijkA-216vANJ5PG4sATGdfNGpRgxHyHw2WOKsQ85M1Rg.png?w=1600\u0026amp;ssl=1 1600w, https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXfq9UfLuzi82RghsrBxMDsINaW5-Dqa11509Cpu7Lfi_JL3bYCL05cAD8PzcXtdsyaHXV9UzNibZ_HFmOUo5s4-wmh1C8ijkA-216vANJ5PG4sATGdfNGpRgxHyHw2WOKsQ85M1Rg.png?resize=300%2C173\u0026amp;ssl=1 300w, https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXfq9UfLuzi82RghsrBxMDsINaW5-Dqa11509Cpu7Lfi_JL3bYCL05cAD8PzcXtdsyaHXV9UzNibZ_HFmOUo5s4-wmh1C8ijkA-216vANJ5PG4sATGdfNGpRgxHyHw2WOKsQ85M1Rg.png?resize=1024%2C592\u0026amp;ssl=1 1024w, https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXfq9UfLuzi82RghsrBxMDsINaW5-Dqa11509Cpu7Lfi_JL3bYCL05cAD8PzcXtdsyaHXV9UzNibZ_HFmOUo5s4-wmh1C8ijkA-216vANJ5PG4sATGdfNGpRgxHyHw2WOKsQ85M1Rg.png?resize=768%2C444\u0026amp;ssl=1 768w, https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXfq9UfLuzi82RghsrBxMDsINaW5-Dqa11509Cpu7Lfi_JL3bYCL05cAD8PzcXtdsyaHXV9UzNibZ_HFmOUo5s4-wmh1C8ijkA-216vANJ5PG4sATGdfNGpRgxHyHw2WOKsQ85M1Rg.png?resize=1536%2C888\u0026amp;ssl=1 1536w, https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXfq9UfLuzi82RghsrBxMDsINaW5-Dqa11509Cpu7Lfi_JL3bYCL05cAD8PzcXtdsyaHXV9UzNibZ_HFmOUo5s4-wmh1C8ijkA-216vANJ5PG4sATGdfNGpRgxHyHw2WOKsQ85M1Rg.png?resize=1200%2C694\u0026amp;ssl=1 1200w, https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXfq9UfLuzi82RghsrBxMDsINaW5-Dqa11509Cpu7Lfi_JL3bYCL05cAD8PzcXtdsyaHXV9UzNibZ_HFmOUo5s4-wmh1C8ijkA-216vANJ5PG4sATGdfNGpRgxHyHw2WOKsQ85M1Rg.png?resize=1245%2C720\u0026amp;ssl=1 1245w\" sizes=\"(max-width: 1000px) 100vw, 1000px\"/\u003e\u003c/figure\u003e\u003ch2\u003eArchitecture Step – Existing Codebase\u003c/h2\u003e\u003cp\u003eI want to modify this codebase so that it performs [whatever].\u003cbr/\u003eDo all of your work consistently with the existing style and architecture.\u003cbr/\u003ePut the full architecture in architecture.md\u003cbr/\u003e– File + folder structure\u003cbr/\u003e– What each part does\u003cbr/\u003e– Where the state lives, how services connect\u003cbr/\u003eFormat this entire document in Markdown.\u003c/p\u003e\u003ch2\u003eTask Planning Step\u003c/h2\u003e\u003cp\u003eUsing that architecture, write a granular step-by-step plan to build the MVP.\u003cbr/\u003eEach task should:\u003cbr/\u003e– Be incredibly small + testable – it should both have unit tests that you can run, and also a manual test that you can run from the command line or using the browser tool\u003cbr/\u003e– Have a clear start + end\u003cbr/\u003e– Focus on one concern\u003cbr/\u003eI’ll be passing this off to an engineering LLM that’ll be instructed to complete one task at a time, allowing me to test in between. \u003cbr/\u003eSave it as tasks.md.\u003c/p\u003e\u003ch2\u003eCoding Step \u003c/h2\u003e\u003cp\u003eYou’re an engineer building this codebase.\u003cbr/\u003eYou’ve been given @tasks.md and @architecture.md \u003cbr/\u003e– Read both carefully. There should be no ambiguity about what we’re building.\u003cbr/\u003e– Follow tasks.md and complete one task at a time, then run the automated tests you’ve written and use the command line or browser tool to manually test\u003cbr/\u003e– After each task is completed, stop. I’ll test it and review your code. If it works, commit to git and move to the next one.”\u003cbr/\u003eYou are already in the correct directory. Build the project here. DO NOT CREATE A SUBDIRECTORY.\u003cbr/\u003eYou have my permission to delete files IN THIS DIRECTORY without asking for approval.\u003cbr/\u003eBE VERY CAREFUL never to run any interactive commands in the foreground, because you’ll be stuck. For example, be sure to run the development server once, in the background with hot reloading.\u003c/p\u003e\u003ch2\u003eExample of What A Task Step Looks Like\u003c/h2\u003e\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" decoding=\"async\" width=\"1560\" height=\"994\" src=\"https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXeX8NfrXQ7WEr-_j-MMMfvOuu7d5LyyGAIMz9ZiJQG2lLb0Gtg4zjbCp5ERoKPsNyerfZGH5O7fipOxBrohXTM4U1qKEzEWtMfjZT6VQjxb9Ii6Hgn6a5lqNRWr4h5-4-LEHjCHFQ.png?resize=1560%2C994\u0026amp;ssl=1\" alt=\"Code snippet showing a Task to create an API service client in TypeScript, including definitions for ChatRequest and ModelResponse interfaces and an asynchronous function to send chat requests.\" srcset=\"https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXeX8NfrXQ7WEr-_j-MMMfvOuu7d5LyyGAIMz9ZiJQG2lLb0Gtg4zjbCp5ERoKPsNyerfZGH5O7fipOxBrohXTM4U1qKEzEWtMfjZT6VQjxb9Ii6Hgn6a5lqNRWr4h5-4-LEHjCHFQ.png?w=1560\u0026amp;ssl=1 1560w, https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXeX8NfrXQ7WEr-_j-MMMfvOuu7d5LyyGAIMz9ZiJQG2lLb0Gtg4zjbCp5ERoKPsNyerfZGH5O7fipOxBrohXTM4U1qKEzEWtMfjZT6VQjxb9Ii6Hgn6a5lqNRWr4h5-4-LEHjCHFQ.png?resize=300%2C191\u0026amp;ssl=1 300w, https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXeX8NfrXQ7WEr-_j-MMMfvOuu7d5LyyGAIMz9ZiJQG2lLb0Gtg4zjbCp5ERoKPsNyerfZGH5O7fipOxBrohXTM4U1qKEzEWtMfjZT6VQjxb9Ii6Hgn6a5lqNRWr4h5-4-LEHjCHFQ.png?resize=1024%2C652\u0026amp;ssl=1 1024w, https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXeX8NfrXQ7WEr-_j-MMMfvOuu7d5LyyGAIMz9ZiJQG2lLb0Gtg4zjbCp5ERoKPsNyerfZGH5O7fipOxBrohXTM4U1qKEzEWtMfjZT6VQjxb9Ii6Hgn6a5lqNRWr4h5-4-LEHjCHFQ.png?resize=768%2C489\u0026amp;ssl=1 768w, https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXeX8NfrXQ7WEr-_j-MMMfvOuu7d5LyyGAIMz9ZiJQG2lLb0Gtg4zjbCp5ERoKPsNyerfZGH5O7fipOxBrohXTM4U1qKEzEWtMfjZT6VQjxb9Ii6Hgn6a5lqNRWr4h5-4-LEHjCHFQ.png?resize=1536%2C979\u0026amp;ssl=1 1536w, https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXeX8NfrXQ7WEr-_j-MMMfvOuu7d5LyyGAIMz9ZiJQG2lLb0Gtg4zjbCp5ERoKPsNyerfZGH5O7fipOxBrohXTM4U1qKEzEWtMfjZT6VQjxb9Ii6Hgn6a5lqNRWr4h5-4-LEHjCHFQ.png?resize=1200%2C765\u0026amp;ssl=1 1200w, https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXeX8NfrXQ7WEr-_j-MMMfvOuu7d5LyyGAIMz9ZiJQG2lLb0Gtg4zjbCp5ERoKPsNyerfZGH5O7fipOxBrohXTM4U1qKEzEWtMfjZT6VQjxb9Ii6Hgn6a5lqNRWr4h5-4-LEHjCHFQ.png?resize=1130%2C720\u0026amp;ssl=1 1130w\" sizes=\"(max-width: 1000px) 100vw, 1000px\"/\u003e\u003c/figure\u003e\u003ch3\u003eOne step of building:\u003c/h3\u003e\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" decoding=\"async\" width=\"1010\" height=\"950\" src=\"https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXcfjEd68qmGHOaJ_Ndy53sYFkNe7h1xoFBwMYkN7U2cT4K3g2qV9PwQDcYbJC9FFKcb2tk0xpWrXC1FBM2wBo-l8dU7uulm5vp6cPTjHo2UZMoCDS06KAFFAb6tcyqsHvcRUa3l.png?resize=1010%2C950\u0026amp;ssl=1\" alt=\"Code snippet showing the creation of an API service client in TypeScript, defining interfaces for chat requests and model responses.\" srcset=\"https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXcfjEd68qmGHOaJ_Ndy53sYFkNe7h1xoFBwMYkN7U2cT4K3g2qV9PwQDcYbJC9FFKcb2tk0xpWrXC1FBM2wBo-l8dU7uulm5vp6cPTjHo2UZMoCDS06KAFFAb6tcyqsHvcRUa3l.png?w=1010\u0026amp;ssl=1 1010w, https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXcfjEd68qmGHOaJ_Ndy53sYFkNe7h1xoFBwMYkN7U2cT4K3g2qV9PwQDcYbJC9FFKcb2tk0xpWrXC1FBM2wBo-l8dU7uulm5vp6cPTjHo2UZMoCDS06KAFFAb6tcyqsHvcRUa3l.png?resize=300%2C282\u0026amp;ssl=1 300w, https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXcfjEd68qmGHOaJ_Ndy53sYFkNe7h1xoFBwMYkN7U2cT4K3g2qV9PwQDcYbJC9FFKcb2tk0xpWrXC1FBM2wBo-l8dU7uulm5vp6cPTjHo2UZMoCDS06KAFFAb6tcyqsHvcRUa3l.png?resize=768%2C722\u0026amp;ssl=1 768w, https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXcfjEd68qmGHOaJ_Ndy53sYFkNe7h1xoFBwMYkN7U2cT4K3g2qV9PwQDcYbJC9FFKcb2tk0xpWrXC1FBM2wBo-l8dU7uulm5vp6cPTjHo2UZMoCDS06KAFFAb6tcyqsHvcRUa3l.png?resize=765%2C720\u0026amp;ssl=1 765w\" sizes=\"(max-width: 1000px) 100vw, 1000px\"/\u003e\u003c/figure\u003e\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" decoding=\"async\" width=\"1022\" height=\"1216\" src=\"https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXdYRf9f9gYAWwSOqF0YqAHSJvALkf2iBMgTilp-p7aoQUcVT2RDKdG90ukuVqbQkUTu86rVK3I8jLZsQl3msCWDmBgimhkEi9xKmcCsNX3aPlwRKYg2Im4ynxPXdTuRbtffpy5hUw.png?resize=1022%2C1216\u0026amp;ssl=1\" alt=\"Terminal output showing commands executed to test an API client and check TypeScript compilation.\" srcset=\"https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXdYRf9f9gYAWwSOqF0YqAHSJvALkf2iBMgTilp-p7aoQUcVT2RDKdG90ukuVqbQkUTu86rVK3I8jLZsQl3msCWDmBgimhkEi9xKmcCsNX3aPlwRKYg2Im4ynxPXdTuRbtffpy5hUw.png?w=1022\u0026amp;ssl=1 1022w, https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXdYRf9f9gYAWwSOqF0YqAHSJvALkf2iBMgTilp-p7aoQUcVT2RDKdG90ukuVqbQkUTu86rVK3I8jLZsQl3msCWDmBgimhkEi9xKmcCsNX3aPlwRKYg2Im4ynxPXdTuRbtffpy5hUw.png?resize=252%2C300\u0026amp;ssl=1 252w, https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXdYRf9f9gYAWwSOqF0YqAHSJvALkf2iBMgTilp-p7aoQUcVT2RDKdG90ukuVqbQkUTu86rVK3I8jLZsQl3msCWDmBgimhkEi9xKmcCsNX3aPlwRKYg2Im4ynxPXdTuRbtffpy5hUw.png?resize=861%2C1024\u0026amp;ssl=1 861w, https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXdYRf9f9gYAWwSOqF0YqAHSJvALkf2iBMgTilp-p7aoQUcVT2RDKdG90ukuVqbQkUTu86rVK3I8jLZsQl3msCWDmBgimhkEi9xKmcCsNX3aPlwRKYg2Im4ynxPXdTuRbtffpy5hUw.png?resize=768%2C914\u0026amp;ssl=1 768w, https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXdYRf9f9gYAWwSOqF0YqAHSJvALkf2iBMgTilp-p7aoQUcVT2RDKdG90ukuVqbQkUTu86rVK3I8jLZsQl3msCWDmBgimhkEi9xKmcCsNX3aPlwRKYg2Im4ynxPXdTuRbtffpy5hUw.png?resize=908%2C1080\u0026amp;ssl=1 908w, https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXdYRf9f9gYAWwSOqF0YqAHSJvALkf2iBMgTilp-p7aoQUcVT2RDKdG90ukuVqbQkUTu86rVK3I8jLZsQl3msCWDmBgimhkEi9xKmcCsNX3aPlwRKYg2Im4ynxPXdTuRbtffpy5hUw.png?resize=605%2C720\u0026amp;ssl=1 605w\" sizes=\"(max-width: 1000px) 100vw, 1000px\"/\u003e\u003c/figure\u003e\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" decoding=\"async\" width=\"1024\" height=\"1228\" src=\"https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXcC-aXLKpwLi_KCU3703bsHdCvOhWI36PQNt1KFLrcOYWsG9ERWBTCha41qfYxrIwH1UjZA6XLQXKPF0foa1hNuxWinrw12toNVMdJrRKMZjHllCBBAt9GEneGZob01PqMnP-tB.png?resize=1024%2C1228\u0026amp;ssl=1\" alt=\"Code snippet displaying TypeScript code for testing API interfaces, with console logs indicating successful imports and task completion.\" srcset=\"https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXcC-aXLKpwLi_KCU3703bsHdCvOhWI36PQNt1KFLrcOYWsG9ERWBTCha41qfYxrIwH1UjZA6XLQXKPF0foa1hNuxWinrw12toNVMdJrRKMZjHllCBBAt9GEneGZob01PqMnP-tB.png?w=1024\u0026amp;ssl=1 1024w, https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXcC-aXLKpwLi_KCU3703bsHdCvOhWI36PQNt1KFLrcOYWsG9ERWBTCha41qfYxrIwH1UjZA6XLQXKPF0foa1hNuxWinrw12toNVMdJrRKMZjHllCBBAt9GEneGZob01PqMnP-tB.png?resize=250%2C300\u0026amp;ssl=1 250w, https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXcC-aXLKpwLi_KCU3703bsHdCvOhWI36PQNt1KFLrcOYWsG9ERWBTCha41qfYxrIwH1UjZA6XLQXKPF0foa1hNuxWinrw12toNVMdJrRKMZjHllCBBAt9GEneGZob01PqMnP-tB.png?resize=854%2C1024\u0026amp;ssl=1 854w, https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXcC-aXLKpwLi_KCU3703bsHdCvOhWI36PQNt1KFLrcOYWsG9ERWBTCha41qfYxrIwH1UjZA6XLQXKPF0foa1hNuxWinrw12toNVMdJrRKMZjHllCBBAt9GEneGZob01PqMnP-tB.png?resize=768%2C921\u0026amp;ssl=1 768w, https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXcC-aXLKpwLi_KCU3703bsHdCvOhWI36PQNt1KFLrcOYWsG9ERWBTCha41qfYxrIwH1UjZA6XLQXKPF0foa1hNuxWinrw12toNVMdJrRKMZjHllCBBAt9GEneGZob01PqMnP-tB.png?resize=901%2C1080\u0026amp;ssl=1 901w, https://i0.wp.com/feld.com/wp-content/uploads/2025/05/AD_4nXcC-aXLKpwLi_KCU3703bsHdCvOhWI36PQNt1KFLrcOYWsG9ERWBTCha41qfYxrIwH1UjZA6XLQXKPF0foa1hNuxWinrw12toNVMdJrRKMZjHllCBBAt9GEneGZob01PqMnP-tB.png?resize=600%2C720\u0026amp;ssl=1 600w\" sizes=\"(max-width: 1000px) 100vw, 1000px\"/\u003e\u003c/figure\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": "2025-05-31T18:33:20Z",
  "modifiedTime": "2025-05-31T18:33:22Z"
}
