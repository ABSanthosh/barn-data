{
  "id": "acc33cbd-97e6-4eaa-8ce3-0bc363c4d788",
  "title": "25 Years of Dillo",
  "link": "https://dillo-browser.github.io/25-years/",
  "description": "Article URL: https://dillo-browser.github.io/25-years/ Comments URL: https://news.ycombinator.com/item?id=42426589 Points: 42 # Comments: 3",
  "author": "todsacerdoti",
  "published": "Sun, 15 Dec 2024 23:06:15 +0000",
  "source": "https://hnrss.org/frontpage",
  "categories": null,
  "byline": "",
  "length": 12264,
  "excerpt": "Back in 1999, a group of developers lead by Jorge Arellano Cid forked the Gzilla/Armadillo code originally developed by Raph Levien, and began working on what is now known as the Dillo web browser.",
  "siteName": "",
  "favicon": "https://dillo-browser.github.io/img/favicon.png",
  "text": "Written on 2024-12-15 by Rodrigo Arias Mallo Back in 1999, a group of developers lead by Jorge Arellano Cid forked the Gzilla/Armadillo code originally developed by Raph Levien, and began working on what is now known as the Dillo web browser. Today, as of December of 2024, Dillo is 25 years old! During this long journey, the project has seen a lot of changes and has stalled several times, but it managed to survive to this day. As a commemoration of this milestone, so I wanted to write a short history of the project. Notice that Jorge had lead the project from 1999 until 2019, and as of today, we don't have more news about him anymore. I hope he is okay and just decided to move on to other projects. Since then, I (Rodrigo) decided to resurrect the project and bring it back to life. I have no relationship with the previous developers, but I try to do my best to keep the original goals intact. This document tries to tells the history as I have observed it through the pieces I was able to collect from the mailing list, the changelog and the git history. GTK period (1999 - 2006) When Dillo was forked, it was using GTK 1.0 as the UI library. The first releases were done in December of 1999 as recorded in the ChangeLog. At the time, this is how Gzilla 0.3.9 looked like: Dillo 0.8.3, source WikiMedia During the initial development, Jorge first designed and wrote the naming convention for the function names (like prefixing them with a_ when they are public) or using 3 spaces for indentation, and began adjusting the code base to follow the same convention. On March of 2000, the license was changed to the GPLv3 with the permission of Raph Levien (the main developer of Gzilla/Armadillo). The browser experimented a large rewrite with the idea to maintain several flows of communication following a signal driven approach. This work ended up in the publication Network programming internals of the Dillo Web browser by Jorge Arellano-Cid and H.H. Von Brand. This work would later derive in the Concomitant Control Chain (CCC), the mechanism that Dillo still uses today to track multiple connections and among its internal modules. Sebastian Geerken began working on the code base at least since June of 2000. First submitting small patches and then moving to the rendering engine, of which he became the main architect. The rendering engine is one of the most important components of the browser, which essentially reads a tree of elements and determines the size and position of each element on the screen, like the words of paragraphs and images. The support for HTML and CSS features started to grow during the coming years, specially for tables and text elements. Shortly after GTK2 was released, the team was considering porting Dillo to it, but there were some concerns regarding the complexity and size of the new GTK version. On October of 2003, Jorge asked the FLTK maintainer Michael Sweet if it would be feasible to port Dillo to FLTK, as it was considered to align better with the objectives of speed and stability: We were following our plan to port dillo from GTK1 (currently used TK) to GTK2, when one of our list subscribers suggested considering FLTK because of shared philosophy backgrounds The team decided to focus on FLTK 2 instead of GTK 2.0, as it was considered far more bloated and slow. Notice that at the time, FLTK 2 was not yet released, but is was planning to be released \"soon\". On August 2004, Sebastian decided to make an interesting design decision, to make the Dillo widget toolkit independent. This way it was posible to continue the development of GTK1 and FLTK2 in parallel, among other benefits. The most complex part is certainly Dw, since it is tightly bound to Gtk+. By all means, I want to prevent, that there exist different versions of Dw, with different features (e.g., when the development of the Gtk+ version continues, while the FLTK version is developed), which are hard to integrate. For this reason (and others), I'm currently working on a redesign of Dw, which will make Dw toolkit independant. This is not the single goal of this redesign, it will also make some other features possible, e.g. a preview window, in which the whole page may be seen with reduced size, also, it will make reusage of Dw within graphical plugins possibel, and some more. (Actually, the idea for this design is already older, except the platform independency, but this was simple to add.) During this period, the DPI mechanism (plugins) was improved and some functionality was moved to external programs that talk to the browser via the DPI protocol, like the downloads, bookmarks, FTP and also HTTPS. The version 0.8.3 released on October, 2004 had already HTTPS support. Here is how it looked like (still using GTK1): Dillo 0.8.3, source WikiMedia During the following years, the development of the FLTK port was underway. The functionality that was provided by glib was implemented in a custom Dlib library so Dillo would not need to depend on glib anymore. On February 2005, Jorge and Sebastian gave a talk at FOSDEM about the Dillo browser. Unfortunately, there is no recording of that talk. But shortly after, Jorge gave another talk at LSM in 2005 which is was recorded, which was the first time the FLTK2 implementation was shown. Picture of Jorge from the LSM 2005 video, from the YouTube video The last release that still used GTK1 was 0.8.6 on April, 2006. We will have to wait two years until the next release 2.0.0 was finally published with the port to FLTK2 completed. FLTK 2 period (2005 - 2011) The porting to FLTK2 was intended to make the browser smaller and provide other features like antialiasing. On April 2005, Jorge reported that the port to FLTK2 was making great progress. Here are some good news with our current progress in porting dillo to FLTK. It has being going-on very fast and we have made great progress so far. Here is how the browser looked like with FTLK2: First versions of Dillo using FLTK2 During this time however, the source code for the new FLTK2 port was not available in the CVS to the public. Instead, Jorge was focusing on rising funding to cover the project development from some interested companies. On March 2006, Jorge reported that so far it was not being successful in attracting funding. The project faced a serious risk of stalling. After mid 2006, there were no more releases of Dillo until 2008, and so far no success in getting more developers involved or funding for the project. The project was considered frozen or stalled and the FLTK2 code remained closed source. On April 2007, Jorge reports that he had intentions to release the FLTK2 port as soon as Sebastian agrees. In fact, I think it was more or less 6 months ago, after some emails with Andrew Tanenbaum, who finally helped me to see that it was a good time to release the code again. Since then, I've tried to contact Sebastian to agree on this. On September 30, 2007, Jorge finally announces that the FLTK2 port is now available: This is an alpha release of the next generation of the Dillo web browser. The code underwent a major rewrite: significant parts of the codebase were ported to C++, and the rendering engine now uses the FLTK2 library instead of GTK1. Please read the README inside dillo's tarball. Developers willing to join the project and contribute are highly encouraged. Sebastian did an excellent work documenting the new dillo widget engine (just run doxygen inside DW tree). This move started a lot of patches from other developers that were quickly integrated in the FLTK2 port. These contributions pushed Dillo towards an active state of development again. On September of 2008, Jorge announced the support for tabs, which was included for the release. After a lot of bug fixing, the next version based on FLTK2 was ready and on October of 2008, Dillo 2.0.0 was finally released. A year later, on July of 2009, Jorge announces that he is now a father, and his time for developing Dillo will (understandably) be affected. I'm quite happy to let you know that yesterday 19 Aug [July], my first daughter Lisa was born! Everything is OK, we're vey happy with this \"release\" :) and I just wanted to communicate it here, so you more or less know or understand my activities (or lack of) in the next days. More features and bug fixes were added in the coming releases, until the last release of the 2.X series, the version 2.2.1 released on 2011. During this period, we don't observe more patches from Sebastian or emails in the mailing list. Here is how Dillo was looking in the 2.2 version, very similar as how it looks today: Dillo 2.2, source TuxArena During this period, another problem was coming in FLTK. The development for FLTK2 was considered stalled and there was no official version released. This caused issued in downstream distributions, as Dillo required to link with a FLTK package that was not available. So, the team decided to switch to FLTK 1.3 as soon as it was released, and bump Dillo to the series 3.X. FLTK 1.3 period (2011 - 2016) On June 2011, with the FLTK 1.3 release done, the port of Dillo to FLTK 1.3 was underway. Only a few months later, the first 3.0.0 release using FLTK 1.3 was published. On July of 2012, Sebastian presented a new hyphenation algorithm that implements the same mechanism used in TeX. This new implementation makes its way to the 3.0.3 release on April of 2013. Several releases were made until the version 3.0.5 on June 2015. During these last two years, we see a shift in the amount of commits introduced by Sebastian, which grow quite substantially. On that time, Sebastian was working on the GROWS redesign, which changed the way the size of the widgets (elements of the page) where computed. Sadly, on October 2016, Sebastian passed away, leaving much of his work not included into a new release. Since then, the development quickly stalled until in 2019 Jorge sent his last email recorded by the mailing list, recommending a user to simply use the current version of the repository, rather than waiting for the 3.1 release: \u003e According to the info on \u003e https://hg.dillo.org/dillo/raw-file/default/ChangeLog, dillo-3.1 [not released yet]. \u003e \u003e I will probably wait until they release it officially. IMHO, you should get it. It's being stable for years. -- Cheers Jorge.- After this moment, the project began to deteriorate. On 2022 the DNS domain of dillo.org was lost, causing the website, the mercurial repository, the mailing list and the email server to disappear. The project quickly became abandoned, as there was no more developer activity anywhere. The dillo.org site now became a weird zombie copy of the once original website, but now plagued with SPAM in a Wordpress blog. The resurrection (2024 - present) On December of 2023, I began spending some time patching Dillo to make it build again. I tried to fix some simple bugs, and when I saw that the Atari forum had managed to port Dillo to Atari (!) based on my repo I though that it may be feasible to try to resurrect it. I commented it on Hacker News and it got surprised on the of interest it drew. I first made a GitHub organization to hold the Git repositories and used the GitHub pages to make a new Dillo website. I tried to get a copy of all materials I could, and upload them to the new website and mailing list. I tried to fix all the issues to finally make the 3.1.0 release, and after some months of work in my free time, I managed to release it on May of 2024. It caught the attention of several news sites and soon later it made its way to several Linux distributions. As of today, 15 of December of 2024, I continue to maintain the project, and we are getting some new contributors which help with patches and discussion about the development. We are still far from having enough developers to cover all the issues, but we are slowly making some progress. The last release of Dillo is 3.1.1, and this is what is looks like when loading the new Dillo website: Dillo 3.1.1 in my computer",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003carticle\u003e\n\n\u003ci\u003eWritten on 2024-12-15 by Rodrigo Arias Mallo\u003c/i\u003e\n\n\u003cp\u003eBack in 1999, a group of developers lead by Jorge Arellano Cid forked the\n\u003ca href=\"https://levien.com/gzilla/\"\u003eGzilla/Armadillo\u003c/a\u003e code originally\ndeveloped by Raph Levien, and began working on what is now known as the Dillo\nweb browser.\n\n\u003c/p\u003e\u003cp\u003eToday, as of December of 2024, \u003cb\u003eDillo is 25 years old!\u003c/b\u003e\u003c/p\u003e\n\n\u003cp\u003eDuring this long journey, the project has seen a lot of changes and has\nstalled several times, but it managed to survive to this day. As a commemoration\nof this milestone, so I wanted to write a short history of the project.\u003c/p\u003e\n\n\u003cp\u003eNotice that Jorge had lead the project from 1999 until 2019, and as of\ntoday, we don\u0026#39;t have more news about him anymore. I hope he is okay and just\ndecided to move on to other projects. Since then, I (Rodrigo) decided to\nresurrect the project and bring it back to life. I have no relationship with the\nprevious developers, but I try to do my best to keep the original goals intact.\n\n\u003c/p\u003e\u003cp\u003eThis document tries to tells the history as I have observed it through the pieces I was\nable to collect from the\n\u003ca href=\"https://lists.mailman3.com/hyperkitty/list/dillo-dev@mailman3.com/latest\"\u003emailing\n\tlist\u003c/a\u003e, the\n\u003ca href=\"https://raw.githubusercontent.com/dillo-browser/dillo/refs/heads/master/ChangeLog\"\u003echangelog\u003c/a\u003e\nand the\n\u003ca href=\"https://github.com/dillo-browser/dillo/commits/master/\"\u003egit\n  history\u003c/a\u003e.\n\n\u003c/p\u003e\u003ch3\u003eGTK period (1999 - 2006)\u003c/h3\u003e\n\n\u003cp\u003eWhen Dillo was forked, it was using GTK 1.0 as the UI library. The first\nreleases were done in December of 1999 as recorded in the ChangeLog. At the\ntime, this is how Gzilla 0.3.9 looked like:\n\n\u003c/p\u003e\u003cfigure\u003e\n  \u003ca href=\"https://dillo-browser.github.io/25-years/img/gzilla-0.3.9.png\"\u003e\n    \u003cimg alt=\"Gzilla 0.3.9\" src=\"https://dillo-browser.github.io/25-years/thumb/gzilla-0.3.9.jpg\"/\u003e\u003c/a\u003e\n  \n  \u003cfigcaption\u003eDillo 0.8.3, source \u003ca href=\"https://commons.wikimedia.org/wiki/File:Gzilla-039.png\"\u003eWikiMedia\u003c/a\u003e\n  \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eDuring the initial development, Jorge first designed and wrote the naming\nconvention for the function names (like prefixing them with a_ when they are\npublic) or using 3 spaces for indentation, and began adjusting the code base to\nfollow the same convention.\n\n\u003c/p\u003e\u003cp\u003eOn March of 2000, the license was changed to the GPLv3 with the permission of\nRaph Levien (the main developer of Gzilla/Armadillo).\n\n\u003c/p\u003e\u003cp\u003eThe browser experimented a large rewrite with the idea to maintain several\nflows of communication following a signal driven approach. This work ended up in the\npublication\n\u003ci\u003e\u003ca href=\"https://ieeexplore.ieee.org/document/890406\"\u003eNetwork programming\n    internals of the Dillo Web browser\u003c/a\u003e\u003c/i\u003e by Jorge Arellano-Cid and H.H.\nVon Brand. This work would later derive in the Concomitant Control Chain (CCC),\nthe mechanism that Dillo still uses today to track multiple connections and\namong its internal modules.\n\n\u003c/p\u003e\u003cp\u003eSebastian Geerken began working on the code base at least since June of 2000.\nFirst submitting small patches and then moving to the rendering engine, of which\nhe became the main architect. The rendering engine is one of the most important\ncomponents of the browser, which essentially reads a tree of elements and\ndetermines the size and position of each element on the screen, like the\nwords of paragraphs and images.\n\n\u003c/p\u003e\u003cp\u003eThe support for HTML and CSS features started to grow during the coming\nyears, specially for tables and text elements.\n\n\u003c/p\u003e\u003cp\u003eShortly after GTK2 was released, the team was considering porting Dillo to\nit, but there were some concerns regarding the complexity and size of the new\nGTK version.\n\n\u003c/p\u003e\u003cp\u003eOn October of 2003,\n\u003ca href=\"https://lists.mailman3.com/hyperkitty/list/dillo-dev@mailman3.com/thread/QES7WLKQMOKJ6UMYK2FYRQV4QTWMBABI/\"\u003e\n\tJorge asked the FLTK maintainer Michael Sweet\u003c/a\u003e if it would be feasible to\nport Dillo to FLTK, as it was considered to align better with the objectives of\nspeed and stability:\n\n\u003c/p\u003e\u003cblockquote\u003e\nWe  were  following our plan to port dillo from GTK1 (currently\nused  TK)  to  GTK2,  when  one of our list subscribers suggested\nconsidering FLTK because of shared philosophy backgrounds\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe team decided to focus on FLTK 2 instead of GTK 2.0, as it was considered\nfar more bloated and slow. Notice that at the time, FLTK 2 was not yet released,\nbut is was planning to be released \u0026#34;soon\u0026#34;.\n\n\u003c/p\u003e\u003cp\u003eOn August 2004, Sebastian decided to make an interesting design decision,\n\u003ca href=\"https://lists.mailman3.com/hyperkitty/list/dillo-dev@mailman3.com/thread/EKVI6KKMVBLPKA54IPPIV5PKNR3OBJW5/\"\u003eto make the\n\tDillo widget toolkit independent\u003c/a\u003e. This way it was posible to continue the\ndevelopment of GTK1 and FLTK2 in parallel, among other benefits.\n\n\u003c/p\u003e\u003cblockquote\u003e\nThe most complex part is certainly Dw, since it is tightly bound to\nGtk+. By all means, I want to prevent, that there exist different\nversions of Dw, with different features (e.g., when the development of\nthe Gtk+ version continues, while the FLTK version is developed),\nwhich are hard to integrate.\n\n\u003cp\u003eFor this reason (and others), I\u0026#39;m currently working on a redesign of\nDw, which will make Dw toolkit independant. This is not the single\ngoal of this redesign, it will also make some other features possible,\ne.g. a preview window, in which the whole page may be seen with\nreduced size, also, it will make reusage of Dw within graphical\nplugins possibel, and some more. (Actually, the idea for this design\nis already older, except the platform independency, but this was simple\nto add.)\n\u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003eDuring this period, the DPI mechanism (plugins) was improved and some\nfunctionality was moved to external programs that talk to the browser via the\nDPI protocol, like the downloads, bookmarks, FTP and also HTTPS. The version\n0.8.3 released on October, 2004 had already HTTPS support. Here is how it looked\nlike (still using GTK1):\n\n\u003c/p\u003e\u003cfigure\u003e\n  \u003ca href=\"https://dillo-browser.github.io/25-years/img/dillo-0.8.3.png\"\u003e\n    \u003cimg alt=\"Dillo 0.8.3\" src=\"https://dillo-browser.github.io/25-years/thumb/dillo-0.8.3.jpg\"/\u003e\n  \u003c/a\u003e\n  \u003cfigcaption\u003eDillo 0.8.3, source \u003ca href=\"https://commons.wikimedia.org/wiki/File:Dillo.png\"\u003eWikiMedia\u003c/a\u003e\n  \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eDuring the following years, the development of the FLTK port was underway.\nThe functionality that was provided by glib was implemented in a custom Dlib\nlibrary so Dillo would not need to depend on glib anymore.\n\n\n\u003c/p\u003e\u003cp\u003eOn February 2005, Jorge and Sebastian gave\n\u003ca href=\"https://dillo-browser.github.io/old/conferences.html\"\u003ea\n\ttalk at FOSDEM\u003c/a\u003e about the Dillo browser. Unfortunately, there is no\nrecording of that talk. But shortly after, Jorge gave another talk at LSM in\n2005 which is was recorded, which was the first time the FLTK2 implementation\nwas shown.\n\n\u003c/p\u003e\u003cfigure\u003e\n  \u003ca href=\"https://www.youtube.com/watch?v=A6mb9qt2-3o\"\u003e\n    \u003cimg alt=\"Picture of Jorge from the LSM 2005 video\" src=\"https://dillo-browser.github.io/25-years/lsm.jpg\"/\u003e\n  \u003c/a\u003e\n  \u003cfigcaption\u003ePicture of Jorge from the LSM 2005 video, from the \u003ca href=\"https://www.youtube.com/watch?v=A6mb9qt2-3o\"\u003eYouTube video\u003c/a\u003e\n  \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eThe last release that still used GTK1 was 0.8.6 on April, 2006. We will have\nto wait two years until the next release 2.0.0 was finally published with the\nport to FLTK2 completed.\n\n\u003c/p\u003e\u003ch2\u003eFLTK 2 period (2005 - 2011)\u003c/h2\u003e\n\n\u003cp\u003eThe porting to FLTK2 was intended to make the browser smaller and provide other\nfeatures like antialiasing. On April 2005, Jorge reported that the port to FLTK2\nwas making\n\u003ca href=\"https://lists.mailman3.com/hyperkitty/list/dillo-dev@mailman3.com/thread/LKXQDFLOSGOOG7K63XIFQD6DNFU3PRIC/\"\u003egreat\n    progress\u003c/a\u003e.\n\n\u003c/p\u003e\u003cblockquote\u003e\n\u003cp\u003eHere  are  some  good news with our current progress in porting\ndillo to FLTK. It has being going-on very fast and we have made great progress\nso far.\n\u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003eHere is how the browser looked like with FTLK2:\n\n\u003c/p\u003e\u003cfigure\u003e\n  \u003cimg alt=\"First versions of Dillo using FLTK2\" src=\"https://dillo-browser.github.io/25-years/ph1.png\"/\u003e\n  \u003cfigcaption\u003eFirst versions of Dillo using FLTK2\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\n\u003cp\u003eDuring this time however, the source code for the new FLTK2 port was not\navailable in the CVS to the public. Instead, Jorge was focusing on rising\nfunding to cover the project development from some interested companies.\n\u003c/p\u003e\u003cp\u003eOn March 2006, Jorge reported that so far\n\u003ca href=\"https://lists.mailman3.com/hyperkitty/list/dillo-dev@mailman3.com/message/NQYEX32HFQXG3UO235IDUP6IFRG34EDS/\"\u003eit\n    was not being successful in attracting funding\u003c/a\u003e.\nThe project faced a serious risk of stalling.\n\n\u003c/p\u003e\u003cp\u003eAfter mid 2006, there were no more releases of Dillo until 2008, and so far\nno success in getting more developers involved or funding for the project. The\nproject was considered frozen or stalled and the FLTK2 code remained closed\nsource.\n\n\u003c/p\u003e\u003cp\u003eOn April 2007, Jorge\n\u003ca href=\"https://lists.mailman3.com/hyperkitty/list/dillo-dev@mailman3.com/message/DBDCWY7AK65QNTLKJMC6DPH7KQFLVKWV/\"\u003ereports\u003c/a\u003e\nthat he had intentions to release the FLTK2 port\nas soon as Sebastian agrees.\n\n\u003c/p\u003e\u003cblockquote\u003e\nIn  fact,  I think it was more or less 6 months ago, after some\nemails  with  Andrew Tanenbaum, who finally helped me to see that\nit was a good time to release the code again.\n\nSince then, I\u0026#39;ve tried to contact Sebastian to agree on this.\n\u003c/blockquote\u003e\n\nOn September 30, 2007, Jorge finally\n\u003ca href=\"https://lists.mailman3.com/hyperkitty/list/dillo-dev@mailman3.com/thread/2ODF4BFCKD6W33NRVSDER5Z7BEHLOBKZ/?noscript\"\u003eannounces\u003c/a\u003e that the FLTK2 port is now\navailable:\n\n\u003cblockquote\u003e\n\u003cp\u003eThis  is  an  alpha release of the next generation of the Dillo\nweb  browser.  The  code  underwent  a major rewrite: significant\nparts  of  the  codebase  were  ported  to C++, and the rendering\nengine now uses the FLTK2 library instead of GTK1.\n\n\u003c/p\u003e\u003cp\u003ePlease read the README inside dillo\u0026#39;s tarball.\n\n\u003c/p\u003e\u003cp\u003eDevelopers  willing  to  join  the  project  and contribute are\nhighly  encouraged.  Sebastian  did an excellent work documenting\nthe new dillo widget engine (just run doxygen inside DW tree).\n\u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003eThis move started a lot of patches from other developers that were quickly\nintegrated in the FLTK2 port. These contributions pushed Dillo towards an active\nstate of development again.\n\n\u003c/p\u003e\u003cp\u003eOn September of 2008, Jorge\n\u003ca href=\"https://lists.mailman3.com/hyperkitty/list/dillo-dev@mailman3.com/thread/IJ273SVPTQ32DP4YZZ427MGPDCVXB4ER/?noscript\"\u003eannounced\u003c/a\u003e the support for tabs, which was\nincluded for the release. After a lot of bug fixing, the next version based on\nFLTK2 was ready and on October of 2008, Dillo 2.0.0 was finally released.\n\n\u003c/p\u003e\u003cp\u003eA year later, on July of 2009,\n\u003ca href=\"https://lists.mailman3.com/hyperkitty/list/dillo-dev@mailman3.com/thread/SKJ3DQURZWEMS7O3UAURQFM3EHNZFV7M/?noscript\"\u003eJorge\n  announces that he is now a father\u003c/a\u003e, and\nhis time for developing Dillo will (understandably) be affected.\n\n\u003c/p\u003e\u003cblockquote\u003e\nI\u0026#39;m quite happy to let you know that yesterday 19 Aug [July],\nmy first daughter Lisa was born!\n\n\u003cp\u003eEverything is OK, we\u0026#39;re vey happy with this \u0026#34;release\u0026#34; :) and I just wanted to\ncommunicate it here, so you more or less know or understand my activities (or\nlack of) in the next days.\n\u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003eMore features and bug fixes were added in the coming releases, until the last\nrelease of the 2.X series, the version 2.2.1 released on 2011. During this\nperiod, we don\u0026#39;t observe more patches from Sebastian or emails in the mailing\nlist.\n\n\u003c/p\u003e\u003cp\u003eHere is how Dillo was looking in the 2.2 version, very similar as how it\nlooks today:\n\n\u003c/p\u003e\u003cfigure\u003e\n  \u003ca href=\"https://dillo-browser.github.io/25-years/img/dillo-2.2.png\"\u003e\n    \u003cimg alt=\"Dillo 2.2\" src=\"https://dillo-browser.github.io/25-years/thumb/dillo-2.2.jpg\"/\u003e\n  \u003c/a\u003e\n  \u003cfigcaption\u003eDillo 2.2, source \u003ca href=\"https://tuxarena.blogspot.com/2010/09/how-to-install-dillo-web-browser-in.html\"\u003eTuxArena\u003c/a\u003e\n  \u003c/figcaption\u003e\n\u003c/figure\u003e\n\nDuring this period, another problem was coming in FLTK. The\n\u003ca href=\"https://lists.mailman3.com/hyperkitty/list/dillo-dev@mailman3.com/message/O4YFNSCDATQDKUNRHUJPGEDJPNKGXLDP/\"\u003edevelopment for\n    FLTK2 was considered stalled\u003c/a\u003e and there was no official version released.\n  This caused issued in downstream distributions, as Dillo required to link with\n  a FLTK package that was not available.\n\n\u003cp\u003eSo, the team decided to switch to FLTK 1.3 as soon as it was released, and bump\nDillo to the series 3.X.\n\n\u003c/p\u003e\u003ch2\u003eFLTK 1.3 period (2011 - 2016)\u003c/h2\u003e\n\n\u003cp\u003eOn June 2011, with the FLTK 1.3 release done, the port of Dillo to FLTK 1.3 was\nunderway. Only a few months later, the first 3.0.0 release using FLTK 1.3 was\npublished.\n\n\u003c/p\u003e\u003cp\u003eOn July of 2012, Sebastian presented a new hyphenation algorithm that\nimplements the same mechanism used in TeX. This new implementation makes its way\nto the 3.0.3 release on April of 2013.\n\n\u003c/p\u003e\u003cp\u003eSeveral releases were made until the version 3.0.5 on June 2015.\n\n\u003c/p\u003e\u003cp\u003eDuring these last two years, we see a shift in the amount of commits\nintroduced by Sebastian, which grow quite substantially.\n\n\u003c/p\u003e\u003cfigure\u003e\n\u003cimg alt=\"Commits\" src=\"https://dillo-browser.github.io/25-years/commits-author.png\"/\u003e\n\u003c/figure\u003e\n\nOn that time, Sebastian was working on the GROWS redesign, which changed the way\nthe size of the widgets (elements of the page) where computed.\n\n\u003cp\u003eSadly, on October 2016, \u003ca href=\"https://lists.mailman3.com/hyperkitty/list/dillo-dev@mailman3.com/thread/OCKYTCIUXPQ26DIBNBIZVJARJEIJXDBI/?noscript\"\u003eSebastian\n  passed away\u003c/a\u003e, leaving much of his work not included into a new release. \n\nSince then, the development quickly stalled until in 2019 Jorge sent his last\nemail \u003ca href=\"https://groups.google.com/g/dillo/c/UQ1nWyMa3yo/m/07qhu9KqAgAJ\"\u003erecorded\n  by the mailing list\u003c/a\u003e, recommending a user to simply use the current version\nof the repository, rather than waiting for the 3.1 release:\n\n\u003c/p\u003e\u003cblockquote\u003e\n\u0026gt; According to the info on\u003cbr/\u003e\n\u0026gt; https://hg.dillo.org/dillo/raw-file/default/ChangeLog, dillo-3.1 [not\nreleased yet].\u003cbr/\u003e\n\u0026gt;\u003cbr/\u003e\n\u0026gt; I will probably wait until they release it officially.\u003cp\u003e\n\nIMHO, you should get it. It\u0026#39;s being stable for years.\u003c/p\u003e\u003cp\u003e\n\n--\u003cbr/\u003e\nCheers\u003cbr/\u003e\nJorge.-\n\u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003eAfter this moment, the project began to deteriorate. On 2022 the DNS domain\nof dillo.org \u003ca href=\"https://dillo-browser.github.io/dillo.org.html\"\u003ewas lost\u003c/a\u003e, causing the website, the\nmercurial repository, the mailing list and the email server to disappear.\n\n\u003c/p\u003e\u003cp\u003eThe project quickly became abandoned, as there was no more developer activity\nanywhere. The dillo.org site now became a weird zombie copy of the once original\nwebsite, but now plagued with SPAM in a Wordpress blog.\n\n\u003c/p\u003e\u003ch2\u003eThe resurrection (2024 - present)\u003c/h2\u003e\n\n\u003cp\u003eOn December of 2023, I began spending some time patching Dillo to make it build\nagain. I tried to fix some simple bugs, and when I saw that the Atari forum had\nmanaged to port Dillo to Atari (!) based on my repo I though that it may be\nfeasible to try to resurrect it. I commented it on\n\u003ca href=\"https://news.ycombinator.com/item?id=38847613\"\u003eHacker News\u003c/a\u003e and it\ngot surprised on the of interest it drew.\n\n\u003c/p\u003e\u003cp\u003eI first made a GitHub organization to hold the Git repositories and used the\nGitHub pages to make a new Dillo website. I tried to get a copy of all materials\nI could, and upload them to the new website and mailing list.\n\n\u003c/p\u003e\u003cp\u003eI tried to fix all the issues to finally make the 3.1.0 release, and after\nsome months of work in my free time, I managed to release it on May of 2024. It\ncaught the attention of\n\u003ca href=\"https://www.theregister.com/2024/05/07/dillo_browser_v3_1/\"\u003eseveral\u003c/a\u003e\n\u003ca href=\"https://9to5linux.com/dillo-3-1-open-source-web-browser-released-after-9-year-hiatus\"\u003enews\u003c/a\u003e\n\u003ca href=\"https://hackaday.com/2024/05/11/the-minimalistic-dillo-web-browser-is-back/\"\u003esites\u003c/a\u003e\nand soon later it made its way to several\n\u003ca href=\"https://repology.org/project/dillo/versions\"\u003eLinux distributions\u003c/a\u003e.\n\n\u003c/p\u003e\u003cp\u003eAs of today, 15 of December of 2024, I continue to maintain the project, and\nwe are getting some new contributors which help with patches and discussion\nabout the development. We are still far from having enough developers to cover\nall the issues, but we are slowly making some progress.\n\n\u003c/p\u003e\u003cp\u003eThe last release of Dillo is 3.1.1, and this is what is looks like when\nloading the new Dillo website:\n\n\u003c/p\u003e\u003cfigure\u003e\n  \u003ca href=\"https://dillo-browser.github.io/25-years/img/dillo-3.1.1.png\"\u003e\n    \u003cimg alt=\"Dillo 2.2\" src=\"https://dillo-browser.github.io/25-years/thumb/dillo-3.1.1.jpg\"/\u003e\n  \u003c/a\u003e\n  \u003cfigcaption\u003eDillo 3.1.1 in my computer\n  \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\n\u003c/article\u003e\u003c/div\u003e",
  "readingTime": "14 min read",
  "publishedTime": null,
  "modifiedTime": null
}
