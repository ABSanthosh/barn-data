{
  "id": "e96776b7-1a44-4c64-a75a-8d22606e0280",
  "title": "Learn Yjs Interactively",
  "link": "https://learn.yjs.dev/",
  "description": "Article URL: https://learn.yjs.dev/ Comments URL: https://news.ycombinator.com/item?id=42731582 Points: 69 # Comments: 7",
  "author": "paulgb",
  "published": "Thu, 16 Jan 2025 22:13:22 +0000",
  "source": "https://hnrss.org/frontpage",
  "categories": null,
  "byline": "",
  "length": 1515,
  "excerpt": "Learn Yjs is an interactive tutorial series on building realtime collaborative applications using the Yjs CRDT library. Learn about handling state in distributed applications using Yjs shared types, with explorable explanations and code exercises.",
  "siteName": "",
  "favicon": "",
  "text": "Welcome to Learn Yjs — an interactive tutorial series on building realtime collaborative applications using the Yjs CRDT library. This very page is an example of a realtime collaborative application. Every other cursor in the garden above is a real live person reading the page right now. Click one of the plants to change it for everyone else! Learn Yjs starts with the basics of Yjs, then covers techniques for handling state in distributed applications. We’ll talk about what a CRDT is, and why you’d want to use one. We’ll get into some of the pitfalls that make collaborative applications difficult and show how you can avoid them. There will be explorable demos and code exercises so you can get a feel for how Yjs really works. Here’s an example of an explorable demo. Each box below represents a client — a separate computer running an app that uses Yjs. When you interact with either client, the changes are automatically synced to the other one. You can control the latency with the slider on the top left to see how clients would interact over a network. Ready to learn? Great — let’s get started! Click on the button below to visit Lesson 1. Lesson 01Introduction About this site Learn Yjs is a project by Jamsocket, a platform for building realtime apps. The live cursors and multiplayer garden on this page are powered by Y-Sweet, our open source Yjs server with built-in persistence. The website is built with Astro. The interactive demos and exercises are built with React and Yjs.",
  "image": "https://learn.yjs.dev/og/learn-yjs.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"content\"\u003e   \u003castro-island uid=\"imxT9\" prefix=\"r0\" component-url=\"/_astro/Garden.B6zOuLC6.js\" component-export=\"Garden\" renderer-url=\"/_astro/client.dxluZyKf.js\" props=\"{}\" ssr=\"\" client=\"load\" opts=\"{\u0026#34;name\u0026#34;:\u0026#34;Garden\u0026#34;,\u0026#34;value\u0026#34;:true}\" await-children=\"\"\u003e\u003croving-tabindex selector=\"button:not([aria-hidden])\"\u003e\u003c/roving-tabindex\u003e\u003c/astro-island\u003e \u003cdiv\u003e \u003cp\u003eWelcome to \u003cstrong\u003eLearn Yjs\u003c/strong\u003e — an interactive tutorial series on building \u003cem\u003erealtime collaborative applications\u003c/em\u003e using the \u003ca href=\"https://github.com/yjs/yjs\" target=\"_blank\"\u003eYjs CRDT library\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis very page is an example of a realtime collaborative application.\nEvery other cursor in the garden above is a \u003cem\u003ereal live person\u003c/em\u003e reading the page right now.\nClick one of the plants to change it for everyone else!\u003c/p\u003e\n\u003cp\u003eLearn Yjs starts with the basics of Yjs, then covers techniques for handling state in distributed applications.\nWe’ll talk about what a CRDT is, and why you’d want to use one.\nWe’ll get into some of the pitfalls that make collaborative applications difficult and show how you can avoid them.\nThere will be \u003cem\u003eexplorable demos\u003c/em\u003e and \u003cem\u003ecode exercises\u003c/em\u003e so you can get a feel for how Yjs really works.\u003c/p\u003e\n\u003cp\u003eHere’s an example of an explorable demo.\nEach box below represents a \u003cem\u003eclient\u003c/em\u003e — a separate computer running an app that uses Yjs.\nWhen you interact with either client, the changes are \u003cem\u003eautomatically synced\u003c/em\u003e to the other one.\nYou can control the latency with the slider on the top left to see how clients would interact over a network.\u003c/p\u003e\n\n\u003cp\u003eReady to learn?\u003c/p\u003e\n\u003cp\u003eGreat — let’s get started!\nClick on the button below to visit \u003cstrong\u003eLesson 1\u003c/strong\u003e.\u003c/p\u003e\n\u003ca href=\"https://learn.yjs.dev/lessons/01-introduction/\"\u003e\u003cp\u003e\u003cspan\u003e\u003cp\u003eLesson 01\u003c/p\u003e\u003c/span\u003e\u003cspan\u003e\u003cp\u003eIntroduction\u003c/p\u003e\u003c/span\u003e\u003c/p\u003e\u003csvg role=\"img\" width=\"24\" height=\"24\"\u003e\u003csymbol viewBox=\"0 0 24 24\" id=\"a:2\"\u003e\n  \u003cg id=\"icon\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\u003e\n    \u003cpath d=\"m12 5 7 7-7 7\"\u003e\u003c/path\u003e\n    \u003cpath d=\"M5 12h14\"\u003e\u003c/path\u003e\n  \u003c/g\u003e\n\u003c/symbol\u003e\u003cuse href=\"#a:2\"\u003e\u003c/use\u003e\u003c/svg\u003e\u003c/a\u003e\n\u003ch2 id=\"about-this-site\"\u003eAbout this site\u003c/h2\u003e\n\u003cp\u003eLearn Yjs is a project by \u003ca href=\"https://jamsocket.com\"\u003eJamsocket\u003c/a\u003e, a platform for building realtime apps. The live cursors and multiplayer garden on this page are powered by \u003ca href=\"https://jamsocket.com/y-sweet\"\u003eY-Sweet\u003c/a\u003e, our open source Yjs server with built-in persistence.\u003c/p\u003e\n\u003cp\u003eThe website is built with \u003ca href=\"https://astro.build\"\u003eAstro\u003c/a\u003e.\nThe interactive demos and exercises are built with \u003ca href=\"https://react.dev\"\u003eReact\u003c/a\u003e and \u003ca href=\"https://github.com/yjs/yjs\"\u003eYjs\u003c/a\u003e.\u003c/p\u003e \u003c/div\u003e   \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": null,
  "modifiedTime": null
}
