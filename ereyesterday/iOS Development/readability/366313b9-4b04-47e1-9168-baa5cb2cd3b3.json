{
  "id": "366313b9-4b04-47e1-9168-baa5cb2cd3b3",
  "title": "SwiftUI Accessibility Language",
  "link": "https://useyourloaf.com/blog/swiftui-accessibility-language/",
  "description": "How do you change the accessibility language used by VoiceOver with SwiftUI? What’s The Problem? If you’re working on any sort of language learning application you might want a view showing text in two different languages: struct ContentView: View { private let english = \"Good morning\" private let italian = \"Buongiorno\" var body: some View { VStack(spacing: 8) { Text(english) .font(.headline) Text(italian) .font(.subheadline) } .frame(width:300, height: 200) .background(Color.yellow) } } This causes a problem for VoiceOver when it speaks the two lines of text. By default, VoiceOver speaks with the user’s locale. If my device is using an English locale it pronounces “Good morning” fine but sounds ridiculous when attempting “Buongiorno”. I want VoiceOver to use an English pronunciation for the former and an Italian one for the latter. Accessibility Language If I was using UIKit I’d set the accessibilityLanguage property on the text labels to override the language VoiceOver uses when speaking: englishLabel.accessibilityLanguage = \"en\" italianLabel.accessibilityLanguage = \"it\" Unfortunately, there’s no such view modifier in SwiftUI. So how do I change the language VoiceOver uses when working with a SwiftUI view? One suggestion I’ve seen is to use AttributedString which does have an .accessibilitySpeechLanguage attribute: private let italian = AttributedString( \"Buongiorno\", attributes: AttributeContainer([ .accessibilitySpeechLanguage: \"it\" ]) ) That doesn’t work for me. Changing the Locale A tip on Mastodon from Łukasz Rutkowski suggested changing the locale environment for each view: Text(english) .font(.headline) .environment(\\.locale, .init(identifier: \"en\")) Text(italian) .font(.subheadline) .environment(\\.locale, .init(identifier: \"it\")) That didn’t work until I realised the Text view was treating the text as a localized string key. I never want to localize those values. Using the verbatim initializer for the Text view fixed the problem: Text(verbatim: english) .font(.headline) .environment(\\.locale, .init(identifier: \"en\")) Text(verbatim: italian) .font(.subheadline) .environment(\\.locale, .init(identifier: \"it\")) VoiceOver now pronounces the English text in English and the Italian text in Italian. Label and Button The need to use a verbatim String does force you to use the longer form for views like a Label: Label { Text(verbatim: italian) } icon: { Image(systemName: \"globe\") } .environment(\\.locale, .init(identifier: \"it\")) You can apply the locale to the label or the child text view. A Button works the same way if I use a Text view for the label: Button { } label: { Text(verbatim: italian) .environment(\\.locale, .init(identifier: \"it\")) } However, if I use a Label to include an icon the locale only takes effect when applied to the Button. It’s ignored when applied to the child Label or Text view: Button { } label: { Label { Text(verbatim: italian) } icon: { Image(systemName: \"globe\") } } .environment(\\.locale, .init(identifier: \"it\")) That does mean VoiceOver pronounces “button” in the modified locale (in the above case I hear “Buongiorno, pulsante”) but I can live with that. SwiftUI Accessibility Language was originally posted 31 Mar 2025 on useyourloaf.com. Want this direct to your inbox? Sign up and get my free WWDC viewing guide PDF.",
  "author": "",
  "published": "Mon, 31 Mar 2025 09:37:50 +0000",
  "source": "https://useyourloaf.com/blog/rss.xml",
  "categories": null,
  "byline": "",
  "length": 3243,
  "excerpt": "How do you change the accessibility language used by VoiceOver with SwiftUI?",
  "siteName": "Use Your Loaf - iOS Development News \u0026 Tips",
  "favicon": "https://useyourloaf.com/apple-touch-icon.png",
  "text": "How do you change the accessibility language used by VoiceOver with SwiftUI? What’s The Problem? If you’re working on any sort of language learning application you might want a view showing text in two different languages: struct ContentView: View { private let english = \"Good morning\" private let italian = \"Buongiorno\" var body: some View { VStack(spacing: 8) { Text(english) .font(.headline) Text(italian) .font(.subheadline) } .frame(width:300, height: 200) .background(Color.yellow) } } This causes a problem for VoiceOver when it speaks the two lines of text. By default, VoiceOver speaks with the user’s locale. If my device is using an English locale it pronounces “Good morning” fine but sounds ridiculous when attempting “Buongiorno”. I want VoiceOver to use an English pronunciation for the former and an Italian one for the latter. Accessibility Language If I was using UIKit I’d set the accessibilityLanguage property on the text labels to override the language VoiceOver uses when speaking: englishLabel.accessibilityLanguage = \"en\" italianLabel.accessibilityLanguage = \"it\" Unfortunately, there’s no such view modifier in SwiftUI. So how do I change the language VoiceOver uses when working with a SwiftUI view? One suggestion I’ve seen is to use AttributedString which does have an .accessibilitySpeechLanguage attribute: private let italian = AttributedString( \"Buongiorno\", attributes: AttributeContainer([ .accessibilitySpeechLanguage: \"it\" ]) ) That doesn’t work for me. Changing the Locale A tip on Mastodon from Łukasz Rutkowski suggested changing the locale environment for each view: Text(english) .font(.headline) .environment(\\.locale, .init(identifier: \"en\")) Text(italian) .font(.subheadline) .environment(\\.locale, .init(identifier: \"it\")) That didn’t work until I realised the Text view was treating the text as a localized string key. I never want to localize those values. Using the verbatim initializer for the Text view fixed the problem: Text(verbatim: english) .font(.headline) .environment(\\.locale, .init(identifier: \"en\")) Text(verbatim: italian) .font(.subheadline) .environment(\\.locale, .init(identifier: \"it\")) VoiceOver now pronounces the English text in English and the Italian text in Italian. Label and Button The need to use a verbatim String does force you to use the longer form for views like a Label: Label { Text(verbatim: italian) } icon: { Image(systemName: \"globe\") } .environment(\\.locale, .init(identifier: \"it\")) You can apply the locale to the label or the child text view. A Button works the same way if I use a Text view for the label: Button { } label: { Text(verbatim: italian) .environment(\\.locale, .init(identifier: \"it\")) } However, if I use a Label to include an icon the locale only takes effect when applied to the Button. It’s ignored when applied to the child Label or Text view: Button { } label: { Label { Text(verbatim: italian) } icon: { Image(systemName: \"globe\") } } .environment(\\.locale, .init(identifier: \"it\")) That does mean VoiceOver pronounces “button” in the modified locale (in the above case I hear “Buongiorno, pulsante”) but I can live with that.",
  "image": "https://useyourloaf.com/blog/swiftui-accessibility-language/cover.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\u003cp\u003eHow do you change the accessibility language used by VoiceOver with SwiftUI?\u003c/p\u003e\n\u003ch3 id=\"whats-the-problem\"\u003eWhat’s The Problem?\u003c/h3\u003e\n\u003cp\u003eIf you’re working on any sort of language learning application you might want a view showing text in two different languages:\u003c/p\u003e\n\u003cdiv\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode data-lang=\"swift\"\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003estruct\u003c/span\u003e \u003cspan\u003eContentView\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eView\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003elet\u003c/span\u003e \u003cspan\u003eenglish\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;Good morning\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003elet\u003c/span\u003e \u003cspan\u003eitalian\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;Buongiorno\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003evar\u003c/span\u003e \u003cspan\u003ebody\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003esome\u003c/span\u003e \u003cspan\u003eView\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e    \u003cspan\u003eVStack\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003espacing\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e8\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e      \u003cspan\u003eText\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eenglish\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e        \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003efont\u003c/span\u003e\u003cspan\u003e(.\u003c/span\u003e\u003cspan\u003eheadline\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e      \u003cspan\u003eText\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eitalian\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e        \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003efont\u003c/span\u003e\u003cspan\u003e(.\u003c/span\u003e\u003cspan\u003esubheadline\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e    \u003cspan\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e    \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eframe\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003ewidth\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e300\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003eheight\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e200\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e    \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ebackground\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eColor\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eyellow\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://useyourloaf.com/blog/swiftui-accessibility-language/001.png\" alt=\"yellow card showing “Good morning” above “Buongiorno”\" width=\"240\" height=\"170\" srcset=\"https://useyourloaf.com/blog/swiftui-accessibility-language/001@2x.png 2x\"/\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eThis causes a problem for VoiceOver when it speaks the two lines of text\u003c/strong\u003e. By default, VoiceOver speaks with the user’s locale. If my device is using an English locale it pronounces “Good morning” fine but sounds ridiculous when attempting “Buongiorno”. \u003cstrong\u003eI want VoiceOver to use an English pronunciation for the former and an Italian one for the latter\u003c/strong\u003e.\u003c/p\u003e\n\u003ch3 id=\"accessibility-language\"\u003eAccessibility Language\u003c/h3\u003e\n\u003cp\u003eIf I was using UIKit I’d set the \u003ccode\u003eaccessibilityLanguage\u003c/code\u003e property on the text labels to override the language VoiceOver uses when speaking:\u003c/p\u003e\n\u003cdiv\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode data-lang=\"swift\"\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003eenglishLabel\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eaccessibilityLanguage\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;en\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003eitalianLabel\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eaccessibilityLanguage\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;it\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eUnfortunately, there’s no such view modifier in SwiftUI. \u003cstrong\u003eSo how do I change the language VoiceOver uses when working with a SwiftUI view?\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eOne suggestion I’ve seen is to use \u003ccode\u003eAttributedString\u003c/code\u003e which does have an \u003ccode\u003e.accessibilitySpeechLanguage\u003c/code\u003e attribute:\u003c/p\u003e\n\u003cdiv\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode data-lang=\"swift\"\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003elet\u003c/span\u003e \u003cspan\u003eitalian\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eAttributedString\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003e\u0026#34;Buongiorno\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003eattributes\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eAttributeContainer\u003c/span\u003e\u003cspan\u003e([\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e    \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eaccessibilitySpeechLanguage\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;it\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003e])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThat doesn’t work for me.\u003c/p\u003e\n\u003ch3 id=\"changing-the-locale\"\u003eChanging the Locale\u003c/h3\u003e\n\u003cp\u003eA tip on Mastodon from \u003ca href=\"https://mastodon.world/@luckkerr\"\u003eŁukasz Rutkowski\u003c/a\u003e suggested changing the locale environment for each view:\u003c/p\u003e\n\u003cdiv\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode data-lang=\"swift\"\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003eText\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eenglish\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003efont\u003c/span\u003e\u003cspan\u003e(.\u003c/span\u003e\u003cspan\u003eheadline\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eenvironment\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\\\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003elocale\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003einit\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eidentifier\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;en\u0026#34;\u003c/span\u003e\u003cspan\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003eText\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eitalian\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003efont\u003c/span\u003e\u003cspan\u003e(.\u003c/span\u003e\u003cspan\u003esubheadline\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eenvironment\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\\\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003elocale\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003einit\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eidentifier\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;it\u0026#34;\u003c/span\u003e\u003cspan\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThat didn’t work until I realised the Text view was treating the text as a localized string key. I never want to localize those values. \u003cstrong\u003eUsing the verbatim initializer for the Text view fixed the problem:\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode data-lang=\"swift\"\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003eText\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003everbatim\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eenglish\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003efont\u003c/span\u003e\u003cspan\u003e(.\u003c/span\u003e\u003cspan\u003eheadline\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eenvironment\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\\\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003elocale\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003einit\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eidentifier\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;en\u0026#34;\u003c/span\u003e\u003cspan\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003eText\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003everbatim\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eitalian\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003efont\u003c/span\u003e\u003cspan\u003e(.\u003c/span\u003e\u003cspan\u003esubheadline\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eenvironment\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\\\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003elocale\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003einit\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eidentifier\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;it\u0026#34;\u003c/span\u003e\u003cspan\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eVoiceOver now pronounces the English text in English and the Italian text in Italian.\u003c/p\u003e\n\u003ch3 id=\"label-and-button\"\u003eLabel and Button\u003c/h3\u003e\n\u003cp\u003eThe need to use a verbatim \u003ccode\u003eString\u003c/code\u003e does force you to use the longer form for views like a \u003ccode\u003eLabel\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode data-lang=\"swift\"\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003eLabel\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003eText\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003everbatim\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eitalian\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e}\u003c/span\u003e \u003cspan\u003eicon\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003eImage\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003esystemName\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;globe\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eenvironment\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\\\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003elocale\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003einit\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eidentifier\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;it\u0026#34;\u003c/span\u003e\u003cspan\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eYou can apply the locale to the label or the child text view. A \u003ccode\u003eButton\u003c/code\u003e works the same way if I use a \u003ccode\u003eText\u003c/code\u003e view for the label:\u003c/p\u003e\n\u003cdiv\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode data-lang=\"swift\"\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003eButton\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e}\u003c/span\u003e \u003cspan\u003elabel\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003eText\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003everbatim\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eitalian\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e    \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eenvironment\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\\\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003elocale\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003einit\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eidentifier\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;it\u0026#34;\u003c/span\u003e\u003cspan\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHowever, if I use a \u003ccode\u003eLabel\u003c/code\u003e to include an icon the locale only takes effect when applied to the \u003ccode\u003eButton\u003c/code\u003e. It’s ignored when applied to the child \u003ccode\u003eLabel\u003c/code\u003e or \u003ccode\u003eText\u003c/code\u003e view:\u003c/p\u003e\n\u003cdiv\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode data-lang=\"swift\"\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003eButton\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e}\u003c/span\u003e \u003cspan\u003elabel\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003eLabel\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e    \u003cspan\u003eText\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003everbatim\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eitalian\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003e}\u003c/span\u003e \u003cspan\u003eicon\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e    \u003cspan\u003eImage\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003esystemName\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;globe\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eenvironment\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\\\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003elocale\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003einit\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eidentifier\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;it\u0026#34;\u003c/span\u003e\u003cspan\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThat does mean VoiceOver pronounces “button” in the modified locale (in the above case I hear “Buongiorno, pulsante”) but I can live with that.\u003c/p\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": "2025-03-31T09:37:50Z",
  "modifiedTime": "2025-03-31T11:04:07+01:00"
}
