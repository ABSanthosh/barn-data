{
  "id": "2c5b69e6-d0ff-438d-983e-1a19e7a04932",
  "title": "AnyClass protocol and Objective-C methods",
  "link": "https://augmentedcode.io/2024/11/04/anyclass-protocol-and-objective-c-methods/",
  "description": "AnyClass is a protocol all classes conform to and it comes with a feature I was not aware of. But first, how to I ended up with using AnyClass. While working on code using CoreData, I needed a way to enumerate all the CoreData entities and call a static function on them. If that function […]",
  "author": "Toomas Vahter",
  "published": "Mon, 04 Nov 2024 16:00:00 +0000",
  "source": "https://augmentedcode.io/feed/",
  "categories": [
    "iOS",
    "Swift",
    "AnyClass"
  ],
  "byline": "",
  "length": 3343,
  "excerpt": "AnyClass is a protocol all classes conform to and it comes with a feature I was not aware of. But first, how to I ended up with using AnyClass. While working on code using CoreData, I needed a way …",
  "siteName": "Augmented Code",
  "favicon": "https://augmentedcode.io/wp-content/uploads/2017/11/site-icon.png?w=192",
  "text": "AnyClass is a protocol all classes conform to and it comes with a feature I was not aware of. But first, how to I ended up with using AnyClass. While working on code using CoreData, I needed a way to enumerate all the CoreData entities and call a static function on them. If that function is defined, it runs an entity specific update. Let’s call the function static func resetState(). It is easy to get the list of entity names of the model and then turn them into AnyClass instances using the NSClassFromString() function. This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters let entityClasses = managedObjectModel.entities .compactMap(\\.name) .compactMap { NSClassFromString($0) } At this point I had an array of AnyClass instances where some of them implemented the resetState function, some didn’t. While browsing the AnyClass documentation, I saw this: You can use the AnyClass protocol as the concrete type for an instance of any class. When you do, all known @objcclass methods and properties are available as implicitly unwrapped optional methods and properties, respectively. Never heard about it, probably because I have never really needed to interact with AnyClass in such way. Therefore, If I create an @objc static function then I can call it by unwrapping it with ?. Without unwrapping it safely, it would crash because Department type does not implement the function. This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters class Department: NSManagedObject { } class Employee: NSManagedObject { @objc static func resetState() { print(\"Resetting Employee\") } } // This triggers Employee.resetState and prints the message to the console for entityClass in entityClasses { entityClass.resetState?() } It has been awhile since I wrote any Objective-C code, but its features leaking into Swift helped me out here. Reminds me of days filled with respondsToSelector and performSelector. If this was helpful, please let me know on Mastodon@toomasvahter or Twitter @toomasvahter. Feel free to subscribe to RSS feed. Thank you for reading. Tags AnyClass, iOS, Swift",
  "image": "https://augmentedcode.io/wp-content/uploads/2017/11/site-icon.png?w=200",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"site-content\" role=\"main\"\u003e\n\n\t\n\u003carticle id=\"post-3791\"\u003e\n\n\t\n\n\n\t\u003cdiv\u003e\n\n\t\t\t\n\u003cp\u003e\u003ca href=\"https://developer.apple.com/documentation/swift/anyclass\"\u003eAnyClass\u003c/a\u003e is a protocol all classes conform to and it comes with a feature I was not aware of. But first, how to I ended up with using AnyClass. While working on code using CoreData, I needed a way to enumerate all the CoreData entities and call a static function on them. If that function is defined, it runs an entity specific update. Let’s call the function \u003ccode\u003estatic func resetState()\u003c/code\u003e. \u003c/p\u003e\n\n\n\n\u003cp\u003eIt is easy to get the list of entity names of the model and then turn them into AnyClass instances using the \u003ca href=\"https://developer.apple.com/documentation/foundation/1395135-nsclassfromstring\"\u003eNSClassFromString()\u003c/a\u003e function.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cdiv itemprop=\"text\" id=\"gist133263827\" translate=\"no\" data-color-mode=\"light\" data-light-theme=\"light\"\u003e\n\n  \u003ctemplate\u003e\n  \u003cdiv data-view-component=\"true\"\u003e\n  \n    \u003cp\u003e\u003cspan\u003e\n      This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters.\n      \u003ca href=\"https://github.co/hiddenchars\" target=\"_blank\"\u003eLearn more about bidirectional Unicode characters\u003c/a\u003e\n    \u003c/span\u003e\u003c/p\u003e\n\u003c/div\u003e\u003c/template\u003e\n\u003ctemplate\u003e\n  \u003cspan aria-label=\"This line has hidden Unicode characters\" data-view-component=\"true\"\u003e\n    \n\u003c/span\u003e\u003c/template\u003e\n\n  \u003ctable data-hpc=\"\" data-tab-size=\"8\" data-paste-markdown-skip=\"\" data-tagsearch-path=\"AnyClass.swift\"\u003e\n        \u003ctbody\u003e\u003ctr\u003e\n          \u003ctd id=\"file-anyclass-swift-L1\" data-line-number=\"1\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-anyclass-swift-LC1\"\u003elet entityClasses = managedObjectModel.entities\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-anyclass-swift-L2\" data-line-number=\"2\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-anyclass-swift-LC2\"\u003e    .compactMap(\\.name)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-anyclass-swift-L3\" data-line-number=\"3\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-anyclass-swift-LC3\"\u003e    .compactMap { NSClassFromString($0) }\u003c/td\u003e\n        \u003c/tr\u003e\n  \u003c/tbody\u003e\u003c/table\u003e\n\u003c/div\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eAt this point I had an array of AnyClass instances where some of them  implemented the resetState function, some didn’t. While browsing the AnyClass documentation, I saw this:\u003c/p\u003e\n\n\n\n\u003cblockquote\u003e\n\u003cp\u003eYou can use the \u003ccode\u003eAnyClass\u003c/code\u003e protocol as the concrete type for an instance of any class. When you do, all known \u003ccode\u003e@objc\u003c/code\u003eclass methods and properties are available as implicitly unwrapped optional methods and properties, respectively.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\n\n\u003cp\u003eNever heard about it, probably because I have never really needed to interact with AnyClass in such way. Therefore, If I create an \u003ccode\u003e@objc static function\u003c/code\u003e then I can call it by unwrapping it with \u003ccode\u003e?\u003c/code\u003e. Without unwrapping it safely, it would crash because \u003ccode\u003eDepartment\u003c/code\u003e type does not implement the function.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cdiv itemprop=\"text\" id=\"gist133264076\" translate=\"no\" data-color-mode=\"light\" data-light-theme=\"light\"\u003e\n\n  \u003ctemplate\u003e\n  \u003cdiv data-view-component=\"true\"\u003e\n  \n    \u003cp\u003e\u003cspan\u003e\n      This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters.\n      \u003ca href=\"https://github.co/hiddenchars\" target=\"_blank\"\u003eLearn more about bidirectional Unicode characters\u003c/a\u003e\n    \u003c/span\u003e\u003c/p\u003e\n\u003c/div\u003e\u003c/template\u003e\n\u003ctemplate\u003e\n  \u003cspan aria-label=\"This line has hidden Unicode characters\" data-view-component=\"true\"\u003e\n    \n\u003c/span\u003e\u003c/template\u003e\n\n  \u003ctable data-hpc=\"\" data-tab-size=\"8\" data-paste-markdown-skip=\"\" data-tagsearch-path=\"AnyClass.swift\"\u003e\n        \u003ctbody\u003e\u003ctr\u003e\n          \u003ctd id=\"file-anyclass-swift-L1\" data-line-number=\"1\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-anyclass-swift-LC1\"\u003eclass Department: NSManagedObject {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-anyclass-swift-L2\" data-line-number=\"2\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-anyclass-swift-LC2\"\u003e}\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-anyclass-swift-L3\" data-line-number=\"3\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-anyclass-swift-LC3\"\u003e\n\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-anyclass-swift-L4\" data-line-number=\"4\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-anyclass-swift-LC4\"\u003eclass Employee: NSManagedObject {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-anyclass-swift-L5\" data-line-number=\"5\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-anyclass-swift-LC5\"\u003e    @objc static func resetState() {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-anyclass-swift-L6\" data-line-number=\"6\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-anyclass-swift-LC6\"\u003e        print(\u0026#34;Resetting Employee\u0026#34;)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-anyclass-swift-L7\" data-line-number=\"7\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-anyclass-swift-LC7\"\u003e    }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-anyclass-swift-L8\" data-line-number=\"8\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-anyclass-swift-LC8\"\u003e}\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-anyclass-swift-L9\" data-line-number=\"9\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-anyclass-swift-LC9\"\u003e\n\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-anyclass-swift-L10\" data-line-number=\"10\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-anyclass-swift-LC10\"\u003e// This triggers Employee.resetState and prints the message to the console\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-anyclass-swift-L11\" data-line-number=\"11\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-anyclass-swift-LC11\"\u003efor entityClass in entityClasses {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-anyclass-swift-L12\" data-line-number=\"12\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-anyclass-swift-LC12\"\u003e    entityClass.resetState?()\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-anyclass-swift-L13\" data-line-number=\"13\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-anyclass-swift-LC13\"\u003e}\u003c/td\u003e\n        \u003c/tr\u003e\n  \u003c/tbody\u003e\u003c/table\u003e\n\u003c/div\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eIt has been awhile since I wrote any Objective-C code, but its features leaking into Swift helped me out here. Reminds me of days filled with \u003ca href=\"https://developer.apple.com/documentation/objectivec/1418956-nsobject/1418583-respondstoselector\"\u003erespondsToSelector\u003c/a\u003e and \u003ca href=\"https://developer.apple.com/documentation/objectivec/1418956-nsobject/1418867-performselector\"\u003eperformSelector\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cp\u003eIf this was helpful, please let me know on \u003ca href=\"https://mastodon.social/@toomasvahter\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eMastodon@toomasvahter\u003c/a\u003e or \u003ca rel=\"noreferrer noopener\" href=\"https://twitter.com/toomasvahter\" target=\"_blank\"\u003eTwitter @toomasvahter\u003c/a\u003e. Feel free to subscribe to \u003ca rel=\"noreferrer noopener\" aria-label=\"RSS feed (opens in a new tab)\" href=\"https://augmentedcode.io/blog/feed/\" target=\"_blank\"\u003eRSS feed\u003c/a\u003e. Thank you for reading.\u003c/p\u003e\n\n\n\n\n\n\n\n\n\n\t\t\t\n\t\t\t\n\t\t\u003c/div\u003e\n\n\t\u003cdiv\u003e\n\n\t\t\t\u003cul\u003e\n\n\t\t\t\t\t\t\t\t\t\u003cli\u003e\n\t\t\t\t\t\t\u003cspan\u003e\n\t\t\t\t\t\t\t\u003cspan\u003e\n\t\t\t\t\t\t\t\tTags\t\t\t\t\t\t\t\u003c/span\u003e\n\t\t\t\t\t\t\t\t\t\t\t\t\t\u003c/span\u003e\n\t\t\t\t\t\t\u003cspan\u003e\n\t\t\t\t\t\t\t\u003ca href=\"https://augmentedcode.io/tag/anyclass/\" rel=\"tag\"\u003eAnyClass\u003c/a\u003e, \u003ca href=\"https://augmentedcode.io/tag/ios/\" rel=\"tag\"\u003eiOS\u003c/a\u003e, \u003ca href=\"https://augmentedcode.io/tag/swift/\" rel=\"tag\"\u003eSwift\u003c/a\u003e\t\t\t\t\t\t\u003c/span\u003e\n\t\t\t\t\t\u003c/li\u003e\n\t\t\t\t\t\n\t\t\t\u003c/ul\u003e\n\n\t\t\u003c/div\u003e\n\n\t\n\t\n\n\t\n\u003c/article\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": "2024-11-04T16:00:00Z",
  "modifiedTime": "2024-10-10T14:54:24Z"
}
