{
  "id": "b1690492-7012-4dee-ae3f-84946e37e486",
  "title": "UScope: A New Linux Debugger And Not A GDB Shell, Apparently",
  "link": "https://hackaday.com/2025/02/07/uscope-a-new-linux-debugger-and-not-a-gdb-shell-apparently/",
  "description": "[Jim Colabro] is a little underwhelmed with the experience of low-level debugging of Linux applications using traditional debuggers such as GDB and LLDB. These programs have been around for a …read more",
  "author": "Dave Rowntree",
  "published": "Sat, 08 Feb 2025 00:00:25 +0000",
  "source": "https://hackaday.com/blog/feed/",
  "categories": [
    "Linux Hacks",
    "Software Development",
    "c++",
    "debugger",
    "gdb",
    "Go",
    "graphical",
    "linux",
    "LLDB",
    "rust",
    "software",
    "zig"
  ],
  "byline": "",
  "length": 2093,
  "excerpt": "[Jim Colabro] is a little underwhelmed with the experience of low-level debugging of Linux applications using traditional debuggers such as GDB and LLDB. These programs have been around for a long …",
  "siteName": "Hackaday",
  "favicon": "https://hackaday.com/wp-content/themes/hackaday-2/img/hackaday-logo_1024x1024.png?v=3",
  "text": "Skip to content [Jim Colabro] is a little underwhelmed with the experience of low-level debugging of Linux applications using traditional debuggers such as GDB and LLDB. These programs have been around for a long time, developing alongside Linux and other UNIX-like OSs, and are still solidly in the CLI domain.  Fed up with the lack of data structure support and these tools’ staleness and user experience, [Jim] has created UScope, a new debugger written from scratch with no code from the existing projects. GBD, in particular, has quite a steep learning curve once you dig into its more advanced features. Many people side-step this learning curve by running GDB within Visual Studio or some other modern IDE, but it is still the same old debugger core at the end of the day. [Jim] gripes that existing debuggers don’t support modern data structures commonly used and have poor customizability. It would be nice, for example, to write a little code, and have the debugger render a data structure graphically to aid visualisation of a problem being investigated. We know that GDB at least can be customised with Python to create application-specific pretty printers, but perhaps [Jim] has bigger plans? Anyway, Uscope currently supports only C and Zig, but work is in progress to add C++ and Go support, with plans for Rust, Odin and Jai. Time will tell whether they can gather enough interest to really drive development to support the more esoteric languages fully. Still, Rust at least has a strong support base, which might help get other people involved. It looks like early doors for this project, so time will tell whether it gets traction. We’ll certainly be keeping an eye on it in the future! If you wish to play along at home, you’ll want to start with the GitHub page, read on from there, and maybe join this discord. If you’re new to debugging on Linux, we’ve got a quick guide to GUI frontends to ease you in. If you’re less interested in code and more of a script junkie, here’s how to debug BASH script or even SED.",
  "image": "https://hackaday.com/wp-content/uploads/2025/02/406028420-c88db6da-16c3-44ce-8ae7-165ce34f2670-featured.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"page\"\u003e\n    \n\n    \u003cp\u003e\u003ca href=\"#content\"\u003eSkip to content\u003c/a\u003e\u003c/p\u003e\n\n    \u003cdiv id=\"content\"\u003e\n        \u003cmain id=\"main\" role=\"main\"\u003e\n\n        \n            \n\u003carticle itemscope=\"\" itemtype=\"http://schema.org/Article\" id=\"post-757310\"\u003e\n    \n\n    \u003cdiv itemprop=\"articleBody\"\u003e\n        \u003cp\u003e[Jim Colabro] is a little underwhelmed with the experience of low-level debugging of Linux applications using traditional debuggers such as GDB and LLDB. These programs have been around for a long time, developing alongside Linux and other UNIX-like OSs, and are still solidly in the CLI domain.  Fed up with the lack of data structure support and these tools’ staleness and user experience, [Jim] has \u003cspan\u003e\u003ca href=\"https://calabro.io/uscope\" target=\"_blank\" rel=\"noopener\" target=\"_blank\"\u003ecreated\u003c/a\u003e\u003c/span\u003e\u003ca href=\"https://calabro.io/uscope\" target=\"_blank\"\u003e UScope, a new \u003c/a\u003e\u003cspan\u003e\u003ca href=\"https://calabro.io/uscope\" target=\"_blank\" rel=\"noopener\" target=\"_blank\"\u003edebugger \u003c/a\u003ewritten\u003c/span\u003e from scratch with no code from the existing projects.\u003c/p\u003e\n\u003cp\u003eGBD, in particular, has quite a steep learning curve once you dig into its more advanced features. Many people side-step this learning curve by running GDB within Visual Studio or some other modern IDE, but it is still the same old debugger core at the end of the day. [Jim] gripes that existing debuggers don’t support modern data structures commonly used and have poor customizability. It would be nice, for example, to write a little code, and have the debugger render a data structure graphically to aid visualisation of a problem being investigated. We know that GDB at least can be \u003ca href=\"https://www.kurokatta.org/grumble/2018/05/gdb-pretty\" target=\"_blank\"\u003ecustomised with Python to create application-specific pretty printers\u003c/a\u003e, but perhaps [Jim] has bigger plans?\u003c/p\u003e\n\n\u003cp\u003eAnyway, Uscope currently supports only C and Zig, but work is in progress to add C++ and Go support, with plans for Rust, Odin and Jai. Time will tell whether they can gather enough interest to really drive development to support the more esoteric languages fully. Still, Rust at least has a strong support base, which might help get other people involved. It looks like early doors for this project, so time will tell whether it gets traction. We’ll certainly be keeping an eye on it in the future!\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003eIf you wish to play along at home, you’ll want to start with the \u003ca href=\"https://github.com/jcalabro/uscope\" target=\"_blank\" rel=\"noopener\" target=\"_blank\"\u003eGitHub page\u003c/a\u003e, read on from there, and maybe join \u003ca href=\"https://discord.com/invite/bPWC6PZPhR\" target=\"_blank\" rel=\"noopener\" target=\"_blank\"\u003ethis discord.\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003eIf you’re new to debugging on Linux, we’ve got a \u003ca href=\"https://hackaday.com/2022/06/14/linux-fu-up-your-gdb-game/\"\u003equick guide to GUI frontends to ease you in\u003c/a\u003e. If you’re less interested in code and more of a script junkie, \u003cspan\u003ehere’s how to \u003ca href=\"https://hackaday.com/2019/12/11/linux-fu-debugging-bash-scripts/\" target=\"_blank\" rel=\"noopener\"\u003edebug BASH script\u003c/a\u003e \u003ca href=\"https://hackaday.com/2020/04/24/debugging-for-sed-no-kidding/\" target=\"_blank\" rel=\"noopener\"\u003eor \u003c/a\u003e\u003c/span\u003e\u003ca href=\"https://hackaday.com/2020/04/24/debugging-for-sed-no-kidding/\" target=\"_blank\" rel=\"noopener\"\u003eeven SED\u003c/a\u003e.\u003c/p\u003e\n\t            \u003c/div\u003e\n    \u003cul\u003e\n    \t\t\t\t\t\u003cli\u003e\n    \t\t\t\t\u003ca href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fhackaday.com%2F2025%2F02%2F07%2Fuscope-a-new-linux-debugger-and-not-a-gdb-shell-apparently%2F\" target=\"_blank\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_face.png\"/\u003e \u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\t\t\u003cli\u003e\n                        \u003ca href=\"https://twitter.com/intent/tweet?text=UScope:%20A%20New%20Linux%20Debugger%20And%20emNot/em%20A%20GDB%20Shell,%20Apparently%20via%20@hackaday\u0026amp;url=https://hackaday.com/2025/02/07/uscope-a-new-linux-debugger-and-not-a-gdb-shell-apparently/\" target=\"_blank\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_twitter.png\"/\u003e\u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\t\t\u003cli\u003e\n    \t\t\t\t\u003ca href=\"https://www.linkedin.com/shareArticle?url=https%3A%2F%2Fhackaday.com%2F2025%2F02%2F07%2Fuscope-a-new-linux-debugger-and-not-a-gdb-shell-apparently%2F\" target=\"_blank\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_in.png\"/\u003e\u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\t\t\u003cli\u003e\n                \u003ca href=\"mailto:?subject=UScope%3A+A+New+Linux+Debugger+And+%3Cem%3ENot%3C%2Fem%3E+A+GDB+Shell%2C+Apparently | Hackaday\u0026amp;body=https%3A%2F%2Fhackaday.com%2F2025%2F02%2F07%2Fuscope-a-new-linux-debugger-and-not-a-gdb-shell-apparently%2F\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_mail1.png\"/\u003e\u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\u003c/ul\u003e\n    \n\u003c/article\u003e\n\n            \t\n\t\n            \n\n            \n\n\n        \n        \n\n        \n        \n\n        \n        \u003c/main\u003e\n    \u003c/div\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": "2025-02-08T00:00:25Z",
  "modifiedTime": "2025-02-07T20:29:03Z"
}
