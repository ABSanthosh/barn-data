{
  "id": "1e5e9298-b9a0-4419-a68d-f506ef289e6f",
  "title": "Linus Live-Codes Music on the Commodore 64",
  "link": "https://hackaday.com/2024/10/16/linus-live-codes-music-on-the-commodore-64/",
  "description": "In this tremendously educational video, [Linus Åkesson] takes us through how he develops a synthesizer and a sequencer and editor for it on the Commodore 64, all in BASIC. While …read more",
  "author": "Elliot Williams",
  "published": "Wed, 16 Oct 2024 11:00:17 +0000",
  "source": "https://hackaday.com/blog/feed/",
  "categories": [
    "Musical Hacks",
    "Retrocomputing",
    "chiptune",
    "commodore 64",
    "editor",
    "linus akesson",
    "live coding",
    "sequencer",
    "synthesizer"
  ],
  "byline": "",
  "length": 1639,
  "excerpt": "In this tremendously educational video, [Linus Åkesson] takes us through how he develops a synthesizer and a sequencer and editor for it on the Commodore 64, all in BASIC. While this sounds easy, […",
  "siteName": "Hackaday",
  "favicon": "https://hackaday.com/wp-content/themes/hackaday-2/img/hackaday-logo_1024x1024.png?v=3",
  "text": "Skip to content In this tremendously educational video, [Linus Åkesson] takes us through how he develops a synthesizer and a sequencer and editor for it on the Commodore 64, all in BASIC. While this sounds easy, [Linus] is doing this in hard mode: all of the audio is generated by POKE, and it gets crazier from there. If you’re one of those people out there who think that BASIC is a limited language, you need to watch this video. [Linus] can do anything with POKE. On a simple computer like the C64, the sound chip, the screen chips, and even the interrupts that control program flow are all accessible simply by writing to the right part of memory. So the main loop here simply runs through a lot of data, POKEing it into memory and turning the sound chip on and off. There’s also a counter running inside the C64 that he uses to point into a pitch lookup table in the code. But the inception part comes when he designs the sequencer and editor. Because C64 BASIC already has an interactive code editor, he hijacks this for his music editor. The final sequencer interface exists inside the program itself, and he writes music in the code, in real time, using things like LIST and editing. (Code is data, and data is code.) Add in a noise drum hack, and you’ve got some classic chiptuney sounds by the end. We love [Linus]’s minimal C64 exercises, and this one gets maximal effect out of a running C64 BASIC environment. But that’s so much code in comparison to his 256-byte “A Mind is Born” demo. But to get that done, he had to use assembly. Thanks [zogzog] for the great tip!",
  "image": "https://hackaday.com/wp-content/uploads/2024/10/making-8-bit-music-from-scratch-at-the-commodore-64-basic-prompt-ly5bhgot2ve-webm-shot0002_featured.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"page\"\u003e\n    \n\n    \u003cp\u003e\u003ca href=\"#content\"\u003eSkip to content\u003c/a\u003e\u003c/p\u003e\n\n    \u003cdiv id=\"content\"\u003e\n        \u003cmain id=\"main\" role=\"main\"\u003e\n\n        \n            \n\u003carticle itemscope=\"\" itemtype=\"http://schema.org/Article\" id=\"post-728203\"\u003e\n    \n\n    \u003cdiv itemprop=\"articleBody\"\u003e\n        \u003cp\u003eIn this tremendously educational video, [Linus Åkesson] \u003ca href=\"https://www.youtube.com/watch?v=ly5BhGOt2vE\" target=\"_blank\"\u003etakes us through how he develops a synthesizer and a sequencer and editor for it on the Commodore 64\u003c/a\u003e, all in BASIC. While this sounds easy, [Linus] is doing this in hard mode: all of the audio is generated by POKE, and it gets crazier from there. If you’re one of those people out there who think that BASIC is a limited language, you need to watch this video.\u003c/p\u003e\n\u003cp\u003e[Linus] can do anything with POKE. On a simple computer like the C64, the sound chip, the screen chips, and even the interrupts that control program flow are all accessible simply by writing to the right part of memory. So the main loop here simply runs through a lot of data, POKEing it into memory and turning the sound chip on and off. There’s also a counter running inside the C64 that he uses to point into a pitch lookup table in the code.\u003c/p\u003e\n\u003cp\u003eBut the inception part comes when he designs the sequencer and editor. Because C64 BASIC already has an interactive code editor, he hijacks this for his music editor. The final sequencer interface exists \u003cem\u003einside\u003c/em\u003e the program itself, and he writes music in the code, in real time, using things like LIST and editing. (Code is data, and data is code.) Add in a noise drum hack, and you’ve got some classic chiptuney sounds by the end.\u003c/p\u003e\n\u003cp\u003eWe love [Linus]’s minimal C64 exercises, and this one gets maximal effect out of a running C64 BASIC environment. But that’s so much code in comparison to \u003ca href=\"https://hackaday.com/2021/05/19/linus-akessons-a-mind-is-born-commodore-64-demo-in-just-256-bytes/\"\u003ehis 256-byte “A Mind is Born” demo\u003c/a\u003e. But to get that done, he had to use assembly.\u003c/p\u003e\n\u003cp\u003eThanks [zogzog] for the great tip!\u003c/p\u003e\n\n\u003cp\u003e\u003ciframe title=\"Making 8-bit Music From Scratch at the Commodore 64 BASIC Prompt\" width=\"800\" height=\"450\" src=\"https://www.youtube.com/embed/ly5BhGOt2vE?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\t            \u003c/div\u003e\n    \u003cul\u003e\n    \t\t\t\t\t\u003cli\u003e\n    \t\t\t\t\u003ca href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fhackaday.com%2F2024%2F10%2F16%2Flinus-live-codes-music-on-the-commodore-64%2F\" target=\"_blank\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_face.png\"/\u003e \u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\t\t\u003cli\u003e\n                        \u003ca href=\"https://twitter.com/intent/tweet?text=Linus%20Live-Codes%20Music%20On%20The%20Commodore%2064%20via%20@hackaday\u0026amp;url=https://hackaday.com/2024/10/16/linus-live-codes-music-on-the-commodore-64/\" target=\"_blank\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_twitter.png\"/\u003e\u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\t\t\u003cli\u003e\n    \t\t\t\t\u003ca href=\"https://www.linkedin.com/shareArticle?url=https%3A%2F%2Fhackaday.com%2F2024%2F10%2F16%2Flinus-live-codes-music-on-the-commodore-64%2F\" target=\"_blank\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_in.png\"/\u003e\u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\t\t\u003cli\u003e\n                \u003ca href=\"mailto:?subject=Linus+Live-Codes+Music+On+The+Commodore+64 | Hackaday\u0026amp;body=https%3A%2F%2Fhackaday.com%2F2024%2F10%2F16%2Flinus-live-codes-music-on-the-commodore-64%2F\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_mail1.png\"/\u003e\u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\u003c/ul\u003e\n    \n\u003c/article\u003e\n\n            \t\n\t\n            \n\n            \n\n\n        \n        \n\n        \n        \n\n        \n        \u003c/main\u003e\n    \u003c/div\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": "2024-10-16T11:00:17Z",
  "modifiedTime": "2024-10-16T11:44:12Z"
}
