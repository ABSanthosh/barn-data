{
  "id": "4bbf4ed2-8b6b-434b-88fc-ca655597721d",
  "title": "T1 is a RISC-V Cray",
  "link": "https://hackaday.com/2025/02/06/t1-is-a-risc-v-cray/",
  "description": "The crux of most supercomputers is the ability to operate on many pieces of data at once — something video cards are good at, too. Enter T1 (short for Torrent-1), …read more",
  "author": "Al Williams",
  "published": "Fri, 07 Feb 2025 00:00:17 +0000",
  "source": "https://hackaday.com/blog/feed/",
  "categories": [
    "FPGA",
    "Microcontrollers",
    "RISC-V",
    "vector processing",
    "vector processor"
  ],
  "byline": "",
  "length": 1255,
  "excerpt": "The crux of most supercomputers is the ability to operate on many pieces of data at once — something video cards are good at, too. Enter T1 (short for Torrent-1), a RISC-V vector inspired by …",
  "siteName": "Hackaday",
  "favicon": "https://hackaday.com/wp-content/themes/hackaday-2/img/hackaday-logo_1024x1024.png?v=3",
  "text": "Skip to content The crux of most supercomputers is the ability to operate on many pieces of data at once — something video cards are good at, too. Enter T1 (short for Torrent-1), a RISC-V vector inspired by the Cray X1 vector machine. T1 has support for features, including lanes and chaining. The chip contains a version of the Rocket Core for scalar operations, but there’s no official support for using it. The project claims you could easily replace that core with any other RISC-V CPU IP. By focusing on parallelism instead of out of order execution, the design gets to skip branch prediction, register renaming, and similar problems. There is an emulator if you want to experiment. You can even grab a docker image for easy installation. This doesn’t look like something you could pick up in an hour, so prepare to spend some time. Everything is bare-metal, too, so leave your favorite development tools at home. The project uses Chisel, which we’ve covered before. The build system seems very complex, but based on Nix Flakes, so it should be understandable. If your high-performance RISC-V dreams are more conventional, there’s work going on in that area, too. Title graphic from Freepik.",
  "image": "https://hackaday.com/wp-content/uploads/2025/02/chip0.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"page\"\u003e\n    \n\n    \u003cp\u003e\u003ca href=\"#content\"\u003eSkip to content\u003c/a\u003e\u003c/p\u003e\n\n    \u003cdiv id=\"content\"\u003e\n        \u003cmain id=\"main\" role=\"main\"\u003e\n\n        \n            \n\u003carticle itemscope=\"\" itemtype=\"http://schema.org/Article\" id=\"post-757856\"\u003e\n    \n\n    \u003cdiv itemprop=\"articleBody\"\u003e\n        \u003cp\u003eThe crux of most supercomputers is the ability to operate on many pieces of data at once — something video cards are good at, too. Enter \u003ca href=\"https://github.com/chipsalliance/t1\" target=\"_blank\"\u003eT1\u003c/a\u003e (short for Torrent-1), a RISC-V vector inspired by the Cray X1 vector machine.\u003c/p\u003e\n\u003cp\u003eT1 has support for features, including lanes and chaining. The chip contains a version of the Rocket Core for scalar operations, but there’s no official support for using it. The project claims you could easily replace that core with any other RISC-V CPU IP.\u003c/p\u003e\n\n\u003cp\u003eBy focusing on parallelism instead of out of order execution, the design gets to skip branch prediction, register renaming, and similar problems.\u003c/p\u003e\n\u003cp\u003eThere is an emulator if you want to experiment. You can even grab a docker image for easy installation. This doesn’t look like something you could pick up in an hour, so prepare to spend some time. Everything is bare-metal, too, so leave your favorite development tools at home.\u003c/p\u003e\n\u003cp\u003eThe project uses \u003ca href=\"https://hackaday.com/2019/10/28/chisel-away-at-fpga-development/\"\u003eChisel\u003c/a\u003e, which we’ve covered before. The build system seems very complex, but based on Nix Flakes, so it should be understandable.\u003c/p\u003e\n\u003cp\u003eIf your high-performance RISC-V dreams are more \u003ca href=\"https://hackaday.com/2025/01/03/high-performance-risc-v/\"\u003econventional\u003c/a\u003e, there’s work going on in that area, too.\u003c/p\u003e\n\u003cp\u003eTitle graphic from \u003ca href=\"https://www.freepik.com\" target=\"_blank\"\u003eFreepik\u003c/a\u003e.\u003c/p\u003e\n\t            \u003c/div\u003e\n    \u003cul\u003e\n    \t\t\t\t\t\u003cli\u003e\n    \t\t\t\t\u003ca href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fhackaday.com%2F2025%2F02%2F06%2Ft1-is-a-risc-v-cray%2F\" target=\"_blank\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_face.png\"/\u003e \u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\t\t\u003cli\u003e\n                        \u003ca href=\"https://twitter.com/intent/tweet?text=T1%20Is%20A%20RISC-V%20Cray%20via%20@hackaday\u0026amp;url=https://hackaday.com/2025/02/06/t1-is-a-risc-v-cray/\" target=\"_blank\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_twitter.png\"/\u003e\u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\t\t\u003cli\u003e\n    \t\t\t\t\u003ca href=\"https://www.linkedin.com/shareArticle?url=https%3A%2F%2Fhackaday.com%2F2025%2F02%2F06%2Ft1-is-a-risc-v-cray%2F\" target=\"_blank\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_in.png\"/\u003e\u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\t\t\u003cli\u003e\n                \u003ca href=\"mailto:?subject=T1+Is+A+RISC-V+Cray | Hackaday\u0026amp;body=https%3A%2F%2Fhackaday.com%2F2025%2F02%2F06%2Ft1-is-a-risc-v-cray%2F\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_mail1.png\"/\u003e\u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\u003c/ul\u003e\n    \n\u003c/article\u003e\n\n            \t\n\t\n            \n\n            \n\n\n        \n        \n\n        \n        \n\n        \n        \u003c/main\u003e\n    \u003c/div\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": "2025-02-07T00:00:17Z",
  "modifiedTime": "2025-02-06T18:02:17Z"
}
