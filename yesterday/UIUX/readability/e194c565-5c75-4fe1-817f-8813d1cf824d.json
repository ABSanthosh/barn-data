{
  "id": "e194c565-5c75-4fe1-817f-8813d1cf824d",
  "title": "Prevent component detaching in design system with slots",
  "link": "https://uxdesign.cc/prevent-component-detaching-in-design-system-with-slots-ec4c01aaf360?source=rss----138adf9c44c---4",
  "description": "Empowering designers with guided freedom, balancing creativity and consistency in design systemsContinue reading on UX Collective »",
  "author": "Oliver V. Ustinovich",
  "published": "Sun, 15 Dec 2024 20:26:52 GMT",
  "source": "https://uxdesign.cc/feed",
  "categories": [
    "figma",
    "ux",
    "design",
    "design-systems",
    "product-design"
  ],
  "byline": "Oliver V. Ustinovich",
  "length": 1295,
  "excerpt": "Long Story Short: Add slots — empty placeholder components — to strategic places in your design system components where users might need to insert additional content⁠. When needed, design system…",
  "siteName": "UX Collective",
  "favicon": "https://miro.medium.com/v2/resize:fill:256:256/1*dn6MbbIIlwobt0jnUcrt_Q.png",
  "text": "Empowering designers with guided freedom, balancing creativity and consistency in design systemsA dialog component architecture enhanced with slots. Image by Oliver V. Ustinovich.Long Story Short: Add slots — empty placeholder components — to strategic places in your design system components where users might need to insert additional content⁠. When needed, design system users can select these slot layers and swap them with any desired element.Core principlesLet’s start with a brief history: The concept of slots in design systems originated from the Web Components specification introduced by the W3C, where the \u003cslot\u003e element allowed developers to create flexible, reusable UI components. This idea was further popularized by frameworks like Vue.js, Svelte, and then React contributed indirectly with its use of children and render props, influencing how slots were conceptualized. From a design perspective, the concept of slots aligns with principles of modular design and atomic design, allowing creating flexible and scalable blocks.Imagine a Dialog Footer component in your Design System with a Cancel Button on the left and a Primary Button on the right. This is your standard layout. However, sometimes you might need to add extra elements like infographics, secondary buttons, or…",
  "image": "https://miro.medium.com/v2/resize:fit:1200/1*_wdAtlUrUtfrRH8BwsAE8w.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003carticle\u003e\u003cdiv\u003e\u003cdiv\u003e\u003ch2 id=\"153c\"\u003eEmpowering designers with guided freedom, balancing creativity and consistency in design systems\u003c/h2\u003e\u003cdiv\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://medium.com/@uxfella?source=post_page---byline--ec4c01aaf360--------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Oliver V. Ustinovich\" src=\"https://miro.medium.com/v2/resize:fill:88:88/1*DFeHpKDcqcoAY2H9dMEPTg.jpeg\" width=\"44\" height=\"44\" loading=\"lazy\" data-testid=\"authorPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://uxdesign.cc/?source=post_page---byline--ec4c01aaf360--------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"UX Collective\" src=\"https://miro.medium.com/v2/resize:fill:48:48/1*mDhF9X4VO0rCrJvWFatyxg.png\" width=\"24\" height=\"24\" loading=\"lazy\" data-testid=\"publicationPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cfigure\u003e\u003cfigcaption\u003eA dialog component architecture enhanced with slots. Image by Oliver V. Ustinovich.\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"0255\"\u003eLong Story Short: Add slots — empty placeholder components — to strategic places in your design system components where users might need to insert additional content⁠. When needed, design system users can select these slot layers and swap them with any desired element.\u003c/p\u003e\u003ch2 id=\"3c37\"\u003eCore principles\u003c/h2\u003e\u003cp id=\"7b33\"\u003eLet’s start with a brief history: The concept of slots in design systems originated from the \u003ca href=\"https://www.w3schools.com/tags/tag_slot.asp\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eWeb Components specification introduced by the W3C\u003c/a\u003e, where the \u003ccode\u003e\u0026lt;slot\u0026gt;\u003c/code\u003e element allowed developers to create flexible, reusable UI components. This idea was further popularized by frameworks like \u003ca href=\"https://vuejs.org/guide/components/slots\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eVue.js\u003c/a\u003e, \u003ca href=\"https://svelte.dev/docs/svelte/legacy-slots\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eSvelte\u003c/a\u003e, and then React contributed indirectly with its use of children and render props, influencing how slots were conceptualized. From a design perspective, the concept of slots aligns with principles of modular design and atomic design, allowing creating flexible and scalable blocks.\u003c/p\u003e\u003cp id=\"0934\"\u003eImagine a \u003ccode\u003eDialog Footer\u003c/code\u003e component in your Design System with a Cancel Button on the left and a Primary Button on the right. This is your standard layout. However, sometimes you might need to add extra elements like infographics, secondary buttons, or…\u003c/p\u003e\u003c/div\u003e\u003c/article\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": "2024-12-15T20:26:52.23Z",
  "modifiedTime": null
}
