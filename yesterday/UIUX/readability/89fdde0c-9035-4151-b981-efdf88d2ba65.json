{
  "id": "89fdde0c-9035-4151-b981-efdf88d2ba65",
  "title": "95% of homepages are inaccessible",
  "link": "https://uxdesign.cc/95-of-homepages-are-inaccessible-71c3f815a389?source=rss----138adf9c44c---4",
  "description": "",
  "author": "Allie Paschal",
  "published": "Thu, 08 May 2025 19:00:46 GMT",
  "source": "https://uxdesign.cc/feed",
  "categories": [
    "wcag",
    "web-accessibility",
    "ux-design",
    "accessibility",
    "ux"
  ],
  "byline": "Allie Paschal",
  "length": 14719,
  "excerpt": "Next week is the 14th annual Global Accessibility Awareness Day (GAAD). This tradition was founded in 2011 with the goal of getting more people to think about and apply web accessibility practices to…",
  "siteName": "UX Collective",
  "favicon": "https://miro.medium.com/v2/resize:fill:256:256/1*dn6MbbIIlwobt0jnUcrt_Q.png",
  "text": "95% of homepages are inaccessibleHere’s what UX designers can do about itNext week is the 14th annual Global Accessibility Awareness Day (GAAD). This tradition was founded in 2011 with the goal of getting more people to think about and apply web accessibility practices to include users with disabilities.Though it seems web accessibility is a priority in product development, almost 95% of home pages include WCAG conformance failures, such as low-contrast text or missing alt text, according to WebAIM.Digital products failing to comply with WCAG standards ostracize users with disabilities. These users can range from a person with low-vision, a person who cannot use a mouse, or even a person who is colorblind. “Inclusive design” has been a buzzword in the tech industry for some time — it’s time to not only talk about this design approach for clout, but to actually do it.Digital products need to comply with WCAG standards so user with disabilities can access themWhy is GAAD important?Have you ever heard any variation of the following two phrases?“We just don’t have time to go back and fix the accessibility issues.”“The website works for me; I don’t think we have much to worry about.”Though web accessibility continues to be a “trendy” topic, accessibility failure rates are still high (and disappointing). It is costly to go back and fix accessibility issues like keyboard accessibility or color contrast issues; but without fixing the problems, some users cannot use your website.As a UX designer who is able-bodied (or doesn’t identify with having a disability), it can be easy to forget about users who don’t use the web the same way. For instance, let’s say you use your mouse to move a Trello card by dragging and dropping it from “Not started” to “In-progress.” A user who can only use their keyboard cannot move the card by dragging and dropping; they must have an alternative way to get the same results.The traditional design approach doesn’t include users with disabilities, but all designers can change that by fostering an accessibility-first mindset and knowing common (but preventable) issues they should be on the lookout for. Let’s look at the current state of web accessibility, review common accessibility issues, then look at free tools to incorporate into your design practice.What’s the current state of web accessibility?WebAIM (Web Accessibility in Mind) published results from their “WebAIM Million” for 2025. The report is a web accessibility audit where one million home pages of top websites are tested for WCAG (Web Content Accessibility Guidelines) compliance.Almost 95% of the million home pages tested in the report included WCAG conformance failures. To detect these failures, WebAIM used a mix of automated testing with the WAVE API tool in addition to manually testing (it is impossible to catch all accessibility issues with only automated testing).Chart showing the percentage of home pages with detected WCAG conformance failures from 2019 to 2025, via WebAIMThough this report shows a slight decrease in the percentage of homepages with accessibility issues from last year (down 1.1%), it also shows a trend that home page’s average complexity increases each year. So as more and more design elements are added to home pages, they become more prone to accessibility issues.What were the most common accessibility issues found?96% of the detected accessibility issues fall into 6 buckets. Here are the buckets from most to least common:Low-contrast text: 79.1%Missing alternative (alt) text for images: 55.5%Missing form input labels: 48.2%Empty links: 45.4%Empty buttons: 29.6%Missing document language: 15.8%Chart showing the 6 primary buckets of the most common accessibility issues found in home pages, via WebAIMNot only were these buckets the prevalent accessibility issues found in the this WebAIM report, they’ve also been the most common for the last 5 years — showing a pattern of not addressing (and continuing to create) the same issues year after year.What kind of user impact do these accessibility failures cause?Low-contrast text: If a user with low-vision can’t read faint text, they can’t get the information they need. Any text smaller than 18 PT (or less than 14 PT bold) must have a color contrast ratio of 4.5:1 with its background so more people can read the text.Missing alt text for images: When an image shows important information, a user who consumes content through a screen reader must be able to get that information in some other form. If an image doesn’t include alternative text (through an alt attribute), the screen reader may only read the image’s file name or nothing at all.Missing form input labels: Let’s say a user with a screen reader is filling in a webpage’s form. If multiple input fields don’t include a label element to associate the label with the field, the screen reader will only read what the field control is (I.E., “Input” or “Select”); so the user won’t get any context or instructions for what information is requested.Empty links: Empty links occur when an image is used as a link, but the image doesn’t include alt text. They can also occur if an element including a link is deleted without modifying the HTML. As a screen reader user navigates a web page, the screen reader will tell the user they’ve landed on a link, but the user won’t get context like what the link does.Empty buttons: Similar to empty links, empty buttons do not describe the function of the button. So when a screen reader user is navigating a web page, the screen reader will announce the button, but the user won’t be made aware of what the button does (I.E., submits a form or logs in). So the user is forced to trigger the button to find out what it does.Missing document language: When a webpage’s primary language isn’t specified, screen readers may misinterpret the text — hurting users who aren’t native speakers or need translation. A screen reader user may hear mispronounced words or grammar, which blocks their ability to understand the content.Design to prevent common accessibility issuesIt’s actually quite easy to prevent and fix these common accessibility issues. Given the bulk of issues detected were from the 6 buckets discussed previously, digital products could dramatically improve accessibility if they all addressed these problems.Though some of these issues are caused by how designs were implemented, designers still have responsibility in how they handover designs to their developers.With the following techniques, designers can proactively create accessible content as well as advocate for accessible implementation with recommendations. After designs have been implemented, designers should QA a testing environment or live product for accessibility issues to flag for remediation ASAP.Let’s review a designer’s responsibilities and how they can QA for each accessibility bucket.Low-contrast textDesigner’s responsibilities:For images of text and any text smaller than 18 PT (roughly equivalent to 24 PX), make sure the color contrast has a ratio of at least 4.5:1For text larger than 18 PT (or 14 PT bold), make sure the color contrast has a ratio of at least 3:1The only exceptions to this color requirements are logotypes, inactive/ disabled UI controls, or any pure decorative element (I.E., divider lines)How to QA websites for low-contrast text:Manually check your design’s color using contrast checker tools like WebAIM or with Figma’s native color contrast toolRun an automated accessibility testing tool (like Silktide) on your browser-based product to flag color contrast issues that should be double-checkedWebAIM’s free contrast checker tool testing between blue and white colorsMissing alt textDesigner’s responsibilities:Write recommended alt text for each image used on a web page (under 150 characters)For images, suggest using the alt attribute on the \u003cimg\u003e elementFor SVGs, suggest giving the SVG role=\"img\"and using a \u003ctitle\u003e attribute (I.E., \u003csvg role=\"img\" title=\"A brown circle\"\u003e\u003ccircle cx=\"30\" cy=\"30\" r=\"10\" fill=\"blue\"\u003e\u003c/circle\u003e\u003c/svg\u003e)If the image is purely decorative, suggest using a null alt attribute (alt=\"\")How to QA websites for missing alt text:Manually read the alt text for images to ensure it’s descriptive of the image and ensure any decorative images doesn’t have alt textRun an automated accessibility testing tool on your browser-based product to flag any image or SVG that doesn’t include alt text, and isn’t marked as decorativeMissing form labelsDesigner’s responsibilities:Use descriptive labels for the form fields; let the user know what data they need to inputPosition the label close to the input for sighted users to predict the relationshipRecommend using \u003clabel\u003e tags that use the for=\"\" attribute, and reference the ID to match the label with the \u003cinput\u003e (I.E., \u003clabel for=\"firstname1\"\u003eFirst name:\u003c/label\u003e\u003cinput type=\"text\" name=\"firstname\" id=\"firstname1\"\u003e)How to QA websites for missing form labels:Run an automated accessibility testing tool on your browser-based product to flag any \u003cinput\u003e tag that isn’t associated with a \u003clabel\u003e, as well as makes sure the \u003clabel\u003e includes textThe Silktide tool caught a form field (the Search function) that is missing a label on Marta’s homepageEmpty linksDesigner’s responsibilities:Use descriptive labels for the links; let the user know where the link will take themFor links, suggest adding text content to the \u003ca\u003e element (I.E., \u003ca href=”https://google.com”\u003eGoogle homepage\u003c/a\u003e)For links containing SVGs or Webfont icon, suggest hiding the element with aria-hidden=\"true\" and adding an aria-label attribute to the \u003ca\u003e elementHow to QA websites for empty links:Run an automated accessibility testing tool (like WAVE API) on your browser-based product to flag any link missing anchor text, as well as if a link containing an SVG or Webfont icon is missing an aria-label or screen reader textThe Silktide tool caught an image being used as a link without alt text within a restaurant websiteEmpty buttonsDesigner’s responsibilities:For button controls, recommend adding a value attribute to an \u003cinput\u003e (I.E., \u003cinput type=\"button\" value=\"Submit\"\u003e)For images acting as buttons, recommend adding an alt attribute to the image to describe the button’s function (I.E., \u003cimg src=\"button-pic\" alt=\"Submit\"\u003e)How to QA websites for empty buttons:Run an automated accessibility testing tool on your browser-based product to flag any button without any content in the button’s opening and closing tag, as well as if an input is missing a value attributeMissing document languageDesigner’s responsibilities:For web pages, recommend using the lang attribute on the HTML element (I.E., \u003chtml lang=\"en\"\u003e)For PDFs, recommend setting the default language using the /Lang attribute in the document catalogHow to QA websites for document language:On the Chrome browser, open “Developer tools” (Option+Command+I on Mac)Under \u003c!DOCTYPE html\u003e, the lang attribute should be specified in the first \u003chtml\u003e tagGoogle’s search page includes the lang attribute in the first \u003chtml\u003e tagFree tools to catch accessibility failuresWhether you’re designing, QA-ing an implemented feature, or wanting to see where your digital product currently stands with accessibility standards, there are many helpful tools to prevent and find issues. Most of these tools offer a solid version for free usage — no payment needed (yay!).Let’s review both design and QA tools below.Design toolsFigma’s native color checker: Figma’s new feature allows you to natively check the color contrast without running any plugin or checking the colors with a third-party tool. Just select the layer with the color you want to check, then make sure “Check color contrast” is selected.Figma’s native color contrast checker feature checking text color in a card componentStark Accessibility Checker: This is a Figma plugin where you can check color contrast, simulate color blindness, and even annotate designs for focus order and alt text.Stark’s Figma plugin with focus order annotations for a radio button group componentA11Y Annotation Kit: A free Figma community file that offers UI components to markup designs with a suggested page title, headings, landmarks, etc. These annotations help with developer handoff so they understand actions they need to take to implement accessible designs.A11Y Annotation Kit’s intro page showing how to use the annotations in your Figma designsQA toolsWAVE API: This is a free tool that scans and flags accessibility issues on live websites. It outputs a quick summary to understand how accessible the website is, but also provides the details of issues for remediation.WAVE API tools scanning a transportation website for accessibility failuresGoogle Lighthouse: This feature is free and is already included in the Developer Tools feature within the Chrome browser. All you need to do is press Option+Command+I (on Mac) to open DevTools, then select “Lighthouse” from the tab panel. This tool gives you an overview for accessibility issues as well as SEO and performance optimization.Google Lighthouse tool showing results from an analyzation for a transportation websiteAccessibility Checker: Another free tool where you can insert your website to test, then the tool will scan and flag for accessibility failures. It gives you an audit score so you can track improvements to the score as you remediate issues, and it gives you suggestions on how to solve each issue.Accessibility Checker tool showing results after scanning a transportation websiteThis Global Accessibility Awareness Day, let’s reflect on the shortcomings of web accessibility. What is one thing each of us can do to improve the “WebAIM Million” results for next year? Maybe it’s double-checking your color contrast ratios or establishing a Design System requirement that every input field on a form includes a label.Whatever the one thing is, make it a habit (then add to the habit).This “one habit at a time” application allows for accessible design and development to happen. Accessible interfaces benefit everyone’s experience when using a website or native application — not only users with disabilities. It empowers all people to enhance their capabilities to do something they couldn’t do before. Continuing to learn and apply accessible practices is better than not trying at all.Though Global Accessibility Awareness Day brings light and optimism for designing for and including people with disabilities, it’s easy to feel defeated with how many accessibility failures still exist today. But by advocating for better accessibility practices within your own process as well as your company’s, accessibility will be prioritized and less issues will occur.",
  "image": "https://miro.medium.com/v2/da:true/resize:fit:1200/0*thnETdTJDjD3pxFV",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003carticle\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cp\u003e\u003ch2 id=\"951e\" data-testid=\"storyTitle\"\u003e95% of homepages are inaccessible\u003c/h2\u003e\u003c/p\u003e\u003cdiv\u003e\u003ch2 id=\"ee07\"\u003e\u003cem\u003eHere’s what UX designers can do about it\u003c/em\u003e\u003c/h2\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://paschalallie.medium.com/?source=post_page---byline--71c3f815a389---------------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Allie Paschal\" src=\"https://miro.medium.com/v2/resize:fill:64:64/1*fpy4J0gheIdnAy3snP-GRg.png\" width=\"32\" height=\"32\" loading=\"lazy\" data-testid=\"authorPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/div\u003e\u003cp id=\"dabe\"\u003eNext week is the 14th annual \u003ca href=\"https://accessibility.day/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eGlobal Accessibility Awareness Day (GAAD)\u003c/a\u003e. This tradition was founded in 2011 with the goal of getting more people to think about and apply web accessibility practices to include users with disabilities.\u003c/p\u003e\u003cp id=\"738a\"\u003e\u003cstrong\u003eThough it seems web accessibility is a priority in product development, almost 95% of home pages include \u003c/strong\u003e\u003ca href=\"https://www.w3.org/WAI/standards-guidelines/wcag/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eWCAG conformance\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e failures, such as low-contrast text or missing alt text, \u003c/strong\u003e\u003ca href=\"https://webaim.org/projects/million/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eaccording to WebAIM\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e.\u003c/strong\u003e\u003c/p\u003e\u003cp id=\"2005\"\u003eDigital products failing to comply with WCAG standards ostracize users with disabilities. These users can range from a person with low-vision, a person who cannot use a mouse, or even a person who is colorblind. “Inclusive design” has been a buzzword in the tech industry for some time — it’s time to not only talk about this design approach for clout, but to actually do it.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eDigital products need to comply with WCAG standards so user with disabilities can access them\u003c/figcaption\u003e\u003c/figure\u003e\u003ch2 id=\"4087\"\u003eWhy is GAAD important?\u003c/h2\u003e\u003cp id=\"9d97\"\u003eHave you ever heard any variation of the following two phrases?\u003c/p\u003e\u003cul\u003e\u003cli id=\"e059\"\u003e“We just don’t have time to go back and fix the accessibility issues.”\u003c/li\u003e\u003cli id=\"d82a\"\u003e“The website works for me; I don’t think we have much to worry about.”\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"dbbe\"\u003eThough web accessibility continues to be a “trendy” topic, accessibility failure rates are still high (and disappointing). It is costly to go back and fix accessibility issues like keyboard accessibility or color contrast issues; but without fixing the problems, some users cannot use your website.\u003c/p\u003e\u003cp id=\"2e94\"\u003eAs a UX designer who is able-bodied (or doesn’t identify with having a disability), it can be easy to forget about users who don’t use the web the same way. For instance, let’s say you use your mouse to move a Trello card by dragging and dropping it from “Not started” to “In-progress.” A user who can only use their keyboard cannot move the card by dragging and dropping; they must have an alternative way to get the same results.\u003c/p\u003e\u003cp id=\"0d30\"\u003e\u003cstrong\u003eThe traditional design approach doesn’t include users with disabilities,\u003c/strong\u003e but all designers can change that by fostering an accessibility-first mindset and knowing common (but preventable) issues they should be on the lookout for. Let’s look at the current state of web accessibility, review common accessibility issues, then look at free tools to incorporate into your design practice.\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003ch2 id=\"62c5\"\u003eWhat’s the current state of web accessibility?\u003c/h2\u003e\u003cp id=\"5ef2\"\u003eWebAIM (Web Accessibility in Mind) published results from their \u003ca href=\"https://webaim.org/projects/million/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e“WebAIM Million” for 2025\u003c/a\u003e. The report is a web accessibility audit where one million home pages of top websites are tested for WCAG (Web Content Accessibility Guidelines) compliance.\u003c/p\u003e\u003cp id=\"b4c6\"\u003eAlmost 95% of the million home pages tested in the report included WCAG conformance failures. To detect these failures, WebAIM used a mix of automated testing with the \u003ca href=\"https://wave.webaim.org/api/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eWAVE API tool\u003c/a\u003e in addition to manually testing (it is impossible to catch all accessibility issues with only automated testing).\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003e\u003cem\u003eChart showing the percentage of home pages with detected WCAG conformance failures from 2019 to 2025, \u003c/em\u003e\u003ca href=\"https://webaim.org/projects/million/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cem\u003evia WebAIM\u003c/em\u003e\u003c/a\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"df57\"\u003eThough this report shows a slight decrease in the percentage of homepages with accessibility issues from last year (down 1.1%), it also shows a trend that home page’s average complexity increases each year. So as more and more design elements are added to home pages, they become more prone to accessibility issues.\u003c/p\u003e\u003cp id=\"1af5\"\u003e\u003cstrong\u003eWhat were the most common accessibility issues found?\u003c/strong\u003e\u003c/p\u003e\u003cp id=\"618b\"\u003e96% of the detected accessibility issues fall into 6 buckets. Here are the buckets from most to least common:\u003c/p\u003e\u003cul\u003e\u003cli id=\"96fe\"\u003eLow-contrast text: 79.1%\u003c/li\u003e\u003cli id=\"2f9d\"\u003eMissing alternative (alt) text for images: 55.5%\u003c/li\u003e\u003cli id=\"4c7f\"\u003eMissing form input labels: 48.2%\u003c/li\u003e\u003cli id=\"80d9\"\u003eEmpty links: 45.4%\u003c/li\u003e\u003cli id=\"926e\"\u003eEmpty buttons: 29.6%\u003c/li\u003e\u003cli id=\"6d86\"\u003eMissing document language: 15.8%\u003c/li\u003e\u003c/ul\u003e\u003cfigure\u003e\u003cfigcaption\u003e\u003cem\u003eChart showing the 6 primary buckets of the most common accessibility issues found in home pages, \u003c/em\u003e\u003ca href=\"https://webaim.org/projects/million/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cem\u003evia WebAIM\u003c/em\u003e\u003c/a\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"8de7\"\u003eNot only were these buckets the prevalent accessibility issues found in the this WebAIM report, they’ve also been the most common for the last 5 years — showing a pattern of not addressing (and continuing to create) the same issues year after year.\u003c/p\u003e\u003cp id=\"d372\"\u003e\u003cstrong\u003eWhat kind of user impact do these accessibility failures cause?\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"e2ac\"\u003e\u003ca href=\"https://www.w3.org/WAI/WCAG22/Understanding/contrast-minimum#techniques\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eLow-contrast text\u003c/strong\u003e\u003c/a\u003e: If a user with low-vision can’t read faint text, they can’t get the information they need. Any text smaller than 18 PT (or less than 14 PT bold) must have a color contrast ratio of 4.5:1 with its background so more people can read the text.\u003c/li\u003e\u003cli id=\"2bc4\"\u003e\u003ca href=\"https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html#techniques\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eMissing alt text for images\u003c/strong\u003e\u003c/a\u003e: When an image shows important information, a user who consumes content through a screen reader must be able to get that information in some other form. If an image doesn’t include alternative text (through an alt attribute), the screen reader may only read the image’s file name or nothing at all.\u003c/li\u003e\u003cli id=\"4c5f\"\u003e\u003ca href=\"https://www.w3.org/WAI/WCAG21/Understanding/labels-or-instructions.html#techniques\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eMissing form input labels\u003c/strong\u003e\u003c/a\u003e: Let’s say a user with a screen reader is filling in a webpage’s form. If multiple input fields don’t include a label element to associate the label with the field, the screen reader will only read what the field control is (I.E., “Input” or “Select”); so the user won’t get any context or instructions for what information is requested.\u003c/li\u003e\u003cli id=\"d98b\"\u003e\u003ca href=\"https://www.w3.org/WAI/WCAG21/Understanding/link-purpose-in-context.html\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eEmpty links\u003c/strong\u003e\u003c/a\u003e: Empty links occur when an image is used as a link, but the image doesn’t include alt text. They can also occur if an element including a link is deleted without modifying the HTML. As a screen reader user navigates a web page, the screen reader will tell the user they’ve landed on a link, but the user won’t get context like what the link does.\u003c/li\u003e\u003cli id=\"2720\"\u003e\u003ca href=\"https://www.w3.org/WAI/WCAG21/Understanding/non-text-content.html\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eEmpty buttons\u003c/strong\u003e\u003c/a\u003e: Similar to empty links, empty buttons do not describe the function of the button. So when a screen reader user is navigating a web page, the screen reader will announce the button, but the user won’t be made aware of what the button does (I.E., submits a form or logs in). So the user is forced to trigger the button to find out what it does.\u003c/li\u003e\u003cli id=\"74f6\"\u003e\u003ca href=\"https://www.w3.org/WAI/WCAG21/Understanding/language-of-page.html#brief\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eMissing document language\u003c/strong\u003e\u003c/a\u003e: When a webpage’s primary language isn’t specified, screen readers may misinterpret the text — hurting users who aren’t native speakers or need translation. A screen reader user may hear mispronounced words or grammar, which blocks their ability to understand the content.\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"0213\"\u003eDesign to prevent common accessibility issues\u003c/h2\u003e\u003cp id=\"11e9\"\u003eIt’s actually quite easy to prevent and fix these common accessibility issues. Given the bulk of issues detected were from the 6 buckets discussed previously, digital products could dramatically improve accessibility if they all addressed these problems.\u003c/p\u003e\u003cp id=\"c0bb\"\u003e\u003cstrong\u003eThough some of these issues are caused by how designs were implemented, designers still have responsibility in how they handover designs to their developers.\u003c/strong\u003e\u003c/p\u003e\u003cp id=\"abeb\"\u003eWith the following techniques, designers can proactively create accessible content as well as advocate for accessible implementation with recommendations. After designs have been implemented, designers should QA a testing environment or live product for accessibility issues to flag for remediation ASAP.\u003c/p\u003e\u003cp id=\"7acd\"\u003eLet’s review a designer’s responsibilities and how they can QA for each accessibility bucket.\u003c/p\u003e\u003ch2 id=\"e580\"\u003eLow-contrast text\u003c/h2\u003e\u003cp id=\"fcf6\"\u003e\u003cstrong\u003eDesigner’s responsibilities:\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"54d3\"\u003eFor images of text and any text smaller than 18 PT (roughly equivalent to 24 PX), make sure the color contrast has a ratio of at least 4.5:1\u003c/li\u003e\u003cli id=\"3df9\"\u003eFor text larger than 18 PT (or 14 PT bold), make sure the color contrast has a ratio of at least 3:1\u003c/li\u003e\u003cli id=\"7816\"\u003eThe only exceptions to this color requirements are logotypes, inactive/ disabled UI controls, or any pure decorative element (I.E., divider lines)\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"36ea\"\u003e\u003cstrong\u003eHow to QA websites for low-contrast text:\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"5040\"\u003eManually check your design’s color using \u003ca href=\"https://webaim.org/resources/contrastchecker/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003econtrast checker tools like WebAIM\u003c/a\u003e or with \u003ca href=\"https://www.youtube.com/watch?v=5uvU1-2xq3U\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eFigma’s native color contrast tool\u003c/a\u003e\u003c/li\u003e\u003cli id=\"2d29\"\u003eRun an automated accessibility testing tool (like \u003ca href=\"https://silktide.com/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eSilktide\u003c/a\u003e) on your browser-based product to flag color contrast issues that should be double-checked\u003c/li\u003e\u003c/ul\u003e\u003cfigure\u003e\u003cfigcaption\u003e\u003cem\u003eWebAIM’s free contrast checker tool testing between blue and white colors\u003c/em\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003ch2 id=\"5770\"\u003eMissing alt text\u003c/h2\u003e\u003cp id=\"86e8\"\u003e\u003cstrong\u003eDesigner’s responsibilities:\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"1815\"\u003eWrite recommended alt text for each image used on a web page (under 150 characters)\u003c/li\u003e\u003cli id=\"97ef\"\u003eFor images, suggest using the alt attribute on the \u003ccode\u003e\u0026lt;img\u0026gt;\u003c/code\u003e element\u003c/li\u003e\u003cli id=\"b117\"\u003eFor SVGs, suggest giving the \u003ccode\u003eSVG role=\u0026#34;img\u0026#34;\u003c/code\u003eand using a \u003ccode\u003e\u0026lt;title\u0026gt;\u003c/code\u003e attribute (I.E., \u003ccode\u003e\u0026lt;svg role=\u0026#34;img\u0026#34; title=\u0026#34;A brown circle\u0026#34;\u0026gt;\u0026lt;circle cx=\u0026#34;30\u0026#34; cy=\u0026#34;30\u0026#34; r=\u0026#34;10\u0026#34; fill=\u0026#34;blue\u0026#34;\u0026gt;\u0026lt;/circle\u0026gt;\u0026lt;/svg\u0026gt;\u003c/code\u003e)\u003c/li\u003e\u003cli id=\"0d2e\"\u003eIf the image is purely decorative, suggest using a null alt attribute (\u003ccode\u003ealt=\u0026#34;\u0026#34;\u003c/code\u003e)\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"92f2\"\u003e\u003cstrong\u003eHow to QA websites for missing alt text:\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"cd3d\"\u003eManually read the alt text for images to ensure it’s descriptive of the image and ensure any decorative images doesn’t have alt text\u003c/li\u003e\u003cli id=\"86cf\"\u003eRun an automated accessibility testing tool on your browser-based product to flag any image or SVG that doesn’t include alt text, and isn’t marked as decorative\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"1810\"\u003eMissing form labels\u003c/h2\u003e\u003cp id=\"7fd1\"\u003e\u003cstrong\u003eDesigner’s responsibilities:\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"16c4\"\u003eUse descriptive labels for the form fields; let the user know what data they need to input\u003c/li\u003e\u003cli id=\"7682\"\u003ePosition the label close to the input for sighted users to predict the relationship\u003c/li\u003e\u003cli id=\"77ff\"\u003eRecommend using \u003ccode\u003e\u0026lt;label\u0026gt;\u003c/code\u003e tags that use the \u003ccode\u003efor=\u0026#34;\u0026#34;\u003c/code\u003e attribute, and reference the ID to match the label with the \u003ccode\u003e\u0026lt;input\u0026gt;\u003c/code\u003e (I.E., \u003ccode\u003e\u0026lt;label for=\u0026#34;firstname1\u0026#34;\u0026gt;First name:\u0026lt;/label\u0026gt;\u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;firstname\u0026#34; id=\u0026#34;firstname1\u0026#34;\u0026gt;\u003c/code\u003e)\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"4643\"\u003e\u003cstrong\u003eHow to QA websites for missing form labels:\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"26b7\"\u003eRun an automated accessibility testing tool on your browser-based product to flag any \u003ccode\u003e\u0026lt;input\u0026gt;\u003c/code\u003e tag that isn’t associated with a \u003ccode\u003e\u0026lt;label\u0026gt;\u003c/code\u003e, as well as makes sure the \u003ccode\u003e\u0026lt;label\u0026gt;\u003c/code\u003e includes text\u003c/li\u003e\u003c/ul\u003e\u003cfigure\u003e\u003cfigcaption\u003e\u003cem\u003eThe Silktide tool caught a form field (the Search function) that is missing a label on \u003c/em\u003e\u003ca href=\"https://www.itsmarta.com/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cem\u003eMarta’s homepage\u003c/em\u003e\u003c/a\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003ch2 id=\"aa4f\"\u003eEmpty links\u003c/h2\u003e\u003cp id=\"8bbb\"\u003e\u003cstrong\u003eDesigner’s responsibilities:\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"4555\"\u003eUse descriptive labels for the links; let the user know where the link will take them\u003c/li\u003e\u003cli id=\"a4e3\"\u003eFor links, suggest adding text content to the \u003ccode\u003e\u0026lt;a\u0026gt;\u003c/code\u003e element (I.E., \u003ccode\u003e\u0026lt;a href=”\u003ca href=\"https://google.com\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ehttps://google.com\u003c/a\u003e”\u0026gt;Google homepage\u0026lt;/a\u0026gt;\u003c/code\u003e)\u003c/li\u003e\u003cli id=\"4146\"\u003eFor links containing SVGs or Webfont icon, suggest hiding the element with \u003ccode\u003earia-hidden=\u0026#34;true\u0026#34;\u003c/code\u003e and adding an \u003ccode\u003earia-label\u003c/code\u003e attribute to the \u003ccode\u003e\u0026lt;a\u0026gt;\u003c/code\u003e element\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"ddf0\"\u003e\u003cstrong\u003eHow to QA websites for empty links:\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"23a5\"\u003eRun an automated accessibility testing tool (like \u003ca href=\"https://wave.webaim.org/api/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eWAVE API\u003c/a\u003e) on your browser-based product to flag any link missing anchor text, as well as if a link containing an SVG or Webfont icon is missing an aria-label or screen reader text\u003c/li\u003e\u003c/ul\u003e\u003cfigure\u003e\u003cfigcaption\u003e\u003cem\u003eThe Silktide tool caught an image being used as a link without alt text within a restaurant website\u003c/em\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003ch2 id=\"9981\"\u003eEmpty buttons\u003c/h2\u003e\u003cp id=\"a442\"\u003e\u003cstrong\u003eDesigner’s responsibilities:\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"c341\"\u003eFor button controls, recommend adding a value attribute to an \u003ccode\u003e\u0026lt;input\u0026gt;\u003c/code\u003e (I.E., \u003ccode\u003e\u0026lt;input type=\u0026#34;button\u0026#34; value=\u0026#34;Submit\u0026#34;\u0026gt;\u003c/code\u003e)\u003c/li\u003e\u003cli id=\"cffb\"\u003eFor images acting as buttons, recommend adding an alt attribute to the image to describe the button’s function (I.E., \u003ccode\u003e\u0026lt;img src=\u0026#34;button-pic\u0026#34; alt=\u0026#34;Submit\u0026#34;\u0026gt;\u003c/code\u003e)\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"fdea\"\u003e\u003cstrong\u003eHow to QA websites for empty buttons:\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"97a7\"\u003eRun an automated accessibility testing tool on your browser-based product to flag any button without any content in the button’s opening and closing tag, as well as if an input is missing a value attribute\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"762f\"\u003eMissing document language\u003c/h2\u003e\u003cp id=\"bccc\"\u003e\u003cstrong\u003eDesigner’s responsibilities:\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"38c3\"\u003eFor web pages, recommend using the lang attribute on the HTML element (I.E., \u003ccode\u003e\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt;\u003c/code\u003e)\u003c/li\u003e\u003cli id=\"44b6\"\u003eFor PDFs, recommend setting the default language using the \u003ccode\u003e/Lang\u003c/code\u003e attribute in the document catalog\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"e1f5\"\u003e\u003cstrong\u003eHow to QA websites for document language:\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"405a\"\u003eOn the Chrome browser, open “Developer tools” (Option+Command+I on Mac)\u003c/li\u003e\u003cli id=\"d780\"\u003eUnder \u003ccode\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/code\u003e, the lang attribute should be specified in the first \u003ccode\u003e\u0026lt;html\u0026gt;\u003c/code\u003e tag\u003c/li\u003e\u003c/ul\u003e\u003cfigure\u003e\u003cfigcaption\u003e\u003cem\u003eGoogle’s search page includes the lang attribute in the first \u0026lt;html\u0026gt; tag\u003c/em\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003ch2 id=\"f574\"\u003eFree tools to catch accessibility failures\u003c/h2\u003e\u003cp id=\"31d4\"\u003eWhether you’re designing, QA-ing an implemented feature, or wanting to see where your digital product currently stands with accessibility standards, there are many helpful tools to prevent and find issues. Most of these tools offer a solid version for free usage — no payment needed (yay!).\u003c/p\u003e\u003cp id=\"5fda\"\u003eLet’s review both design and QA tools below.\u003c/p\u003e\u003ch2 id=\"e382\"\u003eDesign tools\u003c/h2\u003e\u003cul\u003e\u003cli id=\"1d5b\"\u003e\u003ca href=\"https://www.youtube.com/watch?v=5uvU1-2xq3U\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eFigma’s native color checker\u003c/strong\u003e\u003c/a\u003e: Figma’s new feature allows you to natively check the color contrast without running any plugin or checking the colors with a third-party tool. Just select the layer with the color you want to check, then make sure “Check color contrast” is selected.\u003c/li\u003e\u003c/ul\u003e\u003cfigure\u003e\u003cfigcaption\u003e\u003cem\u003eFigma’s native color contrast checker feature checking text color in a card component\u003c/em\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003cul\u003e\u003cli id=\"7808\"\u003e\u003ca href=\"https://www.figma.com/community/plugin/732603254453395948/stark-contrast-accessibility-checker\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eStark Accessibility Checker\u003c/strong\u003e\u003c/a\u003e: This is a Figma plugin where you can check color contrast, simulate color blindness, and even annotate designs for focus order and alt text.\u003c/li\u003e\u003c/ul\u003e\u003cfigure\u003e\u003cfigcaption\u003e\u003cem\u003eStark’s Figma plugin with focus order annotations for a radio button group component\u003c/em\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003cul\u003e\u003cli id=\"3457\"\u003e\u003ca href=\"https://www.figma.com/community/file/953682768192596304/a11y-annotation-kit\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eA11Y Annotation Kit\u003c/strong\u003e\u003c/a\u003e: A free Figma community file that offers UI components to markup designs with a suggested page title, headings, landmarks, etc. These annotations help with developer handoff so they understand actions they need to take to implement accessible designs.\u003c/li\u003e\u003c/ul\u003e\u003cfigure\u003e\u003cfigcaption\u003e\u003cem\u003eA11Y Annotation Kit’s intro page showing how to use the annotations in your Figma designs\u003c/em\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003ch2 id=\"5764\"\u003eQA tools\u003c/h2\u003e\u003cul\u003e\u003cli id=\"cda1\"\u003e\u003ca href=\"https://wave.webaim.org/api/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eWAVE API\u003c/strong\u003e\u003c/a\u003e: This is a free tool that scans and flags accessibility issues on live websites. It outputs a quick summary to understand how accessible the website is, but also provides the details of issues for remediation.\u003c/li\u003e\u003c/ul\u003e\u003cfigure\u003e\u003cfigcaption\u003e\u003cem\u003eWAVE API tools scanning a transportation website for accessibility failures\u003c/em\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003cul\u003e\u003cli id=\"44e9\"\u003e\u003ca href=\"https://developer.chrome.com/docs/lighthouse/overview\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eGoogle Lighthouse\u003c/strong\u003e\u003c/a\u003e: This feature is free and is already included in the Developer Tools feature within the Chrome browser. All you need to do is press Option+Command+I (on Mac) to open DevTools, then select “Lighthouse” from the tab panel. This tool gives you an overview for accessibility issues as well as SEO and performance optimization.\u003c/li\u003e\u003c/ul\u003e\u003cfigure\u003e\u003cfigcaption\u003e\u003cem\u003eGoogle Lighthouse tool showing results from an analyzation for a transportation website\u003c/em\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003cul\u003e\u003cli id=\"7ef5\"\u003e\u003ca href=\"https://www.accessibilitychecker.org/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eAccessibility Checker\u003c/strong\u003e\u003c/a\u003e: Another free tool where you can insert your website to test, then the tool will scan and flag for accessibility failures. It gives you an audit score so you can track improvements to the score as you remediate issues, and it gives you suggestions on how to solve each issue.\u003c/li\u003e\u003c/ul\u003e\u003cfigure\u003e\u003cfigcaption\u003eAccessibility Checker tool showing results after scanning a transportation website\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"fe6d\"\u003eThis Global Accessibility Awareness Day, let’s reflect on the shortcomings of web accessibility. What is one thing each of us can do to improve the “WebAIM Million” results for next year? Maybe it’s double-checking your color contrast ratios or establishing a Design System requirement that every input field on a form includes a label.\u003c/p\u003e\u003cp id=\"89fd\"\u003e\u003cstrong\u003eWhatever the one thing is, make it a habit (then add to the habit).\u003c/strong\u003e\u003c/p\u003e\u003cp id=\"b483\"\u003eThis “one habit at a time” application allows for accessible design and development to happen. Accessible interfaces benefit everyone’s experience when using a website or native application — not only users with disabilities. It empowers all people to enhance their capabilities to do something they couldn’t do before. Continuing to learn and apply accessible practices is better than not trying at all.\u003c/p\u003e\u003cp id=\"166f\"\u003eThough Global Accessibility Awareness Day brings light and optimism for designing for and including people with disabilities, it’s easy to feel defeated with how many accessibility failures still exist today. But by advocating for better accessibility practices within your own process as well as your company’s, accessibility will be prioritized and less issues will occur.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/article\u003e\u003c/div\u003e",
  "readingTime": "16 min read",
  "publishedTime": "2025-05-08T19:00:46.112Z",
  "modifiedTime": null
}
