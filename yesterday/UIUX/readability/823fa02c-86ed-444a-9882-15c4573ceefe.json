{
  "id": "823fa02c-86ed-444a-9882-15c4573ceefe",
  "title": "My kids and I used AI to build a game",
  "link": "https://uxdesign.cc/my-kids-and-i-used-ai-to-build-a-game-b13f2fa22f5b?source=rss----138adf9c44c---4",
  "description": "",
  "author": "Ben Snyder",
  "published": "Tue, 18 Feb 2025 19:23:14 GMT",
  "source": "https://uxdesign.cc/feed",
  "categories": [
    "ux",
    "ai",
    "design",
    "gaming",
    "technology"
  ],
  "byline": "Ben Snyder",
  "length": 6202,
  "excerpt": "Two years ago, my kids and I built Simple Kid Games. As the name implies, the website has a few very simple web-based desktop HTML games designed by kids. The goal then was to teach my kids about…",
  "siteName": "UX Collective",
  "favicon": "https://miro.medium.com/v2/resize:fill:256:256/1*dn6MbbIIlwobt0jnUcrt_Q.png",
  "text": "We found the limits of the current generation of AI tooling.Can modern AI dev tools enable kids (and a zany father) to build a mobile game on a snow day?SummaryTools like Replit and Vercel v0 can deliver impressive resultsThe tools struggle with accuracy, humans are better at fine detailsRight now, tools like the ones tested are best for getting to 80% doneTwo years ago, my kids and I built Simple Kid Games. As the name implies, the website has a few very simple web-based desktop HTML games designed by kids.The goal then was to teach my kids about technology and how to write HTML, JavaScript, and CSS. You can read about that adventure here.In what seems like a blink of an eye, AI has completely revolutionized the way we build technology. So, we thought we’d expand Simple Kid Games by using AI to build a new mobile game.Here’s how it went building BirdDash.President’s Day 2025 was a surprise snow day. We got to work in our pajamas.Getting startedAll good projects start with a plan. Armed with markers and paper, the kids sketched ideas for a side-scrolling runner. They worked on level and character designs while I spun up Vercel v0 and Replit.I started a doc to capture our initial prompt as well as some reflections along the way.After a little trial and error, we settled on an approach to crafting the prompts based on real-time collaboration. The kids initially struggled to describe the mechanics of our game.Once we got rolling, and after a little help, they got more excited and skilled at suggesting prompts to make improvements to the app.Like stealing candy from an LLMReplit and Vercel v0 are similar tools with similar capabilities. Both turn text prompts and files into functioning apps, all written in modern front-end code. Each tool also offers deployment and hosting options.The same initial prompt was used for each tool. We started with Replit.Replit’s Agent turned our initial prompt into a neat summary and offered new ideas (although it never did add sound effects).Replit took about 4 minutes to build the first version of the app from this initial prompt, asking us if we see the game and are able to use it:Replit: Can you see the infinite runner game with a black canvas and a white rectangle (player)? Are you able to make the player jump by pressing spacebar or touching the screen?Humans: No there’s nothing on the screen except the words distance: 0m and coins: 0. And nothing is workingReplit: I’ll check why the game canvas isn’t showing up and fix the display and functionality issues.After that, we were actually amazed that there was a functioning game! It was rudimentary but functional and… fun. The kids were delighted with the initial results.The initial version of Bird Dash (then called Bird Runner) was functional and fun. There was one problem, the obstacles (red squares) were not at the same level as the character (white square) so you couldn’t fail.At this point, we decided to head to Vercel v0 and see what it could do. With the same prompt, we received a somewhat more transactional, though useful, response telling us the steps it’d take to develop our game.Vercel v0 was a bit more straight to the point, telling us the steps it would take to build the app.With a comical shrug from the kids (“who cares, looks good”), we hit enter and Vercel did its thing and returned… an error. After telling v0 that we were kids and didn’t understand what was happening, it fixed the boo-boo.We told Vercel v0 to treat us like kids and it fixed the scary error.Now, to Vercel’s credit, v0 was creating this app to run on a server with a database and probably some sophisticated routing and whatnot, but we were here to see how far we could get without coding.Unfortunately, that was as far as we were able to get with v0. After a few tries to get a functional version of Bird Dash, we abandoned ship and headed back to Replit.After several attempts at getting something working, Vercel v0 delivered this gem. With more time, I suspect we could have made this functional, but these new tools are raising the standards of expectation pretty quickly.We did like a “splash screen” that Vercel decided to add to the game, so we took that idea and headed back to Replit. After instructing Replit to add said screen, the game was starting to look good.There was one problem, the character (represented by a white square) was not aligned with the obstacles on the stage (represented by red squares) so it was impossible to run into an obstacle.The white square, our character placeholder, would slide under the red obstacles.This became the most frustrating part of creating our game. We tried 7 different prompts to get the objects to align and appear on the same y-axis. We eventually got it “good enough” and moved on.After 7 different attempts, the purple bird and the spikey obstacle were aligned, but are rendered floating above the x-axis of the stage.Ready for takeoffAfter a few more failed tweaks — including trying our best to change the black background to white and adjust the stage placement — we decided good enough was good enough and deployed.Interestingly, out of this whole experiment, the most difficult thing was remembering my hosting account and resetting the SSL certificate for SimpleKidGames.com on Namecheap.After getting accustomed to Vercel and Replit, I don’t know that I’ll ever go back to traditional hosting solutions — a surprising outcome I hadn’t expected out of this experiment.Both Vercel and Replit have built-in hosting and deployment options with cloud scaling and other features.Not great, but actually pretty greatIt’s amazing that I’m dissatisfied with the results at all. The quality is not great, but then again, it would have taken me multiple days to get the game to this point with my own hands.In 1.5 hours on a snow day, my kids and I were able to think of an idea for a game, experiment with a few different tools for building it, and ship a functioning version of the idea to our website.Give Bird Dash (the AI called it Bird Runner in the UI) a try at SimpleKidsGames.com and let us know what you think.If dad was building this game, it would be much more accurate but take a lot longer time. — My son",
  "image": "https://miro.medium.com/v2/resize:fit:1200/1*jVn6SkxNaVPLBzaAREW2XA.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003carticle\u003e\u003cdiv\u003e\u003cdiv\u003e\u003ch2 id=\"2ca0\"\u003eWe found the limits of the current generation of AI tooling.\u003c/h2\u003e\u003cdiv\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://bcs.medium.com/?source=post_page---byline--b13f2fa22f5b---------------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Ben Snyder\" src=\"https://miro.medium.com/v2/resize:fill:88:88/1*qL93dNJjHTJbOv5livsTsg.jpeg\" width=\"44\" height=\"44\" loading=\"lazy\" data-testid=\"authorPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://uxdesign.cc/?source=post_page---byline--b13f2fa22f5b---------------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"UX Collective\" src=\"https://miro.medium.com/v2/resize:fill:48:48/1*mDhF9X4VO0rCrJvWFatyxg.png\" width=\"24\" height=\"24\" loading=\"lazy\" data-testid=\"publicationPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfigure\u003e\u003cfigcaption\u003eCan modern AI dev tools enable kids (and a zany father) to build a mobile game on a snow day?\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003cdiv\u003e\u003ch2 id=\"3fb1\"\u003eSummary\u003c/h2\u003e\u003cul\u003e\u003cli id=\"26b6\"\u003eTools like Replit and Vercel v0 can deliver impressive results\u003c/li\u003e\u003cli id=\"6383\"\u003eThe tools struggle with accuracy, humans are better at fine details\u003c/li\u003e\u003cli id=\"0e99\"\u003eRight now, tools like the ones tested are best for getting to 80% done\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"a2dd\"\u003eTwo years ago, my kids and I built \u003ca href=\"https://simplekidgames.com/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eSimple Kid Games\u003c/a\u003e. As the name implies, the website has a few very simple web-based desktop HTML games designed by kids.\u003c/p\u003e\u003cp id=\"4670\"\u003eThe goal then was to teach my kids about technology and how to write HTML, JavaScript, and CSS. You can read about that adventure \u003ca href=\"https://medium.com/user-experience-design-1/my-kids-designed-a-game-and-this-is-what-i-learned-86a261eca324\" rel=\"noopener\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\u003cp id=\"6298\"\u003eIn what seems like a blink of an eye, AI has completely revolutionized the way we build technology. So, we thought we’d expand Simple Kid Games by using AI to build a new mobile game.\u003c/p\u003e\u003cp id=\"a2eb\"\u003eHere’s how it went building \u003ca href=\"https://bird-dash-benscsnyder.replit.app/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eBirdDash\u003c/a\u003e.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003ePresident’s Day 2025 was a surprise snow day. We got to work in our pajamas.\u003c/figcaption\u003e\u003c/figure\u003e\u003ch2 id=\"d178\"\u003eGetting started\u003c/h2\u003e\u003cp id=\"0cce\"\u003eAll good projects start with a plan. Armed with markers and paper, the kids sketched ideas for a side-scrolling runner. They worked on level and character designs while I spun up \u003ca href=\"https://vercel.com/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eVercel v0\u003c/a\u003e and \u003ca href=\"https://replit.com/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eReplit\u003c/a\u003e.\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfigure\u003e\u003cfigcaption\u003eI started a doc to capture our initial prompt as well as some reflections along the way.\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"0117\"\u003eAfter a little trial and error, we settled on an approach to crafting the prompts based on real-time collaboration. The kids initially struggled to describe the mechanics of our game.\u003c/p\u003e\u003cp id=\"2a0f\"\u003eOnce we got rolling, and after a little help, they got more excited and skilled at suggesting prompts to make improvements to the app.\u003c/p\u003e\u003ch2 id=\"4e6e\"\u003eLike stealing candy from an LLM\u003c/h2\u003e\u003cp id=\"62b4\"\u003eReplit and Vercel v0 are similar tools with similar capabilities. Both turn text prompts and files into functioning apps, all written in modern front-end code. Each tool also offers deployment and hosting options.\u003c/p\u003e\u003cp id=\"3515\"\u003eThe same initial prompt was used for each tool. We started with Replit.\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfigure\u003e\u003cfigcaption\u003eReplit’s Agent turned our initial prompt into a neat summary and offered new ideas (although it never did add sound effects).\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"abd3\"\u003eReplit took about 4 minutes to build the first version of the app from this initial prompt, asking us if we see the game and are able to use it:\u003c/p\u003e\u003cblockquote\u003e\u003cp id=\"f597\"\u003eReplit: Can you see the infinite runner game with a black canvas and a white rectangle (player)? Are you able to make the player jump by pressing spacebar or touching the screen?\u003c/p\u003e\u003cp id=\"41de\"\u003eHumans: No there’s nothing on the screen except the words distance: 0m and coins: 0. And nothing is working\u003c/p\u003e\u003cp id=\"1d20\"\u003eReplit: I’ll check why the game canvas isn’t showing up and fix the display and functionality issues.\u003c/p\u003e\u003c/blockquote\u003e\u003cp id=\"84b9\"\u003eAfter that, we were actually amazed that there was a functioning game! It was rudimentary but functional and… fun. The kids were delighted with the initial results.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eThe initial version of Bird Dash (then called Bird Runner) was functional and fun. There was one problem, the obstacles (red squares) were not at the same level as the character (white square) so you couldn’t fail.\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"305f\"\u003eAt this point, we decided to head to Vercel v0 and see what it could do. With the same prompt, we received a somewhat more transactional, though useful, response telling us the steps it’d take to develop our game.\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfigure\u003e\u003cfigcaption\u003eVercel v0 was a bit more straight to the point, telling us the steps it would take to build the app.\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"f929\"\u003eWith a comical shrug from the kids (“who cares, looks good”), we hit enter and Vercel did its thing and returned… an error. After telling v0 that we were kids and didn’t understand what was happening, it fixed the boo-boo.\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfigure\u003e\u003cfigcaption\u003eWe told Vercel v0 to treat us like kids and it fixed the scary error.\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"06a5\"\u003eNow, to Vercel’s credit, v0 was creating this app to run on a server with a database and probably some sophisticated routing and whatnot, but we were here to see how far we could get without coding.\u003c/p\u003e\u003cp id=\"30bd\"\u003eUnfortunately, that was as far as we were able to get with v0. After a few tries to get a functional version of Bird Dash, we abandoned ship and headed back to Replit.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eAfter several attempts at getting something working, Vercel v0 delivered this gem. With more time, I suspect we could have made this functional, but these new tools are raising the standards of expectation pretty quickly.\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"8f03\"\u003eWe did like a “splash screen” that Vercel decided to add to the game, so we took that idea and headed back to Replit. After instructing Replit to add said screen, the game was starting to look good.\u003c/p\u003e\u003cp id=\"f70d\"\u003eThere was one problem, the character (represented by a white square) was not aligned with the obstacles on the stage (represented by red squares) so it was impossible to run into an obstacle.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eThe white square, our character placeholder, would slide under the red obstacles.\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"60bd\"\u003eThis became the most frustrating part of creating our game. We tried 7 different prompts to get the objects to align and appear on the same y-axis. We eventually got it “good enough” and moved on.\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfigure\u003e\u003cfigcaption\u003eAfter 7 different attempts, the purple bird and the spikey obstacle were aligned, but are rendered floating above the x-axis of the stage.\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003cdiv\u003e\u003ch2 id=\"dab5\"\u003eReady for takeoff\u003c/h2\u003e\u003cp id=\"fe55\"\u003eAfter a few more failed tweaks — including trying our best to change the black background to white and adjust the stage placement — we decided good enough was good enough and deployed.\u003c/p\u003e\u003cp id=\"a045\"\u003eInterestingly, out of this whole experiment, the most difficult thing was remembering my hosting account and resetting the SSL certificate for SimpleKidGames.com on Namecheap.\u003c/p\u003e\u003cp id=\"3a76\"\u003eAfter getting accustomed to Vercel and Replit, I don’t know that I’ll ever go back to traditional hosting solutions — a surprising outcome I hadn’t expected out of this experiment.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eBoth Vercel and Replit have built-in hosting and deployment options with cloud scaling and other features.\u003c/figcaption\u003e\u003c/figure\u003e\u003ch2 id=\"5e9e\"\u003eNot great, but actually pretty great\u003c/h2\u003e\u003cp id=\"1b53\"\u003eIt’s amazing that I’m dissatisfied with the results at all. The quality is not great, but then again, it would have taken me multiple days to get the game to this point with my own hands.\u003c/p\u003e\u003cp id=\"bfd6\"\u003eIn 1.5 hours on a snow day, my kids and I were able to think of an idea for a game, experiment with a few different tools for building it, and ship a functioning version of the idea to our website.\u003c/p\u003e\u003cp id=\"700b\"\u003eGive \u003ca href=\"https://bird-dash-benscsnyder.replit.app/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eBird Dash\u003c/a\u003e (the AI called it Bird Runner in the UI) a try at \u003ca href=\"https://simplekidgames.com/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eSimpleKidsGames.com\u003c/a\u003e and let us know what you think.\u003c/p\u003e\u003cblockquote\u003e\u003cp id=\"e412\"\u003eIf dad was building this game, it would be much more accurate but take a lot longer time. — My son\u003c/p\u003e\u003c/blockquote\u003e\u003c/div\u003e\u003c/div\u003e\u003c/article\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": "2025-02-18T11:44:15.383Z",
  "modifiedTime": null
}
