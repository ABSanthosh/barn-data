{
  "id": "249cff3a-3e62-4119-b6c7-a8f4706e9399",
  "title": "OKLCH, explained for designers",
  "link": "https://uxdesign.cc/oklch-explained-for-designers-dc6af4433611?source=rss----138adf9c44c---4",
  "description": "",
  "author": "Samuel Wong",
  "published": "Wed, 05 Feb 2025 00:31:07 GMT",
  "source": "https://uxdesign.cc/feed",
  "categories": [
    "colors",
    "figma",
    "web-design",
    "ui"
  ],
  "byline": "Samuel Wong",
  "length": 4502,
  "excerpt": "Last week, TailwindCSS released their v4 version with revamped color tokens using OKLCH. I forsee more web devs are going to adopt OKLCH as the new standard for color tokens. This might sound very…",
  "siteName": "UX Collective",
  "favicon": "https://miro.medium.com/v2/resize:fill:256:256/1*dn6MbbIIlwobt0jnUcrt_Q.png",
  "text": "Understanding next-gen color space that makes color scaling easier and future-proofs your design systemLast week, TailwindCSS released their v4 version with revamped color tokens using OKLCH. I forsee more web devs are going to adopt OKLCH as the new standard for color tokens. This might sound very technical, but it’s actually a significant change UI/UX designer should be aware of. With major browsers now reaching 93.1% adoption rate, OKLCH is on track to be the new standard that bridges design and development.Why should designers care about OKLCH?Most designers are familiar with RGB and HSL color spaces, but OKLCH is a new way of thinking about color. Here’s an example: Traditionally, RGB use hexcodes (e.g. #0077CC), which are not easy to understand for humans. HSL is a more human-readable format (e.g. hsl(205deg, 100%, 40%, 1) for the same color), but lightness in HSL have different contrast in different hues, ergo it's not perfect with accessibility issues.OKLCH is a new system that solves this by offering a color space that’s closer to how we actually perceive colors with better ergonomics in design and development experience. It stands for Oklab Lightness, Chroma, and Hue, and it’s written as oklch(56.01% 0.1577 249.8 / 50%).3D render \u0026 syntax of OKLCH color space, illustration render from OKLCH.comAdditionally, have I mentioned that OKLCH supports a wider range of colors with P3 compatibility? It means 30% more new colors that you can use that are humanly perceivable compared to RGB. There are more colors to choose from for your palette.Applying OKLCH in a design systemThink about the last time you tried to create a consistent color scale for your design system. With RGB or HSL, increasing brightness often leads to washed-out colors, and it’s very time-consuming to tweak color for both light and dark mode, while maintaining accessible color contrast. OKLCH’s perceptual uniformity ensures that color transitions feel natural. By deducting lightness and chroma without changing the hue. It’s way easier to finetune the desired color scale. The value corresponds to how bright and how saturated we perceive the color, unlike HSL where yellow appears brighter than blue at the same lightness value.By doing so, OKLCH also means devs can calculate color scale more efficiently by defining fewer color tokens. For example, in disabled or hover state, you can simply set CSS calculating function oklch(from var(--color-blue) calc(l/2 + .2) c h); to darken the color. To explain this example in plain text, it means we're taking the lightness value of the defined blue variable, and then divide it by 2, and then add 20% to it, and then use the same chroma and hue value to calculate the new color.OK, so what are we waiting for, and why are we still using RGB?While modern browsers have embraced OKLCH with 93% adoption (industry standard is 98%), native app frameworks are still playing catch-up. This creates a fragmented ecosystem where web applications can leverage OKLCH’s benefits, but native apps remain falling behind with RGB \u0026 HSL. This poses a challenge for designers to maintain consistency across platforms.While flagship smartphones received P3 color gamut support, offering richer color reproduction. Majority of home-use desktop monitors still only support sRGB color space by default. Only professional monitors support wider color gamuts. This gap means lower ROI for brands to invest in updating their color where only a few users can see the difference.Even design tools like Figma, Sketch have not natively supported OKLCH yet. Third-party plugins are required to convert OKLCH to RGB.Comprehensive color picker of OKLCH, with compatible color gamut range visualisedLooking forwardWith great backward compatibility in modern CSS, You can still start using OKLCH today given all the mentioned limitation, as long as you as you set RGB as fallback. This will ensure widest adoption without breaking old devices and technologies. For designers getting started with OKLCH, I recommend experimenting with the color space in Chrome DevTools or color picker first, understand how OKLCH values translate to visual colors, making it easier to incorporate into your design process later.With all being said, OKLCH is still subjectively better and I believe it’s on track to be the new color standard that bridges design and development. Let me know what you think!ResourcesTailwindCSS v4 DocumentationOKLCH Color Picker ToolOKLCH Color Variations Figma Plugin",
  "image": "https://miro.medium.com/v2/resize:fit:1200/0*rpLTOMQ7Rc8ioj_Q.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cdiv\u003e\u003ch2 id=\"7021\"\u003eUnderstanding next-gen color space that makes color scaling easier and future-proofs your design system\u003c/h2\u003e\u003cdiv\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://desktopofsamuel.medium.com/?source=post_page---byline--dc6af4433611--------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Samuel Wong\" src=\"https://miro.medium.com/v2/resize:fill:88:88/1*u1kUYmzNOHuahOkFJ1yK7A.jpeg\" width=\"44\" height=\"44\" loading=\"lazy\" data-testid=\"authorPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://uxdesign.cc/?source=post_page---byline--dc6af4433611--------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"UX Collective\" src=\"https://miro.medium.com/v2/resize:fill:48:48/1*mDhF9X4VO0rCrJvWFatyxg.png\" width=\"24\" height=\"24\" loading=\"lazy\" data-testid=\"publicationPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"342c\"\u003eLast week, TailwindCSS released their v4 version with \u003ca href=\"https://tailwindcss.com/docs/colors#default-color-palette-reference\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003erevamped color tokens using OKLCH\u003c/a\u003e. I forsee more web devs are going to adopt OKLCH as the new standard for color tokens. This might sound very technical, but it’s actually a significant change UI/UX designer should be aware of. With major browsers now reaching 93.1% adoption rate, OKLCH is on track to be the new standard that bridges design and development.\u003c/p\u003e\u003ch2 id=\"5438\"\u003eWhy should designers care about OKLCH?\u003c/h2\u003e\u003cp id=\"b386\"\u003eMost designers are familiar with RGB and HSL color spaces, but OKLCH is a new way of thinking about color. Here’s an example: Traditionally, RGB use hexcodes (e.g. \u003ccode\u003e#0077CC\u003c/code\u003e), which are not easy to understand for humans. HSL is a more human-readable format (e.g. \u003ccode\u003ehsl(205deg, 100%, 40%, 1)\u003c/code\u003e for the same color), but lightness in HSL have different contrast in different hues, ergo it\u0026#39;s not perfect with accessibility issues.\u003c/p\u003e\u003cp id=\"9504\"\u003eOKLCH is a new system that solves this by offering a color space that’s closer to how we actually perceive colors with better ergonomics in design and development experience. It stands for Oklab Lightness, Chroma, and Hue, and it’s written as \u003ccode\u003eoklch(56.01% 0.1577 249.8 / 50%)\u003c/code\u003e.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003e\u003cem\u003e3D render \u0026amp; syntax of OKLCH color space, illustration render from \u003c/em\u003e\u003ca href=\"https://oklch.com/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cem\u003eOKLCH.com\u003c/em\u003e\u003c/a\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"b3dd\"\u003eAdditionally, have I mentioned that OKLCH supports a wider range of colors with P3 compatibility? It means 30% more new colors that you can use that are humanly perceivable compared to RGB. There are more colors to choose from for your palette.\u003c/p\u003e\u003ch2 id=\"7092\"\u003eApplying OKLCH in a design system\u003c/h2\u003e\u003cp id=\"b8f0\"\u003eThink about the last time you tried to create a consistent color scale for your design system. With RGB or HSL, increasing brightness often leads to washed-out colors, and it’s very time-consuming to tweak color for both light and dark mode, while maintaining accessible color contrast. OKLCH’s perceptual uniformity ensures that color transitions feel natural. By deducting lightness and chroma without changing the hue. It’s way easier to finetune the desired color scale. The value corresponds to how bright and how saturated we perceive the color, unlike HSL where yellow appears brighter than blue at the same lightness value.\u003c/p\u003e\u003cp id=\"61f9\"\u003eBy doing so, OKLCH also means devs can calculate color scale more efficiently by defining fewer color tokens. For example, in disabled or hover state, you can simply set CSS calculating function \u003ccode\u003eoklch(from var(--color-blue) calc(l/2 + .2) c h);\u003c/code\u003e to darken the color. To explain this example in plain text, it means we\u0026#39;re taking the lightness value of the defined blue variable, and then divide it by 2, and then add 20% to it, and then use the same chroma and hue value to calculate the new color.\u003c/p\u003e\u003ch2 id=\"3dda\"\u003eOK, so what are we waiting for, and why are we still using RGB?\u003c/h2\u003e\u003col\u003e\u003cli id=\"7b0c\"\u003eWhile \u003ca href=\"https://caniuse.com/mdn-css_types_color_oklch\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003emodern browsers\u003c/a\u003e have embraced OKLCH with 93% adoption (industry standard is 98%), native app frameworks are still playing catch-up. This creates a fragmented ecosystem where web applications can leverage OKLCH’s benefits, but native apps remain falling behind with RGB \u0026amp; HSL. This poses a challenge for designers to maintain consistency across platforms.\u003c/li\u003e\u003cli id=\"9bad\"\u003eWhile flagship smartphones received P3 color gamut support, offering richer color reproduction. Majority of home-use desktop monitors still only support sRGB color space by default. Only professional monitors support wider color gamuts. This gap means lower ROI for brands to invest in updating their color where only a few users can see the difference.\u003c/li\u003e\u003cli id=\"f780\"\u003eEven design tools like Figma, Sketch have not natively supported OKLCH yet. Third-party plugins are required to convert OKLCH to RGB.\u003c/li\u003e\u003c/ol\u003e\u003cfigure\u003e\u003cfigcaption\u003e\u003cem\u003eComprehensive color picker of \u003c/em\u003e\u003ca href=\"https://oklch.com/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cem\u003eOKLCH\u003c/em\u003e\u003c/a\u003e\u003cem\u003e, with compatible color gamut range visualised\u003c/em\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003ch2 id=\"887c\"\u003eLooking forward\u003c/h2\u003e\u003cp id=\"4d10\"\u003eWith great backward compatibility in modern CSS, You can still start using OKLCH today given all the mentioned limitation, as long as you as you set RGB as fallback. This will ensure widest adoption without breaking old devices and technologies. For designers getting started with OKLCH, I recommend experimenting with the color space in Chrome DevTools or \u003ca href=\"https://oklch.com\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ecolor picker\u003c/a\u003e first, understand how OKLCH values translate to visual colors, making it easier to incorporate into your design process later.\u003c/p\u003e\u003cp id=\"f9e1\"\u003eWith all being said, OKLCH is still subjectively better and I believe it’s on track to be the new color standard that bridges design and development. Let me know what you think!\u003c/p\u003e\u003ch2 id=\"a989\"\u003eResources\u003c/h2\u003e\u003cul\u003e\u003cli id=\"c0d5\"\u003e\u003ca href=\"https://tailwindcss.com/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eTailwindCSS v4 Documentation\u003c/a\u003e\u003c/li\u003e\u003cli id=\"ac3f\"\u003e\u003ca href=\"https://oklch.com/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eOKLCH Color Picker Tool\u003c/a\u003e\u003c/li\u003e\u003cli id=\"fe1e\"\u003e\u003ca href=\"https://www.figma.com/community/plugin/1261721955648857186\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eOKLCH Color Variations Figma Plugin\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": "2025-02-01T00:00:45.609Z",
  "modifiedTime": null
}
