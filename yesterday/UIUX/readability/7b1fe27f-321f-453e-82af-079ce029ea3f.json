{
  "id": "7b1fe27f-321f-453e-82af-079ce029ea3f",
  "title": "Scope in Generative AI Features",
  "link": "https://www.nngroup.com/articles/scope-ai-features/",
  "description": "When designing AI product features, scope shapes key decisions. Research shows that focused AI features lead to better user understanding and adoption.",
  "author": "Kate Moran",
  "published": "Fri, 28 Feb 2025 18:00:00 +0000",
  "source": "https://www.nngroup.com/feed/rss/",
  "categories": [
    "Article"
  ],
  "byline": "Kate Moran",
  "length": 14852,
  "excerpt": "When designing AI product features, scope shapes key decisions. Research shows that focused AI features lead to better user understanding and adoption.",
  "siteName": "Nielsen Norman Group",
  "favicon": "",
  "text": "Summary:  When designing AI product features, scope shapes key decisions. Research shows that focused AI features lead to better new user understanding and adoption. When designing an AI feature, its scope (how broad or narrow its capabilities are) influences its usability. Our research shows that narrower AI features are (typically) easier for new users to understand and adopt. This article compares broad AI systems like ChatGPT with narrow AI tools like Spotify’s playlist generator, exploring how scope impacts design. Defining AI Scope Broad vs. Narrow: A Comparison Table Narrow Scope Allows for Guided AI and Better UX Narrow Scope Is Less Likely to Be “AI for AI’s Sake” Defining AI Scope Before beginning to design a UI for any user-facing AI-powered feature, teams should answer these 4 strategic questions: What specific user problem are we trying to solve? How would fixing this problem contribute to business goals? Is AI truly the best solution for this problem? How complete, clean, and structured is the data we’ll feed into the AI? If, after these considerations, an AI solution still seems the best course of action, the next aspect to consider is the feature’s scope. Scope is a useful way to categorize interactive, user-facing AI features or products — in other words, how broad or narrow the AI system’s capabilities are. The scope of an AI feature describes the breadth of its data inputs and functionality. The broader the scope, the more variety of inputs the system can accept and the wider the range of possible outputs the system can produce. Think of scope as a spectrum, stretching from very broad to very narrow. Any given AI product can sit anywhere on this spectrum. Scope can be defined for any type of system, AI or not, user-facing or running in the back end. However, this article focuses on interactive, user-facing AI features. For an AI feature, its scope is determined by the: Kinds and size of input it accepts Types of outputs it produces Tasks it can handle Subject areas it covers The scope of any given AI feature or product has significant implications for its design and usability. Broad-Scope AI Systems Some systems, like ChatGPT or Claude, are very broad in scope. They can handle a wide variety of tasks and respond to open-ended user inputs. Some can accept many types of input data, including images, videos, or other file types. Some have access to the live internet, while others operate with static datasets. These broad-scope systems can also produce a variety of outputs. AI-powered smart assistants and agentic AI tools have even broader scopes, by accessing data and interacting with multiple apps and websites. (Although, at the time of writing, agentic AI’s unreliable performance holds it back from widespread use.) These systems do have some constraints — for example, they all impose limitations on the size of the input (tokens) they accept. Most also have “safety” constraints around what they can provide information on. (For example, ChatGPT isn’t supposed to tell you how to build a bomb.) Examples: ChatGPT and Perplexity ChatGPT and Perplexity are both very broad-scope AI systems. However, Perplexity is slightly narrower in scope, because (unlike ChatGPT) it is specifically designed for information seeking (it brands itself as an “answer engine”). Even this slight narrowing in scope has massive design implications. A more specific use case (even if it’s still very broad) allows for a more tailored interface design. Perplexity’s VP of design, Henry Modisett, said as much in our podcast conversation last year: “Open AI is building a platform that’s going to have to work for all kinds of use cases that we’re not thinking about.” Henry Modisett, VP of Design at Perplexity AI Comparing the interfaces of ChatGPT and Perplexity, these differences are clearly visible. ChatGPT operates within a simple chat interface with a few icons (parameters). This generic interface reflects the huge variety of possible use cases. Perplexity’s interface has more UI elements and is more aligned with traditional search design. It offers the ability to ask followup questions but is not as conversational. Additionally, sources are a major focus in the design in a way they are not in ChatGPT (reflecting Perplexity’s narrower focus on information seeking.) ChatGPT can handle a huge range of tasks, which means new users will need to spend time exploring the tool to get a sense of where it’s valuable for them. This challenge is reflected in the number of prompt suggestions that OpenAI provides to new users. Perplexity’s UI is clearly focused on information seeking. Its primary elements are the question, sources, and answer; the chat box, while present, encourages asking followup questions rather than carrying long back-and-forth, ChatGPT-like conversations. Narrow-Scope AI Features On the opposite side of the spectrum, narrow-scope AI features serve a very specific purpose and generally support a single task or goal. They are not as versatile or powerful as broad-scope AI features, but their purpose is more immediately clear to users. Let’s look at two narrow-scope features as examples: Spotify’s playlist creator and Photoshop’s generative fill. Example: Spotify Spotify’s AI-powered playlist creator is an example of a moderately narrow AI tool. While it does have a chatbot interface for collecting input, it’s constrained to a single purpose — creating a playlist based on the user’s requests.   Spotify’s AI playlist feature: Paid subscribers can generate a playlist based on a short music-related prompt. The playlist can then be modified, either by additional prompting or by directly editing the suggested songs. (Don’t judge my Millennial music taste, please and thank you.) While this more targeted scope makes the feature more approachable for new users, it isn' t perfect. For example, like many genAI tools, the playlist feature often ignores or misunderstands instructions. However, in this context, mistakes are minor inconveniences. The feature's value still outweighs those inconveniences, because it's easier to adjust an existing playlist than to create a new one from scratch. Within that scope, users still have plenty of freedom. They can request a specific artist, era, genre, or vibe. But, unlike ChatGPT and Perplexity, they can’t ask Spotify’s playlist generator to, say, write a sonnet about tacos. Spotify’s narrow AI feature has constraints to prevent users from using the feature for unrelated tasks, like writing sonnets. This narrow focus allows the design team to tailor the experience for this specific task. It also helps the business avoid potential abuse or misuse of the system. Again, this narrower scope allows for a more tailored experience. For example, the prompt suggestions are all specific to this use case and therefore are more likely to be relevant to users. Prompt writing is easier, because the tool already \"understands\" its purpose and how to achieve it with minimal textual input from the users. People in our study wrote very short, search-style prompts. In some cases, participants only used one or two words. Because the feature's output (the playlist) is predictible (a small set of songs), it can be structured in the interface. Before creating the playlist, users can sample, remove, or save suggested songs. Example: Photoshop Generative Fill With some narrow AI tools, like Photoshop’s generative-fill feature, text prompting may not be needed at all.   Photoshop’s generative fill feature: Users can quickly remove or swap out elements from photos. The only needed context is a selection in the photo — any prompting is optional. Broad vs. Narrow: A Comparison Table Broad AI Systems Narrow AI Features Product Context More likely to be stand-alone products or chat boxes Task-specific features within apps or websites Inputs and Prompts May accept a wide variety of data and file typesLikely to use an open text field More restrictions on the instructions or size and types of input May not accept text or prompt input at all Functionality More flexible More constrained Interface Can be very simple -- essentially a chat box Richer in UI controls; may not be chat-based Narrow Scope Allows for Guided AI and Better UX In our recent qualitative usability study, narrow-scope AI features tended to perform better than open-ended, broad-scope features. With narrower scopes, participants found it easier to: Understand the feature’s purpose Generate prompts (when needed) Iterate and customize outputs In general (though not in every instance), participants also provided more-positive feedback about narrowly scoped features. Example: Planning a Trip with AI TripAdvisor’s travel-itinerary planner is on the narrow side of the AI-scope spectrum. As a result, the feature’s UI is a prompt wizard that walks users through selecting a destination, interests, and travel dates. This guidance prevents users from having to formulate a free-text prompt and reduces cognitive load as well as the risk of errors (for example, incorrect dates).   TripAdvisor’s AI trip planner walked users through constructing a prompt, asking for each important piece of information step-by-step. Users chose a travel location, type of trip, travel interests, and dates. They were then presented with an editable set of options for their itineraries. Several of our study participants reported using ChatGPT and other broad AI chats in their work and personal life. However, after they used TripAdvisor’s prompt wizard, two participants admitted that they had never thought to ask tools like ChatGPT for travel-planning help. After TripAdvisor’s narrow AI feature helped one participant understand that genAI could be used for travel planning, he tried out ChatGPT’s abilities. His previous experience with TripAdvisor influenced the details (date, partner) he included in his freeform prompt. “Wow,” he said. “I have never ever thought it could do this. Holy smokes.” A broad AI system’s vast capabilities don’t matter if users don’t know they exist or don’t know how to use them for that purpose. In another session, a different participant, who hadn’t seen TripAdvisor’s narrow feature, started planning her trip with ChatGPT. Without that priming, she had to spend time deciding what details to provide in her prompt. “Let’s see,” she said thoughtfully before beginning her prompt. “With AI, it’s like talking to a kid. You have to list everything, so I have to think…” In her initial prompt, she included the destination (Bali) and asked for advice on what time of year to visit. ChatGPT was easily able to help answer that question, which was not a functionality available in TripAdvisor’s AI feature (a benefit of ChatGPT’s broader scope). While the participant appreciated that guidance, ChatGPT’s output was difficult to assess and customize. It responded with two hotel options, 4-stars or 5-stars. At least one of these options, St. Regis, was out of her budget — a detail she didn’t think to include in the prompt. The participant ignored the included source links, and instead searched for these on Google. Another participant used ChatGPT to plan a trip to Bali, without seeing TripAdvisor's narrow AI feature first. She had to pause and think of what information the system might need from her prompt to complete the task. When ChatGPT returned a few hotel options, she searched for them into a new tab.. Compare that simple text output (necessary for such a broad system) to the structured response from TripAdvisor’s feature: because it’s designed for this exact purpose, the results were much easier for participants to explore. Each hotel option was presented next to a map of the travel location, showing its proximity to local sites of interest. When clicked, an overlay with more details about the hotel appeared in-context. In TripAdvisor’s AI trip planning tool, hotel suggestions were much easier to assess than ChatGPT’s results. Without leaving this screen, participants could explore hotel suggestions, see their locations relative to attractions, see each property’s amenities, and read reviews. While ChatGPT offered much more functionality than TripAdvisor, it required more effort from users — in both prompting (input) and working with the results (output). The Flexibility-Usability Tradeoff Applies This shouldn’t surprise experienced UX professionals — it’s an example of the flexibility-usability tradeoff, which states that the more flexible a system is, the lower its usability will be. In other words, more features = more complexity = lower usability. A broader scope of AI features is more challenging for users because it requires them to: Know, imagine, or learn the system’s wide range of capabilities Determine which of those capabilities fits their needs Cross the articulation barrier — think about what they need and verbally express it (which can be challenging even for people with strong communication skills) Note that this doesn’t mean we should only design simple, low-functionality systems (AI or otherwise). We just need to acknowledge that additional functionality may make those systems more challenging to use and ensure that the tradeoff is justified by our user and business needs. Additionally, narrow-scope AI features are not immune to usability problems — we observed plenty in our study. (We’ll be elaborating on that in future articles soon.) Interestingly, in traditional designs, increasing functionality usually means increasing the amount of stuff that appears in an interface. In AI systems, the opposite is true — a narrow scope offers the possibility of exposing more of the system’s functionality through UI elements, thus making it more approachable to users. Narrow Scope Is Less Likely to Be “AI for AI’s Sake” In addition, I think there’s a confounding variable at play here — the understanding of user needs. A narrow-scope AI feature that’s been crafted for a specific purpose is less likely to be a carelessly slapped-on AI feature. To have a narrow use case, someone is more likely to have spent time thinking about the users’ workflows and how AI could benefit them. In contrast, especially in peak AI hype, we’ve seen many broad AI chats crammed into interfaces without much thought about their actual purpose. This point brings us back where we started and where all AI integration conversations need to start: at the user and business needs. Depending on your product, users, and business, the AI feature you decide to build could sit anywhere on the scope spectrum and be successful. The key to pulling that off will be making sure it’s appropriately scoped for your specific context.",
  "image": "https://media.nngroup.com/media/articles/opengraph_images/AI-Scope_Opengraph.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cp\u003e\u003cspan\u003e\n                  Summary: \n                \u003c/span\u003eWhen designing AI product features, scope shapes key decisions. Research shows that focused AI features lead to better new user understanding and adoption.\n              \u003c/p\u003e\u003cdiv\u003e\n              \u003cp\u003eWhen designing an AI feature, its scope (how broad or narrow its capabilities are) influences its usability. Our research shows that narrower AI features are (typically) easier for new users to understand and adopt. This article compares broad AI systems like ChatGPT with narrow AI tools like Spotify’s playlist generator, exploring how scope impacts design.\u003c/p\u003e\n\u003cdiv\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-defining-ai-scope-1\"\u003eDefining AI Scope\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-broad-vs-narrow-a-comparison-table-2\"\u003eBroad vs. Narrow: A Comparison Table\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-narrow-scope-allows-for-guided-ai-and-better-ux-3\"\u003eNarrow Scope Allows for Guided AI and Better UX\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-narrow-scope-is-less-likely-to-be-ai-for-ais-sake-4\"\u003eNarrow Scope Is Less Likely to Be “AI for AI’s Sake”\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e\u003ch2 id=\"toc-defining-ai-scope-1\"\u003eDefining AI Scope\u003c/h2\u003e\n\u003cp\u003eBefore beginning to design a UI for any user-facing AI-powered feature, teams should answer these 4 strategic questions:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.nngroup.com/articles/ai-user-value/\"\u003e\u003cstrong\u003eWhat specific user problem\u003c/strong\u003e\u003c/a\u003e are we trying to solve?\u003c/li\u003e\n\u003cli\u003eHow would fixing this problem \u003cstrong\u003econtribute to\u003c/strong\u003e \u003cstrong\u003ebusiness goals?\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.nngroup.com/articles/how-ai-works/\"\u003e\u003cstrong\u003eIs AI truly the best solution\u003c/strong\u003e\u003c/a\u003e for this problem?\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eHow complete, clean, and structured is the data \u003c/strong\u003ewe’ll feed into the AI?\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIf, after these considerations, an AI solution still seems the best course of action, the next aspect to consider is the feature’s scope. Scope is a useful way to categorize \u003cstrong\u003einteractive, user-facing AI features or products \u003c/strong\u003e— in other words, how broad or narrow the AI system’s capabilities are.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eThe scope \u003c/strong\u003eof an AI feature describes the breadth of its data inputs and functionality. The broader the scope, the more variety of inputs the system can accept and the wider the range of possible outputs the system can produce.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv\u003e\n\u003cfigure\u003e\u003cimg alt=\"\" height=\"747\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/02/18/scope-spectrum-1.jpg\" width=\"1400\"/\u003e\n\u003cfigcaption\u003e\u003cem\u003eThink of scope as a spectrum, stretching from very broad to very narrow. Any given AI product can sit anywhere on this spectrum.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003c/div\u003e\n\u003cp\u003eScope can be defined for any type of system, AI or not, user-facing or running in the back end. However, this article focuses on interactive, user-facing AI features.\u003c/p\u003e\n\u003cp\u003eFor an AI feature, its scope is determined by the:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eKinds and size of \u003cstrong\u003einput\u003c/strong\u003e it accepts\u003c/li\u003e\n\u003cli\u003eTypes of \u003cstrong\u003eoutputs\u003c/strong\u003e it produces\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTasks\u003c/strong\u003e it can handle\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSubject\u003c/strong\u003e areas it covers\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe scope of any given AI feature or product has significant implications for its design and usability.\u003c/p\u003e\n\u003ch3\u003eBroad-Scope AI Systems\u003c/h3\u003e\n\u003cp\u003eSome systems, like ChatGPT or Claude, are very broad in scope. They can handle a \u003cstrong\u003ewide variety of tasks \u003c/strong\u003eand respond to open-ended user inputs\u003cstrong\u003e.\u003c/strong\u003e Some can \u003cstrong\u003eaccept many types of input data, \u003c/strong\u003eincluding images, videos, or other file types. Some have access to the live internet, while others operate with static datasets. These broad-scope systems can also \u003cstrong\u003eproduce a variety of outputs.\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eAI-powered smart assistants and agentic AI tools have even broader scopes, by accessing data and interacting with multiple apps and websites. (Although, at the time of writing, agentic AI’s unreliable performance holds it back from widespread use.)\u003c/p\u003e\n\u003cp\u003eThese systems do have some constraints — for example, they all impose limitations on the size of the input (tokens) they accept. Most also have “safety” constraints around what they can provide information on. (For example, ChatGPT isn’t supposed to tell you how to build a bomb.)\u003c/p\u003e\n\u003ch4\u003eExamples: ChatGPT and Perplexity\u003c/h4\u003e\n\u003cp\u003eChatGPT and Perplexity are both very broad-scope AI systems. However, Perplexity is slightly narrower in scope, because (unlike ChatGPT) it is specifically designed for information seeking (it brands itself as an “answer engine”).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"The Scope Spectrum of AI Features is represented by a horizontal axis, stretching from Broad (left) to Narrow (right). ChatGPT is very broad, placed on the spectrum farthest to the left. Perplexity, which is a bit more narrow, is placed to its right.\" height=\"599\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/02/18/scope-spectrum-2.jpg\" width=\"1400\"/\u003e\u003c/p\u003e\n\u003cp\u003eEven this slight narrowing in scope has massive design implications. A more specific use case (even if it’s still very broad) allows for a more tailored interface design. Perplexity’s VP of design, Henry Modisett, said as much in our \u003ca href=\"https://www.nngroup.com/articles/perplexity-henry-modisett/\"\u003epodcast conversation\u003c/a\u003e last year:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e“Open AI is building a platform that’s going to have to work for all kinds of use cases that we’re not thinking about.”\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eHenry Modisett, VP of Design at Perplexity AI\u003c/em\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eComparing the interfaces of ChatGPT and Perplexity, these differences are clearly visible.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eChatGPT\u003c/strong\u003e operates within a simple chat interface with a few icons (parameters). This generic interface reflects the huge variety of possible use cases.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePerplexity’s \u003c/strong\u003einterface has more UI elements and is more aligned with traditional search design. It offers the ability to ask followup questions but is not as conversational. Additionally, sources are a major focus in the design in a way they are not in ChatGPT (reflecting Perplexity’s narrower focus on information seeking.)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv\u003e\n\u003cfigure\u003e\u003cimg alt=\"When new users encounter ChatGPT, it offers dozens of suggested prompts to help people understand what it can be used for. These are extremely diverse, including \u0026#34;Create a charter to start a film club\u0026#34; and \u0026#34;Make a sandwich using ingredients from my kitchen.\u0026#34;\" height=\"859\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/02/18/chatgpt-prompt-suggestions.png\" width=\"1400\"/\u003e\n\u003cfigcaption\u003e\u003cem\u003eChatGPT can handle a huge range of tasks, which means new users will need to spend time exploring the tool to get a sense of where it’s valuable for them. This challenge is reflected in the number of prompt suggestions that OpenAI provides to new users.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003c/div\u003e\n\u003cdiv\u003e\n\u003cfigure\u003e\u003cimg alt=\"Perplexity\u0026#39;s mobile app, showing its response to the question, \u0026#34;How is hail formed during thunderstorms?\u0026#34; The UI is specifically designed to focus on question-answer interactions, unlike ChatGPT.\" height=\"1185\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/02/18/perplexity-sources.jpeg\" width=\"600\"/\u003e\n\u003cfigcaption\u003e\u003cem\u003ePerplexity’s UI is clearly focused on information seeking. Its primary elements are the question, sources, and answer; the chat box, while present, encourages asking followup questions rather than carrying long back-and-forth, ChatGPT-like conversations.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003c/div\u003e\n\u003ch3\u003eNarrow-Scope AI Features\u003c/h3\u003e\n\u003cp\u003eOn the opposite side of the spectrum, narrow-scope AI features serve a very specific purpose and generally support a single task or goal. They are not as versatile or powerful as broad-scope AI features, but their purpose is more immediately clear to users.\u003c/p\u003e\n\u003cp\u003eLet’s look at two narrow-scope features as examples: Spotify’s playlist creator and Photoshop’s generative fill.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"On the scope spectrum, Photoshop and Spotify\u0026#39;s AI features are located far to the right, on the narrow side.\" height=\"629\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/02/18/scope-spectrum-3.jpg\" width=\"1400\"/\u003e\u003c/p\u003e\n\u003ch4\u003eExample: Spotify\u003c/h4\u003e\n\u003cp\u003eSpotify’s AI-powered playlist creator is an example of a moderately narrow AI tool. While it does have a chatbot interface for collecting input, it’s constrained to a single purpose — creating a playlist based on the user’s requests.\u003c/p\u003e\n\u003cfigure\u003e\n\u003cvideo controls=\"controls\" poster=\"https://media.nngroup.com/media/editor/2025/02/18/spotify-ai-playlist-demo-thumbnail.jpg\" src=\"https://media.nngroup.com/media/editor/2025/02/18/spotify-ai-playlist-demo-trimmed.MP4\" title=\"Demo Video: Spotify AI Playlist Generator\"\u003e \u003c/video\u003e\n\u003cfigcaption\u003e\u003cem\u003eSpotify’s AI playlist feature: Paid subscribers can generate a playlist based on a short music-related prompt. The playlist can then be modified, either by additional prompting or by directly editing the suggested songs. (Don’t judge my Millennial music taste, please and thank you.) While this more targeted scope makes the feature more approachable for new users, it isn\u0026#39; t perfect. For example, like many genAI tools, the playlist feature often ignores or misunderstands instructions. However, in this context, mistakes are minor inconveniences. The feature\u0026#39;s value still outweighs those inconveniences, because it\u0026#39;s easier to adjust an existing playlist than to create a new one from scratch.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003cp\u003eWithin that scope, users still have plenty of freedom. They can request a specific artist, era, genre, or vibe. But, unlike ChatGPT and Perplexity, they can’t ask Spotify’s playlist generator to, say, write a sonnet about tacos.\u003c/p\u003e\n\u003cdiv\u003e\n\u003cfigure\u003e\u003cimg alt=\"In a screenshot from Spotify\u0026#39;s AI feature, a user tells the chat to \u0026#34;write me a sonnet about tacos.\u0026#34; The system gracefully declines the request by saying, \u0026#34;I\u0026#39;m here to create playlists.\u0026#34;\" height=\"644\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/02/18/spotify-tacos.jpg\" width=\"750\"/\u003e\n\u003cfigcaption\u003e\u003cem\u003eSpotify’s narrow AI feature has constraints to prevent users from using the feature for unrelated tasks, like writing sonnets. This narrow focus allows the design team to tailor the experience for this specific task. It also helps the business avoid potential abuse or misuse of the system.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003c/div\u003e\n\u003cp\u003eAgain, this narrower scope allows for a more tailored experience. For example, \u003cstrong\u003ethe prompt suggestions are all specific \u003c/strong\u003eto this use case and therefore are more likely to be relevant to users. \u003cstrong\u003ePrompt writing is easier, \u003c/strong\u003ebecause the tool already \u0026#34;understands\u0026#34; its purpose and how to achieve it with minimal textual input from the users. People in our study wrote very short, search-style prompts. In some cases, participants only used one or two words.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBecause the feature\u0026#39;s output \u003c/strong\u003e(the playlist) \u003cstrong\u003eis predictible\u003c/strong\u003e (a small set of songs),\u003cstrong\u003e it can be structured\u003c/strong\u003e in the interface. Before creating the playlist, users can sample, remove, or save suggested songs.\u003c/p\u003e\n\u003ch4\u003eExample: Photoshop Generative Fill\u003c/h4\u003e\n\u003cp\u003eWith some narrow AI tools, like Photoshop’s generative-fill feature, text prompting may not be needed at all.\u003c/p\u003e\n\u003cfigure\u003e\n\u003cvideo controls=\"controls\" poster=\"https://media.nngroup.com/media/editor/2025/02/18/ps-generativefill-demo-thumbnail.jpg\" src=\"https://media.nngroup.com/media/editor/2025/02/18/ps-generativefill-demo.mov\" title=\"Demo Video: Photoshop Generative Fill Feature\"\u003e \u003c/video\u003e\n\u003cfigcaption\u003e\u003cem\u003ePhotoshop’s generative fill feature: Users can quickly remove or swap out elements from photos. The only needed context is a selection in the photo — any prompting is optional.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch2 id=\"toc-broad-vs-narrow-a-comparison-table-2\"\u003eBroad vs. Narrow: A Comparison Table\u003c/h2\u003e\n\u003ctable\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\n\n\u003c/td\u003e\n\u003cth\u003e\n\u003cp\u003e\u003cstrong\u003eBroad AI Systems\u003c/strong\u003e\u003c/p\u003e\n\u003c/th\u003e\n\u003cth\u003e\n\u003cp\u003e\u003cstrong\u003eNarrow AI Features\u003c/strong\u003e\u003c/p\u003e\n\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003cth\u003e\n\u003cp\u003e\u003cstrong\u003eProduct Context\u003c/strong\u003e\u003c/p\u003e\n\u003c/th\u003e\n\u003ctd\u003e\n\u003cp\u003eMore likely to be stand-alone products or chat boxes\u003c/p\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n\u003cp\u003eTask-specific features within apps or websites\u003c/p\u003e\n\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003cth\u003e\n\u003cp\u003e\u003cstrong\u003eInputs and Prompts\u003c/strong\u003e\u003c/p\u003e\n\u003c/th\u003e\n\u003ctd\u003e\n\u003cp\u003eMay accept a wide variety of data and file typesLikely to use an open text field\u003c/p\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n\u003cp\u003eMore restrictions on the instructions or size and types of input\u003c/p\u003e\n\n\u003cp\u003eMay not accept text or prompt input at all\u003c/p\u003e\n\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003cth\u003e\n\u003cp\u003e\u003cstrong\u003eFunctionality\u003c/strong\u003e\u003c/p\u003e\n\u003c/th\u003e\n\u003ctd\u003e\n\u003cp\u003eMore flexible\u003c/p\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n\u003cp\u003eMore constrained\u003c/p\u003e\n\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003cth\u003e\n\u003cp\u003e\u003cstrong\u003eInterface\u003c/strong\u003e\u003c/p\u003e\n\u003c/th\u003e\n\u003ctd\u003e\n\u003cp\u003eCan be very simple -- essentially a chat box\u003c/p\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n\u003cp\u003eRicher in UI controls; may not be chat-based\u003c/p\u003e\n\n\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id=\"toc-narrow-scope-allows-for-guided-ai-and-better-ux-3\"\u003eNarrow Scope Allows for Guided AI and Better UX\u003c/h2\u003e\n\u003cp\u003eIn our recent qualitative usability study, \u003cstrong\u003enarrow-scope AI features tended to perform better \u003c/strong\u003ethan open-ended, broad-scope features. With narrower scopes, participants found it easier to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUnderstand the feature’s purpose\u003c/li\u003e\n\u003cli\u003eGenerate prompts (when needed)\u003c/li\u003e\n\u003cli\u003eIterate and customize outputs\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIn general (though not in every instance), participants also provided more-positive feedback about narrowly scoped features.\u003c/p\u003e\n\u003ch3\u003eExample: Planning a Trip with AI\u003c/h3\u003e\n\u003cp\u003eTripAdvisor’s travel-itinerary planner is on the narrow side of the AI-scope spectrum. As a result, the feature’s UI is a prompt wizard that walks users through selecting a destination, interests, and travel dates. This guidance prevents users from having to formulate a free-text prompt and reduces \u003ca href=\"https://www.nngroup.com/articles/minimize-cognitive-load/\"\u003ecognitive load\u003c/a\u003e as well as the risk of errors (for example, incorrect dates).\u003c/p\u003e\n\u003cfigure\u003e\n\u003cvideo controls=\"controls\" poster=\"https://media.nngroup.com/media/editor/2025/02/18/tripadvisor-demo-thumbnail.jpg\" src=\"https://media.nngroup.com/media/editor/2025/02/18/tripadvisor-demo.mp4\" title=\"Demo Video: TripAdvisor\u0026#39;s Itinerary Planner\"\u003e \u003c/video\u003e\n\u003cfigcaption\u003e\u003cem\u003eTripAdvisor’s AI trip planner walked users through constructing a prompt, asking for each important piece of information step-by-step. Users chose a travel location, type of trip, travel interests, and dates. They were then presented with an editable set of options for their itineraries.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003cp\u003eSeveral of our study participants reported using ChatGPT and other broad AI chats in their work and personal life. However, after they used TripAdvisor’s prompt wizard, two participants admitted that they had never thought to ask tools like ChatGPT for travel-planning help.\u003c/p\u003e\n\u003cdiv\u003e\n\u003cfigure\u003e\u003cimg alt=\"\" height=\"980\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/02/18/p2-chatgpt-cabos.png\" width=\"1400\"/\u003e\n\u003cfigcaption\u003e\u003cem\u003eAfter TripAdvisor’s narrow AI feature helped one participant understand that genAI could be used for travel planning, he tried out ChatGPT’s abilities. His previous experience with TripAdvisor influenced the details (date, partner) he included in his freeform prompt. “Wow,” he said. “I have never ever thought it could do this. Holy smokes.”\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003c/div\u003e\n\u003cp\u003eA broad AI system’s \u003cstrong\u003evast capabilities don’t matter if users don’t know they exist \u003c/strong\u003eor don’t know how to use them for that purpose.\u003c/p\u003e\n\u003cp\u003eIn another session, a different participant, who hadn’t seen TripAdvisor’s narrow feature, started planning her trip with ChatGPT. Without that priming, she had to spend time deciding what details to provide in her prompt. “Let’s see,” she said thoughtfully before beginning her prompt. “With AI, it’s like talking to a kid. You have to list everything, so I have to think…”\u003c/p\u003e\n\u003cp\u003eIn her initial prompt, she included the destination (Bali) and asked for advice on what time of year to visit. ChatGPT was easily able to help answer that question, which was not a functionality available in TripAdvisor’s AI feature (a benefit of ChatGPT’s broader scope).\u003c/p\u003e\n\u003cp\u003eWhile the participant appreciated that guidance, ChatGPT’s output was difficult to assess and customize. It responded with two hotel options, 4-stars or 5-stars. At least one of these options, St. Regis, was out of her budget — a detail she didn’t think to include in the prompt. The participant ignored the included source links, and instead searched for these on Google.\u003c/p\u003e\n\u003cdiv\u003e\n\u003cfigure\u003e\u003cimg alt=\"\" height=\"981\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/02/19/chatgpt-bali-copy.png\" width=\"1400\"/\u003e\n\u003cfigcaption\u003e\u003cem\u003eAnother participant used ChatGPT to plan a trip to Bali, without seeing TripAdvisor\u0026#39;s narrow AI feature first. She had to pause and think of what information the system might need from her prompt to complete the task. When ChatGPT returned a few hotel options, she searched for them into a new tab..\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003c/div\u003e\n\u003cp\u003eCompare that simple text output (necessary for such a broad system) to the structured response from TripAdvisor’s feature: because it’s designed for this exact purpose, the results were much easier for participants to explore. Each hotel option was presented next to a map of the travel location, showing its proximity to local sites of interest. When clicked, an overlay with more details about the hotel appeared in-context.\u003c/p\u003e\n\u003cdiv\u003e\n\u003cfigure\u003e\u003cimg alt=\"\" height=\"940\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/02/18/tripadvisor-bali-hotels.png\" width=\"1400\"/\u003e\n\u003cfigcaption\u003e\u003cem\u003eIn TripAdvisor’s AI trip planning tool, hotel suggestions were much easier to assess than ChatGPT’s results. Without leaving this screen, participants could explore hotel suggestions, see their locations relative to attractions, see each property’s amenities, and read reviews.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003c/div\u003e\n\u003cp\u003eWhile ChatGPT offered much more functionality than TripAdvisor, it required more effort from users — in both prompting (input) and working with the results (output).\u003c/p\u003e\n\u003ch3\u003eThe Flexibility-Usability Tradeoff Applies\u003c/h3\u003e\n\u003cp\u003eThis shouldn’t surprise experienced UX professionals — it’s an example of the \u003cstrong\u003eflexibility-usability tradeoff\u003c/strong\u003e, which states that the more flexible a system is, the lower its usability will be. In other words, more features = more complexity = lower usability.\u003c/p\u003e\n\u003cp\u003eA broader scope of AI features is more challenging for users because it requires them to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eKnow, imagine, or learn the system’s wide range of capabilities\u003c/li\u003e\n\u003cli\u003eDetermine which of those capabilities fits their needs\u003c/li\u003e\n\u003cli\u003eCross the \u003ca href=\"https://jakobnielsenphd.substack.com/p/prompt-driven-ai-ux-hurts-usability\"\u003earticulation barrier\u003c/a\u003e — think about what they need and verbally express it (which can be challenging even for people with strong communication skills)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNote that\u003cstrong\u003e this doesn’t mean we should only design simple, low-functionality systems\u003c/strong\u003e (AI or otherwise). We just need to acknowledge that additional functionality may make those systems more challenging to use and ensure that the tradeoff is justified by our user and business needs. Additionally, \u003cstrong\u003enarrow-scope AI features are not immune to usability problems\u003c/strong\u003e — we observed plenty in our study. (We’ll be elaborating on that in future articles soon.)\u003c/p\u003e\n\u003cp\u003eInterestingly, in traditional designs, increasing functionality usually means increasing the amount of \u003cem\u003estuff \u003c/em\u003ethat appears in an interface. In AI systems, the opposite is true — \u003cstrong\u003ea narrow scope offers the possibility of exposing more of the system’s functionality\u003c/strong\u003e through UI elements, thus making it more approachable to users.\u003c/p\u003e\n\u003ch2 id=\"toc-narrow-scope-is-less-likely-to-be-ai-for-ais-sake-4\"\u003eNarrow Scope Is Less Likely to Be “AI for AI’s Sake”\u003c/h2\u003e\n\u003cp\u003eIn addition, I think there’s a confounding variable at play here — the understanding of user needs. A narrow-scope AI feature that’s been crafted for a specific purpose is less likely to be a carelessly slapped-on AI feature. To have a narrow use case, someone is more likely to have spent time thinking about the users’ workflows and how AI could benefit them. In contrast, especially in peak AI hype, we’ve seen many broad AI chats crammed into interfaces without much thought about their actual purpose.\u003c/p\u003e\n\u003cp\u003eThis point brings us back where we started and where all AI integration conversations need to start: at the user and business needs. Depending on your product, users, and business, the AI feature you decide to build could sit anywhere on the scope spectrum and be successful. The key to pulling that off will be making sure it’s appropriately scoped for your specific context.\u003c/p\u003e\n            \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "16 min read",
  "publishedTime": "2025-02-28T18:00:00Z",
  "modifiedTime": null
}
