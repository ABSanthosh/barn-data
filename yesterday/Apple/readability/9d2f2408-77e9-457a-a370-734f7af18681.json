{
  "id": "9d2f2408-77e9-457a-a370-734f7af18681",
  "title": "★ 15 Years Later: ‘Very Insightful and Not Negative’",
  "link": "https://daringfireball.net/2025/05/15_years_later_very_insightful_and_not_negative",
  "description": "So, what would *you* do if Steve Jobs was quoted in a viral blog post saying, “We think «*Your Name Here*»’s post is very insightful and not negative”? I decided to just sit there with a smug look on my face for a few days.",
  "author": "John Gruber",
  "published": "2025-05-16T00:26:20Z",
  "source": "https://daringfireball.net/feeds/main",
  "categories": null,
  "byline": "Thursday, 15 May 2025",
  "length": 8239,
  "excerpt": "So, what would *you* do if Steve Jobs was quoted in a viral blog post saying, “We think «*Your Name Here*»’s post is very insightful and not negative”? I decided to just sit there with a smug look on my face for a few days.",
  "siteName": "Daring Fireball",
  "favicon": "https://daringfireball.net/graphics/apple-touch-icon.png",
  "text": "Earlier this week Nilay Patel was working on the show notes for the episode of Decoder I guested on, and he texted me to ask if I could recall the time Steve Jobs sent some random developer a link to an article I wrote about the App Store. He wanted to cite it as an example of Daring Fireball being read, at high levels inside Apple, for a long time. I recalled the whole thing vaguely, as a “holy shit” moment, but not specifically. I hadn’t thought about it in years. But I was sure I could find it for Nilay in the DF archives. Turns out, I couldn’t find it, because, it turns out, in a fit of false modesty and humility, I never linked to it. (From a TechCrunch interview I did at the time, after the saga went somewhat viral: “When asked for his response to Steve’s shout-out, Gruber meekly grinned and said, ‘I just smiled.’”) Here’s the rough timeline of events. On Thursday 8 April 2010, Apple updated the App Store guidelines to ban the use of Adobe’s then-new Flash-to-iPhone compiler. From my post on the change (which, to some degree, broke the news): Prior to today’s release of the iPhone OS 4 SDK, section 3.3.1 of the iPhone Developer Program License Agreement read, in its entirety: 3.3.1 — Applications may only use Documented APIs in the manner prescribed by Apple and must not use or call any private APIs. In the new version of the iPhone Developer Program License Agreement released by Apple today (and which developers must agree to before downloading the 4.0 SDK beta), section 3.3.1 now reads: 3.3.1 — Applications may only use Documented APIs in the manner prescribed by Apple and must not use or call any private APIs. Applications must be originally written in Objective-C, C, C++, or JavaScript as executed by the iPhone OS WebKit engine, and only code written in C, C++, and Objective-C may compile and directly link against the Documented APIs (e.g., Applications that link to Documented APIs through an intermediary translation or compatibility layer or tool are prohibited). My reading of this new language is that cross-compilers, such as the Flash-to-iPhone compiler in Adobe’s upcoming Flash Professional CS5 release, are prohibited. This also bans apps compiled using MonoTouch — a tool that compiles C# and .NET apps to the iPhone. This was enormously controversial at the time, but I also thought largely misunderstood by developers. Later that same day, I published another piece articulating my take on Apple’s reasoning for the change, “Why Apple Changed Section 3.3.1”. From that article: We’re still in the early days of the transition from the PC era to the mobile era. Right now, Apple is winning. There are other winners right now too — RIM is still growing, and Android has grown a ton in the past year. The App Store platform could turn into a long-term de facto standard platform. That’s how Microsoft became Microsoft. At a certain point developers wrote apps for Windows because so many users were on Windows and users bought Windows PCs because all the software was being written for Windows. That’s the sort of situation that creates a license to print money. That seems prescient. (The “license to print money” part — not the “RIM is still growing” part.) So what Apple does not want is for some other company to establish a de facto standard software platform on top of Cocoa Touch. Not Adobe’s Flash. Not .NET (through MonoTouch). If that were to happen, there’s no lock-in advantage. If, say, a mobile Flash software platform — which encompassed multiple lower-level platforms, running on iPhone, Android, Windows Phone 7, and BlackBerry — were established, that app market would not give people a reason to prefer the iPhone. And, obviously, such a meta-platform would be out of Apple’s control. Consider a world where some other company’s cross-platform toolkit proved wildly popular. Then Apple releases major new features to iPhone OS, and that other company’s toolkit is slow to adopt them. At that point, it’s the other company that controls when third-party apps can make use of these features. So from Apple’s perspective, changing the iPhone Developer Program License Agreement to prohibit the use of things like Flash CS5 and MonoTouch to create iPhone apps makes complete sense. I’m not saying you have to like this. I’m not arguing that it’s anything other than ruthless competitiveness. I’m not arguing (up to this point) that it benefits anyone other than Apple itself. I’m just arguing that it makes sense from Apple’s perspective — and it was Apple’s decision to make. Two days later, on 10 April 2010, developer Greg Slepak emailed Steve Jobs to complain about the decision, citing negative sentiment on Hacker News (much has changed since 2010, but some things have not), writing: Hi Steve, Lots of people are pissed off at Apple’s mandate that applications be “originally written” in C/C++/Objective-C. If you go, for example, to the Hacker News homepage right now: http://news.ycombinator.com/ You’ll see that most of the front page stories about this new restriction, with #1 being: “Steve Jobs Has Just Gone Mad” with (currently) 243 upvotes. The top 5 stories are all negative reactions to the TOS, and there are several others below them as well. Not a single positive reaction, even from John Gruber, your biggest fan. I love your product, but your SDK TOS are growing on it like an invisible cancer. Sincerely, Greg Jobs wrote back to Slepak (starting a brief exchange of emails): We think John Gruber’s post is very insightful and not negative: http://daringfireball.net/2010/04/why_apple_changed_section_331 Steve Slepak posted the exchange to his blog, Tao Effect, and, well, as Jobs himself might have said, “Boom.” (This was a not infrequent thing at the time, where random users or developers would email Jobs, he’d write back with something pithy, and they’d post the exchange. It was kind of crazy — the most famous CEO in the world, just doing customer service email — and his emails were always sharp.) So, what would you do if Steve Jobs was quoted in a viral blog post saying, “We think «Your Name Here»’s post is very insightful and not negative”? I decided to just sit there with a smug look on my face for a few days (which, arguably, isn’t all that different from what I do most days) and pretend that it was no big deal. I didn’t link to it or mention it on Daring Fireball, and as far as I can tell, I didn’t even tweet it. As best I can recall, I thought I should just play it cool. I mean of course my article about why Apple changed Section 3.3.1 was right. Why brag? Given that Steve Jobs was reading Daring Fireball, I didn’t want him to read a post from me acting like it was a big deal that he’d recommended a piece I wrote and agreed with it. That was pretty stupid on my part. Or at least silly. My older perspective, today, is not to overthink such things. If something cool happens, I link to it. It seems ridiculous in hindsight that I didn’t link to Slepak’s post. And, I was thinking this week, if I couldn’t find a link to the overall story because I wrongly presumed I must have linked to it at the time, I wondered how many other readers, over the years, have gone hunting for that “very insightful and not negative” story and couldn’t find it because it was never mentioned or linked to on Daring Fireball. So, today, I wrote the post I should have written back then, and backdated it to 11 April 2010. To complete the timeline, April 2010 was a busy month. That same month saw HP buy Palm (in a last-ditch effort to remain relevant as the industry rapidly shifted from being PC-centric to mobile-centric) and Gizmodo published details on the iPhone 4 prototype some poor Apple engineer accidentally left in a bar. The original iPad had just shipped. And at the end of the month, Jobs published “Thoughts on Flash” on the Apple.com homepage. It’s kind of wild that was all in one month — scrolling down the monthly archive page for April 2010 is just one gem after another. Re-reading “Thoughts on Flash” again now, for the umpteenth time, I’ll say this: I think Steve Jobs’s post was very insightful and not negative.",
  "image": "https://daringfireball.net/graphics/df-wide-card.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"Box\"\u003e\n\n\n\n\u003cp\u003eEarlier this week Nilay Patel was working on the show notes for \u003ca href=\"https://www.theverge.com/decoder-podcast-with-nilay-patel/664802/apple-app-store-iphone-ios-fortnite-epic-games-lawsuit\"\u003ethe episode of Decoder I guested on\u003c/a\u003e, and he texted me to ask if I could recall the time Steve Jobs sent some random developer a link to an article I wrote about the App Store. He wanted to cite it as an example of Daring Fireball being read, at high levels inside Apple, for a long time. I recalled the whole thing vaguely, as a “holy shit” moment, but not specifically. I hadn’t thought about it in years. But I was sure I could find it for Nilay in the DF archives.\u003c/p\u003e\n\n\u003cp\u003eTurns out, I couldn’t find it, because, it turns out, in a fit of false modesty and humility, I \u003cem\u003enever linked to it\u003c/em\u003e. (From \u003ca href=\"https://techcrunch.com/2010/04/12/gruber-apple-was-right-adobe-get-over-it-video/\"\u003ea TechCrunch interview I did at the time\u003c/a\u003e, after the saga went somewhat viral: “When asked for his response to Steve’s shout-out, Gruber meekly grinned and said, ‘I just smiled.’”)\u003c/p\u003e\n\n\u003cp\u003eHere’s the rough timeline of events. On Thursday 8 April 2010, Apple updated the App Store guidelines to ban the use of Adobe’s then-new Flash-to-iPhone compiler. \u003ca href=\"https://daringfireball.net/2010/04/iphone_agreement_bans_flash_compiler\"\u003eFrom my post on the change\u003c/a\u003e (which, to some degree, broke the news):\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003ePrior to today’s release of the iPhone OS 4 SDK, section 3.3.1 of\nthe iPhone Developer Program License Agreement read, in its\nentirety:\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003e3.3.1 — Applications may only use Documented APIs in the manner\n    prescribed by Apple and must not use or call any private\n    APIs.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eIn the new version of the iPhone Developer Program License\nAgreement released by Apple today (and which developers must agree\nto before downloading the 4.0 SDK beta), section 3.3.1 now reads:\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003e3.3.1 — Applications may only use Documented APIs in the manner\n    prescribed by Apple and must not use or call any private\n    APIs. Applications must be originally written in Objective-C,\n    C, C++, or JavaScript as executed by the iPhone OS WebKit\n    engine, and only code written in C, C++, and Objective-C may\n    compile and directly link against the Documented APIs (e.g.,\n    Applications that link to Documented APIs through an\n    intermediary translation or compatibility layer or tool are\n    prohibited).\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eMy reading of this new language is that cross-compilers, such as\nthe \u003ca href=\"http://labs.adobe.com/technologies/flashcs5/appsfor_iphone/\"\u003eFlash-to-iPhone compiler\u003c/a\u003e in Adobe’s upcoming Flash\nProfessional CS5 release, are prohibited. This also bans apps\ncompiled using \u003ca href=\"http://monotouch.net/\"\u003eMonoTouch\u003c/a\u003e — a tool that compiles C# and .NET\napps to the iPhone.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThis was \u003cem\u003eenormously\u003c/em\u003e controversial at the time, but I also thought largely misunderstood by developers. Later that same day, I published another piece articulating my take on Apple’s reasoning for the change, “\u003ca href=\"https://daringfireball.net/2010/04/why_apple_changed_section_331\"\u003eWhy Apple Changed Section 3.3.1\u003c/a\u003e”. From that article:\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eWe’re still in the early days of the transition from the PC era to\nthe mobile era. Right now, Apple is winning. There are other\nwinners right now too — RIM is still growing, and Android has\ngrown a ton in the past year.\u003c/p\u003e\n\n\u003cp\u003eThe App Store platform could turn into a long-term de facto\nstandard platform. That’s how Microsoft became Microsoft. At a\ncertain point developers wrote apps for Windows because so many\nusers were on Windows and users bought Windows PCs because all the\nsoftware was being written for Windows. That’s the sort of\nsituation that creates a license to print money.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThat seems prescient. (The “license to print money” part — not the “RIM is still growing” part.)\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eSo what Apple does not want is for some other company to establish\na de facto standard software platform \u003cem\u003eon top\u003c/em\u003e of Cocoa Touch. Not\nAdobe’s Flash. Not .NET (through MonoTouch). If that were to\nhappen, there’s no lock-in advantage. If, say, a mobile Flash\nsoftware platform — which encompassed multiple lower-level\nplatforms, running on iPhone, Android, Windows Phone 7, and\nBlackBerry — were established, that app market would not give\npeople a reason to prefer the iPhone.\u003c/p\u003e\n\n\u003cp\u003eAnd, obviously, such a meta-platform would be out of Apple’s\ncontrol. Consider a world where some other company’s\ncross-platform toolkit proved wildly popular. Then Apple releases\nmajor new features to iPhone OS, and that other company’s toolkit\nis slow to adopt them. At that point, it’s the \u003cem\u003eother\u003c/em\u003e company\nthat controls when third-party apps can make use of these\nfeatures.\u003c/p\u003e\n\n\u003cp\u003eSo from Apple’s perspective, changing the iPhone Developer Program\nLicense Agreement to prohibit the use of things like Flash CS5 and\nMonoTouch to create iPhone apps makes complete sense. I’m not\nsaying you have to like this. I’m not arguing that it’s anything\nother than ruthless competitiveness. I’m not arguing (up to this\npoint) that it benefits anyone other than Apple itself. I’m just\narguing that it makes sense from Apple’s perspective — and it was\nApple’s decision to make.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eTwo days later, on 10 April 2010, developer Greg Slepak emailed Steve Jobs to complain about the decision, citing negative sentiment on Hacker News (much has changed since 2010, but some things have not), writing:\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eHi Steve,\u003c/p\u003e\n\n\u003cp\u003eLots of people are pissed off at Apple’s mandate that applications\nbe “originally written” in C/C++/Objective-C. If you go, for\nexample, to the Hacker News homepage right now:\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://news.ycombinator.com/\"\u003ehttp://news.ycombinator.com/\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eYou’ll see that most of the front page stories about this new\nrestriction, with #1 being: “\u003ca href=\"http://whydoeseverythingsuck.com/2010/04/steve-jobs-has-just-gone-mad.html\"\u003eSteve Jobs Has Just Gone Mad\u003c/a\u003e” with\n(currently) 243 upvotes. The top 5 stories are all negative\nreactions to the TOS, and there are several others below them as\nwell. Not a single positive reaction, even from John Gruber, your\nbiggest fan.\u003c/p\u003e\n\n\u003cp\u003eI love your product, but your SDK TOS are growing on it like an\ninvisible cancer.\u003c/p\u003e\n\n\u003cp\u003eSincerely, \u003cbr/\u003e\nGreg\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eJobs wrote back to Slepak (starting a brief exchange of emails):\u003c/p\u003e\n\n\u003cblockquote\u003e\n  \u003cp\u003eWe think John Gruber’s post is very insightful and not negative:\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://daringfireball.net/2010/04/why_apple_changed_section_331\"\u003ehttp://daringfireball.net/2010/04/why_apple_changed_section_331\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eSteve\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.taoeffect.com/blog/2010/04/steve-jobs-response-on-section-3-3-1/\"\u003eSlepak posted the exchange to his blog\u003c/a\u003e, Tao Effect, and, well, as Jobs himself might have said, “Boom.” (This was \u003ca href=\"https://www.macstories.net/news/steve-jobs-what-have-you-done-thats-so-great/\"\u003ea not infrequent thing\u003c/a\u003e at the time, where random users or developers would email Jobs, he’d write back with something pithy, and they’d post the exchange. It was kind of crazy — the most famous CEO in the world, just doing customer service email — and his emails were always sharp.)\u003c/p\u003e\n\n\u003cp\u003eSo, what would \u003cem\u003eyou\u003c/em\u003e do if Steve Jobs was quoted in a viral blog post saying, “We think «\u003cem\u003eYour Name Here\u003c/em\u003e»’s post is very insightful and not negative”? I decided to just sit there with a smug look on my face for a few days (which, arguably, isn’t all that different from what I do most days) and pretend that it was no big deal. I didn’t link to it or mention it on Daring Fireball, and as far as I can tell, \u003ca href=\"https://x.com/search?q=%22not%20negative%22%20(from%3Agruber)\u0026amp;src=typed_query\"\u003eI didn’t even tweet it\u003c/a\u003e. As best I can recall, I thought I should just play it cool. I mean of course my article about why Apple changed Section 3.3.1 was right. Why brag? Given that Steve Jobs was reading Daring Fireball, I didn’t want him to read a post from me acting like it was a big deal that he’d recommended a piece I wrote and agreed with it.\u003c/p\u003e\n\n\u003cp\u003eThat was pretty stupid on my part. Or at least silly. My older perspective, today, is not to overthink such things. If something cool happens, I link to it. It seems ridiculous in hindsight that I didn’t link to Slepak’s post. And, I was thinking this week, if \u003cem\u003eI\u003c/em\u003e couldn’t find a link to the overall story because \u003cem\u003eI\u003c/em\u003e wrongly presumed I must have linked to it at the time, I wondered how many other readers, over the years, have gone hunting for that “very insightful and not negative” story and couldn’t find it because it was never mentioned or linked to on Daring Fireball.\u003c/p\u003e\n\n\u003cp\u003eSo, today, I wrote the post I should have written back then, and \u003ca href=\"https://daringfireball.net/linked/2010/04/11/very-insightful-and-not-negative\"\u003ebackdated it to 11 April 2010\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eTo complete the timeline, April 2010 was a busy month. That same month saw \u003ca href=\"https://techcrunch.com/2010/04/28/hp-palm-deal-webos/\"\u003eHP buy Palm\u003c/a\u003e (in a last-ditch effort to remain relevant as the industry rapidly shifted from being PC-centric to mobile-centric) and \u003ca href=\"https://daringfireball.net/linked/2010/04/28/slate-iphone\"\u003eGizmodo published details on the iPhone 4 prototype\u003c/a\u003e some poor Apple engineer accidentally left in a bar. \u003ca href=\"https://daringfireball.net/2010/04/the_ipad\"\u003eThe original iPad\u003c/a\u003e had \u003ca href=\"https://web.archive.org/web/20100404043324/http://www.time.com/time/business/article/0,8599,1976935,00.html\"\u003ejust shipped\u003c/a\u003e. And at the end of the month, Jobs published “\u003ca href=\"https://daringfireball.net/linked/2010/04/29/jobs-thoughts-on-flash\"\u003eThoughts on Flash\u003c/a\u003e” on the Apple.com homepage. It’s kind of wild that was all in one month — scrolling down \u003ca href=\"https://daringfireball.net/linked/2010/04/\"\u003ethe monthly archive page for April 2010\u003c/a\u003e is just \u003ca href=\"https://daringfireball.net/linked/2010/04/30/cabin-fever\"\u003eone gem\u003c/a\u003e after \u003ca href=\"https://daringfireball.net/linked/2010/04/30/thoughts-on-horses\"\u003eanother\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eRe-reading “\u003ca href=\"https://web.archive.org/web/20100722001052/http://www.apple.com/hotnews/thoughts-on-flash/\"\u003eThoughts on Flash\u003c/a\u003e” again now, for the umpteenth time, I’ll say this: I think Steve Jobs’s post was very insightful and not negative.\u003c/p\u003e\n\n\n\n \n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "9 min read",
  "publishedTime": null,
  "modifiedTime": null
}
