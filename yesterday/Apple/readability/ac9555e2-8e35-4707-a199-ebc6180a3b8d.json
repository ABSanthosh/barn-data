{
  "id": "ac9555e2-8e35-4707-a199-ebc6180a3b8d",
  "title": "‘Things We Learned About LLMs in 2024’",
  "link": "https://simonwillison.net/2024/Dec/31/llms-in-2024/",
  "description": "",
  "author": "John Gruber",
  "published": "2025-01-02T23:35:27Z",
  "source": "https://daringfireball.net/feeds/main",
  "categories": null,
  "byline": "",
  "length": 40700,
  "excerpt": "A lot has happened in the world of Large Language Models over the course of 2024. Here’s a review of things we figured out about the field in the past …",
  "siteName": "",
  "favicon": "",
  "text": "31st December 2024 A lot has happened in the world of Large Language Models over the course of 2024. Here’s a review of things we figured out about the field in the past twelve months, plus my attempt at identifying key themes and pivotal moments. This is a sequel to my review of 2023. In this article: The GPT-4 barrier was comprehensively broken Some of those GPT-4 models run on my laptop LLM prices crashed, thanks to competition and increased efficiency Multimodal vision is common, audio and video are starting to emerge Voice and live camera mode are science fiction come to life Prompt driven app generation is a commodity already Universal access to the best models lasted for just a few short months “Agents” still haven’t really happened yet Evals really matter Apple Intelligence is bad, Apple’s MLX library is excellent The rise of inference-scaling “reasoning” models Was the best currently available LLM trained in China for less than $6m? The environmental impact got better The environmental impact got much, much worse The year of slop Synthetic training data works great LLMs somehow got even harder to use Knowledge is incredibly unevenly distributed LLMs need better criticism Everything tagged “llms” on my blog in 2024 The GPT-4 barrier was comprehensively broken In my December 2023 review I wrote about how We don’t yet know how to build GPT-4—OpenAI’s best model was almost a year old at that point, yet no other AI lab had produced anything better. What did OpenAI know that the rest of us didn’t? I’m relieved that this has changed completely in the past twelve months. 18 organizations now have models on the Chatbot Arena Leaderboard that rank higher than the original GPT-4 from March 2023 (GPT-4-0314 on the board)—70 models in total. The earliest of those was Google’s Gemini 1.5 Pro, released in February. In addition to producing GPT-4 level outputs, it introduced several brand new capabilities to the field—most notably its 1 million (and then later 2 million) token input context length, and the ability to input video. I wrote about this at the time in The killer app of Gemini Pro 1.5 is video, which earned me a short appearance as a talking head in the Google I/O opening keynote in May. Gemini 1.5 Pro also illustrated one of the key themes of 2024: increased context lengths. Last year most models accepted 4,096 or 8,192 tokens, with the notable exception of Claude 2.1 which accepted 200,000. Today every serious provider has a 100,000+ token model, and Google’s Gemini series accepts up to 2 million. Longer inputs dramatically increase the scope of problems that can be solved with an LLM: you can now throw in an entire book and ask questions about its contents, but more importantly you can feed in a lot of example code to help the model correctly solve a coding problem. LLM use-cases that involve long inputs are far more interesting to me than short prompts that rely purely on the information already baked into the model weights. Many of my tools were built using this pattern. Getting back to models that beat GPT-4: Anthropic’s Claude 3 series launched in March, and Claude 3 Opus quickly became my new favourite daily-driver. They upped the ante even more in June with the launch of Claude 3.5 Sonnet—a model that is still my favourite six months later (though it got a significant upgrade on October 22, confusingly keeping the same 3.5 version number. Anthropic fans have since taken to calling it Claude 3.6). Then there’s the rest. If you browse the Chatbot Arena leaderboard today—still the most useful single place to get a vibes-based evaluation of models—you’ll see that GPT-4-0314 has fallen to around 70th place. The 18 organizations with higher scoring models are Google, OpenAI, Alibaba, Anthropic, Meta, Reka AI, 01 AI, Amazon, Cohere, DeepSeek, Nvidia, Mistral, NexusFlow, Zhipu AI, xAI, AI21 Labs, Princeton and Tencent. Training a GPT-4 beating model was a huge deal in 2023. In 2024 it’s an achievement that isn’t even particularly notable, though I personally still celebrate any time a new organization joins that list. Some of those GPT-4 models run on my laptop My personal laptop is a 64GB M2 MacBook Pro from 2023. It’s a powerful machine, but it’s also nearly two years old now—and crucially it’s the same laptop I’ve been using ever since I first ran an LLM on my computer back in March 2023 (see Large language models are having their Stable Diffusion moment). That same laptop that could just about run a GPT-3-class model in March last year has now run multiple GPT-4 class models! Some of my notes on that: Qwen2.5-Coder-32B is an LLM that can code well that runs on my Mac talks about Qwen2.5-Coder-32B in November—an Apache 2.0 licensed model! I can now run a GPT-4 class model on my laptop talks about running Meta’s Llama 3.3 70B (released in December) This remains astonishing to me. I thought a model with the capabilities and output quality of GPT-4 needed a datacenter class server with one or more $40,000+ GPUs. These models take up enough of my 64GB of RAM that I don’t run them often—they don’t leave much room for anything else. The fact that they run at all is a testament to the incredible training and inference performance gains that we’ve figured out over the past year. It turns out there was a lot of low-hanging fruit to be harvested in terms of model efficiency. I expect there’s still more to come. Meta’s Llama 3.2 models deserve a special mention. They may not be GPT-4 class, but at 1B and 3B sizes they punch massively above their weight. I run Llama 3.2 3B on my iPhone using the free MLC Chat iOS app and it’s a shockingly capable model for its tiny (\u003c2GB) size. Try firing it up and asking it for “a plot outline of a Netflix Christmas movie where a data journalist falls in love with a local ceramacist”. Here’s what I got, at a respectable 20 tokens per second: Here’s the rest of the transcript. It’s bland and generic, but my phone can pitch bland and generic Christmas movies to Netflix now! LLM prices crashed, thanks to competition and increased efficiency The past twelve months have seen a dramatic collapse in the cost of running a prompt through the top tier hosted LLMs. In December 2023 (here’s the Internet Archive for the OpenAI pricing page) OpenAI were charging $30/million input tokens for GPT-4, $10/mTok for the then-new GPT-4 Turbo and $1/mTok for GPT-3.5 Turbo. Today $30/mTok gets you OpenAI’s most expensive model, o1. GPT-4o is $2.50 (12x cheaper than GPT-4) and GPT-4o mini is $0.15/mTok—nearly 7x cheaper than GPT-3.5 and massively more capable. Other model providers charge even less. Anthropic’s Claude 3 Haiku (from March, but still their cheapest model) is $0.25/mTok. Google’s Gemini 1.5 Flash is $0.075/mTok and their Gemini 1.5 Flash 8B is $0.0375/mTok—that’s 27x cheaper than GPT-3.5 Turbo last year. I’ve been tracking these pricing changes under my llm-pricing tag. These price drops are driven by two factors: increased competition and increased efficiency. The efficiency thing is really important for everyone who is concerned about the environmental impact of LLMs. These price drops tie directly to how much energy is being used for running prompts. There’s still plenty to worry about with respect to the environmental impact of the great AI datacenter buildout, but a lot of the concerns over the energy cost of individual prompts are no longer credible. Here’s a fun napkin calculation: how much would it cost to generate short descriptions of every one of the 68,000 photos in my personal photo library using Google’s Gemini 1.5 Flash 8B (released in October), their cheapest model? Each photo would need 260 input tokens and around 100 output tokens. 260 * 68,000 = 17,680,000 input tokens 17,680,000 * $0.0375/million = $0.66 100 * 68,000 = 6,800,000 output tokens 6,800,000 * $0.15/million = $1.02 That’s a total cost of $1.68 to process 68,000 images. That’s so absurdly cheap I had to run the numbers three times to confirm I got it right. How good are those descriptions? Here’s what I got from this command: llm -m gemini-1.5-flash-8b-latest describe -a IMG_1825.jpeg Against this photo of butterflies at the California Academy of Sciences: A shallow dish, likely a hummingbird or butterfly feeder, is red. Pieces of orange slices of fruit are visible inside the dish. Two butterflies are positioned in the feeder, one is a dark brown/black butterfly with white/cream-colored markings. The other is a large, brown butterfly with patterns of lighter brown, beige, and black markings, including prominent eye spots. The larger brown butterfly appears to be feeding on the fruit. 260 input tokens, 92 output tokens. Cost approximately 0.0024 cents (that’s less than a 400th of a cent). This increase in efficiency and reduction in price is my single favourite trend from 2024. I want the utility of LLMs at a fraction of the energy cost and it looks like that’s what we’re getting. Multimodal vision is common, audio and video are starting to emerge My butterfly example above illustrates another key trend from 2024: the rise of multi-modal LLMs. A year ago the single most notable example of these was GPT-4 Vision, released at OpenAI’s DevDay in November 2023. Google’s multi-modal Gemini 1.0 was announced on December 7th 2023 so it also (just) makes it into the 2023 window. In 2024, almost every significant model vendor released multi-modal models. We saw the Claude 3 series from Anthropic in March, Gemini 1.5 Pro in April (images, audio and video), then September brought Qwen2-VL and Mistral’s Pixtral 12B and Meta’s Llama 3.2 11B and 90B vision models. We got audio input and output from OpenAI in October, then November saw SmolVLM from Hugging Face and December saw image and video models from Amazon Nova. In October I upgraded my LLM CLI tool to support multi-modal models via attachments. It now has plugins for a whole collection of different vision models. I think people who complain that LLM improvement has slowed are often missing the enormous advances in these multi-modal models. Being able to run prompts against images (and audio and video) is a fascinating new way to apply these models. Voice and live camera mode are science fiction come to life The audio and live video modes that have started to emerge deserve a special mention. The ability to talk to ChatGPT first arrived in September 2023, but it was mostly an illusion: OpenAI used their excellent Whisper speech-to-text model and a new text-to-speech model (creatively named tts-1) to enable conversations with the ChatGPT mobile apps, but the actual model just saw text. The May 13th announcement of GPT-4o included a demo of a brand new voice mode, where the true multi-modal GPT-4o (the o is for “omni”) model could accept audio input and output incredibly realistic sounding speech without needing separate TTS or STT models. The demo also sounded conspicuously similar to Scarlett Johansson... and after she complained the voice from the demo, Skye, never made it to a production product. The delay in releasing the new voice mode after the initial demo caused quite a lot of confusion. I wrote about that in ChatGPT in “4o” mode is not running the new features yet. When ChatGPT Advanced Voice mode finally did roll out (a slow roll from August through September) it was spectacular. I’ve been using it extensively on walks with my dog and it’s amazing how much the improvement in intonation elevates the material. I’ve also had a lot of fun experimenting with the OpenAI audio APIs. Even more fun: Advanced Voice mode can do accents! Here’s what happened when I told it I need you to pretend to be a California brown pelican with a very thick Russian accent, but you talk to me exclusively in Spanish. Your browser does not support the audio element. OpenAI aren’t the only group with a multi-modal audio model. Google’s Gemini also accepts audio input, and the Google Gemini apps can speak in a similar way to ChatGPT now. Amazon also pre-announced voice mode for Amazon Nova, but that’s meant to roll out in Q1 of 2025. Google’s NotebookLM, released in September, took audio output to a new level by producing spookily realistic conversations between two “podcast hosts” about anything you fed into their tool. They later added custom instructions, so naturally I turned them into pelicans: Your browser does not support the audio element. The most recent twist, again from December (December was a lot) is live video. ChatGPT voice mode now provides the option to share your camera feed with the model and talk about what you can see in real time. Google Gemini have a preview of the same feature, which they managed to ship the day before ChatGPT did. These abilities are just a few weeks old at this point, and I don’t think their impact has been fully felt yet. If you haven’t tried them out yet you really should. Both Gemini and OpenAI offer API access to these features as well. OpenAI started with a WebSocket API that was quite challenging to use, but in December they announced a new WebRTC API which is much easier to get started with. Building a web app that a user can talk to via voice is easy now! Prompt driven app generation is a commodity already This was possible with GPT-4 in 2023, but the value it provides became evident in 2024. We already knew LLMs were spookily good at writing code. If you prompt them right, it turns out they can build you a full interactive application using HTML, CSS and JavaScript (and tools like React if you wire up some extra supporting build mechanisms)—often in a single prompt. Anthropic kicked this idea into high gear when they released Claude Artifacts, a groundbreaking new fetaure that was initially slightly lost in the noise due to being described half way through their announcement of the incredible Claude 3.5 Sonnet. With Artifacts, Claude can write you an on-demand interactive application and then let you use it directly inside the Claude interface. Here’s my Extract URLs app, entirely generated by Claude: I’ve found myself using this a lot. I noticed how much I was relying on it in October and wrote Everything I built with Claude Artifacts this week, describing 14 little tools I had put together in a seven day period. Since then, a whole bunch of other teams have built similar systems. GitHub announced their version of this—GitHub Spark—in October. Mistral Chat added it as a feature called Canvas in November. Steve Krouse from Val Town built a version of it against Cerebras, showcasing how a 2,000 token/second LLM can iterate on an application with changes visible in less than a second. Then in December, the Chatbot Arena team introduced a whole new leaderboard for this feature, driven by users building the same interactive app twice with two different models and voting on the answer. Hard to come up with a more convincing argument that this feature is now a commodity that can be effectively implemented against all of the leading models. I’ve been tinkering with a version of this myself for my Datasette project, with the goal of letting users use prompts to build and iterate on custom widgets and data visualizations against their own data. I also figured out a similar pattern for writing one-shot Python programs, enabled by uv. This prompt-driven custom interface feature is so powerful and easy to build (once you’ve figured out the gnarly details of browser sandboxing) that I expect it to show up as a feature in a wide range of products in 2025. Universal access to the best models lasted for just a few short months For a few short months this year all three of the best available models—GPT-4o, Claude 3.5 Sonnet and Gemini 1.5 Pro—were freely available to most of the world. OpenAI made GPT-4o free for all users in May, and Claude 3.5 Sonnet was freely available from its launch in June. This was a momentus change, because for the previous year free users had mostly been restricted to GPT-3.5 level models, meaning new users got a very inaccurate mental model of what a capable LLM could actually do. That era appears to have ended, likely permanently, with OpenAI’s launch of ChatGPT Pro. This $200/month subscription service is the only way to access their most capable model, o1 Pro. Since the trick behind the o1 series (and the future models it will undoubtedly inspire) is to expend more compute time to get better results, I don’t think those days of free access to the best available models are likely to return. “Agents” still haven’t really happened yet I find the term “agents” extremely frustrating. It lacks a single, clear and widely understood meaning... but the people who use the term never seem to acknowledge that. If you tell me that you are building “agents”, you’ve conveyed almost no information to me at all. Without reading your mind I have no way of telling which of the dozens of possible definitions you are talking about. The two main categories I see are people who think AI agents are obviously things that go and act on your behalf—the travel agent model—and people who think in terms of LLMs that have been given access to tools which they can run in a loop as part of solving a problem. The term “autonomy” is often thrown into the mix too, again without including a clear definition. (I also collected 211 definitions on Twitter a few months ago—here they are in Datasette Lite—and had gemini-exp-1206 attempt to summarize them.) Whatever the term may mean, agents still have that feeling of perpetually “coming soon”. Terminology aside, I remain skeptical as to their utility based, once again, on the challenge of gullibility. LLMs believe anything you tell them. Any systems that attempts to make meaningful decisions on your behalf will run into the same roadblock: how good is a travel agent, or a digital assistant, or even a research tool if it can’t distinguish truth from fiction? Just the other day Google Search was caught serving up an entirely fake description of the non-existant movie “Encanto 2”. It turned out to be summarizing an imagined movie listing from a fan fiction wiki. Prompt injection is a natural consequence of this gulibility. I’ve seen precious little progress on tackling that problem in 2024, and we’ve been talking about it since September 2022. I’m beginning to see the most popular idea of “agents” as dependent on AGI itself. A model that’s robust against gulliblity is a very tall order indeed. Evals really matter Anthropic’s Amanda Askell (responsible for much of the work behind Claude’s Character): The boring yet crucial secret behind good system prompts is test-driven development. You don’t write down a system prompt and find ways to test it. You write down tests and find a system prompt that passes them. It’s become abundantly clear over the course of 2024 that writing good automated evals for LLM-powered systems is the skill that’s most needed to build useful applications on top of these models. If you have a strong eval suite you can adopt new models faster, iterate better and build more reliable and useful product features than your competition. Vercel’s Malte Ubl: When @v0 first came out we were paranoid about protecting the prompt with all kinds of pre and post processing complexity. We completely pivoted to let it rip. A prompt without the evals, models, and especially UX is like getting a broken ASML machine without a manual I’m still trying to figure out the best patterns for doing this for my own work. Everyone knows that evals are important, but there remains a lack of great guidance for how to best implement them—I’m tracking this under my evals tag. My SVG pelican riding a bicycle benchmark is a pale imitation of what a real eval suite should look like. Apple Intelligence is bad, Apple’s MLX library is excellent As a Mac user I’ve been feeling a lot better about my choice of platform this year. Last year it felt like my lack of a Linux/Windows machine with an NVIDIA GPU was a huge disadvantage in terms of trying out new models. On paper, a 64GB Mac should be a great machine for running models due to the way the CPU and GPU can share the same memory. In practice, many models are released as model weights and libraries that reward NVIDIA’s CUDA over other platforms. The llama.cpp ecosystem helped a lot here, but the real breakthrough has been Apple’s MLX library, “an array framework for Apple Silicon”. It’s fantastic. Apple’s mlx-lm Python supports running a wide range of MLX-compatible models on my Mac, with excellent performance. mlx-community on Hugging Face offers more than 1,000 models that have been converted to the necessary format. Prince Canuma’s excellent, fast moving mlx-vlm project brings vision LLMs to Apple Silicon as well. I used that recently to run Qwen’s QvQ. While MLX is a game changer, Apple’s own “Apple Intelligence” features have mostly been a dissapointment. I wrote about their initial announcement in June, and I was optimistic that Apple had focused hard on the subset of LLM applications that preserve user privacy and minimize the chance of users getting mislead by confusing features. Now that those features are rolling out they’re pretty weak. As an LLM power-user I know what these models are capable of, and Apple’s LLM features offer a pale imitation of what a frontier LLM can do. Instead we’re getting notification summaries that misrepresent news headlines and writing assistant tools that I’ve not found useful at all. Genmoji are kind of fun though. The rise of inference-scaling “reasoning” models The most interesting development in the final quarter of 2024 was the introduction of a new shape of LLM, exemplified by OpenAI’s o1 models—initially released as o1-preview and o1-mini on September 12th. One way to think about these models is an extension of the chain-of-thought prompting trick, first explored in the May 2022 paper Large Language Models are Zero-Shot Reasoners. This is that trick where, if you get a model to talk out loud about a problem it’s solving, you often get a result which the model would not have achieved otherwise. o1 takes this process and further bakes it into the model itself. The details are somewhat obfuscated: o1 models spend “reasoning tokens” thinking through the problem that are not directly visible to the user (though the ChatGPT UI shows a summary of them), then outputs a final result. The biggest innovation here is that it opens up a new way to scale a model: instead of improving model performance purely through additional compute at training time, models can now take on harder problems by spending more compute on inference. The sequel to o1, o3 (they skipped “o2” for European trademark reasons) was announced on 20th December with an impressive result against the ARC-AGI benchmark, albeit one that likely involved more than $1,000,000 of compute time expense! o3 is expected to ship in January. I doubt many people have real-world problems that would benefit from that level of compute expenditure—I certainly don’t!—but it appears to be a genuine next step in LLM architecture for taking on much harder problems. OpenAI are not the only game in town here. Google released their first entrant in the category, gemini-2.0-flash-thinking-exp, on December 19th. Alibaba’s Qwen team released their QwQ model on November 28th—under an Apache 2.0 license, and that one I could run on my own machine. They followed that up with a vision reasoning model called QvQ on December 24th, which I also ran locally. DeepSeek made their DeepSeek-R1-Lite-Preview model available to try out through their chat interface on November 20th. To understand more about inference scaling I recommend Is AI progress slowing down? by Arvind Narayanan and Sayash Kapoor. Nothing yet from Anthropic or Meta but I would be very surprised if they don’t have their own inference-scaling models in the works. Meta published a relevant paper Training Large Language Models to Reason in a Continuous Latent Space in December. Was the best currently available LLM trained in China for less than $6m? Not quite, but almost! It does make for a great attention-grabbing headline. The big news to end the year was the release of DeepSeek v3—dropped on Hugging Face on Christmas Day without so much as a README file, then followed by documentation and a paper the day after that. DeepSeek v3 is a huge 685B parameter model—one of the largest openly licensed models currently available, significantly bigger than the largest of Meta’s Llama series, Llama 3.1 405B. Benchmarks put it up there with Claude 3.5 Sonnet. Vibe benchmarks (aka the Chatbot Arena) currently rank it 7th, just behind the Gemini 2.0 and OpenAI 4o/o1 models. This is by far the highest ranking openly licensed model. The really impressive thing about DeepSeek v3 is the training cost. The model was trained on 2,788,000 H800 GPU hours at an estimated cost of $5,576,000. Llama 3.1 405B trained 30,840,000 GPU hours—11x that used by DeepSeek v3, for a model that benchmarks slightly worse. Those US export regulations on GPUs to China seem to have inspired some very effective training optimizations! The environmental impact got better A welcome result of the increased efficiency of the models—both the hosted ones and the ones I can run locally—is that the energy usage and environmental impact of running a prompt has dropped enormously over the past couple of years. OpenAI themselves are charging 100x less for a prompt compared to the GPT-3 days. I have it on good authority that neither Google Gemini nor Amazon Nova (two of the least expensive model providers) are running prompts at a loss. I think this means that, as individual users, we don’t need to feel any guilt at all for the energy consumed by the vast majority of our prompts. The impact is likely neglible compared to driving a car down the street or maybe even watching a video on YouTube. Likewise, training. DeepSeek v3 training for less than $6m is a fantastic sign that training costs can and should continue to drop. For less efficient models I find it useful to compare their energy usage to commercial flights. The largest Llama 3 model cost about the same as a single digit number of fully loaded passenger flights from New York to London. That’s certainly not nothing, but once trained that model can be used by millions of people at no extra training cost. The environmental impact got much, much worse The much bigger problem here is the enormous competitive buildout of the infrastructure that is imagined to be necessary for these models in the future. Companies like Google, Meta, Microsoft and Amazon are all spending billions of dollars rolling out new datacenters, with a very material impact on the electricity grid and the environment. There’s even talk of spinning up new nuclear power stations, but those can take decades. Is this infrastructure necessary? DeepSeek v3’s $6m training cost and the continued crash in LLM prices might hint that it’s not. But would you want to be the big tech executive that argued NOT to build out this infrastructure only to be proven wrong in a few years’ time? An interesting point of comparison here could be the way railways rolled out around the world in the 1800s. Constructing these required enormous investments and had a massive environmental impact, and many of the lines that were built turned out to be unnecessary—sometimes multiple lines from different companies serving the exact same routes! The resulting bubbles contributed to several financial crashes, see Wikipedia for Panic of 1873, Panic of 1893, Panic of 1901 and the UK’s Railway Mania. They left us with a lot of useful infrastructure and a great deal of bankruptcies and environmental damage. The year of slop 2024 was the year that the word \"slop\" became a term of art. I wrote about this in May, expanding on this tweet by @deepfates: Watching in real time as “slop” becomes a term of art. the way that “spam” became the term for unwanted emails, “slop” is going in the dictionary as the term for unwanted AI generated content I expanded that definition a tiny bit to this: Slop describes AI-generated content that is both unrequested and unreviewed. I ended up getting quoted talking about slop in both the Guardian and the NY Times. Here’s what I said in the NY TImes: Society needs concise ways to talk about modern A.I. — both the positives and the negatives. ‘Ignore that email, it’s spam,’ and ‘Ignore that article, it’s slop,’ are both useful lessons. I love the term “slop” because it so succinctly captures one of the ways we should not be using generative AI! Slop was even in the running for Oxford Word of the Year 2024, but it lost to brain rot. Synthetic training data works great An idea that surprisingly seems to have stuck in the public consciousness is that of “model collapse”. This was first described in the paper The Curse of Recursion: Training on Generated Data Makes Models Forget in May 2023, and repeated in Nature in July 2024 with the more eye-catching headline AI models collapse when trained on recursively generated data. The idea is seductive: as the internet floods with AI-generated slop the models themselves will degenerate, feeding on their own output in a way that leads to their inevitable demise! That’s clearly not happening. Instead, we are seeing AI labs increasingly train on synthetic content—deliberately creating artificial data to help steer their models in the right way. One of the best descriptions I’ve seen of this comes from the Phi-4 technical report, which included this: Synthetic data as a substantial component of pretraining is becoming increasingly common, and the Phi series of models has consistently emphasized the importance of synthetic data. Rather than serving as a cheap substitute for organic data, synthetic data has several direct advantages over organic data. Structured and Gradual Learning. In organic datasets, the relationship between tokens is often complex and indirect. Many reasoning steps may be required to connect the current token to the next, making it challenging for the model to learn effectively from next-token prediction. By contrast, each token generated by a language model is by definition predicted by the preceding tokens, making it easier for a model to follow the resulting reasoning patterns. Another common technique is to use larger models to help create training data for their smaller, cheaper alternatives—a trick used by an increasing number of labs. DeepSeek v3 used “reasoning” data created by DeepSeek-R1. Meta’s Llama 3.3 70B fine-tuning used over 25M synthetically generated examples. Careful design of the training data that goes into an LLM appears to be the entire game for creating these models. The days of just grabbing a full scrape of the web and indiscriminately dumping it into a training run are long gone. LLMs somehow got even harder to use A drum I’ve been banging for a while is that LLMs are power-user tools—they’re chainsaws disguised as kitchen knives. They look deceptively simple to use—how hard can it be to type messages to a chatbot?—but in reality you need a huge depth of both understanding and experience to make the most of them and avoid their many pitfalls. If anything, this problem got worse in 2024. We’ve built computer systems you can talk to in human language, that will answer your questions and usually get them right! ... depending on the question, and how you ask it, and whether it’s accurately reflected in the undocumented and secret training set. The number of available systems has exploded. Different systems have different tools they can apply to your problems—like Python and JavaScript and web search and image generation and maybe even database lookups... so you’d better understand what those tools are, what they can do and how to tell if the LLM used them or not. Did you know ChatGPT has two entirely different ways of running Python now? Want to build a Claude Artifact that talks to an external API? You’d better understand CSP and CORS HTTP headers first. The models may have got more capable, but most of the limitations remained the same. OpenAI’s o1 may finally be able to (mostly) count the Rs in strawberry, but its abilities are still limited by its nature as an LLM and the constraints placed on it by the harness it’s running in. o1 can’t run web searches or use Code Interpreter, but GPT-4o can—both in that same ChatGPT UI. (o1 will pretend to do those things if you ask it to, a regression to the URL hallucinations bug from early 2023). What are we doing about this? Not much. Most users are thrown in at the deep end. The default LLM chat UI is like taking brand new computer users, dropping them into a Linux terminal and expecting them to figure it all out. Meanwhile, it’s increasingly common for end users to develop wildly inaccurate mental models of how these things work and what they are capable of. I’ve seen so many examples of people trying to win an argument with a screenshot from ChatGPT—an inherently ludicrous proposition, given the inherent unreliability of these models crossed with the fact that you can get them to say anything if you prompt them right. There’s a flipside to this too: a lot of better informed people have sworn off LLMs entirely because they can’t see how anyone could benefit from a tool with so many flaws. The key skill in getting the most out of LLMs is learning to work with tech that is both inherently unreliable and incredibly powerful at the same time. This is a decidedly non-obvious skill to acquire! There is so much space for helpful education content here, but we need to do do a lot better than outsourcing it all to AI grifters with bombastic Twitter threads. Knowledge is incredibly unevenly distributed Most people have heard of ChatGPT by now. How many have heard of Claude? The knowledge gap between the people who actively follow this stuff and the 99% of the population who do not is vast. The pace of change doesn’t help either. In just the past month we’ve seen general availability of live interfaces where you can point your phone’s camera at something and talk about it with your voice... and optionally have it pretend to be Santa. Most self-certified nerds haven’t even tried that yet. Given the ongoing (and potential) impact on society that this technology has, I don’t think the size of this gap is healthy. I’d like to see a lot more effort put into improving this. LLMs need better criticism A lot of people absolutely hate this stuff. In some of the spaces I hang out (Mastodon, Bluesky, Lobste.rs, even Hacker News on occasion) even suggesting that “LLMs are useful” can be enough to kick off a huge fight. I get it. There are plenty of reasons to dislike this technology—the environmental impact, the (lack of) ethics of the training data, the lack of reliability, the negative applications, the potential impact on people’s jobs. LLMs absolutely warrant criticism. We need to be talking through these problems, finding ways to mitigate them and helping people learn how to use these tools responsibly in ways where the positive applications outweigh the negative. I like people who are skeptical of this stuff. The hype has been deafening for more than two years now, and there are enormous quantities of snake oil and misinformation out there. A lot of very bad decisions are being made based on that hype. Being critical is a virtue. If we want people with decision-making authority to make good decisions about how to apply these tools we first need to acknowledge that there ARE good applications, and then help explain how to put those into practice while avoiding the many unintiutive traps. (If you still don’t think there are any good applications at all I’m not sure why you made it to this point in the article!) I think telling people that this whole field is environmentally catastrophic plagiarism machines that constantly make things up is doing those people a disservice, no matter how much truth that represents. There is genuine value to be had here, but getting to that value is unintuitive and needs guidance. Those of us who understand this stuff have a duty to help everyone else figure it out. Everything tagged “llms” on my blog in 2024 Because I undoubtedly missed a whole bunch of things, here’s every long-form post I wrote in 2024 that I tagged with llms: January 7th: It’s OK to call it Artificial Intelligence 9th: What I should have said about the term Artificial Intelligence 17th: Talking about Open Source LLMs on Oxide and Friends 26th: LLM 0.13: The annotated release notes February 21st: The killer app of Gemini Pro 1.5 is video March 5th: Prompt injection and jailbreaking are not the same thing 8th: The GPT-4 barrier has finally been broken 22nd: Claude and ChatGPT for ad-hoc sidequests 23rd: Building and testing C extensions for SQLite with ChatGPT Code Interpreter 26th: llm cmd undo last git commit—a new plugin for LLM April 8th: Building files-to-prompt entirely using Claude 3 Opus 10th: Three major LLM releases in 24 hours (plus weeknotes) 17th: AI for Data Journalism: demonstrating what we can do with this stuff right now 22nd: Options for accessing Llama 3 from the terminal using LLM May 8th: Slop is the new name for unwanted AI-generated content 15th: ChatGPT in “4o” mode is not running the new features yet 29th: Training is not the same as chatting: ChatGPT and other LLMs don’t remember everything you say June 6th: Accidental prompt injection against RAG applications 10th: Thoughts on the WWDC 2024 keynote on Apple Intelligence 17th: Language models on the command-line 21st: Building search-based RAG using Claude, Datasette and Val Town 27th: Open challenges for AI engineering July 14th: Imitation Intelligence, my keynote for PyCon US 2024 19th: Weeknotes: GPT-4o mini, LLM 0.15, sqlite-utils 3.37 and building a staging environment August 6th: Weeknotes: a staging environment, a Datasette alpha and a bunch of new LLMs 8th: django-http-debug, a new Django app mostly written by Claude 23rd: Claude’s API now supports CORS requests, enabling client-side applications 26th: Building a tool showing how Gemini Pro can return bounding boxes for objects in images September 6th: Calling LLMs from client-side JavaScript, converting PDFs to HTML + weeknotes 10th: Notes from my appearance on the Software Misadventures Podcast 12th: Notes on OpenAI’s new o1 chain-of-thought models 20th: Notes on using LLMs for code 29th: NotebookLM’s automatically generated podcasts are surprisingly effective 30th: Weeknotes: Three podcasts, two trips and a new plugin system October 1st: OpenAI DevDay 2024 live blog 2nd: OpenAI DevDay: Let’s build developer tools, not digital God 15th: ChatGPT will happily write you a thinly disguised horoscope 17th: Video scraping: extracting JSON data from a 35 second screen capture for less than 1/10th of a cent 18th: Experimenting with audio input and output for the OpenAI Chat Completion API 19th: Running Llama 3.2 Vision and Phi-3.5 Vision on a Mac with mistral.rs 21st: Everything I built with Claude Artifacts this week 22nd: Initial explorations of Anthropic’s new Computer Use capability 24th: Notes on the new Claude analysis JavaScript code execution tool 27th: Run a prompt to generate and execute jq programs using llm-jq 29th: You can now run prompts against images, audio and video in your terminal using LLM 30th: W̶e̶e̶k̶n̶o̶t̶e̶s̶ Monthnotes for October November 4th: Claude 3.5 Haiku 7th: Project: VERDAD—tracking misinformation in radio broadcasts using Gemini 1.5 12th: Qwen2.5-Coder-32B is an LLM that can code well that runs on my Mac 19th: Notes from Bing Chat—Our First Encounter With Manipulative AI 25th: Ask questions of SQLite databases and CSV/JSON files in your terminal December 4th: First impressions of the new Amazon Nova LLMs (via a new llm-bedrock plugin) 7th: Prompts.js 9th: I can now run a GPT-4 class model on my laptop 10th: ChatGPT Canvas can make API requests now, but it’s complicated 11th: Gemini 2.0 Flash: An outstanding multi-modal LLM with a sci-fi streaming mode 19th: Building Python tools with a one-shot prompt using uv run and Claude Projects 19th: Gemini 2.0 Flash “Thinking mode” 20th: December in LLMs has been a lot 20th: Live blog: the 12th day of OpenAI—“Early evals for OpenAI o3” 24th: Trying out QvQ—Qwen’s new visual reasoning model 31st: Things we learned about LLMs in 2024 (This list generated using Django SQL Dashboard with a SQL query written for me by Claude.)",
  "image": "https://static.simonwillison.net/static/2024/arena-dec-2024.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv data-permalink-context=\"/2024/Dec/31/llms-in-2024/\"\u003e\n\n\u003cp\u003e31st December 2024\u003c/p\u003e\n\n\n\n\u003cp\u003eA \u003cem\u003elot\u003c/em\u003e has happened in the world of Large Language Models over the course of 2024. Here’s a review of things we figured out about the field in the past twelve months, plus my attempt at identifying key themes and pivotal moments.\u003c/p\u003e\n\u003cp\u003eThis is a sequel to \u003ca href=\"https://simonwillison.net/2023/Dec/31/ai-in-2023/\"\u003emy review of 2023\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eIn this article:\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ca href=\"https://simonwillison.net/2024/Dec/31/llms-in-2024/#the-gpt-4-barrier-was-comprehensively-broken\"\u003eThe GPT-4 barrier was comprehensively broken\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://simonwillison.net/2024/Dec/31/llms-in-2024/#some-of-those-gpt-4-models-run-on-my-laptop\"\u003eSome of those GPT-4 models run on my laptop\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://simonwillison.net/2024/Dec/31/llms-in-2024/#llm-prices-crashed-thanks-to-competition-and-increased-efficiency\"\u003eLLM prices crashed, thanks to competition and increased efficiency\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://simonwillison.net/2024/Dec/31/llms-in-2024/#multimodal-vision-is-common-audio-and-video-are-starting-to-emerge\"\u003eMultimodal vision is common, audio and video are starting to emerge\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://simonwillison.net/2024/Dec/31/llms-in-2024/#voice-and-live-camera-mode-are-science-fiction-come-to-life\"\u003eVoice and live camera mode are science fiction come to life\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://simonwillison.net/2024/Dec/31/llms-in-2024/#prompt-driven-app-generation-is-a-commodity-already\"\u003ePrompt driven app generation is a commodity already\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://simonwillison.net/2024/Dec/31/llms-in-2024/#universal-access-to-the-best-models-lasted-for-just-a-few-short-months\"\u003eUniversal access to the best models lasted for just a few short months\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://simonwillison.net/2024/Dec/31/llms-in-2024/#-agents-still-haven-t-really-happened-yet\"\u003e“Agents” still haven’t really happened yet\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://simonwillison.net/2024/Dec/31/llms-in-2024/#evals-really-matter\"\u003eEvals really matter\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://simonwillison.net/2024/Dec/31/llms-in-2024/#apple-intelligence-is-bad-apple-s-mlx-library-is-excellent\"\u003eApple Intelligence is bad, Apple’s MLX library is excellent\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://simonwillison.net/2024/Dec/31/llms-in-2024/#the-rise-of-inference-scaling-reasoning-models\"\u003eThe rise of inference-scaling “reasoning” models\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://simonwillison.net/2024/Dec/31/llms-in-2024/#was-the-best-currently-available-llm-trained-in-china-for-less-than-6m-\"\u003eWas the best currently available LLM trained in China for less than $6m?\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://simonwillison.net/2024/Dec/31/llms-in-2024/#the-environmental-impact-got-better\"\u003eThe environmental impact got better\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://simonwillison.net/2024/Dec/31/llms-in-2024/#the-environmental-impact-got-much-much-worse\"\u003eThe environmental impact got much, much worse\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://simonwillison.net/2024/Dec/31/llms-in-2024/#the-year-of-slop\"\u003eThe year of slop\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://simonwillison.net/2024/Dec/31/llms-in-2024/#synthetic-training-data-works-great\"\u003eSynthetic training data works great\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://simonwillison.net/2024/Dec/31/llms-in-2024/#llms-somehow-got-even-harder-to-use\"\u003eLLMs somehow got even harder to use\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://simonwillison.net/2024/Dec/31/llms-in-2024/#knowledge-is-incredibly-unevenly-distributed\"\u003eKnowledge is incredibly unevenly distributed\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://simonwillison.net/2024/Dec/31/llms-in-2024/#llms-need-better-criticism\"\u003eLLMs need better criticism\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href=\"https://simonwillison.net/2024/Dec/31/llms-in-2024/#everything-tagged-llms-on-my-blog-in-2024\"\u003eEverything tagged “llms” on my blog in 2024\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"the-gpt-4-barrier-was-comprehensively-broken\"\u003eThe GPT-4 barrier was comprehensively broken\u003c/h4\u003e\n\u003cp\u003eIn my December 2023 review I wrote about how \u003ca href=\"https://simonwillison.net/2023/Dec/31/ai-in-2023/#cant-build-gpt4\"\u003eWe don’t yet know how to build GPT-4\u003c/a\u003e—OpenAI’s best model was almost a year old at that point, yet no other AI lab had produced anything better. What did OpenAI know that the rest of us didn’t?\u003c/p\u003e\n\u003cp\u003eI’m relieved that this has changed completely in the past twelve months. 18 organizations now have models on the \u003ca href=\"https://lmarena.ai/?leaderboard\"\u003eChatbot Arena Leaderboard\u003c/a\u003e that rank higher than the original GPT-4 from March 2023 (\u003ccode\u003eGPT-4-0314\u003c/code\u003e on the board)—70 models in total.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://static.simonwillison.net/static/2024/arena-dec-2024.jpg\" alt=\"Screenshot of a comparison table showing AI model rankings. Table headers: Rank (UB), Rank (StyleCtrl), Model, Arena Score, 95% CI, Votes, Organization, License. Shows 12 models including GLM-4-0520, Llama-3-70B-Instruct, Gemini-1.5-Flash-8B-Exp-0827, with rankings, scores, and licensing details. Models range from rank 52-69 with Arena scores between 1186-1207.\"/\u003e\u003c/p\u003e\n\u003cp\u003eThe earliest of those was \u003cstrong\u003eGoogle’s Gemini 1.5 Pro\u003c/strong\u003e, released in February. In addition to producing GPT-4 level outputs, it introduced several brand new capabilities to the field—most notably its 1 million (and then later 2 million) token input context length, and the ability to input video.\u003c/p\u003e\n\u003cp\u003eI wrote about this at the time in \u003ca href=\"https://simonwillison.net/2024/Feb/21/gemini-pro-video/\"\u003eThe killer app of Gemini Pro 1.5 is video\u003c/a\u003e, which earned me a short appearance \u003ca href=\"https://www.youtube.com/watch?v=XEzRZ35urlk\u0026amp;t=606s\"\u003eas a talking head\u003c/a\u003e in the Google I/O opening keynote in May.\u003c/p\u003e\n\u003cp\u003eGemini 1.5 Pro also illustrated one of the key themes of 2024: \u003cstrong\u003eincreased context lengths\u003c/strong\u003e. Last year most models accepted 4,096 or 8,192 tokens, with the notable exception of Claude 2.1 which \u003ca href=\"https://www.anthropic.com/news/claude-2-1\"\u003eaccepted 200,000\u003c/a\u003e. Today every serious provider has a 100,000+ token model, and Google’s Gemini series accepts up to 2 million.\u003c/p\u003e\n\u003cp\u003eLonger inputs dramatically increase the scope of problems that can be solved with an LLM: you can now throw in an entire book and ask questions about its contents, but more importantly you can feed in a \u003cem\u003elot\u003c/em\u003e of example code to help the model correctly solve a coding problem. LLM use-cases that involve long inputs are far more interesting to me than short prompts that rely purely on the information already baked into the model weights. Many of my \u003ca href=\"https://simonwillison.net/tags/tools/\"\u003etools\u003c/a\u003e were built using this pattern.\u003c/p\u003e\n\u003cp\u003eGetting back to models that beat GPT-4: Anthropic’s Claude 3 series \u003ca href=\"https://simonwillison.net/2024/Mar/4/claude-3/\"\u003elaunched in March\u003c/a\u003e, and Claude 3 Opus quickly became my new favourite daily-driver. They upped the ante even more in June with \u003ca href=\"https://simonwillison.net/2024/Jun/20/claude-35-sonnet/\"\u003ethe launch of Claude 3.5 Sonnet\u003c/a\u003e—a model that is still my favourite six months later (though it got a significant upgrade \u003ca href=\"https://www.anthropic.com/news/3-5-models-and-computer-use\"\u003eon October 22\u003c/a\u003e, confusingly keeping the same 3.5 version number. Anthropic fans have since taken to calling it Claude 3.6).\u003c/p\u003e\n\u003cp\u003eThen there’s the rest. If you browse \u003ca href=\"https://lmarena.ai/?leaderboard\"\u003ethe Chatbot Arena leaderboard\u003c/a\u003e today—still the most useful single place to get \u003ca href=\"https://simonwillison.net/2024/Jul/14/pycon/#pycon-2024.016.jpeg\"\u003ea vibes-based evaluation\u003c/a\u003e of models—you’ll see that GPT-4-0314 has fallen to around 70th place. The 18 organizations with higher scoring models are Google, OpenAI, Alibaba, Anthropic, Meta, Reka AI, 01 AI, Amazon, Cohere, DeepSeek, Nvidia, Mistral, NexusFlow, Zhipu AI, xAI, AI21 Labs, Princeton and Tencent.\u003c/p\u003e\n\u003cp\u003eTraining a GPT-4 beating model was a huge deal in 2023. In 2024 it’s an achievement that isn’t even particularly notable, though I personally still celebrate any time a new organization joins that list.\u003c/p\u003e\n\u003ch4 id=\"some-of-those-gpt-4-models-run-on-my-laptop\"\u003eSome of those GPT-4 models run on my laptop\u003c/h4\u003e\n\u003cp\u003eMy personal laptop is a 64GB M2 MacBook Pro from 2023. It’s a powerful machine, but it’s also nearly two years old now—and crucially it’s the same laptop I’ve been using ever since I first ran an LLM on my computer back in March 2023 (see \u003ca href=\"https://simonwillison.net/2023/Mar/11/llama/\"\u003eLarge language models are having their Stable Diffusion moment\u003c/a\u003e).\u003c/p\u003e\n\u003cp\u003eThat same laptop that could just about run a GPT-3-class model in March last year has now run multiple GPT-4 class models! Some of my notes on that:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://simonwillison.net/2024/Nov/12/qwen25-coder/\"\u003eQwen2.5-Coder-32B is an LLM that can code well that runs on my Mac\u003c/a\u003e talks about Qwen2.5-Coder-32B in November—an Apache 2.0 licensed model!\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://simonwillison.net/2024/Dec/9/llama-33-70b/\"\u003eI can now run a GPT-4 class model on my laptop\u003c/a\u003e talks about running Meta’s Llama 3.3 70B (released in December)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThis remains astonishing to me. I thought a model with the capabilities and output quality of GPT-4 needed a datacenter class server with one or more $40,000+ GPUs.\u003c/p\u003e\n\u003cp\u003eThese models take up enough of my 64GB of RAM that I don’t run them often—they don’t leave much room for anything else.\u003c/p\u003e\n\u003cp\u003eThe fact that they run at all is a testament to the incredible training and inference performance gains that we’ve figured out over the past year. It turns out there was a \u003cem\u003elot\u003c/em\u003e of low-hanging fruit to be harvested in terms of model efficiency. I expect there’s still more to come.\u003c/p\u003e\n\u003cp\u003eMeta’s Llama 3.2 models deserve a special mention. They may not be GPT-4 class, but at 1B and 3B sizes they punch \u003cem\u003emassively\u003c/em\u003e above their weight. I run Llama 3.2 3B on my iPhone using the free \u003ca href=\"https://apps.apple.com/us/app/mlc-chat/id6448482937\"\u003eMLC Chat iOS app\u003c/a\u003e and it’s a shockingly capable model for its tiny (\u0026lt;2GB) size. Try firing it up and asking it for “a plot outline of a Netflix Christmas movie where a data journalist falls in love with a local ceramacist”. Here’s what I got, at a respectable 20 tokens per second:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://static.simonwillison.net/static/2024/mlc-chat-christmas.jpg\" alt=\"MLC Chat: Llama - [System] Ready to chat. a plot outline of a Netflix Christmas movie where a data journalist falls in love with a local ceramacist. Show as Markdown is turned on. Here\u0026#39;s a plot outline for a Netflix Christmas movie: Title: \u0026#34;Love in the Clay\u0026#34; Plot Outline: We meet our protagonist, JESSICA, a data journalist who has just returned to her hometown of Willow Creek, a small, charming town nestled in the snow-covered mountains. She\u0026#39;s back to work on a story about the town\u0026#39;s history and the effects of gentrification on the local community.\"/\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://gist.github.com/simonw/7db8d582fdb0c133d7e05205c305d5bd\"\u003eHere’s the rest of the transcript\u003c/a\u003e. It’s bland and generic, but my phone can pitch bland and generic Christmas movies to Netflix now!\u003c/p\u003e\n\u003ch4 id=\"llm-prices-crashed-thanks-to-competition-and-increased-efficiency\"\u003eLLM prices crashed, thanks to competition and increased efficiency\u003c/h4\u003e\n\u003cp\u003eThe past twelve months have seen a dramatic collapse in the cost of running a prompt through the top tier hosted LLMs.\u003c/p\u003e\n\u003cp\u003eIn December 2023 (here’s the \u003ca href=\"https://web.archive.org/web/20231214190432/https://openai.com/pricing\"\u003eInternet Archive for the OpenAI pricing page\u003c/a\u003e) OpenAI were charging $30/million input tokens for GPT-4, $10/mTok for the then-new GPT-4 Turbo and $1/mTok for GPT-3.5 Turbo.\u003c/p\u003e\n\u003cp\u003eToday $30/mTok gets you OpenAI’s most expensive model, o1. GPT-4o is $2.50 (12x cheaper than GPT-4) and GPT-4o mini is $0.15/mTok—nearly 7x cheaper than GPT-3.5 and \u003cem\u003emassively\u003c/em\u003e more capable.\u003c/p\u003e\n\u003cp\u003eOther model providers charge even less. Anthropic’s Claude 3 Haiku (from March, but still their cheapest model) is $0.25/mTok. Google’s Gemini 1.5 Flash is $0.075/mTok and their Gemini 1.5 Flash 8B is $0.0375/mTok—that’s 27x cheaper than GPT-3.5 Turbo last year.\u003c/p\u003e\n\u003cp\u003eI’ve been tracking these pricing changes under my \u003ca href=\"https://simonwillison.net/tags/llm-pricing/\"\u003ellm-pricing tag\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThese price drops are driven by two factors: increased competition and increased efficiency. The efficiency thing is \u003cem\u003ereally\u003c/em\u003e important for everyone who is concerned about the environmental impact of LLMs. These price drops tie directly to how much energy is being used for running prompts.\u003c/p\u003e\n\u003cp\u003eThere’s still plenty to worry about with respect to the environmental impact of the great AI datacenter buildout, but a lot of the concerns over the energy cost of individual prompts are no longer credible.\u003c/p\u003e\n\u003cp\u003eHere’s a fun napkin calculation: how much would it cost to generate short descriptions of every one of the 68,000 photos in my personal photo library using Google’s Gemini 1.5 Flash 8B (\u003ca href=\"https://developers.googleblog.com/en/gemini-15-flash-8b-is-now-generally-available-for-use/\"\u003ereleased in October\u003c/a\u003e), their cheapest model?\u003c/p\u003e\n\u003cp\u003eEach photo would need 260 input tokens and around 100 output tokens.\u003c/p\u003e\n\u003cp\u003e260 * 68,000 = 17,680,000 input tokens\u003cbr/\u003e\n17,680,000 * $0.0375/million = $0.66\u003cbr/\u003e\n100 * 68,000 = 6,800,000 output tokens\u003cbr/\u003e\n6,800,000 * $0.15/million = $1.02\u003cbr/\u003e\u003c/p\u003e\n\u003cp\u003eThat’s a total cost of \u003cstrong\u003e$1.68\u003c/strong\u003e to process 68,000 images. That’s so absurdly cheap I had to run the numbers three times to confirm I got it right.\u003c/p\u003e\n\u003cp\u003eHow good are those descriptions? Here’s what I got from this command:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ellm -m gemini-1.5-flash-8b-latest describe -a IMG_1825.jpeg\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eAgainst this photo of butterflies at the California Academy of Sciences:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://static.simonwillison.net/static/2024/butterflies.jpg\" alt=\"A photo of two butterflies feeding on a red tray\"/\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eA shallow dish, likely a hummingbird or butterfly feeder, is red.  Pieces of orange slices of fruit are visible inside the dish.\u003c/p\u003e\n\u003cp\u003eTwo butterflies are positioned in the feeder, one is a dark brown/black butterfly with white/cream-colored markings.  The other is a large, brown butterfly with patterns of lighter brown, beige, and black markings, including prominent eye spots. The larger brown butterfly appears to be feeding on the fruit.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e260 input tokens, 92 output tokens. Cost approximately 0.0024 cents (that’s less than a 400th of a cent).\u003c/p\u003e\n\u003cp\u003eThis increase in efficiency and reduction in price is my single favourite trend from 2024. I want the utility of LLMs at a fraction of the energy cost and it looks like that’s what we’re getting.\u003c/p\u003e\n\u003ch4 id=\"multimodal-vision-is-common-audio-and-video-are-starting-to-emerge\"\u003eMultimodal vision is common, audio and video are starting to emerge\u003c/h4\u003e\n\u003cp\u003eMy butterfly example above illustrates another key trend from 2024: the rise of multi-modal LLMs.\u003c/p\u003e\n\u003cp\u003eA year ago the single most notable example of these was GPT-4 Vision, \u003ca href=\"https://openai.com/index/new-models-and-developer-products-announced-at-devday/\"\u003ereleased at OpenAI’s DevDay in November 2023\u003c/a\u003e. Google’s multi-modal Gemini 1.0 was announced \u003ca href=\"https://blog.google/technology/ai/google-gemini-ai/\"\u003eon December 7th 2023\u003c/a\u003e so it also (just) makes it into the 2023 window.\u003c/p\u003e\n\u003cp\u003eIn 2024, almost every significant model vendor released multi-modal models. We saw the Claude 3 series from Anthropic \u003ca href=\"https://simonwillison.net/2024/Mar/4/claude-3/\"\u003ein March\u003c/a\u003e, Gemini 1.5 Pro \u003ca href=\"https://simonwillison.net/2024/Apr/10/gemini-15-pro-public-preview/\"\u003ein April\u003c/a\u003e (images, audio and video), then September brought \u003ca href=\"https://simonwillison.net/2024/Sep/4/qwen2-vl/\"\u003eQwen2-VL\u003c/a\u003e and Mistral’s \u003ca href=\"https://simonwillison.net/2024/Sep/11/pixtral/\"\u003ePixtral 12B\u003c/a\u003e and Meta’s \u003ca href=\"https://simonwillison.net/2024/Sep/25/llama-32/\"\u003eLlama 3.2 11B and 90B vision models\u003c/a\u003e. We got audio input and output \u003ca href=\"https://simonwillison.net/2024/Oct/18/openai-audio/\"\u003efrom OpenAI in October\u003c/a\u003e, then November saw \u003ca href=\"https://simonwillison.net/2024/Nov/28/smolvlm/\"\u003eSmolVLM from Hugging Face\u003c/a\u003e and December saw image and video models \u003ca href=\"https://simonwillison.net/2024/Dec/4/amazon-nova/\"\u003efrom Amazon Nova\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eIn October I \u003ca href=\"https://simonwillison.net/2024/Oct/29/llm-multi-modal/\"\u003eupgraded my LLM CLI tool to support multi-modal models via attachments\u003c/a\u003e. It now has plugins for a whole collection of different vision models.\u003c/p\u003e\n\u003cp\u003eI think people who complain that LLM improvement has slowed are often missing the enormous advances in these multi-modal models. Being able to run prompts against images (and audio and video) is a fascinating new way to apply these models.\u003c/p\u003e\n\u003ch4 id=\"voice-and-live-camera-mode-are-science-fiction-come-to-life\"\u003eVoice and live camera mode are science fiction come to life\u003c/h4\u003e\n\u003cp\u003eThe audio and live video modes that have started to emerge deserve a special mention.\u003c/p\u003e\n\u003cp\u003eThe ability to talk to ChatGPT first arrived \u003ca href=\"https://openai.com/index/chatgpt-can-now-see-hear-and-speak/\"\u003ein September 2023\u003c/a\u003e, but it was mostly an illusion: OpenAI used their excellent Whisper speech-to-text model and a new text-to-speech model (creatively named \u003ca href=\"https://platform.openai.com/docs/models#tts\"\u003etts-1\u003c/a\u003e) to enable conversations with the ChatGPT mobile apps, but the actual model just saw text.\u003c/p\u003e\n\u003cp\u003eThe \u003ca href=\"https://openai.com/index/hello-gpt-4o/\"\u003eMay 13th\u003c/a\u003e announcement of GPT-4o included a demo of a brand new voice mode, where the true multi-modal GPT-4o (the o is for “omni”) model could accept audio input and output incredibly realistic sounding speech without needing separate TTS or STT models.\u003c/p\u003e\n\u003cp\u003eThe demo also sounded \u003ca href=\"https://www.nytimes.com/2024/05/20/technology/scarlett-johansson-openai-statement.html\"\u003econspicuously similar to Scarlett Johansson\u003c/a\u003e... and after she complained the voice from the demo, Skye, never made it to a production product.\u003c/p\u003e\n\u003cp\u003eThe delay in releasing the new voice mode after the initial demo caused quite a lot of confusion. I wrote about that in \u003ca href=\"https://simonwillison.net/2024/May/15/chatgpt-in-4o-mode/\"\u003eChatGPT in “4o” mode is not running the new features yet\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eWhen ChatGPT Advanced Voice mode finally \u003cem\u003edid\u003c/em\u003e roll out (a slow roll from August through September) it was spectacular. I’ve been using it extensively on walks with my dog and it’s amazing how much the improvement in intonation elevates the material. I’ve also had a lot of fun \u003ca href=\"https://simonwillison.net/2024/Oct/18/openai-audio/\"\u003eexperimenting with the OpenAI audio APIs\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eEven more fun: Advanced Voice mode can do accents! Here’s what happened when I told it \u003ca href=\"https://simonwillison.net/2024/Oct/26/russian-spanish-pelican/\"\u003eI need you to pretend to be a California brown pelican with a very thick Russian accent, but you talk to me exclusively in Spanish\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003caudio controls=\"controls\"\u003e\n\u003csource src=\"https://static.simonwillison.net/static/2024/russian-pelican-in-spanish.mp3\" type=\"audio/mp3\"/\u003e\nYour browser does not support the audio element.\n\u003c/audio\u003e\u003c/p\u003e\n\u003cp\u003eOpenAI aren’t the only group with a multi-modal audio model. Google’s Gemini also accepts audio input, and the Google Gemini apps can speak in a similar way to ChatGPT now. Amazon also pre-announced voice mode \u003ca href=\"https://simonwillison.net/2024/Dec/4/amazon-nova/#gamoa\"\u003efor Amazon Nova\u003c/a\u003e, but that’s meant to roll out in Q1 of 2025.\u003c/p\u003e\n\u003cp\u003eGoogle’s NotebookLM, released \u003ca href=\"https://simonwillison.net/2024/Sep/29/notebooklm-audio-overview/\"\u003ein September\u003c/a\u003e, took audio output to a new level by producing spookily realistic conversations between two “podcast hosts” about anything you fed into their tool. They later added custom instructions, so naturally \u003ca href=\"https://simonwillison.net/2024/Oct/17/notebooklm-pelicans/\"\u003eI turned them into pelicans\u003c/a\u003e:\u003c/p\u003e\n\u003cp\u003e\u003caudio controls=\"controls\"\u003e\n\u003csource src=\"https://static.simonwillison.net/static/2024/video-scraping-pelicans.mp3\" type=\"audio/mp3\"/\u003e\nYour browser does not support the audio element.\n\u003c/audio\u003e\u003c/p\u003e\u003cp\u003eThe most recent twist, again from December (December was \u003ca href=\"https://simonwillison.net/2024/Dec/20/december-in-llms-has-been-a-lot/\"\u003ea lot\u003c/a\u003e) is live video. ChatGPT voice mode now provides the option to share your camera feed with the model and talk about what you can see in real time. Google Gemini have \u003ca href=\"https://simonwillison.net/2024/Dec/11/gemini-2/#the-streaming-api-is-next-level\"\u003ea preview of the same feature\u003c/a\u003e, which they managed to ship the day before ChatGPT did.\u003c/p\u003e\n\u003clite-youtube videoid=\"mpgWH9KulUU\" title=\"Gemini 2.0 streaming demo\" playlabel=\"Play: Gemini 2.0 streaming demo\"\u003e\n\u003c/lite-youtube\u003e\n\u003cp\u003eThese abilities are just a few weeks old at this point, and I don’t think their impact has been fully felt yet. If you haven’t tried them out yet you really should.\u003c/p\u003e\n\u003cp\u003eBoth Gemini and OpenAI offer API access to these features as well. OpenAI started with \u003ca href=\"https://simonwillison.net/2024/Oct/2/not-digital-god/#gpt-4o-audio-via-the-new-websocket-realtime-api\"\u003ea WebSocket API\u003c/a\u003e that was quite challenging to use, but in December they announced \u003ca href=\"https://simonwillison.net/2024/Dec/17/openai-webrtc/\"\u003ea new WebRTC API\u003c/a\u003e which is much easier to get started with. Building a web app that a user can talk to via voice is \u003cem\u003eeasy\u003c/em\u003e now!\u003c/p\u003e\n\u003ch4 id=\"prompt-driven-app-generation-is-a-commodity-already\"\u003ePrompt driven app generation is a commodity already\u003c/h4\u003e\n\u003cp\u003eThis was possible with GPT-4 in 2023, but the value it provides became evident in 2024.\u003c/p\u003e\n\u003cp\u003eWe already knew LLMs were \u003ca href=\"https://simonwillison.net/2023/Dec/31/ai-in-2023/#code-best-application\"\u003espookily good at writing code\u003c/a\u003e. If you prompt them right, it turns out they can build you \u003cstrong\u003ea full interactive application\u003c/strong\u003e using HTML, CSS and JavaScript (and tools like React if you wire up some extra supporting build mechanisms)—often in a single prompt.\u003c/p\u003e\n\u003cp\u003eAnthropic kicked this idea into high gear when they released \u003cstrong\u003eClaude Artifacts\u003c/strong\u003e, a groundbreaking new fetaure that was initially slightly lost in the noise due to being described half way through \u003ca href=\"https://www.anthropic.com/news/claude-3-5-sonnet\"\u003etheir announcement of the incredible Claude 3.5 Sonnet\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eWith Artifacts, Claude can write you an on-demand interactive application and then \u003cem\u003elet you use it\u003c/em\u003e directly inside the Claude interface.\u003c/p\u003e\n\u003cp\u003eHere’s my \u003ca href=\"https://tools.simonwillison.net/extract-urls\"\u003eExtract URLs\u003c/a\u003e app, entirely \u003ca href=\"https://gist.github.com/simonw/0a7d0ddeb0fdd63a844669475778ca06\"\u003egenerated by Claude\u003c/a\u003e:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://static.simonwillison.net/static/2024/claude-artifacts/extract-urls.jpg\" alt=\"Extract URLs tool. Content pasted. URLs extracted. Shows a list of extracted URLs.\"/\u003e\u003c/p\u003e\n\u003cp\u003eI’ve found myself using this \u003cem\u003ea lot\u003c/em\u003e. I noticed how much I was relying on it in October and wrote \u003ca href=\"https://simonwillison.net/2024/Oct/21/claude-artifacts/\"\u003eEverything I built with Claude Artifacts this week\u003c/a\u003e, describing 14 little tools I had put together in a seven day period.\u003c/p\u003e\n\u003cp\u003eSince then, a whole bunch of other teams have built similar systems. GitHub announced their version of this—\u003ca href=\"https://simonwillison.net/2024/Oct/30/copilot-models/\"\u003eGitHub Spark\u003c/a\u003e—in October. Mistral Chat \u003ca href=\"https://mistral.ai/news/mistral-chat/\"\u003eadded it as a feature called Canvas\u003c/a\u003e in November.\u003c/p\u003e\n\u003cp\u003eSteve Krouse from Val Town \u003ca href=\"https://simonwillison.net/2024/Oct/31/cerebras-coder/\"\u003ebuilt a version of it against Cerebras\u003c/a\u003e, showcasing how a 2,000 token/second LLM can iterate on an application with changes visible in less than a second.\u003c/p\u003e\n\u003cp\u003eThen in December, the Chatbot Arena team introduced \u003ca href=\"https://simonwillison.net/2024/Dec/16/webdev-arena/\"\u003ea whole new leaderboard\u003c/a\u003e for this feature, driven by users building the same interactive app twice with two different models and voting on the answer. Hard to come up with a more convincing argument that this feature is now a commodity that can be effectively implemented against all of the leading models.\u003c/p\u003e\n\u003cp\u003eI’ve been tinkering with a version of this myself for my Datasette project, with the goal of letting users use prompts to build and iterate on custom widgets and data visualizations against their own data. I also figured out a similar pattern for \u003ca href=\"https://simonwillison.net/2024/Dec/19/one-shot-python-tools/\"\u003ewriting one-shot Python programs, enabled by uv\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis prompt-driven custom interface feature is so powerful and easy to build (once you’ve figured out the gnarly details of browser sandboxing) that I expect it to show up as a feature in a wide range of products in 2025.\u003c/p\u003e\n\u003ch4 id=\"universal-access-to-the-best-models-lasted-for-just-a-few-short-months\"\u003eUniversal access to the best models lasted for just a few short months\u003c/h4\u003e\n\u003cp\u003eFor a few short months this year all three of the best available models—GPT-4o, Claude 3.5 Sonnet and Gemini 1.5 Pro—were freely available to most of the world.\u003c/p\u003e\n\u003cp\u003eOpenAI made GPT-4o free for all users \u003ca href=\"https://openai.com/index/hello-gpt-4o/\"\u003ein May\u003c/a\u003e, and Claude 3.5 Sonnet was freely available from \u003ca href=\"https://www.anthropic.com/news/claude-3-5-sonnet\"\u003eits launch in June\u003c/a\u003e. This was a momentus change, because for the previous year free users had mostly been restricted to GPT-3.5 level models, meaning new users got a \u003cem\u003every\u003c/em\u003e inaccurate mental model of what a capable LLM could actually do.\u003c/p\u003e\n\u003cp\u003eThat era appears to have ended, likely permanently, with OpenAI’s launch of \u003ca href=\"https://openai.com/index/introducing-chatgpt-pro/\"\u003eChatGPT Pro\u003c/a\u003e. This $200/month subscription service is the only way to access their most capable model, o1 Pro.\u003c/p\u003e\n\u003cp\u003eSince the trick behind the o1 series (and the future models it will undoubtedly inspire) is to expend more compute time to get better results, I don’t think those days of free access to the best available models are likely to return.\u003c/p\u003e\n\u003ch4 id=\"-agents-still-haven-t-really-happened-yet\"\u003e“Agents” still haven’t really happened yet\u003c/h4\u003e\n\u003cp\u003eI find the term “agents” extremely frustrating. It lacks a single, clear and widely understood meaning... but the people who use the term never seem to acknowledge that.\u003c/p\u003e\n\u003cp\u003eIf you tell me that you are building “agents”, you’ve conveyed almost no information to me at all. Without reading your mind I have no way of telling which of the dozens of possible definitions you are talking about.\u003c/p\u003e\n\u003cp\u003eThe two main categories I see are people who think AI agents are obviously things that go and act on your behalf—the travel agent model—and people who think in terms of LLMs that have been given access to tools which they can run in a loop as part of solving a problem. The term “autonomy” is often thrown into the mix too, again without including a clear definition.\u003c/p\u003e\n\u003cp\u003e(I also \u003ca href=\"https://til.simonwillison.net/twitter/collecting-replies\"\u003ecollected 211 definitions\u003c/a\u003e on Twitter a few months ago—here they are \u003ca href=\"https://lite.datasette.io/?json=https://gist.github.com/simonw/bdc7b894eedcfd54f0a2422ea8feaa80#/data/raw\"\u003ein Datasette Lite\u003c/a\u003e—and had \u003ccode\u003egemini-exp-1206\u003c/code\u003e \u003ca href=\"https://gist.github.com/simonw/beaa5f90133b30724c5cc1c4008d0654\"\u003eattempt to summarize them\u003c/a\u003e.)\u003c/p\u003e\n\u003cp\u003eWhatever the term may mean, agents still have that feeling of perpetually “coming soon”.\u003c/p\u003e\n\u003cp\u003eTerminology aside, I remain skeptical as to their utility based, once again, on the challenge of \u003cstrong\u003egullibility\u003c/strong\u003e. LLMs believe anything you tell them. Any systems that attempts to make meaningful decisions on your behalf will run into the same roadblock: how good is a travel agent, or a digital assistant, or even a research tool if it can’t distinguish truth from fiction?\u003c/p\u003e\n\u003cp\u003eJust the other day Google Search was caught \u003ca href=\"https://simonwillison.net/2024/Dec/29/encanto-2/\"\u003eserving up an entirely fake description\u003c/a\u003e of the non-existant movie “Encanto 2”. It turned out to be summarizing an imagined movie listing from \u003ca href=\"https://ideas.fandom.com/wiki/Encanto_2:_A_New_Generation\"\u003ea fan fiction wiki\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://simonwillison.net/series/prompt-injection/\"\u003ePrompt injection\u003c/a\u003e is a natural consequence of this gulibility. I’ve seen precious little progress on tackling that problem in 2024, and we’ve been talking about it \u003ca href=\"https://simonwillison.net/2022/Sep/12/prompt-injection/\"\u003esince September 2022\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eI’m beginning to see the most popular idea of “agents” as dependent on AGI itself. A model that’s robust against gulliblity is a very tall order indeed.\u003c/p\u003e\n\u003ch4 id=\"evals-really-matter\"\u003eEvals really matter\u003c/h4\u003e\n\u003cp\u003eAnthropic’s \u003ca href=\"https://twitter.com/amandaaskell/status/1866207266761760812\"\u003eAmanda Askell\u003c/a\u003e (responsible for much of \u003ca href=\"https://simonwillison.net/2024/Jun/8/claudes-character/\"\u003ethe work behind Claude’s Character\u003c/a\u003e):\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe boring yet crucial secret behind good system prompts is test-driven development. You don’t write down a system prompt and find ways to test it. You write down tests and find a system prompt that passes them.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eIt’s become abundantly clear over the course of 2024 that writing good automated evals for LLM-powered systems is \u003cstrong\u003ethe skill\u003c/strong\u003e that’s most needed to build useful applications on top of these models. If you have a strong eval suite you can adopt new models faster, iterate better and build more reliable and useful product features than your competition.\u003c/p\u003e\n\u003cp\u003eVercel’s \u003ca href=\"https://twitter.com/cramforce/status/1860436022347075667\"\u003eMalte Ubl\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWhen \u003ca href=\"https://twitter.com/v0\"\u003e@v0\u003c/a\u003e first came out we were paranoid about protecting the prompt with all kinds of pre and post processing complexity.\u003c/p\u003e\n\u003cp\u003eWe completely pivoted to let it rip. A prompt without the evals, models, and especially UX is like getting a broken ASML machine without a manual\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eI’m \u003cem\u003estill\u003c/em\u003e trying to figure out the best patterns for doing this for my own work. Everyone knows that evals are important, but there remains a lack of great guidance for how to best implement them—I’m tracking this under my \u003ca href=\"https://simonwillison.net/tags/evals/\"\u003eevals tag\u003c/a\u003e. My \u003ca href=\"https://simonwillison.net/tags/pelican-riding-a-bicycle/\"\u003eSVG pelican riding a bicycle benchmark\u003c/a\u003e is a pale imitation of what a real eval suite should look like.\u003c/p\u003e\n\u003ch4 id=\"apple-intelligence-is-bad-apple-s-mlx-library-is-excellent\"\u003eApple Intelligence is bad, Apple’s MLX library is excellent\u003c/h4\u003e\n\u003cp\u003eAs a Mac user I’ve been feeling a lot better about my choice of platform this year.\u003c/p\u003e\n\u003cp\u003eLast year it felt like my lack of a Linux/Windows  machine with an NVIDIA GPU was a huge disadvantage in terms of trying out new models.\u003c/p\u003e\n\u003cp\u003eOn paper, a 64GB Mac should be a great machine for running models due to the way the CPU and GPU can share the same memory. In practice, many models are released as model weights and libraries that reward NVIDIA’s CUDA over other platforms.\u003c/p\u003e\n\u003cp\u003eThe \u003ca href=\"https://github.com/ggerganov/llama.cpp\"\u003ellama.cpp\u003c/a\u003e ecosystem helped a lot here, but the real breakthrough has been Apple’s \u003ca href=\"https://github.com/ml-explore/mlx\"\u003eMLX\u003c/a\u003e library, “an array framework for Apple Silicon”. It’s fantastic.\u003c/p\u003e\n\u003cp\u003eApple’s \u003ca href=\"https://github.com/ml-explore/mlx-examples/tree/main/llms\"\u003emlx-lm\u003c/a\u003e Python supports running a wide range of MLX-compatible models on my Mac, with excellent performance. \u003ca href=\"https://huggingface.co/mlx-community\"\u003emlx-community\u003c/a\u003e on Hugging Face offers more than 1,000 models that have been converted to the necessary format.\u003c/p\u003e\n\u003cp\u003ePrince Canuma’s excellent, fast moving \u003ca href=\"https://github.com/Blaizzy/mlx-vlm\"\u003emlx-vlm\u003c/a\u003e project brings vision LLMs to Apple Silicon as well. I used that recently \u003ca href=\"https://simonwillison.net/2024/Dec/24/qvq/#with-mlx-vlm\"\u003eto run Qwen’s QvQ\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eWhile MLX is a game changer, Apple’s own “Apple Intelligence” features have mostly been a dissapointment. I \u003ca href=\"https://simonwillison.net/2024/Jun/10/apple-intelligence/\"\u003ewrote about their initial announcement in June\u003c/a\u003e, and I was optimistic that Apple had focused hard on the subset of LLM applications that preserve user privacy and minimize the chance of users getting mislead by confusing features.\u003c/p\u003e\n\u003cp\u003eNow that those features are rolling out they’re pretty weak. As an LLM power-user I know what these models are capable of, and Apple’s LLM features offer a pale imitation of what a frontier LLM can do. Instead we’re getting notification summaries that \u003ca href=\"https://simonwillison.net/2024/Dec/14/bbc-complains-to-apple-over-misleading-shooting-headline/\"\u003emisrepresent news headlines\u003c/a\u003e and writing assistant tools that I’ve not found useful at all. Genmoji are \u003ca href=\"https://bsky.app/profile/simonwillison.net/post/3leceujwvcc2x\"\u003ekind of fun though\u003c/a\u003e.\u003c/p\u003e\n\u003ch4 id=\"the-rise-of-inference-scaling-reasoning-models\"\u003eThe rise of inference-scaling “reasoning” models\u003c/h4\u003e\n\u003cp\u003eThe most interesting development in the final quarter of 2024 was the introduction of a new shape of LLM, exemplified by OpenAI’s o1 models—initially released as o1-preview and o1-mini \u003ca href=\"https://simonwillison.net/2024/Sep/12/openai-o1/\"\u003eon September 12th\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eOne way to think about these models is an extension of the chain-of-thought prompting trick, first explored in the May 2022 paper \u003ca href=\"https://arxiv.org/abs/2205.11916\"\u003eLarge Language Models are Zero-Shot Reasoners\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis is that trick where, if you get a model to talk out loud about a problem it’s solving, you often get a result which the model would not have achieved otherwise.\u003c/p\u003e\n\u003cp\u003eo1 takes this process and further bakes it into the model itself. The details are somewhat obfuscated: o1 models spend “reasoning tokens” thinking through the problem that are not directly visible to the user (though the ChatGPT UI shows a summary of them), then outputs a final result.\u003c/p\u003e\n\u003cp\u003eThe biggest innovation here is that it opens up a new way to scale a model: instead of improving model performance purely through additional compute at training time, models can now take on harder problems by spending more compute on inference.\u003c/p\u003e\n\u003cp\u003eThe sequel to o1, o3 (they skipped “o2” for European trademark reasons) was announced \u003ca href=\"https://simonwillison.net/2024/Dec/20/live-blog-the-12th-day-of-openai/\"\u003eon 20th December\u003c/a\u003e with an impressive result against the \u003ca href=\"https://simonwillison.net/2024/Dec/20/openai-o3-breakthrough/\"\u003eARC-AGI benchmark\u003c/a\u003e, albeit one that likely involved more than $1,000,000 of compute time expense!\u003c/p\u003e\n\u003cp\u003eo3 is expected to ship in January. I doubt many people have real-world problems that would benefit from that level of compute expenditure—I certainly don’t!—but it appears to be a genuine next step in LLM architecture for taking on much harder problems.\u003c/p\u003e\n\u003cp\u003eOpenAI are not the only game in town here. Google released their first entrant in the category, \u003ccode\u003egemini-2.0-flash-thinking-exp\u003c/code\u003e, \u003ca href=\"https://simonwillison.net/2024/Dec/19/gemini-thinking-mode/\"\u003eon December 19th\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eAlibaba’s Qwen team \u003ca href=\"https://qwenlm.github.io/blog/qwq-32b-preview/\"\u003ereleased their QwQ model\u003c/a\u003e on November 28th—under an Apache 2.0 license, and that one \u003ca href=\"https://simonwillison.net/2024/Nov/27/qwq/\"\u003eI could run on my own machine\u003c/a\u003e. They followed that up with a vision reasoning model called QvQ \u003ca href=\"https://qwenlm.github.io/blog/qvq-72b-preview/\"\u003eon December 24th\u003c/a\u003e, which \u003ca href=\"https://simonwillison.net/2024/Dec/24/qvq/\"\u003eI also ran locally\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eDeepSeek made their \u003ca href=\"https://api-docs.deepseek.com/news/news1120\"\u003eDeepSeek-R1-Lite-Preview\u003c/a\u003e model available to try out through their chat interface \u003ca href=\"https://x.com/deepseek_ai/status/1859200141355536422\"\u003eon November 20th\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eTo understand more about inference scaling I recommend \u003ca href=\"https://www.aisnakeoil.com/p/is-ai-progress-slowing-down\"\u003eIs AI progress slowing down?\u003c/a\u003e by Arvind Narayanan and Sayash Kapoor.\u003c/p\u003e\n\u003cp\u003eNothing yet from Anthropic or Meta but I would be very surprised if they don’t have their own inference-scaling models in the works. Meta published a relevant paper \u003ca href=\"https://arxiv.org/abs/2412.06769\"\u003eTraining Large Language Models to Reason in a Continuous Latent Space\u003c/a\u003e in December.\u003c/p\u003e\n\u003ch4 id=\"was-the-best-currently-available-llm-trained-in-china-for-less-than-6m-\"\u003eWas the best currently available LLM trained in China for less than $6m?\u003c/h4\u003e\n\u003cp\u003eNot quite, but almost! It does make for a great attention-grabbing headline.\u003c/p\u003e\n\u003cp\u003eThe big news to end the year was the release \u003ca href=\"https://simonwillison.net/2024/Dec/25/deepseek-v3/\"\u003eof DeepSeek v3\u003c/a\u003e—dropped on Hugging Face on Christmas Day without so much as a README file, then followed by documentation and a paper \u003ca href=\"https://simonwillison.net/2024/Dec/26/deepseek-v3/\"\u003ethe day after that\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eDeepSeek v3 is a huge 685B parameter model—one of the largest openly licensed models currently available, significantly bigger than the largest of Meta’s Llama series, Llama 3.1 405B.\u003c/p\u003e\n\u003cp\u003eBenchmarks put it up there with Claude 3.5 Sonnet. Vibe benchmarks (aka the \u003ca href=\"https://lmarena.ai/?leaderboard\"\u003eChatbot Arena\u003c/a\u003e) currently rank it 7th, just behind the Gemini 2.0 and OpenAI 4o/o1 models. This is by far the highest ranking openly licensed model.\u003c/p\u003e\n\u003cp\u003eThe really impressive thing about DeepSeek v3 is the training cost. The model was trained on 2,788,000 H800 GPU hours at an estimated cost of $5,576,000. Llama 3.1 405B trained 30,840,000 GPU hours—11x that used by DeepSeek v3, for a model that benchmarks slightly worse.\u003c/p\u003e\n\u003cp\u003eThose \u003ca href=\"https://www.cnbc.com/2023/10/17/us-bans-export-of-more-ai-chips-including-nvidia-h800-to-china.html\"\u003eUS export regulations\u003c/a\u003e on GPUs to China seem to have inspired some \u003cem\u003every\u003c/em\u003e effective training optimizations!\u003c/p\u003e\n\u003ch4 id=\"the-environmental-impact-got-better\"\u003eThe environmental impact got better\u003c/h4\u003e\n\u003cp\u003eA welcome result of the increased efficiency of the models—both the hosted ones and the ones I can run locally—is that the energy usage and environmental impact of running a prompt has dropped enormously over the past couple of years.\u003c/p\u003e\n\u003cp\u003eOpenAI themselves are charging 100x less for a prompt compared to the GPT-3 days. I have it on good authority that neither Google Gemini nor Amazon Nova (two of the least expensive model providers) are running prompts at a loss.\u003c/p\u003e\n\u003cp\u003eI think this means that, as individual users, we don’t need to feel any guilt at all for the energy consumed by the vast majority of our prompts. The impact is likely neglible compared to driving a car down the street or maybe even watching a video on YouTube.\u003c/p\u003e\n\u003cp\u003eLikewise, training. DeepSeek v3 training for less than $6m is a fantastic sign that training costs can and should continue to drop.\u003c/p\u003e\n\u003cp\u003eFor less efficient models I find it useful to compare their energy usage to commercial flights. The largest Llama 3 model cost about the same as a single digit number of fully loaded passenger flights from New York to London. That’s certainly not nothing, but once trained that model can be used by millions of people at no extra training cost.\u003c/p\u003e\n\u003ch4 id=\"the-environmental-impact-got-much-much-worse\"\u003eThe environmental impact got much, much worse\u003c/h4\u003e\n\u003cp\u003eThe much bigger problem here is the enormous competitive buildout of the infrastructure that is imagined to be necessary for these models in the future.\u003c/p\u003e\n\u003cp\u003eCompanies like Google, Meta, Microsoft and Amazon are all spending billions of dollars rolling out new datacenters, with a very material impact \u003ca href=\"https://www.bloomberg.com/graphics/2024-ai-power-home-appliances/\"\u003eon the electricity grid\u003c/a\u003e and the environment. There’s even talk of \u003ca href=\"https://www.nytimes.com/2024/10/16/business/energy-environment/amazon-google-microsoft-nuclear-energy.html\"\u003espinning up new nuclear power stations\u003c/a\u003e, but those can take decades.\u003c/p\u003e\n\u003cp\u003eIs this infrastructure necessary? DeepSeek v3’s $6m training cost and the continued crash in LLM prices might hint that it’s not. But would you want to be the big tech executive that argued NOT to build out this infrastructure only to be proven wrong in a few years’ time?\u003c/p\u003e\n\u003cp\u003eAn interesting point of comparison here could be the way railways rolled out around the world in the 1800s. Constructing these required enormous investments and had a massive environmental impact, and many of the lines that were built turned out to be unnecessary—sometimes multiple lines from different companies serving the exact same routes!\u003c/p\u003e\n\u003cp\u003eThe resulting bubbles contributed to several financial crashes, see Wikipedia for \u003ca href=\"https://en.wikipedia.org/wiki/Panic_of_1873\"\u003ePanic of 1873\u003c/a\u003e, \u003ca href=\"https://en.wikipedia.org/wiki/Panic_of_1893\"\u003ePanic of 1893\u003c/a\u003e, \u003ca href=\"https://en.wikipedia.org/wiki/Panic_of_1901\"\u003ePanic of 1901\u003c/a\u003e and the UK’s \u003ca href=\"https://en.wikipedia.org/wiki/Railway_Mania\"\u003eRailway Mania\u003c/a\u003e. They left us with a lot of useful infrastructure and a great deal of bankruptcies and environmental damage.\u003c/p\u003e\n\u003ch4 id=\"the-year-of-slop\"\u003eThe year of slop\u003c/h4\u003e\n\u003cp\u003e2024 was the year that the word \u0026#34;\u003ca href=\"https://simonwillison.net/tags/slop/\"\u003eslop\u003c/a\u003e\u0026#34; became a term of art. I wrote about this \u003ca href=\"https://simonwillison.net/2024/May/8/slop/\"\u003ein May\u003c/a\u003e, expanding on this tweet by \u003ca href=\"https://twitter.com/deepfates/status/1787472784106639418\"\u003e@deepfates\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWatching in real time as “slop” becomes a term of art. the way that “spam” became the term for unwanted emails, “slop” is going in the dictionary as the term for unwanted AI generated content\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eI expanded that definition a tiny bit to this:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eSlop\u003c/strong\u003e describes AI-generated content that is both \u003cem\u003eunrequested\u003c/em\u003e and \u003cem\u003eunreviewed\u003c/em\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eI ended up getting quoted talking about slop in both \u003ca href=\"https://www.theguardian.com/technology/article/2024/may/19/spam-junk-slop-the-latest-wave-of-ai-behind-the-zombie-internet\"\u003ethe Guardian\u003c/a\u003e and \u003ca href=\"https://www.nytimes.com/2024/06/11/style/ai-search-slop.html\"\u003ethe NY Times\u003c/a\u003e. Here’s what I said in the NY TImes:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSociety needs concise ways to talk about modern A.I. — both the positives and the negatives. ‘Ignore that email, it’s spam,’ and ‘Ignore that article, it’s slop,’ are both useful lessons.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eI love the term “slop” because it so succinctly captures one of the ways we should \u003cstrong\u003enot\u003c/strong\u003e be using generative AI!\u003c/p\u003e\n\u003cp\u003eSlop was even in the running for \u003ca href=\"https://corp.oup.com/news/voting-opens-for-oxford-word-of-the-year-2024/\"\u003eOxford Word of the Year 2024\u003c/a\u003e, but it lost \u003ca href=\"https://corp.oup.com/news/brain-rot-named-oxford-word-of-the-year-2024/\"\u003eto brain rot\u003c/a\u003e.\u003c/p\u003e\n\u003ch4 id=\"synthetic-training-data-works-great\"\u003eSynthetic training data works great\u003c/h4\u003e\n\u003cp\u003eAn idea that surprisingly seems to have stuck in the public consciousness is that of “model collapse”. This was first described in the paper \u003ca href=\"https://arxiv.org/abs/2305.17493\"\u003eThe Curse of Recursion: Training on Generated Data Makes Models Forget\u003c/a\u003e in May 2023, and repeated in Nature in July 2024 with the more eye-catching headline \u003ca href=\"https://www.nature.com/articles/s41586-024-07566-y\"\u003eAI models collapse when trained on recursively generated data\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe idea is seductive: as the internet floods with AI-generated slop the models themselves will degenerate, feeding on their own output in a way that leads to their inevitable demise!\u003c/p\u003e\n\u003cp\u003eThat’s clearly not happening. Instead, we are seeing AI labs increasingly train on \u003cem\u003esynthetic content\u003c/em\u003e—deliberately creating artificial data to help steer their models in the right way.\u003c/p\u003e\n\u003cp\u003eOne of the best descriptions I’ve seen of this comes from \u003ca href=\"https://simonwillison.net/2024/Dec/15/phi-4-technical-report/\"\u003ethe Phi-4 technical report\u003c/a\u003e, which included this:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSynthetic data as a substantial component of pretraining is becoming increasingly common, and the Phi series of models has consistently emphasized the importance of synthetic data. Rather than serving as a cheap substitute for organic data, synthetic data has several direct advantages over organic data.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eStructured and Gradual Learning\u003c/strong\u003e. In organic datasets, the relationship between tokens is often complex and indirect. Many reasoning steps may be required to connect the current token to the next, making it challenging for the model to learn effectively from next-token prediction. By contrast, each token generated by a language model is by definition predicted by the preceding tokens, making it easier for a model to follow the resulting reasoning patterns.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eAnother common technique is to use larger models to help create training data for their smaller, cheaper alternatives—a trick used by an increasing number of labs. DeepSeek v3 used “reasoning” data created by DeepSeek-R1. Meta’s Llama 3.3 70B fine-tuning used \u003ca href=\"https://github.com/meta-llama/llama-models/blob/main/models/llama3_3/MODEL_CARD.md#training-data\"\u003eover 25M synthetically generated examples\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eCareful design of the training data that goes into an LLM appears to be the \u003cem\u003eentire game\u003c/em\u003e for creating these models. The days of just grabbing a full scrape of the web and indiscriminately dumping it into a training run are long gone.\u003c/p\u003e\n\u003ch4 id=\"llms-somehow-got-even-harder-to-use\"\u003eLLMs somehow got even harder to use\u003c/h4\u003e\n\u003cp\u003eA drum I’ve been banging for a while is that LLMs are power-user tools—they’re chainsaws disguised as kitchen knives. They look deceptively simple to use—how hard can it be to type messages to a chatbot?—but in reality you need a huge depth of both understanding and experience to make the most of them and avoid their many pitfalls.\u003c/p\u003e\n\u003cp\u003eIf anything, this problem got worse in 2024.\u003c/p\u003e\n\u003cp\u003eWe’ve built computer systems you can talk to in human language, that will answer your questions and \u003cem\u003eusually\u003c/em\u003e get them right! ... depending on the question, and how you ask it, and whether it’s accurately reflected in the undocumented and secret training set.\u003c/p\u003e\n\u003cp\u003eThe number of available systems has exploded. Different systems have different tools they can apply to your problems—like Python and JavaScript and web search and image generation and maybe even database lookups... so you’d better understand what those tools are, what they can do and how to tell if the LLM used them or not.\u003c/p\u003e\n\u003cp\u003eDid you know ChatGPT has \u003ca href=\"https://simonwillison.net/2024/Dec/10/chatgpt-canvas/#what-this-all-means\"\u003etwo entirely different ways\u003c/a\u003e of running Python now?\u003c/p\u003e\n\u003cp\u003eWant to build a Claude Artifact that talks to an external API? You’d better understand CSP and CORS HTTP headers first.\u003c/p\u003e\n\u003cp\u003eThe models may have got more capable, but most of the limitations remained the same. OpenAI’s o1 may finally be able to (mostly) count the Rs in strawberry, but its abilities are still limited by its nature as an LLM and the constraints placed on it by the harness it’s running in. o1 can’t run web searches or use Code Interpreter, but GPT-4o can—both in that same ChatGPT UI. (o1 \u003ca href=\"https://chatgpt.com/share/677420e4-8854-8006-8940-9bc30b708821\"\u003ewill pretend to do those things\u003c/a\u003e if you ask it to, a regression to the \u003ca href=\"https://simonwillison.net/2023/Mar/10/chatgpt-internet-access/\"\u003eURL hallucinations bug from early 2023\u003c/a\u003e).\u003c/p\u003e\n\u003cp\u003eWhat are we doing about this? Not much. Most users are thrown in at the deep end. The default LLM chat UI is like taking brand new computer users, dropping them into a Linux terminal and expecting them to figure it all out.\u003c/p\u003e\n\u003cp\u003eMeanwhile, it’s increasingly common for end users to develop wildly inaccurate mental models of how these things work and what they are capable of. I’ve seen so many examples of people trying to win an argument with a screenshot from ChatGPT—an inherently ludicrous proposition, given the inherent unreliability of these models crossed with the fact that you can get them to say anything if you prompt them right.\u003c/p\u003e\n\u003cp\u003eThere’s a flipside to this too: a lot of better informed people have sworn off LLMs entirely because they can’t see how anyone could benefit from a tool with so many flaws. The key skill in getting the most out of LLMs is learning to work with tech that is both inherently unreliable and incredibly powerful at the same time. This is a decidedly non-obvious skill to acquire!\u003c/p\u003e\n\u003cp\u003eThere is \u003cem\u003eso much space\u003c/em\u003e for helpful education content here, but we need to do do a lot better than outsourcing it all to AI grifters with bombastic Twitter threads.\u003c/p\u003e\n\u003ch4 id=\"knowledge-is-incredibly-unevenly-distributed\"\u003eKnowledge is incredibly unevenly distributed\u003c/h4\u003e\n\u003cp\u003eMost people have heard of ChatGPT by now. How many have heard of Claude?\u003c/p\u003e\n\u003cp\u003eThe knowledge gap between the people who actively follow this stuff and the 99% of the population who do not is \u003cem\u003evast\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eThe pace of change doesn’t help either. In just the past month we’ve seen general availability of live interfaces where you can \u003cem\u003epoint your phone’s camera\u003c/em\u003e at something and \u003cem\u003etalk about it with your voice\u003c/em\u003e... and optionally have it \u003ca href=\"https://help.openai.com/en/articles/10139238-santa-s-voice-in-chatgpt\"\u003epretend to be Santa\u003c/a\u003e. Most self-certified nerds haven’t even tried that yet.\u003c/p\u003e\n\u003cp\u003eGiven the ongoing (and potential) impact on society that this technology has, I don’t think the size of this gap is healthy. I’d like to see a lot more effort put into improving this.\u003c/p\u003e\n\u003ch4 id=\"llms-need-better-criticism\"\u003eLLMs need better criticism\u003c/h4\u003e\n\u003cp\u003eA lot of people \u003cem\u003eabsolutely hate\u003c/em\u003e this stuff. In some of the spaces I hang out (\u003ca href=\"https://fedi.simonwillison.net/@simon\"\u003eMastodon\u003c/a\u003e, \u003ca href=\"https://bsky.app/profile/simonwillison.net\"\u003eBluesky\u003c/a\u003e, \u003ca href=\"https://lobste.rs/\"\u003eLobste.rs\u003c/a\u003e, even \u003ca href=\"https://news.ycombinator.com/\"\u003eHacker News\u003c/a\u003e on occasion) even suggesting that “LLMs are useful” can be enough to kick off a huge fight.\u003c/p\u003e\n\u003cp\u003eI get it. There are plenty of reasons to dislike this technology—the environmental impact, the (lack of) ethics of the training data, the lack of reliability, the negative applications, the potential impact on people’s jobs.\u003c/p\u003e\n\u003cp\u003eLLMs absolutely warrant criticism. We need to be talking through these problems, finding ways to mitigate them and helping people learn how to use these tools responsibly in ways where the positive applications outweigh the negative.\u003c/p\u003e\n\u003cp\u003eI \u003cem\u003elike\u003c/em\u003e people who are skeptical of this stuff. The hype has been deafening for more than two years now, and there are enormous quantities of snake oil and misinformation out there. A lot of \u003cem\u003every bad\u003c/em\u003e decisions are being made based on that hype. Being critical is a virtue.\u003c/p\u003e\n\u003cp\u003eIf we want people with decision-making authority to make \u003cem\u003egood decisions\u003c/em\u003e about how to apply these tools we first need to acknowledge that there ARE good applications, and then help explain how to put those into practice while avoiding the many unintiutive traps.\u003c/p\u003e\n\u003cp\u003e(If you still don’t think there are any good applications at all I’m not sure why you made it to this point in the article!)\u003c/p\u003e\n\u003cp\u003eI think telling people that this whole field is environmentally catastrophic plagiarism machines that constantly make things up is doing those people a disservice, no matter how much truth that represents. There is genuine value to be had here, but getting to that value is unintuitive and needs guidance.\u003c/p\u003e\n\u003cp\u003eThose of us who understand this stuff have a duty to help everyone else figure it out.\u003c/p\u003e\n\u003ch4 id=\"everything-tagged-llms-on-my-blog-in-2024\"\u003eEverything tagged “llms” on my blog in 2024\u003c/h4\u003e\n\u003cp\u003eBecause I undoubtedly missed a whole bunch of things, here’s every long-form post I wrote in 2024 that I tagged with \u003ca href=\"https://simonwillison.net/tags/llms/\"\u003ellms\u003c/a\u003e:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eJanuary\n\u003cul\u003e\n\u003cli\u003e7th: \u003ca href=\"https://simonwillison.net/2024/Jan/7/call-it-ai/\"\u003eIt’s OK to call it Artificial Intelligence\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e9th: \u003ca href=\"https://simonwillison.net/2024/Jan/9/what-i-should-have-said-about-ai/\"\u003eWhat I should have said about the term Artificial Intelligence\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e17th: \u003ca href=\"https://simonwillison.net/2024/Jan/17/oxide-and-friends/\"\u003eTalking about Open Source LLMs on Oxide and Friends\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e26th: \u003ca href=\"https://simonwillison.net/2024/Jan/26/llm/\"\u003eLLM 0.13: The annotated release notes\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eFebruary\n\u003cul\u003e\n\u003cli\u003e21st: \u003ca href=\"https://simonwillison.net/2024/Feb/21/gemini-pro-video/\"\u003eThe killer app of Gemini Pro 1.5 is video\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eMarch\n\u003cul\u003e\n\u003cli\u003e5th: \u003ca href=\"https://simonwillison.net/2024/Mar/5/prompt-injection-jailbreaking/\"\u003ePrompt injection and jailbreaking are not the same thing\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e8th: \u003ca href=\"https://simonwillison.net/2024/Mar/8/gpt-4-barrier/\"\u003eThe GPT-4 barrier has finally been broken\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e22nd: \u003ca href=\"https://simonwillison.net/2024/Mar/22/claude-and-chatgpt-case-study/\"\u003eClaude and ChatGPT for ad-hoc sidequests\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e23rd: \u003ca href=\"https://simonwillison.net/2024/Mar/23/building-c-extensions-for-sqlite-with-chatgpt-code-interpreter/\"\u003eBuilding and testing C extensions for SQLite with ChatGPT Code Interpreter\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e26th: \u003ca href=\"https://simonwillison.net/2024/Mar/26/llm-cmd/\"\u003ellm cmd undo last git commit—a new plugin for LLM\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eApril\n\u003cul\u003e\n\u003cli\u003e8th: \u003ca href=\"https://simonwillison.net/2024/Apr/8/files-to-prompt/\"\u003eBuilding files-to-prompt entirely using Claude 3 Opus\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e10th: \u003ca href=\"https://simonwillison.net/2024/Apr/10/weeknotes-llm-releases/\"\u003eThree major LLM releases in 24 hours (plus weeknotes)\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e17th: \u003ca href=\"https://simonwillison.net/2024/Apr/17/ai-for-data-journalism/\"\u003eAI for Data Journalism: demonstrating what we can do with this stuff right now\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e22nd: \u003ca href=\"https://simonwillison.net/2024/Apr/22/llama-3/\"\u003eOptions for accessing Llama 3 from the terminal using LLM\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eMay\n\u003cul\u003e\n\u003cli\u003e8th: \u003ca href=\"https://simonwillison.net/2024/May/8/slop/\"\u003eSlop is the new name for unwanted AI-generated content\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e15th: \u003ca href=\"https://simonwillison.net/2024/May/15/chatgpt-in-4o-mode/\"\u003eChatGPT in “4o” mode is not running the new features yet\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e29th: \u003ca href=\"https://simonwillison.net/2024/May/29/training-not-chatting/\"\u003eTraining is not the same as chatting: ChatGPT and other LLMs don’t remember everything you say\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eJune\n\u003cul\u003e\n\u003cli\u003e6th: \u003ca href=\"https://simonwillison.net/2024/Jun/6/accidental-prompt-injection/\"\u003eAccidental prompt injection against RAG applications\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e10th: \u003ca href=\"https://simonwillison.net/2024/Jun/10/apple-intelligence/\"\u003eThoughts on the WWDC 2024 keynote on Apple Intelligence\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e17th: \u003ca href=\"https://simonwillison.net/2024/Jun/17/cli-language-models/\"\u003eLanguage models on the command-line\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e21st: \u003ca href=\"https://simonwillison.net/2024/Jun/21/search-based-rag/\"\u003eBuilding search-based RAG using Claude, Datasette and Val Town\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e27th: \u003ca href=\"https://simonwillison.net/2024/Jun/27/ai-worlds-fair/\"\u003eOpen challenges for AI engineering\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eJuly\n\u003cul\u003e\n\u003cli\u003e14th: \u003ca href=\"https://simonwillison.net/2024/Jul/14/pycon/\"\u003eImitation Intelligence, my keynote for PyCon US 2024\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e19th: \u003ca href=\"https://simonwillison.net/2024/Jul/19/weeknotes/\"\u003eWeeknotes: GPT-4o mini, LLM 0.15, sqlite-utils 3.37 and building a staging environment\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAugust\n\u003cul\u003e\n\u003cli\u003e6th: \u003ca href=\"https://simonwillison.net/2024/Aug/6/staging/\"\u003eWeeknotes: a staging environment, a Datasette alpha and a bunch of new LLMs\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e8th: \u003ca href=\"https://simonwillison.net/2024/Aug/8/django-http-debug/\"\u003edjango-http-debug, a new Django app mostly written by Claude\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e23rd: \u003ca href=\"https://simonwillison.net/2024/Aug/23/anthropic-dangerous-direct-browser-access/\"\u003eClaude’s API now supports CORS requests, enabling client-side applications\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e26th: \u003ca href=\"https://simonwillison.net/2024/Aug/26/gemini-bounding-box-visualization/\"\u003eBuilding a tool showing how Gemini Pro can return bounding boxes for objects in images\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSeptember\n\u003cul\u003e\n\u003cli\u003e6th: \u003ca href=\"https://simonwillison.net/2024/Sep/6/weeknotes/\"\u003eCalling LLMs from client-side JavaScript, converting PDFs to HTML + weeknotes\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e10th: \u003ca href=\"https://simonwillison.net/2024/Sep/10/software-misadventures/\"\u003eNotes from my appearance on the Software Misadventures Podcast\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e12th: \u003ca href=\"https://simonwillison.net/2024/Sep/12/openai-o1/\"\u003eNotes on OpenAI’s new o1 chain-of-thought models\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e20th: \u003ca href=\"https://simonwillison.net/2024/Sep/20/using-llms-for-code/\"\u003eNotes on using LLMs for code\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e29th: \u003ca href=\"https://simonwillison.net/2024/Sep/29/notebooklm-audio-overview/\"\u003eNotebookLM’s automatically generated podcasts are surprisingly effective\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e30th: \u003ca href=\"https://simonwillison.net/2024/Sep/30/weeknotes/\"\u003eWeeknotes: Three podcasts, two trips and a new plugin system\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eOctober\n\u003cul\u003e\n\u003cli\u003e1st: \u003ca href=\"https://simonwillison.net/2024/Oct/1/openai-devday-2024-live-blog/\"\u003eOpenAI DevDay 2024 live blog\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e2nd: \u003ca href=\"https://simonwillison.net/2024/Oct/2/not-digital-god/\"\u003eOpenAI DevDay: Let’s build developer tools, not digital God\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e15th: \u003ca href=\"https://simonwillison.net/2024/Oct/15/chatgpt-horoscopes/\"\u003eChatGPT will happily write you a thinly disguised horoscope\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e17th: \u003ca href=\"https://simonwillison.net/2024/Oct/17/video-scraping/\"\u003eVideo scraping: extracting JSON data from a 35 second screen capture for less than 1/10th of a cent\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e18th: \u003ca href=\"https://simonwillison.net/2024/Oct/18/openai-audio/\"\u003eExperimenting with audio input and output for the OpenAI Chat Completion API\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e19th: \u003ca href=\"https://simonwillison.net/2024/Oct/19/mistralrs/\"\u003eRunning Llama 3.2 Vision and Phi-3.5 Vision on a Mac with mistral.rs\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e21st: \u003ca href=\"https://simonwillison.net/2024/Oct/21/claude-artifacts/\"\u003eEverything I built with Claude Artifacts this week\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e22nd: \u003ca href=\"https://simonwillison.net/2024/Oct/22/computer-use/\"\u003eInitial explorations of Anthropic’s new Computer Use capability\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e24th: \u003ca href=\"https://simonwillison.net/2024/Oct/24/claude-analysis-tool/\"\u003eNotes on the new Claude analysis JavaScript code execution tool\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e27th: \u003ca href=\"https://simonwillison.net/2024/Oct/27/llm-jq/\"\u003eRun a prompt to generate and execute jq programs using llm-jq\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e29th: \u003ca href=\"https://simonwillison.net/2024/Oct/29/llm-multi-modal/\"\u003eYou can now run prompts against images, audio and video in your terminal using LLM\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e30th: \u003ca href=\"https://simonwillison.net/2024/Oct/30/monthnotes/\"\u003eW̶e̶e̶k̶n̶o̶t̶e̶s̶  Monthnotes for October\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eNovember\n\u003cul\u003e\n\u003cli\u003e4th: \u003ca href=\"https://simonwillison.net/2024/Nov/4/haiku/\"\u003eClaude 3.5 Haiku\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e7th: \u003ca href=\"https://simonwillison.net/2024/Nov/7/project-verdad/\"\u003eProject: VERDAD—tracking misinformation in radio broadcasts using Gemini 1.5\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e12th: \u003ca href=\"https://simonwillison.net/2024/Nov/12/qwen25-coder/\"\u003eQwen2.5-Coder-32B is an LLM that can code well that runs on my Mac\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e19th: \u003ca href=\"https://simonwillison.net/2024/Nov/19/notes-from-bing-chat/\"\u003eNotes from Bing Chat—Our First Encounter With Manipulative AI\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e25th: \u003ca href=\"https://simonwillison.net/2024/Nov/25/ask-questions-of-sqlite/\"\u003eAsk questions of SQLite databases and CSV/JSON files in your terminal\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDecember\n\u003cul\u003e\n\u003cli\u003e4th: \u003ca href=\"https://simonwillison.net/2024/Dec/4/amazon-nova/\"\u003eFirst impressions of the new Amazon Nova LLMs (via a new llm-bedrock plugin)\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e7th: \u003ca href=\"https://simonwillison.net/2024/Dec/7/prompts-js/\"\u003ePrompts.js\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e9th: \u003ca href=\"https://simonwillison.net/2024/Dec/9/llama-33-70b/\"\u003eI can now run a GPT-4 class model on my laptop\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e10th: \u003ca href=\"https://simonwillison.net/2024/Dec/10/chatgpt-canvas/\"\u003eChatGPT Canvas can make API requests now, but it’s complicated\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e11th: \u003ca href=\"https://simonwillison.net/2024/Dec/11/gemini-2/\"\u003eGemini 2.0 Flash: An outstanding multi-modal LLM with a sci-fi streaming mode\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e19th: \u003ca href=\"https://simonwillison.net/2024/Dec/19/one-shot-python-tools/\"\u003eBuilding Python tools with a one-shot prompt using uv run and Claude Projects\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e19th: \u003ca href=\"https://simonwillison.net/2024/Dec/19/gemini-thinking-mode/\"\u003eGemini 2.0 Flash “Thinking mode”\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e20th: \u003ca href=\"https://simonwillison.net/2024/Dec/20/december-in-llms-has-been-a-lot/\"\u003eDecember in LLMs has been a lot\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e20th: \u003ca href=\"https://simonwillison.net/2024/Dec/20/live-blog-the-12th-day-of-openai/\"\u003eLive blog: the 12th day of OpenAI—“Early evals for OpenAI o3”\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e24th: \u003ca href=\"https://simonwillison.net/2024/Dec/24/qvq/\"\u003eTrying out QvQ—Qwen’s new visual reasoning model\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e31st: \u003ca href=\"https://simonwillison.net/2024/Dec/31/llms-in-2024/\"\u003eThings we learned about LLMs in 2024\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e(This list generated \u003ca href=\"https://simonwillison.net/dashboard/llm-posts-in-2024/\"\u003eusing Django SQL Dashboard\u003c/a\u003e with a SQL query \u003ca href=\"https://gist.github.com/simonw/89c358ac3617b38afc41c79c995a4ebe\"\u003ewritten for me by Claude\u003c/a\u003e.)\u003c/p\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "42 min read",
  "publishedTime": null,
  "modifiedTime": null
}
