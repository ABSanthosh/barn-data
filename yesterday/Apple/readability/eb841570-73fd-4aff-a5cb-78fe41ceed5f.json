{
  "id": "eb841570-73fd-4aff-a5cb-78fe41ceed5f",
  "title": "Is Electron Really That Bad?",
  "link": "https://www.macstories.net/linked/is-electron-really-that-bad/",
  "description": "I’ve been thinking about this video by Theo Browne for the past few days, especially in the aftermath of my story about working on the iPad and realizing its best apps are actually web apps. I think Theo did a great job contextualizing the history of Electron and how we got to this point where […]",
  "author": "Federico Viticci",
  "published": "Fri, 04 Apr 2025 16:04:40 +0000",
  "source": "https://www.macstories.net/feed",
  "categories": [
    "Linked",
    "developer tools",
    "developers",
    "mac"
  ],
  "byline": "",
  "length": 3629,
  "excerpt": "https://www.youtube.com/watch?v=WdmfFmwsGDo I’ve been thinking about this video by Theo Browne for the past few days, especially in the aftermath of my story about working on the iPad and realizing its best apps are actually web apps. I think Theo did a great job contextualizing the history of Electron and how we got to this point",
  "siteName": "",
  "favicon": "https://www.macstories.net/app/themes/macstories4/images/apple-touch-icon-152x152-precomposed.png",
  "text": "I’ve been thinking about this video by Theo Browne for the past few days, especially in the aftermath of my story about working on the iPad and realizing its best apps are actually web apps. I think Theo did a great job contextualizing the history of Electron and how we got to this point where the majority of desktop apps are built with it. There are two sections of the video that stood out to me and I want to highlight here. First, this observation – which I strongly agree with – regarding the desktop apps we ended up having thanks to Electron and why we often consider them “buggy”: There wouldn’t be a ChatGPT desktop app if we didn’t have something like Electron. There wouldn’t be a good Spotify player if we didn’t have something like Electron. There wouldn’t be all of these awesome things we use every day. All these apps… Notion could never have existed without Electron. VS Code and now Cursor could never have existed without Electron. Discord absolutely could never have existed without Electron. All of these apps are able to exist and be multi-platform and ship and theoretically build greater and greater software as a result of using this technology. That has resulted in some painful side effects, like the companies growing way faster than expected because they can be adopted so easily. So they hire a bunch of engineers who don’t know what they’re doing, and the software falls apart. But if they had somehow magically found a way to do that natively, it would have happened the same exact way. This has nothing to do with Electron causing the software to be bad and everything to do with the software being so successful that the companies hire too aggressively and then kill their own software in the process. The second section of the video I want to call out is the part where Theo links to an old thread from the developer of BoltAI, a native SwiftUI app for Mac that went through multiple updates – and a lot of work on the developer’s part – to ensure the app wouldn’t hit 100% CPU usage when simply loading a conversation with ChatGPT. As documented in the thread from late 2023, this is a common issue for the majority of AI clients built with SwiftUI, which is often less efficient than Electron when it comes to rendering real-time chat messages. Ironic. Theo argues: You guys need to understand something. You are not better at rendering text than the Chromium team is. These people have spent decades making the world’s fastest method for rendering documents across platforms because the goal was to make Chrome as fast as possible regardless of what machine you’re using it on. Electron is cool because we can build on top of all of the efforts that they put in to make Electron and specifically to make Chromium as effective as it is. The results are effective. The fact that you can swap out the native layer with SwiftUI with even just a web view, which is like Electron but worse, and the performance is this much better, is hilarious. Also notice there’s a couple more Electron apps he has open here, including Spotify, which is only using less than 3% of his CPU. Electron apps don’t have to be slow. In fact, a lot of the time, a well-written Electron app is actually going to perform better than an equivalently well-written native app because you don’t get to build rendering as effectively as Google does. Even if you think you made up your mind about Electron years ago, I suggest watching the entire video and considering whether this crusade against more accessible, more frequently updated (and often more performant) desktop software still makes sense in 2025.",
  "image": "https://56243e3f6f46fe44a301-deabeb5f3878e3553d0b065ea974f9bf.ssl.cf1.rackcdn.com/256px.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003carticle id=\"content\"\u003e\n\n    \n\n    \u003cdiv\u003e\n                        \u003cp\u003e\u003cspan\u003e\u003ciframe type=\"text/html\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/WdmfFmwsGDo?version=3\u0026amp;rel=1\u0026amp;fs=1\u0026amp;autohide=2\u0026amp;showsearch=0\u0026amp;showinfo=1\u0026amp;iv_load_policy=1\u0026amp;wmode=transparent\" allowfullscreen=\"true\"\u003e\u003c/iframe\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp id=\"p2\"\u003eI’ve been thinking about \u003ca href=\"https://www.youtube.com/watch?v=WdmfFmwsGDo\" rel=\"noopener noreferrer\"\u003ethis video by Theo Browne\u003c/a\u003e for the past few days, especially in the aftermath of \u003ca href=\"https://www.macstories.net/stories/the-ipads-sweet-solution/\" rel=\"noopener noreferrer\"\u003emy story about working on the iPad\u003c/a\u003e and realizing its best apps are actually web apps.\u003c/p\u003e\n\u003cp id=\"p3\"\u003eI think Theo did a great job contextualizing the history of \u003ca href=\"https://www.electronjs.org/\" rel=\"noopener noreferrer\"\u003eElectron\u003c/a\u003e and how we got to this point where the majority of desktop apps are built with it. There are two sections of the video that stood out to me and I want to highlight here. First, this observation – which I strongly agree with – regarding the desktop apps we ended up having \u003cem\u003ethanks\u003c/em\u003e to Electron and why we often consider them “buggy”:\u003c/p\u003e\n\u003cblockquote id=\"blockquote4\"\u003e\u003cp\u003e\n  There wouldn’t be a ChatGPT desktop app if we didn’t have something like Electron. There wouldn’t be a good Spotify player if we didn’t have something like Electron. There wouldn’t be all of these awesome things we use every day. All these apps… Notion could never have existed without Electron. VS Code and now Cursor could never have existed without Electron. Discord absolutely could never have existed without Electron.\u003c/p\u003e\n\u003cp\u003e  All of these apps are able to exist and be multi-platform and ship and theoretically build greater and greater software as a result of using this technology. That has resulted in some painful side effects, like the companies growing way faster than expected because they can be adopted so easily. So they hire a bunch of engineers who don’t know what they’re doing, and the software falls apart. But if they had somehow magically found a way to do that natively, it would have happened the same exact way.\u003c/p\u003e\n\u003cp\u003e  This has nothing to do with Electron causing the software to be bad and everything to do with the software being so successful that the companies hire too aggressively and then kill their own software in the process.\n\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp id=\"p5\"\u003eThe second section of the video I want to call out is the part where Theo \u003ca href=\"https://x.com/daniel_nguyenx/status/1734495508746702936\" rel=\"noopener noreferrer\"\u003elinks to an old thread\u003c/a\u003e from the developer of \u003ca href=\"https://boltai.com/\" rel=\"noopener noreferrer\"\u003eBoltAI\u003c/a\u003e, a native SwiftUI app for Mac that went through multiple updates – and a lot of work on the developer’s part – to ensure the app wouldn’t hit 100% CPU usage when simply loading a conversation with ChatGPT. As documented in the thread from late 2023, this is a common issue for the majority of AI clients built with SwiftUI, which is often less efficient than Electron when it comes to rendering real-time chat messages. Ironic.\u003c/p\u003e\n\u003cp id=\"p6\"\u003eTheo argues:\u003c/p\u003e\n\u003cblockquote id=\"blockquote7\"\u003e\u003cp\u003e\n  You guys need to understand something. You are not better at rendering text than the Chromium team is. These people have spent decades making the world’s fastest method for rendering documents across platforms because the goal was to make Chrome as fast as possible regardless of what machine you’re using it on. Electron is cool because we can build on top of all of the efforts that they put in to make Electron and specifically to make Chromium as effective as it is. The results are effective.\u003c/p\u003e\n\u003cp\u003e  The fact that you can swap out the native layer with SwiftUI with even just a web view, which is like Electron but worse, and the performance is this much better, is hilarious. Also notice there’s a couple more Electron apps he has open here, including Spotify, which is only using less than 3% of his CPU. Electron apps don’t have to be slow. In fact, a lot of the time, a well-written Electron app is actually going to perform better than an equivalently well-written native app because you don’t get to build rendering as effectively as Google does.\n\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp id=\"p8\"\u003eEven if you think you made up your mind about Electron years ago, I suggest \u003ca href=\"https://www.youtube.com/watch?v=WdmfFmwsGDo\" rel=\"noopener noreferrer\"\u003ewatching the entire video\u003c/a\u003e and considering whether this crusade against more accessible, more frequently updated (and often more performant) desktop software still makes sense in 2025.\u003c/p\u003e\n            \u003c/div\u003e\n\n    \n        \n\n    \n    \n    \n\u003c/article\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": "2025-04-04T16:04:40-04:00",
  "modifiedTime": null
}
