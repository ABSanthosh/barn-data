{
  "id": "04e1fee6-82b7-4229-a7f9-b7b7c39a8b82",
  "title": "Show HN: Petrichor ‚Äì a free, open-source, offline music player for macOS",
  "link": "https://github.com/kushalpandya/Petrichor",
  "description": "I have a large collection of music files gathered over the years, so I was sorely missing a decent offline music player that can serve as a frontend for the collection. I tried several Mac apps over the years, but since streaming music is mainstream now, there aren't good offline music players that meet my needs. So I spent the last 3 months building Petrichor! The idea is to solve my problem and learn Swift UI development along the way, while giving back to the community with this open-source project! Here's a list of features it has, with more getting added in future;- Everything you'd expect from an offline music player!- Map your music folders and browse your library in an organised view.- Create playlists and manage the play queue interactively.- Browse music using folder view when needed.- Pin anything (almost!) to the sidebar for quick access to your favourite music.- Navigate easily: right-click a track to go to its album, artist, year, etc.- Native macOS integration with menubar and dock playback controls, plus dark mode support.- Search quickly through large libraries containing thousands of songs.The app is still in alpha, so things may look unpolished, but I've been testing the alpha builds for the past few weeks and fixing issues as I find them for v1 release. I welcome any feedback (and contributions!) on GitHub repo. Please give it a try and let me know what you think! Comments URL: https://news.ycombinator.com/item?id=44515266 Points: 28 # Comments: 6",
  "author": "kushalpandya",
  "published": "Wed, 09 Jul 2025 22:17:31 +0000",
  "source": "https://hnrss.org/frontpage",
  "categories": null,
  "byline": "kushalpandya",
  "length": 8244,
  "excerpt": "An offline macOS music player. Contribute to kushalpandya/Petrichor development by creating an account on GitHub.",
  "siteName": "GitHub",
  "favicon": "https://github.com/fluidicon.png",
  "text": "Petrichor An offline music player for macOS Summary ‚ú® Features Everything you'd expect from an offline music player! Map your music folders and browse your library in an organized view. Create playlists and manage the play queue interactively. Browse music using folder view when needed. Pin anything (almost!) to the sidebar for quick access to your favorite music. Navigate easily: right-click a track to go to its album, artist, year, etc. Native macOS integration with menubar and dock playback controls, plus dark mode support. Search quickly through large libraries containing thousands of songs. üí° Tip: Petrichor relies heavily on tracks having good metadata for all its features to work well. ‚åõ Planned features Smart playlists with user-configurable conditional filters AirPlay 2 casting support Miniplayer and full-screen modes Automatic in-app updates Online album \u0026 artist information fetching ... and much more! Ô£ø Requirements macOS 14 or later ‚öôÔ∏è Installation Go to Releases and download the latest .dmg. Open the .dmg and drag the app icon into the Applications folder. In Applications, right-click Petrichor \u003e Open. P.S. I plan publish it on Homebrew soon. üì∑ Screenshots üèóÔ∏è Development Motivation I have a large collection of music files that I‚Äôve gathered over the years, and I missed having a good offline music player on macOS. I used Swinsian (great app, by the way!), but it hasn't been updated in years. I also missed features commonly found in streaming apps; so I built Petrichor to scratch that itch and learn Swift and macOS app development along the way! Implementation Overview Built entirely with Swift and SwiftUI for the best macOS integration. Once folders are added, the app scans them and populates a SQLite database using GRDB. Petrichor does not alter your music files, it only reads from the directories you add. Tracks searching is powered by SQLite FTS5 with fall-back to in-memory search. Playback is powered by AVFoundation. View Database Schema erDiagram folders { INTEGER id PK \"AUTO_INCREMENT\" TEXT name \"NOT NULL\" TEXT path \"NOT NULL UNIQUE\" INTEGER track_count \"NOT NULL DEFAULT 0\" DATETIME date_added \"NOT NULL\" DATETIME date_updated \"NOT NULL\" BLOB bookmark_data \"Security-scoped bookmark\" } artists { INTEGER id PK \"AUTO_INCREMENT\" TEXT name \"NOT NULL\" TEXT normalized_name \"NOT NULL UNIQUE\" TEXT sort_name BLOB artwork_data TEXT bio TEXT bio_source DATETIME bio_updated_at TEXT image_url TEXT image_source DATETIME image_updated_at TEXT discogs_id TEXT musicbrainz_id TEXT spotify_id TEXT apple_music_id TEXT country INTEGER formed_year INTEGER disbanded_year TEXT genres \"JSON array\" TEXT websites \"JSON array\" TEXT members \"JSON array\" INTEGER total_tracks \"NOT NULL DEFAULT 0 CHECK \u003e= 0\" INTEGER total_albums \"NOT NULL DEFAULT 0 CHECK \u003e= 0\" DATETIME created_at \"NOT NULL\" DATETIME updated_at \"NOT NULL\" } albums { INTEGER id PK \"AUTO_INCREMENT\" TEXT title \"NOT NULL\" TEXT normalized_title \"NOT NULL\" TEXT sort_title BLOB artwork_data TEXT release_date INTEGER release_year \"CHECK 1900-2100\" TEXT album_type INTEGER total_tracks \"CHECK \u003e= 0\" INTEGER total_discs \"CHECK \u003e= 0\" TEXT description TEXT review TEXT review_source TEXT cover_art_url TEXT thumbnail_url TEXT discogs_id TEXT musicbrainz_id TEXT spotify_id TEXT apple_music_id TEXT label TEXT catalog_number TEXT barcode TEXT genres \"JSON array\" DATETIME created_at \"NOT NULL\" DATETIME updated_at \"NOT NULL\" } album_artists { INTEGER album_id FK \"NOT NULL\" INTEGER artist_id FK \"NOT NULL\" TEXT role \"NOT NULL DEFAULT 'primary'\" INTEGER position \"NOT NULL DEFAULT 0\" } genres { INTEGER id PK \"AUTO_INCREMENT\" TEXT name \"NOT NULL UNIQUE\" } tracks { INTEGER id PK \"AUTO_INCREMENT\" INTEGER folder_id FK \"NOT NULL\" INTEGER album_id FK TEXT path \"NOT NULL UNIQUE\" TEXT filename \"NOT NULL\" TEXT title TEXT artist TEXT album TEXT composer TEXT genre TEXT year REAL duration \"CHECK \u003e= 0\" TEXT format INTEGER file_size DATETIME date_added \"NOT NULL\" DATETIME date_modified BLOB track_artwork_data BOOLEAN is_favorite \"NOT NULL DEFAULT false\" INTEGER play_count \"NOT NULL DEFAULT 0\" DATETIME last_played_date BOOLEAN is_duplicate \"NOT NULL DEFAULT false\" INTEGER primary_track_id FK TEXT duplicate_group_id TEXT album_artist INTEGER track_number \"CHECK \u003e 0\" INTEGER total_tracks INTEGER disc_number \"CHECK \u003e 0\" INTEGER total_discs INTEGER rating \"CHECK 0-5\" BOOLEAN compilation \"DEFAULT false\" TEXT release_date TEXT original_release_date INTEGER bpm TEXT media_type \"Music/Audiobook/Podcast\" INTEGER bitrate \"CHECK \u003e 0\" INTEGER sample_rate INTEGER channels \"1=mono, 2=stereo\" TEXT codec INTEGER bit_depth TEXT sort_title TEXT sort_artist TEXT sort_album TEXT sort_album_artist TEXT extended_metadata \"JSON\" } playlists { TEXT id PK \"UUID\" TEXT name \"NOT NULL\" TEXT type \"NOT NULL (regular/smart)\" BOOLEAN is_user_editable \"NOT NULL\" BOOLEAN is_content_editable \"NOT NULL\" DATETIME date_created \"NOT NULL\" DATETIME date_modified \"NOT NULL\" BLOB cover_artwork_data TEXT smart_criteria \"JSON\" INTEGER sort_order \"NOT NULL DEFAULT 0\" } playlist_tracks { TEXT playlist_id FK \"NOT NULL\" INTEGER track_id FK \"NOT NULL\" INTEGER position \"NOT NULL\" DATETIME date_added \"NOT NULL\" } track_artists { INTEGER track_id FK \"NOT NULL\" INTEGER artist_id FK \"NOT NULL\" TEXT role \"NOT NULL DEFAULT 'artist'\" INTEGER position \"NOT NULL DEFAULT 0\" } track_genres { INTEGER track_id FK \"NOT NULL\" INTEGER genre_id FK \"NOT NULL\" } pinned_items { INTEGER id PK \"AUTO_INCREMENT\" TEXT item_type \"NOT NULL (library/playlist)\" TEXT filter_type \"For library items\" TEXT filter_value \"Artist/album name\" TEXT entity_id \"UUID for entities\" INTEGER artist_id \"Database ID\" INTEGER album_id \"Database ID\" TEXT playlist_id \"For playlist items\" TEXT display_name \"NOT NULL\" TEXT subtitle \"For albums\" TEXT icon_name \"NOT NULL\" INTEGER sort_order \"NOT NULL DEFAULT 0\" DATETIME date_added \"NOT NULL\" } tracks_fts { INTEGER track_id \"NOT INDEXED\" TEXT title TEXT artist TEXT album TEXT album_artist TEXT composer TEXT genre TEXT year } folders ||--o{ tracks : contains albums ||--o{ album_artists : \"has artists\" artists ||--o{ album_artists : \"appears on\" albums ||--o{ tracks : contains artists ||--o{ track_artists : \"appears in\" tracks ||--o{ track_artists : \"has artists\" tracks ||--o| tracks : \"duplicate of\" genres ||--o{ track_genres : \"categorizes\" tracks ||--o{ track_genres : \"has genres\" playlists ||--o{ playlist_tracks : contains tracks ||--o{ playlist_tracks : \"appears in\" tracks ||--|| tracks_fts : \"searchable in\" Loading Setup Make sure you‚Äôre running macOS 14 or later. Install Xcode. To build the .dmg installer using the build-installer.sh script, install: xcpretty create-dmg üìù License MIT üôè Credits Paul Hudson for creating all those Swift tutorials! create-dmg by awesome Sindre Sorhus! Claude by Anthropic for being a peer-programmer for this project!",
  "image": "https://opengraph.githubassets.com/0585fa42f34525fbbd4a5f10f7169bfe1e35af8bcef08bce510e3cab3dce375f/kushalpandya/Petrichor",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv data-hpc=\"true\"\u003e\u003carticle itemprop=\"text\"\u003e\u003cp dir=\"auto\"\u003e\u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/kushalpandya/Petrichor/blob/main/Resources/Assets.xcassets/AppIcon.appiconset/1024-mac.png\"\u003e\u003cimg width=\"200\" src=\"https://github.com/kushalpandya/Petrichor/raw/main/Resources/Assets.xcassets/AppIcon.appiconset/1024-mac.png\" alt=\"Petrichor App Icon\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cdiv dir=\"auto\"\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003ePetrichor\u003c/h3\u003e\u003ca id=\"user-content-petrichor\" aria-label=\"Permalink: Petrichor\" href=\"#petrichor\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eAn offline music player for macOS\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/kushalpandya/Petrichor/releases\"\u003e\u003cimg src=\"https://github.com/kushalpandya/Petrichor/raw/main/.github/assets/macos_download.png\" width=\"140\" alt=\"Download for macOS\"/\u003e\u003c/a\u003e\n\u003c/p\u003e\u003c/div\u003e\n\n\n\u003chr/\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eSummary\u003c/h2\u003e\u003ca id=\"user-content-summary\" aria-label=\"Permalink: Summary\" href=\"#summary\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003e‚ú® Features\u003c/h3\u003e\u003ca id=\"user-content--features\" aria-label=\"Permalink: ‚ú® Features\" href=\"#-features\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eEverything you\u0026#39;d expect from an offline music player!\u003c/li\u003e\n\u003cli\u003eMap your music folders and browse your library in an organized view.\u003c/li\u003e\n\u003cli\u003eCreate playlists and manage the play queue interactively.\u003c/li\u003e\n\u003cli\u003eBrowse music using folder view when needed.\u003c/li\u003e\n\u003cli\u003ePin \u003cem\u003eanything\u003c/em\u003e (almost!) to the sidebar for quick access to your favorite music.\u003c/li\u003e\n\u003cli\u003eNavigate easily: right-click a track to go to its album, artist, year, etc.\u003c/li\u003e\n\u003cli\u003eNative macOS integration with menubar and dock playback controls, plus dark mode support.\u003c/li\u003e\n\u003cli\u003eSearch quickly through large libraries containing thousands of songs.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003eüí° \u003cstrong\u003eTip\u003c/strong\u003e: Petrichor relies heavily on tracks having good metadata for all its features to work well.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003e‚åõ Planned features\u003c/h3\u003e\u003ca id=\"user-content--planned-features\" aria-label=\"Permalink: ‚åõ Planned features\" href=\"#-planned-features\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eSmart playlists with user-configurable conditional filters\u003c/li\u003e\n\u003cli\u003eAirPlay 2 casting support\u003c/li\u003e\n\u003cli\u003eMiniplayer and full-screen modes\u003c/li\u003e\n\u003cli\u003eAutomatic in-app updates\u003c/li\u003e\n\u003cli\u003eOnline album \u0026amp; artist information fetching\u003c/li\u003e\n\u003cli\u003e... and much more!\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003eÔ£ø Requirements\u003c/h3\u003e\u003ca id=\"user-content--requirements\" aria-label=\"Permalink: Ô£ø Requirements\" href=\"#-requirements\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003emacOS 14 or later\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003e‚öôÔ∏è Installation\u003c/h3\u003e\u003ca id=\"user-content-Ô∏è-installation\" aria-label=\"Permalink: ‚öôÔ∏è Installation\" href=\"#Ô∏è-installation\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eGo to \u003ca href=\"https://github.com/kushalpandya/Petrichor/releases\"\u003eReleases\u003c/a\u003e and download the latest \u003ccode\u003e.dmg\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eOpen the \u003ccode\u003e.dmg\u003c/code\u003e and drag the app icon into the Applications folder.\u003c/li\u003e\n\u003cli\u003eIn Applications, right-click \u003cstrong\u003ePetrichor \u0026gt; Open\u003c/strong\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003cem\u003eP.S. I plan publish it on Homebrew soon.\u003c/em\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003eüì∑ Screenshots\u003c/h3\u003e\u003ca id=\"user-content--screenshots\" aria-label=\"Permalink: üì∑ Screenshots\" href=\"#-screenshots\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/kushalpandya/Petrichor/blob/main/.github/assets/screenshot_1.png\"\u003e\u003cimg src=\"https://github.com/kushalpandya/Petrichor/raw/main/.github/assets/screenshot_1.png\" width=\"392\" alt=\"Screenshot\"/\u003e\u003c/a\u003e\n\u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/kushalpandya/Petrichor/blob/main/.github/assets/screenshot_2.png\"\u003e\u003cimg src=\"https://github.com/kushalpandya/Petrichor/raw/main/.github/assets/screenshot_2.png\" width=\"392\" alt=\"Screenshot\"/\u003e\u003c/a\u003e\n\u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/kushalpandya/Petrichor/blob/main/.github/assets/screenshot_3.png\"\u003e\u003cimg src=\"https://github.com/kushalpandya/Petrichor/raw/main/.github/assets/screenshot_3.png\" width=\"392\" alt=\"Screenshot\"/\u003e\u003c/a\u003e\n\u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/kushalpandya/Petrichor/blob/main/.github/assets/screenshot_4.png\"\u003e\u003cimg src=\"https://github.com/kushalpandya/Petrichor/raw/main/.github/assets/screenshot_4.png\" width=\"392\" alt=\"Screenshot\"/\u003e\u003c/a\u003e\n\u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/kushalpandya/Petrichor/blob/main/.github/assets/screenshot_5.png\"\u003e\u003cimg src=\"https://github.com/kushalpandya/Petrichor/raw/main/.github/assets/screenshot_5.png\" width=\"392\" alt=\"Screenshot\"/\u003e\u003c/a\u003e\n\u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/kushalpandya/Petrichor/blob/main/.github/assets/screenshot_6.png\"\u003e\u003cimg src=\"https://github.com/kushalpandya/Petrichor/raw/main/.github/assets/screenshot_6.png\" width=\"392\" alt=\"Screenshot\"/\u003e\u003c/a\u003e\n\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eüèóÔ∏è Development\u003c/h2\u003e\u003ca id=\"user-content-Ô∏è-development\" aria-label=\"Permalink: üèóÔ∏è Development\" href=\"#Ô∏è-development\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003eMotivation\u003c/h3\u003e\u003ca id=\"user-content-motivation\" aria-label=\"Permalink: Motivation\" href=\"#motivation\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eI have a large collection of music files that I‚Äôve gathered over the years, and I missed having a good offline\nmusic player on macOS. I used \u003ca href=\"https://swinsian.com/\" rel=\"nofollow\"\u003eSwinsian\u003c/a\u003e (great app, by the way!), but it hasn\u0026#39;t been\nupdated in years. I also missed features commonly found in streaming apps; so I built Petrichor to scratch that\nitch and learn Swift and macOS app development along the way!\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003eImplementation Overview\u003c/h3\u003e\u003ca id=\"user-content-implementation-overview\" aria-label=\"Permalink: Implementation Overview\" href=\"#implementation-overview\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eBuilt entirely with Swift and SwiftUI for the best macOS integration.\u003c/li\u003e\n\u003cli\u003eOnce folders are added, the app scans them and populates a SQLite database using \u003ca href=\"https://github.com/groue/GRDB.swift/\"\u003eGRDB\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003ePetrichor does \u003cstrong\u003enot\u003c/strong\u003e alter your music files, it only reads from the directories you add.\u003c/li\u003e\n\u003cli\u003eTracks searching is powered by \u003ca href=\"https://www.sqlite.org/fts5.html\" rel=\"nofollow\"\u003eSQLite FTS5\u003c/a\u003e with fall-back to in-memory search.\u003c/li\u003e\n\u003cli\u003ePlayback is powered by \u003ca href=\"https://developer.apple.com/av-foundation/\" rel=\"nofollow\"\u003eAVFoundation\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdetails\u003e\n\u003csummary\u003eView Database Schema\u003c/summary\u003e\n\u003csection data-identity=\"833d7e4d-a83d-488b-a443-1aaa35a3224d\" data-host=\"https://viewscreen.githubusercontent.com\" data-src=\"https://viewscreen.githubusercontent.com/markdown/mermaid?docs_host=https%3A%2F%2Fdocs.github.com\" data-type=\"mermaid\" aria-label=\"mermaid rendered output container\"\u003e\n  \u003cdiv dir=\"auto\" data-json=\"{\u0026#34;data\u0026#34;:\u0026#34;erDiagram\\n    folders {\\n        INTEGER id PK \\\u0026#34;AUTO_INCREMENT\\\u0026#34;\\n        TEXT name \\\u0026#34;NOT NULL\\\u0026#34;\\n        TEXT path \\\u0026#34;NOT NULL UNIQUE\\\u0026#34;\\n        INTEGER track_count \\\u0026#34;NOT NULL DEFAULT 0\\\u0026#34;\\n        DATETIME date_added \\\u0026#34;NOT NULL\\\u0026#34;\\n        DATETIME date_updated \\\u0026#34;NOT NULL\\\u0026#34;\\n        BLOB bookmark_data \\\u0026#34;Security-scoped bookmark\\\u0026#34;\\n    }\\n\\n    artists {\\n        INTEGER id PK \\\u0026#34;AUTO_INCREMENT\\\u0026#34;\\n        TEXT name \\\u0026#34;NOT NULL\\\u0026#34;\\n        TEXT normalized_name \\\u0026#34;NOT NULL UNIQUE\\\u0026#34;\\n        TEXT sort_name\\n        BLOB artwork_data\\n        TEXT bio\\n        TEXT bio_source\\n        DATETIME bio_updated_at\\n        TEXT image_url\\n        TEXT image_source\\n        DATETIME image_updated_at\\n        TEXT discogs_id\\n        TEXT musicbrainz_id\\n        TEXT spotify_id\\n        TEXT apple_music_id\\n        TEXT country\\n        INTEGER formed_year\\n        INTEGER disbanded_year\\n        TEXT genres \\\u0026#34;JSON array\\\u0026#34;\\n        TEXT websites \\\u0026#34;JSON array\\\u0026#34;\\n        TEXT members \\\u0026#34;JSON array\\\u0026#34;\\n        INTEGER total_tracks \\\u0026#34;NOT NULL DEFAULT 0 CHECK \u0026amp;gt;= 0\\\u0026#34;\\n        INTEGER total_albums \\\u0026#34;NOT NULL DEFAULT 0 CHECK \u0026amp;gt;= 0\\\u0026#34;\\n        DATETIME created_at \\\u0026#34;NOT NULL\\\u0026#34;\\n        DATETIME updated_at \\\u0026#34;NOT NULL\\\u0026#34;\\n    }\\n\\n    albums {\\n        INTEGER id PK \\\u0026#34;AUTO_INCREMENT\\\u0026#34;\\n        TEXT title \\\u0026#34;NOT NULL\\\u0026#34;\\n        TEXT normalized_title \\\u0026#34;NOT NULL\\\u0026#34;\\n        TEXT sort_title\\n        BLOB artwork_data\\n        TEXT release_date\\n        INTEGER release_year \\\u0026#34;CHECK 1900-2100\\\u0026#34;\\n        TEXT album_type\\n        INTEGER total_tracks \\\u0026#34;CHECK \u0026amp;gt;= 0\\\u0026#34;\\n        INTEGER total_discs \\\u0026#34;CHECK \u0026amp;gt;= 0\\\u0026#34;\\n        TEXT description\\n        TEXT review\\n        TEXT review_source\\n        TEXT cover_art_url\\n        TEXT thumbnail_url\\n        TEXT discogs_id\\n        TEXT musicbrainz_id\\n        TEXT spotify_id\\n        TEXT apple_music_id\\n        TEXT label\\n        TEXT catalog_number\\n        TEXT barcode\\n        TEXT genres \\\u0026#34;JSON array\\\u0026#34;\\n        DATETIME created_at \\\u0026#34;NOT NULL\\\u0026#34;\\n        DATETIME updated_at \\\u0026#34;NOT NULL\\\u0026#34;\\n    }\\n\\n    album_artists {\\n        INTEGER album_id FK \\\u0026#34;NOT NULL\\\u0026#34;\\n        INTEGER artist_id FK \\\u0026#34;NOT NULL\\\u0026#34;\\n        TEXT role \\\u0026#34;NOT NULL DEFAULT \u0026#39;primary\u0026#39;\\\u0026#34;\\n        INTEGER position \\\u0026#34;NOT NULL DEFAULT 0\\\u0026#34;\\n    }\\n\\n    genres {\\n        INTEGER id PK \\\u0026#34;AUTO_INCREMENT\\\u0026#34;\\n        TEXT name \\\u0026#34;NOT NULL UNIQUE\\\u0026#34;\\n    }\\n\\n    tracks {\\n        INTEGER id PK \\\u0026#34;AUTO_INCREMENT\\\u0026#34;\\n        INTEGER folder_id FK \\\u0026#34;NOT NULL\\\u0026#34;\\n        INTEGER album_id FK\\n        TEXT path \\\u0026#34;NOT NULL UNIQUE\\\u0026#34;\\n        TEXT filename \\\u0026#34;NOT NULL\\\u0026#34;\\n        TEXT title\\n        TEXT artist\\n        TEXT album\\n        TEXT composer\\n        TEXT genre\\n        TEXT year\\n        REAL duration \\\u0026#34;CHECK \u0026amp;gt;= 0\\\u0026#34;\\n        TEXT format\\n        INTEGER file_size\\n        DATETIME date_added \\\u0026#34;NOT NULL\\\u0026#34;\\n        DATETIME date_modified\\n        BLOB track_artwork_data\\n        BOOLEAN is_favorite \\\u0026#34;NOT NULL DEFAULT false\\\u0026#34;\\n        INTEGER play_count \\\u0026#34;NOT NULL DEFAULT 0\\\u0026#34;\\n        DATETIME last_played_date\\n        BOOLEAN is_duplicate \\\u0026#34;NOT NULL DEFAULT false\\\u0026#34;\\n        INTEGER primary_track_id FK\\n        TEXT duplicate_group_id\\n        TEXT album_artist\\n        INTEGER track_number \\\u0026#34;CHECK \u0026amp;gt; 0\\\u0026#34;\\n        INTEGER total_tracks\\n        INTEGER disc_number \\\u0026#34;CHECK \u0026amp;gt; 0\\\u0026#34;\\n        INTEGER total_discs\\n        INTEGER rating \\\u0026#34;CHECK 0-5\\\u0026#34;\\n        BOOLEAN compilation \\\u0026#34;DEFAULT false\\\u0026#34;\\n        TEXT release_date\\n        TEXT original_release_date\\n        INTEGER bpm\\n        TEXT media_type \\\u0026#34;Music/Audiobook/Podcast\\\u0026#34;\\n        INTEGER bitrate \\\u0026#34;CHECK \u0026amp;gt; 0\\\u0026#34;\\n        INTEGER sample_rate\\n        INTEGER channels \\\u0026#34;1=mono, 2=stereo\\\u0026#34;\\n        TEXT codec\\n        INTEGER bit_depth\\n        TEXT sort_title\\n        TEXT sort_artist\\n        TEXT sort_album\\n        TEXT sort_album_artist\\n        TEXT extended_metadata \\\u0026#34;JSON\\\u0026#34;\\n    }\\n\\n    playlists {\\n        TEXT id PK \\\u0026#34;UUID\\\u0026#34;\\n        TEXT name \\\u0026#34;NOT NULL\\\u0026#34;\\n        TEXT type \\\u0026#34;NOT NULL (regular/smart)\\\u0026#34;\\n        BOOLEAN is_user_editable \\\u0026#34;NOT NULL\\\u0026#34;\\n        BOOLEAN is_content_editable \\\u0026#34;NOT NULL\\\u0026#34;\\n        DATETIME date_created \\\u0026#34;NOT NULL\\\u0026#34;\\n        DATETIME date_modified \\\u0026#34;NOT NULL\\\u0026#34;\\n        BLOB cover_artwork_data\\n        TEXT smart_criteria \\\u0026#34;JSON\\\u0026#34;\\n        INTEGER sort_order \\\u0026#34;NOT NULL DEFAULT 0\\\u0026#34;\\n    }\\n\\n    playlist_tracks {\\n        TEXT playlist_id FK \\\u0026#34;NOT NULL\\\u0026#34;\\n        INTEGER track_id FK \\\u0026#34;NOT NULL\\\u0026#34;\\n        INTEGER position \\\u0026#34;NOT NULL\\\u0026#34;\\n        DATETIME date_added \\\u0026#34;NOT NULL\\\u0026#34;\\n    }\\n\\n    track_artists {\\n        INTEGER track_id FK \\\u0026#34;NOT NULL\\\u0026#34;\\n        INTEGER artist_id FK \\\u0026#34;NOT NULL\\\u0026#34;\\n        TEXT role \\\u0026#34;NOT NULL DEFAULT \u0026#39;artist\u0026#39;\\\u0026#34;\\n        INTEGER position \\\u0026#34;NOT NULL DEFAULT 0\\\u0026#34;\\n    }\\n\\n    track_genres {\\n        INTEGER track_id FK \\\u0026#34;NOT NULL\\\u0026#34;\\n        INTEGER genre_id FK \\\u0026#34;NOT NULL\\\u0026#34;\\n    }\\n\\n    pinned_items {\\n        INTEGER id PK \\\u0026#34;AUTO_INCREMENT\\\u0026#34;\\n        TEXT item_type \\\u0026#34;NOT NULL (library/playlist)\\\u0026#34;\\n        TEXT filter_type \\\u0026#34;For library items\\\u0026#34;\\n        TEXT filter_value \\\u0026#34;Artist/album name\\\u0026#34;\\n        TEXT entity_id \\\u0026#34;UUID for entities\\\u0026#34;\\n        INTEGER artist_id \\\u0026#34;Database ID\\\u0026#34;\\n        INTEGER album_id \\\u0026#34;Database ID\\\u0026#34;\\n        TEXT playlist_id \\\u0026#34;For playlist items\\\u0026#34;\\n        TEXT display_name \\\u0026#34;NOT NULL\\\u0026#34;\\n        TEXT subtitle \\\u0026#34;For albums\\\u0026#34;\\n        TEXT icon_name \\\u0026#34;NOT NULL\\\u0026#34;\\n        INTEGER sort_order \\\u0026#34;NOT NULL DEFAULT 0\\\u0026#34;\\n        DATETIME date_added \\\u0026#34;NOT NULL\\\u0026#34;\\n    }\\n\\n    tracks_fts {\\n        INTEGER track_id \\\u0026#34;NOT INDEXED\\\u0026#34;\\n        TEXT title\\n        TEXT artist\\n        TEXT album\\n        TEXT album_artist\\n        TEXT composer\\n        TEXT genre\\n        TEXT year\\n    }\\n\\n    folders ||--o{ tracks : contains\\n    albums ||--o{ album_artists : \\\u0026#34;has artists\\\u0026#34;\\n    artists ||--o{ album_artists : \\\u0026#34;appears on\\\u0026#34;\\n    albums ||--o{ tracks : contains\\n    artists ||--o{ track_artists : \\\u0026#34;appears in\\\u0026#34;\\n    tracks ||--o{ track_artists : \\\u0026#34;has artists\\\u0026#34;\\n    tracks ||--o| tracks : \\\u0026#34;duplicate of\\\u0026#34;\\n    genres ||--o{ track_genres : \\\u0026#34;categorizes\\\u0026#34;\\n    tracks ||--o{ track_genres : \\\u0026#34;has genres\\\u0026#34;\\n    playlists ||--o{ playlist_tracks : contains\\n    tracks ||--o{ playlist_tracks : \\\u0026#34;appears in\\\u0026#34;\\n    tracks ||--|| tracks_fts : \\\u0026#34;searchable in\\\u0026#34;\\n\u0026#34;}\" data-plain=\"erDiagram\n    folders {\n        INTEGER id PK \u0026#34;AUTO_INCREMENT\u0026#34;\n        TEXT name \u0026#34;NOT NULL\u0026#34;\n        TEXT path \u0026#34;NOT NULL UNIQUE\u0026#34;\n        INTEGER track_count \u0026#34;NOT NULL DEFAULT 0\u0026#34;\n        DATETIME date_added \u0026#34;NOT NULL\u0026#34;\n        DATETIME date_updated \u0026#34;NOT NULL\u0026#34;\n        BLOB bookmark_data \u0026#34;Security-scoped bookmark\u0026#34;\n    }\n\n    artists {\n        INTEGER id PK \u0026#34;AUTO_INCREMENT\u0026#34;\n        TEXT name \u0026#34;NOT NULL\u0026#34;\n        TEXT normalized_name \u0026#34;NOT NULL UNIQUE\u0026#34;\n        TEXT sort_name\n        BLOB artwork_data\n        TEXT bio\n        TEXT bio_source\n        DATETIME bio_updated_at\n        TEXT image_url\n        TEXT image_source\n        DATETIME image_updated_at\n        TEXT discogs_id\n        TEXT musicbrainz_id\n        TEXT spotify_id\n        TEXT apple_music_id\n        TEXT country\n        INTEGER formed_year\n        INTEGER disbanded_year\n        TEXT genres \u0026#34;JSON array\u0026#34;\n        TEXT websites \u0026#34;JSON array\u0026#34;\n        TEXT members \u0026#34;JSON array\u0026#34;\n        INTEGER total_tracks \u0026#34;NOT NULL DEFAULT 0 CHECK \u0026gt;= 0\u0026#34;\n        INTEGER total_albums \u0026#34;NOT NULL DEFAULT 0 CHECK \u0026gt;= 0\u0026#34;\n        DATETIME created_at \u0026#34;NOT NULL\u0026#34;\n        DATETIME updated_at \u0026#34;NOT NULL\u0026#34;\n    }\n\n    albums {\n        INTEGER id PK \u0026#34;AUTO_INCREMENT\u0026#34;\n        TEXT title \u0026#34;NOT NULL\u0026#34;\n        TEXT normalized_title \u0026#34;NOT NULL\u0026#34;\n        TEXT sort_title\n        BLOB artwork_data\n        TEXT release_date\n        INTEGER release_year \u0026#34;CHECK 1900-2100\u0026#34;\n        TEXT album_type\n        INTEGER total_tracks \u0026#34;CHECK \u0026gt;= 0\u0026#34;\n        INTEGER total_discs \u0026#34;CHECK \u0026gt;= 0\u0026#34;\n        TEXT description\n        TEXT review\n        TEXT review_source\n        TEXT cover_art_url\n        TEXT thumbnail_url\n        TEXT discogs_id\n        TEXT musicbrainz_id\n        TEXT spotify_id\n        TEXT apple_music_id\n        TEXT label\n        TEXT catalog_number\n        TEXT barcode\n        TEXT genres \u0026#34;JSON array\u0026#34;\n        DATETIME created_at \u0026#34;NOT NULL\u0026#34;\n        DATETIME updated_at \u0026#34;NOT NULL\u0026#34;\n    }\n\n    album_artists {\n        INTEGER album_id FK \u0026#34;NOT NULL\u0026#34;\n        INTEGER artist_id FK \u0026#34;NOT NULL\u0026#34;\n        TEXT role \u0026#34;NOT NULL DEFAULT \u0026#39;primary\u0026#39;\u0026#34;\n        INTEGER position \u0026#34;NOT NULL DEFAULT 0\u0026#34;\n    }\n\n    genres {\n        INTEGER id PK \u0026#34;AUTO_INCREMENT\u0026#34;\n        TEXT name \u0026#34;NOT NULL UNIQUE\u0026#34;\n    }\n\n    tracks {\n        INTEGER id PK \u0026#34;AUTO_INCREMENT\u0026#34;\n        INTEGER folder_id FK \u0026#34;NOT NULL\u0026#34;\n        INTEGER album_id FK\n        TEXT path \u0026#34;NOT NULL UNIQUE\u0026#34;\n        TEXT filename \u0026#34;NOT NULL\u0026#34;\n        TEXT title\n        TEXT artist\n        TEXT album\n        TEXT composer\n        TEXT genre\n        TEXT year\n        REAL duration \u0026#34;CHECK \u0026gt;= 0\u0026#34;\n        TEXT format\n        INTEGER file_size\n        DATETIME date_added \u0026#34;NOT NULL\u0026#34;\n        DATETIME date_modified\n        BLOB track_artwork_data\n        BOOLEAN is_favorite \u0026#34;NOT NULL DEFAULT false\u0026#34;\n        INTEGER play_count \u0026#34;NOT NULL DEFAULT 0\u0026#34;\n        DATETIME last_played_date\n        BOOLEAN is_duplicate \u0026#34;NOT NULL DEFAULT false\u0026#34;\n        INTEGER primary_track_id FK\n        TEXT duplicate_group_id\n        TEXT album_artist\n        INTEGER track_number \u0026#34;CHECK \u0026gt; 0\u0026#34;\n        INTEGER total_tracks\n        INTEGER disc_number \u0026#34;CHECK \u0026gt; 0\u0026#34;\n        INTEGER total_discs\n        INTEGER rating \u0026#34;CHECK 0-5\u0026#34;\n        BOOLEAN compilation \u0026#34;DEFAULT false\u0026#34;\n        TEXT release_date\n        TEXT original_release_date\n        INTEGER bpm\n        TEXT media_type \u0026#34;Music/Audiobook/Podcast\u0026#34;\n        INTEGER bitrate \u0026#34;CHECK \u0026gt; 0\u0026#34;\n        INTEGER sample_rate\n        INTEGER channels \u0026#34;1=mono, 2=stereo\u0026#34;\n        TEXT codec\n        INTEGER bit_depth\n        TEXT sort_title\n        TEXT sort_artist\n        TEXT sort_album\n        TEXT sort_album_artist\n        TEXT extended_metadata \u0026#34;JSON\u0026#34;\n    }\n\n    playlists {\n        TEXT id PK \u0026#34;UUID\u0026#34;\n        TEXT name \u0026#34;NOT NULL\u0026#34;\n        TEXT type \u0026#34;NOT NULL (regular/smart)\u0026#34;\n        BOOLEAN is_user_editable \u0026#34;NOT NULL\u0026#34;\n        BOOLEAN is_content_editable \u0026#34;NOT NULL\u0026#34;\n        DATETIME date_created \u0026#34;NOT NULL\u0026#34;\n        DATETIME date_modified \u0026#34;NOT NULL\u0026#34;\n        BLOB cover_artwork_data\n        TEXT smart_criteria \u0026#34;JSON\u0026#34;\n        INTEGER sort_order \u0026#34;NOT NULL DEFAULT 0\u0026#34;\n    }\n\n    playlist_tracks {\n        TEXT playlist_id FK \u0026#34;NOT NULL\u0026#34;\n        INTEGER track_id FK \u0026#34;NOT NULL\u0026#34;\n        INTEGER position \u0026#34;NOT NULL\u0026#34;\n        DATETIME date_added \u0026#34;NOT NULL\u0026#34;\n    }\n\n    track_artists {\n        INTEGER track_id FK \u0026#34;NOT NULL\u0026#34;\n        INTEGER artist_id FK \u0026#34;NOT NULL\u0026#34;\n        TEXT role \u0026#34;NOT NULL DEFAULT \u0026#39;artist\u0026#39;\u0026#34;\n        INTEGER position \u0026#34;NOT NULL DEFAULT 0\u0026#34;\n    }\n\n    track_genres {\n        INTEGER track_id FK \u0026#34;NOT NULL\u0026#34;\n        INTEGER genre_id FK \u0026#34;NOT NULL\u0026#34;\n    }\n\n    pinned_items {\n        INTEGER id PK \u0026#34;AUTO_INCREMENT\u0026#34;\n        TEXT item_type \u0026#34;NOT NULL (library/playlist)\u0026#34;\n        TEXT filter_type \u0026#34;For library items\u0026#34;\n        TEXT filter_value \u0026#34;Artist/album name\u0026#34;\n        TEXT entity_id \u0026#34;UUID for entities\u0026#34;\n        INTEGER artist_id \u0026#34;Database ID\u0026#34;\n        INTEGER album_id \u0026#34;Database ID\u0026#34;\n        TEXT playlist_id \u0026#34;For playlist items\u0026#34;\n        TEXT display_name \u0026#34;NOT NULL\u0026#34;\n        TEXT subtitle \u0026#34;For albums\u0026#34;\n        TEXT icon_name \u0026#34;NOT NULL\u0026#34;\n        INTEGER sort_order \u0026#34;NOT NULL DEFAULT 0\u0026#34;\n        DATETIME date_added \u0026#34;NOT NULL\u0026#34;\n    }\n\n    tracks_fts {\n        INTEGER track_id \u0026#34;NOT INDEXED\u0026#34;\n        TEXT title\n        TEXT artist\n        TEXT album\n        TEXT album_artist\n        TEXT composer\n        TEXT genre\n        TEXT year\n    }\n\n    folders ||--o{ tracks : contains\n    albums ||--o{ album_artists : \u0026#34;has artists\u0026#34;\n    artists ||--o{ album_artists : \u0026#34;appears on\u0026#34;\n    albums ||--o{ tracks : contains\n    artists ||--o{ track_artists : \u0026#34;appears in\u0026#34;\n    tracks ||--o{ track_artists : \u0026#34;has artists\u0026#34;\n    tracks ||--o| tracks : \u0026#34;duplicate of\u0026#34;\n    genres ||--o{ track_genres : \u0026#34;categorizes\u0026#34;\n    tracks ||--o{ track_genres : \u0026#34;has genres\u0026#34;\n    playlists ||--o{ playlist_tracks : contains\n    tracks ||--o{ playlist_tracks : \u0026#34;appears in\u0026#34;\n    tracks ||--|| tracks_fts : \u0026#34;searchable in\u0026#34;\n\"\u003e\n      \u003cpre lang=\"mermaid\" aria-label=\"Raw mermaid code\"\u003eerDiagram\n    folders {\n        INTEGER id PK \u0026#34;AUTO_INCREMENT\u0026#34;\n        TEXT name \u0026#34;NOT NULL\u0026#34;\n        TEXT path \u0026#34;NOT NULL UNIQUE\u0026#34;\n        INTEGER track_count \u0026#34;NOT NULL DEFAULT 0\u0026#34;\n        DATETIME date_added \u0026#34;NOT NULL\u0026#34;\n        DATETIME date_updated \u0026#34;NOT NULL\u0026#34;\n        BLOB bookmark_data \u0026#34;Security-scoped bookmark\u0026#34;\n    }\n\n    artists {\n        INTEGER id PK \u0026#34;AUTO_INCREMENT\u0026#34;\n        TEXT name \u0026#34;NOT NULL\u0026#34;\n        TEXT normalized_name \u0026#34;NOT NULL UNIQUE\u0026#34;\n        TEXT sort_name\n        BLOB artwork_data\n        TEXT bio\n        TEXT bio_source\n        DATETIME bio_updated_at\n        TEXT image_url\n        TEXT image_source\n        DATETIME image_updated_at\n        TEXT discogs_id\n        TEXT musicbrainz_id\n        TEXT spotify_id\n        TEXT apple_music_id\n        TEXT country\n        INTEGER formed_year\n        INTEGER disbanded_year\n        TEXT genres \u0026#34;JSON array\u0026#34;\n        TEXT websites \u0026#34;JSON array\u0026#34;\n        TEXT members \u0026#34;JSON array\u0026#34;\n        INTEGER total_tracks \u0026#34;NOT NULL DEFAULT 0 CHECK \u0026gt;= 0\u0026#34;\n        INTEGER total_albums \u0026#34;NOT NULL DEFAULT 0 CHECK \u0026gt;= 0\u0026#34;\n        DATETIME created_at \u0026#34;NOT NULL\u0026#34;\n        DATETIME updated_at \u0026#34;NOT NULL\u0026#34;\n    }\n\n    albums {\n        INTEGER id PK \u0026#34;AUTO_INCREMENT\u0026#34;\n        TEXT title \u0026#34;NOT NULL\u0026#34;\n        TEXT normalized_title \u0026#34;NOT NULL\u0026#34;\n        TEXT sort_title\n        BLOB artwork_data\n        TEXT release_date\n        INTEGER release_year \u0026#34;CHECK 1900-2100\u0026#34;\n        TEXT album_type\n        INTEGER total_tracks \u0026#34;CHECK \u0026gt;= 0\u0026#34;\n        INTEGER total_discs \u0026#34;CHECK \u0026gt;= 0\u0026#34;\n        TEXT description\n        TEXT review\n        TEXT review_source\n        TEXT cover_art_url\n        TEXT thumbnail_url\n        TEXT discogs_id\n        TEXT musicbrainz_id\n        TEXT spotify_id\n        TEXT apple_music_id\n        TEXT label\n        TEXT catalog_number\n        TEXT barcode\n        TEXT genres \u0026#34;JSON array\u0026#34;\n        DATETIME created_at \u0026#34;NOT NULL\u0026#34;\n        DATETIME updated_at \u0026#34;NOT NULL\u0026#34;\n    }\n\n    album_artists {\n        INTEGER album_id FK \u0026#34;NOT NULL\u0026#34;\n        INTEGER artist_id FK \u0026#34;NOT NULL\u0026#34;\n        TEXT role \u0026#34;NOT NULL DEFAULT \u0026#39;primary\u0026#39;\u0026#34;\n        INTEGER position \u0026#34;NOT NULL DEFAULT 0\u0026#34;\n    }\n\n    genres {\n        INTEGER id PK \u0026#34;AUTO_INCREMENT\u0026#34;\n        TEXT name \u0026#34;NOT NULL UNIQUE\u0026#34;\n    }\n\n    tracks {\n        INTEGER id PK \u0026#34;AUTO_INCREMENT\u0026#34;\n        INTEGER folder_id FK \u0026#34;NOT NULL\u0026#34;\n        INTEGER album_id FK\n        TEXT path \u0026#34;NOT NULL UNIQUE\u0026#34;\n        TEXT filename \u0026#34;NOT NULL\u0026#34;\n        TEXT title\n        TEXT artist\n        TEXT album\n        TEXT composer\n        TEXT genre\n        TEXT year\n        REAL duration \u0026#34;CHECK \u0026gt;= 0\u0026#34;\n        TEXT format\n        INTEGER file_size\n        DATETIME date_added \u0026#34;NOT NULL\u0026#34;\n        DATETIME date_modified\n        BLOB track_artwork_data\n        BOOLEAN is_favorite \u0026#34;NOT NULL DEFAULT false\u0026#34;\n        INTEGER play_count \u0026#34;NOT NULL DEFAULT 0\u0026#34;\n        DATETIME last_played_date\n        BOOLEAN is_duplicate \u0026#34;NOT NULL DEFAULT false\u0026#34;\n        INTEGER primary_track_id FK\n        TEXT duplicate_group_id\n        TEXT album_artist\n        INTEGER track_number \u0026#34;CHECK \u0026gt; 0\u0026#34;\n        INTEGER total_tracks\n        INTEGER disc_number \u0026#34;CHECK \u0026gt; 0\u0026#34;\n        INTEGER total_discs\n        INTEGER rating \u0026#34;CHECK 0-5\u0026#34;\n        BOOLEAN compilation \u0026#34;DEFAULT false\u0026#34;\n        TEXT release_date\n        TEXT original_release_date\n        INTEGER bpm\n        TEXT media_type \u0026#34;Music/Audiobook/Podcast\u0026#34;\n        INTEGER bitrate \u0026#34;CHECK \u0026gt; 0\u0026#34;\n        INTEGER sample_rate\n        INTEGER channels \u0026#34;1=mono, 2=stereo\u0026#34;\n        TEXT codec\n        INTEGER bit_depth\n        TEXT sort_title\n        TEXT sort_artist\n        TEXT sort_album\n        TEXT sort_album_artist\n        TEXT extended_metadata \u0026#34;JSON\u0026#34;\n    }\n\n    playlists {\n        TEXT id PK \u0026#34;UUID\u0026#34;\n        TEXT name \u0026#34;NOT NULL\u0026#34;\n        TEXT type \u0026#34;NOT NULL (regular/smart)\u0026#34;\n        BOOLEAN is_user_editable \u0026#34;NOT NULL\u0026#34;\n        BOOLEAN is_content_editable \u0026#34;NOT NULL\u0026#34;\n        DATETIME date_created \u0026#34;NOT NULL\u0026#34;\n        DATETIME date_modified \u0026#34;NOT NULL\u0026#34;\n        BLOB cover_artwork_data\n        TEXT smart_criteria \u0026#34;JSON\u0026#34;\n        INTEGER sort_order \u0026#34;NOT NULL DEFAULT 0\u0026#34;\n    }\n\n    playlist_tracks {\n        TEXT playlist_id FK \u0026#34;NOT NULL\u0026#34;\n        INTEGER track_id FK \u0026#34;NOT NULL\u0026#34;\n        INTEGER position \u0026#34;NOT NULL\u0026#34;\n        DATETIME date_added \u0026#34;NOT NULL\u0026#34;\n    }\n\n    track_artists {\n        INTEGER track_id FK \u0026#34;NOT NULL\u0026#34;\n        INTEGER artist_id FK \u0026#34;NOT NULL\u0026#34;\n        TEXT role \u0026#34;NOT NULL DEFAULT \u0026#39;artist\u0026#39;\u0026#34;\n        INTEGER position \u0026#34;NOT NULL DEFAULT 0\u0026#34;\n    }\n\n    track_genres {\n        INTEGER track_id FK \u0026#34;NOT NULL\u0026#34;\n        INTEGER genre_id FK \u0026#34;NOT NULL\u0026#34;\n    }\n\n    pinned_items {\n        INTEGER id PK \u0026#34;AUTO_INCREMENT\u0026#34;\n        TEXT item_type \u0026#34;NOT NULL (library/playlist)\u0026#34;\n        TEXT filter_type \u0026#34;For library items\u0026#34;\n        TEXT filter_value \u0026#34;Artist/album name\u0026#34;\n        TEXT entity_id \u0026#34;UUID for entities\u0026#34;\n        INTEGER artist_id \u0026#34;Database ID\u0026#34;\n        INTEGER album_id \u0026#34;Database ID\u0026#34;\n        TEXT playlist_id \u0026#34;For playlist items\u0026#34;\n        TEXT display_name \u0026#34;NOT NULL\u0026#34;\n        TEXT subtitle \u0026#34;For albums\u0026#34;\n        TEXT icon_name \u0026#34;NOT NULL\u0026#34;\n        INTEGER sort_order \u0026#34;NOT NULL DEFAULT 0\u0026#34;\n        DATETIME date_added \u0026#34;NOT NULL\u0026#34;\n    }\n\n    tracks_fts {\n        INTEGER track_id \u0026#34;NOT INDEXED\u0026#34;\n        TEXT title\n        TEXT artist\n        TEXT album\n        TEXT album_artist\n        TEXT composer\n        TEXT genre\n        TEXT year\n    }\n\n    folders ||--o{ tracks : contains\n    albums ||--o{ album_artists : \u0026#34;has artists\u0026#34;\n    artists ||--o{ album_artists : \u0026#34;appears on\u0026#34;\n    albums ||--o{ tracks : contains\n    artists ||--o{ track_artists : \u0026#34;appears in\u0026#34;\n    tracks ||--o{ track_artists : \u0026#34;has artists\u0026#34;\n    tracks ||--o| tracks : \u0026#34;duplicate of\u0026#34;\n    genres ||--o{ track_genres : \u0026#34;categorizes\u0026#34;\n    tracks ||--o{ track_genres : \u0026#34;has genres\u0026#34;\n    playlists ||--o{ playlist_tracks : contains\n    tracks ||--o{ playlist_tracks : \u0026#34;appears in\u0026#34;\n    tracks ||--|| tracks_fts : \u0026#34;searchable in\u0026#34;\n\u003c/pre\u003e\n    \u003c/div\u003e\n  \u003cspan role=\"presentation\"\u003e\n    \u003cspan data-view-component=\"true\"\u003e\n      \u003cspan\u003eLoading\u003c/span\u003e\n\u003c/span\u003e\n  \u003c/span\u003e\n\u003c/section\u003e\n\n\u003c/details\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003eSetup\u003c/h3\u003e\u003ca id=\"user-content-setup\" aria-label=\"Permalink: Setup\" href=\"#setup\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eMake sure you‚Äôre running macOS 14 or later.\u003c/li\u003e\n\u003cli\u003eInstall \u003ca href=\"https://developer.apple.com/xcode/\" rel=\"nofollow\"\u003eXcode\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eTo build the \u003ccode\u003e.dmg\u003c/code\u003e installer using the \u003ca href=\"https://github.com/kushalpandya/Petrichor/blob/main/Scripts/build-installer.sh\"\u003e\u003ccode\u003ebuild-installer.sh\u003c/code\u003e\u003c/a\u003e script, install:\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/xcpretty/xcpretty\"\u003excpretty\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/sindresorhus/create-dmg\"\u003ecreate-dmg\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eüìù License\u003c/h2\u003e\u003ca id=\"user-content--license\" aria-label=\"Permalink: üìù License\" href=\"#-license\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ca href=\"https://github.com/kushalpandya/Petrichor/blob/main/LICENSE\"\u003eMIT\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eüôè Credits\u003c/h2\u003e\u003ca id=\"user-content--credits\" aria-label=\"Permalink: üôè Credits\" href=\"#-credits\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/@twostraws\" rel=\"nofollow\"\u003ePaul Hudson\u003c/a\u003e for creating all those Swift tutorials!\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/sindresorhus/create-dmg\"\u003ecreate-dmg\u003c/a\u003e by awesome \u003ca href=\"https://sindresorhus.com/\" rel=\"nofollow\"\u003eSindre Sorhus\u003c/a\u003e!\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://claude.ai/\" rel=\"nofollow\"\u003eClaude by Anthropic\u003c/a\u003e for being a peer-programmer for this project!\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/article\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "9 min read",
  "publishedTime": null,
  "modifiedTime": null
}
