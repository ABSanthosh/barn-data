{
  "id": "92e0b069-47fb-4955-a2c9-a16386b037ae",
  "title": "The open source advantage: Faster bugs, better builds, wider buy-in",
  "link": "https://venturebeat.com/programming-development/the-open-source-advantage-faster-bugs-better-builds-wider-buy-in/",
  "description": "Open-sourcing is definitely not something to rush into. Here are some pros, cons and general advice based on experience.",
  "author": "Shauli Rozen, ARMO",
  "published": "Sat, 19 Apr 2025 19:05:00 +0000",
  "source": "https://feeds.feedburner.com/venturebeat/SZYF",
  "categories": [
    "DataDecisionMakers",
    "Programming \u0026 Development",
    "Bug Tracking and Test Management",
    "Linux Foundation",
    "Open source",
    "open source software",
    "Product Development"
  ],
  "byline": "Shauli Rozen, ARMO",
  "length": 8430,
  "excerpt": "Open-sourcing is definitely not something to rush into. Here are some pros, cons and general advice based on experience.",
  "siteName": "VentureBeat",
  "favicon": "",
  "text": "Join our daily and weekly newsletters for the latest updates and exclusive content on industry-leading AI coverage. Learn More Software companies have a lot of decisions to make as they move through the stages of building a thriving business. Among the many issues to debate is whether or not to open source their technology. It’s a big decision, and the licensing around open source receives a lot of attention in tech circles.  Part of the issue is that open source comes with a lot of strong opinions. Whenever a large company decides to restrict its license, even if it’s for valid reasons, they can receive a lot of backlash (as HashiCorp and Elastic learned in recent years). On the other hand, excellent tech that’s released as open source can quickly gather a lot of support from the open-source software (OSS) community.  It’s not easy for enterprises to decide which path to take. My company chose to release our cloud native security scanner, Kubescape, as open source through the Linux Foundation’s Cloud Native Computing Foundation (CNCF), and we’re extremely happy with the decision. In fact, Kubescape was recently promoted to incubating project status and is used by thousands of enterprises globally. Overall, we see it as a net benefit, but we did carefully weigh up the pros and cons before we took the plunge. It’s definitely not something to rush into, so I’m sharing some advice based on our experience.  Removing barriers to open source adoption DevOps teams have many good reasons to be reluctant to introduce new code into their clusters and environments: It could be full of bugs, undermine their security setup and/or mess up their existing configurations. Unless you’re offering a solution that’s entirely SaaS and doesn’t require any agent-based / in-cluster/on-prem installation, you’ll need to overcome these hesitations from DevOps.  Going open source can help with this. It signals transparency and accountability, and gives teams the opportunity to inspect code while contributing new code or opening issues that makes them part of the project and gives them the ability to influence its roadmap. They’re more likely to trust a solution that invites them to check the core code than one that asks them to trust a closed box. This trust is amplified if you donate your code to a foundation that has credibility and a lively community base with a strong “cool” factor. A reputable foundation helps validate the quality of your product and testifies that you’ve implemented the right review processes, cadences and governance. It’s even better when your OSS offering has already achieved significant traction, a large install base and a certain amount of popularity in the community.  Speed up continuous improvements Continuous improvement is more than just a slogan. You want to find and fix bugs and improve your offering as fast as possible, and the best way to do that is to ramp up usage. Going open source means that your technology gets road-tested in the real world by far more users than you could reach through private sales.  We found that our platform was present in more than 200,000 clusters at a time when we still had only several dozen enterprise customers. That enabled us to draw on the feedback, feature requests and validation of a massive user base, so we could learn and roll out improvements more quickly.  At the same time, adoption increased, partly due to our greater reach, and partly because our product was improving at such a rapid rate. It’s possible to use your open-source community as a test environment, then release changes in the enterprise version once you’ve incorporated feedback and the version is stable, or vice versa. It’s good to have the dual options running simultaneously.  Open source means less control Those are the main advantages, but there are also drawbacks to open source, and it’s vital to keep them in mind. The main downside is that when your product is open source, you can’t control how people use it. That’s especially true if you decide to open source it through a community forum, since you’re essentially handing over your trademarks to a vendor neutral foundation.  Despite the widespread trust throughout the open-source community, there will still be some who’ll just use your open-source code and avoid your for-pay versions and features. (Of course, you can and should consider these free users as part of your sales pipeline, and work to upgrade them to the enterprise version for additional features and benefits).  There will even be some people who’ll take your hard work and use it to build a commercial product and make money off your innovation and the work of the community that you built and curated. You need to make your peace with this, because you can’t stop it from happening.  Open source only works if it matches your user base One of the main factors in deciding open-source projects is your user base. You need to know and understand their concerns and motivations, so you can correctly predict how they’ll respond to an OSS offering. If your audience is very technical, such as security engineers, DevOps teams and developers, they’re more likely to fall into the pro-open source camp.  There’s a reason why we call it the ‘open-source community.’ Open source is more than just a license decision: It’s a set of shared beliefs, with participants who go way beyond customers. It’s closer to a religion or a cult than a purchasing choice. If your user base shares your love for the idea of open source, this path is a lot more likely to succeed.  Open-sourcing software requires a clear monetization model Establishing a firm pathway to monetization is crucial for any enterprise, but it’s doubly important for open-source companies. You have to be clear about how you’ll make your money, because open source could leave you without a strong cash flow.  For example, you might choose to make all your tech entirely open source for a year, to drive penetration and feedback, then introduce monetization methods. You could go open core, which is the route my company chose, where you offer your core code as open source, then sell additional services and features on top.  Many companies decide to offer both an OSS version and an enterprise version. This can work, but you need to strike the right balance between the functionality and support that’s included in the OSS version, and that which you provide only for paying customers. Another option is to set things up so that the open-source code can only be used in combination with the enterprise version. The OSS version doesn’t have any value except to demonstrate transparency. The thing to be aware of, though, is that this can conflict with working with a foundation. Once you open source, there’s no going back…kind of  Going open source is a very weighty decision. It doesn’t help that it’s pretty much a one-way street. You can move from closed source to open source, or from a more restrictive license to a more open license, whenever you like, and you’ll receive nothing but applause from the tech community.  But it can be very difficult to move in the other direction. All the code and information that you’ve already shared will be available to the public forever, so they can use it whenever and however they like. And as mentioned above, open source fans can be very critical of anyone who walks back their OSS offering, so they’re less likely to respect your code. HashiCorp learned this the hard way when fans forked Terraform after they changed from an NPL to a BSL license.  That said, open source can be awesome when the circumstances are right. If you’ve weighed up all the factors, your user base and tech offering align, and you’ve identified a reputable foundation that believes in your mission, you can benefit from a slew of advantages, like we have.  Shauli Rozen is the CEO and cofounder of ARMO and the creator of Kubescape. Daily insights on business use cases with VB Daily If you want to impress your boss, VB Daily has you covered. We give you the inside scoop on what companies are doing with generative AI, from regulatory shifts to practical deployments, so you can share insights for maximum ROI. Read our Privacy Policy Thanks for subscribing. Check out more VB newsletters here. An error occured.",
  "image": "https://venturebeat.com/wp-content/uploads/2025/04/upscalemedia-transformed_fd4bbe.webp?w=1024?w=1200\u0026strip=all",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"primary\"\u003e\n\n\t\t\u003carticle id=\"content\"\u003e\n\t\t\t\u003cdiv\u003e\n\t\t\t\t\u003cdiv id=\"boilerplate_2682874\"\u003e\n\u003cp\u003e\u003cem\u003eJoin our daily and weekly newsletters for the latest updates and exclusive content on industry-leading AI coverage. \u003ca href=\"https://venturebeat.com/newsletters/?utm_source=VBsite\u0026amp;utm_medium=desktopNav\" data-type=\"link\" data-id=\"https://venturebeat.com/newsletters/?utm_source=VBsite\u0026amp;utm_medium=desktopNav\"\u003eLearn More\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\n\n\u003chr/\u003e\n\u003c/div\u003e\u003cp\u003eSoftware companies have a lot of decisions to make as they move through the stages of building a thriving business. Among the many issues to debate is whether or not to open source their technology. It’s a big decision, and the licensing around \u003ca href=\"https://venturebeat.com/ai/the-open-source-ai-debate-why-selective-transparency-poses-a-serious-risk/\"\u003eopen source\u003c/a\u003e receives a lot of attention in tech circles. \u003c/p\u003e\n\n\n\n\u003cp\u003ePart of the issue is that open source comes with a lot of strong opinions. Whenever a large company decides to restrict its license, even if it’s for valid reasons, they can receive a lot of backlash (as HashiCorp and Elastic learned in recent years). On the other hand, excellent tech that’s released as open source can quickly gather a lot of support from the open-source software (OSS) community. \u003c/p\u003e\n\n\n\n\u003cp\u003eIt’s not easy for enterprises to decide which path to take. My company chose to release our cloud native security scanner, Kubescape, as open source through the Linux Foundation’s Cloud Native Computing Foundation (CNCF), and we’re extremely happy with the decision. In fact, Kubescape was recently promoted to incubating project status and is used by thousands of enterprises globally. Overall, we see it as a net benefit, but we did carefully weigh up the pros and cons before we took the plunge. It’s definitely not something to rush into, so I’m sharing some advice based on our experience. \u003c/p\u003e\n\n\n\n\u003ch2 id=\"h-removing-barriers-to-open-source-adoption\"\u003eRemoving barriers to open source adoption\u003c/h2\u003e\n\n\n\n\u003cp\u003eDevOps teams have many good reasons to be reluctant to introduce new code into their clusters and environments: It could be full of bugs, undermine their security setup and/or mess up their existing configurations. Unless you’re offering a solution that’s entirely SaaS and doesn’t require any agent-based / in-cluster/on-prem installation, you’ll need to overcome these hesitations from DevOps. \u003c/p\u003e\n\n\n\n\u003cp\u003eGoing open source can help with this. It signals transparency and accountability, and gives teams the opportunity to inspect code while contributing new code or opening issues that makes them part of the project and gives them the ability to influence its roadmap. They’re more likely to trust a solution that invites them to check the core code than one that asks them to trust a closed box.\u003c/p\u003e\n\n\n\n\u003cp\u003eThis trust is amplified if you donate your code to a foundation that has credibility and a lively community base with a strong “cool” factor. A reputable foundation helps validate the quality of your product and testifies that you’ve implemented the \u003ca href=\"https://venturebeat.com/ai/bigger-isnt-always-better-examining-the-business-case-for-multi-million-token-llms/\"\u003eright review processes,\u003c/a\u003e cadences and governance. It’s even better when your OSS offering has already achieved significant traction, a large install base and a certain amount of popularity in the community. \u003c/p\u003e\n\n\n\n\u003ch2 id=\"h-speed-up-continuous-improvements\"\u003eSpeed up continuous improvements\u003c/h2\u003e\n\n\n\n\u003cp\u003eContinuous improvement is more than just a slogan. You want to find and fix bugs and improve your offering as fast as possible, and the best way to do that is to ramp up usage. Going open source means that your technology gets road-tested in the real world by far more users than you could reach through private sales. \u003c/p\u003e\n\n\n\n\u003cp\u003eWe found that our platform was present in more than \u003ca href=\"https://venturebeat.com/ai/mips-to-exaflops-in-just-40-years-compute-power-is-exploding-and-it-will-transform-ai/\"\u003e200,000 clusters\u003c/a\u003e at a time when we still had only several dozen enterprise customers. That enabled us to draw on the feedback, feature requests and validation of a massive user base, so we could learn and roll out improvements more quickly. \u003c/p\u003e\n\n\n\n\u003cp\u003eAt the same time, adoption increased, partly due to our greater reach, and partly because our product was improving at such a rapid rate. It’s possible to use your open-source community as a test environment, then release changes in the enterprise version once you’ve incorporated feedback and the version is stable, or vice versa. It’s good to have the dual options running simultaneously. \u003c/p\u003e\n\n\n\n\u003ch2 id=\"h-open-source-means-less-control\"\u003eOpen source means less control\u003c/h2\u003e\n\n\n\n\u003cp\u003eThose are the main advantages, but there are also drawbacks to open source, and it’s vital to keep them in mind. The main downside is that when your product is open source, you can’t control how people use it. That’s especially true if you decide to open source it through a community forum, since you’re essentially handing over your trademarks to a vendor neutral foundation. \u003c/p\u003e\n\n\n\n\u003cp\u003eDespite the widespread trust throughout the open-source community, there will still be some who’ll just use your open-source code and avoid your for-pay versions and features. (Of course, you can and should consider these free users as part of your sales pipeline, and work to upgrade them to the enterprise version for additional features and benefits). \u003c/p\u003e\n\n\n\n\u003cp\u003eThere will even be some people who’ll take your hard work and use it to build a commercial product and make money off your innovation and the work of the community that you built and curated. You need to make your peace with this, because you can’t stop it from happening. \u003c/p\u003e\n\n\n\n\u003ch2 id=\"h-open-source-only-works-if-it-matches-your-user-base\"\u003eOpen source only works if it matches your user base\u003c/h2\u003e\n\n\n\n\u003cp\u003eOne of the main factors in deciding open-source projects is your user base. You need to know and understand their concerns and motivations, so you can correctly predict how they’ll respond to an OSS offering. If your audience is very technical, such as security engineers, DevOps teams and developers, they’re more likely to fall into the pro-open source camp. \u003c/p\u003e\n\n\n\n\u003cp\u003eThere’s a reason why we call it the ‘open-source community.’ Open source is more than just a license decision: It’s a set of shared beliefs, with participants who go way beyond customers. It’s closer to a religion or a cult than a purchasing choice. If your user base shares your love for the idea of open source, this path is a lot more likely to succeed. \u003c/p\u003e\n\n\n\n\u003ch2 id=\"h-open-sourcing-software-requires-a-clear-monetization-model\"\u003eOpen-sourcing software requires a clear monetization model\u003c/h2\u003e\n\n\n\n\u003cp\u003eEstablishing a firm pathway to monetization is crucial for any enterprise, but it’s doubly important for open-source companies. You have to be clear about how you’ll make your money, because open source could leave you without a strong cash flow. \u003c/p\u003e\n\n\n\n\u003cp\u003eFor example, you might choose to make all your tech entirely open source for a year, to drive penetration and feedback, then introduce monetization methods. You could go open core, which is the route my company chose, where you offer your core code as open source, then sell additional services and features on top. \u003c/p\u003e\n\n\n\n\u003cp\u003eMany companies decide to offer both an OSS version and an enterprise version. This can work, but you need to strike the right balance between the functionality and support that’s included in the OSS version, and that which you provide only for paying customers. Another option is to set things up so that the open-source code can only be used in combination with the enterprise version. The OSS version doesn’t have any value except to demonstrate transparency. The thing to be aware of, though, is that this can conflict with working with a foundation.\u003c/p\u003e\n\n\n\n\u003ch2 id=\"h-once-you-open-source-there-s-no-going-back-kind-of\"\u003eOnce you open source, there’s no going back…kind of \u003c/h2\u003e\n\n\n\n\u003cp\u003eGoing open source is a very weighty decision. It doesn’t help that it’s pretty much a one-way street. You can move from closed source to open source, or from a more restrictive license to a more open license, whenever you like, and you’ll receive nothing but applause from the tech community. \u003c/p\u003e\n\n\n\n\u003cp\u003eBut it can be very difficult to move in the other direction. All the code and information that you’ve already shared will be available to the public forever, so they can use it whenever and however they like. And as mentioned above, open source fans can be very critical of anyone who walks back their OSS offering, so they’re less likely to respect your code. HashiCorp learned this the hard way when fans forked Terraform after they changed from an NPL to a BSL license. \u003c/p\u003e\n\n\n\n\u003cp\u003eThat said, open source can be awesome when the circumstances are right. If you’ve weighed up all the factors, your user base and tech offering align, and you’ve identified a reputable foundation that believes in your mission, you can benefit from a slew of advantages, like we have. \u003c/p\u003e\n\n\n\n\u003cp\u003eShauli Rozen is the CEO and cofounder of \u003ca href=\"http://www.armosec.io/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eARMO\u003c/a\u003e and the creator of \u003ca href=\"https://kubescape.io/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eKubescape\u003c/a\u003e.\u003c/p\u003e\n\u003cdiv id=\"boilerplate_2660155\"\u003e\n\t\t\t\u003cdiv\u003e\n\t\t\t\t\u003cp\u003e\u003cstrong\u003eDaily insights on business use cases with VB Daily\u003c/strong\u003e\u003c/p\u003e\n\t\t\t\t\u003cp\u003eIf you want to impress your boss, VB Daily has you covered. We give you the inside scoop on what companies are doing with generative AI, from regulatory shifts to practical deployments, so you can share insights for maximum ROI.\u003c/p\u003e\n\t\t\t\t\n\t\t\t\t\u003cp\u003eRead our \u003ca href=\"https://venturebeat.com/terms-of-service/\"\u003ePrivacy Policy\u003c/a\u003e\u003c/p\u003e\n\t\t\t\t\u003cp id=\"boilerplateNewsletterConfirmation\"\u003e\n\t\t\t\t\tThanks for subscribing. Check out more \u003ca href=\"https://venturebeat.com/newsletters/\"\u003eVB newsletters here\u003c/a\u003e.\n\t\t\t\t\u003c/p\u003e\n\t\t\t\t\u003cp\u003eAn error occured.\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003cp\u003e\u003cimg src=\"https://venturebeat.com/wp-content/themes/vb-news/brand/img/vb-daily-phone.png\" alt=\"\"/\u003e\n\t\t\t\t\u003c/p\u003e\n\t\t\t\n\t\t\u003c/div\u003e\t\t\t\u003c/div\u003e\n\n\t\t\t\t\t\t\t\n\t\t\t\n\t\t\u003c/article\u003e\n\n\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "9 min read",
  "publishedTime": "2025-04-19T19:05:00Z",
  "modifiedTime": "2025-04-18T21:51:44Z"
}
