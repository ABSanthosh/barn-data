{
  "id": "641a9ec5-8a93-4f3f-9f16-f0314fc6f63a",
  "title": "It's unlikely that there will be any further releases of mt32-pi",
  "link": "https://github.com/dwhinham/mt32-pi/blob/075b52809e77420c6e80828825fe42430336b369/README.md",
  "description": "Article URL: https://github.com/dwhinham/mt32-pi/blob/075b52809e77420c6e80828825fe42430336b369/README.md Comments URL: https://news.ycombinator.com/item?id=42955613 Points: 104 # Comments: 36",
  "author": "nickt",
  "published": "Wed, 05 Feb 2025 21:42:20 +0000",
  "source": "https://hnrss.org/frontpage",
  "categories": null,
  "byline": "",
  "length": 7298,
  "excerpt": "üéπüé∂ A baremetal kernel that turns your Raspberry Pi 3 or later into a Roland MT-32 emulator and SoundFont synthesizer based on Circle, Munt, and FluidSynth. - dwhinham/mt32-pi",
  "siteName": "GitHub",
  "favicon": "https://github.com/fluidicon.png",
  "text": "Please note It's unlikely that there will be any further releases of mt32-pi. I have endured a sustained campaign of abuse from members of the VOGONS forum, been labelled a \"clout-chaser\", had threats sent to my personal email address, code been used in other projects without proper accreditation, my 3D print designs stolen and sold by faceless eBay/Etsy sellers, personal attacks made towards me when people don't get their feature request... the list goes on and on. There is only so much I can take. My mental health has been in decline as a direct result of this behavior; the joy of working on this project has pretty much gone. There is nothing to be gained from putting time and hard work into it any more. There is no gratitude, no encouragement - just entitled behavior and grift. To those who supported this project in the past, especially whilst I was a struggling student who needed all the uplift I could get, thank you sincerely. A work-in-progress baremetal MIDI synthesizer for the Raspberry Pi 3 or above, based on Munt, FluidSynth and Circle. Turn your Raspberry Pi into a dedicated emulation of the famous multi-timbre sound module used by countless classic MS-DOS, PC-98 and Sharp X68000 games! Add your favorite SoundFonts to expand your synthesizer with General MIDI, Roland GS, or even Yamaha XG support for endless MIDI possibilities. Includes General MIDI and Roland GS support out of the box thanks to GeneralUser GS by S. Christian Collins. No operating system, no complex Linux audio configuration; just super-low latency audio. Easy to configure and ready to play from cold-boot in a matter of seconds. The perfect companion for your vintage PC or MiSTer FPGA setup. ‚úîÔ∏è Project status Supports Raspberry Pi Zero 2 W, Raspberry Pi 3 Model A+, B, and B+, Raspberry Pi 4 Model B, and CM4 series. Pi 2 works, but only with concessions on playback quality. Pi Zero (original) and Pi 1 are unfortunately too slow (even with an overclock) and unsupported. PWM headphone jack audio. Quality is known to be poor (aliasing/distortion on quieter sounds). It is not currently known whether this can be improved or not. I¬≤S Hi-Fi DAC support. This is the recommended audio output method for the best quality audio. MIDI input via USB, GPIO MIDI interfaces, or the serial port. Configuration file for selecting hardware options and fine tuning. LCD status screen support (for MT-32 SysEx messages and status information). Simple physical control surface using buttons and rotary encoder. MiSTer FPGA integration via user port. Network MIDI support via RTP-MIDI and raw UDP socket. Embedded FTP server for remote access to files. A user interface with menu system is planned. More advanced MIDI routing is planned. ‚ú® Quick-start guide üÜï If you have a Linux computer or MiSTer FPGA device, you may wish to try the new interactive mt32-pi installer script. Otherwise, for a manual installation: Download the latest release from the Releases section. If you are updating an old version, read the Updating mt32-pi wiki page for the correct procedure. Extract contents to a blank FAT32-formatted SD card. Read the SD card preparation wiki page for hints on formatting an SD card correctly (especially under Windows). For MT-32 support, add your MT-32 or CM-32L ROM images to the roms directory - you have to provide these for copyright reasons. You will need at least one control ROM and one PCM ROM. For information on using multiple ROM sets and switching between them, see the MT-32 synthesis wiki page. The file names or extensions don't matter; mt32-pi will scan and detect their types automatically. Optionally add your favorite SoundFonts to the soundfonts directory. For information on using multiple SoundFonts and switching between them, see the SoundFont synthesis wiki page. Again, file names/extensions don't matter. Edit the mt32-pi.cfg file to enable any optional hardware (Hi-Fi DAC, displays, buttons). Refer to the wiki to find supported hardware. MiSTer users: Read the MiSTer setup section of the wiki for the recommended configuration, and ignore the following two steps. Connect a USB MIDI interface or GPIO MIDI circuit to the Pi, and connect some speakers to the headphone jack. Connect your vintage PC's MIDI OUT to the Pi's MIDI IN and (optionally) vice versa. üìö Documentation More detailed documentation for mt32-pi can now be found over at the mt32-pi wiki. Please read the wiki pages to learn about all of mt32-pi's features and supported hardware, and consider helping us improve it! ‚ùì Help Take a look at our FAQ page for answers to the most common questions about mt32-pi. If you need some help with mt32-pi and the wiki doesn't answer your questions, head over to the discussions area and feel free to start a topic. ‚ö† Note: Please don't use the Issues area to ask for help - Issues are intended for reproducible bug reports and feature requests. Thank you! ‚ù§Ô∏è Contributing This project is generally quite stable and very usable, but still considered by its author to be in early stages of development. Hence, please DO NOT work on large features and open pull requests without prior discussion. There is a strong possibility that work-in-progress code for proposed features already exists, but may not yet be public, and your work will have to be rejected. Trivial changes to the code that fix issues are always welcome, as are improvements to documentation, and hardware/software compatibility reports. ‚öñÔ∏è License This project's source code is licensed under the GNU General Public License v3.0. The mt32-pi logo was designed by and is ¬© Dale Whinham. The terms of use for the logo are as follows: The logo MAY be used on open-source community hardware. The logo MAY be used to link back to this repository or for similar promotional purposes of a strictly non-commercial nature (e.g. blog posts, social media, YouTube videos). The logo MUST NOT be used on or for the marketing of closed-source or commercial hardware (e.g. case designs, PCBs), without express permission. The logo MUST NOT be used for any other commercial products or purposes without express permission. The shape and overall design of the logo MUST NOT be modified or distorted. You MAY change the colors if required. If in any doubt, please ask. Thank you. üôå Acknowledgments Many thanks go out to @rc55 and @nswaldman for their encouragement and testing! ‚ù§Ô∏è A huge thank you to everyone who has donated via Ko-fi, PayPal, or Amazon - your support means a lot! ‚ù§Ô∏è Special thanks to Edu Arana (Arananet), Porkchop Express (MiSTerAddons), @djhardrich, Nat (MiSTerFPGA.co.uk), Ricardo Saraiva (UltimateMiSTer.com), Serge Defever (Serdashop), and @opjose who have all generously donated hardware to the project. The Munt team for their incredible work reverse-engineering the Roland MT-32 and producing an excellent emulation and well-structured project. The FluidSynth team for their excellent and easily-portable SoundFont synthesizer project. S. Christian Collins for the excellent GeneralUser GS SoundFont and for kindly giving permission to include it in the project. The Circle and circle-stdlib projects for providing the best C++ baremetal framework for the Raspberry Pi. The inih project for a nice, lightweight config file parser.",
  "image": "https://repository-images.githubusercontent.com/79130283/11c9d380-4fd5-11eb-9351-ff88511bb688",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv data-hpc=\"true\" aria-labelledby=\"file-name-id-wide file-name-id-mobile\"\u003e\u003carticle itemprop=\"text\"\u003e\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003ePlease note\u003c/h2\u003e\u003ca id=\"user-content-please-note\" aria-label=\"Permalink: Please note\" href=\"#please-note\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003cstrong\u003eIt\u0026#39;s unlikely that there will be any further releases of mt32-pi.\u003c/strong\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eI have endured a sustained campaign of abuse from members of the VOGONS forum, been labelled a \u0026#34;clout-chaser\u0026#34;, had threats sent to my personal email address, code been used in other projects without proper accreditation, my 3D print designs stolen and sold by faceless eBay/Etsy sellers, personal attacks made towards me when people don\u0026#39;t get their feature request... the list goes on and on.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003cem\u003eThere is only so much I can take.\u003c/em\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eMy mental health has been in decline as a direct result of this behavior; the joy of working on this project has pretty much gone. There is nothing to be gained from putting time and hard work into it any more. There is no gratitude, no encouragement - just entitled behavior and grift.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eTo those who supported this project in the past, especially whilst I was a struggling student who needed all the uplift I could get, thank you sincerely.\u003c/p\u003e\n\u003chr/\u003e\n\u003cp dir=\"auto\"\u003e\u003ca href=\"https://github.com/dwhinham/mt32-pi/actions?query=workflow:%22mt32-pi+CI%22\"\u003e\u003cimg src=\"https://github.com/dwhinham/mt32-pi/workflows/mt32-pi%20CI/badge.svg\" alt=\"mt32-pi CI\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cdiv dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003e\n    \u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/dwhinham/mt32-pi/blob/075b52809e77420c6e80828825fe42430336b369/images/mt32pi_logo.svg\"\u003e\u003cimg width=\"90%\" title=\"mt32-pi - Baremetal synthesizer system\" src=\"https://github.com/dwhinham/mt32-pi/raw/075b52809e77420c6e80828825fe42430336b369/images/mt32pi_logo.svg\"/\u003e\u003c/a\u003e\n\u003c/h2\u003e\u003ca id=\"user-content-----\" aria-label=\"Permalink: \" href=\"#----\"\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eA work-in-progress baremetal MIDI synthesizer for the Raspberry Pi 3 or above, based on \u003ca href=\"https://github.com/munt/munt\"\u003eMunt\u003c/a\u003e, \u003ca href=\"http://www.fluidsynth.org\" rel=\"nofollow\"\u003eFluidSynth\u003c/a\u003e and \u003ca href=\"https://github.com/rsta2/circle\"\u003eCircle\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eTurn your Raspberry Pi into a dedicated emulation of the \u003ca href=\"https://en.wikipedia.org/wiki/Roland_MT-32\" rel=\"nofollow\"\u003efamous multi-timbre sound module\u003c/a\u003e used by countless classic MS-DOS, PC-98 and Sharp X68000 games!\u003c/li\u003e\n\u003cli\u003eAdd your favorite \u003ca href=\"https://en.wikipedia.org/wiki/SoundFont\" rel=\"nofollow\"\u003eSoundFonts\u003c/a\u003e to expand your synthesizer with \u003ca href=\"https://en.wikipedia.org/wiki/General_MIDI\" rel=\"nofollow\"\u003eGeneral MIDI\u003c/a\u003e, \u003ca href=\"https://en.wikipedia.org/wiki/Roland_GS\" rel=\"nofollow\"\u003eRoland GS\u003c/a\u003e, or even \u003ca href=\"https://en.wikipedia.org/wiki/Yamaha_XG\" rel=\"nofollow\"\u003eYamaha XG\u003c/a\u003e support for endless MIDI possibilities.\u003c/li\u003e\n\u003cli\u003eIncludes General MIDI and Roland GS support out of the box thanks to \u003ca href=\"http://schristiancollins.com/generaluser.php\" rel=\"nofollow\"\u003eGeneralUser GS\u003c/a\u003e by S. Christian Collins.\u003c/li\u003e\n\u003cli\u003eNo operating system, no complex Linux audio configuration; just super-low latency audio.\u003c/li\u003e\n\u003cli\u003eEasy to configure and ready to play from cold-boot in a matter of seconds.\u003c/li\u003e\n\u003cli\u003eThe perfect companion for your vintage PC or \u003ca href=\"https://github.com/dwhinham/mt32-pi/wiki/MiSTer-FPGA\"\u003eMiSTer FPGA\u003c/a\u003e setup.\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr/\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003e‚úîÔ∏è Project status\u003c/h2\u003e\u003ca id=\"user-content-Ô∏è-project-status\" aria-label=\"Permalink: ‚úîÔ∏è Project status\" href=\"#Ô∏è-project-status\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/dwhinham/mt32-pi/blob/075b52809e77420c6e80828825fe42430336b369/images/mt32pi_pimidi.png\"\u003e\u003cimg title=\"mt32-pi running on the Raspberry Pi 3 A+ with the Arananet PI-MIDI HAT.\" width=\"280rem\" src=\"https://github.com/dwhinham/mt32-pi/raw/075b52809e77420c6e80828825fe42430336b369/images/mt32pi_pimidi.png\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eSupports Raspberry Pi Zero 2 W, Raspberry Pi 3 Model A+, B, and B+, Raspberry Pi 4 Model B, and CM4 series.\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003ePi 2 works, but only with concessions on playback quality.\u003c/li\u003e\n\u003cli\u003ePi Zero (original) and Pi 1 are unfortunately too slow (even with an overclock) and unsupported.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ePWM headphone jack audio.\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eQuality is known to be poor (aliasing/distortion on quieter sounds).\u003c/li\u003e\n\u003cli\u003eIt is not currently known whether this can be improved or not.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/dwhinham/mt32-pi/wiki/I%C2%B2S-DACs\"\u003eI¬≤S Hi-Fi DAC support\u003c/a\u003e.\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eThis is the recommended audio output method for the best quality audio.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eMIDI input via \u003ca href=\"https://github.com/dwhinham/mt32-pi/wiki/USB-MIDI-interfaces\"\u003eUSB\u003c/a\u003e, \u003ca href=\"https://github.com/dwhinham/mt32-pi/wiki/GPIO-MIDI-interface\"\u003eGPIO\u003c/a\u003e MIDI interfaces, or the \u003ca href=\"https://github.com/dwhinham/mt32-pi/wiki/MIDI-via-RS-232-or-USB-to-serial\"\u003eserial port\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/dwhinham/mt32-pi/wiki/Configuration-file\"\u003eConfiguration file\u003c/a\u003e for selecting hardware options and fine tuning.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/dwhinham/mt32-pi/wiki/LCD-and-OLED-displays\"\u003eLCD status screen support\u003c/a\u003e (for MT-32 SysEx messages and status information).\u003c/li\u003e\n\u003cli\u003eSimple \u003ca href=\"https://github.com/dwhinham/mt32-pi/wiki/Control-surface\"\u003ephysical control surface\u003c/a\u003e using buttons and rotary encoder.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/dwhinham/mt32-pi/wiki/MiSTer-FPGA\"\u003eMiSTer FPGA integration via user port\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eNetwork MIDI support via \u003ca href=\"https://github.com/dwhinham/mt32-pi/wiki/Networking%3A-RTP-MIDI-%28AppleMIDI%29\"\u003eRTP-MIDI\u003c/a\u003e and \u003ca href=\"https://github.com/dwhinham/mt32-pi/wiki/Networking%3A-UDP-MIDI\"\u003eraw UDP socket\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/dwhinham/mt32-pi/wiki/Embedded-FTP-server\"\u003eEmbedded FTP server\u003c/a\u003e for remote access to files.\u003c/li\u003e\n\u003cli\u003eA user interface with menu system is \u003cem\u003eplanned\u003c/em\u003e.\u003c/li\u003e\n\u003cli\u003eMore advanced MIDI routing is \u003cem\u003eplanned\u003c/em\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003e‚ú® Quick-start guide\u003c/h2\u003e\u003ca id=\"user-content--quick-start-guide\" aria-label=\"Permalink: ‚ú® Quick-start guide\" href=\"#-quick-start-guide\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eüÜï If you have a Linux computer or MiSTer FPGA device, you may wish to try the new interactive \u003ca href=\"https://github.com/dwhinham/mt32-pi/blob/075b52809e77420c6e80828825fe42430336b369/scripts\"\u003emt32-pi installer script\u003c/a\u003e.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eOtherwise, for a manual installation:\u003c/p\u003e\n\u003col dir=\"auto\"\u003e\n\u003cli\u003eDownload the latest release from the \u003ca href=\"https://github.com/dwhinham/mt32-pi/releases\"\u003eReleases\u003c/a\u003e section.\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eIf you are \u003cstrong\u003eupdating an old version\u003c/strong\u003e, read the \u003ca href=\"https://github.com/dwhinham/mt32-pi/wiki/Updating-mt32-pi\"\u003eUpdating mt32-pi\u003c/a\u003e wiki page for the correct procedure.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eExtract contents to a blank \u003ca href=\"https://github.com/dwhinham/mt32-pi/wiki/SD-card-preparation\"\u003eFAT32-formatted SD card\u003c/a\u003e.\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eRead the \u003ca href=\"https://github.com/dwhinham/mt32-pi/wiki/SD-card-preparation\"\u003eSD card preparation\u003c/a\u003e wiki page for hints on formatting an SD card correctly (especially under Windows).\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eFor MT-32 support, add your MT-32 or CM-32L ROM images to the \u003ccode\u003eroms\u003c/code\u003e directory - you have to provide these for copyright reasons.\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eYou will need at least one control ROM and one PCM ROM.\u003c/li\u003e\n\u003cli\u003eFor information on using multiple ROM sets and switching between them, see the \u003ca href=\"https://github.com/dwhinham/mt32-pi/wiki/MT-32-synthesis\"\u003eMT-32 synthesis\u003c/a\u003e wiki page.\u003c/li\u003e\n\u003cli\u003eThe file names or extensions don\u0026#39;t matter; mt32-pi will scan and detect their types automatically.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eOptionally add your favorite SoundFonts to the \u003ccode\u003esoundfonts\u003c/code\u003e directory.\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eFor information on using multiple SoundFonts and switching between them, see the \u003ca href=\"https://github.com/dwhinham/mt32-pi/wiki/SoundFont-synthesis\"\u003eSoundFont synthesis\u003c/a\u003e wiki page.\u003c/li\u003e\n\u003cli\u003eAgain, file names/extensions don\u0026#39;t matter.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eEdit the \u003ccode\u003emt32-pi.cfg\u003c/code\u003e file to enable any optional hardware (Hi-Fi DAC, displays, buttons). Refer to \u003ca href=\"https://github.com/dwhinham/mt32-pi/wiki\"\u003ethe wiki\u003c/a\u003e to find supported hardware.\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003e\u003cstrong\u003eMiSTer users\u003c/strong\u003e: Read the \u003ca href=\"https://github.com/dwhinham/mt32-pi/wiki/MiSTer-FPGA%3A-Setup-and-usage\"\u003eMiSTer setup\u003c/a\u003e section of the wiki for the recommended configuration, and ignore the following two steps.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eConnect a \u003ca href=\"https://github.com/dwhinham/mt32-pi/wiki/USB-MIDI-interfaces\"\u003eUSB MIDI interface\u003c/a\u003e or \u003ca href=\"https://github.com/dwhinham/mt32-pi/wiki/GPIO-MIDI-interface\"\u003eGPIO MIDI circuit\u003c/a\u003e to the Pi, and connect some speakers to the headphone jack.\u003c/li\u003e\n\u003cli\u003eConnect your vintage PC\u0026#39;s MIDI OUT to the Pi\u0026#39;s MIDI IN and (optionally) vice versa.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eüìö Documentation\u003c/h2\u003e\u003ca id=\"user-content--documentation\" aria-label=\"Permalink: üìö Documentation\" href=\"#-documentation\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eMore detailed documentation for mt32-pi can now be found over at the \u003ca href=\"https://github.com/dwhinham/mt32-pi/wiki\"\u003emt32-pi wiki\u003c/a\u003e. Please read the wiki pages to learn about all of mt32-pi\u0026#39;s features and supported hardware, and consider helping us improve it!\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003e‚ùì Help\u003c/h2\u003e\u003ca id=\"user-content--help\" aria-label=\"Permalink: ‚ùì Help\" href=\"#-help\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eTake a look at our \u003ca href=\"https://github.com/dwhinham/mt32-pi/wiki/FAQ\"\u003eFAQ\u003c/a\u003e page for answers to the most common questions about mt32-pi.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eIf you need some help with mt32-pi and the wiki doesn\u0026#39;t answer your questions, head over to the \u003ca href=\"https://github.com/dwhinham/mt32-pi/discussions\"\u003ediscussions\u003c/a\u003e area and feel free to start a topic.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp dir=\"auto\"\u003e‚ö† \u003cstrong\u003eNote\u003c/strong\u003e: Please don\u0026#39;t use the Issues area to ask for help - Issues are intended for reproducible bug reports and feature requests. Thank you!\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003e‚ù§Ô∏è Contributing\u003c/h2\u003e\u003ca id=\"user-content-Ô∏è-contributing\" aria-label=\"Permalink: ‚ù§Ô∏è Contributing\" href=\"#Ô∏è-contributing\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eThis project is generally quite stable and very usable, but still considered by its author to be in early stages of development.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eHence, please \u003cstrong\u003eDO NOT\u003c/strong\u003e work on large features and open pull requests without prior discussion. There is a strong possibility that work-in-progress code for proposed features already exists, but may not yet be public, and your work will have to be rejected.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eTrivial changes to the code that fix issues are always welcome, as are improvements to documentation, and hardware/software compatibility reports.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003e‚öñÔ∏è License\u003c/h2\u003e\u003ca id=\"user-content-Ô∏è-license\" aria-label=\"Permalink: ‚öñÔ∏è License\" href=\"#Ô∏è-license\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eThis project\u0026#39;s source code is licensed under the \u003ca href=\"https://github.com/dwhinham/mt32-pi/blob/master/LICENSE\"\u003eGNU General Public License v3.0\u003c/a\u003e.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eThe \u003ca href=\"https://github.com/dwhinham/mt32-pi/blob/master/images/mt32pi_logo.svg\"\u003emt32-pi logo\u003c/a\u003e was designed by and is ¬© Dale Whinham. The terms of use for the logo are as follows:\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eThe logo \u003cstrong\u003eMAY\u003c/strong\u003e be used on open-source community hardware.\u003c/li\u003e\n\u003cli\u003eThe logo \u003cstrong\u003eMAY\u003c/strong\u003e be used to link back to this repository or for similar promotional purposes of a strictly \u003cstrong\u003enon-commercial nature\u003c/strong\u003e (e.g. blog posts, social media, YouTube videos).\u003c/li\u003e\n\u003cli\u003eThe logo \u003cstrong\u003eMUST NOT\u003c/strong\u003e be used on or for the marketing of closed-source or commercial hardware (e.g. case designs, PCBs), without express permission.\u003c/li\u003e\n\u003cli\u003eThe logo \u003cstrong\u003eMUST NOT\u003c/strong\u003e be used for any other commercial products or purposes without express permission.\u003c/li\u003e\n\u003cli\u003eThe shape and overall design of the logo \u003cstrong\u003eMUST NOT\u003c/strong\u003e be modified or distorted. You \u003cstrong\u003eMAY\u003c/strong\u003e change the colors if required.\u003c/li\u003e\n\u003cli\u003eIf in any doubt, please ask. Thank you.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eüôå Acknowledgments\u003c/h2\u003e\u003ca id=\"user-content--acknowledgments\" aria-label=\"Permalink: üôå Acknowledgments\" href=\"#-acknowledgments\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eMany thanks go out to @rc55 and @nswaldman for their encouragement and testing! ‚ù§Ô∏è\u003c/li\u003e\n\u003cli\u003eA huge thank you to everyone who has donated via Ko-fi, PayPal, or Amazon - your support means a lot! ‚ù§Ô∏è\u003c/li\u003e\n\u003cli\u003eSpecial thanks to \u003ca href=\"https://www.arananet.net/pedidos\" rel=\"nofollow\"\u003eEdu Arana (Arananet)\u003c/a\u003e, \u003ca href=\"https://misteraddons.com\" rel=\"nofollow\"\u003ePorkchop Express (MiSTerAddons)\u003c/a\u003e, @djhardrich, \u003ca href=\"https://misterfpga.co.uk\" rel=\"nofollow\"\u003eNat (MiSTerFPGA.co.uk)\u003c/a\u003e, \u003ca href=\"https://ultimatemister.com\" rel=\"nofollow\"\u003eRicardo Saraiva (UltimateMiSTer.com)\u003c/a\u003e, \u003ca href=\"http://serdashop.com\" rel=\"nofollow\"\u003eSerge Defever (Serdashop)\u003c/a\u003e, and @opjose who have all generously donated hardware to the project.\u003c/li\u003e\n\u003cli\u003eThe \u003ca href=\"https://github.com/munt/munt\"\u003eMunt\u003c/a\u003e team for their incredible work reverse-engineering the Roland MT-32 and producing an excellent emulation and well-structured project.\u003c/li\u003e\n\u003cli\u003eThe \u003ca href=\"http://www.fluidsynth.org\" rel=\"nofollow\"\u003eFluidSynth\u003c/a\u003e team for their excellent and easily-portable SoundFont synthesizer project.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://schristiancollins.com/generaluser.php\" rel=\"nofollow\"\u003eS. Christian Collins\u003c/a\u003e for the excellent GeneralUser GS SoundFont and for kindly giving permission to include it in the project.\u003c/li\u003e\n\u003cli\u003eThe \u003ca href=\"https://github.com/rsta2/circle\"\u003eCircle\u003c/a\u003e and \u003ca href=\"https://github.com/smuehlst/circle-stdlib\"\u003ecircle-stdlib\u003c/a\u003e projects for providing the best C++ baremetal framework for the Raspberry Pi.\u003c/li\u003e\n\u003cli\u003eThe \u003ca href=\"https://github.com/benhoyt/inih\"\u003einih\u003c/a\u003e project for a nice, lightweight config file parser.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/article\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "8 min read",
  "publishedTime": null,
  "modifiedTime": null
}
