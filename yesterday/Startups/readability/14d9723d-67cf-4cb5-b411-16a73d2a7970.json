{
  "id": "14d9723d-67cf-4cb5-b411-16a73d2a7970",
  "title": "Show HN: Performant intracontinental public transport routing in Rust",
  "link": "https://github.com/ellenhp/farebox",
  "description": "I made a public transport route planning program that's capable of planning journeys across Europe or North America! There's only one other FOSS project I know of (MOTIS/Transitous) that can do transit routing at this scale, and in the testing I've performed mine is about 50x faster. I've spent a few weeks on this project now and it's getting to the point where I can show it off, but the API responses need a lot of work before they're usable for any downstream application.Example query (Berlin to Barcelona): https://farebox.airmail.rs/plan/52.5176122,13.4180261/41.380...There are some bugs still. Notably, it's not capable of planning the return trip for this route, nor the reverse of the trip from Seattle to NYC that I gave in the blog post.Blog post: https://blog.ellenhp.me/performant-intracontinental-transit-...Repo: https://github.com/ellenhp/fareboxSide-note but in the past some have criticized my writing style and it's been a bit hurtful at times but if you have constructive feedback on the blog post I'd appreciate it. I'm trying to get better at writing. :) Comments URL: https://news.ycombinator.com/item?id=42413464 Points: 3 # Comments: 0",
  "author": "ellenhp",
  "published": "Sat, 14 Dec 2024 00:00:28 +0000",
  "source": "https://hnrss.org/frontpage",
  "categories": null,
  "byline": "ellenhp",
  "length": 1369,
  "excerpt": "Multimodal routing in Rust. Contribute to ellenhp/farebox development by creating an account on GitHub.",
  "siteName": "GitHub",
  "favicon": "https://github.com/fluidicon.png",
  "text": "Farebox Fast RAPTOR implementation in Rust designed for memory-constrained machines. Built on top of Valhalla for transfers and first/last mile routing. Multi-agency and timezone-aware routing. Route shapes are not returned with the itineraries. The goal of this project is to supplement OpenTripPlanner in Headway as an infill service for areas not covered by OpenTripPlanner instances. Memory mapping is used for the timetables with the aim of enabling planet-scale coverage with a single instance, and affordable hosting costs. GTFS-RT support is in scope. Per-request walking/cycling costing model tweaks will likely never be supported because RAPTOR requires pre-computation of transfers, but pre-defined costing models for walking, cycling, and wheelchair usage are in scope. This project may be obsoleted by Valhalla's built-in multimodal support depending on its performance characteristics. Based on the information in the RAPTOR paper about its performance versus A* based methods, it seems likely that there will still be a place for farebox even once Valhalla can do multimodal trips. This project may also eventually support a rRAPTOR routing option which would allow simultaneous calculation of itineraries across a wide range of departure times, which isn't something you can do with an A* search through a time-dependant routing graph to my knowledge.",
  "image": "https://opengraph.githubassets.com/d319a1411be5b016ff26807d3ef86ae74dde66fa568c4ef894f39e8b954e4afe/ellenhp/farebox",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv data-hpc=\"true\"\u003e\u003carticle itemprop=\"text\"\u003e\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eFarebox\u003c/h2\u003e\u003ca id=\"user-content-farebox\" aria-label=\"Permalink: Farebox\" href=\"#farebox\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eFast RAPTOR implementation in Rust designed for memory-constrained machines.\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eBuilt on top of Valhalla for transfers and first/last mile routing.\u003c/li\u003e\n\u003cli\u003eMulti-agency and timezone-aware routing.\u003c/li\u003e\n\u003cli\u003eRoute shapes are not returned with the itineraries.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003eThe goal of this project is to supplement OpenTripPlanner in \u003ca href=\"https://github.com/headwaymaps/headway\"\u003eHeadway\u003c/a\u003e as an infill service for areas not covered by \u003ca href=\"https://www.opentripplanner.org/\" rel=\"nofollow\"\u003eOpenTripPlanner\u003c/a\u003e instances.\nMemory mapping is used for the timetables with the aim of enabling planet-scale coverage with a single instance, and affordable hosting costs.\nGTFS-RT support is in scope.\nPer-request walking/cycling costing model tweaks will likely never be supported because RAPTOR requires pre-computation of transfers, but pre-defined costing models for walking, cycling, and wheelchair usage are in scope.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eThis project may be obsoleted by Valhalla\u0026#39;s built-in multimodal support depending on its performance characteristics.\nBased on the information in the RAPTOR paper about its performance versus A* based methods, it seems likely that there will still be a place for \u003ccode\u003efarebox\u003c/code\u003e even once Valhalla can do multimodal trips.\nThis project may also eventually support a rRAPTOR routing option which would allow simultaneous calculation of itineraries across a wide range of departure times, which isn\u0026#39;t something you can do with an A* search through a time-dependant routing graph to my knowledge.\u003c/p\u003e\n\u003c/article\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": null,
  "modifiedTime": null
}
