[
  {
    "id": "16b21e64-ade3-4194-b7b8-ff33036d3d0f",
    "title": "Let a thousand programming publications bloom.",
    "link": "https://betterprogramming.pub/let-a-thousand-programming-publications-bloom-bf37baef8f27?source=rss----d0b105d10f0a---4",
    "description": "",
    "author": "Tony Stubblebine",
    "published": "Fri, 10 Nov 2023 18:18:10 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*tKikPWjE4MZ5WgdfZuyvEg.png",
    "source": "https://medium.com/feed/better-programming",
    "categories": null
  },
  {
    "id": "6a789a4c-c775-44de-a36b-fd7a72b4defe",
    "title": "Calling AWS Bedrock from code",
    "link": "https://betterprogramming.pub/calling-aws-bedrock-from-code-3f456a51ff99?source=rss----d0b105d10f0a---4",
    "description": "Using Python in a Jupyter notebookContinue reading on Better Programming »",
    "author": "Thomas Reid",
    "published": "Fri, 10 Nov 2023 17:35:02 GMT",
    "image": "https://cdn-images-1.medium.com/max/600/1*iltZoO6rmWj_AnfNpJ1m-A.png",
    "source": "https://medium.com/feed/better-programming",
    "categories": [
      "bedrock",
      "python",
      "llm",
      "boto3",
      "ai"
    ]
  },
  {
    "id": "c481ac06-2371-409f-8497-636a20fdf95a",
    "title": "Machine Learning in Content Moderation at Etsy",
    "link": "https://www.etsy.com/codeascraft/machine-learning-in-content-moderation-at-etsy?utm_source=OpenGraph\u0026utm_medium=PageTools\u0026utm_campaign=Share",
    "description": "At Etsy, we’re focused on elevating the best of our marketplace to help creative entrepreneurs grow their businesses. We continue to invest in making Etsy a safe and trusted place to shop, so sellers’ extraordinary items can shine. Today, there are more than 100 million unique items available for sale on our marketplace, and our vibrant global community is made up of over 90 million active buyers and 7 million active sellers, the majority of whom are women and sole owners of their creative businesses. To support this growing community, our Trust \u0026 Safety team of Product, Engineering, Data, and Operations experts are dedicated to keeping Etsy's marketplace safe by enforcing our policies and removing potentially violating or infringing items at scale For that, we make use of community reporting and automated controls for removing this potentially violating content. In order to continue to scale and enhance our detections through innovative products and technologies, we also leverage state-of-the-art Machine Learning solutions which we have already used to identify and remove over 100,000 violations during the past year on our marketplace. In this article, we are going to describe one of our systems to detect policy violations that utilizes supervised learning, a family of algorithms that uses data to train their models to recognize patterns and predict outcomes. Datasets In Machine Learning, data is one of the variables we have the most control over. Extracting data and building trustworthy datasets is a crucial step in any learning problem. In Trust \u0026 Safety, we are determined to keep our marketplace and users safe by identifying violations to our policies. For that, we log and annotate potential violations that enable us to collect datasets reliably. In our approach, these are translated into positives, these were indeed violations, and negatives, these were found not to be offending for a given policy. The latter are also known as hard negatives as they are close to our positives and can help us to better learn how to partition these two sets. In addition, we also add easy or soft negatives by adding random items to our datasets. This allows us to give further general examples to our models for listings that do not violate any policy, which is the majority in our marketplace and improve generalizability. The number of easy negatives to add is a hyper-parameter to tune, more will mean higher training time and fewer positive representations. For each training example, we extract multimodal signals, both textual and imagery from our listings. Then, we split our datasets by time using progressive evaluation, to mimic our production usecase and learn to adapt to recent behavior. These are split into training, used to train our models and learn patterns, validation to fine tune our training hyper-parameters such as learning rate and to evaluate over-fitting, and test to report our metrics in an unbiased manner. Model Architecture After usual transformations and extraction of a set of offline features from our datasets, we are all set to start training our Machine Learning model. The goal is to predict whether a given listing violates any of our predefined set of policies, or in contrast, it doesn’t violate any of them. For that, we added a neutral class that depicts the no violation class, where the majority of our listings fall into. This is a typical design pattern for these types of problems. Our model architecture includes a text encoder and an image encoder to learn representations (aka embeddings) for each modality. Our text encoder currently employs a BERT-based architecture to extract context-full representations of our text inputs. In addition, to alleviate compute time, we leverage ALBERT, a lighter BERT with 90% fewer parameters as the transformer blocks share them. Our initial lightweight representation used an in-house model trained for Search usecases. This allowed us to quickly start iterating and learning from this problem. Our image encoder currently employs EfficientNet, a very efficient and accurate Convolutional Neural Network (CNN). Our initial lightweight representation used an in-house model for category classification using CNNs. We are experimenting with transformer-based architectures, similar to our text encoders, with vision transformers but its performance has not been significantly improved. Inspired by EmbraceNet, our architecture then further learns more constrained representations for both text and image embeddings separately, before they are concatenated to form a unique multimodal representation. This is then sent to a final softmax activation that maps logits to probabilities for our internal use. In addition, in order to address the imbalanced nature of this problem, we leverage focal loss that penalizes more hard misclassified examples. Figure 1 shows our model architecture with late concatenation of our text and image encoders and final output probabilities on an example. Model Architecture. Image is obtained from @charlesdeluvio on Unsplash Model Evaluation First, we experimented and iterated by training our model offline. To evaluate its performance, we established certain benchmarks, based on the business goal of minimizing the impact of any well-intentioned sellers while successfully detecting any offending listings in the platform. This results in a typical evaluation trade-off between precision and recall, precision being the fraction of correct predictions over all predictions made, and recall being the fraction of correct predictions over the actual true values. However, we faced the challenge that recall is not possible to compute, as it’s not feasible to manually review the millions and millions of new listings per day so we had to settle for a proxy for recall from what has been annotated. Once we had a viable candidate to test in production, we deployed our model as an endpoint and built a service to perform pre-processing and post-processing steps before and after the call to our endpoint that can be called via an API. Then, we ran an A/B test to measure its performance in production using a canary release approach, slowly rolling out our new detection system to a small percentage of traffic that we keep increasing while we validate an increase in our metrics and no unexpected computation overload. Afterwards, we iterated and every time we had a promising offline candidate, named challenger, that improved our offline performance metrics, we A/B tested it with respect to our current model, named champion. We designed guidelines for model promotion to increase our metrics and our policy coverage. Now, we monitor and observe our model predictions and trigger re-training when our performance degrades. Results Our supervised learning system has been continually learning as we train frequently, run experiments with new datasets and model architectures, A/B test them and deploy them in production. We have added violations as additional classes to our model. As a result, we have identified and removed more than 100,000 violations using these methodologies, in addition to other tools and services that continue to detect and remove violations. This is one of our approaches to identify potentially offending content among others such as explicitly using the policy information and leverage the latest in Large Language Models (LLMs) and Generative AI. Stay tuned! \"To infinity and beyond!\" –Buzz Lightyear, Toy Story",
    "author": "David Azcona",
    "published": "Tue, 6 Aug 2024 07:15:03 -0400",
    "image": "https://i.etsystatic.com/inv/68753a/6158554996/inv_fullxfull.6158554996_9u5voz5s.jpg?version=0",
    "source": "https://codeascraft.com/feed/atom/",
    "categories": null
  },
  {
    "id": "bd88b14d-cd34-4ca8-88d9-88399ac3dbbf",
    "title": "Enhancing Cloud Usage Forecasting, Monitoring \u0026 Optimizing",
    "link": "https://www.etsy.com/codeascraft/enhancing-cloud-usage-forecasting-monitoring--optimizing?utm_source=OpenGraph\u0026utm_medium=PageTools\u0026utm_campaign=Share",
    "description": "In 2020, Etsy concluded its migration from an on-premise data center to the Google Cloud Platform (GCP). During this transition, a dedicated team of program managers ensured the migration's success. Post-migration, this team evolved into the Etsy FinOps team, dedicated to maximizing the organization's cloud value by fostering collaborations within and outside the organization, particularly with our Cloud Providers. Positioned within the Engineering organization under the Chief Architect, the FinOps team operates independently of any one Engineering org or function and optimizes globally rather than locally. This positioning, combined with Etsy's robust engineering culture focused on efficiency and craftsmanship, has fostered what we believe is a mature and successful FinOps practice at Etsy. Forecast Methodology A critical aspect of our FinOps approach is a strong forecasting methodology. A reliable forecast establishes an expected spending baseline against which we track actual spending, enabling us to identify deviations. We classify costs into distinct buckets: Core Infrastructure: Includes the costs of infrastructure and services essential for operating the Etsy.com website. Machine Learning \u0026 Product Enablement: Encompasses costs related to services supporting machine learning initiatives like search, recommendations, and advertisements. Data Enablement: Encompasses costs related to shared platforms for data collection, data processing and workflow orchestration. Dev: Encompasses non-production resources. The FinOps forecasting model relies on a trailing Cost Per Visit (CPV) metric. While CPV provides valuable insights into changes, it's not without limitations: A meaningful portion of web traffic to Etsy involves non-human activity, like web crawlers that’s not accounted for in CPV. Some services have weaker correlations to user visits. Dev, data, and ML training costs lack direct correlations to visits and are susceptible to short-term spikes during POCs, experiments or big data workflows. A/B tests for new features can lead to short-term CPV increases, potentially resulting in long-term CPV changes upon successful feature launches. Periodically, we run regression tests to validate if CPV should drive our forecasts. In addition to visits we have looked into headcount, GMV(Gross Merchandise Value) and revenue as independent variables. Thus far, visits have consistently exhibited the highest correlation to costs. Monitoring and Readouts We monitor costs using internal tools built on BigQuery and Looker. Customized dashboards for all of our Engineering teams display cost trends, CPV, and breakdowns by labels and workflows. Additionally, we've set up alerts to identify sudden spikes or gradual week-over-week/month-over-month growth. Collaboration with the Finance department occurs weekly to compare actual costs against forecasts, identifying discrepancies for timely corrections. Furthermore, the FinOps team conducts recurring meetings with major cost owners and monthly readouts for Engineering and Product leadership to review forecasted figures and manage cost variances. While we track costs at the organization/cost center level, we don't charge costs back to the teams. This both lowers our overhead and more importantly, provides flexibility to make tradeoffs that enable Engineering velocity. Cost Increase Detection \u0026 Mitigation Maintaining a healthy CPV involves swiftly identifying and mitigating cost increases, to achieve this we: Analysis: Gather information on the increase's source, whether from specific cloud products, workflows, or usage pattern changes (ie variance in resource utilization). Collaboration: Engage relevant teams, sharing insights and seeking additional context. Validation: Validate cost increases from product launches or internal changes, securing buy-in from leadership if needed. Mitigation: Unexpected increases undergo joint troubleshooting, where we outline and assign action items to owners, until issues are resolved. Communication: Inform our finance partners about recent cost trends and their incorporation into the expected spend forecast post-confirmation or resolution with teams and engineering leadership. Cost Optimization Initiatives Another side of maintaining a healthy CPV involves cost optimization, offsetting increases from product launches. Ideas for cost-saving come as a result of collaboration between FinOps and engineering teams, with the Architecture team validating and implementing efficiency improvements. Notably we focus on the engineering or business impact of the cost optimization rather than solely on savings, recognizing that inefficiencies often signal larger problems. Based on effort vs. value evaluations, some ideas are added to backlogs, while major initiatives warrant dedicated squads.Below is a breakout of some of the major wins we have had in the last year or so. GCS Storage Optimization - In 2023 we stood up a squad focused on optimizing Etsy’s use of GCS, as it has been one of the largest growth areas for us over the past few years. The squad delivered a number of improvements including improved monitoring of usage, automation features for Data engineers, implementation of TTLs that match data access patterns/business needs and the adoption of Intelligent tiering. Due to these efforts, Etsy’s GCS usage is now less than it was 2 years ago. Compute Optimization - Migrated over 90% of Etsy infrastructure that is serving traffic to the latest and greatest CPU platform. This improved our serving latency while reducing cost. Increased Automation for model deployment - In an effort to improve the developer experience, our machine learning enablement team developed a tool to automate the compute configurations for new models being deployed, which also ended up saving us money. Network Compression - Enabling network compression between our high throughput services both improved the latency profile and drastically reduced the networking cost. What's Next While our core infrastructure spend is well understood, our focus is on improving visibility into our Machine Learning platform's spend. As these systems are shared across teams, dissecting costs tied to individual product launches is challenging. Enhanced visibility will help us refine our ROI analysis of product experiments and pinpoint future areas of opportunity for optimization.",
    "author": "Anthony Tambasco",
    "published": "Mon, 17 Jun 2024 09:58:16 -0400",
    "image": "",
    "source": "https://codeascraft.com/feed/atom/",
    "categories": null
  },
  {
    "id": "f874d6f6-8cbb-4f58-b935-e24ed5aa6f6d",
    "title": "The Two Reacts",
    "link": "https://overreacted.io/the-two-reacts/",
    "description": "UI = f(data)(state)",
    "author": "",
    "published": "Thu, 04 Jan 2024 00:00:00 GMT",
    "image": "",
    "source": "https://overreacted.io/rss.xml",
    "categories": null
  },
  {
    "id": "761c63fd-9bed-409b-9ccb-66ca103415dd",
    "title": "A Chain Reaction",
    "link": "https://overreacted.io/a-chain-reaction/",
    "description": "The limits of my language mean the limits of my world.",
    "author": "",
    "published": "Mon, 11 Dec 2023 00:00:00 GMT",
    "image": "",
    "source": "https://overreacted.io/rss.xml",
    "categories": null
  },
  {
    "id": "d5ab421b-0c57-4aff-8337-d5b9c0a38bc7",
    "title": "FLOSS Weekly: FLOSS Weekly Continues at Hackaday - Hackaday is the new home of FLOSS Weekly",
    "link": "https://twit.tv/shows/floss-weekly/episodes/761b",
    "description": "FLOSS Weekly continues with Jonathan Bennett at its new home at Hackaday Visit hackaday.com/floss or search your favorite podcatcher to subscribe. Host: Jonathan Bennett",
    "author": "TWiT",
    "published": "Thu, 11 Jan 2024 00:00:00 PST",
    "image": "https://pdst.fm/e/pscrb.fm/rss/p/cdn.twit.tv/audio/floss/floss_761b/floss_761b.mp3",
    "source": "https://feeds.twit.tv/floss.xml",
    "categories": [
      "News",
      "Technology",
      "Open Source",
      "Software",
      "Open Source Software"
    ]
  },
  {
    "id": "8d485877-e4c8-4d80-b676-6d69442c9018",
    "title": "FLOSS Weekly 761: We Won! - The Victories of Free Software and Open Source",
    "link": "https://twit.tv/shows/floss-weekly/episodes/761",
    "description": "Doc Searls, Katherine Druckman, Dan Lynch, Simon Phipps, and Leo Laporte gather to celebrate the final victory of free software and open source—and the final FLOSS Weekly as well. Hosts: Doc Searls, Katherine Druckman, Dan Lynch, and Simon Phipps Guest: Leo Laporte Download or subscribe to this show at https://twit.tv/shows/floss-weekly Think your open source project should be on FLOSS Weekly? Email floss@twit.tv. Thanks to Lullabot's Jeff Robbins, web designer and musician, for our theme music. Get episodes ad-free with Club TWiT at https://twit.tv/clubtwit Sponsors: bitwarden.com/twit kolide.com/floss",
    "author": "TWiT",
    "published": "Wed, 13 Dec 2023 13:30:00 PST",
    "image": "https://pdst.fm/e/pscrb.fm/rss/p/cdn.twit.tv/libsyn/floss_761/3ccb17e9-1a70-473d-8703-0abed61f2d01/R1_floss0761.mp3",
    "source": "https://feeds.twit.tv/floss.xml",
    "categories": [
      "News",
      "Technology",
      "Open Source",
      "Software",
      "TWiT",
      " FLOSS Weekly",
      " Doc Searls",
      " Shawn Powers",
      " Leo Laporte",
      " Jonathan Bennett",
      " dan lynch",
      " simon phipps",
      " Katherine Druckman",
      " FLOSS",
      " open source",
      " open source podcast",
      " free libre open source",
      " open source victories",
      " Open Source Software",
      " eu open source"
    ]
  },
  {
    "id": "8e60d26a-4585-4a11-9976-3a8935c7bfcc",
    "title": "Registration is Open for Google Cloud Next 2025",
    "link": "https://developers.googleblog.com/en/registration-is-open-for-google-cloud-next-2025/",
    "description": "Google Cloud Next 2025, happening April 9-11 in Las Vegas, will feature expanded developer content, interactive experiences, and opportunities to connect with peers and Google experts.",
    "author": "",
    "published": "",
    "image": "",
    "source": "http://feeds.feedburner.com/GDBcode",
    "categories": null
  },
  {
    "id": "18f48bc2-3f6d-4485-a23c-37c3b9bae342",
    "title": "Introducing the Android XR SDK Developer Preview",
    "link": "https://developers.googleblog.com/en/introducing-android-xr-sdk-developer-preview/",
    "description": "The Android XR SDK, a new platform for building extended reality (XR) experiences on Android, is now available for devs to try, and to give feedback.",
    "author": "",
    "published": "",
    "image": "",
    "source": "http://feeds.feedburner.com/GDBcode",
    "categories": null
  },
  {
    "id": "6640442c-bccb-4fb7-95a2-8ef1b4ac778e",
    "title": "S27:E8 - Learning AI (Matt Eland)",
    "link": "https://www.codenewbie.org/podcast/learning-ai",
    "description": "Meet Matt Eland, AI Specialist at Leading EDJE. Matt shares what sparked his passion for AI years ago, why he’s made the decision to go back to school for his master's degree and how he aims to continue spreading his expertise with the community. Show Links Partner with Dev \u0026 CodeNewbie! (sponsor) Matt on Data Science Central Ohio .NET Developer Group Matt's Twitter Matt's GitHub Matt's LinkedIn",
    "author": "CodeNewbie",
    "published": "Wed, 22 May 2024 03:00:00 -0400",
    "image": "https://dts.podtrac.com/redirect.mp3/traffic.megaphone.fm/FOR8835558149.mp3?updated=1716333932",
    "source": "http://feeds.codenewbie.org/cnpodcast.xml",
    "categories": [
      "Podcast"
    ]
  },
  {
    "id": "f61fff42-8e94-41ca-8eff-a82b504ed4a3",
    "title": "S27:E7 - Tech and Art (Chris Immel)",
    "link": "https://www.codenewbie.org/podcast/tech-and-art",
    "description": "Meet Chris Immel, AI Engineer and Digital Artist at Luminifera Projects. Chris shares how he works to create a symbiosis between software development and art and why he remains optimistic when it comes to the AI revolution. Show Links Partner with Dev \u0026 CodeNewbie! (sponsor) Chris' Instagram Chris' Website Chris' GitHub Chris' LinkedIn",
    "author": "CodeNewbie",
    "published": "Wed, 15 May 2024 03:00:00 -0400",
    "image": "https://dts.podtrac.com/redirect.mp3/traffic.megaphone.fm/FOR3677516133.mp3?updated=1715705940",
    "source": "http://feeds.codenewbie.org/cnpodcast.xml",
    "categories": [
      "Podcast"
    ]
  },
  {
    "id": "b2369824-c302-4422-b74c-fbf78bc45d06",
    "title": "Transform code quality and compliance with automated processes",
    "link": "https://about.gitlab.com/blog/2024/12/13/transform-code-quality-and-compliance-with-automated-processes",
    "description": "",
    "author": "Jessica Hurwitz",
    "published": "2024-12-13T00:00:00.000Z",
    "image": "",
    "source": "https://about.gitlab.com/atom.xml",
    "categories": null
  },
  {
    "id": "fe941d77-36a4-4425-806f-0f927c866e85",
    "title": "Ask a hacker: A conversation with ahacker1",
    "link": "https://about.gitlab.com/blog/2024/12/12/ask-a-hacker-a-conversation-with-ahacker1",
    "description": "",
    "author": "Ottilia Westerlund",
    "published": "2024-12-12T00:00:00.000Z",
    "image": "",
    "source": "https://about.gitlab.com/atom.xml",
    "categories": null
  },
  {
    "id": "69083ea0-b0f2-4dba-8f4c-24723118b547",
    "title": "The Great Filter Comes For Us All",
    "link": "https://blog.codinghorror.com/the-great-filter-comes-for-us-all/",
    "description": "With a 13 billion year head start on evolution, why haven't any other forms of life in the universe contacted us by now?teaching the aliens how to exit Vim(Arrival is a fantastic movie. Watch it, but don't stop there - read the Story of",
    "author": "Jeff Atwood",
    "published": "Mon, 02 Dec 2024 18:25:46 GMT",
    "image": "https://blog.codinghorror.com/content/images/2024/11/image-28.png",
    "source": "https://feeds.feedburner.com/codinghorror",
    "categories": null
  },
  {
    "id": "58fbc53e-9d9d-42ac-99cf-857798806de3",
    "title": "I Fight For The Users",
    "link": "https://blog.codinghorror.com/i-fight-for-the-users/",
    "description": "If you haven't been able to keep up with my blistering pace of one blog post per year, I don't blame you. There's a lot going on right now. It's a busy time. But let's pause and take a moment",
    "author": "Jeff Atwood",
    "published": "Thu, 30 Nov 2023 20:11:05 GMT",
    "image": "https://blog.codinghorror.com/content/images/2023/11/image.png",
    "source": "https://feeds.feedburner.com/codinghorror",
    "categories": null
  },
  {
    "id": "b9dd7185-44dc-420f-9031-ffe4264a0635",
    "title": "Agency - How The On Over In Model Can Help You Grow Your Career",
    "link": "http://www.developertea.com",
    "description": "Are you operating in the world, or are you working on a problem? This shift in agency can make all the difference in your career.🙏 Today's Episode is Brought To you by: Wix StudioDevs, if you think website builders mean limited control—think again.With Wix Studio’s developer-first ecosystem you can spend less time on tedious tasks andmore on the functionalities that matters most:● Develop online in a VS Code-based IDE or locally via GitHub.● Extend and replace a suite of powerful business solutions● And ship faster with Wix Studio’s AI code assistantAll of that, wrapped up in auto-maintained infrastructure for total peace of mind.Work in a developer-first ecosystem. Go to wixstudio.com📮 Ask a QuestionIf you enjoyed this episode and would like me to discuss a question that you have on the show, drop it over at: developertea.com.📮 Join the DiscordIf you want to be a part of a supportive community of engineers (non-engineers welcome!) working to improve their lives and careers, join us on the Developer Tea Discord community by visiting https://developertea.com/discord today!🧡 Leave a ReviewIf you're enjoying the show and want to support the content head over to iTunes and leave a review! It helps other developers discover the show and keep us focused on what matters to you.",
    "author": "Jonathan Cutrell",
    "published": "Wed, 11 Dec 2024 08:00:00 +0000",
    "image": "https://dts.podtrac.com/redirect.mp3/cdn.simplecast.com/audio/c44db111-b60d-436e-ab63-38c7c3402406/episodes/784bbaf9-f4b5-4346-bf69-88b69063322a/audio/e8dc6559-813d-491e-a20b-f3ac8b6e5475/default_tc.mp3?aid=rss_feed\u0026feed=dLRotFGk",
    "source": "https://feeds.simplecast.com/dLRotFGk",
    "categories": null
  },
  {
    "id": "0e9aedbc-5ef1-456e-b862-ab9dff049b39",
    "title": "Using ChatGPT for Career Experience Simulations - LLMs and Direct Simulations for Faster Career Experience Gains",
    "link": "http://www.developertea.com",
    "description": "Can you use ChatGPT to become a better engineer? I'm not just talking about learning a language or fixing a bug with ChatGPT providing advice... I'm talking about career simulations. In this episode we discuss how the airline industry has fixed the problem of experience, and how we can learn from their insights to create low-stakes learning environments that boost our career and confidence through the roof.🙏 Today's Episode is Brought To you by: Wix StudioDevs, if you think website builders mean limited control—think again.With Wix Studio’s developer-first ecosystem you can spend less time on tedious tasks andmore on the functionalities that matters most:● Develop online in a VS Code-based IDE or locally via GitHub.● Extend and replace a suite of powerful business solutions● And ship faster with Wix Studio’s AI code assistantAll of that, wrapped up in auto-maintained infrastructure for total peace of mind.Work in a developer-first ecosystem. Go to wixstudio.com📮 Ask a QuestionIf you enjoyed this episode and would like me to discuss a question that you have on the show, drop it over at: developertea.com.📮 Join the DiscordIf you want to be a part of a supportive community of engineers (non-engineers welcome!) working to improve their lives and careers, join us on the Developer Tea Discord community by visiting https://developertea.com/discord today!🧡 Leave a ReviewIf you're enjoying the show and want to support the content head over to iTunes and leave a review! It helps other developers discover the show and keep us focused on what matters to you.",
    "author": "Jonathan Cutrell",
    "published": "Tue, 3 Dec 2024 08:00:00 +0000",
    "image": "https://dts.podtrac.com/redirect.mp3/cdn.simplecast.com/audio/c44db111-b60d-436e-ab63-38c7c3402406/episodes/14294bd0-e39e-43fa-a471-e423378e379c/audio/3ea243b9-4eb7-4786-a30d-835abdd08852/default_tc.mp3?aid=rss_feed\u0026feed=dLRotFGk",
    "source": "https://feeds.simplecast.com/dLRotFGk",
    "categories": null
  },
  {
    "id": "5db8270d-09f3-4f69-8172-ed96feac15fb",
    "title": "Proactive Agents for Multi-Turn Text-to-Image Generation Under Uncertainty",
    "link": "https://www.youtube.com/watch?v=HQgjLWp4Lo8",
    "description": "",
    "author": "Google TechTalks",
    "published": "2024-12-10T17:52:24+00:00",
    "image": "",
    "source": "https://www.youtube.com/feeds/videos.xml?user=GoogleTechTalks",
    "categories": null
  },
  {
    "id": "660befe7-9b65-4d25-a515-ead97eced0cf",
    "title": "AI Snake Oil",
    "link": "https://www.youtube.com/watch?v=CedHzg-VRiI",
    "description": "",
    "author": "Google TechTalks",
    "published": "2024-11-22T22:48:02+00:00",
    "image": "",
    "source": "https://www.youtube.com/feeds/videos.xml?user=GoogleTechTalks",
    "categories": null
  },
  {
    "id": "856833d2-625e-41d9-9643-a61ca1f779aa",
    "title": "Remove Paywalls from Search Results",
    "link": "https://medium.com/hackernoon/remove-paywalls-from-search-results-9b2a78053bec?source=rss----3a8144eabfe3---4",
    "description": "",
    "author": "#BlackLivesMatter",
    "published": "Fri, 14 May 2021 13:35:18 GMT",
    "image": "https://cdn-images-1.medium.com/max/784/1*kQx2xxgd7mjP6uTnYYjdgQ.png",
    "source": "https://medium.com/feed/hackernoon",
    "categories": [
      "chrome-extension",
      "paywall",
      "search-results",
      "remove-paywall",
      "google"
    ]
  },
  {
    "id": "a4810012-eeb9-4334-9754-a9b585fd813b",
    "title": "NBA Bubbleball and NBA Revenue [Podcast with Washington Post]",
    "link": "https://medium.com/hackernoon/nba-bubbleball-and-nba-revenue-podcast-with-washington-post-75c03541f064?source=rss----3a8144eabfe3---4",
    "description": "",
    "author": "ArtMap Inc.",
    "published": "Mon, 15 Feb 2021 20:13:06 GMT",
    "image": "https://medium.com/_/stat?event=post.clientViewed\u0026referrerSource=full_rss\u0026postId=75c03541f064",
    "source": "https://medium.com/feed/hackernoon",
    "categories": [
      "nba-revenue",
      "nba-bubble",
      "nba",
      "podcast",
      "nba-revenue-podcast"
    ]
  },
  {
    "id": "002b5f8c-24e9-4705-9477-aab3767a7437",
    "title": "Getting Started With the JetBrains Bazel Plugin",
    "link": "https://blog.jetbrains.com/idea/2024/12/getting-started-with-the-jetbrains-bazel-plugin/",
    "description": "Large Bazel projects are becoming increasingly common in modern software development. Unfortunately, the IDE experience for these projects often leaves much to be desired. In this blog post, we’ll explore the new JetBrains Bazel plugin and how it can enhance your daily work with Bazel projects. We’ll begin with an overview of what Bazel users […]",
    "author": "Vitaly Bragilevsky",
    "published": "Fri, 13 Dec 2024 09:42:02 +0000",
    "image": "https://blog.jetbrains.com/wp-content/uploads/2024/12/image-3.png",
    "source": "https://blog.jetbrains.com/feed",
    "categories": [
      "news",
      "tutorials",
      "bazel",
      "intellij-idea"
    ]
  },
  {
    "id": "bf064273-2140-41d9-88ff-49c6896c0f33",
    "title": "The last Early Access release of 2024 – content reuse ♻️ and more fixes",
    "link": "https://blog.jetbrains.com/writerside/2024/12/the-last-early-access-release-of-2024-content-reuse-and-more-fixes/",
    "description": "Reusing content is one of the few things that software developers and technical writers are equally passionate about. Both know that avoiding duplication isn’t just a good practice, it’s essential – and it works for documentation, just as it does for code: When should you start reusing content in technical documentation? The general advice is […]",
    "author": "Anna Gasparyan",
    "published": "Thu, 12 Dec 2024 17:04:07 +0000",
    "image": "https://blog.jetbrains.com/wp-content/uploads/2024/12/banner.png",
    "source": "https://blog.jetbrains.com/feed",
    "categories": [
      "eap",
      "news",
      "technical-writing",
      "writerside"
    ]
  },
  {
    "id": "1967c17b-ad0e-408f-b938-fba52a2fb552",
    "title": "The Boring Edition with Shopify's Glen Coates",
    "link": "https://www.hanselminutes.com",
    "description": "The Shopify Winter 2025 Edition is out and it's Boring. Scott talks with Shopify VP of Product Development Glen Coates about the need to sometimes slow down and make software better...even if it's boring. Is it boring if it just works? If it's super reliable and does exactly what you want it to do? Glen breaks down how they do software at Shopify on this episode.https://www.shopify.com/editions/winter2025",
    "author": "Scott Hanselman",
    "published": "Wed, 11 Dec 2024 14:30:00 +0000",
    "image": "https://r.zen.ai/r/cdn.simplecast.com/audio/24832310-78fe-4898-91be-6db33696c4ba/episodes/19899315-410a-467f-9614-fb2b442c2f15/audio/fd7f3b60-f15f-42d4-8378-d3c285feed08/default_tc.mp3?aid=rss_feed\u0026feed=gvtxUiIf",
    "source": "https://feeds.simplecast.com/gvtxUiIf",
    "categories": null
  },
  {
    "id": "21abbc6a-47cc-4533-9c1a-12c17f46d28b",
    "title": "The Return of Scott's Wife Mo",
    "link": "https://www.hanselminutes.com",
    "description": "Join us for this very special episode as Scott's wife Mo returns for a 2024 check in. Mo and Scott are coming up on 25 years of marriage. How do they make it happen? Do they consider themselves a mixed marriage - and is it cultural or is it just that Scott is a weird computer person?",
    "author": "Scott Hanselman",
    "published": "Thu, 5 Dec 2024 21:00:00 +0000",
    "image": "https://r.zen.ai/r/cdn.simplecast.com/audio/24832310-78fe-4898-91be-6db33696c4ba/episodes/d7c12a34-7126-4bd2-8671-968d15390857/audio/2d7f28a2-4b9b-430f-bfec-3f9a13fb7855/default_tc.mp3?aid=rss_feed\u0026feed=gvtxUiIf",
    "source": "https://feeds.simplecast.com/gvtxUiIf",
    "categories": null
  },
  {
    "id": "db3a4e90-2872-4d53-a0f2-b528f948b793",
    "title": "The Instagram Engineering Blog has a new location",
    "link": "https://instagram-engineering.com/the-instagram-engineering-blog-has-a-new-location-85de9ab8d90f?source=rss----37dc2a3034f2---4",
    "description": "",
    "author": "Ryan Peterman",
    "published": "Tue, 12 Jul 2022 17:00:22 GMT",
    "image": "https://medium.com/_/stat?event=post.clientViewed\u0026referrerSource=full_rss\u0026postId=85de9ab8d90f",
    "source": "https://instagram-engineering.com/feed/",
    "categories": [
      "software-engineering",
      "instagram",
      "computer-science",
      "engineering"
    ]
  },
  {
    "id": "fc2880f2-5faa-4aa4-b423-3316210c11a5",
    "title": "Five things I learned about working on content quality at Instagram",
    "link": "https://instagram-engineering.com/five-things-i-learned-about-working-on-content-quality-at-instagram-5031b1342bea?source=rss----37dc2a3034f2---4",
    "description": "",
    "author": "Brunno Attorre",
    "published": "Sat, 25 Jan 2020 01:13:36 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*M_vyOynSyXIXtH4V8kVMGg.png",
    "source": "https://instagram-engineering.com/feed/",
    "categories": [
      "data",
      "machine-learning",
      "instagram"
    ]
  },
  {
    "id": "811b2ce9-4bb1-4e39-9de1-2d1dd0fcef39",
    "title": "How We're Preventing Breaking Changes in GraphQL APIs at Buffer — and Why It's Essential for Our Customers",
    "link": "https://buffer.com/resources/how-were-preventing-breaking-changes-in-graphql-apis-at-buffer-and-why-its-essential-for-our-customers/",
    "description": "As part of our commitment to transparency and building in public, Buffer engineer Joe Birch shares how we’re doing this for our own GraphQL API via the use of GitHub Actions.",
    "author": "Joe Birch",
    "published": "Fri, 12 Jul 2024 11:28:34 GMT",
    "image": "https://buffer.com/resources/content/images/2024/07/Changes-in-GraphQL-APIs.png",
    "source": "https://buffer.com/resources/overflow/rss/",
    "categories": [
      "Overflow",
      "Open"
    ]
  },
  {
    "id": "aa93765b-61b7-4284-b6ef-b9fa600d4e0e",
    "title": "Highlighting Text Input with Jetpack Compose",
    "link": "https://buffer.com/resources/highlighting-text-input-with-jetpack-compose/",
    "description": "We recently launched a new feature at Buffer, called Ideas. With Ideas, you can store all your best ideas, tweak them until they’re ready, and drop them straight into your Buffer queue. Now that Ideas has launched in our web and mobile apps, we have some time to",
    "author": "Joe Birch",
    "published": "Tue, 13 Dec 2022 18:32:36 GMT",
    "image": "https://buffer.com/resources/content/images/2022/12/aaron-burden-Hzi7U2SZ2GE-unsplash.jpg",
    "source": "https://buffer.com/resources/overflow/rss/",
    "categories": [
      "Overflow"
    ]
  },
  {
    "id": "e13eb107-0b33-4e7f-8bcc-2c46d3f7e915",
    "title": "Progress on the Block Protocol",
    "link": "https://www.joelonsoftware.com/2022/12/19/progress-on-the-block-protocol/",
    "description": "Since the 1990s, the web has been a publishing place for human-readable documents. Documents published on the web are in HTML. HTML has a little bit of… Read more \"Progress on the Block Protocol\"",
    "author": "Joel Spolsky",
    "published": "Mon, 19 Dec 2022 13:01:40 +0000",
    "image": "https://i0.wp.com/www.joelonsoftware.com/wp-content/uploads/2022/12/IMG_0203.webp?resize=730%2C730\u0026ssl=1",
    "source": "https://www.joelonsoftware.com/feed/",
    "categories": [
      "News"
    ]
  },
  {
    "id": "f1a28c1b-f843-43c3-a7d0-4971b6c06bad",
    "title": "Making the web better. With blocks!",
    "link": "https://www.joelonsoftware.com/2022/01/27/making-the-web-better-with-blocks/",
    "description": "You’ve probably seen web editors based on the idea of blocks. I’m typing this in WordPress, which has a little + button that brings up a long… Read more \"Making the web better. With blocks!\"",
    "author": "Joel Spolsky",
    "published": "Thu, 27 Jan 2022 17:14:00 +0000",
    "image": "https://i0.wp.com/www.joelonsoftware.com/wp-content/uploads/2022/01/wordpressblocks.png?resize=260%2C573\u0026ssl=1",
    "source": "https://www.joelonsoftware.com/feed/",
    "categories": [
      "News"
    ]
  },
  {
    "id": "fa27e8ac-28c5-414a-8e14-da6cacbe9828",
    "title": "Design Token-Based UI Architecture",
    "link": "https://martinfowler.com/articles/design-token-based-ui-architecture.html",
    "description": "",
    "author": "",
    "published": "2024-12-12T10:36:00+01:00",
    "image": "",
    "source": "https://martinfowler.com/feed.atom",
    "categories": null
  },
  {
    "id": "bb318695-6a1d-4ca7-9ef4-8acb4d29d73e",
    "title": "Designing Data Products: next steps",
    "link": "https://martinfowler.com/articles/designing-data-products.html#HowBigShouldDataProductsBe",
    "description": "",
    "author": "",
    "published": "2024-12-10T15:22:00+01:00",
    "image": "",
    "source": "https://martinfowler.com/feed.atom",
    "categories": [
      "skip-home-page"
    ]
  },
  {
    "id": "fb6f2297-6984-4a2a-9c3e-eee171692f46",
    "title": "Netflix’s Distributed Counter Abstraction",
    "link": "https://netflixtechblog.com/netflixs-distributed-counter-abstraction-8d0c45eb66b2?source=rss----2615bd06b42e---4",
    "description": "",
    "author": "Netflix Technology Blog",
    "published": "Tue, 12 Nov 2024 20:45:23 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*ZjxKcMckMLrT_JqPUzP4MQ.png",
    "source": "https://netflixtechblog.com/feed",
    "categories": [
      "counter",
      "software-architecture",
      "system-design-interview",
      "distributed-systems",
      "scalability"
    ]
  },
  {
    "id": "a552924d-713a-4e21-99d7-9423e6cc6fd3",
    "title": "Investigation of a Workbench UI Latency Issue",
    "link": "https://netflixtechblog.com/investigation-of-a-workbench-ui-latency-issue-faa017b4653d?source=rss----2615bd06b42e---4",
    "description": "",
    "author": "Netflix Technology Blog",
    "published": "Mon, 14 Oct 2024 20:02:47 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/0*ltV3CYtNjLCzolXD",
    "source": "https://netflixtechblog.com/feed",
    "categories": [
      "debugging",
      "cpu",
      "jupyter-notebook",
      "performance"
    ]
  },
  {
    "id": "325dfb1e-8077-4a8e-9518-d063e8b682c9",
    "title": "The Insane Innovation of TI Calculator Hobbyists",
    "link": "https://www.thirtythreeforty.net/posts/2021/10/ti-calculator-innovation/",
    "description": "Table of Contents The platform Programming model Software projects Phoenix Grayscale on the TI-84 Plus Game Boy emulator for the TI-84 Plus Shells TI-84+ USB mass storage driver KnightOS The Axe Parser project Unity: Native code on the TI-81 Operating system hacks Signing keys arTIfice Whence from here? Further reading In the mid-to-late 2000s, you either knew, or were, that kid in grade school. You know. The one who could put games on your graphing calculator. You may be surprised to learn that some of these people didn’t exist totally in a vaccuum. There was in fact a thriving scene of hackers who had bent these calculators to their will, writing games, math software, and more generally hacking on the platform just for the sake of it. True to my interests, it’s all deeply embedded, pushing the limits of platforms that were obsolete when they were released. I’ll take you through some of the highlights of Texas Instruments calculator hacking done over the past two and a half decades, along with an explanation of why these projects are so technically impressive. This is xkcd #768. There are also 768 bytes in the RAM buffer used to hold TI display bitmaps. This is not a coincidence because nothing is ever a coincidence with xkcd. (source) Note Wow, it’s been a while since I’ve written anything. In the space of a year I’ve gotten a new job, bought a house, moved. Life comes at you fast. Thanks to everyone who has emailed to check on me—and I apologize for not being super responsive over email. I do plan to continue the articles I’ve started! The platform Throughout the 90s and 2000s, TI released a succession of z80-based graphing calculators. You might have heard of the z80—it was an improved version of the Intel 8080 developed by Zilog. Yeah. It’s old.1 They were quite nice 45 years ago when they were released! All TI calculators generally had similar low-end specs: z80 processor usually clocked at 8 or 10MHz—and note that the z80 can only retire one instruction every 4 cycles. 96x64 black and white LCD (a few models had a larger screen but this was by far the most common. The latest models finally have higher resolution color screens.) A link port which (ab)used the 2.5mm headphone jack connector Generally, 32KB of RAM, and on the 83+ and later, anywhere from 100KB to 2MB of flash storage (“archive”) TI’s operating system “TI-OS” (they call it “EOS” but nobody else does). TI-OS has: Arithmetic and graphing engine TI-BASIC scripting language On the models with flash, support for launching large “apps” stored exclusively in flash Needless to say, this is the very definition of a constrained environment. The most popular graphing calculators were of course the TI-83/84 Plus, which every American student for the past decade and a half has probably seen. I will use “TI-84 Plus” throughout here because it’s very likely the model you’re familiar with; however, it was more often referred to as the TI-83 Plus because they were basically identical. The 84 Plus had USB and a redesigned case, but the system was the same. Programming model The z80 assembly2 programming environment was pretty spartan: there was no supervisor or memory protection, so if you had a bug you were probably going to crash the calculator (the dreaded “RAM Cleared” message). The z80 is an 8-bit machine, with 16-bit pointers, so although archive was technically memory mapped, it wouldn’t all fit—it was actually paged in to a 16KB “window”: This diagram is heavily simplified, but you’ll notice the lack of any horsepower at all. There were several guides for learning assembly, but the best was by Sean McLaughlin, Learn TI-83 Plus Assembly in 28 Days. TI provided a very good SDK documentation about subroutines provided by TI-OS (and official support for Asm() programs), and with that you pretty much had free rein over the system. Software projects Those who followed calculator hacking news will surely recognize the individuals I’m calling out here, either by their name or, more likely, by their handle. For my own part, I was almost entirely a lurker, largely due to the influence of my parents who were not keen on talking to people online. (Remember, high school.) I was, however, a pretty good self-taught calculator programmer—more on that in a later article… Note A fair number of these links are starting to rot because development happened 20 years ago. Please do email me with corrections if you find a newly dead link. And of course massive kudos to the Internet Archive for preserving it all! Phoenix Easily the most famous3 graphing calculator game is Phoenix by Patrick Davidson. It’s a top-down space shoot-em-up similar to the arcade game Galaxian. The reason it is famous is not because it is fun—although it is—nor because it’s well implemented—although it is. Rather, this game is famous because it is one of the oldest, and Patrick and others have ported it to nearly every single z80 calculator ever released. Grayscale on the TI-84 Plus The first thing I remember being really wowed by was an RPG game called Desolate by Patrick Prendergast (tr1p1ea), which boasted four level grayscale. On top of that the game was not just a tech demo; it had a fully featured storyline and pretty good sprite art.4 Most emulators were able to detect that the application was doing grayscale and produce a clean rendering of it How was this possible on a device with only a black and white screen? The answer was that if you flickered pixels on and off fast enough, they would appear gray. Naïve attempts at this led to horrible jittery messes and found it difficult to get over 3 colors (black, white, gray). In contrast, Durk Kingma’s grayscale library that Desolate used achieved really nice 4-gray art by careful timing and by dithering the flickered pixels so that not all were on or off at once. Graphics consumed the majority of the compute budget for the game—but such is life for most video games! Game Boy emulator for the TI-84 Plus TI wasn’t the only company using z80 processors. The original Game Boy used them too! A natural question arises: maybe, possibly, could you run a Game Boy game on a calculator in some sort of hypervisor? Brendan Fletcher (calc84maniac) put a ton of engineering into TI-Boy SE, which does exactly that! A Game Boy cartridge is fairly large—Pokémon Red’s ROM is 1MB—so TI-Boy solves this by packing the ROM into a “shell” flash app using a PC program. Of course, you had to bring your own Game Boy cartridge ROM. The next problem is that many Game Boy cartridges have more RAM (up to 128KiB) than the TI-84 Plus (32KiB). (The Game Boy had only 8KiB built in, but cartridges could supply extra.) Here we’d seem to be stuck: how can you possibly emulate extra RAM? Xavier Andréani (critor) observed that TI calculators did in fact have extra RAM because the ASIC containing the z80 had more RAM than was exposed by default. TI-Boy reverse engineered the special commands to the hardware to bank-switch these into address space! The result is impressive: TI-Boy playing Legend of Zelda (via ticalc.org) Shells On calculators released before the TI-83 Plus, there was no official way to launch assembly language programs. These calculators had to be hacked using various techniques. The solution for end users was a shell - a launcher program that handled the annoying bits of transferring control from the OS. Many shells also provided additional routines a program could call. On the TI-82, the Ash shell accomplished this by sending a specially-crafted memory backup to the calculator. When the calculator next handled a keypress, the memory image redirected the CPU into the setup code. In a sense, this technique is one of the oldest exploits for any TI calculator. The shell that you are most likely to remember is MirageOS for the 84+. MirageOS was a popular tag-along with games shared peer-to-peer with a link cable, because the games needed it to run. It was also a flash app, so it persisted through RAM clears. I remember not being entirely clear on why its splash screen was so elaborate when I first encountered it, but now I appreciate the artwork! Shells got more elaborate over time, culminating in Doors CS by Christopher Mitchell (KermMartian), which had icons for assembly programs, a cursor-based UI, and a bunch of routines for programs to use. TI-84+ USB mass storage driver The 84+ had a really wacky USB port: it was an On-the-Go port, very obscure when it was released. This technically meant that the 84+ could act as a USB host. Dan Englender’s Usb8x supplied the missing driver code, allowing you to use a mouse (of questionable utility), keyboard, or more importantly, a flash drive. The calculator’s boot code provided low-level USB routines for get/send, but the impressive part is the upper USB stack including the mass storage and FAT16 driver “msd8x”—all, of course, in z80 assembly! Usb8x enabled, among other things, a hilarious demo: Michael Vincent may be one of the only people to have ever watched The Matrix on his calculator. (via ticalc.org) KnightOS Drew DeVault (SirCmpwn) was working on a promising project replacing TI-OS entirely with a from-scratch Unix-inspired, multitasking system called KnightOS. The cool part about this system is that it drew a lot from the multitasking paradigms we take for granted on a Mac or Linux box, but did it all with barely any help from the hardware. Programs were relocatable, there was preemptive multitasking, and there were loadable libraries that worked exactly like shared objects do in Unix. There was also a “real” filesystem with directories, flash wear leveling, and a protocol to connect to a computer. (It even has its own USB PID—0xCA1C.) Of course, the whole thing was all carefully implemented in z80 assembly, and kernel and library routines documented the contents of each register. It’s not vaporware; there’s autogenerated builds you can download and install on your calculator, and the source is on GitHub. Unfortunately its broad scope prevented it from achieving a stable release, but the bones are there and they are cool. I actually contributed a little to this project: I remember just having learned about synchronization primitives (mutexes and condition variables) and I easily knew enough about the z80 to be able to implement them for KnightOS. The Axe Parser project As you might imagine, there are two problems with writing assembly programs. First, you generally need a PC to do it properly, and most budding programmers were in school for most of their day. Second, and more importantly, z80 assembly is pretty arcane if you’re coming from BASIC. With the Axe Parser5, Kevin Horowitz (Quigibo) attempted to solve these problems by creating a new programming language that compiled into native code on the calculator. Axe is an app that reads a “TI-BASIC program” written with the built-in editor, but Axe redefined the grammar and semantics to provide a language that was very well suited to writing games. It’s quite an elegant solution: using the built-in editor means Axe didn’t have to ship an editor for its language. Rather, Axe is a compiler—it spends its engineering budget on producing better assembly code, with pages and pages of forum threads devoted to optimization. And further, Axe is extensible with new primitives provided as “Axioms”—plugins that further manipulate the grammar of the language. Here’s a hello world program in Axe. The Str1 token has been co-opted into a 16-bit pointer variable—this compiles on-calculator to an assembly program called HELLO! :.HELLO :\"Hello World\"→Str1 :Disp Str1 Unity: Native code on the TI-81 The TI-81 was an absolute potato of a calculator. Not only did it lack archive memory, it also lacked a link port, and lacked the Asm() command, meaning you were stuck with TI-BASIC. Stuck, that is, until Ben Moody (floppusmaximus) released Unity, a loader that exploited a buffer overflow in the primitive TI-OS, then installed itself to help load other assembly programs. With no link port, how did you get Unity or other assembly programs on the calculator? You typed them in, by hand! The installation instructions are reminiscent of typing in BASIC programs out of BYTE magazine: I suspect Randy Compton, who originally discovered the OS bug, did so by dumping the ROM with physical disassembly. z80 assembly is extremely amenable to reverse engineering because it’s hand-written. Operating system hacks While most projects ran on TI-OS, some ran up against TI-OS in order to make the hardware do things that TI preferred they didn’t do. There were scruples. Most people wanted to avoid the ire of Texas Instruments because (a) even the threat of lawyers tends to have a chilling effect on high school students and (b) people generally wanted to avoid besmirching the community’s image. And so there were certain things that were mostly considered off-limits, namely programs that were designed to help cheat on tests. Signing keys Really all anyone wanted to do was run their own code on their own hardware. TI had a crude but effective cryptographic signature check for apps and operating systems, which used the Rabin cryptosystem. They had released the signing key for TI-83 Plus apps as part of the SDK. However, the other keys that allowed signing OS images for the 83+, 84+, and apps and operating systems for the TI-89, were still secret. Using math against calculator enthusiasts—what did TI expect to happen?! Ben Moody realized that the state of the art in 2009 was enough to directly crack the ten year old 512-bit keys. His post (enigmatically titled “Fun Number Theory Facts”) revealed that he had found the prime factors of the public key for the 83+ operating system. Initially flabbergasted, the community threw together a BOINC cluster which cracked all the remaining keys in a few weeks without breaking a sweat. Texas Instruments threw a tantrum, lobbing legal threats that were, frankly, 100% bullshit abuses of the DMCA. The Electronic Frontier Foundation intervened on the hobbyists' behalf, explaining to TI that there is nothing illegal about knowing the prime factors of certain integers. The whole thing earned its own Wikipedia article. Today, you can easily find these keys on any enthusiast site, including right here. arTIfice Fairly recently (late 2020), TI decided what everyone really needed was a cold shower, and announced they’d be disabling all this assembly business with a software update for the TI-84+ CE (the newest color calculator), dubiously claiming that this would improve exam security, etc, etc.6 To quote Lionel Debroux: This slam shuts [sic] a golden age of over two decades (!) of native code being officially supported on at least one actively maintained TI graphing calculator. […] Like all true calculator enthusiasts, we have hard feelings about the matter. The community had always been nice to TI - nothing really damaging for TI’s business was ever released over 20+ years! - but a moral barrier has probably been broken today… As an olive branch they offered Python bindings; everyone immediately pointed out that Python is wicked slow in embedded environments and absolutely cannot replicate what native code can do.7 If you’ve read this far, you’ll note this isn’t the first time TI has been a little tone-deaf toward enthusiasts. Enter arTIfice8 - a proper jailbreak for these calculators. You simply install the CabriJr geometry app, and open a special data file with it, and suddenly you’re presented with a menu allowing you to run whatever you like. What’s cool about this is that it’s a jailbreak, not just a sweet hack that uses the hardware. Just like you may be familiar with jailbreaking an iPhone or Xbox, starting from within the sandbox and getting out, this abuses bugs in the wildly complicated CabriJr geometry app (signed and blessed to run by TI) to reenable arbitrary code execution and literally pop a shell or install hooks into the OS.9 The arTIfice exploit is just 927 bytes, and it packs a simple UI and loader in behind the shellcode. Being this small, the underlying exploit is probably the lowest hanging fruit of plenty of zero-days in this and other TI software. So yeah, now exams are secure, or something. Whence from here? For every project I listed, there were ten others that I didn’t. (And if I missed yours, I mean no disrespect!) The breadth and depth of tinkering is staggering: I haven’t even touched the scene for the ARM-based Nspire. There are always challengers to Texas Instruments' entrenchment in high schools; Casio in particular has made some attractive devices. There has been a modest amount of scene releases for Casio calculators as well. The startup Numworks makes calculators based on a very capable STM32F429 microcontroller. Until recently, the Numworks had an open-source operating system and I had half-hoped that it might spark a renaissance of handheld calculators. The hardware is available and pretty nice, but they’ve closed the source code license, so I don’t think it will see any grassroots adoption by the calculator scene. But no matter the platform, the steady stream of bored nerds in high school cannot be quenched, and they will have the support of smart engineers with free time. In the true hacker spirit, I suspect people will continue to push the boundaries of whatever hardware they find in their hands. Further reading Casual readers may wish to browse ticalc.org’s news (which goes back to 1997) for the most interesting news, or spelunk in their massive archives. Or, dive into the phpBB rabbit holes of the community’s forums, some dead and some still thriving! ticalc.org: one part forum, one part news source, three parts massive archive of nearly all software released for any TI calculator Cemetech: fairly formal, moderate amount of chatter but with pretty good signal to noise ratio and with very knowledgeable people. Still very active. Omnimaga: less formal, lots of projects, with a sprawling offtopic section and very elaborate forum signatures. Datamath: a large “online museum” with hardware teardowns, reverse engineering, and documentation of nearly every calculator ever released. TI-Planet: a French forum that was linked a lot, with a large downloads section and active community; unfortunately I don’t know much about it firsthand because I don’t speak French. calc.org (Wayback link): also used to be called Dimension-TI. A now-defunct forum and download host. Unfortunately it was before my time and I don’t know much about it. Oh, and other calculator nerds: keep me honest. Corrections welcome by comment or email. A popular hobbyist project is to build your own homebrew z80 computer, precisely because it is so simple that you can understand the foundations of the system. My favorite is probably Jim MacAurthur’s beautiful minimal z80 in a laser cut case with a hand crank to single-step instructions! ↩︎ The z80 generally made life pretty difficult for people who attempted to make a good C compiler for it. I believe I have the only remaining copy of HITECH-C for DOS, which was actually a decent C compiler. As I said, more on that in a later article. ↩︎ Your fame results may vary. Seemed this way to me, anyway. ↩︎ It’s good enough to have garnered at least a few fan ports to ZX Spectrum and some old Soviet computers. ↩︎ Wow, the Axe user manual takes me back—it was my first exposure to xkcd! ↩︎ Feels like they got advice from the Playstation Linux team. ↩︎ As far as I can tell, they are likely using MicroPython—implementing a Python from scratch would be a huge task—but I can’t find any MIT license disclosure. ↩︎ Holy moly does this page cause my CPU fans to spin… ↩︎ I’ll point out that all these hooks were already possible and remain supported by the OS itself; it’s how apps like Inequalz (which graphs inequalities) work - they hook the graph equation screens and the drawing routines, using official APIs. ↩︎",
    "author": "George Hilliard",
    "published": "Wed, 06 Oct 2021 08:42:00 -0500",
    "image": "https://www.thirtythreeforty.net/posts/2021/10/ti-calculator-innovation/1996.png",
    "source": "https://www.thirtythreeforty.net/posts/index.xml",
    "categories": null
  },
  {
    "id": "9eeb6d1b-70cb-4ccd-83bc-31259f3fe952",
    "title": "Hacking Reolink cameras for fun and profit",
    "link": "https://www.thirtythreeforty.net/posts/2020/05/hacking-reolink-cameras-for-fun-and-profit/",
    "description": "Table of Contents Sniffing traffic Dissecting traffic with Wireshark Inspecting the firmware Why doesn’t this camera support RTSP? Pwning the camera Low hanging fruit first Getting root Reversing the protocol Static analysis with Ghidra Strings: a bounty of information The Charlie Scrambler Dynamic analysis with gdb Feeding the watchdog Charlie strikes again A brief history of the Baichuan protocol Neolink: a new client Getting the video data Wrap it in maroon and white, er, RTSP Testing it with Blue Iris Future work Way back in late 2019, I dissected a Reolink B800 IP camera to demonstrate the various parts of an embedded Linux system. It’s fairly nice hardware, actually—it has a 4K video sensor, a microphone, power over Ethernet, and is nominally waterproof. And yes, it runs Linux. It came in a “kit” of six cameras and an NVR (a dedicated recording box that also powers the cameras). Unfortunately, the NVR is pretty anemic: it’s clearly an existing model with slight changes to support 4K cameras, and it struggles to support more than one viewer at a time. However, I bought these cameras because I believed they supported open standards such as ONVIF, so I’d just swap the NVR for a copy of Blue Iris running on my server. At the time, the Reolink support page clearly indicated that all of their non-battery-powered cameras supported RTSP. After the system was installed, it became apparent that the cameras did not in fact support RTSP—the only port open on them was port 9000. Then, barely outside my return window, Reolink updated their support page to say that the cameras would only work with their 8-channel NVR or proprietary viewer apps. This was, in the immortal words of Bill and Ted, bogus. Heinous. Most non-triumphant. Bogus enough that I decided to pwn the camera, reverse engineer the protocol, and write my own software to get the video stream. The end result is a new piece of open-source software called Neolink, which allows Blue Iris, Shinobi, or other NVR software to receive video from unmodified Reolink cameras. Here’s how I did it. Sniffing traffic As a first step, I fired up Wireshark and captured traffic between the camera and its official Reolink PC client1. The only thing that jumped out to me was the appearance of a sync word at the beginning of each packet, 0xf0debc0a. (In little endian, this is 0x0abcdef0.) On a lark, I Googled this, and actually found a project on GitHub from 2015 which was attempting to retrieve data from Swann cameras! A quick look at the code told me that although they share the sync word and packet header, the protocols for my camera and these older cameras were very different. The payload appeared to be encrypted in my captures. Furthermore, the code wouldn’t even run due to some questionable pointer juggling. Time to extract what I could—the header layout was correct—and move on. Dissecting traffic with Wireshark Always, always spend time developing debug or analysis tools. In my experience, such tools immediately pay back your time investment by a factor of 4 or more. With what I knew, I was able to write a “Baichuan” protocol dissector for Wireshark using Mika’s awesome tutorial. This was easy and fun: Wireshark lets you write dissectors in Lua (disclaimer: your definition of fun may vary). Now Wireshark could show me the payload lengths and message IDs. Not much, but it was a start. Inspecting the firmware In order to figure out whatever encryption and/or obfuscation the protocol was using, I planned to reverse engineer the firmware. I felt pretty confident that the underlying video was using a well-known protocol (especially since the camera seemed to have dedicated video encoding hardware). So “all” I’d have to do is reverse engineer the rest of the protocol. Easy peasy, right? Why doesn’t this camera support RTSP? As a quick aside, it’s natural to wonder why this camera doesn’t support RTSP and/or ONVIF. After all, plenty of other Reolink cameras do. Because I’d like to give them the benefit of the doubt, I’ll propose the possibility that Reolink ran out of storage on this camera and had to axe some features. After all, a 16MB flash chip would cost a whole 20 cents extra. This is just a cost-saving measure and definitely not vendor lock-in, hmmm? Pwning the camera Right, onward. With the protocol not immediately accessible, it was time to crack this camera open. My previous disassembly of the camera has already indicated that it uses SPI NOR flash—bog standard for a small Linux system like this. I was wanting to try out a really neat little SOIC socket I had discovered and ordered on Taobao a little while back. I desoldered the flash and soldered on a socket instead. The camera was now pwned, permanently—there was nothing I could do to brick it (I could always just reflash it with flashrom) and there was nothing Reolink could do to stop me from running my own code on it (since I had control of the first instruction executed, if need be2). With the flash now conveniently socketed, I dumped it and used binwalk to inspect the layout. Here’s the flash layout—the nice round byte offsets that engineers tend to pick.3 Bootloader, Linux uImage, squashfs rootfs, and JFFS2 persistent partition. DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 67266 0x106C2 eCos RTOS string reference 1769472 0x1B0000 uImage header 3604480 0x370000 Squashfs filesystem, little endian 7798784 0x770000 JFFS2 filesystem, little endian This also lines up nicely with this visualization of the flash image, made by a neat little tool called BinVis. binwalk also conveniently offers to unpack the filesystems it finds. Low hanging fruit first My first order of business was to find the actual camera binary. It was pretty easy to find; it’s sitting in its own directory at /mnt/app/dvr. The dvr binary also had an accompanying dvr.xml, which looked like a configuration file. A little grepping later, and… sure enough, here were the magic words ONVIF and RTSP! # .... push_server=\"pushx.reolink.com\" push_server_port=\"9501\" support_3gnet=\"0\" support_intelligence=\"0\" support_smartsearch=\"0\" support_onvif=\"0\" support_rtsp=\"0\" support_bc=\"1\" support_3dnr_config_interface=\"1\" default_3dnr_config=\"1\" # .... I suspected these were simply feature flags dictating to the software which features to enable. What if I just changed these zeros to ones? Rebuilding the rootfs wasn’t quite as easy as extracting it, but I cobbled together a command through trial and error. I wanted to get the squashfs format exactly the same as the one reported by binwalk, so that I could be sure that the stock kernel would mount it. Since I was mostly flying blind without a UART console, I didn’t want any trouble. $ mksquashfs new-squashfs-root/ new-squashfs.img -comp xz -b 262144 -all-root -noappend $ dd if=new-squashfs.img of=pwned.bin bs=1 seek=$((0x370000)) conv=notrunc $ flashrom -p ft2232_spi:type=2232H,port=A -w pwned.bin Alas, it was not to be this easy. The camera exhibited a remarkable lack of behavioral reform: no new ports opened, nothing. For comparison, I downloaded and unpacked a firmware update for a different Reolink camera that did support RTSP. The dvr binary for that camera was nearly 8 megabytes, while my victim’s was only a little over 3. Clearly, the engineers compiled out the unneeded bits. Getting root Fine. If Reolink has compiled the extra functionality out, then the least the camera could do is give me a shell. While I was here, I decided I’d make some, ahem, extra modifications. A quick Google did not yield prebuilt binaries of the tools I was looking for. Instead, I checked out a fresh copy of Buildroot and quickly set it up for a baseline MIPS configuration with static linking, then asked for copies of gdbserver, busybox with all the fixin’s, and strace: $ make qemu_mips32r2el_malta_defconfig $ make menuconfig # (with appropriate edits made) $ make busybox gdb strace Thirty minutes later, I had my tools. In the rootfs tree that binwalk had extracted, there’s the usual assortment of startup scripts in /etc/init.d. With my tricked-out Busybox copied to /bin, and a symlink created named telnetd, I added an extra line to one of the startup scripts: # Get a shell /bin/telnetd -l /bin/sh Fingers crossed, I reinstalled the flash and powered the camera. $ telnet 192.168.1.187 Trying 192.168.1.187... Connected to 192.168.1.187. Escape character is '^]'. /mnt/app # Mwahahaha. Reversing the protocol What to do with my newfound power? I planned to start with a static analysis of the firmware, first reverse engineering the encryption scheme. If I got stuck, I could interrogate the camera binary as it executed. Once I could undo the encryption, I’d be able to see what the actual protocol was like. Static analysis with Ghidra The traditional hobbyist tool for static analysis, IDA free edition, is no good here, because my binary is for MIPS, which the free IDA refuses to disassemble. Instead, the tool of choice is Ghidra, an astoundingly good open-source reverse engineering suite released by the NSA. Now, normally saying “I ran a binary the NSA gave me” will get you laughed out of the room. But Ghidra has been open source for a while now, so I feel reasonably safe installing it from the Arch Linux repository. If this website looks like it’s made by a government agency, it’s because it is. Ghidra is awesome. Seriously, this is a piece of software you’d have to pay $10000 for, and it should be your go-to for reverse engineering work. In addition to the disassembler and analyzer, Ghidra also includes a decompiler, which prints pseudo-C code instead of leaving you digging through MIPS assembly. It also re-analyzes in realtime as you annotate function arguments with type information and names. These features easily cut my time spent reverse engineering in half. So, armed with Ghidra and a false sense of confidence stemming from never having done any reverse engineering before, I went spelunking in the Baichuan binaries. Strings: a bounty of information There’s a reason most reverse engineers start by examining the strings in an unknown binary—it’s a technique that works. In my case, checking for strings in the desktop client and the firmware’s server yielded debug print statements, function names (which Ghidra automatically annotated), and a couple other oddball strings that I’ll talk about in a minute. Both codebases were clearly built around a shared proprietary “BCSDK” library. Searching for crypt yielded a couple of candidate functions that purported to perform encryption: Well, no RSA here, or anything resembling “real” encryption, except AES. (And I could find any AES keys embedded in the app in short order.) But what’s this string stuck nonchalantly in the middle of the others? That’s not a function name. I hit find-references and read the code that uses it. The Charlie Scrambler Ghidra took me to this gem of a function: Technically, this is the decryption function; there’s another one that works in reverse. It only takes a second to understand what’s going on here: the “encryption” scheme is simply: XOR the data with the string Charlie is the designer of P2P!!, then mix up the bytes. This isn’t encryption. This is just a scrambler. Bravo, Charlie, your “design” is permanently encoded in this protocol for all time. Don’t roll your own crypto, kids. Unfortunately, the Charlie Scrambler is only called from UDP functions (see the cross-reference at the bottom of the Ghidra window). This meant it wasn’t my pigeon; my camera uses TCP. At this point I had no idea which of the other “encryption” functions were the right one for my camera, so it was time to bring out my next weapon. Dynamic analysis with gdb With my shell access waiting, my next move was to attach a debugger and control the dvr program remotely from my workstation using my cross-compiled gdbserver and strace tools. My Busybox included an FTP server and a TCP wrapper: $ /bin/busybox tcpsvd -vE 0.0.0.0 21 ftpd / -w -A tcpsvd: listening on 0.0.0.0:21 With this setup I could push whatever tools I wanted to the camera filesystem, even though I hadn’t packed them into the firmware. I went through this process manually about twice before it became really tedious. This is the kind of thing it’s possible to automate with expect, a Tcl (!) program that pretends to be a console user. I scripted these interactions, which reduced the connect, tool push, and gdb setup to a simple: $ ./start-debug.exp An added benefit of this setup is that I could stick whatever gdb commands I wanted to run at startup at the end of the script, instead of writing a dedicated GDB script. These dynamic printf commands simply print in the GDB console when the camera hits a breakpoint, helpful for knowing which functions are being called without halting the camera: send_gdb \"dprintf *0x478908, \\\"_Nets_Without_Password_Login_V20\\\\n\\\"\" send_gdb \"dprintf *0x4780ac, \\\"FUN_004780ac\\\\n\\\"\" send_gdb \"dprintf *0x6310f0, \\\"Md5_string_encrypt\\\\n\\\"\" Feeding the watchdog After attaching and halting the dvr daemon, the camera promptly crashed and reset. After some quick investigation, the camera had a watchdog enabled at /dev/watchdog—a very common setup for embedded devices. I was doing open heart surgery on this software—I didn’t need some two-bit peripheral wandering by and hitting it with an AED! Busybox ships with a watchdog minder, so I simply fired it up: $ watchdog /dev/watchdog Problem solved. Charlie strikes again After my breakpoint was hit, I knew which encryption function I was dealing with: Nets_XmlEncryption. This was immediately good news, because after figuring out the encryption, I was likely dealing with nice ordinary XML, not some crazy half-baked bag of C structs. I took a look at the decompiled function in question in Ghidra, annotating as I went. Sure did look familiar… No engineering lessons had been learned during the redesign, and the influence of Charlie was alive and well! Here is the Charlie Scrambler back in force, but without the mixing step, and with a shorter key. Fine, whatever. Implementing the Scrambler in my Wireshark dissector didn’t take very long—although I was briefly baffled by a header of varying length depending on the message type. Once implemented, I was greeted with this glorious sight: Again, I highly recommend writing plugins for Wireshark. You can do it in Lua (or C if you’re that hardcore), and it only takes a couple hours to have a really nice debug tool. A brief history of the Baichuan protocol I won’t bore you with the gory details, but I’ll summarize my findings. The Baichuan protocol has had several iterations over the years. The very oldest seem to be UDP-based, using a proprietary SDK called TUTK, illicit copies of which can conveniently be found on GitHub. This is no longer used; it’s not even present in the camera code. The next variant is indeed a plaintext “bag of structs”, which consists of a header and a body specified by a message ID in the header. This “legacy variant” is briefly used on the B800 so that both clients can negotiate an upgrade to the “modern variant,” which is the scrambled XML-based scheme you see above. On top of this, modern messages can optionally have a payload. A certain XML message switches the entire message ID into “binary mode,” which supplies a raw data stream in subsequent messages. When the client sends a video-start command, the camera replies with a binary stream containing raw H.265 video. On top of that, the payload can also be more encrypted XML, separate from the main XML for some reason. On the whole, it’s really quite a pain to parse. Neolink: a new client Once my Wireshark dissector was humming along, it was time to write a new client. I wanted my software to be fast, high-level, and correct, since it would be part of a security system setup. That’s right: I rewrote Reolink’s software in Rust. Well, not exactly. Neolink is a new client completely from scratch. It speaks the same Baichuan protocol as the camera, and it extracts the video and forwards it to another real NVR client like Blue Iris over RTSP. The parsing code is somewhat hairy4, but other than that, it’s straightforward. Getting the video data Here’s all the client is capable of right now. It’s pretty easy to read if you want to look at the source. Send a legacy login message to get the camera to “upgrade” to modern messages. Note: this uses plain MD5 encryption for your password, another, um, interesting design choice. Use a password that isn’t in a rainbow table! Send a modern login message to actually authenticate to the camera. Send a start video request: let start_video = Bc::new_from_xml( BcMeta { msg_id: MSG_ID_VIDEO, client_idx: 0, encrypted: true, class: 0x6414, }, BcXml { preview: Some(Preview { version: xml_ver(), channel_id: 0, handle: 0, stream_type: \"mainStream\".to_string(), }), ..Default::default() }); sub_video.send(start_video)?; Spit out the binary data when it’s received: loop { let msg = sub_video.rx.recv_timeout(self.rx_timeout)?; if let BcBody::ModernMsg(ModernMsg { binary: Some(binary), .. }) = msg.body { data_out.write_all(binary.as_slice())?; } } Wrap it in maroon and white, er, RTSP5 For this part of the program I reached for Gstreamer, which ships with an RTSP server. Gstreamer is… complex. However, their examples are fantastic; they even provided a sample RTSP server in Rust! The general approach for feeding Gstreamer data from an arbitrary part of your program is to use a block called an appsrc. This lets you get a callback whenever Gstreamer wants data, or alternatively just push data whenever you have some and let Gstreamer handle scheduling it. The latter approach is the one I went with here, since the camera doesn’t wait for a signal to send video data. I wrapped everything in a Gstreamer pipeline: appsrc name=baichuan is-live=true emit-signals=false max-bytes=0 ! h265parse ! rtph265pay name=pay0 Testing it with Blue Iris The moment of truth arrived… could Blue Iris connect to my RTSP server and actually display the video? You bet. I present… me! In glorious 4K! Future work I’ve been soak-testing Neolink for a while now and I think it’s pretty stable. Going forward I’m packaging it up as a real Windows service (not a command line program) to run alongside Blue Iris on my server. Go look at it and download it for yourself! I’m also interested in getting Neolink working with other “NVR only” Reolink cameras, of which there are quite a few. So far I haven’t purchased any other hardware, so if you have one of these cameras, please get in touch so we can test it. It might Just Work out of the box. Port scan your cameras! If they have port 9000 available, chances are good that they speak the Baichuan protocol. This project was a “just right” intro to reverse engineering. Low-security systems like these let you teach yourself the principles without actively trying to thwart reverse engineering. I taught myself a lot, and I hope it provides a lot of value for folks who own these cameras. Finally, some shameless self-promotion: embedded Linux systems are actually pretty approachable! If you’d like to learn how to do this kind of thing, you might be interested in my Mastering Embedded Linux series, designed to help you become an expert in hacking low-cost embedded Linux systems just like this camera. If you enjoyed this, you can subscribe to my blog updates, or leave a comment below. Thanks for reading! The Reolink support forums always claim that their pages were “updated 8 hours ago.” This is obvious nonsense. They do update fairly frequently, but not constantly. ↩︎ This is exactly the point of secure boot schemes, where the immutable boot ROM validates code against immutable encryption keys, preventing tampering. Needless to say, this camera does not implement such niceties. ↩︎ binwalk also turns up a bunch of false positives, which are easy to ignore because they don’t have nice round offsets. ↩︎ Seriously, having packet decode be stateful is just ridiculous. ↩︎ Yes, I’m a proud Mississippi State University bulldog. You too can attend and become a computer engineer! ↩︎",
    "author": "George Hilliard",
    "published": "Sat, 16 May 2020 17:40:00 -0500",
    "image": "https://www.thirtythreeforty.net/posts/2020/05/hacking-reolink-cameras-for-fun-and-profit/b800.jpg",
    "source": "https://www.thirtythreeforty.net/posts/index.xml",
    "categories": null
  },
  {
    "id": "5d3a2529-4159-4f0d-ab06-5dd15b69ffb8",
    "title": "Emulating SQL FILTER with Oracle JSON Aggregate Functions",
    "link": "https://blog.jooq.org/emulating-sql-filter-with-oracle-json-aggregate-functions/",
    "description": "A cool standard SQL:2003 feature is the aggregate FILTER clause, which is supported natively by at least these RDBMS: The following aggregate function computes the number of rows per group which satifsy the FILTER clause: This is useful for pivot style queries, where multiple aggregate values are computed in one go. For most basic types … Continue reading Emulating SQL FILTER with Oracle JSON Aggregate Functions →",
    "author": "lukaseder",
    "published": "Mon, 03 Jun 2024 12:17:41 +0000",
    "image": "",
    "source": "https://blog.jooq.org/feed",
    "categories": [
      "sql",
      "aggregate functions",
      "FILTER",
      "FILTER clause",
      "JSON",
      "JSON aggregate functions",
      "JSON_ARRAYAGG",
      "JSON_OBJECTAGG",
      "Oracle",
      "SQL/JSON"
    ]
  },
  {
    "id": "0d7587e2-2d2c-45f4-b203-1f9aaaccdda7",
    "title": "Getting Top 1 Values Per Group in Oracle",
    "link": "https://blog.jooq.org/getting-top-1-values-per-group-in-oracle/",
    "description": "I’ve blogged about generic ways of getting top 1 or top n per category queries before on this blog. An Oracle specific version in that post used the arcane KEEP syntax: This is a bit difficult to read when you see it for the first time. Think of it as a complicated way to say … Continue reading Getting Top 1 Values Per Group in Oracle →",
    "author": "lukaseder",
    "published": "Fri, 01 Mar 2024 09:55:41 +0000",
    "image": "",
    "source": "https://blog.jooq.org/feed",
    "categories": [
      "sql",
      "aggregate functions",
      "ANY_VALUE",
      "KEEP",
      "Oracle",
      "top-1-per-category"
    ]
  },
  {
    "id": "ed1fb92c-1812-46a6-a19d-b12e4b280dea",
    "title": "How to build a mixed reality headset",
    "link": "https://engineering.fb.com/2024/12/12/virtual-reality/how-to-build-a-mixed-reality-headset/",
    "description": "How do you take a mixed reality (MR) headset from idea to finished product? Alfred Jones, VP of hardware engineering at Meta Reality Labs, joins Pascal Hartig (@passy) on the latest episode of the Meta Tech Podcast for a discussion on the realities (no pun intended) of building MR hardware. Jones shares his strategy for [...] Read More... The post How to build a mixed reality headset appeared first on Engineering at Meta.",
    "author": "",
    "published": "Thu, 12 Dec 2024 17:00:44 +0000",
    "image": "",
    "source": "https://engineering.fb.com/feed/",
    "categories": [
      "Virtual Reality",
      "Meta Tech Podcast"
    ]
  },
  {
    "id": "75c88167-d88a-4ca5-bedd-0b9c0b0d2a5c",
    "title": "Inside Facebook’s video delivery system",
    "link": "https://engineering.fb.com/2024/12/10/video-engineering/inside-facebooks-video-delivery-system/",
    "description": "We’re explaining the end-to-end systems the Facebook app leverages to deliver relevant content to people. Learn about our video-unification efforts that have simplified our product experience and infrastructure, in-depth details around mobile delivery, and new features we are working on in our video-content delivery stack. The end-to-end delivery of highly relevant, personalized, timely, and responsive [...] Read More... The post Inside Facebook’s video delivery system appeared first on Engineering at Meta.",
    "author": "",
    "published": "Tue, 10 Dec 2024 17:00:13 +0000",
    "image": "https://engineering.fb.com/wp-content/uploads/2024/12/Facebook-video-delivery-1.png?w=1024",
    "source": "https://engineering.fb.com/feed/",
    "categories": [
      "Video Engineering"
    ]
  },
  {
    "id": "b763dbc8-b294-4e3e-a76d-96b01d735448",
    "title": "How using Availability Zones can eat up your budget — our journey from Prometheus to…",
    "link": "https://engineering.prezi.com/how-using-availability-zones-can-eat-up-your-budget-our-journey-from-prometheus-to-be8a816f7efe?source=rss----911e72786e31---4",
    "description": "",
    "author": "Grzegorz Skołyszewski",
    "published": "Mon, 09 Dec 2024 16:31:05 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*tGT2rOPOAoGAiRKAbgc1rg.png",
    "source": "https://engineering.prezi.com/feed",
    "categories": [
      "monitoring",
      "prometheus",
      "victoriametrics",
      "grafana",
      "kubernetes"
    ]
  },
  {
    "id": "31b49470-8954-423a-81d9-8306395850a7",
    "title": "How To Turn Red Energy Into Strategy And Migrate All Your Tests While You’re At It",
    "link": "https://engineering.prezi.com/how-to-turn-red-energy-into-strategy-and-migrate-all-your-tests-while-youre-at-it-12b29c665ec5?source=rss----911e72786e31---4",
    "description": "",
    "author": "Attila Vágó",
    "published": "Tue, 26 Nov 2024 04:13:06 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*hrjJ3SqpTiGLQxHHzsaBUQ.jpeg",
    "source": "https://engineering.prezi.com/feed",
    "categories": [
      "quality-assurance",
      "coding",
      "software-testing",
      "engineering-mangement",
      "software-development"
    ]
  },
  {
    "id": "14e520a4-063a-4f3e-8709-5ac72a408d36",
    "title": "PyMyFlySpy: track your flight using its headrest data",
    "link": "https://robertheaton.com/pymyflyspy/",
    "description": "“Where are we daddy?” asked my five-year-old. “We’ll land in about an hour,” I said. “No I mean where are we? Are we flying over Italy yet?” I wasn’t sure. Our flight was short and cheap and the seats didn’t have TV screens in the headrests. I looked around. I noticed a sticker encouraging me to connect to the in-flight wi-fi. That would do it, I thought. A site like FlightRadar would answer my little man’s question, down to the nearest few meters. But unfortunately for him I’m the creator of PySkyWiFi (“completely free, unbelievably stupid wi-fi on long-haul flights”). Not paying for airplane internet is kind of my signature move. We’d need a different, offline strategy. I had a think. When you connect to an airplane wi-fi network, you’re usually met with a payment page where you can purchase access to the internet. The page also usually gives you the same flight information that you’d find in the back of your headrest, like speed, direction, and estimated flight length. Perhaps it would have a map as well, I thought. I pulled out my laptop, connected to the network, and loaded up the payment page. It did indeed show our wind speed, direction, and estimated time of arrival. But no map. (It didn’t occur to me to screenshot the page so here’s an artist’s impression) “Maybe the server that’s sending us this data is actually also sending us our location, but the web page isn’t displaying it,” I thought. I opened up the Chrome developer tools. I saw that my browser was making regular requests to a /info endpoint. I clicked on one of the requests. This /info endpoint was indeed sending us a huge pile of data, including fields for ground_speed, wind_speed, and estimated_arrival_time. At the bottom of the response I noticed fields for latitude and longitude. My heart leapt. But then I looked closer. They were both null. Aerofoiled. This looked like the end of the line. I was about to give up and tell my son that we were somewhere just north of Italy, probably…Europe somewhere. But then I was hit by two fantastic ideas. Fantastic idea number 1: the /info endpoint didn’t tell us our location, but it did tell us our precise, regularly-updated speed and direction. On our flight home I could track and save our speed and direction every second or so for the whole flight. I could use this information to estimate how far we had traveled in each second, and in which direction. I could dynamically calculate our position by starting at our airport’s co-ordinates, then adding on each second’s step. Fantastic idea number 2: even if I had been able to find our latitude and longitude in the /info response, it wouldn’t have meant much to either me or my son. However, I could build a web app that ran on my laptop and showed us our dynamically calculated position on a map, in real time. The app could have automatically updating graphs of our ETA, wind direction, speed, altitude, and so on. Ooh and an interface for running arbitrary queries against the data. And event callbacks to allow me to programmatically trigger code based on flight info (“when our ETA is 2 hours exactly, block my access to netflix.com and open the latest draft of my unfinished novel”). My son would know where he was. I’d be a Good Dad. I decided to call the app PyMyFlySpy in order to give it some brand association with PySkyWiFi, my airplane-related project. I couldn’t wait to get started. Unfortunately right now I was wedged in between a five-year-old and a two-year-old and we were all terrible at JavaScript. I waited, impatiently. PyMyFlySpy Eventually we landed. I built PyMyFlySpy during our holiday, over late evenings and one or two derelict afternoons while the rest of my family did normal-person fun things. I couldn’t figure out whether it was bad manners to use your laptop in artisanal Italian coffee shops, or which of them had wi-fi, so to my eternal shame I googled “starbucks near me” and planted myself in a corner with a skinny mochachino and typed away. I finished PyMyFlySpy the day before we left. The code is available on GitHub and it’s easy to setup and run. It even has a “dummy” mode that allows you to demo it without being inside a plane, using a made-up flight. Here’s what PyMyFlySpy can do: Maps and graphs PyMySkySpy shows a map of your flightpath so far. It also shows your current flight metrics and how these metrics have changed over the course of your flight. It does this for all data available from the in-flight wi-fi, even data that isn’t usually displayed on the website or headrest screen. You can see exactly where you are and feel a bit like a pilot. Query interface PyMySkySpy saves all the data that it records to a database. Its UI has a page that allows you to write queries against the data to answer questions like “what’s our maximum speed so far, and when did we hit it?” or “how fast was the wind during that turbulence we just went through?” I’m not claiming that this is hugely useful, but I do think it’s cool. Multi-airline support Different airlines have different wi-fi systems. A recorder for a JetBlue flight won’t work on AirFrance. Fortunately, PyMySkySpy allows you to easily add and use recorders for different airlines. You just have to load up their wi-fi landing page, open your browser’s developer tools, and figure out how to parse their page’s data like I did above. Then you add your new code to the PyMySkySpy config, and tell the recorder to use it. Everything else continues to work just the same. System design The system is very simple. It has 4 parts: Firefox Extension - reads flight info from the airline’s website and sends it to the PyMySkySpy web server Local web server - saves data that the extension sends to it, and makes it available to the frontend Sqlite Database - stores data Web frontend - displays data using maps and graphs The one strange design choice I made was to use a Firefox Extension to read the flight data, instead of writing a scraper that makes its own data requests directly. Scraping the information like this would have been easier and more flexible, as well as completely harmless. Hundreds of people were already connected to the wifi, and the airline’s own landing page hits the /info endpoint once every couple of seconds. Adding one more request from a scraper would have been entirely safe. However, I’m sure that airlines would rather people didn’t poke around at their onboard servers, even if those people are very careful and well-intentioned and handsome. To make sure I didn’t irritate them, I came up with an even more judicious approach. Instead of scraping the data endpoint, I wrote a Firefox Extension. The extension sits there while the airline’s wi-fi landing page requests the latest data from the /info endpoint, just like normal, every few seconds. The extension peeks at the data that’s returned; sends the data to the PyMyFlySpy web server; and finally the web server writes it to the PyMyFlySpy database, to serve to the web frontend. Using a Firefox Extension like this means that PyMyFlySpy never interacts with the plane’s info server directly. This means that PyMyFlySpy can provably never harm the server. I had to write the extension for Firefox instead of Chrome, because Chrome is in the process of reducing extensions’ ability to interact with requests made by a website (like requests made to the /info endpoint). In particular, Chrome is going to prevent extensions from easily reading the responses to HTTP requests made by a website, which would prevent the PyMyFlySpy from reading the data returned by the /info endpoint. As far as I can tell these restrictions are half for security reasons, and half to make it harder to develop adblockers. Either way, PyMyFlySpy requires Firefox. Future work - event subscriptions PyMySkySpy gives us programmatic access to data about our flight. It would be fun to use this to trigger events, like: “For the first half of the flight, only let me open the big report that I need to finish by 5pm today.” “When our location is within 10 miles of the Grand Canyon, send the kids a Slack message to look out the window. Also send me a Slack message to bug them to look out the window.” “If our altitude drops by more than 300ft in 1 second then play a reassuring but really quite urgent sound on all of my devices.” Next holiday, perhaps. The flight home Our flight home was in the late afternoon. We shuffled on board and took off. I pulled out my laptop, connected to the wi-fi, and booted up PyMySkySpy. I turned to my son to show him where we were. I’d shown him the prototype every day for the last week and I though he seemed to be somewhere between “tolerant” and “mildly interested.” But he’d already fallen asleep. I took some screenshots to show him later. I spent the next few hours monitoring and debugging the recorder to make sure that it stayed up. My two-year-old screamed the whole flight and kept trying to throw himself on the floor. I made supportive faces at my wife across the aisle and pretended to offer to take him, but she shook her head. She knew that this was important. I watched the graphs. Temperature within normal range. Wind speed stable. Suddenly our altitude dropped by a fifty feet. I wondered if I should tell the pilots. I decided that they probably had it under control. I kept watching, just in case. PyMyFlySpy is on GitHub.",
    "author": "",
    "published": "Wed, 04 Dec 2024 00:00:00 +0000",
    "image": "/images/pymyflyspy/flight-radar.png",
    "source": "https://robertheaton.com/feed.xml",
    "categories": null
  },
  {
    "id": "47c9f27e-0241-4fac-9233-c98043847d53",
    "title": "Generating infinite, age-appropriate Cat Crimes puzzles",
    "link": "https://robertheaton.com/cat-crimes/",
    "description": "A few weeks ago my 5-year-old and I tried playing Cat Crimes, a puzzle game in which you work out which of your cats ate your shoes. We had a wonderful time - for about 20 minutes. In each round of Cat Crimes you get a puzzle card with a list of clues on it. You have to use the clues to figure out where in your front room each of your 6 cats were sitting. This tells you which one of them was responsible for your ruined stilettos. The game comes with 40 puzzle cards, ranging from the very easy to the mind-crushingly difficult. However, the problem is that “very easy” to “mind-crushingly difficult” is a lot of ground to cover in 40 puzzles, and by the fifth puzzle the clues had become too abstract and difficult for my little man. In the first few puzzles each new clue allowed us to immediately place a new cat and then forget about it. For example, a clue might have told us that Mr. Mittens was sitting opposite Pip Squeak. We already knew where Pip Squeak was sitting, so we could work out exactly where Mr. Mittens was sitting too. This is the perfect level of complexity for a small child and his aging father at 6am. However, as the puzzles get harder the clues stopped neatly resolving like this. They still narrowed down the possible pussy permutations, but they didn’t necessarily allow us to definitively place a new cat straightway. For example, a clue might have told us that Mr Mittens was sitting next to Pip Squeak. We know that Mr Mittens must have been on either Pip Squeak’s left or right, but we couldn’t say for sure which until we’d processed more clues. We might later learn that Duchess was sitting to Pip Squeak’s left, which in turn would tell us that Mr. Mittens must be sitting to her right. To follow this extended chain of logic you need to hold multiple simultaneous superpositions in your head. This is fun and challenging and good puzzle design, but my kid hasn’t done superpositions at school yet so he didn’t get it. I tried drawing some pictures for him, but they made no sense even to me. We got angry with each other and eventually gave up on the game altogether. But we’d really had a great time with those first few puzzles, so that evening I wrote us a computer program that generated an infinite number of new beginner level Cat Crimes challenges. I ran it 20 times and printed out the challenges and their solutions. The next day we continued happily solving age-appropriate cat mysteries together. Downloads You can download: A PDF of 20 more beginner-level challenges The code for my challenge generator. You can use it to generate more challenges, or add new clue types, or update the rules used to select new challenges The program works by generating random challenges until it finds one that has a single unique solution and meets certain constraints. The constraints ensure that the challenges are easy but not too easy. For example, a maximum of 3 cats can be asleep (meaning that they are out of the round), and a maximum of 2 clues are allowed to tell you a cat’s exact position. In order to play the puzzles you’ll need to buy the Cat Crimes game. Good luck, and let me know how you get on! ChatGPT mode At first I tried asking ChatGPT to generate puzzles for me. My puzzles are guaranteed to be solvable and probably about the right difficulty, but since they’re randomly generated their solutions don’t generally have much of a careful narrative behind them. I thought that ChatGPT might be able to do better. “Absolutely!” it said when I asked it, but it kept giving me back puzzles that had either several different solutions or no solutions at all. No dice! To fix this I added a ChatGPT mode to my tool. In this mode the tool gives you a prompt to paste into ChatGPT. The prompt asks ChatGPT it to give you a Cat Crimes puzzle formatted in a specific way. You paste ChatGPT’s output back into the tool, and the tool checks whether the puzzle is valid. If it is then the tool converts the puzzle into printable card; if it’s not then it prints an error message for you to give to ChatGPT to help it fix the problem. You continue this debugging loop until you have a valid (and hopefully more fun) puzzle. Disclaimer I’m not associated with Cat Crimes in any way; this is a completely unofficial fan project. Cat Crimes is owned and published by Thinkfun Inc. Go and buy it from them!",
    "author": "",
    "published": "Mon, 02 Sep 2024 00:00:00 +0000",
    "image": "/images/cc-cards.jpg",
    "source": "https://robertheaton.com/feed.xml",
    "categories": null
  },
  {
    "id": "8c9ed161-2c06-4f8c-8dbe-6b4a58dcd026",
    "title": "178: Working from Home",
    "link": "https://www.programmingthrowdown.com/episodes/178-working-from-home/",
    "description": "Intro topic: Smart homesNews/Links:SpaceX Starship Flight Test Five / Sixhttps://www.youtube.com/watch?v=pIKI7y3DTXkShareDBhttps://github.com/share/sharedbOrion AR Glasseshttps://about.fb.com/news/2024/09/introducing-orion-our-first-true-augmented-reality-glasses/Blade and Sorcery 1.0 is outhttps://www.meta.com/experiences/blade-sorcery-nomad/2031826350263349/Book of the ShowPatrick: The Book that Wouldn’t Burn by Mark Lawrencehttps://amzn.to/4fry2XWJason: Masters of Doomhttps://amzn.to/3YxuD3cPatreon Plug https://www.patreon.com/programmingthrowdown?ty=hTool of the ShowPatrick: Balatrohttps://www.playbalatro.com/Jason: Cursor IDEhttps://www.cursor.com/Topic: Working from HomeIntroBackground \u0026 WFH experiencesIs it Panacea?Realizing it works better for some than othersInternally MotivatedSchedulingCommunicationsHome SetupDedicated spaceHandling Non-work DistractionsKeyboards, Monitors, Music, … Desk related thingsThe specter of RTO ★ Support this podcast on Patreon ★",
    "author": "Patrick Wheeler and Jason Gauci",
    "published": "Tue, 03 Dec 2024 11:07:45 -0600",
    "image": "https://pdst.fm/e/media.transistor.fm/ebf335e4/0fc81bf9.mp3",
    "source": "http://feeds.feedburner.com/ProgrammingThrowdown",
    "categories": [
      "Programming Throwdown",
      " Programming Languages",
      "C",
      "C",
      "Java",
      "Python",
      "Objective C"
    ]
  },
  {
    "id": "03848cde-7370-4be1-9d7c-bb83f7fc8a18",
    "title": "177: Vector Databases",
    "link": "https://www.programmingthrowdown.com/episodes/177-vector-databases/",
    "description": "Intro topic:  Buying a CarNews/Links:Cognitive Load is what Mattershttps://github.com/zakirullin/cognitive-loadDiffusion models are Real-Time Game Engineshttps://gamengen.github.io/Your Company Needs Junior Devshttps://softwaredoug.com/blog/2024/09/07/your-team-needs-juniorsSeamless Streaming / Fish Speech / LLaMA OmniSeamless: https://huggingface.co/facebook/seamless-streamingFish: https://github.com/fishaudio/fish-speech LLaMA Omni: https://github.com/ictnlp/LLaMA-Omni Book of the ShowPatrick: Thought Emporium Youtubehttps://youtu.be/8X1_HEJk2Hw?si=T8EaHul-QMahyUvQJason: Novel Mindshttps://www.novelminds.ai/Patreon Plug https://www.patreon.com/programmingthrowdown?ty=hTool of the ShowPatrick: Escape Simulatorhttps://pinestudio.com/games/escape-simulator/Jason: Cursor IDEhttps://www.cursor.com/Topic: Vector Databases (~54 min)How computers represent data traditionallyASCII valuesRGB valuesHow traditional compression worksHuffman encoding (tree structure)Lossy example: Fourier Transform \u0026 store coefficientsHow embeddings are computedPairwise (contrastive) methodsForward models (self-supervised)Similarity metricsApproximate Nearest Neighbors (ANN)Sub-Linear ANNClusteringSpace Partitioning (e.g. K-D Trees)What a vector database doesPerform nearest-neighbors with many different similarity metricsStore the vectors and the data structures to support sub-linear ANNHandle updates, deletes, rebalancing/reclustering, backups/restoresExamplespgvector: a vector-database plugin for postgresWeaviate, Pinecone Milvus ★ Support this podcast on Patreon ★",
    "author": "Patrick Wheeler and Jason Gauci",
    "published": "Mon, 04 Nov 2024 10:00:00 -0600",
    "image": "https://pdst.fm/e/media.transistor.fm/72129a79/22ebef72.mp3",
    "source": "http://feeds.feedburner.com/ProgrammingThrowdown",
    "categories": [
      "Programming Throwdown",
      " Programming Languages",
      "C",
      "C",
      "Java",
      "Python",
      "Objective C"
    ]
  },
  {
    "id": "3fe2526a-44fc-4292-a436-9a4f8420870c",
    "title": "Meta Releases Llama 3.3: A Multilingual Model with Enhanced Performance and Efficiency",
    "link": "https://www.infoq.com/news/2024/12/meta-releases-llama-3/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
    "description": "Meta has released Llama 3.3, a multilingual large language model aimed at supporting a range of AI applications in research and industry. Featuring a 128k-token context window and architectural improvements for efficiency, the model demonstrates strong performance in benchmarks for reasoning, coding, and multilingual tasks. It is available under a community license on Hugging Face. By Robert Krzaczyński",
    "author": "Robert Krzaczyński",
    "published": "Sat, 14 Dec 2024 18:30:00 GMT",
    "image": "https://res.infoq.com/news/2024/12/meta-releases-llama-3/en/headerimage/generatedHeaderImage-1734199864870.jpg",
    "source": "https://feed.infoq.com",
    "categories": [
      "Hugging Face",
      "Machine Learning",
      "Artificial Intelligence",
      "Data Science",
      "Large language models",
      "Benchmark",
      "AI, ML \u0026 Data Engineering",
      "news"
    ]
  },
  {
    "id": "3ce682ec-3732-4082-8613-7a96132b3811",
    "title": "Google AI Agent Jules Aims at Helping Developers With Their GitHub-based Workflows",
    "link": "https://www.infoq.com/news/2024/12/google-jules-agent/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
    "description": "Part of Gemini 2.0, Google has launched its new AI-based coding assistant in closed preview. Dubbed \"Jules\", the assistant aims at helping developers to work with Python and JavaScript issues and pull requests, handle bug fixes, and other related tasks. By Sergio De Simone",
    "author": "Sergio De Simone",
    "published": "Sat, 14 Dec 2024 15:00:00 GMT",
    "image": "https://res.infoq.com/news/2024/12/google-jules-agent/en/headerimage/google-jules-1734188281948.jpg",
    "source": "https://feed.infoq.com",
    "categories": [
      "Python",
      "github",
      "Google",
      "Large language models",
      "JavaScript",
      "AI, ML \u0026 Data Engineering",
      "Development",
      "DevOps",
      "news"
    ]
  },
  {
    "id": "aad8b35c-45b7-4c6d-b68f-4087de8a97dc",
    "title": "The Future of Offensive Pentesting with Mark Goodwin",
    "link": "https://softwareengineeringdaily.com/2024/12/12/future-of-offensive-pentesting-mark-goodwin/?utm_source=rss\u0026utm_medium=rss\u0026utm_campaign=future-of-offensive-pentesting-mark-goodwin",
    "description": "Offensive penetration testing, or offensive pentesting, involves actively probing a system, network, or application to identify and exploit vulnerabilities, mimicking the tactics of real-world attackers. The goal is to assess security weaknesses and provide actionable insights to strengthen defenses before malicious actors can exploit them. Bishop Fox is a private professional services firm focused on The post The Future of Offensive Pentesting with Mark Goodwin appeared first on Software Engineering Daily.",
    "author": "SEDaily",
    "published": "Thu, 12 Dec 2024 10:00:16 +0000",
    "image": "https://traffic.megaphone.fm/SED8676334597.mp3",
    "source": "https://softwareengineeringdaily.com/category/podcast/feed",
    "categories": [
      "All Content",
      "Exclusive Content",
      "Gregor Vand",
      "Hosts",
      "Podcast",
      "Bishop Fox",
      "Mark Goodwin",
      "Offensive penetration testing",
      "Security"
    ]
  },
  {
    "id": "1a046192-6dbd-427a-9442-82cf6c51135f",
    "title": "WipEout with Dominic Szablewski",
    "link": "https://softwareengineeringdaily.com/2024/12/11/wipeout-with-dominic-szablewski/?utm_source=rss\u0026utm_medium=rss\u0026utm_campaign=wipeout-with-dominic-szablewski",
    "description": "WipEout is a futuristic racing game that was originally released in 1995 for the PlayStation. The game fused fast gameplay, striking art direction, and licensed electronic music. It was a cultural phenomenon and an early showcase for 3D graphics in console gaming. Dominic Szablewski is an engineer, game developer and hacker who has released projects The post WipEout with Dominic Szablewski appeared first on Software Engineering Daily.",
    "author": "SEDaily",
    "published": "Wed, 11 Dec 2024 10:00:14 +0000",
    "image": "https://traffic.megaphone.fm/SED4939023314.mp3",
    "source": "https://softwareengineeringdaily.com/category/podcast/feed",
    "categories": [
      "All Content",
      "Exclusive Content",
      "Hosts",
      "Podcast",
      "3D graphics gaming",
      "Dominic Szablewski",
      "PlayStation",
      "WipEout"
    ]
  },
  {
    "id": "5cc8f3ed-5f5f-42e7-acb7-a74aab8e4e2e",
    "title": "Testimony before the North Dakota Senate Industry, Business and Labor Committee",
    "link": "https://signalvnoise.com/svn3/testimony-before-the-north-dakota-senate-industry-business-and-labor-committee/",
    "description": "Chairman Klein and members of the Senate Industry, Business and Labor Committee- My name is David Heinemeier Hansson, and I’m the CTO and co-founder of Basecamp, a small internet company from Chicago that sells project-management software and email services. I first testified on the topic of big tech monopolies at the House Antitrust Subcommittee’s field… keep reading",
    "author": "DHH",
    "published": "Tue, 09 Feb 2021 18:04:30 +0000",
    "image": "",
    "source": "https://signalvnoise.com/posts.rss",
    "categories": [
      "Uncategorized"
    ]
  },
  {
    "id": "659d2068-8414-4d86-af04-7b669ef4131f",
    "title": "Reiterating our Use Restrictions Policy",
    "link": "https://signalvnoise.com/svn3/reiterating-our-use-restrictions-policy/",
    "description": "The attack on the US Capitol, and subsequent threats of violence surrounding the inauguration of the new US administration, has moved us to reflect and reacquaint ourselves with the reality that however good the maker’s intentions, technology can amplify the ability to cause great harm. This includes us and our products at Basecamp. Therefore, we… keep reading",
    "author": "Jason Fried",
    "published": "Mon, 18 Jan 2021 17:11:00 +0000",
    "image": "",
    "source": "https://signalvnoise.com/posts.rss",
    "categories": [
      "Uncategorized"
    ]
  },
  {
    "id": "8fa7d68e-3315-483a-b19c-2cbe2334cd54",
    "title": "Online communities can work",
    "link": "http://scripting.com/2024/12/14/184411.html?title=onlineCommunitiesCanWork",
    "description": "A piece in today's NYT said all networks flame out, but that's actually too crude a statement. If you want your network not to flame out, give the users the tools to keep things moderated. One of the best features of Facebook is it gives the author of a post the power to decide who can respond to it. (I know they're not the only ones, but they're the first in my experience, so I give them credit.) If I write something that I know will attract trolls, I just restrict it to friends. If they flame me, or even try to provoke an argument, I just unfriend them, and I suspect they know that. The hotheads have been culled from the list over time, there's trust that people don't want and won't pick fights. Assume adults know when they're asking to argue, and not only don't accept the bait, but don't allow them to participate. Keeps things friendly. Not kidding. It doesn't flame out there. It also helps that I've been using these networks since the 70s, and there have been times when I sought out the flames, because I could have shut them off at any time, but I let them keep going. Now I don't. I just don't argue online, and as a result the heat doesn't reach me. In other words, if you give people good tools, and they use them well, you can make this work. PS: To be fair, the NYT piece focused on Bluesky, and they are for sure going down a path much like the one Twitter went down, but it will happen much faster because the trolls are already plentiful and well-organized. They're going for the billion-dollar cashout, for sure and they will very likely get it, and as users we will still be looking for an open system that we can use to get work done.",
    "author": "",
    "published": "Sat, 14 Dec 2024 18:44:11 GMT",
    "image": "",
    "source": "http://scripting.com/rss.xml",
    "categories": null
  },
  {
    "id": "acd2a586-17b6-4ffd-87ff-57cbcfb23d21",
    "title": "",
    "link": "http://scripting.com/2024/12/13.html#a222235",
    "description": "ChatGPT gets projects. Haven't had a chance to explore, but I desperately need this. I organize all my work as projects, and need to have my ChatGPT work be part of that.",
    "author": "",
    "published": "Fri, 13 Dec 2024 22:22:35 GMT",
    "image": "",
    "source": "http://scripting.com/rss.xml",
    "categories": null
  },
  {
    "id": "089ed322-4729-48b1-a47a-adafc5d26b2c",
    "title": "Webcam randomly pausing in OBS, Discord, and websites - LSVCam and TikTok Studio",
    "link": "http://feeds.hanselman.com/~/905963465/0/scotthanselman~Webcam-randomly-pausing-in-OBS-Discord-and-websites-LSVCam-and-TikTok-Studio",
    "description": "I use my webcam constantly for streaming and I'm pretty familiar with all the internals and how the camera model on Windows works. I also use OBS extensively, so I regularly use the OBS virtual camera and flow everything through Open Broadcasting Studio. For my podcast, I use Zencastr which is a web-based app that talks to the webcam via the browser APIs. For YouTubes, I'll use Riverside or StreamYard, also webapps. I've done this reliably for the last several years without any trouble. Yesterday, I started seeing the most weird thing and it was absolutely perplexing and almost destroyed the day. I started seeing regular pauses in my webcam stream but only in two instances. The webcam would pause for 10-15 seconds every 90 or so seconds when access the Webcam in a browser I would see a long pause/hang in OBS when double clicking on my Video Source (Webcam) to view its properties Micah initially said USB but my usb bus and hubs have worked reliably for years. Thought something might have changed in my El Gato capture device, but that has also been rock solid for 1/2 a decade. Then I started exploring virtual cameras and looked in the windows camera dialog under settings for a list of all virtual cameras. Interestingly, virtual cameras don't get listed under Cameras in Settings in Windows: From what I can tell, there's no user interface to list out all of your cameras - virtual or otherwise - in windows. Here's a quick PowerShell script you can run to list out anything 'connected' that also includes the string \"cam\" in your local devicesGet-CimInstance -Namespace root\\cimv2 -ClassName Win32_PnPEntity | Where-Object { $_.Name -match 'Cam' } | Select-Object Name, Manufacturer, PNPDeviceID and my outputName Manufacturer PNPDeviceID---- ------------ -----------Cam Link 4K Microsoft USB\\VID_0FD9\u0026PID_0066\u0026MI_00\\7\u00263768531A\u00260\u00260000Digital Audio Interface (2- Cam Link 4K) Microsoft SWD\\MMDEVAPI\\{0.0.1.00000000}.{AF1690B6-CA2A-4AD3-AAFD-8DDEBB83DD4A}Logitech StreamCam WinUSB Logitech USB\\VID_046D\u0026PID_0893\u0026MI_04\\7\u0026E36D0CF\u00260\u00260004Logitech StreamCam (Generic USB Audio) USB\\VID_046D\u0026PID_0893\u0026MI_02\\7\u0026E36D0CF\u00260\u00260002Logitech StreamCam Logitech USB\\VID_046D\u0026PID_0893\u0026MI_00\\7\u0026E36D0CF\u00260\u00260000Remote Desktop Camera Bus Microsoft UMB\\UMB\\1\u0026841921D\u00260\u0026RDCAMERA_BUSCam Link 4K (Generic USB Audio) USB\\VID_0FD9\u0026PID_0066\u0026MI_03\\7\u00263768531A\u00260\u00260003Windows Virtual Camera Device Microsoft SWD\\VCAMDEVAPI\\B486E21F1D4BC97087EA831093E840AD2177E046699EFBF62B27304F5CCAEF57 However, when I list out my cameras using JavaScript enumerateDevices() like this// Put variables in global scope to make them available to the browser console.async function listWebcams() { try { const devices = await navigator.mediaDevices.enumerateDevices(); const webcams = devices.filter(device =\u003e device.kind === 'videoinput'); if (webcams.length \u003e 0) { console.log(\"Connected webcams:\"); webcams.forEach((webcam, index) =\u003e { console.log(`${index + 1}. ${webcam.label || `Camera ${index + 1}`}`); }); } else { console.log(\"No webcams found.\"); } } catch (error) { console.error(\"Error accessing media devices:\", error); }}listWebcams(); I would get:Connected webcams: test.html:11 1. Logitech StreamCam (046d:0893) test.html:11 2. OBS Virtual Camera (Windows Virtual Camera) test.html:11 3. Cam Link 4K (0fd9:0066) test.html:11 4. LSVCam test.html:11 5. OBS Virtual Camera So, what, what's LSVCam? And depending on how I'd call it I'd get the pause and getUserMedia error: NotReadableError NotReadableError: Could not start video source Some apps could see this LSVCam and others couldn't. OBS really dislikes it, browsers really dislike it and it seemed to HANG on enumeration of cameras. Why can parts of Windows see this camera and others can't? I don't know. Do you? Regardless, it turns that it appears once in my registry, here (this is a dump of the key, you just care about the Registry PATH)Windows Registry Editor Version 5.00[HKEY_CLASSES_ROOT\\CLSID\\{860BB310-5D01-11d0-BD3B-00A0C911CE86}\\Instance\\LSVCam]\"FriendlyName\"=\"LSVCam\"\"CLSID\"=\"{BA80C4AD-8AED-4A61-B434-481D46216E45}\"\"FilterData\"=hex:02,00,00,00,00,00,20,00,01,00,00,00,00,00,00,00,30,70,69,33,\\ 08,00,00,00,00,00,00,00,01,00,00,00,00,00,00,00,00,00,00,00,30,74,79,33,00,\\ 00,00,00,38,00,00,00,48,00,00,00,76,69,64,73,00,00,10,00,80,00,00,aa,00,38,\\ 9b,71,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00 If you want to get rid of it, delete HKEY_CLASSES_ROOT\\CLSID\\{860BB310-5D01-11d0-BD3B-00A0C911CE86}\\Instance\\LSVCam WARNING: DO NOT delete the \\Instance, just the LSVCam and below. I am a random person on the internet and you got here by googling, so if you mess up your machine by going into RegEdit.exe, I'm sorry to this man, but it's above me now. Where did LSVCam.dll come from, you may ask? TikTok Live Studio, baby. Live Studio Video/Virtual Cam, I am guessing.Directory of C:\\Program Files\\TikTok LIVE Studio\\0.67.2\\resources\\app\\electron\\sdk\\lib\\MediaSDK_V109/18/2024 09:20 PM 218,984 LSVCam.dll 1 File(s) 218,984 bytes This is a regression that started recently for me, so it's my opinion that they are installing a virtual camera for their game streaming feature but they are doing it poorly. It's either not completely installed, or hangs on enumeration, but the result is you'll see hangs on camera enumeration in your apps, especually browser apps that poll for cameras changes or check on a timer. Nothing bad will happen if you delete the registry key BUT it'll show back up when you run TikTok Studio again. I still stream to TikTok, I just delete this key each time until someone on the TikTok Studio development team sees this blog post. Hope this helps!© 2021 Scott Hanselman. All rights reserved.",
    "author": "Scott Hanselman",
    "published": "Wed, 09 Oct 2024 19:32:28 GMT",
    "image": "https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/730f6664b802_E062/image_thumb.png",
    "source": "http://feeds.hanselman.com/ScottHanselman",
    "categories": [
      "Bugs"
    ]
  },
  {
    "id": "506cb4dc-cd55-43f2-8084-02c0d34b644f",
    "title": "Open Sourcing DOS 4",
    "link": "http://feeds.hanselman.com/~/882544025/0/scotthanselman~Open-Sourcing-DOS",
    "description": "See the canonical version of this blog post at the Microsoft Open Source Blog! Ten years ago, Microsoft released the source for MS-DOS 1.25 and 2.0 to the Computer History Museum, and then later republished them for reference purposes. This code holds an important place in history and is a fascinating read of an operating system that was written entirely in 8086 assembly code nearly 45 years ago. Today, in partnership with IBM and in the spirit of open innovation, we're releasing the source code to MS-DOS 4.00 under the MIT license. There's a somewhat complex and fascinating history behind the 4.0 versions of DOS, as Microsoft partnered with IBM for portions of the code but also created a branch of DOS called Multitasking DOS that did not see a wide release. https://github.com/microsoft/MS-DOS A young English researcher named Connor \"Starfrost\" Hyde recently corresponded with former Microsoft Chief Technical Officer Ray Ozzie about some of the software in his collection. Amongst the floppies, Ray found unreleased beta binaries of DOS 4.0 that he was sent while he was at Lotus. Starfrost reached out to the Microsoft Open Source Programs Office (OSPO) to explore releasing DOS 4 source, as he is working on documenting the relationship between DOS 4, MT-DOS, and what would eventually become OS/2. Some later versions of these Multitasking DOS binaries can be found around the internet, but these new Ozzie beta binaries appear to be much earlier, unreleased, and also include the ibmbio.com source.  Scott Hanselman, with the help of internet archivist and enthusiast Jeff Sponaugle, has imaged these original disks and carefully scanned the original printed documents from this \"Ozzie Drop\". Microsoft, along with our friends at IBM, think this is a fascinating piece of operating system history worth sharing.  Jeff Wilcox and OSPO went to the Microsoft Archives, and while they were unable to find the full source code for MT-DOS, they did find MS DOS 4.00, which we're releasing today, alongside these additional beta binaries, PDFs of the documentation, and disk images. We will continue to explore the archives and may update this release if more is discovered.  Thank you to Ray Ozzie, Starfrost, Jeff Sponaugle, Larry Osterman, our friends at the IBM OSPO, as well as the makers of such digital archeology software including, but not limited to Greaseweazle, Fluxengine, Aaru Data Preservation Suite, and the HxC Floppy Emulator. Above all, thank you to the original authors of this code, some of whom still work at Microsoft and IBM today! If you'd like to run this software yourself and explore, we have successfully run it directly on an original IBM PC XT, a newer Pentium, and within the open source PCem and 86box emulators.  © 2021 Scott Hanselman. All rights reserved.",
    "author": "Scott Hanselman",
    "published": "Thu, 25 Apr 2024 16:46:13 GMT",
    "image": "https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Open-Sourcing-DOS-4_E712/clip_image002_5b6e1c02-95d8-4ee1-87af-ca53a8b0bd56.png",
    "source": "http://feeds.hanselman.com/ScottHanselman",
    "categories": [
      "Open Source"
    ]
  },
  {
    "id": "4123460b-eaa9-43c9-a42d-4792bb3afe11",
    "title": "SE Radio 646: Matthew Skelton on Team Topologies",
    "link": "http://se-radio.net/se-radio-646-matthew-skelton-on-team-topologies",
    "description": "Matthew Skelton joins host Giovanni Asproni to talk about team topologies—an approach to organizing teams for fast flow of value. The episode starts with a description of the underlying principles before exploring the approach in more detail. From there, they discuss when to consider implementing the approach; keys to a successful implementation; and some common mistakes to avoid. Brought to you by IEEE Computer Society and IEEE Software magazine.",
    "author": "SE-Radio Team",
    "published": "Wed, 11 Dec 2024 23:15:00 +0000",
    "image": "https://traffic.libsyn.com/secure/seradio/646-matthew-skelton-team-topologies.mp3?dest-id=23379",
    "source": "http://feeds.feedburner.com/se-radio",
    "categories": [
      "teams",
      "flow",
      "agile",
      "teamwork",
      "psychological safety",
      "cognitive load",
      "team topologies",
      "conways law"
    ]
  },
  {
    "id": "1e571c4a-8c44-46f2-8e1b-c607a8a2e704",
    "title": "SE Radio 645: Vinay Tripathi on BGP Optimization",
    "link": "http://se-radio.net/se-radio-645-vinay-tripathi-on-bgp-optimization",
    "description": "Vinay Tripathi, a senior network engineer in Google Backbone Engineering and an 18-year network engineering veteran, discusses BGP optimization, a technique that's critical in achieving top goals in distributed applications. Host Philip Winston speaks with Tripathi about BGP, autonomous systems, peer grouping, router hardware and software, software-defined networks, and shared network optimization and debugging stories. Brought to you by IEEE Computer Society and IEEE Software magazine.",
    "author": "SE-Radio Team",
    "published": "Wed, 04 Dec 2024 01:37:00 +0000",
    "image": "https://traffic.libsyn.com/secure/seradio/645-vinay-tripathi-bgp-optimization.mp3?dest-id=23379",
    "source": "http://feeds.feedburner.com/se-radio",
    "categories": [
      "networking",
      "routing",
      "BGP",
      "border gateway protocol"
    ]
  },
  {
    "id": "62516a2f-ed5b-4725-b448-fa4ed17848a2",
    "title": "AI agents that help doctors get paid",
    "link": "https://stackoverflow.blog/2024/12/13/ai-agents-that-help-doctors-get-paid/",
    "description": "Dan Parsons, co-founder and Chief Experience Officer at Thoughtful AI, talks about how his company is using AI to simplify how providers get paid by insurance companies.",
    "author": "Ryan Donovan",
    "published": "Fri, 13 Dec 2024 05:40:00 GMT",
    "image": "",
    "source": "https://stackoverflow.blog/feed/",
    "categories": [
      "podcast",
      "generative-ai",
      "se-tech",
      "se-stackoverflow",
      "medical-tech"
    ]
  },
  {
    "id": "44025f81-50b8-4499-9375-ebdb01a31972",
    "title": "It’s not what you know, it’s how you know you know it",
    "link": "https://stackoverflow.blog/2024/12/10/it-s-not-what-you-know-it-s-how-you-know-you-know-it/",
    "description": "The complex relationship of give-and-take in the knowledge journey is untangled in the results from the latest Stack Overflow Knows survey.",
    "author": "Erin Yepis",
    "published": "Tue, 10 Dec 2024 18:00:00 GMT",
    "image": "",
    "source": "https://stackoverflow.blog/feed/",
    "categories": [
      "pulse-survey",
      "code-for-a-living",
      "ai",
      "learning",
      "knowledge-sharing"
    ]
  },
  {
    "id": "5cd36240-4fbd-4384-a6ed-901cf9a5c19a",
    "title": "Mac vs Windows for Programming",
    "link": "https://www.thecrazyprogrammer.com/2023/11/mac-vs-windows-for-programming.html",
    "description": "The programming world is quite thrilling and daily there are many new software’s to exploit computer resources. When it comes to choosing the right operating system for your programming needs, MacOS \u0026 Windows are two operating systems that have their benefits and drawbacks. However, depending on what type of developer you are, one can be … Mac vs Windows for Programming Read More » The post Mac vs Windows for Programming appeared first on The Crazy Programmer.",
    "author": "Zainab Sutarwala",
    "published": "Mon, 06 Nov 2023 11:30:46 +0000",
    "image": "http://thecrazyprogrammer.com/wp-content/uploads/2023/11/Mac-vs-Windows-for-Programming.png",
    "source": "https://www.thecrazyprogrammer.com/category/programming/feed",
    "categories": [
      "Programming"
    ]
  },
  {
    "id": "bbc42d39-e13d-4e73-80d6-49ed8e757a85",
    "title": "10 Best Laptops for Coding and Programming in India 2024",
    "link": "https://www.thecrazyprogrammer.com/2023/08/best-laptop-for-programming.html",
    "description": "This article will guide you to choose the best laptop for coding and programming and some of my top laptop picks for developers and students in India. I have also given the best picks based on prices under 1 Lakh, 70000, 60000, 50000, 40000, etc. As a programmer or developer, it becomes really confusing to … 10 Best Laptops for Coding and Programming in India 2024 Read More » The post 10 Best Laptops for Coding and Programming in India 2024 appeared first on The Crazy Programmer.",
    "author": "Neeraj Mishra",
    "published": "Sun, 20 Aug 2023 15:38:06 +0000",
    "image": "http://thecrazyprogrammer.com/wp-content/uploads/2016/12/How-to-Choose-Best-Laptop-for-Programming-in-2017.jpeg",
    "source": "https://www.thecrazyprogrammer.com/category/programming/feed",
    "categories": [
      "Programming"
    ]
  },
  {
    "id": "5c86d3b7-4305-482f-a90d-2b730f4c77a5",
    "title": "Building Confidence: A Case Study in How to Create Confidence Scores for GenAI Applications",
    "link": "https://engineering.atspotify.com/2024/12/building-confidence-a-case-study-in-how-to-create-confidence-scores-for-genai-applications/",
    "description": "TL;DR Getting a response from GenAI is quick and straightforward. But what about the confidence level for that response? In [...] The post Building Confidence: A Case Study in How to Create Confidence Scores for GenAI Applications appeared first on Spotify Engineering.",
    "author": "alexandrawei",
    "published": "Thu, 12 Dec 2024 17:56:03 +0000",
    "image": "",
    "source": "https://labs.spotify.com/feed/",
    "categories": [
      "Data",
      "Data Science",
      "Machine Learning"
    ]
  },
  {
    "id": "e44f924f-123c-45e1-a5b5-5ed2f299046d",
    "title": "Congratulations to the Recipients of the 2024 Spotify FOSS Fund",
    "link": "https://engineering.atspotify.com/2024/11/congratulations-to-the-recipients-of-the-2024-spotify-foss-fund/",
    "description": "TL;DR The Spotify FOSS Fund is back again! We created the Spotify FOSS Fund in 2022 to help support the [...] The post Congratulations to the Recipients of the 2024 Spotify FOSS Fund appeared first on Spotify Engineering.",
    "author": "alexandrawei",
    "published": "Mon, 25 Nov 2024 14:00:00 +0000",
    "image": "",
    "source": "https://labs.spotify.com/feed/",
    "categories": [
      "Developer Tools",
      "Open Source",
      "People",
      "engineering leadership"
    ]
  },
  {
    "id": "460def30-036c-4eab-8635-e2d5510c99ff",
    "title": "My Journey To Airbnb | Vijaya Kaza",
    "link": "https://medium.com/airbnb-engineering/my-journey-to-airbnb-vijaya-kaza-8f06543b38d5?source=rss----53c7c27702d5---4",
    "description": "",
    "author": "Lauren Mackevich",
    "published": "Thu, 05 Dec 2024 18:36:44 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*FfdFpfjGZODh7ltZ2W2Mrg.jpeg",
    "source": "https://medium.com/feed/airbnb-engineering",
    "categories": [
      "engineering",
      "people",
      "technology",
      "leadership",
      "cybersecurity"
    ]
  },
  {
    "id": "d15cae24-cbcb-43b4-ae32-a427c5eb9d1e",
    "title": "From Data to Insights: Segmenting Airbnb’s Supply",
    "link": "https://medium.com/airbnb-engineering/from-data-to-insights-segmenting-airbnbs-supply-c88aa2bb9399?source=rss----53c7c27702d5---4",
    "description": "",
    "author": "Alexandre Salama",
    "published": "Mon, 25 Nov 2024 18:02:22 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*Lqx5Zg187zZY1UewaG7Q7Q.jpeg",
    "source": "https://medium.com/feed/airbnb-engineering",
    "categories": [
      "data-analysis",
      "artificial-intelligence",
      "machine-learning",
      "analytics",
      "data-science"
    ]
  },
  {
    "id": "b2db0a41-5058-4e79-9ea6-e5aa8d8047b5",
    "title": "Episode 159 - JetBrains Space",
    "link": "https://cynical.dev/159",
    "description": "In this episode we talk about JetBrains Space, with Valerie Andrianova.   Contacting Valerie Andrianova Website: https://www.jetbrains.com/ Twitter: https://twitter.com/va_leriya LinkedIn: https://www.linkedin.com/in/valerie-andrianova-1172031a/ Blog: https://blog.jetbrains.com/author/valerie-andrianova/ Episode Editing by - RJJ Software Ltd (https://rjj-software.co.uk/ )",
    "author": "",
    "published": "Mon, 28 Jun 2021 07:00:00 +0000",
    "image": "https://archive.org/download/CynicalDeveloper/episode-159.mp3",
    "source": "https://cynicaldeveloper.com/feed/podcast",
    "categories": null
  },
  {
    "id": "0d234671-f7dc-4b01-840a-a15b75c98bd7",
    "title": "Episode 158 - Code Reviews",
    "link": "https://cynical.dev/158",
    "description": "In this episode we talk about Code Reviews with Jordan Ambra   Contacting Jordan Ambra   Website: https://www.serenity.software Twitter: https://twitter.com/jordanambra LinkedIn: https://www.linkedin.com/in/jordanambra/   Episode Editing by - RJJ Software Ltd (https://rjj-software.co.uk/)",
    "author": "",
    "published": "Mon, 14 Jun 2021 07:00:00 +0000",
    "image": "https://archive.org/download/CynicalDeveloper/episode-158.mp3",
    "source": "https://cynicaldeveloper.com/feed/podcast",
    "categories": null
  },
  {
    "id": "62381736-a840-4e4a-a85d-f7a5c4f187f1",
    "title": "GitHub Availability Report: November 2024",
    "link": "https://github.blog/news-insights/company-news/github-availability-report-november-2024/",
    "description": "In November, we experienced one incident that resulted in degraded performance across GitHub services. The post GitHub Availability Report: November 2024 appeared first on The GitHub Blog.",
    "author": "Jakub Oleksy",
    "published": "Fri, 13 Dec 2024 17:00:21 +0000",
    "image": "",
    "source": "https://github.blog/feed/",
    "categories": [
      "Company news",
      "News \u0026 insights",
      "GitHub Availability Report"
    ]
  },
  {
    "id": "2349552a-7bf3-4b2b-b981-38b7d4bf23fe",
    "title": "So many tokens, so little time: Introducing a faster, more flexible byte-pair tokenizer",
    "link": "https://github.blog/ai-and-ml/llms/so-many-tokens-so-little-time-introducing-a-faster-more-flexible-byte-pair-tokenizer/",
    "description": "We released a new open source byte-pair tokenizer that is faster and more flexible than popular alternatives. The post So many tokens, so little time: Introducing a faster, more flexible byte-pair tokenizer appeared first on The GitHub Blog.",
    "author": "Hendrik van Antwerpen",
    "published": "Thu, 12 Dec 2024 13:51:13 +0000",
    "image": "https://github.blog/wp-content/uploads/2024/12/throughput-with-pre-tokenization.png?w=300\u0026resize=300%2C300",
    "source": "https://github.blog/feed/",
    "categories": [
      "AI \u0026 ML",
      "LLMs",
      "open source"
    ]
  },
  {
    "id": "7c8c0460-2d36-4731-97c3-0608455822b4",
    "title": "More Pro Apps for Non-Pros - WWDC Keynote Recap with Kathy Campbell",
    "link": "https://share.transistor.fm/s/88e9d51b",
    "description": "Follow Kathy Campbell@mrssoupCheck out the Productivity in Tech YouTube Channelhttps://www.youtube.com/c/kjaymillerFollow Jay@kjaymillerMore Episodes and Things at https://podcast.productivityintech.com.Want to Support the Show?While you can't support the show directly you can support all the things Jay is up to by sponsoring him on GitHub!https://github.com/sponsors/kjaymiller/",
    "author": "Jay Miller",
    "published": "Tue, 08 Jun 2021 16:55:08 -0700",
    "image": "https://media.transistor.fm/88e9d51b/25d5dd7b.mp3",
    "source": "https://feeds.transistor.fm/productivity-in-tech-podcast",
    "categories": [
      "Productivity",
      " Technology"
    ]
  },
  {
    "id": "a77a8aec-7f7c-4f1d-bb6f-35c36d40fc04",
    "title": "The Queen of Apple Automation: Rosemary Orchard",
    "link": "https://share.transistor.fm/s/f6991b0b",
    "description": "Markers---00:00:00 - Rosemary Orchard00:04:54 - iOS Today00:06:50 - Nested Folders00:10:10 - Automator and Automating00:17:40 - Automating as a Developer00:31:38 - Closing00:34:24 - AftershowLinks iOS TodayNested FoldersAutomators.fmThe Podcast AnswermanBunches of Automation - AutomatorszapierIntegromatStreamDeckBunchFollow Rose- @Rosemaryorchard- WebsiteFollow Jayhttps://www.youtube.com/c/kjaymiller@kjaymillerMore Episodes and Things at https://podcast.productivityintech.com.Want to Support the Show?Support all the things Jay is up to by sponsoring him on GitHub!https://github.com/sponsors/kjaymiller/",
    "author": "Jay Miller",
    "published": "Tue, 01 Jun 2021 20:21:14 -0700",
    "image": "https://media.transistor.fm/f6991b0b/03be8858.mp3",
    "source": "https://feeds.transistor.fm/productivity-in-tech-podcast",
    "categories": [
      "Productivity",
      " Technology"
    ]
  },
  {
    "id": "26c6167b-0bef-4455-999d-f53f4f31f61b",
    "title": "Securing Your Email Sending With Python: Authentication and Encryption",
    "link": "https://stackabuse.com/securing-your-email-sending-with-python-authentication-and-encryption/",
    "description": "Email encryption and authentication are modern security techniques that you can use to protect your emails and their content from unauthorized access. Everyone, from individuals to business owners, uses emails for official communication, which may contain sensitive information. Therefore, securing emails is important, especially when cyberattacks like phishing, smishing, etc.",
    "author": "Ivan Djuric",
    "published": "Thu, 19 Sep 2024 02:29:13 GMT",
    "image": "",
    "source": "https://stackabuse.com/rss/",
    "categories": [
      "python",
      "email"
    ]
  },
  {
    "id": "fddd0f0b-f0d8-426c-bcbf-ff7f5aaae8b4",
    "title": "Using Proxies in Web Scraping – All You Need to Know",
    "link": "https://stackabuse.com/using-proxies-in-web-scraping-all-you-need-to-know/",
    "description": "Introduction Web scraping typically refers to an automated process of collecting data from websites. On a high level, you're essentially making a bot that visits a website, detects the data you're interested in, and then stores it into some appropriate data structure, so you can easily analyze and access it",
    "author": "Leonardo Rodriguez",
    "published": "Thu, 12 Sep 2024 13:23:00 GMT",
    "image": "/assets/images/icon-information-circle-solid.svg",
    "source": "https://stackabuse.com/rss/",
    "categories": [
      "node",
      "web scraping"
    ]
  },
  {
    "id": "d7f7c118-c520-49fd-9f63-d77ecc89585f",
    "title": "Microsoft Build: Responsible AI (Sarah Bird)",
    "link": "https://thewomenintechshow.com/2023/08/01/microsoft-build-responsible-ai-sarah-bird/",
    "description": "Sarah Bird, Engineering Lead at Microsoft talked about what responsible AI is and its main components and best practices. Sarah also explained what generative AI is and example metrics to evaluate systems that use it. At the end we talked about existing tools that can assist in developing AI systems.",
    "author": "edaena",
    "published": "Tue, 01 Aug 2023 15:18:20 +0000",
    "image": "http://media.blubrry.com/thewomenintechshow/wintshow.files.wordpress.com/2023/08/5-sarah-bird.mp3",
    "source": "https://thewomenintechshow.com/category/podcast/feed/",
    "categories": [
      "Microsoft",
      "podcast",
      "Artificial Intelligence",
      "Generative AI",
      "Microsoft Build",
      "Program Manager",
      "Software Development"
    ]
  },
  {
    "id": "e43a7b6d-577b-4f31-9036-804c7f33cec5",
    "title": "Microsoft Build: Application Security with Redis Cache (Shruti Pathak)",
    "link": "https://thewomenintechshow.com/2023/07/24/microsoft-build-application-security-with-redis-cache-shruti-pathak/",
    "description": "Shruti Pathak, Senior Product Manager at Microsoft, talked about optimizing web applications by using Redis cache and things to consider to make it secure. Shruti also explained what in-memory databases are and how they improve performance. At the end we also talked about the program manager and her experience transitioning from a software development role.",
    "author": "edaena",
    "published": "Tue, 25 Jul 2023 01:42:17 +0000",
    "image": "http://media.blubrry.com/thewomenintechshow/wintshow.files.wordpress.com/2023/07/4_shruti_pathak.mp3",
    "source": "https://thewomenintechshow.com/category/podcast/feed/",
    "categories": [
      "Microsoft",
      "podcast",
      "Microsoft Build",
      "Program Manager",
      "Software Development"
    ]
  },
  {
    "id": "c1f15253-0d47-441f-9da1-30c245cd9b0f",
    "title": "315. Happy Holidays from the definitive developers podcast",
    "link": "https://sites.libsyn.com/96306/315-happy-holidays-from-the-definitive-developers-podcast",
    "description": "In this special holiday episode, we reflect on the year gone by. In a time full of challenges, we extend warm holiday wishes to our listeners, acknowledging the turmoil present in the tech industry and the world at large.",
    "author": "",
    "published": "Fri, 22 Dec 2023 12:00:00 +0000",
    "image": "https://traffic.libsyn.com/secure/therabbithole/EP_315_Happy_Holidays_from_the_definitive_developers_podcast.mp3?dest-id=495327",
    "source": "http://therabbithole.libsyn.com/rss",
    "categories": null
  },
  {
    "id": "6f0e1e02-65e6-4ef9-a355-20b712003b18",
    "title": "314. XP Value - Respect",
    "link": "https://sites.libsyn.com/96306/314-xp-value-respect",
    "description": "Following our series of discussions on XP values, this conversation covers the idea of respect and how things change when it is upheld. Tune in to hear a breakdown of why it is so integral to success and what it means for our relationship with code as well as one another.",
    "author": "",
    "published": "Tue, 12 Dec 2023 08:00:00 +0000",
    "image": "https://traffic.libsyn.com/secure/therabbithole/EP_314_XP_Value_--_Respect.mp3?dest-id=495327",
    "source": "http://therabbithole.libsyn.com/rss",
    "categories": null
  },
  {
    "id": "94cad53e-c0d9-4bca-8699-085df40ee38e",
    "title": "Break Stuff on Purpose",
    "link": "https://slack.engineering/break-stuff-on-purpose/",
    "description": "“A complex system can fail in an infinite number of ways.” -“Systemantics” by John Gall   Incidents are stressful but inevitable. Even services designed for availability will eventually encounter a failure. Engineers naturally find it daunting to defend their systems against the “infinite number of ways” things can go wrong.  Our team found ourselves in… The post Break Stuff on Purpose appeared first on Engineering at Slack.",
    "author": "Sean Madden",
    "published": "Tue, 10 Dec 2024 09:00:41 +0000",
    "image": "https://s.w.org/images/core/emoji/15.0.3/72x72/1f4bc.png",
    "source": "https://slack.engineering/feed",
    "categories": [
      "Uncategorized"
    ]
  },
  {
    "id": "49cb2302-7f62-49e6-a6d4-5c80ee3e29c1",
    "title": "Slack Audit Logs and Anomalies",
    "link": "https://slack.engineering/slack-audit-logs-and-anomalies/",
    "description": "What are Slack Audit Logs? Like many Software as a Service (SaaS) offerings, Slack provides audit logs to Enterprise Grid customers that record when entities take an action on the platform. For example, when a user logs in, when a user updates their profile, when an app downloads a file, etc. The actual list of… The post Slack Audit Logs and Anomalies appeared first on Engineering at Slack.",
    "author": "Ryan Katkov",
    "published": "Mon, 09 Dec 2024 17:02:13 +0000",
    "image": "https://slack.engineering/wp-content/uploads/sites/7/2024/12/image1.png?w=640",
    "source": "https://slack.engineering/feed",
    "categories": [
      "Uncategorized"
    ]
  },
  {
    "id": "0413211f-a5c9-40e6-a295-2abeaf8cdc7a",
    "title": "AI agents that help doctors get paid",
    "link": "https://stackoverflow.blog/podcast/",
    "description": "Thoughtful AI provides AI agents that help revenue cycle management (RCM) teams get providers their money from insurance companies. Does AI have a better bedside manner than doctors? One study suggest they do. Connect with Dan on X and LinkedIn. Congrats to Populist badge winner Marcio Mazzucato for doing the accepted answer one better on How do I emulate a 403 error page?.Want a preview? Here are some great quotes from this episode: “ The human transformation of getting off of this computer platform and back out into the world and back out into trying to advance, some of the existential, whether it's risks or opportunities or threats, but get away from this huge workforce sitting in front of computers. We also have this fundamental belief that humans actually aren't great at operating computers, but other computers are really good at it.”“ We find the average RCM team has attrition rates of 10 to 40%, which is three to 10X other industries. So they already have a leaky bucket. They are actually understaffed. They are having trouble keeping up. So for us, it's more about adding abundance of capacity at a much more lower cost that a higher quality that will allow them to be more financially sound organizations. I know there's a lot of conversation about replacing the actual human. Yeah, of course. There are folks out there who organizations will look and say, Hey, if you're just sitting there moving data around and you're not very good at it and you hate that job and like it's hard to staff and train, it's going to make a lot of sense to replace with an AI solution.”“ We think our mission is to fix the healthcare system, not to duct tape the current environment. And we have multiple acts in our mission to achieve that. And I completely align. It is the broken down institutions. That is actually what's driving a lot of the problem. We do have to get closer to the metal or we do have to get closer to the systematic changes. And, that's likely going to require some big movement as it relates to how the money moves.”",
    "author": "Stack Overflow",
    "published": "Fri, 13 Dec 2024 21:02:17 +0000",
    "image": "https://pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/acca463c-7b29-4a4f-9138-331cd95e7e64/audio/128/default.mp3?aid=rss_feed\u0026awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b\u0026awEpisodeId=acca463c-7b29-4a4f-9138-331cd95e7e64\u0026feed=XA_851k3",
    "source": "https://feeds.simplecast.com/XA_851k3",
    "categories": null
  },
  {
    "id": "7e55c8ce-a6bf-4184-a506-d55cf2c2ab45",
    "title": "What security teams need to understand about developers",
    "link": "https://stackoverflow.blog/podcast/",
    "description": "NightVision offers web and API security testing tools built to integrate with developers’ established workflows. NightVision identifies issues by precise area(s) of code, so devs don’t have to chase down and validate vulnerability reports, a process that eats up precious engineering resources. Get started with their docs.Connect with Kinnaird on LinkedIn. Stack Overflow user Cecil Curry earned a Populist badge with their exceptionally thoughtful answer to In Python how can one tell if a module comes from a C extension?.Some great excerpts from this episode:“From the program side, I would say if you're running a security program or you're starting from day one, there's a danger with security people and being the security person who's out of touch or doesn't know what the life of a developer is like. And you don't want to be that person. And that's not how you have actual business impact, right? So you got to embed with teams, threat model, and then do some preventative security testing, right? Testing things before it gets into production, not just relying on having a bug bounty program.”“With code scanning, you're looking for potentially insecure patterns in the code, but with dynamic testing, you're actually testing the live application. So we're sending HTTP traffic to the application, sending malicious payloads in forms or in query parameters, et cetera, to try to elicit a response or to send something to an attacker controlled server. And so using this, we're able to. Not just have theoretical vulnerabilities, but exploitable vulnerabilities. I mean, how many times have you looked at something in GitHub security alerts and thought, yeah, that's not real. That's not exploitable. Right. So we're trying to avoid that and have higher quality touch points with developers. So when they look at something, they say, okay, that's exploitable. You showed me how. And you traced it back to code.”",
    "author": "Kinnaird McQuaid, Ryan Donovan, Ben Popper",
    "published": "Tue, 10 Dec 2024 05:20:00 +0000",
    "image": "https://pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/d553ff1e-0516-440b-be96-11561b0bd48d/audio/128/default.mp3?aid=rss_feed\u0026awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b\u0026awEpisodeId=d553ff1e-0516-440b-be96-11561b0bd48d\u0026feed=XA_851k3",
    "source": "https://feeds.simplecast.com/XA_851k3",
    "categories": [
      "api testing",
      " security testing",
      " nightvision",
      " hacking",
      " application testing",
      " application security testing",
      " api security",
      " api",
      " security",
      " genai",
      " ai testing",
      " dynamic application security testing",
      " hacker"
    ]
  },
  {
    "id": "a64ce96e-22e0-40d0-b965-0d2555c04675",
    "title": "Upcoming changes to SoundCloud Access Tokens",
    "link": "https://developers.soundcloud.com/blog/access-token-changes",
    "description": "tl;dr: If your app doesn’t store SoundCloud access tokens outside of the context of a user’s client (i.e. a database) the following should…",
    "author": "",
    "published": "Mon, 02 Dec 2024 00:00:00 GMT",
    "image": "",
    "source": "https://developers.soundcloud.com/blog/blog.rss",
    "categories": null
  },
  {
    "id": "1ca736c8-b38c-44e0-af0a-82df3f9a5818",
    "title": "Migration to Oauth 2.1",
    "link": "https://developers.soundcloud.com/blog/oauth-migration",
    "description": "Earlier this year, we updated our API Guide to let developers know that SoundCloud authentication is now operating on the OAuth 2.1 protocol…",
    "author": "",
    "published": "Tue, 23 Apr 2024 00:00:00 GMT",
    "image": "",
    "source": "https://developers.soundcloud.com/blog/blog.rss",
    "categories": null
  },
  {
    "id": "7ce2435f-a4a5-49c3-ae76-3114385c4e48",
    "title": "Deeper Dive into NX with Juri Strumpflohner",
    "link": "https://6figuredev.com/podcast/deeper-dive-into-nx-with-juri-strumpflohner/",
    "description": "Episode 250 Juri has been working as a software developer and architect for 10+ years, with technologies like Java, .Net, Node.js on the desktop, mobile as well as web. Lately he has mostly been focusing on frontend web development with JavaScript, on writing technical articles, and teaching.   Links https://juristr.com/ https://github.com/juristr https://twitter.com/juristr https://www.linkedin.com/in/juristr/ https://www.youtube.com/c/JuriStrumpflohner […] The post Deeper Dive into NX with Juri Strumpflohner appeared first on The 6 Figure Developer.",
    "author": "John Callaway",
    "published": "Mon, 15 Aug 2022 13:11:40 +0000",
    "image": "https://media.blubrry.com/6figuredev/content.blubrry.com/6figuredev/6_Figure_Developer-250-Juri_Strumpflohner.mp3",
    "source": "http://6figuredev.com/feed/rss/",
    "categories": [
      "Podcast",
      ".net",
      "dotnet",
      "Juri Strumpflohner",
      "lerna",
      "nx"
    ]
  },
  {
    "id": "57f390c8-a75e-4422-b0b8-81192c0d7424",
    "title": "4 Essential AWS Solutions with Chris Judd",
    "link": "https://6figuredev.com/podcast/4-essential-aws-solutions-with-chris-judd/",
    "description": "Episode 249 Chris is CTO and partner at Manifest Solutions, Author, Java User Group leader, Java Champion, Trusted Technical Advisor, and Talent Developer.   Links https://javajudd.net/ https://twitter.com/javajudd https://www.juddsolutions.com/ https://www.linkedin.com/in/christophermjudd/   Resources https://aws.amazon.com/ https://aws.amazon.com/cdk/ https://aws.amazon.com/lambda/ https://aws.amazon.com/step-functions/ https://aws.amazon.com/ecs/ https://aws.amazon.com/eks/ https://www.terraform.io/ https://docs.aws.amazon.com/ https://docs.aws.amazon.com/wellarchitected/latest/framework/welcome.html   “Tempting Time” by Animals As Leaders used with permissions – All Rights Reserved […] The post 4 Essential AWS Solutions with Chris Judd appeared first on The 6 Figure Developer.",
    "author": "John Callaway",
    "published": "Mon, 01 Aug 2022 13:11:00 +0000",
    "image": "https://media.blubrry.com/6figuredev/content.blubrry.com/6figuredev/6_Figure_Developer-249-Chris_Judd.mp3",
    "source": "http://6figuredev.com/feed/rss/",
    "categories": [
      "Podcast",
      "aws",
      "chris judd",
      "java"
    ]
  }
]
