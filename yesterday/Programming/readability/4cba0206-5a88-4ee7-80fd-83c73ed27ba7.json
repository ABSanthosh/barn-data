{
  "id": "4cba0206-5a88-4ee7-80fd-83c73ed27ba7",
  "title": "Reduce supply chain risk with smarter vulnerability prioritization",
  "link": "https://about.gitlab.com/blog/2025/01/07/reduce-supply-chain-risk-with-smarter-vulnerability-prioritization",
  "description": "",
  "author": "Salman Ladha",
  "published": "2025-01-07T00:00:00.000Z",
  "source": "https://about.gitlab.com/atom.xml",
  "categories": null,
  "byline": "Salman Ladha",
  "length": 4655,
  "excerpt": "New software composition analysis features use risk-based intelligence so developers and security teams can prioritize critical vulnerabilities for targeted remediation.",
  "siteName": "GitLab",
  "favicon": "https://about.gitlab.com/blog/nuxt-images/ico/favicon-192x192.png?cache=2022041",
  "text": "Application Security teams face a constant uphill battle in risk reduction due to the ever-growing number of vulnerabilities. This year alone, 36,000 Common Vulnerabilities and Exposures (CVEs) have been reported — a 25% increase from last year. The sharp rise intensifies the challenge of prioritization in vulnerability management, especially for lean AppSec teams. To help, we’ve introduced several new enhancements to our Software Composition Analysis (SCA) solution. These improvements are available for all GitLab Ultimate customers: Static Reachability Analysis identifies the exploitable vulnerabilities from open source components in your applications. Known Exploited Vulnerabilities (KEV) Indicator highlights known, actively exploited vulnerabilities. Exploit Prediction Scoring System (EPSS) predicts the likelihood of a vulnerability being exploited. By prioritizing exploitable vulnerabilities, AppSec teams can reduce triage times, accelerate remediation cycles, and improve collaboration with their development counterparts. Powered by our recent acquisitions of Oxeye and Rezilion's intellectual property, these new capabilities align with our vision of providing best-in-class application security solutions, natively built into developer workflows. What is SCA and why does it matter? Software Composition Analysis helps organizations identify and manage open source components within their applications. By scanning the codebase, SCA provides insights into the component versions, licenses, and importantly, known vulnerabilities. With 90% of Fortune 500 companies dependent on open source components for their applications, SCA provides much-needed visibility to mitigate software supply chain risk. High-profile breaches like SolarWinds and Log4Shell highlight how vulnerabilities in third-party components can compromise countless downstream applications. SCA tools act as proactive measures, enabling teams to identify vulnerabilities and enforce compliance early in the software development lifecycle, ensuring software security while maintaining development velocity. Filter out the noise for targeted remediation With our latest SCA enhancements, GitLab helps you cut through the noise to prioritize real risks, reduce backlogs, and remediate faster – all within your existing workflows. Focus on vulnerabilities that pose the greatest risk Static Reachability Analysis leverages the proprietary detection engine of our Advanced SAST solution to surface vulnerabilities from dependencies that can actually be exploited in your application. Reduce triage times With KEV indicators and EPSS scoring, GitLab gives security teams actionable insights into vulnerabilities that are actively being exploited or likely to be targeted. Incorporating risk-based scoring helps teams effectively triage their vulnerability backlog. Faster remediation to mitigate supply chain risk Our SCA enhancements are built into developer workflows, providing contextual remediation guidance while maintaining developer productivity. What’s next for SCA We’re continuing to integrate Rezilion’s technology into our platform to help teams secure their software supply chains more effectively. Rezilion will be key to powering future innovations, including: Supporting faster remediation workflows by automatically opening merge requests with fixes for detected vulnerabilities Enriching package metadata using OpenSSF scorecard ratings to provide security teams with more information on dependencies such as authors and end-of-life status Improving open-source software license detection to ensure compliance and reduce legal risks Get started with SCA If you’re an existing GitLab Ultimate customer and would like to learn more about how Software Composition Analysis can enhance your application security program, visit our documentation. There, you’ll find details on implementation requirements, use cases, and more. Or if you’re not yet a GitLab Ultimate customer, get started with a free trial today to explore how GitLab enhances your ability to write secure software, achieve compliance goals, and improve development velocity. Disclaimer: This blog contains information related to upcoming products, features, and functionality. It is important to note that the information in this blog post is for informational purposes only. Please do not rely on this information for purchasing or planning purposes. As with all projects, the items mentioned in this blog and linked pages are subject to change or delay. The development, release, and timing of any products, features, or functionality remain at the sole discretion of GitLab.",
  "image": "https://images.ctfassets.net/r9o86ar0p03f/1iy516k40hwBDChKcUJ2zb/264b924e95ca5c65751e0a52ee6a41d7/blog-image-template-1800x945__5_.png?fm=webp\u0026w=820\u0026h=500",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv data-v-37f1022b=\"\" data-v-c7882276=\"\" data-v-74bd29c6=\"\"\u003e\u003cp\u003eApplication Security teams face a constant uphill battle in risk reduction due to the ever-growing number of vulnerabilities. This year alone, \u003ca href=\"https://www.cvedetails.com/\"\u003e36,000 Common Vulnerabilities and Exposures (CVEs)\u003c/a\u003e have been reported — a 25% increase from last year. The sharp rise intensifies the challenge of prioritization in vulnerability management, especially for lean AppSec teams.\u003c/p\u003e\n\u003cp\u003eTo help, we’ve introduced several new enhancements to our Software Composition Analysis (SCA) solution. These improvements are available for all GitLab Ultimate customers:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eStatic Reachability Analysis\u003c/strong\u003e identifies the \u003cem\u003eexploitable\u003c/em\u003e vulnerabilities from open source components in your applications.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eKnown Exploited Vulnerabilities\u003c/strong\u003e (KEV) \u003cstrong\u003eIndicator\u003c/strong\u003e highlights known, actively exploited vulnerabilities.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eExploit Prediction Scoring System\u003c/strong\u003e (EPSS) predicts the likelihood of a vulnerability being exploited.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eBy prioritizing exploitable vulnerabilities, AppSec teams can reduce triage times, accelerate remediation cycles, and improve collaboration with their development counterparts. Powered by our recent acquisitions of \u003ca href=\"https://about.gitlab.com/blog/2024/03/20/oxeye-joins-gitlab-to-advance-application-security-capabilities/\"\u003eOxeye\u003c/a\u003e and \u003ca href=\"https://ir.gitlab.com/news/news-details/2024/GitLab-Reports-First-Quarter-Fiscal-Year-2025-Financial-Results/default.aspx\"\u003eRezilion\u0026#39;s intellectual property\u003c/a\u003e, these new capabilities align with our vision of providing best-in-class application security solutions, natively built into developer workflows.\u003c/p\u003e\n\u003ch3 id=\"what-is-sca-and-why-does-it-matter%3F\" tabindex=\"-1\"\u003eWhat is SCA and why does it matter? \u003ca href=\"#what-is-sca-and-why-does-it-matter%3F\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eSoftware Composition Analysis helps organizations identify and manage open source components within their applications. By scanning the codebase, SCA provides insights into the component versions, licenses, and importantly, known vulnerabilities. With \u003ca href=\"https://www.nber.org/be/20241/open-source-software-creators-its-not-just-about-money\"\u003e90% of Fortune 500\u003c/a\u003e companies dependent on open source components for their applications, SCA provides much-needed visibility to mitigate software supply chain risk.\u003c/p\u003e\n\u003cp\u003eHigh-profile breaches like \u003ca href=\"https://www.wired.com/story/the-untold-story-of-solarwinds-the-boldest-supply-chain-hack-ever/\"\u003eSolarWinds\u003c/a\u003e and \u003ca href=\"https://www.ncsc.gov.uk/information/log4j-vulnerability-what-everyone-needs-to-know\"\u003eLog4Shell\u003c/a\u003e highlight how vulnerabilities in third-party components can compromise countless downstream applications. SCA tools act as proactive measures, enabling teams to identify vulnerabilities and enforce compliance early in the software development lifecycle, ensuring software security while maintaining development velocity.\u003c/p\u003e\n\u003ch3 id=\"filter-out-the-noise-for-targeted-remediation\" tabindex=\"-1\"\u003eFilter out the noise for targeted remediation \u003ca href=\"#filter-out-the-noise-for-targeted-remediation\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eWith our latest SCA enhancements, GitLab helps you cut through the noise to prioritize real risks, reduce backlogs, and remediate faster – all within your existing workflows.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eFocus on vulnerabilities that pose the greatest risk\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eStatic Reachability Analysis leverages the proprietary detection engine of our \u003ca href=\"https://about.gitlab.com/blog/2024/09/19/gitlab-advanced-sast-is-now-generally-available/\"\u003eAdvanced SAST\u003c/a\u003e solution to surface vulnerabilities from dependencies that can \u003cem\u003eactually\u003c/em\u003e be exploited in your application.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eReduce triage times\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWith KEV indicators and EPSS scoring, GitLab gives security teams actionable insights into vulnerabilities that are actively being exploited or likely to be targeted. Incorporating risk-based scoring helps teams effectively triage their vulnerability backlog.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eFaster remediation to mitigate supply chain risk\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eOur SCA enhancements are built into developer workflows, providing contextual remediation guidance while maintaining developer productivity.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"what%E2%80%99s-next-for-sca\" tabindex=\"-1\"\u003eWhat’s next for SCA \u003ca href=\"#what%E2%80%99s-next-for-sca\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eWe’re continuing to integrate Rezilion’s technology into our platform to help teams secure their software supply chains more effectively. Rezilion will be key to powering future innovations, including:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eSupporting faster remediation\u003c/strong\u003e workflows by automatically opening merge requests with fixes for detected vulnerabilities\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eEnriching package metadata\u003c/strong\u003e using \u003ca href=\"https://openssf.org/projects/scorecard/\"\u003eOpenSSF scorecard ratings\u003c/a\u003e to provide security teams with more information on dependencies such as authors and end-of-life status\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eImproving open-source software license detection\u003c/strong\u003e to ensure compliance and reduce legal risks\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"get-started-with-sca\" tabindex=\"-1\"\u003eGet started with SCA \u003ca href=\"#get-started-with-sca\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eIf you’re an existing GitLab Ultimate customer and would like to learn more about how Software Composition Analysis can enhance your application security program, visit our \u003ca href=\"https://docs.gitlab.com/ee/user/application_security/dependency_scanning/\"\u003edocumentation\u003c/a\u003e. There, you’ll find details on implementation requirements, use cases, and more. Or if you’re not yet a GitLab Ultimate customer, get started with a \u003ca href=\"https://about.gitlab.com/free-trial/\"\u003efree trial\u003c/a\u003e today to explore how GitLab enhances your ability to write secure software, achieve compliance goals, and improve development velocity.\u003c/p\u003e\n\u003ch5 id=\"disclaimer-this-blog-contains-information-related-to-upcoming-products-features%2C-and-functionality.-it-is-important-to-note-that-the-information-in-this-blog-post-is-for-informational-purposes-only.-please-do-not-rely-on-this-information-for-purchasing-or-planning-purposes.-as-with-all-projects%2C-the-items-mentioned-in-this-blog-and-linked-pages-are-subject-to-change-or-delay.-the-development%2C-release%2C-and-timing-of-any-products%2C-features%2C-or-functionality-remain-at-the-sole-discretion-of-gitlab.\" tabindex=\"-1\"\u003e\u003cem\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e: This blog contains information related to upcoming products, features, and functionality. It is important to note that the information in this blog post is for informational purposes only. Please do not rely on this information for purchasing or planning purposes. As with all projects, the items mentioned in this blog and linked pages are subject to change or delay. The development, release, and timing of any products, features, or functionality remain at the sole discretion of GitLab.\u003c/em\u003e \u003ca href=\"#disclaimer-this-blog-contains-information-related-to-upcoming-products-features%2C-and-functionality.-it-is-important-to-note-that-the-information-in-this-blog-post-is-for-informational-purposes-only.-please-do-not-rely-on-this-information-for-purchasing-or-planning-purposes.-as-with-all-projects%2C-the-items-mentioned-in-this-blog-and-linked-pages-are-subject-to-change-or-delay.-the-development%2C-release%2C-and-timing-of-any-products%2C-features%2C-or-functionality-remain-at-the-sole-discretion-of-gitlab.\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h5\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": "2025-01-07T00:00:00Z",
  "modifiedTime": null
}
