{
  "id": "db59c8e9-debd-436e-a882-f8a0b758933d",
  "title": "Start building with Gemini 2.5 Flash",
  "link": "https://developers.googleblog.com/en/start-building-with-gemini-25-flash/",
  "description": "Gemini 2.5 Flash is in preview, offering improved reasoning capabilities through a \"thinking\" process that developers can control for cost and latency tradeoffs. This updated version aims to provide a cost-effective solution for complex tasks, balancing performance and price.",
  "author": "",
  "published": "",
  "source": "http://feeds.feedburner.com/GDBcode",
  "categories": null,
  "byline": "Tulsee Doshi",
  "length": 5524,
  "excerpt": "Gemini 2.5 Flash is in preview, offering improved reasoning capabilities through a \"thinking\" process that developers can control for cost and latency tradeoffs. This updated version aims to provide a cost-effective solution for complex tasks, balancing performance and price.",
  "siteName": "",
  "favicon": "https://storage.googleapis.com/gweb-developer-goog-blog-assets/meta/apple-touch-icon.png",
  "text": "Tulsee Doshi Director of Product Management Gemini Today we are rolling out an early version of Gemini 2.5 Flash in preview through the Gemini API via Google AI Studio and Vertex AI. Building upon the popular foundation of 2.0 Flash, this new version delivers a major upgrade in reasoning capabilities, while still prioritizing speed and cost. Gemini 2.5 Flash is our first fully hybrid reasoning model, giving developers the ability to turn thinking on or off. The model also allows developers to set thinking budgets to find the right tradeoff between quality, cost, and latency. Even with thinking off, developers can maintain the fast speeds of 2.0 Flash, and improve performance.Our Gemini 2.5 models are thinking models, capable of reasoning through their thoughts before responding. Instead of immediately generating an output, the model can perform a \"thinking\" process to better understand the prompt, break down complex tasks, and plan a response. On complex tasks that require multiple steps of reasoning (like solving math problems or analyzing research questions), the thinking process allows the model to arrive at more accurate and comprehensive answers. In fact, Gemini 2.5 Flash performs strongly on Hard Prompts in LMArena, second only to 2.5 Pro. 2.5 Flash has comparable metrics to other leading models for a fraction of the cost and size. Our most cost-efficient thinking model2.5 Flash continues to lead as the model with the best price-to-performance ratio. Gemini 2.5 Flash adds another model to Google’s pareto frontier of cost to quality.* Fine-grained controls to manage thinkingWe know that different use cases have different tradeoffs in quality, cost, and latency. To give developers flexibility, we’ve enabled setting a thinking budget that offers fine-grained control over the maximum number of tokens a model can generate while thinking. A higher budget allows the model to reason further to improve quality. Importantly, though, the budget sets a cap on how much 2.5 Flash can think, but the model does not use the full budget if the prompt does not require it. Improvements in reasoning quality as thinking budget increases. The model is trained to know how long to think for a given prompt, and therefore automatically decides how much to think based on the perceived task complexity.If you want to keep the lowest cost and latency while still improving performance over 2.0 Flash, set the thinking budget to 0. You can also choose to set a specific token budget for the thinking phase using a parameter in the API or the slider in Google AI Studio and in Vertex AI. The budget can range from 0 to 24576 tokens for 2.5 Flash.The following prompts demonstrate how much reasoning may be used in the 2.5 Flash’s default mode.Prompts requiring low reasoning:Example 1: “Thank you” in SpanishExample 2: How many provinces does Canada have?Prompts requiring medium reasoning:Example 1: You roll two dice. What’s the probability they add up to 7?Example 2: My gym has pickup hours for basketball between 9-3pm on MWF and between 2-8pm on Tuesday and Saturday. If I work 9-6pm 5 days a week and want to play 5 hours of basketball on weekdays, create a schedule for me to make it all work.Prompts requiring high reasoning:Example 1: A cantilever beam of length L=3m has a rectangular cross-section (width b=0.1m, height h=0.2m) and is made of steel (E=200 GPa). It is subjected to a uniformly distributed load w=5 kN/m along its entire length and a point load P=10 kN at its free end. Calculate the maximum bending stress (σ_max).Example 2: Write a function evaluate_cells(cells: Dict[str, str]) -\u003e Dict[str, float] that computes the values of spreadsheet cells.Each cell contains:A number (e.g., \"3\")Or a formula like \"=A1 + B1 * 2\" using +, -, *,/ and other cells.Requirements:Resolve dependencies between cells.Handle operator precedence (*/ before +-).Detect cycles and raise ValueError(\"Cycle detected at \u003ccell\u003e\").No eval(). Use only built-in libraries.Start building with Gemini 2.5 Flash todayGemini 2.5 Flash with thinking capabilities is now available in preview via the Gemini API in Google AI Studio and in Vertex AI, and in a dedicated dropdown in the Gemini app. We encourage you to experiment with the thinking_budget parameter and explore how controllable reasoning can help you solve more complex problems. from google import genai client = genai.Client(api_key=\"GEMINI_API_KEY\") response = client.models.generate_content( model=\"gemini-2.5-flash-preview-04-17\", contents=\"You roll two dice. What’s the probability they add up to 7?\", config=genai.types.GenerateContentConfig( thinking_config=genai.types.ThinkingConfig( thinking_budget=1024 ) ) ) print(response.text) Find detailed API references and thinking guides in our developer docs or get started with code examples from the Gemini Cookbook.We will continue to improve Gemini 2.5 Flash, with more coming soon, before we make it generally available for full production use.*Model pricing is sourced from Artificial Analysis \u0026 Company Documentation",
  "image": "https://storage.googleapis.com/gweb-developer-goog-blog-assets/images/Gemini-2-5-Flash-ai.dev.2e16d0ba.fill-1200x600.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\n    \n      \n    \n\n    \n\n    \n\n    \u003csection\u003e\n      \n        \n          \u003cp\u003e\u003ca href=\"https://developers.googleblog.com/en/search/?author=Tulsee+Doshi\"\u003eTulsee Doshi\u003c/a\u003e\n            \n              \u003cspan\u003eDirector of Product Management\u003c/span\u003e\n            \n            \n              \u003cspan\u003eGemini\u003c/span\u003e\n            \n          \u003c/p\u003e\n        \n\n      \n      \u003c/section\u003e\n\n    \n    \u003cdiv\u003e\n          \n\n\u003cdiv\u003e\n    \u003cp data-block-key=\"w22bj\"\u003eToday we are rolling out an early version of \u003cb\u003eGemini 2.5 Flash\u003c/b\u003e in \u003cb\u003epreview\u003c/b\u003e through the Gemini API via \u003ca href=\"https://aistudio.google.com/prompts/new_chat?model=gemini-2.5-flash-preview-04-17\"\u003eGoogle AI Studio\u003c/a\u003e and \u003ca href=\"https://console.cloud.google.com/vertex-ai/studio/multimodal?model=gemini-2.5-flash-preview-04-17\"\u003eVertex AI\u003c/a\u003e. Building upon the popular foundation of 2.0 Flash, this new version delivers a major upgrade in reasoning capabilities, while still prioritizing speed and cost. Gemini 2.5 Flash is our first fully hybrid reasoning model, giving developers the ability to turn thinking on or off. The model also allows developers to set thinking budgets to find the right tradeoff between quality, cost, and latency. Even with \u003cb\u003ethinking off,\u003c/b\u003e developers can maintain the fast speeds of 2.0 Flash, and improve performance.\u003c/p\u003e\u003cp data-block-key=\"b171q\"\u003eOur Gemini 2.5 models are thinking models, capable of reasoning through their thoughts before responding. Instead of immediately generating an output, the model can perform a \u0026#34;thinking\u0026#34; process to better understand the prompt, break down complex tasks, and plan a response. On complex tasks that require multiple steps of reasoning (like solving math problems or analyzing research questions), the thinking process allows the model to arrive at more accurate and comprehensive answers. In fact, Gemini 2.5 Flash performs strongly on \u003ca href=\"https://lmarena.ai/?leaderboard\"\u003eHard Prompts in LMArena\u003c/a\u003e, second only to 2.5 Pro.\u003c/p\u003e\n\u003c/div\u003e   \n\n\u003cdiv\u003e\n        \n            \u003cp\u003e\u003cimg src=\"https://storage.googleapis.com/gweb-developer-goog-blog-assets/images/gemini_2-5_flashcomp_benchmarks_dark2x.original.png\" alt=\"Comparison table showing price and performance metrics for LLMs\"/\u003e\u003c/p\u003e\u003cp\u003e\n                    2.5 Flash has comparable metrics to other leading models for a fraction of the cost and size.\n                \u003c/p\u003e\n            \n        \n    \u003c/div\u003e\n  \u003cdiv\u003e\n    \u003ch2 data-block-key=\"w22bj\"\u003eOur most cost-efficient thinking model\u003c/h2\u003e\u003cp data-block-key=\"15dd0\"\u003e2.5 Flash continues to lead as the model with the best price-to-performance ratio.\u003c/p\u003e\n\u003c/div\u003e   \n\n\u003cdiv\u003e\n        \n            \u003cp\u003e\u003cimg src=\"https://storage.googleapis.com/gweb-developer-goog-blog-assets/images/Gemini-2.5-Flash-price-to-performance-compariso.original_FhSF5J2.png\" alt=\"A graph showing Gemini 2.5 Flash price-to-performance comparison\"/\u003e\u003c/p\u003e\u003cp\u003e\n                    Gemini 2.5 Flash adds another model to Google’s pareto frontier of cost to quality.*\n                \u003c/p\u003e\n            \n        \n    \u003c/div\u003e\n  \u003cdiv\u003e\n    \u003ch2 data-block-key=\"hippi\"\u003eFine-grained controls to manage thinking\u003c/h2\u003e\u003cp data-block-key=\"4g2lu\"\u003eWe know that different use cases have different tradeoffs in quality, cost, and latency. To give developers flexibility, we’ve enabled setting a \u003cb\u003ethinking budget\u003c/b\u003e that offers fine-grained control over the maximum number of tokens a model can generate while thinking. A higher budget allows the model to reason further to improve quality. Importantly, though, the budget sets a cap on how much 2.5 Flash can think, but the model does not use the full budget if the prompt does not require it.\u003c/p\u003e\n\u003c/div\u003e   \n\n\u003cdiv\u003e\n        \n            \u003cp\u003e\u003cimg src=\"https://storage.googleapis.com/gweb-developer-goog-blog-assets/images/gemini_s_b_s_scaling_graphs.original.png\" alt=\"Plot graphs show improvements in reasoning quality as thinking budget increases\"/\u003e\u003c/p\u003e\u003cp\u003e\n                    Improvements in reasoning quality as thinking budget increases.\n                \u003c/p\u003e\n            \n        \n    \u003c/div\u003e\n  \u003cdiv\u003e\n    \u003cp data-block-key=\"hippi\"\u003eThe model is trained to know how long to think for a given prompt, and therefore automatically decides how much to think based on the perceived task complexity.\u003c/p\u003e\u003cp data-block-key=\"c6ud\"\u003eIf you want to keep the lowest cost and latency while still improving performance over 2.0 Flash, \u003cb\u003eset the thinking budget to 0.\u003c/b\u003e You can also choose to \u003cb\u003eset a specific token budget\u003c/b\u003e for the thinking phase using a parameter in the API or the slider in Google AI Studio and in Vertex AI. The budget can range from 0 to 24576 tokens for 2.5 Flash.\u003c/p\u003e\u003cp data-block-key=\"bm9va\"\u003eThe following prompts demonstrate how much reasoning may be used in the 2.5 Flash’s default mode.\u003c/p\u003e\u003ch3 data-block-key=\"4qsi3\"\u003e\u003cb\u003e\u003cbr/\u003ePrompts requiring low reasoning:\u003c/b\u003e\u003c/h3\u003e\u003cp data-block-key=\"ee1fc\"\u003e\u003cb\u003eExample 1:\u003c/b\u003e “Thank you” in Spanish\u003c/p\u003e\u003cp data-block-key=\"dfdib\"\u003e\u003cb\u003eExample 2:\u003c/b\u003e How many provinces does Canada have?\u003c/p\u003e\u003ch3 data-block-key=\"5r2iv\"\u003e\u003cb\u003e\u003cbr/\u003ePrompts requiring medium reasoning:\u003c/b\u003e\u003c/h3\u003e\u003cp data-block-key=\"2hnrv\"\u003e\u003cb\u003eExample 1:\u003c/b\u003e You roll two dice. What’s the probability they add up to 7?\u003c/p\u003e\u003cp data-block-key=\"t908\"\u003e\u003cb\u003eExample 2:\u003c/b\u003e My gym has pickup hours for basketball between 9-3pm on MWF and between 2-8pm on Tuesday and Saturday. If I work 9-6pm 5 days a week and want to play 5 hours of basketball on weekdays, create a schedule for me to make it all work.\u003c/p\u003e\u003ch3 data-block-key=\"6ooqr\"\u003e\u003cb\u003e\u003cbr/\u003ePrompts requiring high reasoning:\u003c/b\u003e\u003c/h3\u003e\u003cp data-block-key=\"99tu\"\u003e\u003cb\u003eExample 1:\u003c/b\u003e A cantilever beam of length L=3m has a rectangular cross-section (width b=0.1m, height h=0.2m) and is made of steel (E=200 GPa). It is subjected to a uniformly distributed load w=5 kN/m along its entire length and a point load P=10 kN at its free end. Calculate the maximum bending stress (σ_max).\u003c/p\u003e\u003cp data-block-key=\"c8ugt\"\u003e\u003cb\u003eExample 2:\u003c/b\u003e Write a function \u003ccode\u003eevaluate_cells(cells: Dict[str, str]) -\u0026gt; Dict[str, float]\u003c/code\u003e that computes the values of spreadsheet cells.\u003c/p\u003e\u003cp data-block-key=\"4reqs\"\u003eEach cell contains:\u003c/p\u003e\u003cul\u003e\u003cli data-block-key=\"52odg\"\u003eA number (e.g., \u003ccode\u003e\u0026#34;3\u0026#34;\u003c/code\u003e)\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"7pvlf\"\u003eOr a formula like \u003ccode\u003e\u0026#34;=A1 + B1 * 2\u0026#34;\u003c/code\u003e using \u003ccode\u003e+\u003c/code\u003e, \u003ccode\u003e-\u003c/code\u003e, \u003ccode\u003e*\u003c/code\u003e,\u003ccode\u003e/\u003c/code\u003e and other cells.\u003c/li\u003e\u003c/ul\u003e\u003cp data-block-key=\"2b2uc\"\u003eRequirements:\u003c/p\u003e\u003cul\u003e\u003cli data-block-key=\"p7co\"\u003eResolve dependencies between cells.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"b35hd\"\u003eHandle operator precedence (\u003ccode\u003e*/\u003c/code\u003e before \u003ccode\u003e+-\u003c/code\u003e).\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"b432o\"\u003eDetect cycles and raise \u003ccode\u003eValueError(\u0026#34;Cycle detected at \u0026lt;cell\u0026gt;\u0026#34;)\u003c/code\u003e.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"2884i\"\u003eNo \u003ccode\u003eeval()\u003c/code\u003e. Use only built-in libraries.\u003c/li\u003e\u003c/ul\u003e\u003ch2 data-block-key=\"nq6j\"\u003e\u003cbr/\u003eStart building with Gemini 2.5 Flash today\u003c/h2\u003e\u003cp data-block-key=\"erb39\"\u003eGemini 2.5 Flash with thinking capabilities is now available in preview via the \u003ca href=\"https://ai.google.dev/gemini-api/docs/thinking\"\u003eGemini API\u003c/a\u003e in \u003ca href=\"https://aistudio.google.com/prompts/new_chat?model=gemini-2.5-flash-preview-04-17\"\u003eGoogle AI Studio\u003c/a\u003e and in \u003ca href=\"https://console.cloud.google.com/vertex-ai/studio/multimodal?model=gemini-2.5-flash-preview-04-17\"\u003eVertex AI\u003c/a\u003e, and in a dedicated dropdown in the \u003ca href=\"http://gemini.google.com/\"\u003eGemini app\u003c/a\u003e. We encourage you to experiment with the \u003ccode\u003ethinking_budget\u003c/code\u003e parameter and explore how controllable reasoning can help you solve more complex problems.\u003c/p\u003e\n\u003c/div\u003e   \n\n\u003cdiv\u003e\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003cspan\u003efrom\u003c/span\u003e \u003cspan\u003egoogle\u003c/span\u003e \u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003egenai\u003c/span\u003e\n\n\u003cspan\u003eclient\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003egenai\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eClient\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eapi_key\u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e\u0026#34;GEMINI_API_KEY\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\n\u003cspan\u003eresponse\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eclient\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003emodels\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egenerate_content\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n  \u003cspan\u003emodel\u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e\u0026#34;gemini-2.5-flash-preview-04-17\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n  \u003cspan\u003econtents\u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e\u0026#34;You roll two dice. What’s the probability they add up to 7?\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n  \u003cspan\u003econfig\u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003egenai\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etypes\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eGenerateContentConfig\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n    \u003cspan\u003ethinking_config\u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003egenai\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etypes\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eThinkingConfig\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n      \u003cspan\u003ethinking_budget\u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e1024\u003c/span\u003e\n    \u003cspan\u003e)\u003c/span\u003e\n  \u003cspan\u003e)\u003c/span\u003e\n\u003cspan\u003e)\u003c/span\u003e\n\n\u003cspan\u003eprint\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eresponse\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etext\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e  \u003cdiv\u003e\n    \u003cp data-block-key=\"hippi\"\u003eFind detailed API references and thinking guides in our \u003ca href=\"https://ai.google.dev/gemini-api/docs/thinking#set-budget\"\u003edeveloper docs\u003c/a\u003e or get started with \u003ca href=\"https://github.com/google-gemini/cookbook/blob/main/quickstarts/Get_started_thinking.ipynb\"\u003ecode examples\u003c/a\u003e from the \u003ca href=\"https://github.com/google-gemini/cookbook/\"\u003eGemini Cookbook\u003c/a\u003e.\u003c/p\u003e\u003cp data-block-key=\"637cu\"\u003eWe will continue to improve Gemini 2.5 Flash, with more coming soon, before we make it generally available for full production use.\u003c/p\u003e\u003cp data-block-key=\"7esdg\"\u003e\u003cbr/\u003e\u003csup\u003e*\u003c/sup\u003e\u003csub\u003e\u003csup\u003eModel pricing is sourced from Artificial Analysis \u0026amp; Company Documentation\u003c/sup\u003e\u003c/sub\u003e\u003c/p\u003e\n\u003c/div\u003e \n      \u003c/div\u003e\n    \n\n    \n\n    \n    \n    \n  \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": "2025-04-17T00:00:00Z",
  "modifiedTime": null
}
