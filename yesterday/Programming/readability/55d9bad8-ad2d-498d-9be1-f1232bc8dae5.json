{
  "id": "55d9bad8-ad2d-498d-9be1-f1232bc8dae5",
  "title": "GitHub Copilot Spaces: Bring the right context to every suggestion",
  "link": "https://github.blog/ai-and-ml/github-copilot/github-copilot-spaces-bring-the-right-context-to-every-suggestion/",
  "description": "Learn how to build your first space in minutes and customize Copilot to match your team's unique coding style and workflows. The post GitHub Copilot Spaces: Bring the right context to every suggestion appeared first on The GitHub Blog.",
  "author": "Andrea Griffiths",
  "published": "Wed, 18 Jun 2025 16:00:00 +0000",
  "source": "https://github.blog/feed/",
  "categories": [
    "AI \u0026 ML",
    "GitHub Copilot",
    "GitHub Copilot Spaces"
  ],
  "byline": "Andrea Griffiths",
  "length": 9839,
  "excerpt": "Learn how to build your first space in minutes and customize Copilot to match your team's unique coding style and workflows.",
  "siteName": "The GitHub Blog",
  "favicon": "https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=192%2C192",
  "text": "When generative AI tools guess what you need, the magic only lasts as long as the guesses are right. Add an unfamiliar codebase, a security checklist your team keeps in a wiki, or a one‑off Slack thread that explains why something matters, and even the most and even the most powerful model may fill in gaps with assumptions rather than having access to your specific context and knowledge. GitHub Copilot Spaces fixes that problem by letting you bundle the exact context Copilot should read—code, docs, transcripts, sample queries, you name it—into a reusable “space.” Once a space is created, every Copilot chat, completion, or command is grounded in that curated knowledge, producing answers that feel like they came from your organization’s resident expert instead of a generic model.  In this article, we’ll walk through: A 5‑minute quick‑start guide to creating your first space Tips for personalizing Copilot’s tone, style, and conventions with custom instructions Real‑world recipes for accessibility, data queries, and onboarding Collaboration, security, and what’s next on the roadmap (spoiler: IDE integration and Issues/PR support) Why context is the new bottleneck for AI‑assisted development Large language models (LLMs) thrive on patterns, but day‑to‑day engineering work is full of unpatterned edge cases, including: A monorepo that mixes modern React with legacy jQuery Organizational wisdom buried in Slack threads or internal wikis Organization‑specific security guidelines that differ from upstream OSS docs Without that context, an AI assistant can only guess. But with Copilot Spaces, you choose which files, documents, or free‑text snippets matter, drop them into a space, and let Copilot use that context to answer questions or write code. As Kelly Henckel, PM for GitHub Spaces, said in our GitHub Checkout episode, “Spaces make it easy to organize and share context, so Copilot acts like a subject matter expert.” The result? Fewer wrong guesses, less copy-pasting, and code that’s commit-ready. What exactly is a Copilot Space? Think of a space as a secure, shareable container of knowledge plus behavioral instructions: What it holdsWhy it mattersAttachmentsCode files, entire folders, Markdown docs, transcripts, or any plain text you addGives Copilot the ground truth for answersCustom instructionsShort system prompts to set tone, coding style, or reviewer expectationsLets Copilot match your house rulesSharing \u0026 permissionsFollows the same role/visibility model you already use on GitHubNo new access control lists to manageLive updatesFiles stay in sync with the branch you referencedYour space stays up to date with your codebase Spaces are available to anyone with a Copilot license (Free, Individual, Business, or Enterprise) while the feature is in public preview. Admins can enable it under Settings  \u003e Copilot \u003e Preview features. TL;DR: A space is like pinning your team’s collective brain to the Copilot sidebar and letting everyone query it in plain language. Quick-start guide: How to build your first space in 5 minutes Navigate to github.com/copilot/spaces and click Create space. Name it clearly. For example, frontend‑styleguide. Add a description so teammates know when—and when not—to use it. Attach context: From repos: Pull in folders like src/components or individual files such as eslint.config.js. Free‑text hack: Paste a Slack thread, video transcript, onboarding checklist, or even a JSON schema into the Text tab. Copilot treats it like any other attachment. Write custom instructions. A sentence or two is enough: “Respond as a senior React reviewer. Enforce our ESLint rules and tailwind class naming conventions.” Save and test it. You’re done. Ask Copilot a question in the Space chat—e.g., “Refactor this \u003cButton\u003e component to match our accessibility checklist”—and watch it cite files you just attached. Personalize Copilot’s coding style (and voice, too)  Custom instructions are the “personality layer” of a space and where spaces shine because they live alongside the attachments. This allows you to do powerful things with a single sentence, including: Enforce conventions  “Always prefer Vue 3 script setup syntax and Composition API for examples.” Adopt a team tone “Answer concisely. Include a one‑line summary before code blocks.” Teach Copilot project‑specific vocabulary  “Call it ‘scenario ID’ (SCID), not test case ID.” During the GitHub Checkout interview, Kelly shared how she built a personal space for a nonprofit side project: She attached only the Vue front‑end folder plus instructions on her preferred conventions, and Copilot delivered commit‑ready code snippets that matched her style guide on the first try. Automate your workflow: three real‑world recipes 1. Accessibility compliance assistant Space ingredients Markdown docs on WCAG criteria and GitHub’s internal “Definition of Done” Custom instruction: “When answering, cite the doc section and provide a code diff if changes are required.” How it helps: Instead of pinging the accessibility lead on Slack, you can use Spaces to ask questions like “What steps are needed for MAS‑C compliance on this new modal?” Copilot summarizes the relevant checkpoints, references the doc anchor, and even suggests ARIA attributes or color‑contrast fixes. GitHub’s own accessibility SME, Katherine, pinned this space in Slack so anyone filing a review gets instant, self‑service guidance. 2. Data‑query helper for complex schemas Space ingredients YAML schema files for 40+ event tables Example KQL snippets saved as .sql files Instruction: “Generate KQL only, no prose explanations unless asked.” How it helps: Product managers and support engineers who don’t know your database structures can ask, “Average PR review time last 7 days?” Copilot autocompletes a valid KQL query with correct joins and lets them iterate. Result: lets PMs and support self-serve without bugging data science teams. 3. Onboarding Hub and knowledge base in one link Space ingredients Key architecture diagrams exported as SVG text ADRs and design docs from multiple repos Custom instruction: “Answer like a mentor during onboarding; link to deeper docs.” How it helps: New hires type “How does our auth flow handle SAML?” and get a structured answer with links and diagrams, all without leaving GitHub. Because spaces stay in sync with main, updates to ADRs propagate automatically—no stale wikis. Collaboration that feels native to GitHub Spaces respect the same permission model you already use: Personal spaces: visible only to you unless shared Organization‑owned spaces: use repo or team permissions to gate access Read‑only vs. edit‑capable: let SMEs maintain the canon while everyone else consumes Sharing is as simple as sending the space URL or pinning it to a repo README. Anyone with access and a Copilot license can start chatting instantly. What’s next for Copilot Spaces? We’re working to bring Copilot Spaces to more of your workflows, and are currently developing: Issues and PR attachments to bring inline discussions and review notes into the same context bundle. IDE Integration: Query Spaces in VS Code for tasks like writing tests to match your team’s patterns. Org‑wide discoverability to help you browse spaces like you browse repos today, so new engineers can search “Payments SME” and start chatting. Your feedback will shape those priorities. Drop your ideas or pain points in the public discussion or, if you’re an enterprise customer, through your account team.  Get started today Head to github.com/copilot/spaces, spin up your first space, and let us know how it streamlines your workflow. Here’s how to get it fully set up on your end:  Flip the preview toggle: Settings \u003e Copilot  \u003e  Preview features \u003e Enable Copilot Spaces. Create one small, high‑impact space—maybe your team’s code‑review checklist or a set of common data queries. Share the link in Slack or a README and watch the pings to subject‑matter experts drop. Iterate: prune unused attachments, refine instructions, or split a giant space into smaller ones. Copilot Spaces is free during the public preview and doesn’t count against your Copilot seat entitlements when you use the base model. We can’t wait to see what you build when Copilot has the right context at its fingertips. Written by Andrea is a Senior Developer Advocate at GitHub with over a decade of experience in developer tools. She combines technical depth with a mission to make advanced technologies more accessible. After transitioning from Army service and construction management to software development, she brings a unique perspective to bridging complex engineering concepts with practical implementation. She lives in Florida with her Welsh partner, two sons, and two dogs, where she continues to drive innovation and support open source through GitHub's global initiatives. Find her online @alacolombiadev. Explore more from GitHub Docs Everything you need to master GitHub, all in one place. Go to Docs GitHub Build what’s next on GitHub, the place for anyone from anywhere to build anything. Start building Customer stories Meet the companies and engineering teams that build with GitHub. Learn more GitHub Universe 2025 Last chance: Save $700 on your IRL pass to Universe and join us on Oct. 28-29 in San Francisco. Register now \u003e",
  "image": "https://github.blog/wp-content/uploads/2025/06/GitHub_Models_Checkout_June_1_4-1.png?fit=1280%2C720",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003csection\u003e\n\t\n\u003cp\u003eWhen generative AI tools guess what you need, the magic only lasts as long as the guesses are right. Add an unfamiliar codebase, a security checklist your team keeps in a wiki, or a one‑off Slack thread that explains \u003cem\u003ewhy\u003c/em\u003e something matters, and even the most and even the most powerful model may fill in gaps with assumptions rather than having access to your specific context and knowledge.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003ca href=\"https://docs.github.com/en/copilot/using-github-copilot/copilot-spaces/creating-and-using-copilot-spaces\"\u003eGitHub Copilot Spaces\u003c/a\u003e fixes that problem by letting you \u003cstrong\u003ebundle the exact context Copilot should read\u003c/strong\u003e—code, docs, transcripts, sample queries, you name it—into a reusable “space.” Once a space is created, every Copilot chat, completion, or command is grounded in that curated knowledge, producing answers that feel like they came from your organization’s resident expert instead of a generic model.\u003ca href=\"https://docs.github.com/copilot/using-github-copilot/copilot-spaces/about-organizing-and-sharing-context-with-copilot-spaces?utm_source=chatgpt.com\"\u003e \u003c/a\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003eIn this article, we’ll walk through:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eA 5‑minute quick‑start guide to creating your first space\u003c/li\u003e\n\n\n\n\u003cli\u003eTips for personalizing Copilot’s tone, style, and conventions with custom instructions\u003c/li\u003e\n\n\n\n\u003cli\u003eReal‑world recipes for accessibility, data queries, and onboarding\u003c/li\u003e\n\n\n\n\u003cli\u003eCollaboration, security, and what’s next on the roadmap (spoiler: IDE integration and Issues/PR support)\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\n\n\n\n\u003ch2 id=\"h-why-context-is-the-new-bottleneck-for-ai-assisted-development\"\u003eWhy context is the new bottleneck for AI‑assisted development\u003c/h2\u003e\n\n\n\n\u003cp\u003eLarge language models (LLMs) thrive on patterns, but day‑to‑day engineering work is full of \u003cem\u003eun\u003c/em\u003epatterned edge cases, including:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eA monorepo that mixes modern React with legacy jQuery\u003c/li\u003e\n\n\n\n\u003cli\u003eOrganizational wisdom buried in Slack threads or internal wikis\u003c/li\u003e\n\n\n\n\u003cli\u003eOrganization‑specific security guidelines that differ from upstream OSS docs\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eWithout that context, an AI assistant can only guess. But with Copilot Spaces, you choose which files, documents, or free‑text snippets matter, drop them into a space, and let Copilot use that context to answer questions or write code. As Kelly Henckel, PM for GitHub Spaces, said in our \u003ca href=\"https://www.youtube.com/watch?v=a0LWEWLUt48\"\u003eGitHub Checkout\u003c/a\u003e episode, “Spaces make it easy to organize and share context, so Copilot acts like a subject matter expert.” The result? Fewer wrong guesses, less copy-pasting, and code that’s commit-ready.\u003c/p\u003e\n\n\n\n\u003ch2 id=\"h-what-exactly-is-a-copilot-space\"\u003eWhat exactly \u003cem\u003eis\u003c/em\u003e a Copilot Space?\u003c/h2\u003e\n\n\n\n\u003cp\u003eThink of a space as a secure, shareable \u003cstrong\u003econtainer of knowledge\u003c/strong\u003e plus \u003cstrong\u003ebehavioral instructions\u003c/strong\u003e:\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003ctable\u003e\u003cthead\u003e\u003ctr\u003e\u003cth\u003e\u003c/th\u003e\u003cth\u003e\u003cstrong\u003eWhat it holds\u003c/strong\u003e\u003c/th\u003e\u003cth\u003e\u003cstrong\u003eWhy it matters\u003c/strong\u003e\u003c/th\u003e\u003c/tr\u003e\u003c/thead\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003eAttachments\u003c/td\u003e\u003ctd\u003eCode files, entire folders, Markdown docs, transcripts, or any plain text you add\u003c/td\u003e\u003ctd\u003eGives Copilot the ground truth for answers\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eCustom instructions\u003c/td\u003e\u003ctd\u003eShort system prompts to set tone, coding style, or reviewer expectations\u003c/td\u003e\u003ctd\u003eLets Copilot match your house rules\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eSharing \u0026amp; permissions\u003c/td\u003e\u003ctd\u003eFollows the same role/visibility model you already use on GitHub\u003c/td\u003e\u003ctd\u003eNo new access control lists to manage\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eLive updates\u003c/td\u003e\u003ctd\u003eFiles stay in sync with the branch you referenced\u003c/td\u003e\u003ctd\u003eYour space stays up to date with your codebase\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003e\u003cbr/\u003eSpaces are available to \u003cstrong\u003eanyone with a Copilot license (Free, Individual, Business, or Enterprise)\u003c/strong\u003e while the feature is in public preview. Admins can enable it under \u003cstrong\u003eSettings  \u0026gt; Copilot \u0026gt; Preview features\u003c/strong\u003e.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eTL;DR\u003c/strong\u003e: A space is like pinning your team’s \u003cem\u003ecollective brain\u003c/em\u003e to the Copilot sidebar and letting everyone query it in plain language.\u003c/p\u003e\n\n\n\n\u003ch2 id=\"h-quick-start-guide-how-to-build-your-first-space-in-5-minutes\"\u003eQuick-start guide: How to build your first space in 5 minutes\u003c/h2\u003e\n\n\n\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eNavigate \u003c/strong\u003eto \u003ca href=\"https://github.com/copilot/spaces\"\u003egithub.com/copilot/spaces\u003c/a\u003e and click \u003cstrong\u003eCreate space\u003c/strong\u003e.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eName it clearly\u003c/strong\u003e. For example, \u003ccode\u003efrontend‑styleguide\u003c/code\u003e.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eAdd a description\u003c/strong\u003e so teammates know when—\u003cem\u003eand when not\u003c/em\u003e—to use it.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eAttach context\u003c/strong\u003e:\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eFrom repos: Pull in folders like \u003ccode\u003esrc/components\u003c/code\u003e or individual files such as \u003ccode\u003eeslint.config.js\u003c/code\u003e.\u003c/li\u003e\n\n\n\n\u003cli\u003eFree‑text hack: Paste a Slack thread, video transcript, onboarding checklist, or even a JSON schema into the \u003cem\u003eText\u003c/em\u003e tab. Copilot treats it like any other attachment.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003col start=\"5\"\u003e\n\u003cli\u003e\u003cstrong\u003eWrite custom instructions\u003c/strong\u003e. A sentence or two is enough:\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e“Respond as a senior React reviewer. Enforce our ESLint rules and tailwind class naming conventions.”\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003col start=\"6\"\u003e\n\u003cli\u003e\u003cstrong\u003eSave and test it\u003c/strong\u003e. You’re done. Ask Copilot a question in the Space chat—e.g., “Refactor this \u003ccode\u003e\u0026lt;Button\u0026gt;\u003c/code\u003e component to match our accessibility checklist”—and watch it cite files you just attached.\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\n\n\n\n\n\u003ch2 id=\"h-personalize-copilot-s-coding-style-and-voice-too-nbsp\"\u003ePersonalize Copilot’s coding style (and voice, too) \u003c/h2\u003e\n\n\n\n\u003cp\u003eCustom instructions are the “personality layer” of a space and where spaces shine because they live \u003cem\u003ealongside\u003c/em\u003e the attachments. This allows you to do powerful things with a single sentence, including:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eEnforce conventions\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e “Always prefer Vue 3 \u003ccode\u003escript setup\u003c/code\u003e syntax and Composition API for examples.”\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eAdopt a team tone\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e“Answer concisely. Include a one‑line summary before code blocks.”\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eTeach Copilot project‑specific vocabulary\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e “Call it ‘scenario ID’ (SCID), not test case ID.”\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eDuring the GitHub Checkout interview, Kelly shared how she built a personal space for a nonprofit side project: She attached only the Vue front‑end folder \u003cem\u003eplus\u003c/em\u003e instructions on her preferred conventions, and Copilot delivered commit‑ready code snippets that matched her style guide on the first try.\u003c/p\u003e\n\n\n\n\u003ch2 id=\"h-automate-your-workflow-three-real-world-recipes\"\u003eAutomate your workflow: three real‑world recipes\u003c/h2\u003e\n\n\n\n\u003ch3 id=\"h-1-accessibility-compliance-assistant\"\u003e1. Accessibility compliance assistant\u003c/h3\u003e\n\n\n\n\u003cp\u003e\u003cem\u003eSpace ingredients\u003c/em\u003e\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eMarkdown docs on WCAG criteria and GitHub’s internal “Definition of Done”\u003c/li\u003e\n\n\n\n\u003cli\u003eCustom instruction: “When answering, cite the doc section and provide a code diff if changes are required.”\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eHow it helps\u003c/strong\u003e: Instead of pinging the accessibility lead on Slack, you can use Spaces to ask questions like “What steps are needed for MAS‑C compliance on this new modal?” Copilot summarizes the relevant checkpoints, references the doc anchor, and even suggests ARIA attributes or color‑contrast fixes. GitHub’s own accessibility SME, Katherine, pinned this space in Slack so anyone filing a review gets instant, self‑service guidance.\u003c/p\u003e\n\n\n\n\u003ch3 id=\"h-2-data-query-helper-for-complex-schemas\"\u003e2. Data‑query helper for complex schemas\u003c/h3\u003e\n\n\n\n\u003cp\u003e\u003cem\u003eSpace ingredients\u003c/em\u003e\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eYAML schema files for 40+ event tables\u003c/li\u003e\n\n\n\n\u003cli\u003eExample KQL snippets saved as \u003ccode\u003e.sql\u003c/code\u003e files\u003c/li\u003e\n\n\n\n\u003cli\u003eInstruction: “Generate KQL only, no prose explanations unless asked.”\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eHow it helps: \u003c/strong\u003eProduct managers and support engineers who \u003cem\u003edon’t\u003c/em\u003e know your database structures can ask, “Average PR review time last 7 days?” Copilot autocompletes a valid KQL query with correct joins and lets them iterate. Result: lets PMs and support self-serve without bugging data science teams.\u003c/p\u003e\n\n\n\n\u003ch3 id=\"h-3-onboarding-hub-and-knowledge-base-in-one-link\"\u003e3. Onboarding Hub and knowledge base in one link\u003c/h3\u003e\n\n\n\n\u003cp\u003e\u003cem\u003eSpace ingredients\u003c/em\u003e\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eKey architecture diagrams exported as SVG text\u003c/li\u003e\n\n\n\n\u003cli\u003eADRs and design docs from multiple repos\u003c/li\u003e\n\n\n\n\u003cli\u003eCustom instruction: “Answer like a mentor during onboarding; link to deeper docs.”\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eHow it helps: \u003c/strong\u003eNew hires type “How does our auth flow handle SAML?” and get a structured answer with links and diagrams, all without leaving GitHub. Because spaces stay in sync with \u003ccode\u003emain\u003c/code\u003e, updates to ADRs propagate automatically—no stale wikis.\u003c/p\u003e\n\n\n\n\u003ch2 id=\"h-collaboration-that-feels-native-to-github\"\u003eCollaboration that feels native to GitHub\u003c/h2\u003e\n\n\n\n\u003cp\u003eSpaces respect the same permission model you already use:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003ePersonal spaces\u003c/strong\u003e: visible only to you unless shared\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eOrganization‑owned spaces\u003c/strong\u003e: use repo or team permissions to gate access\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eRead‑only vs. edit‑capable\u003c/strong\u003e: let SMEs maintain the canon while everyone else consumes\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eSharing is as simple as sending the space URL or pinning it to a repo README. Anyone with access and a Copilot license can start chatting instantly.\u003c/p\u003e\n\n\n\n\u003ch2 id=\"h-what-s-next-for-copilot-spaces\"\u003eWhat’s next for Copilot Spaces?\u003c/h2\u003e\n\n\n\n\u003cp\u003eWe’re working to bring Copilot Spaces to more of your workflows, and are currently developing:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eIssues and PR attachments\u003c/strong\u003e to bring inline discussions and review notes into the same context bundle.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eIDE Integration\u003c/strong\u003e: Query Spaces in VS Code for tasks like writing tests to match your team’s patterns.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eOrg‑wide discoverability\u003c/strong\u003e to help you browse spaces like you browse repos today, so new engineers can search “Payments SME” and start chatting.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eYour feedback will shape those priorities. \u003ca href=\"https://github.com/orgs/community/discussions/160840?utm_source=chatgpt.com\"\u003eDrop your ideas or pain points in the public discussion\u003c/a\u003e or, if you’re an enterprise customer, through your account team. \u003c/p\u003e\n\n\n\n\u003ch2 id=\"h-get-started-today\"\u003eGet started today\u003c/h2\u003e\n\n\n\n\u003cp\u003eHead to \u003cstrong\u003egithub.com/copilot/spaces\u003c/strong\u003e, spin up your first space, and let us know how it streamlines your workflow. Here’s how to get it fully set up on your end: \u003c/p\u003e\n\n\n\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eFlip the preview toggle\u003c/strong\u003e: \u003cem\u003eSettings \u0026gt; Copilot  \u0026gt;  Preview features \u0026gt; Enable Copilot Spaces.\u003c/em\u003e\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eCreate one small, high‑impact space\u003c/strong\u003e—maybe your team’s code‑review checklist or a set of common data queries.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eShare the link\u003c/strong\u003e in Slack or a README and watch the pings to subject‑matter experts drop.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eIterate\u003c/strong\u003e: prune unused attachments, refine instructions, or split a giant space into smaller ones.\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\n\u003cp\u003eCopilot Spaces is free during the public preview and doesn’t count against your Copilot seat entitlements when you use the base model. We can’t wait to see what you build when Copilot has the \u003cem\u003eright\u003c/em\u003e context at its fingertips.\u003c/p\u003e\n\n\t\n\n\t\u003cdiv\u003e\n\t\u003ch2\u003e\n\t\tWritten by\t\u003c/h2\u003e\n\t\n\t\t\t\u003carticle\u003e\n\t\u003cdiv\u003e\n\t\t\t\t\t\u003cdiv\u003e\n\t\t\t\t\u003cpicture\u003e\n\t\t\t\t\t\u003csource srcset=\"https://github.blog/wp-content/uploads/2025/03/cropped-IMG_1971-200x200.jpeg\" width=\"120\" height=\"120\" media=\"(min-width: 768px)\"/\u003e\n\t\t\t\t\t\u003cimg src=\"https://github.blog/wp-content/uploads/2025/03/cropped-IMG_1971-200x200.jpeg\" alt=\"Andrea Griffiths\" width=\"80\" height=\"80\" loading=\"lazy\" decoding=\"async\"/\u003e\n\t\t\t\t\u003c/picture\u003e\n\t\t\t\u003c/div\u003e\n\t\t\t\t\n\t\t\t\t\t\u003cp\u003eAndrea is a Senior Developer Advocate at GitHub with over a decade of experience in developer tools. She combines technical depth with a mission to make advanced technologies more accessible. After transitioning from Army service and construction management to software development, she brings a unique perspective to bridging complex engineering concepts with practical implementation. She lives in Florida with her Welsh partner, two sons, and two dogs, where she continues to drive innovation and support open source through GitHub\u0026#39;s global initiatives. Find her online @alacolombiadev.\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\u003c/article\u003e\n\t\u003c/div\u003e\n\u003c/section\u003e\u003cdiv\u003e\n\t\u003ch2\u003e\n\t\tExplore more from GitHub\t\u003c/h2\u003e\n\t\u003cdiv\u003e\n\t\t\u003cdiv\u003e\n\t\t\u003cp\u003e\u003cimg src=\"https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg\" width=\"44\" height=\"44\" alt=\"Docs\"/\u003e\u003c/p\u003e\u003ch3\u003e\n\t\t\tDocs\t\t\u003c/h3\u003e\n\t\t\u003cp\u003eEverything you need to master GitHub, all in one place.\u003c/p\u003e\n\t\t\t\t\t\u003cp\u003e\n\t\t\t\t\u003ca data-analytics-click=\"Blog, click on module, text: Go to Docs; ref_location:bottom recirculation;\" href=\"https://docs.github.com/\" target=\"_blank\" aria-label=\"Go to Docs\"\u003e\n\t\t\t\t\tGo to Docs\t\t\t\t\t\t\t\t\t\t\t\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"\u003e\u003cpath fill-rule=\"evenodd\" d=\"M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n\t\t\t\t\t\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\u003cdiv\u003e\n\t\t\u003cp\u003e\u003cimg src=\"https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg\" width=\"44\" height=\"44\" alt=\"GitHub\"/\u003e\u003c/p\u003e\u003ch3\u003e\n\t\t\tGitHub\t\t\u003c/h3\u003e\n\t\t\u003cp\u003eBuild what’s next on GitHub, the place for anyone from anywhere to build anything.\u003c/p\u003e\n\t\t\t\t\t\u003cp\u003e\n\t\t\t\t\u003ca data-analytics-click=\"Blog, click on module, text: Start building; ref_location:bottom recirculation;\" href=\"https://github.com/\" target=\"_blank\" aria-label=\"Start building\"\u003e\n\t\t\t\t\tStart building\t\t\t\t\t\t\t\t\t\t\t\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"\u003e\u003cpath fill-rule=\"evenodd\" d=\"M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n\t\t\t\t\t\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\u003cdiv\u003e\n\t\t\u003cp\u003e\u003cimg src=\"https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg\" width=\"44\" height=\"44\" alt=\"Customer stories\"/\u003e\u003c/p\u003e\u003ch3\u003e\n\t\t\tCustomer stories\t\t\u003c/h3\u003e\n\t\t\u003cp\u003eMeet the companies and engineering teams that build with GitHub.\u003c/p\u003e\n\t\t\t\t\t\u003cp\u003e\n\t\t\t\t\u003ca data-analytics-click=\"Blog, click on module, text: Learn more; ref_location:bottom recirculation;\" href=\"https://github.com/customer-stories\" target=\"_blank\" aria-label=\"Learn more\"\u003e\n\t\t\t\t\tLearn more\t\t\t\t\t\t\t\t\t\t\t\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"\u003e\u003cpath fill-rule=\"evenodd\" d=\"M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n\t\t\t\t\t\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\u003cdiv\u003e\n\t\t\u003cp\u003e\u003cimg src=\"https://github.blog/wp-content/uploads/2024/04/Universe24-North_Star.svg\" width=\"44\" height=\"44\" alt=\"GitHub Universe 2025\"/\u003e\u003c/p\u003e\u003ch3\u003e\n\t\t\tGitHub Universe 2025\t\t\u003c/h3\u003e\n\t\t\u003cp\u003eLast chance: Save $700 on your IRL pass to Universe and join us on Oct. 28-29 in San Francisco.\u003c/p\u003e\n\t\t\t\t\t\u003cp\u003e\n\t\t\t\t\u003ca data-analytics-click=\"Blog, click on module, text: Register now \u0026gt;; ref_location:bottom recirculation;\" href=\"https://githubuniverse.com/?utm_source=Blog\u0026amp;utm_medium=GitHub\u0026amp;utm_campaign=module\" target=\"_blank\" aria-label=\"Register now \u0026gt;\"\u003e\n\t\t\t\t\tRegister now \u0026gt;\t\t\t\t\t\t\t\t\t\t\t\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"\u003e\u003cpath fill-rule=\"evenodd\" d=\"M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n\t\t\t\t\t\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\t\u003c/div\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "11 min read",
  "publishedTime": "2025-06-18T16:00:00Z",
  "modifiedTime": null
}
