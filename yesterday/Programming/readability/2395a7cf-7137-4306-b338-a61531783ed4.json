{
  "id": "2395a7cf-7137-4306-b338-a61531783ed4",
  "title": "Modern CI/CD for a Post-VMware World: Embrace KubeVirt With TeamCity",
  "link": "https://blog.jetbrains.com/teamcity/2025/06/kubevirt-with-teamcity/",
  "description": "In November 2023, Broadcom acquired VMware for a whopping USD 69 billion. The strategic goal behind the acquisition was to enable customers to create and modernize their cloud environments, both private and hybrid. Following the acquisition, VMware perpetual license holders started receiving cease-and-desist letters from Broadcom. Users can continue using the software, but can no […]",
  "author": "Olga Bedrina",
  "published": "Tue, 24 Jun 2025 11:59:12 +0000",
  "source": "https://blog.jetbrains.com/feed",
  "categories": [
    "news"
  ],
  "byline": "Olga Bedrina",
  "length": 7187,
  "excerpt": "Curious about moving off VMware? Learn how TeamCity and KubeVirt make it easy to run your CI/CD workloads in a modern, Kubernetes-native way.",
  "siteName": "The JetBrains Blog",
  "favicon": "https://blog.jetbrains.com/wp-content/uploads/2024/01/cropped-mstile-310x310-1-180x180.png",
  "text": "Powerful CI/CD for DevOps-centric teams Modern CI/CD for a Post-VMware World: Embrace KubeVirt With TeamCity In November 2023, Broadcom acquired VMware for a whopping USD 69 billion. The strategic goal behind the acquisition was to enable customers to create and modernize their cloud environments, both private and hybrid. Following the acquisition, VMware perpetual license holders started receiving cease-and-desist letters from Broadcom. Users can continue using the software, but can no longer renew support services unless they have an existing contract that allows ongoing renewals. While the business goal to generate more revenue by pushing users to buy subscriptions to VMware product bundles is clear, it has, however, been deemed controversial by the community. “Nothing says ‘good customer relations’ like sending your customers cease and desist letters”, says one of the commenters. In the whirlwind of these events, many teams are looking for alternatives. What options exist for those who wish to switch to a more reliable solution? The rise of KubeVirt One option is KubeVirt, an open-source project that enables you to run virtual machines within Kubernetes. It brings virtualization capabilities into Kubernetes, allowing you to manage both containers and VMs side by side using the same control plane. In KubeVirt, virtual machines are defined using Kubernetes-native custom resources called VirtualMachine or VirtualMachineInstance (VMI). This process is similar to defining a pod, but instead of deploying containers, you’re launching full virtual machines. How TeamCity can help If you’re thinking about moving away from VMware and want something that works well with Kubernetes, KubeVirt is a solid choice. TeamCity supports this by letting you define a KubeVirt resource instead of a regular pod template in a Kubernetes cloud profile.  In the cloud image settings, you can provide a custom resource template. That can be a VirtualMachineInstance, which TeamCity will use to start build agents. You can set up a KubeVirt cloud profile in TeamCity to spin up VMs on demand, just like you would with AWS or GCP. These VMs run as part of your Kubernetes cluster using KubeVirt, and TeamCity can use them as build agents. Just keep in mind that your cluster needs to be set up to support virtual machines. It’s a great way to get the flexibility of virtual machines while still staying in the Kubernetes ecosystem. Here’s how the flow works: Configure a Kubernetes cloud profile in the TeamCity web UI. In the cloud image settings, define a custom template using a KubeVirt VirtualMachineInstance (VMI) instead of a standard Pod. When a build starts, TeamCity requests a new VM from the KubeVirt backend. When a build is triggered, TeamCity sends a request to the Kubernetes API to create that VMI. KubeVirt handles the VMI and starts a virtual machine on your cluster. A TeamCity agent is bootstrapped inside the VM and begins processing the build. This mirrors how TeamCity works with cloud providers like AWS or GCP – except here, your VMs run in your own Kubernetes infrastructure. Setting up a cloud profile for KubeVirt Here’s a high-level outline of how you might set this up: 1. Define a VirtualMachine YAML template in KubeVirt. Before you can run build agents as VMs, you need a reusable VM template in your Kubernetes cluster. This is typically a paused virtual machine that TeamCity can use to start new build agents when needed. Here’s a simplified example (based on the official KubeVirt documentation): apiVersion: kubevirt.io/v1 kind: VirtualMachine metadata: name: teamcity-agent-template spec: running: false template: metadata: labels: kubevirt.io/domain: teamcity-agent-template spec: domain: devices: disks: - name: agent-disk disk: bus: virtio resources: requests: memory: 2Gi cpu: \"2\" volumes: - name: agent-disk containerDisk: image: your.registry/teamcity-agent-image:latest 2. Add a Kubernetes cloud profile in TeamCity In the TeamCity admin UI: Go to Project Settings | Cloud Profiles. Add a new Kubernetes cloud profile. In the cloud image section, define a custom resource template using the VirtualMachineInstance spec (instead of a regular pod). You’ll need to provide: The Kubernetes API endpoint and credentials. The namespace where your VM templates live. The base VM image or reference template name (e.g. teamcity-agent-template). Any necessary init containers, environment variables, or startup scripts. 3. Start a build Once configured, when a build is queued: TeamCity provisions a VM based on your template. It waits for the TeamCity agent to register. The build runs in the newly spun-up VM. After completion, the VM is automatically shut down or deleted (depending on your cleanup strategy). Potential use cases Here are some practical scenarios where this integration might be especially useful: Running builds in clean VM environments for strong isolation. Building Android or desktop apps where a full OS and nested virtualization might be needed. Supporting legacy toolchains or build tools that require a VM rather than a container. Enabling hybrid infrastructure, where some builds run in containers and others in KubeVirt-managed VMs – all orchestrated by TeamCity. Conclusion If you’re moving away from VMware, KubeVirt gives you a solid way to keep using VMs – in a more modern, Kubernetes-native setup. You can run VMs and containers side by side, all managed through the same platform. TeamCity already works with KubeVirt, so you don’t have to change how you build or run your pipelines. Whether you use containers, VMs, or both, everything keeps working the way you expect.  If you’d like to try adopting TeamCity for your team, consider starting a free trial or reaching out to us for a demo. We’ll be happy to help. Subscribe to TeamCity Blog updates Discover more",
  "image": "https://blog.jetbrains.com/wp-content/uploads/2025/06/kubevirt-social-1.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"main\"\u003e\n    \u003cdiv\u003e\n                        \u003ca href=\"https://blog.jetbrains.com/teamcity/\"\u003e\n                            \u003cimg src=\"https://blog.jetbrains.com/wp-content/uploads/2019/01/TeamCity-2.svg\" alt=\"Teamcity logo\"/\u003e\n                                                                                                \n                                                                                    \u003c/a\u003e\n                                                    \u003cp\u003ePowerful CI/CD for DevOps-centric teams\u003c/p\u003e\n                                            \u003c/div\u003e\n                            \u003csection data-clarity-region=\"article\"\u003e\n                \u003cdiv\u003e\n                                        \u003ch2 id=\"major-updates\"\u003eModern CI/CD for a Post-VMware World: Embrace KubeVirt With TeamCity\u003c/h2\u003e                    \n                    \n\u003cp\u003eIn November 2023, Broadcom \u003ca href=\"https://investors.broadcom.com/news-releases/news-release-details/broadcom-completes-acquisition-vmware\" target=\"_blank\" rel=\"noopener\"\u003eacquired\u003c/a\u003e VMware for a whopping USD 69 billion. The strategic goal behind the acquisition was to enable customers to create and modernize their cloud environments, both private and hybrid.\u003c/p\u003e\n\n\n\n\u003cp\u003eFollowing the acquisition, VMware perpetual license holders \u003ca href=\"https://arstechnica.com/gadgets/2025/05/broadcom-sends-cease-and-desist-letters-to-subscription-less-vmware-users/\" target=\"_blank\" rel=\"noopener\"\u003estarted receiving\u003c/a\u003e cease-and-desist letters from Broadcom. Users can continue using the software, but can no longer renew support services unless they have an existing contract that allows ongoing renewals.\u003c/p\u003e\n\n\n\n\u003cp\u003eWhile the business goal to generate more revenue by pushing users to buy subscriptions to VMware product bundles is clear, it has, however, been deemed controversial by the community.\u003c/p\u003e\n\n\n\n\u003cp\u003e“Nothing says ‘good customer relations’ like sending your customers cease and desist letters”, \u003ca href=\"https://arstechnica.com/gadgets/2025/05/broadcom-sends-cease-and-desist-letters-to-subscription-less-vmware-users/?comments-page=1#comments\" target=\"_blank\" rel=\"noopener\"\u003esays\u003c/a\u003e one of the commenters.\u003c/p\u003e\n\n\n\n\u003cp\u003eIn the whirlwind of these events, many teams are looking for alternatives. What options exist for those who wish to switch to a more reliable solution?\u003c/p\u003e\n\n\n\n\u003ch2\u003eThe rise of KubeVirt\u003c/h2\u003e\n\n\n\n\u003cp\u003eOne option is \u003ca href=\"https://kubevirt.io/\" target=\"_blank\" rel=\"noopener\"\u003eKubeVirt\u003c/a\u003e, an open-source project that enables you to run virtual machines within Kubernetes. It brings virtualization capabilities into Kubernetes, allowing you to manage both containers and VMs side by side using the same control plane.\u003c/p\u003e\n\n\n\n\u003cp\u003eIn KubeVirt, virtual machines are defined using Kubernetes-native custom resources called \u003ccode\u003eVirtualMachine\u003c/code\u003e or \u003ccode\u003eVirtualMachineInstance\u003c/code\u003e (VMI). This process is similar to defining a pod, but instead of deploying containers, you’re launching full virtual machines.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" fetchpriority=\"high\" width=\"1078\" height=\"850\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/06/kubevirt-blog-post.png\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003ch2\u003eHow TeamCity can help\u003c/h2\u003e\n\n\n\n\u003cp\u003eIf you’re thinking about moving away from VMware and want something that works well with Kubernetes, KubeVirt is a solid choice. TeamCity supports this by letting you define a KubeVirt resource instead of a regular pod template in a \u003ca href=\"https://www.jetbrains.com/help/teamcity/cloud/setting-up-teamcity-for-kubernetes.html#Kubernetes+Cloud+Profile+Configuration\" target=\"_blank\" rel=\"noopener\"\u003eKubernetes cloud profile\u003c/a\u003e. \u003c/p\u003e\n\n\n\n\u003cp\u003eIn the cloud image settings, you can provide a custom resource template. That can be a VirtualMachineInstance, which TeamCity will use to start build agents.\u003c/p\u003e\n\n\n\n\u003cp\u003eYou can set up a KubeVirt \u003ca href=\"https://www.jetbrains.com/help/teamcity/setting-up-teamcity-for-kubernetes.html#Kubernetes+Cloud+Profile+Configuration\" target=\"_blank\" rel=\"noopener\"\u003ecloud profile\u003c/a\u003e in TeamCity to spin up VMs on demand, just like you would with AWS or GCP. These VMs run as part of your Kubernetes cluster using KubeVirt, and TeamCity can use them as build agents. Just keep in mind that your cluster needs to be set up to support virtual machines.\u003c/p\u003e\n\n\n\n\u003cp\u003eIt’s a great way to get the flexibility of virtual machines while still staying in the Kubernetes ecosystem.\u003c/p\u003e\n\n\n\n\u003cp\u003eHere’s how the flow works:\u003c/p\u003e\n\n\n\n\u003col\u003e\n\u003cli\u003eConfigure a Kubernetes cloud profile in the TeamCity web UI.\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\n\u003col start=\"2\"\u003e\n\u003cli\u003eIn the cloud image settings, define a custom template using a KubeVirt \u003ccode\u003eVirtualMachineInstance\u003c/code\u003e (VMI) instead of a standard Pod.\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\n\u003col start=\"3\"\u003e\n\u003cli\u003eWhen a build starts, TeamCity requests a new VM from the KubeVirt backend. When a build is triggered, TeamCity sends a request to the Kubernetes API to create that VMI.\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\n\u003col start=\"4\"\u003e\n\u003cli\u003eKubeVirt handles the VMI and starts a virtual machine on your cluster.\u003c/li\u003e\n\n\n\n\u003cli\u003eA TeamCity agent is bootstrapped inside the VM and begins processing the build.\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\n\u003cp\u003eThis mirrors how TeamCity works with cloud providers like AWS or GCP – except here, your VMs run in your own Kubernetes infrastructure.\u003c/p\u003e\n\n\n\n\u003ch3\u003eSetting up a cloud profile for KubeVirt\u003c/h3\u003e\n\n\n\n\u003cp\u003eHere’s a high-level outline of how you might set this up:\u003c/p\u003e\n\n\n\n\u003ch4\u003e1. Define a VirtualMachine YAML template in KubeVirt.\u003c/h4\u003e\n\n\n\n\u003cp\u003eBefore you can run build agents as VMs, you need a reusable VM template in your Kubernetes cluster. This is typically a paused virtual machine that TeamCity can use to start new build agents when needed.\u003c/p\u003e\n\n\n\n\u003cp\u003eHere’s a simplified example (based on the\u003ca href=\"https://kubevirt.io/user-guide/user_workloads/virtual_machine_instances/#virtualmachineinstance-api\" target=\"_blank\" rel=\"noopener\"\u003e official KubeVirt documentation\u003c/a\u003e):\u003c/p\u003e\n\n\n\n\u003cpre\u003eapiVersion: kubevirt.io/v1\nkind: VirtualMachine\nmetadata:\n  name: teamcity-agent-template\nspec:\n  running: false\n  template:\n    metadata:\n      labels:\n        kubevirt.io/domain: teamcity-agent-template\n    spec:\n      domain:\n        devices:\n          disks:\n          - name: agent-disk\n            disk:\n              bus: virtio\n        resources:\n          requests:\n            memory: 2Gi\n            cpu: \u0026#34;2\u0026#34;\n      volumes:\n      - name: agent-disk\n        containerDisk:\n          image: your.registry/teamcity-agent-image:latest\u003c/pre\u003e\n\n\n\n\u003ch4\u003e\u003cstrong\u003e2. Add a Kubernetes cloud profile in TeamCity\u003c/strong\u003e\u003c/h4\u003e\n\n\n\n\u003cp\u003eIn the TeamCity admin UI:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eGo to\u003cstrong\u003e\u003cem\u003e \u003c/em\u003e\u003c/strong\u003e\u003cem\u003eProject Settings | Cloud Profiles\u003c/em\u003e.\u003c/li\u003e\n\n\n\n\u003cli\u003eAdd a new \u003cem\u003eKubernetes cloud profile\u003c/em\u003e.\u003c/li\u003e\n\n\n\n\u003cli\u003eIn the\u003cem\u003e cloud image\u003c/em\u003e section, define a \u003cem\u003ecustom resource template\u003c/em\u003e using the \u003ccode\u003eVirtualMachineInstance\u003c/code\u003e spec (instead of a regular pod).\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eYou’ll need to provide:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eThe Kubernetes API endpoint and credentials.\u003c/li\u003e\n\n\n\n\u003cli\u003eThe namespace where your VM templates live.\u003c/li\u003e\n\n\n\n\u003cli\u003eThe base VM image or reference template name (e.g. \u003ccode\u003eteamcity-agent-template\u003c/code\u003e).\u003c/li\u003e\n\n\n\n\u003cli\u003eAny necessary init containers, environment variables, or startup scripts.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003e3. Start a build\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003eOnce configured, when a build is queued:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eTeamCity provisions a VM based on your template.\u003c/li\u003e\n\n\n\n\u003cli\u003eIt waits for the TeamCity agent to register.\u003c/li\u003e\n\n\n\n\u003cli\u003eThe build runs in the newly spun-up VM.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eAfter completion, the VM is automatically shut down or deleted (depending on your cleanup strategy).\u003c/p\u003e\n\n\n\n\u003ch2\u003ePotential use cases\u003c/h2\u003e\n\n\n\n\u003cp\u003eHere are some practical scenarios where this integration might be especially useful:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eRunning builds in clean VM environments for strong isolation.\u003c/li\u003e\n\n\n\n\u003cli\u003eBuilding Android or desktop apps where a full OS and nested virtualization might be needed.\u003c/li\u003e\n\n\n\n\u003cli\u003eSupporting legacy toolchains or build tools that require a VM rather than a container.\u003c/li\u003e\n\n\n\n\u003cli\u003eEnabling hybrid infrastructure, where some builds run in containers and others in KubeVirt-managed VMs – all orchestrated by TeamCity.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\n\n\n\u003cp\u003eIf you’re moving away from VMware, KubeVirt gives you a solid way to keep using VMs – in a more modern, Kubernetes-native setup. You can run VMs and containers side by side, all managed through the same platform.\u003c/p\u003e\n\n\n\n\u003cp\u003eTeamCity already works with KubeVirt, so you don’t have to change how you build or run your pipelines. Whether you use containers, VMs, or both, everything keeps working the way you expect. \u003c/p\u003e\n\n\n\n\u003cp\u003eIf you’d like to try adopting TeamCity for your team, consider \u003ca href=\"https://www.jetbrains.com/teamcity/download/\" target=\"_blank\" rel=\"noopener\"\u003estarting a free trial\u003c/a\u003e or \u003ca href=\"https://www.jetbrains.com/teamcity/get-in-touch/\" target=\"_blank\" rel=\"noopener\"\u003ereaching out to us for a demo\u003c/a\u003e. We’ll be happy to help.\u003c/p\u003e\n                    \n                                                                                                                                                                                                                            \u003cdiv\u003e\n                                \u003cdiv\u003e\n                                                                            \u003ch4\u003eSubscribe to TeamCity Blog updates\u003c/h4\u003e\n                                                                                                            \n                                \u003c/div\u003e\n                                \n                                \u003cp\u003e\u003cimg src=\"https://blog.jetbrains.com/wp-content/themes/jetbrains/assets/img/img-form.svg\" alt=\"image description\"/\u003e\n                                                                    \u003c/p\u003e\n                            \u003c/div\u003e\n                                                            \u003c/div\u003e\n                \u003ca href=\"#\"\u003e\u003c/a\u003e\n                \n                \n            \u003c/section\u003e\n                    \u003cdiv\u003e\n                \u003cp\u003e\n                    \u003ch2\u003eDiscover more\u003c/h2\u003e\n                \u003c/p\u003e\n                \n            \u003c/div\u003e\n                \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "8 min read",
  "publishedTime": null,
  "modifiedTime": null
}
