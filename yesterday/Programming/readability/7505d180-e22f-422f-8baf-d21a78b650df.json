{
  "id": "7505d180-e22f-422f-8baf-d21a78b650df",
  "title": "PHP Annotated ‚Äì May 2025",
  "link": "https://blog.jetbrains.com/phpstorm/2025/05/php-annotated-may-2025/",
  "description": "Welcome to the May edition of PHP Annotated! It‚Äôs been a minute since the last edition. Turns out time flies when you‚Äôre deep in foundation work, and the occasional existential debugging session. But we are back. Here‚Äôs everything you might‚Äôve missed in the PHP world, we dug through the noise so you can just enjoy [‚Ä¶]",
  "author": "Roman Pronskiy",
  "published": "Fri, 30 May 2025 15:36:07 +0000",
  "source": "https://blog.jetbrains.com/feed",
  "categories": [
    "laravel",
    "php",
    "php-8-4",
    "php-8-5",
    "php-annotated-monthly",
    "rfc",
    "symfony"
  ],
  "byline": "Roman Pronskiy",
  "length": 13182,
  "excerpt": "Welcome to the May edition of PHP Annotated! It‚Äôs been a minute since the last edition. Turns out time flies when you‚Äôre deep in foundation work, and the occasional existential debugging session. But",
  "siteName": "The JetBrains Blog",
  "favicon": "https://blog.jetbrains.com/wp-content/uploads/2024/01/cropped-mstile-310x310-1-180x180.png",
  "text": "The IDE that empowers PHP developers PHP Annotated ‚Äì May 2025 Welcome to the May edition of PHP Annotated! It‚Äôs been a minute since the last edition. Turns out time flies when you‚Äôre deep in foundation work, and the occasional existential debugging session. But we are back. Here‚Äôs everything you might‚Äôve missed in the PHP world, we dug through the noise so you can just enjoy the highlights. Highlights Join PHPverse to Celebrate 30 Years of PHP! PHP is turning 30 this year! üéâ PHPverse is a free online event hosted by JetBrains to mark this amazing milestone together. Register üìÖ June 17, 2025 üïö 11:30‚Äì16:30 UTC And if you‚Äôre feeling nostalgic, check out my experiment from last year, where I actually run PHP 1.0: PHP 8.1.32, PHP 8.2.28, PHP 8.3.19, and PHP 8.4.5 Released ‚ùóÔ∏èThese security updates address several vulnerabilities, including: CVE-2025-1219, CVE-2025-1736, CVE-2025-1861, CVE-2025-1734, CVE-2025-1217, and out-of-bounds read when using XML_OPTION_SKIP_TAGSTART. PHP Core Security Audit Results In 2024, the first in a decade external security audit of the PHP core was conducted by The PHP Foundation, and commissioned by the Sovereign Tech Agency. The audit focused on the most critical parts of the PHP source code, given the limited budget. The audit uncovered 27 issues, 17 of which had security implications. All identified issues have since been fixed by the PHP development team. PHP users are strongly encouraged to upgrade to the latest PHP versions to benefit from these security improvements. FrankenPHP Is Now Officially Supported by The PHP Foundation FrankenPHP, a modern PHP application server built for performance and ease of deployment, is now officially supported by The PHP Foundation. It‚Äôs built in Go, powered by the Caddy web server, and offers a fresh take on running PHP outside of the traditional FPM model. Run PHP Inside Node.js with @platformatic/php-node php-node is a Rust-based, Node.js-native module that allows running PHP applications within a Node.js environment. It works by dispatching requests to a PHP instance running multi-threaded in the worker pool provided by the Node.js. This means you can enjoy the performance of Node.js while utilizing PHP‚Äôs extensive ecosystem and functionality. Here is a hello world example: üëâ Intro blog post Think of an Elephpant üêò PHP doesn‚Äôt need defending. It needs celebrating. A brilliant message and post from Liam Hammett! PHP Core ‚úÖ RFC: Pipe operator v3 The first proposal to bring a pipe operator to PHP dates back to 2016, followed by a second attempt in 2020. Now, on the third try it‚Äôs finally happening! Starting with PHP 8.5, you‚Äôll be able to use the |\u003e operator to chain function calls in a clean, readable way: $result = \"Hello World\" |\u003e htmlentities(...) |\u003e str_split(...) |\u003e fn($x) =\u003e array_map(strtoupper(...), $x) |\u003e fn($x) =\u003e array_filter($x, fn($v) =\u003e $v != 'O'); Kudos to Larry Garfield for the persistence and effort to see this through! Check out Brent‚Äôs video overview of PHP 8.5‚Äôs pipe operator. ‚úÖ RFC: array_first() and array_last() PHP 7.3 introduced array_key_first() and array_key_last() to get the first and last keys of an array, but still no functions to get the first and last values of an array. Thanks to Niels Dossche two new functions will be added in PHP 8.5: array_first([1 =\u003e 'a', 0 =\u003e 'b', 3 =\u003e 'c', 2 =\u003e 'd']); // 'a' array_last([1 =\u003e 'a', 0 =\u003e 'b', 3 =\u003e 'c', 2 =\u003e 'd']); // 'd' ‚úÖ RFC: Marking return values as important (#[\\NoDiscard]) PHP 8.5 will come with a new #[\\NoDiscard] attribute to indicate that the return value of a function or method is ‚Äúimportant‚Äù and that not doing anything with the return value is likely to be a bug. #[\\NoDiscard(\"this is important\")] function foo(): int { return 0; } $results = foo(); // No warning, because the return value is consumed by the assignment foo();// Warning: The return value of function foo() is expected to be consumed üì£ RFC: True Async Edmond Dantes proposes to create a standard for writing concurrent code in PHP, as well as a C-API interface that will allow PHP to be extended at a low level with C, Rust, C++, and other languages. This will allow modules to support non-blocking I/O operations without having to override PHP functions or duplicate code. As Edmond clarified on the mailing list, the plan is to simplify the current RFC as much as possible to make it easier to pass. New syntax should be discussed closer to future versions of PHP (likely 9.0). You can follow the development process almost live in this separate github.com/true-async. PHP 8.5 release managers announced As is tradition, PHP 8.5 will have 2 rookie release managers: Volker Dusch and Daniel Scherzer. They will be assisted by veteran RM Pierrick Charron. There are a few other RFCs with mentioning that passed, are under discussion, or were declined already: ‚úÖ RFC: Add get_error_handler(), get_exception_handler() functions üì£ RFC: Final Property Promotion üì£ RFC: Modern Compression üì£ RFC: Change default zend.exception_ignore_args INI setting ‚ùå RFC: Nested Classes ‚ùå RFC: Never Parameters (v2) PHP WebRTC A full implementation of the WebRTC protocol in pure PHP! No Node.js or JavaScript is required on the backend to use. You would need FFI enabled, however. The goal is to make it easy to build WebRTC-based apps in pure PHP ‚Äì including media servers, video conference web app, SFUs, and peer-to-peer apps. Bravo! üëè phpacker/phpacker Package any PHP script or PHAR into a standalone, cross-platform executable. I briefly explained how this works in my blogpost Turn Any PHP Script into a Native Single-File Binary. Phacker makes it really easy and builds for Mac, Linux, and Windows! NativePHP 1.0 The tool allows building desktop application with PHP and JavaScript/HTML/CSS. There is also a paid version for iOS and Android devices: NativePHP for Mobile. boson-php/boson This is another tool to build cross-platform desktop apps with PHP, JavaScript, HTML, and CSS. But instead of Electron, under the hood, it uses saucer/saucer, a modern, cross-platform C++ webview library, which allows making apps really slim: $app = new Boson\\Application(); $app-\u003ewebview-\u003ehtml = \u003c\u003c\u003c'HTML' \u003cbutton onclick=\"foo('HELLO');\"\u003eHello\u003c/button\u003e HTML; $app-\u003ewebview-\u003ebind('foo', var_dump(...)); $app-\u003erun(); NPX-like package execution tools for PHP There are a few such tools available out there: imliam/cpx ‚Äì Run any command from any composer package, even if it‚Äôs not installed in your project. eduardocruz/phpx ‚Äì PHPX is a NPX-like package execution tool for PHP. I also vibe-coded prototyped my own tool in Python. The difference is that it does not require users to have PHP or Composer on their machine: pronskiy/pocus. Originally I wanted my friends who have uvx installed to be able to use my MCP servers with no additional prerequisites. So it allows them to run any script from GitHub with one command: uvx pocus https://github.com/pronskiy/mcp examples/echo.php Or any command from an existing PHP package: uvx pocus phpstan/phpstan phpstan analyse ./src masan4444/phpup ‚Äì Cross-Platform PHP version manager written in Rust. Seems abandoned, but maybe someone wants to pick it up? php-internal/dload ‚Äì Helps to download binaries from release assets. utopia-php/vcs ‚Äì Lite \u0026 fast micro PHP vcs abstraction library that is easy to use. jerowork/graphql-attribute-schema ‚Äì Easily build your GraphQL schema using PHP attributes instead of large configuration arrays. mario-deluna/php-glfw ‚Äì A fully-featured OpenGL and GLFW extension for PHP. At first I thought it was another fun project to make cool demos like these: medilies/php-pong ‚Äì Classic Pong game programmed with pure OpenGL wrapped in OOP code. mario-deluna/php-chip8 ‚Äì Yet another CHIP-8 emulator, but in PHP!. Or even like this: phpgl/php-craft ‚Äì Mining PHPotentials: A Minecraft-Inspired Game written in PHP. But it actually has useful applications, for example: creating animated code snippets with Tempest Highlight \u0026 PHP-GLFW: AI The ecosystem of AI tooling for PHP is growing fast! Here are just a few interesting findings. MCP If you‚Äôre new to the topic, check out my short intro video: MCP ‚Äì What is that? I found the interface of logiscapedev/mcp-sdk-php a bit frustrating to work with, so I built a simple wrapper to make things easier: pronskiy/mcp ‚Äì üêâ The fast, PHP way to build MCP servers. Here‚Äôs what a minimal MCP server looks like using the wrapper: new \\Pronskiy\\Mcp\\Server(name: 'echo-server') -\u003etool( name: 'echo' , description 'Echoes text', fn (string $text) =\u003e $text )-\u003erun(); But there is a much more powerful alternative: php-mcp/server ‚Äì PHP implementation for the Model Context Protocol (MCP) server. LLM Frameworks LLPhant/LLPhant ‚Äì A lightweight and intuitive framework with tons of ready-to-use tools. Well-documented, actively developed. inspector-apm/neuron-ai ‚Äì Open source framework to create full featured AI Agents in PHP. Using AI models in PHP Thanks to an open ONNX format, it is possible to run many AI models in PHP natively. These are the tools that facilitate it: CodeWithKyrian/transformers-php ankane/onnxruntime-php PhpStorm PhpStorm 2025.1 This release is a major update that includes improvements in PHPStan annotations, Xdebug, and WordPress support. It also includes new subscription system for JetBrains AI with AI Free tier. And speaking of AI, Junie, the coding agent by JetBrains, is now available for PhpStorm too! New JetBrains Xdebug Helper browser extension. Cron \u0026 Crontab Support IDE Plugin ‚Äì Crontab syntax support: schedule periods and errors highlighting, shell command completions, human-readable schedule folding, and more. Laravel Idea 10 released ‚Äì The popular plugin for PhpStorm has received a major update. It includes the Database tables and fields completion, code generation improvements, and more. Frameworks Laravel 12 is Now Released This update introduces new starter kits for React, Vue, and Livewire Capevace/laravel-introspect ‚Äì Query your Laravel codebase like a database, with an Eloquent-like API. fdomgjoni99/laravel-ai-factory ‚Äì A package for generating realistic test data using AI models. 10 Efficient (and Fun) Ways to Seed Your Database by Nico Devs. Secure Your Webhooks in Laravel: Preventing Data Spoofing by Chris. Custom PHPStan Rules to Improve Every Symfony project by Tomas Votruba. Symfony 7.3.0 has been released Check the Living on the Edge category on this blog to learn about the main features of this new stable release. Misc PHP 3 to 8: The Evolution of a Codebase by Aleksander Kaim. Create Weird Fun PHPStan Rules like Nobody‚Äôs Watching by Tomas Votruba. Discovering PHP‚Äôs yield Keyword After 10 Years by Will. And Then There Was PIE by Derick Rethans. Combining regular expressions with named capture groups to improve performance by Benjamin Eberlei. Conferences These PHP events are all worth a visit, and some are still accepting presentation proposals: PHPverse 2025 ‚Äì June 17, Online. PHP Conference Kansai 2025 ‚Äì July 18‚Äì19, Kobe, Japan. Laracon 2025 ‚Äì July 29‚Äì30, Denver, CO, USA. API Platform Conference 2025 ‚Äì September 18‚Äì19, Lille, France. Forum PHP 2025 ‚Äì October 9‚Äì10, Disneyland Paris, France. International PHP Conference 2025 ‚Äì October 27‚Äí31, Munich, Germany. SymfonyCon Amsterdam 2025 ‚Äì November 27-28. Amsterdam, Netherlands. CFP To find a PHP meetup happening near you, check out the calendar on php.net. Fun If you have any interesting or useful links to share via PHP Annotated, please leave a comment on this post or let us know on X/Twitter: @pronskiy. Subscribe to PHP Annotated If you have any interesting or useful links to share via PHP Annotated, please leave a comment on this post or let us know on X/Twitter. Subscribe to PHP Annotated Subscribe to PHP Annotated Discover more",
  "image": "https://blog.jetbrains.com/wp-content/uploads/2025/05/PS-social-BlogSocialShare-1280x720-2x.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"main\"\u003e\n    \u003cdiv\u003e\n                        \u003ca href=\"https://blog.jetbrains.com/phpstorm/\"\u003e\n                            \u003cimg src=\"https://blog.jetbrains.com/wp-content/uploads/2019/01/PhpStorm-1.svg\" alt=\"Phpstorm logo\"/\u003e\n                                                                                                \n                                                                                    \u003c/a\u003e\n                                                    \u003cp\u003eThe IDE that empowers PHP developers\u003c/p\u003e\n                                            \u003c/div\u003e\n                            \u003csection data-clarity-region=\"article\"\u003e\n                \u003cdiv\u003e\n                                        \u003ch2 id=\"major-updates\"\u003ePHP Annotated ‚Äì May 2025\u003c/h2\u003e                    \n                    \u003cp\u003e\u003ca href=\"https://blog.jetbrains.com/phpstorm/2025/05/php-annotated-may-2025/\"\u003e\u003cimg decoding=\"async\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/05/PS-social-BlogSocialShare-1280x720-2x.jpg\" alt=\"PHP Annotated\" width=\"900\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eWelcome to the May edition of PHP Annotated!\u003c/p\u003e\n\u003cp\u003eIt‚Äôs been a minute since the last edition. Turns out time flies when you‚Äôre deep in foundation work, and the occasional existential debugging session. But we are back.\u003c/p\u003e\n\u003cp\u003eHere‚Äôs everything you might‚Äôve missed in the PHP world, we dug through the noise so you can just enjoy the highlights.\u003c/p\u003e\n\u003ch2 id=\"highlights\"\u003eHighlights\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ch3\u003e\u003ca href=\"https://blog.jetbrains.com/phpstorm/2025/05/join-jetbrains-phpverse-to-celebrate-30-years-of-php/\"\u003eJoin PHPverse to Celebrate 30 Years of PHP!\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003ePHP is turning 30 this year! üéâ PHPverse is a free online event hosted by JetBrains to mark this amazing milestone together.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca href=\"https://lp.jetbrains.com/phpverse-2025/#registration-for-jetbrains-phpverse\" target=\"_blank\" rel=\"noopener\"\u003eRegister\u003c/a\u003e\u003c/strong\u003e\u003cbr/\u003e\n            üìÖ \u003cstrong\u003eJune 17, 2025\u003c/strong\u003e\u003cbr/\u003e\n            üïö \u003cstrong\u003e11:30‚Äì16:30 UTC\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eAnd if you‚Äôre feeling nostalgic, check out my experiment from last year, where I actually \u003cem\u003erun\u003c/em\u003e PHP 1.0:\u003c/p\u003e\n\u003cp\u003e        \u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/0BPExYh5Anw?si=ejRL8fMzJ3gLnRZU\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n    \u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ch3\u003e\u003ca href=\"https://www.php.net/ChangeLog-8.php#8.1.32\" target=\"_blank\" rel=\"noopener\"\u003ePHP 8.1.32\u003c/a\u003e, \u003ca href=\"https://www.php.net/ChangeLog-8.php#8.2.28\" target=\"_blank\" rel=\"noopener\"\u003ePHP 8.2.28\u003c/a\u003e, \u003ca href=\"https://www.php.net/ChangeLog-8.php#8.3.19\" target=\"_blank\" rel=\"noopener\"\u003ePHP 8.3.19\u003c/a\u003e, and \u003ca href=\"https://www.php.net/ChangeLog-8.php#8.4.5\" target=\"_blank\" rel=\"noopener\"\u003ePHP 8.4.5\u003c/a\u003e Released\u003c/h3\u003e\n\u003cp\u003e‚ùóÔ∏èThese security updates address several vulnerabilities, including:\u003cbr/\u003e\n            \u003ca href=\"https://github.com/php/php-src/security/advisories/GHSA-p3x9-6h7p-cgfc\" target=\"_blank\" rel=\"noopener\"\u003eCVE-2025-1219\u003c/a\u003e, \u003ca href=\"https://github.com/php/php-src/security/advisories/GHSA-hgf5-96fm-v528\" target=\"_blank\" rel=\"noopener\"\u003eCVE-2025-1736\u003c/a\u003e, \u003ca href=\"https://github.com/php/php-src/security/advisories/GHSA-52jp-hrpf-2jff\" target=\"_blank\" rel=\"noopener\"\u003eCVE-2025-1861\u003c/a\u003e, \u003ca href=\"https://github.com/php/php-src/security/advisories/GHSA-pcmh-g36c-qc44\" target=\"_blank\" rel=\"noopener\"\u003eCVE-2025-1734\u003c/a\u003e, \u003ca href=\"https://github.com/php/php-src/security/advisories/GHSA-v8xr-gpvj-cx9g\" target=\"_blank\" rel=\"noopener\"\u003eCVE-2025-1217\u003c/a\u003e, and \u003ca href=\"https://github.com/php/php-src/security/advisories/GHSA-wg4p-4hqh-c3g9\" target=\"_blank\" rel=\"noopener\"\u003eout-of-bounds read when using \u003ccode\u003eXML_OPTION_SKIP_TAGSTART\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ch3\u003e\u003ca href=\"https://thephp.foundation/blog/2025/04/10/php-core-security-audit-results/\" target=\"_blank\" rel=\"noopener\"\u003ePHP Core Security Audit Results\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eIn 2024, the first in a decade external security audit of the PHP core was conducted by \u003ca href=\"https://thephp.foundation/\" target=\"_blank\" rel=\"noopener\"\u003eThe PHP Foundation\u003c/a\u003e, and commissioned by the \u003ca href=\"https://www.sovereign.tech/\" target=\"_blank\" rel=\"noopener\"\u003eSovereign Tech Agency\u003c/a\u003e. The audit focused on the most critical parts of the PHP source code, given the limited budget.\u003c/p\u003e\n\u003cp\u003eThe audit uncovered 27 issues, 17 of which had security implications. All identified issues have since been fixed by the PHP development team.\u003c/p\u003e\n\u003cp\u003ePHP users are strongly encouraged to upgrade to the latest PHP versions to benefit from these security improvements.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ch3\u003e\u003ca href=\"https://thephp.foundation/blog/2025/05/15/frankenphp/\" target=\"_blank\" rel=\"noopener\"\u003eFrankenPHP Is Now Officially Supported by The PHP Foundation\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://frankenphp.dev/\" target=\"_blank\" rel=\"noopener\"\u003eFrankenPHP\u003c/a\u003e, a modern PHP application server built for performance and ease of deployment, is now officially supported by The PHP Foundation.\u003c/p\u003e\n\u003cp\u003eIt‚Äôs built in Go, powered by the Caddy web server, and offers a fresh take on running PHP outside of the traditional FPM model.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ch3 id=\"run-php-inside-node\"\u003eRun PHP Inside Node.js with \u003ca href=\"https://github.com/platformatic/php-node\" target=\"_blank\" rel=\"noopener\"\u003e@platformatic/php-node\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003ephp-node is a Rust-based, Node.js-native module that allows running PHP applications within a Node.js environment. It works by dispatching requests to a PHP instance running multi-threaded in the worker pool provided by the Node.js. This means you can enjoy the performance of Node.js while utilizing PHP‚Äôs extensive ecosystem and functionality.\u003c/p\u003e\n\u003cp\u003eHere is a hello world example:\u003cbr/\u003e\n            \u003cimg decoding=\"async\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/05/Screenshot-2025-05-28-at-10.45.57-PM.png\" alt=\"php-node\"/\u003e\n            \u003c/p\u003e\n\u003cp\u003eüëâ \u003ca href=\"https://blog.platformatic.dev/seamlessly-blend-php-with-nodejs\" target=\"_blank\" rel=\"noopener\"\u003eIntro blog post\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ch3\u003e\u003ca href=\"https://liamhammett.com/think-of-an-elephpant\" target=\"_blank\" rel=\"noopener\"\u003eThink of an Elephpant\u003c/a\u003e üêò\u003c/h3\u003e\n\u003cblockquote\u003e\u003cp\u003ePHP doesn‚Äôt need defending. It needs celebrating.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eA brilliant message and post from Liam Hammett!\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"php-core\"\u003ePHP Core\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ch3\u003e‚úÖ \u003ca href=\"https://wiki.php.net/rfc/pipe-operator-v3\" target=\"_blank\" rel=\"noopener\"\u003eRFC: Pipe operator v3\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eThe \u003ca href=\"https://wiki.php.net/rfc/pipe-operator\" target=\"_blank\" rel=\"noopener\"\u003efirst proposal\u003c/a\u003e to bring a pipe operator to PHP dates back to 2016, followed by a \u003ca href=\"https://wiki.php.net/rfc/pipe-operator-v2\" target=\"_blank\" rel=\"noopener\"\u003esecond attempt\u003c/a\u003e in 2020. Now, on the third try it‚Äôs finally happening!\u003c/p\u003e\n\u003cp\u003eStarting with PHP 8.5, you‚Äôll be able to use the \u003ccode\u003e|\u0026gt;\u003c/code\u003e operator to chain function calls in a clean, readable way:\u003c/p\u003e\n\u003cpre data-enlighter-language=\"php\" data-enlighter-linenumbers=\"false\" data-enlighter-title=\"\"\u003e$result = \u0026#34;Hello World\u0026#34;\n            |\u0026gt; htmlentities(...)\n            |\u0026gt; str_split(...)\n            |\u0026gt; fn($x) =\u0026gt; array_map(strtoupper(...), $x)\n            |\u0026gt; fn($x) =\u0026gt; array_filter($x, fn($v) =\u0026gt; $v != \u0026#39;O\u0026#39;);\n\u003c/pre\u003e\n\u003cp\u003eKudos to Larry Garfield for the persistence and effort to see this through!\u003c/p\u003e\n\u003cp\u003eCheck out Brent‚Äôs video \u003ca href=\"https://www.youtube.com/watch?v=UG_yb_WOutE\" target=\"_blank\" rel=\"noopener\"\u003eoverview of PHP 8.5‚Äôs pipe operator\u003c/a\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ch3\u003e‚úÖ \u003ca href=\"https://wiki.php.net/rfc/array_first_last\" target=\"_blank\" rel=\"noopener\"\u003eRFC: array_first() and array_last()\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003ePHP 7.3 introduced \u003ccode\u003earray_key_first()\u003c/code\u003e and \u003ccode\u003earray_key_last()\u003c/code\u003e to get the first and last keys of an array, but still no functions to get the first and last values of an array.\u003c/p\u003e\n\u003cp\u003eThanks to Niels Dossche two new functions will be added in PHP 8.5:\u003c/p\u003e\n\u003cpre data-enlighter-language=\"php\" data-enlighter-linenumbers=\"false\" data-enlighter-title=\"\"\u003earray_first([1 =\u0026gt; \u0026#39;a\u0026#39;, 0 =\u0026gt; \u0026#39;b\u0026#39;, 3 =\u0026gt; \u0026#39;c\u0026#39;, 2 =\u0026gt; \u0026#39;d\u0026#39;]); // \u0026#39;a\u0026#39;  \narray_last([1 =\u0026gt; \u0026#39;a\u0026#39;, 0 =\u0026gt; \u0026#39;b\u0026#39;, 3 =\u0026gt; \u0026#39;c\u0026#39;, 2 =\u0026gt; \u0026#39;d\u0026#39;]); // \u0026#39;d\u0026#39;  \n\u003c/pre\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ch3\u003e‚úÖ \u003ca href=\"https://wiki.php.net/rfc/marking_return_value_as_important\" target=\"_blank\" rel=\"noopener\"\u003eRFC: Marking return values as important (#[\\NoDiscard])\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003ePHP 8.5 will come with a new \u003ccode\u003e#[\\NoDiscard]\u003c/code\u003e attribute to indicate that the return value of a function or method is ‚Äúimportant‚Äù and that not doing anything with the return value is likely to be a bug.\u003c/p\u003e\n\u003cpre data-enlighter-language=\"php\" data-enlighter-linenumbers=\"false\" data-enlighter-title=\"\"\u003e#[\\NoDiscard(\u0026#34;this is important\u0026#34;)]\nfunction foo(): int {\n    return 0;\n}\n\n$results = foo(); // No warning, because the return value is consumed by the assignment\n\nfoo();// Warning: The return value of function foo() is expected to be consumed\n\u003c/pre\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ch3\u003eüì£ \u003ca href=\"https://wiki.php.net/rfc/true_async\" target=\"_blank\" rel=\"noopener\"\u003eRFC: True Async\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eEdmond Dantes proposes to create a standard for writing concurrent code in PHP, as well as a C-API interface that will allow PHP to be extended at a low level with C, Rust, C++, and other languages. This will allow modules to support non-blocking I/O operations without having to override PHP functions or duplicate code.\u003c/p\u003e\n\u003cp\u003eAs Edmond clarified on the mailing list, the plan is to simplify the current RFC as much as possible to make it easier to pass. New syntax should be discussed closer to future versions of PHP (likely 9.0).\u003c/p\u003e\n\u003cp\u003eYou can follow the development process almost live in this separate \u003ca href=\"https://github.com/true-async/\" target=\"_blank\" rel=\"noopener\"\u003egithub.com/true-async\u003c/a\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ch3\u003e\u003ca href=\"https://wiki.php.net/todo/php85\" target=\"_blank\" rel=\"noopener\"\u003ePHP 8.5 release managers announced\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eAs is tradition, PHP 8.5 will have 2 rookie release managers: \u003ca href=\"https://github.com/edorian\" target=\"_blank\" rel=\"noopener\"\u003eVolker Dusch\u003c/a\u003e and \u003ca href=\"https://github.com/DanielEScherzer\" target=\"_blank\" rel=\"noopener\"\u003eDaniel Scherzer\u003c/a\u003e. They will be assisted by veteran RM \u003ca href=\"https://github.com/adoy\" target=\"_blank\" rel=\"noopener\"\u003ePierrick Charron\u003c/a\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cp\u003eThere are a few other RFCs with mentioning that passed, are under discussion, or were declined already:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e‚úÖ \u003ca href=\"https://wiki.php.net/rfc/get-error-exception-handler\" target=\"_blank\" rel=\"noopener\"\u003eRFC: Add get_error_handler(), get_exception_handler() functions\u003c/a\u003e\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eüì£ \u003ca href=\"https://wiki.php.net/rfc/final_promotion\" target=\"_blank\" rel=\"noopener\"\u003eRFC: Final Property Promotion\u003c/a\u003e\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eüì£ \u003ca href=\"https://wiki.php.net/rfc/modern_compression\" target=\"_blank\" rel=\"noopener\"\u003eRFC: Modern Compression\u003c/a\u003e\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eüì£ \u003ca href=\"https://wiki.php.net/rfc/exception_ignore_args_default_value\" target=\"_blank\" rel=\"noopener\"\u003eRFC: Change default zend.exception_ignore_args INI setting\u003c/a\u003e\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e‚ùå \u003ca href=\"https://wiki.php.net/rfc/short-and-inner-classes\" target=\"_blank\" rel=\"noopener\"\u003eRFC: Nested Classes\u003c/a\u003e\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e‚ùå \u003ca href=\"https://wiki.php.net/rfc/never-parameters-v2\" target=\"_blank\" rel=\"noopener\"\u003eRFC: Never Parameters (v2)\u003c/a\u003e\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/ul\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/PHP-WebRTC\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003ePHP WebRTC\u003c/strong\u003e\u003c/a\u003e\n\u003cp\u003eA full implementation of the WebRTC protocol in pure PHP! No Node.js or JavaScript is required on the backend to use. You would need FFI enabled, however.\u003c/p\u003e\n\u003cp\u003eThe goal is to make it easy to build WebRTC-based apps in pure PHP ‚Äì including media servers, video conference web app, SFUs, and peer-to-peer apps.\u003c/p\u003e\n\u003cp\u003eBravo! üëè\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/phpacker/phpacker\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003ephpacker/phpacker\u003c/strong\u003e\u003c/a\u003e\n\u003cp\u003ePackage any PHP script or PHAR into a standalone, cross-platform executable.\u003c/p\u003e\n\u003cp\u003eI briefly explained how this works in my blogpost \u003ca href=\"https://pronskiy.com/blog/php-script-as-binary/\" target=\"_blank\" rel=\"noopener\"\u003eTurn Any PHP Script into a Native Single-File Binary\u003c/a\u003e. Phacker makes it really easy and builds for Mac, Linux, and Windows!\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/NativePHP\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003eNativePHP 1.0\u003c/strong\u003e\u003c/a\u003e\n\u003cp\u003eThe tool allows building desktop application with PHP and JavaScript/HTML/CSS.\u003c/p\u003e\n\u003cp\u003eThere is also a paid version for iOS and Android devices: \u003ca href=\"https://nativephp.com/mobile\" target=\"_blank\" rel=\"noopener\"\u003eNativePHP for Mobile\u003c/a\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/boson-php/boson\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003eboson-php/boson\u003c/strong\u003e\u003c/a\u003e\n\u003cp\u003eThis is another tool to build cross-platform desktop apps with PHP, JavaScript, HTML, and CSS. But instead of Electron, under the hood, it uses \u003ca href=\"https://github.com/saucer/saucer\" target=\"_blank\" rel=\"noopener\"\u003esaucer/saucer\u003c/a\u003e, a modern, cross-platform C++ webview library, which allows making apps really slim:\u003c/p\u003e\n\u003cpre data-enlighter-language=\"php\" data-enlighter-linenumbers=\"false\" data-enlighter-title=\"\"\u003e$app = new Boson\\Application();\n\n$app-\u0026gt;webview-\u0026gt;html = \u0026lt;\u0026lt;\u0026lt;\u0026#39;HTML\u0026#39;\n    \u0026lt;button onclick=\u0026#34;foo(\u0026#39;HELLO\u0026#39;);\u0026#34;\u0026gt;Hello\u0026lt;/button\u0026gt;\n    HTML;\n\n$app-\u0026gt;webview-\u0026gt;bind(\u0026#39;foo\u0026#39;, var_dump(...));\n$app-\u0026gt;run();\u003c/pre\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eNPX-like package execution tools for PHP\u003c/strong\u003e\n\u003cp\u003eThere are a few such tools available out there:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/imliam/cpx\" target=\"_blank\" rel=\"noopener\"\u003eimliam/cpx\u003c/a\u003e ‚Äì Run any command from any composer package, even if it‚Äôs not installed in your project.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/eduardocruz/phpx\" target=\"_blank\" rel=\"noopener\"\u003eeduardocruz/phpx\u003c/a\u003e ‚Äì PHPX is a NPX-like package execution tool for PHP.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI also \u003cspan\u003evibe-coded\u003c/span\u003e prototyped my own tool in Python. The difference is that it does not require users to have PHP or Composer on their machine: \u003ca href=\"https://github.com/pronskiy/pocus\" target=\"_blank\" rel=\"noopener\"\u003epronskiy/pocus\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eOriginally I wanted my friends who have \u003ccode\u003euvx\u003c/code\u003e installed to be able to use my MCP servers with no additional prerequisites. So it allows them to run any script from GitHub with one command:\u003c/p\u003e\n\u003cpre data-enlighter-language=\"php\" data-enlighter-linenumbers=\"false\" data-enlighter-title=\"\"\u003euvx pocus https://github.com/pronskiy/mcp examples/echo.php\u003c/pre\u003e\n\u003cp\u003eOr any command from an existing PHP package:\u003c/p\u003e\n\u003cpre data-enlighter-language=\"php\" data-enlighter-linenumbers=\"false\" data-enlighter-title=\"\"\u003euvx pocus phpstan/phpstan phpstan analyse ./src\u003c/pre\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/masan4444/phpup\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003emasan4444/phpup\u003c/strong\u003e\u003c/a\u003e ‚Äì Cross-Platform PHP version manager written in Rust. Seems abandoned, but maybe someone wants to pick it up?\n    \u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/php-internal/dload\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003ephp-internal/dload\u003c/strong\u003e\u003c/a\u003e ‚Äì Helps to download binaries from release assets.\n    \u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/utopia-php/vcs\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003eutopia-php/vcs\u003c/strong\u003e\u003c/a\u003e ‚Äì Lite \u0026amp; fast micro PHP vcs abstraction library that is easy to use.\n    \u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/jerowork/graphql-attribute-schema\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003ejerowork/graphql-attribute-schema\u003c/strong\u003e\u003c/a\u003e ‚Äì Easily build your GraphQL schema using PHP attributes instead of large configuration arrays.\n    \u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/mario-deluna/php-glfw\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003emario-deluna/php-glfw\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e ‚Äì A fully-featured OpenGL and GLFW extension for PHP.\u003c/strong\u003e\n\u003cp\u003eAt first I thought it was another fun project to make cool demos like these:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/medilies/php-pong\" target=\"_blank\" rel=\"noopener\"\u003emedilies/php-pong\u003c/a\u003e ‚Äì Classic Pong game programmed with pure OpenGL wrapped in OOP code.\u003cbr/\u003e\n            \u003cimg decoding=\"async\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/05/pingpong.gif\" alt=\"ping-pong\" width=\"300\"/\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/mario-deluna/php-chip8\" target=\"_blank\" rel=\"noopener\"\u003emario-deluna/php-chip8\u003c/a\u003e ‚Äì Yet another CHIP-8 emulator, but in PHP!.\u003cbr/\u003e\n            \u003cimg decoding=\"async\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/05/chhip8-php.gif\" alt=\"\" width=\"300\"/\u003e\u003c/p\u003e\n\u003cp\u003eOr even like this:\u003cbr/\u003e\n            \u003ca href=\"https://github.com/phpgl/php-craft\" target=\"_blank\" rel=\"noopener\"\u003ephpgl/php-craft\u003c/a\u003e ‚Äì Mining PHPotentials: A Minecraft-Inspired Game written in PHP.\u003cbr/\u003e\n            \u003cimg decoding=\"async\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/05/php-craft.jpg\" alt=\"\" width=\"300\"/\u003e\u003c/p\u003e\n\u003cp\u003eBut it actually has useful applications, for example: \u003ca href=\"https://station.clancats.com/creating-animated-code-snippets-with-tempest-highlighting-and-php-glfw/\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003ecreating animated code snippets with Tempest Highlight \u0026amp; PHP-GLFW\u003c/strong\u003e\u003c/a\u003e:\u003c/p\u003e\n\u003cp\u003e            \u003cimg decoding=\"async\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/05/output_shorter.gif\" alt=\"\" width=\"416\"/\u003e\n    \u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"ai\"\u003eAI\u003c/h2\u003e\n\u003cp\u003eThe ecosystem of AI tooling for PHP is growing fast! Here are just a few interesting findings.\u003c/p\u003e\n\u003ch3\u003eMCP\u003c/h3\u003e\n\u003cp\u003eIf you‚Äôre new to the topic, check out my short intro video: \u003ca href=\"https://www.youtube.com/watch?v=qPVtVulhFC4\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003eMCP ‚Äì What is that?\u003c/strong\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eI found the interface of \u003ca href=\"https://github.com/logiscapedev/mcp-sdk-php\" target=\"_blank\" rel=\"noopener\"\u003elogiscapedev/mcp-sdk-php\u003c/a\u003e a bit frustrating to work with, so I built a simple wrapper to make things easier:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/pronskiy/mcp\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003epronskiy/mcp\u003c/strong\u003e\u003c/a\u003e ‚Äì üêâ The fast, PHP way to build MCP servers.\u003c/p\u003e\n\u003cp\u003eHere‚Äôs what a minimal MCP server looks like using the wrapper:\u003c/p\u003e\n\u003cpre data-enlighter-language=\"php\" data-enlighter-linenumbers=\"false\" data-enlighter-title=\"\"\u003enew \\Pronskiy\\Mcp\\Server(name: \u0026#39;echo-server\u0026#39;)  \n-\u0026gt;tool(  \n    name: \u0026#39;echo\u0026#39; ,  \n    description \u0026#39;Echoes text\u0026#39;,  \n    fn (string $text) =\u0026gt; $text\n)-\u0026gt;run();  \n\u003c/pre\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eBut there is a much more powerful alternative:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/php-mcp/server\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003ephp-mcp/server\u003c/strong\u003e\u003c/a\u003e ‚Äì PHP implementation for the Model Context Protocol (MCP) server.\u003cbr/\u003e\n        \u003cimg decoding=\"async\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/05/mcp-server.jpeg\" alt=\"mcp server\" width=\"500\"/\u003e\n    \u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLLM Frameworks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/LLPhant/LLPhant\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003eLLPhant/LLPhant\u003c/strong\u003e\u003c/a\u003e ‚Äì A lightweight and intuitive framework with tons of ready-to-use tools. Well-documented, actively developed.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/inspector-apm/neuron-ai\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003einspector-apm/neuron-ai\u003c/strong\u003e\u003c/a\u003e ‚Äì Open source framework to create full featured AI Agents in PHP.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eUsing AI models in PHP\u003c/h3\u003e\n\u003cp\u003eThanks to an open \u003ca href=\"https://onnxruntime.ai/\" target=\"_blank\" rel=\"noopener\"\u003eONNX\u003c/a\u003e format, it is possible to run many AI models in PHP natively. These are the tools that facilitate it:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/CodeWithKyrian/transformers-php\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003eCodeWithKyrian/transformers-php\u003c/strong\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/ankane/onnxruntime-php\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003eankane/onnxruntime-php\u003c/strong\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"phpstorm\"\u003ePhpStorm\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://www.jetbrains.com/phpstorm/whatsnew/\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003ePhpStorm 2025.1\u003c/strong\u003e\u003c/a\u003e\u003cbr/\u003e\n        This release is a major update that includes improvements in PHPStan annotations, Xdebug, and WordPress support. It also includes new subscription system for JetBrains AI with AI Free tier.\u003c/p\u003e\n\u003cp\u003eAnd speaking of AI, \u003ca href=\"https://www.jetbrains.com/junie/\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003eJunie, the coding agent by JetBrains\u003c/strong\u003e\u003c/a\u003e, is now available for PhpStorm too!\u003c/p\u003e\n\u003cp\u003e        \u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/tfBS85Ksfag?si=uARUJg0qxvn-Sedx\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n    \u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://blog.jetbrains.com/phpstorm/2025/03/jetbrains-xdebug-helper/\"\u003e\u003cstrong\u003eNew JetBrains Xdebug Helper browser extension\u003c/strong\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/xepozz/crontab-intellij-plugin\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003eCron \u0026amp; Crontab Support IDE Plugin\u003c/strong\u003e\u003c/a\u003e ‚Äì Crontab syntax support: schedule periods and errors highlighting, shell command completions, human-readable schedule folding, and more.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://www.jetbrains.com/phpstorm/laravel/\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003eLaravel Idea 10 released\u003c/strong\u003e\u003c/a\u003e ‚Äì The popular plugin for PhpStorm has received a major update. It includes the Database tables and fields completion, code generation improvements, and more.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"frameworks\"\u003eFrameworks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://laravel-news.com/laravel-12\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003eLaravel 12 is Now Released\u003c/strong\u003e\u003c/a\u003e\n\u003cp\u003eThis update introduces new starter kits for React, Vue, and Livewire\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/capevace/laravel-introspect\" target=\"_blank\" rel=\"noopener\"\u003eCapevace/laravel-introspect\u003c/a\u003e ‚Äì Query your Laravel codebase like a database, with an Eloquent-like API.\n    \u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/fdomgjoni99/laravel-ai-factory\" target=\"_blank\" rel=\"noopener\"\u003efdomgjoni99/laravel-ai-factory\u003c/a\u003e ‚Äì A package for generating realistic test data using AI models.\n    \u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://tighten.com/insights/10-efficient-and-fun-ways-to-seed-your-database/\" target=\"_blank\" rel=\"noopener\"\u003e10 Efficient (and Fun) Ways to Seed Your Database\u003c/a\u003e by Nico Devs.\n    \u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://christalks.dev/post/secure-your-webhooks-in-laravel-preventing-data-spoofing-fe25a70e\" target=\"_blank\" rel=\"noopener\"\u003eSecure Your Webhooks in Laravel: Preventing Data Spoofing\u003c/a\u003e by Chris.\n    \u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://tomasvotruba.com/blog/custom-phpstan-rules-to-improve-every-symfony-project\" target=\"_blank\" rel=\"noopener\"\u003eCustom PHPStan Rules to Improve Every Symfony project\u003c/a\u003e by Tomas Votruba.\n    \u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/symfony/symfony/pull/60578\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003eSymfony 7.3.0 has been released\u003c/strong\u003e\u003c/a\u003e\n\u003cp\u003eCheck the \u003ca href=\"https://symfony.com/blog/category/living-on-the-edge/7.3\" target=\"_blank\" rel=\"noopener\"\u003eLiving on the Edge\u003c/a\u003e category on this blog to learn about the main features of this new stable release.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"misc\"\u003eMisc\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://dailyrefactor.com/php-3-to-8-the-evolution-of-a-codebase\" target=\"_blank\" rel=\"noopener\"\u003ePHP 3 to 8: The Evolution of a Codebase\u003c/a\u003e by Aleksander Kaim.\n    \u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://tomasvotruba.com/blog/create-weird-fun-phpstan-rules\" target=\"_blank\" rel=\"noopener\"\u003eCreate Weird Fun PHPStan Rules like Nobody‚Äôs Watching\u003c/a\u003e by Tomas Votruba.\n    \u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://ides.dev/notes/discovering-php-yield-keyword/\" target=\"_blank\" rel=\"noopener\"\u003eDiscovering PHP‚Äôs yield Keyword After 10 Years\u003c/a\u003e by Will.\n    \u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://derickrethans.nl/and-then-there-was-pie.html\" target=\"_blank\" rel=\"noopener\"\u003eAnd Then There Was PIE\u003c/a\u003e by Derick Rethans.\n    \u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://tideways.com/profiler/blog/combining-regular-expressions-with-named-capture-groups-to-improve-performance\" target=\"_blank\" rel=\"noopener\"\u003eCombining regular expressions with named capture groups to improve performance\u003c/a\u003e by Benjamin Eberlei.\n    \u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"conferences\"\u003eConferences\u003c/h2\u003e\n\u003cp\u003eThese PHP events are all worth a visit, and some are still accepting presentation proposals:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://lp.jetbrains.com/phpverse-2025/\" target=\"_blank\" rel=\"noopener\"\u003ePHPverse 2025\u003c/a\u003e ‚Äì June 17, Online.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://2025.kphpug.jp/\" target=\"_blank\" rel=\"noopener\"\u003ePHP Conference Kansai 2025\u003c/a\u003e ‚Äì July 18‚Äì19, Kobe, Japan.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://laracon.us/\" target=\"_blank\" rel=\"noopener\"\u003eLaracon 2025\u003c/a\u003e ‚Äì July 29‚Äì30, Denver, CO, USA.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://api-platform.com/fr/con/2025/\" target=\"_blank\" rel=\"noopener\"\u003eAPI Platform Conference 2025\u003c/a\u003e ‚Äì September 18‚Äì19, Lille, France.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://event.afup.org/\" target=\"_blank\" rel=\"noopener\"\u003eForum PHP 2025\u003c/a\u003e ‚Äì October 9‚Äì10, Disneyland Paris, France.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://phpconference.com/munich/\" target=\"_blank\" rel=\"noopener\"\u003eInternational PHP Conference 2025\u003c/a\u003e ‚Äì October 27‚Äí31, Munich, Germany.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://live.symfony.com/2025-amsterdam-con/\" target=\"_blank\" rel=\"noopener\"\u003eSymfonyCon Amsterdam 2025\u003c/a\u003e ‚Äì November 27-28. Amsterdam, Netherlands. \u003ca href=\"https://live.symfony.com/2025-amsterdam-con/cfp\" target=\"_blank\" rel=\"noopener\"\u003eCFP\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eTo find a PHP meetup happening near you, check out \u003ca href=\"https://www.php.net/cal.php?cm=05\u0026amp;cy=2024\" target=\"_blank\" rel=\"noopener\"\u003ethe calendar on php.net\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"fun\"\u003eFun\u003c/h2\u003e\n\n\u003chr/\u003e\n\u003cp\u003eIf you have any interesting or useful links to share via PHP Annotated, please leave a comment on this post or let us know on X/Twitter: \u003ca href=\"https://twitter.com/pronskiy\" target=\"_blank\" rel=\"noopener\"\u003e@pronskiy\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://info.jetbrains.com/PHP-Annotated-Subscription.html\" target=\"_blank\" rel=\"noopener\"\u003eSubscribe to PHP Annotated\u003c/a\u003e\u003c/p\u003e\n\u003chr/\u003e\n\n\u003cp\u003eIf you have any interesting or useful links to share via PHP Annotated, please leave a comment on this post or let us know \u003ca href=\"https://twitter.com/pronskiy\" target=\"_blank\" rel=\"noopener\"\u003eon X/Twitter\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003ca title=\"Complete this form and get PHP Annotated Monthly delivered fresh to your email\" href=\"https://info.jetbrains.com/PHP-Annotated-Subscription.html\" target=\"_blank\" rel=\"noopener\"\u003eSubscribe to PHP Annotated\u003c/a\u003e\u003c/p\u003e\n\n    \n                    \n                                                                                                                                                                                                                            \u003cdiv\u003e\n                                \u003cdiv\u003e\n                                                                            \u003ch4\u003eSubscribe to PHP Annotated\u003c/h4\u003e\n                                                                                                            \n                                \u003c/div\u003e\n                                \n                                \u003cp\u003e\u003cimg src=\"https://blog.jetbrains.com/wp-content/themes/jetbrains/assets/img/img-form.svg\" alt=\"image description\"/\u003e\n                                                                    \u003c/p\u003e\n                            \u003c/div\u003e\n                                                            \u003c/div\u003e\n                \u003ca href=\"#\"\u003e\u003c/a\u003e\n                \n                \n            \u003c/section\u003e\n                    \u003cdiv\u003e\n                \u003cp\u003e\n                    \u003ch2\u003eDiscover more\u003c/h2\u003e\n                \u003c/p\u003e\n                \n            \u003c/div\u003e\n                \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "14 min read",
  "publishedTime": null,
  "modifiedTime": null
}
