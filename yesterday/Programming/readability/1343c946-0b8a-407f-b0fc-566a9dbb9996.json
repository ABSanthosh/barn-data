{
  "id": "1343c946-0b8a-407f-b0fc-566a9dbb9996",
  "title": "Creating a Rust IDE with Vitaly Bragilevsky",
  "link": "https://softwareengineeringdaily.com/2024/11/21/creating-a-rust-ide-with-vitaly-bragilevsky/?utm_source=rss\u0026utm_medium=rss\u0026utm_campaign=creating-a-rust-ide-with-vitaly-bragilevsky",
  "description": "Rust is a systems programming language created by Graydon Hoare in 2006 and first released by Mozilla in 2010. It is designed for performance, safety, and concurrency, with a focus on memory safety without a garbage collector. Rust’s ownership model ensures safe memory management, making it viable for tasks that require control over system resources, The post Creating a Rust IDE with Vitaly Bragilevsky appeared first on Software Engineering Daily.",
  "author": "SEDaily",
  "published": "Thu, 21 Nov 2024 10:00:52 +0000",
  "source": "https://softwareengineeringdaily.com/category/podcast/feed",
  "categories": [
    "All Content",
    "Exclusive Content",
    "Hosts",
    "Lee Atchison",
    "Podcast",
    "JetBrains",
    "programming language",
    "Rust",
    "Rust IDE",
    "RustRover"
  ],
  "byline": "SEDaily",
  "length": 2288,
  "excerpt": "Rust is a systems programming language created by Graydon Hoare in 2006 and first released by Mozilla in 2010. It is designed for performance, safety, and concurrency, with a focus on memory safety without a garbage collector. Rust’s ownership model ensures safe memory management, making it viable for tasks that require control over system resources,",
  "siteName": "Software Engineering Daily",
  "favicon": "https://softwareengineeringdaily.com/wp-content/uploads/fbrfg/apple-touch-icon-72x72.png?v=PYYeqgEwMA",
  "text": "Rust is a systems programming language created by Graydon Hoare in 2006 and first released by Mozilla in 2010. It is designed for performance, safety, and concurrency, with a focus on memory safety without a garbage collector. Rust’s ownership model ensures safe memory management, making it viable for tasks that require control over system resources, such as embedded systems, web assembly, and game development. RustRover is a dedicated Rust IDE that was created by JetBrains to support the growing popularity of Rust. Vitaly Bragilevsky is a Developer Advocate at JetBrains, and has expertise in Rust and RustRover. He joins the podcast with Lee Atchison to talk about Rust, the Rust developer ecosystem, using an IDE to make Rust more accessible, and more. This episode is hosted by Lee Atchison. Lee Atchison is a software architect, author, and thought leader on cloud computing and application modernization. His best-selling book, Architecting for Scale (O’Reilly Media), is an essential resource for technical teams looking to maintain high availability and manage risk in their cloud environments. Sponsors Introducing Height: the only autonomous project management tool. Backlog grooming, bug triage, keeping documentation up-to-date—those aren’t why you got into this job, right? Well, Height handles all that grunt work for you. Using a first-of-its-kind AI approach, Height offloads time-consuming workflows, without you lifting a finger. It syncs your specs to scope changes, organizes your backlog, and prioritizes new bugs, escalating critical issues to the right person. Everyone on your team manages projects—tracking updates, scoping work, balancing priorities. But your success shouldn’t depend on project management. With Height, autonomous workflows handle that mundane upkeep, so your team can focus on building great products. If you’re ready to stop managing projects, it’s time for Height. Join the new era of product building—where projects manage themselves. Sign up for Height today and offload project upkeep for good. Visit height.app/SEdaily to get started.",
  "image": "https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2024/11/Creating-a-Rust-IDE-with-Vitaly-Bragilevsky.png?fit=600%2C315\u0026ssl=1",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\u003cp\u003eRust is a systems programming language created by Graydon Hoare in 2006 and first released by Mozilla in 2010. It is designed for performance, safety, and concurrency, with a focus on memory safety without a garbage collector. Rust’s ownership model ensures safe memory management, making it viable for tasks that require control over system resources, such as embedded systems, web assembly, and game development.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.jetbrains.com/rust/\"\u003eRustRover\u003c/a\u003e is a dedicated Rust IDE that was created by JetBrains to support the growing popularity of Rust. \u003ca href=\"https://twitter.com/VBragilevsky\"\u003eVitaly Bragilevsky\u003c/a\u003e is a Developer Advocate at JetBrains, and has expertise in Rust and RustRover. He joins the podcast with Lee Atchison to talk about Rust, the Rust developer ecosystem, using an IDE to make Rust more accessible, and more.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/10/lee.png\"\u003e\u003cimg data-recalc-dims=\"1\" fetchpriority=\"high\" decoding=\"async\" data-attachment-id=\"15581\" data-permalink=\"https://softwareengineeringdaily.com/2023/10/12/observability-with-eduardo-silva/lee-6/\" data-orig-file=\"https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/10/lee.png?fit=218%2C258\u0026amp;ssl=1\" data-orig-size=\"218,258\" data-comments-opened=\"0\" data-image-meta=\"{\u0026#34;aperture\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;credit\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;camera\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;caption\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;created_timestamp\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;copyright\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;focal_length\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;iso\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;shutter_speed\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;title\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;orientation\u0026#34;:\u0026#34;0\u0026#34;}\" data-image-title=\"lee\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/10/lee.png?fit=218%2C258\u0026amp;ssl=1\" data-large-file=\"https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/10/lee.png?fit=218%2C258\u0026amp;ssl=1\" src=\"https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/10/lee.png?resize=218%2C258\u0026amp;ssl=1\" alt=\"\" width=\"218\" height=\"258\"/\u003e\u003c/a\u003eThis episode is hosted by Lee Atchison. Lee Atchison is a software architect, author, and thought leader on cloud computing and application modernization. His best-selling book, \u003ca href=\"https://leeatchison.com/books/architecting-for-scale/?utm_campaign=swengdaily-ep\u0026amp;utm_source=sed\u0026amp;utm_medium=web\"\u003eArchitecting for Scale\u003c/a\u003e (O’Reilly Media), is an essential resource for technical teams looking to maintain high availability and manage risk in their cloud environments.\u003c/p\u003e\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\u003ch3\u003eSponsors\u003c/h3\u003e\n\t\t\t\t\t\t\t\t\t\t\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\u003cp\u003e\u003ca href=\"https://height.app/\" target=\"_blank\"\u003e\t\t\t\t\t\t\t\t\t\t\t\t\t\u003cimg width=\"512\" height=\"288\" src=\"https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2024/10/Height-Banner.png?fit=512%2C288\u0026amp;ssl=1\" alt=\"\" decoding=\"async\" srcset=\"https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2024/10/Height-Banner.png?w=512\u0026amp;ssl=1 512w, https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2024/10/Height-Banner.png?resize=300%2C169\u0026amp;ssl=1 300w, https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2024/10/Height-Banner.png?resize=120%2C69\u0026amp;ssl=1 120w, https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2024/10/Height-Banner.png?resize=269%2C151\u0026amp;ssl=1 269w\" sizes=\"(max-width: 512px) 100vw, 512px\" data-attachment-id=\"17169\" data-permalink=\"https://softwareengineeringdaily.com/2024/10/17/soundclouds-platform-architecture-with-matthew-drooker/height-banner/\" data-orig-file=\"https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2024/10/Height-Banner.png?fit=512%2C288\u0026amp;ssl=1\" data-orig-size=\"512,288\" data-comments-opened=\"0\" data-image-meta=\"{\u0026#34;aperture\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;credit\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;camera\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;caption\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;created_timestamp\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;copyright\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;focal_length\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;iso\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;shutter_speed\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;title\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;orientation\u0026#34;:\u0026#34;0\u0026#34;}\" data-image-title=\"Height New Banner\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2024/10/Height-Banner.png?fit=300%2C169\u0026amp;ssl=1\" data-large-file=\"https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2024/10/Height-Banner.png?fit=512%2C288\u0026amp;ssl=1\"/\u003e\t\t\t\t\t\t\t\t\t\t\t\t\t\u003c/a\u003e\t\t\t\t\t\t\t\t\t\t\t\t\u003c/p\u003e\n\t\t\t\t\t\t\t\t\t\t\t\t\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\t\t\t\t\t\u003cp\u003e\u003cspan data-sheets-root=\"1\"\u003eIntroducing Height: the only autonomous project management tool. Backlog grooming, bug triage, keeping documentation up-to-date—those aren’t why you got into this job, right? Well, Height handles all that grunt work for you.\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003eUsing a first-of-its-kind AI approach, Height offloads time-consuming workflows, without you lifting a finger. It syncs your specs to scope changes, organizes your backlog, and prioritizes new bugs, escalating critical issues to the right person.\u003c/p\u003e\n\u003cp\u003eEveryone on your team manages projects—tracking updates, scoping work, balancing priorities. But your success shouldn’t depend on project management. With Height, autonomous workflows handle that mundane upkeep, so your team can focus on building great products.\u003c/p\u003e\n\u003cp\u003eIf you’re ready to stop managing projects, it’s time for Height. Join the new era of product building—where projects manage themselves.\u003c/p\u003e\n\u003cp\u003eSign up for Height today and offload project upkeep for good. Visit \u003ca href=\"https://height.app/\" target=\"_blank\" rel=\"noopener\"\u003eheight.app/SEdaily\u003c/a\u003e to get started.\u003c/p\u003e\n\t\t\t\t\t\t\t\t\t\t\t\t\u003c/div\u003e\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\u003c/div\u003e\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": "2024-11-21T10:00:52Z",
  "modifiedTime": "2024-11-11T05:32:44Z"
}
