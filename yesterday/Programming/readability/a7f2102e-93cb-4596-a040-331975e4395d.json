{
  "id": "a7f2102e-93cb-4596-a040-331975e4395d",
  "title": "AWS Console-to-Code: Convert Console Actions to Reusable IaC",
  "link": "https://www.infoq.com/news/2024/10/aws-console-code-iac/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "AWS has announced the general availability of Console-to-Code, a service that converts actions performed in the AWS Management Console into reusable code for the AWS CLI, Cloudformation, or CDK, which developers can download. In preview since last November, Console-to-Code currently supports Amazon EC2, RDS, and VPC. By Renato Losio",
  "author": "Renato Losio",
  "published": "Sat, 26 Oct 2024 06:20:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Cloud",
    "Infrastructure as Code",
    "AWS",
    "Prototype",
    "DevOps",
    "Development",
    "news"
  ],
  "byline": "Renato Losio",
  "length": 3550,
  "excerpt": "AWS has announced the general availability of Console-to-Code, a service that converts actions performed in the AWS Management Console into reusable code for the AWS CLI, Cloudformation, or CDK, which",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s1_20241022062452/apple-touch-icon.png",
  "text": "AWS has announced the general availability of Console-to-Code, a service that converts actions performed in the AWS Management Console into reusable code for the AWS CLI, Cloudformation, or CDK, which developers can download. In preview since last November, Console-to-Code currently supports Amazon EC2, RDS, and VPC. According to the cloud provider, the service enables code generation from actions performed in the console, simplifying the transition from prototyping to production deployments. Abhishek Gupta, principal developer advocate at AWS, explains how to convert console actions to reusable code, stating: With just a few clicks, Amazon Q can generate code for you using the infrastructure-as-code (IaC) format of your choice, including AWS CloudFormation template (YAML or JSON), and AWS Cloud Development Kit (AWS CDK) (TypeScript, Python or Java). This can be used as a starting point for infrastructure automation and further customized for your production workloads. Source: AWS Blog The general availability release offers a new user experience for managing prototyping, recording, and code generation workflows, along with AWS CDK and CloudFormation code generation powered by Amazon Q machine learning models. Randall Hunt, Technologist and VP of Cloud at Caylent, comments: So, Amazon Q Console to Code came out ~7 years after Former2 (og ConsoleRecorder). Q supports CloudFormation and CDK only. Oh, and it also only supports EC2, VPC, and RDS. Former2 (7 years ago) supported many more services, was basically the work of one guy, and could output all of the above plus Terraform. Corey Quinn, chief cloud economist at The Duckbill Group, agrees: Console-to-Code is now an official version of the far more capable Former2, which has the temerity to exist without being \"AI Powered.\" Console-to-Code also supports a code preview option for Amazon EC2 and Amazon EC2 Auto Scaling groups, allowing developers to generate infrastructure code without actually creating the resources. Gupta adds: The single-click CLI code generation experience is based on the API commands that were used when actions were executed (while launching the EC2 instance). Its interesting to note that the companion screen surfaces recorded actions as you complete them in console. And thanks to the interactive UI with start and stop functionality, its easy to clearly scope actions for prototyping. While generated AWS CLI commands for infrastructure workflows are always free, there is a limit of 25 generations per month for AWS CDK and CloudFormation formats. Additional requests require an Amazon Q Developer subscription. In a popular Reddit thread, many developers noted that Azure and GCP have already offered similar features and highlighted the limited number of supported AWS services. User dmurawsky adds: After many many years of doing projects in AWS, specifically looking at using new technologies as they come out, I have found the best way to try to roll out something new is to manually set it up once using the console/clickops. (...) So in that use case, after setting up manually, being able to export the IaC is fantastic! The recorded actions table only displays actions taken during the current session within a specific browser tab; it does not retain actions from previous sessions or other tabs. Console-to-Code is now available in all AWS regions. About the Author Renato Losio",
  "image": "https://res.infoq.com/news/2024/10/aws-console-code-iac/en/headerimage/generatedHeaderImage-1729067650157.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eAWS has announced the \u003ca href=\"https://aws.amazon.com/about-aws/whats-new/2024/10/general-availability-console-to-code-generate-code/\"\u003egeneral availability of Console-to-Code\u003c/a\u003e, a service that converts actions performed in the AWS Management Console into reusable code for the AWS CLI, Cloudformation, or CDK, which developers can download. In preview since last November, Console-to-Code currently supports Amazon EC2, RDS, and VPC.\u003c/p\u003e\n\n\u003cp\u003eAccording to the cloud provider, the service enables code generation from actions performed in the console, simplifying the transition from prototyping to production deployments. \u003ca href=\"https://www.linkedin.com/in/abhirockzz/\"\u003eAbhishek Gupta\u003c/a\u003e, principal developer advocate at AWS, explains \u003ca href=\"https://aws.amazon.com/blogs/aws/convert-aws-console-actions-to-reusable-code-with-aws-console-to-code-now-generally-available/\"\u003ehow to convert console actions to reusable code\u003c/a\u003e, stating:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eWith just a few clicks, Amazon Q can generate code for you using the infrastructure-as-code (IaC) format of your choice, including AWS CloudFormation template (YAML or JSON), and AWS Cloud Development Kit (AWS CDK) (TypeScript, Python or Java). This can be used as a starting point for infrastructure automation and further customized for your production workloads.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cimg alt=\"\" data-src=\"news/2024/10/aws-console-code-iac/en/resources/1c2c-3-1-1729067217441.png\" src=\"https://imgopt.infoq.com/fit-in/3000x4000/filters:quality(85)/filters:no_upscale()/news/2024/10/aws-console-code-iac/en/resources/1c2c-3-1-1729067217441.png\" rel=\"share\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eSource: AWS Blog\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eThe general availability release offers a new user experience for managing prototyping, recording, and code generation workflows, along with AWS CDK and CloudFormation code generation powered by Amazon Q machine learning models. Randall Hunt, Technologist and VP of Cloud at Caylent, \u003ca href=\"https://www.linkedin.com/feed/update/urn:li:activity:7250385396079992832/\"\u003ecomments\u003c/a\u003e:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eSo, Amazon Q Console to Code came out ~7 years after Former2 (og ConsoleRecorder). Q supports CloudFormation and CDK only. Oh, and it also only supports EC2, VPC, and RDS. Former2 (7 years ago) supported many more services, was basically the work of one guy, and could output all of the above plus Terraform.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eCorey Quinn, chief cloud economist at The Duckbill Group, \u003ca href=\"https://www.lastweekinaws.com/newsletter/\"\u003eagrees\u003c/a\u003e:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eConsole-to-Code is now an official version of the far more capable Former2, which has the temerity to exist without being \u0026#34;AI Powered.\u0026#34;\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eConsole-to-Code also supports a code preview option for Amazon EC2 and Amazon EC2 Auto Scaling groups, allowing developers to generate infrastructure code without actually creating the resources. Gupta adds:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe single-click CLI code generation experience is based on the API commands that were used when actions were executed (while launching the EC2 instance). Its interesting to note that the companion screen surfaces recorded actions as you complete them in console. And thanks to the interactive UI with start and stop functionality, its easy to clearly scope actions for prototyping.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eWhile generated AWS CLI commands for infrastructure workflows are always free, there is a limit of 25 generations per month for AWS CDK and CloudFormation formats. Additional requests require an Amazon Q Developer subscription.\u003c/p\u003e\n\n\u003cp\u003eIn a \u003ca href=\"https://www.reddit.com/r/aws/comments/1g1kd7p/convert_aws_console_actions_to_reusable_code_with/\"\u003epopular Reddit thread\u003c/a\u003e, many developers noted that Azure and GCP have already offered similar features and highlighted the limited number of supported AWS services. User dmurawsky \u003ca href=\"https://www.reddit.com/r/aws/comments/1g1kd7p/comment/lrk5l92/?utm_source=share\u0026amp;utm_medium=web3x\u0026amp;utm_name=web3xcss\u0026amp;utm_term=1\u0026amp;utm_content=share_button\"\u003eadds\u003c/a\u003e:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAfter many many years of doing projects in AWS, specifically looking at using new technologies as they come out, I have found the best way to try to roll out something new is to manually set it up once using the console/clickops. (...) So in that use case, after setting up manually, being able to export the IaC is fantastic!\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe recorded actions table only displays actions taken during the current session within a specific browser tab; it does not retain actions from previous sessions or other tabs. Console-to-Code is now available in all AWS regions.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Renato-Losio\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eRenato Losio\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": "2024-10-26T00:00:00Z",
  "modifiedTime": null
}
