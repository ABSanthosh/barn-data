{
  "id": "272c7069-a882-4692-b9fb-7d46914529fc",
  "title": "How to use GitLab's Custom Compliance Frameworks in your DevSecOps environment",
  "link": "https://about.gitlab.com/blog/2025/04/30/how-to-use-gitlabs-custom-compliance-frameworks-in-your-devsecops",
  "description": "",
  "author": "Fernando Diaz",
  "published": "2025-04-30T00:00:00.000Z",
  "source": "https://about.gitlab.com/atom.xml",
  "categories": null,
  "byline": "Fernando Diaz",
  "length": 9978,
  "excerpt": "Explore how new frameworks, along with more than 50 out-of-the-box controls, transform regulatory requirements from burdensome checkboxes to integrated, automated workflow components.",
  "siteName": "GitLab",
  "favicon": "https://about.gitlab.com/blog/nuxt-images/ico/favicon-192x192.png?cache=2022041",
  "text": "Compliance isn't just a checkbox — it's a critical business function that affects everything from operational risk to customer trust. For development teams, balancing compliance requirements with velocity can be particularly challenging. GitLab's Custom Compliance Frameworks offer a powerful way to integrate compliance verification directly into your development workflow. In this article you'll learn what they are and how to use them for maximum efficiecy. What are GitLab Custom Compliance Frameworks? GitLab Custom Compliance Frameworks allow organizations to define, implement, and enforce compliance standards directly within their GitLab instance. This feature extends GitLab's built-in compliance capabilities by enabling teams to create customized frameworks that align with specific regulatory requirements, internal policies, or industry standards. Custom Compliance Frameworks have the following benefits: Reduce manual tracking Accelerate audit readiness Enforce compliance controls natively With this release, more than 50 out-of-the-box (OOTB) controls are provided (with more coming soon) that can be tailored to your organization's unique compliance needs, including HIPAA in healthcare, GDPR for data privacy, SOC2 for service organizations, or industry-specific regulations. Some examples of OOTB controls include: Separation of duties (e.g., at least two approvers and author approved merge request) Security scanners running (e.g., SAST running and Dependency Scanning running) Authentication/authorization (e.g., project visibility not public and AuthSSO required) Application configuration (e.g., status checks required and Terraform required) Additionally, you can configure external environmental controls using the GitLab API to check the status and details of an external environment. Creating a Custom Compliance Framework from scratch Now that we understand the value, let's explore how to implement Custom Compliance Frameworks in your GitLab environment. We will use this demo application and you can follow along in this video. Note: A GitLab Ultimate subscription is required. Step 1: Define your compliance requirements Before building your custom framework, you need to clearly define your compliance requirements: Identify applicable regulations: Determine which regulations and standards apply to your organization (e.g., GDPR, PCI DSS, and HIPAA). Map requirements to controls: Break down each regulation into specific, actionable controls. Prioritize requirements: Focus on high-risk areas and requirements with the greatest impact. Step 2: Create your Custom Compliance Framework To create a custom compliance framework in GitLab: Navigate to your GitLab group's Secure \u003e Compliance Center section. Press the New framework button. Select Create blank framework. Provide a name, description, and color for your framework. Add a requirement to the framework: a. Scroll down to the Requirements tab. b. Press the New requirement button. c. Provide a name and description. d. Under the Controls section, select Choose a GitLab control. e. Select a control from the list (e.g., at least two approvals, SAST running). f. Press the Create requirement button. Press the Create framework button. The framework will be created as specified and will now be available to add to projects. Additionally, compliance frameworks can be imported using a JSON with the appropriate schema. Step 3: Apply the framework to projects Once your framework is created: From the Compliance Center, select the Projects tab. Use the search bar to Search or Filter results. Select the project(s) you wish to apply your framework to. Press the Choose one bulk action button. Select Apply frameworks to selected projects. Press the Select frameworks button. Select your framework(s) from the list. Press the Apply button. The framework will now be applied to the project, making its requirements visible and trackable. Step 4: Monitor and report on compliance With your framework in place, you can now: Use the Compliance Center to track compliance status across projects including details and suggested fixes for failed controls. Generate compliance reports for audits and stakeholder reviews. Set up compliance alerts to notify stakeholders of potential compliance issues. Review audit events to overview action taken on compliance settings. Real-world example: Implement a SOC2 compliance framework System and Organization Controls 2, better known as SOC2, is a rigorous auditing standard developed by the American Institute of Certified Public Accountants that assesses a service organization's controls related to security, availability, processing integrity, confidentiality, and privacy. You can read my Guide to fulfilling SOC 2 security requirements with GitLab to learn more. Now, let's review a practical example of using a Custom Compliance Framework to verify SOC2 security compliance, which requires: implementation of controls to protect against unauthorized access establishment of procedures for identifying and mitigating risks setting up systems for detecting and addressing security incidents Disclaimer: This is only an example showcasing some of the controls possible for adhering to SOC2. Be sure to consult with your security/compliance team before moving any implementation to production. A Custom Compliance Framework for SOC2 will look as follows using some GitLab OOTB controls: Name: SOC2 Security Requirements Description: Adds the security requirements for SOC2 framework compliance Requirements: Implement controls to protect against unauthorized access Auth SSO enabled CI/CD job token scope enabled Require MFA at org level Establish procedures for identifying and mitigating risks At least two approvals Author approved merge request Committers approved merge request Default branch protected Setting up systems for detecting and addressing security incidents Dependency Scanning running SAST running DAST running When applied to your project(s), this framework allows you to oversee if/and when they fall out of compliance and what can be done to bring them back into compliance. Note that you can create and apply multiple compliance frameworks to a project(s). For example, you can have one for SOC2 process integrity requirements. Implement security policies to ensure compliance requirements are met Although not required, security policies can be applied to projects containing a Custom Compliance Framework. This allows you to assure that certain compliance criteria will be enforced via security policies. For example, you can force security scanners to run on projects that contain a Custom Compliance Framework requiring security scanning. GitLab provides various different security policies: Scan execution policy: Enforces security scans, either as part of the pipeline or on a specified schedule. Merge request approval policy: Enforces project-level settings and approval rules based on scan results. Pipeline execution policy: Enforces CI/CD jobs as part of project pipelines. Vulnerability management policy: Automatically resolves vulnerabilities that are no longer detected in the default branch. Let’s go ahead and force a SAST scanner to run in order to automatically adhere to any requirements that require SAST scanning. To create a security policy and apply it to a project with a particular framework: Navigate to a project that has a Custom Compliance Framework requiring SAST scanning. In the sidebar, select Secure \u003e Policies. Press the New policy button. Under Scan execution policy, press the Select policy button. Fill in the Name and Description. Under Actions, select SAST as the scan to run. Under Conditions, select the pipeline to be triggered when a pipeline runs for all branches. Press the Configure with a merge request button. An MR is now created in a separate project containing all the security policies scoped to this project. Press the Merge button. Now SAST will run for every branch, assuring you are compliant in that area. Be sure to review all the different types of security policies and see how they can suit your requirements. 5 best practices to follow To maximize the value of Custom Compliance Frameworks: Start small: Begin with one critical regulation or standard before expanding. Involve key stakeholders: Include compliance, security, and development teams in framework creation. Automate where possible: Use GitLab CI/CD to automate compliance checks. Document thoroughly: Maintain clear documentation of how your framework maps to regulatory requirements. Review regularly: Update your frameworks as regulations evolve or new requirements emerge. Get started today GitLab Custom Compliance Frameworks represent a significant advancement in DevSecOps by bringing compliance directly into the development workflow. By implementing custom frameworks, organizations can reduce compliance overhead, improve risk management, and accelerate development cycles while maintaining robust compliance with regulatory requirements. The ability to define and enforce Custom Compliance Frameworks gives teams the flexibility they need to address their specific regulatory landscape while providing the structure necessary to ensure consistent compliance practices across the organization. As regulatory requirements continue to grow in complexity, tools like GitLab Custom Compliance Frameworks will become increasingly essential for organizations looking to balance compliance requirements with development velocity in a sustainable way. To try Custom Compliance Frameworks today, sign up for your free, 60-day trial of GitLab Ultimate. Learn more Visit these resources to learn more about Custom Compliance Frameworks and how they can benefit your organization: Custom Compliance Frameworks documentation Custom Compliance Frameworks epic Security Policies documentation GitLab Security and Compliance solutions",
  "image": "https://images.ctfassets.net/r9o86ar0p03f/3LZkiDjHLjhqEkvOvBsVKp/865f3b30b23c6b0be52fe3303de0266e/blog-image-template-1800x945__4_.png?fm=webp\u0026w=820\u0026h=500",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv data-v-37f1022b=\"\" data-v-53094866=\"\" data-v-74bd29c6=\"\"\u003e\u003cp\u003eCompliance isn\u0026#39;t just a checkbox — it\u0026#39;s a critical business function that affects everything from operational risk to customer trust. For development teams, balancing compliance requirements with velocity can be particularly challenging. GitLab\u0026#39;s \u003ca href=\"https://about.gitlab.com/blog/2025/04/17/introducing-custom-compliance-frameworks-in-gitlab/\"\u003eCustom Compliance Frameworks\u003c/a\u003e offer a powerful way to integrate compliance verification directly into your development workflow. In this article you\u0026#39;ll learn what they are and how to use them for maximum efficiecy.\u003c/p\u003e\n\u003ch2 id=\"what-are-gitlab-custom-compliance-frameworks%3F\" tabindex=\"-1\"\u003eWhat are GitLab Custom Compliance Frameworks? \u003ca href=\"#what-are-gitlab-custom-compliance-frameworks%3F\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eGitLab Custom Compliance Frameworks allow organizations to define, implement, and enforce compliance standards directly within their GitLab instance. This feature extends GitLab\u0026#39;s built-in compliance capabilities by enabling teams to create customized frameworks that align with specific regulatory requirements, internal policies, or industry standards.\u003c/p\u003e\n\u003cp\u003eCustom Compliance Frameworks have the following benefits:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eReduce manual tracking\u003c/li\u003e\n\u003cli\u003eAccelerate audit readiness\u003c/li\u003e\n\u003cli\u003eEnforce compliance controls natively\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/10S0pQJh4K93AJ2zBmGBKT/747ca1dcb0a2fe0fe591c34b45f689c0/image3.png\" alt=\"Compliance center screenshot with frameworks listed\"/\u003e\u003c/p\u003e\n\u003cp\u003eWith this release, more than 50 out-of-the-box (OOTB) controls are provided (with more coming soon) that can be tailored to your organization\u0026#39;s unique compliance needs, including HIPAA in healthcare, GDPR for data privacy, SOC2 for service organizations, or industry-specific regulations. Some examples of OOTB controls include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eSeparation of duties (e.g., at least two approvers and author approved merge request)\u003c/li\u003e\n\u003cli\u003eSecurity scanners running (e.g., \u003ca href=\"https://docs.gitlab.com/user/application_security/sast/\"\u003eSAST\u003c/a\u003e running and \u003ca href=\"https://docs.gitlab.com/user/application_security/dependency_scanning/\"\u003eDependency Scanning\u003c/a\u003e running)\u003c/li\u003e\n\u003cli\u003eAuthentication/authorization (e.g., project visibility not public and AuthSSO required)\u003c/li\u003e\n\u003cli\u003eApplication configuration (e.g., status checks required and Terraform required)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAdditionally, you can configure external environmental controls using the GitLab API to check the status and details of an external environment.\u003c/p\u003e\n\u003ch2 id=\"creating-a-custom-compliance-framework-from-scratch\" tabindex=\"-1\"\u003eCreating a Custom Compliance Framework from scratch \u003ca href=\"#creating-a-custom-compliance-framework-from-scratch\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eNow that we understand the value, let\u0026#39;s explore how to implement Custom Compliance Frameworks in your GitLab environment. We will use this demo application and you can follow along in this video.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e A GitLab Ultimate subscription is required.\u003c/p\u003e\n\n\n\u003cfigure\u003e\n  \u003ciframe src=\"https://www.youtube.com/embed/bSwwv5XeMdQ?si=unDwCltF4vTHT4mB\" title=\"Adhering to compliance requirements with built-in compliance controls\n\" frameborder=\"0\" allowfullscreen=\"\"\u003e \u003c/iframe\u003e\n\u003c/figure\u003e\n\n\u003cp\u003e\u003cstrong\u003eStep 1: Define your compliance requirements\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBefore building your custom framework, you need to clearly define your compliance requirements:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eIdentify applicable regulations:\u003c/strong\u003e Determine which regulations and standards apply to your organization (e.g., GDPR, PCI DSS, and HIPAA).\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eMap requirements to controls:\u003c/strong\u003e Break down each regulation into specific, actionable controls.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePrioritize requirements:\u003c/strong\u003e Focus on high-risk areas and requirements with the greatest impact.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cstrong\u003eStep 2: Create your Custom Compliance Framework\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eTo create a custom compliance framework in GitLab:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eNavigate to your GitLab group\u0026#39;s \u003cstrong\u003eSecure \u0026gt; Compliance Center\u003c/strong\u003e section.\u003c/li\u003e\n\u003cli\u003ePress the \u003cstrong\u003eNew framework\u003c/strong\u003e button.\u003c/li\u003e\n\u003cli\u003eSelect \u003cstrong\u003eCreate blank framework\u003c/strong\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/7fOKlR5FDXrhtpGCECdASx/dbdb473a1db3dac1556904743c967fb3/image7.png\" alt=\"Create a custom compliance framework screen\"/\u003e\u003c/p\u003e\n\u003col start=\"4\"\u003e\n\u003cli\u003eProvide a name, description, and color for your framework.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/5jO6IvKOV1t4aTIXayFxHc/1db0bdf52ffdb9ebaa063e86745cd84e/image6.png\" alt=\"New compliance framework screen\"/\u003e\u003c/p\u003e\n\u003col start=\"5\"\u003e\n\u003cli\u003e\n\u003cp\u003eAdd a requirement to the framework:\u003cbr/\u003e\na. Scroll down to the \u003cstrong\u003eRequirements\u003c/strong\u003e tab.\u003c/p\u003e\n\u003cp\u003eb. Press the \u003cstrong\u003eNew requirement\u003c/strong\u003e button.\u003c/p\u003e\n\u003cp\u003ec. Provide a name and description.\u003cbr/\u003e\nd. Under the \u003cstrong\u003eControls\u003c/strong\u003e section, select \u003cstrong\u003eChoose a GitLab control\u003c/strong\u003e.\u003cbr/\u003e\ne. Select a control from the list (e.g., at least two approvals, SAST running).\u003cbr/\u003e\nf. Press the \u003cstrong\u003eCreate requirement\u003c/strong\u003e button.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/7qHMBVfIF3YGxichlTbqmT/740ae34eb227c19cbeb35cd5667e31f7/image2.png\" alt=\"Create new requirement button\"/\u003e\u003c/p\u003e\n\u003col start=\"6\"\u003e\n\u003cli\u003ePress the \u003cstrong\u003eCreate framework\u003c/strong\u003e button.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThe framework will be created as specified and will now be available to add to projects. Additionally, compliance frameworks can be \u003ca href=\"http://TODO\"\u003eimported\u003c/a\u003e using a JSON with the appropriate schema.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eStep 3: Apply the framework to projects\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eOnce your framework is created:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eFrom the Compliance Center, select the \u003cstrong\u003eProjects\u003c/strong\u003e tab.\u003c/li\u003e\n\u003cli\u003eUse the search bar to \u003cstrong\u003eSearch\u003c/strong\u003e or \u003cstrong\u003eFilter\u003c/strong\u003e results.\u003c/li\u003e\n\u003cli\u003eSelect the project(s) you wish to apply your framework to.\u003c/li\u003e\n\u003cli\u003ePress the \u003cstrong\u003eChoose one bulk action\u003c/strong\u003e button.\u003c/li\u003e\n\u003cli\u003eSelect \u003cstrong\u003eApply frameworks to selected projects\u003c/strong\u003e.\u003c/li\u003e\n\u003cli\u003ePress the \u003cstrong\u003eSelect frameworks\u003c/strong\u003e button.\u003c/li\u003e\n\u003cli\u003eSelect your framework(s) from the list.\u003c/li\u003e\n\u003cli\u003ePress the \u003cstrong\u003eApply\u003c/strong\u003e button.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/3jwRDs5pHn3bXG00gI6gnp/e61c2701def8c7131408969fe0042880/image5.png\" alt=\"Compliance center screen with SOC 2 framework dropdown\"/\u003e\u003c/p\u003e\n\u003cp\u003eThe framework will now be applied to the project, making its requirements visible and trackable.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eStep 4: Monitor and report on compliance\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eWith your framework in place, you can now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eUse the \u003cstrong\u003eCompliance Center\u003c/strong\u003e to track compliance status across projects including details and suggested fixes for failed controls.\u003c/li\u003e\n\u003cli\u003eGenerate \u003cstrong\u003ecompliance reports\u003c/strong\u003e for audits and stakeholder reviews.\u003c/li\u003e\n\u003cli\u003eSet up \u003cstrong\u003ecompliance alerts\u003c/strong\u003e to notify stakeholders of potential compliance issues.\u003c/li\u003e\n\u003cli\u003eReview \u003cstrong\u003eaudit events\u003c/strong\u003e to overview action taken on compliance settings.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/7CqvbWoSKoBkICeuQLB5Te/2dc93c52886cde0e927c4d5674780b21/image4.png\" alt=\"Compliance Center screen showing SOC2 test framework\"/\u003e\u003c/p\u003e\n\u003ch2 id=\"real-world-example-implement-a-soc2-compliance-framework\" tabindex=\"-1\"\u003eReal-world example: Implement a SOC2 compliance framework \u003ca href=\"#real-world-example-implement-a-soc2-compliance-framework\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eSystem and Organization Controls 2, better known as SOC2, is a rigorous auditing standard developed by the American Institute of Certified Public Accountants that assesses a service organization\u0026#39;s controls related to security, availability, processing integrity, confidentiality, and privacy. You can read my \u003ca href=\"https://about.gitlab.com/blog/2025/01/22/guide-to-fulfilling-soc-2-security-requirements-with-gitlab/\"\u003eGuide to fulfilling SOC 2 security requirements with GitLab\u003c/a\u003e to learn more.\u003c/p\u003e\n\u003cp\u003eNow, let\u0026#39;s review a practical example of using a Custom Compliance Framework to verify SOC2 security compliance, which requires:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eimplementation of controls to protect against unauthorized access\u003c/li\u003e\n\u003cli\u003eestablishment of procedures for identifying and mitigating risks\u003c/li\u003e\n\u003cli\u003esetting up systems for detecting and addressing security incidents\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer:\u003c/strong\u003e This is only an example showcasing some of the controls possible for adhering to SOC2. Be sure to consult with your security/compliance team before moving any implementation to production.\u003c/p\u003e\n\u003cp\u003eA Custom Compliance Framework for SOC2 will look as follows using some GitLab OOTB controls:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eName:\u003c/strong\u003e SOC2 Security Requirements\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDescription:\u003c/strong\u003e Adds the security requirements for SOC2 framework compliance\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eRequirements:\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eImplement controls to protect against unauthorized access\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003eAuth SSO enabled\u003c/li\u003e\n\u003cli\u003eCI/CD job token scope enabled\u003c/li\u003e\n\u003cli\u003eRequire MFA at org level\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eEstablish procedures for identifying and mitigating risks\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003eAt least two approvals\u003c/li\u003e\n\u003cli\u003eAuthor approved merge request\u003c/li\u003e\n\u003cli\u003eCommitters approved merge request\u003c/li\u003e\n\u003cli\u003eDefault branch protected\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSetting up systems for detecting and addressing security incidents\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003eDependency Scanning running\u003c/li\u003e\n\u003cli\u003eSAST running\u003c/li\u003e\n\u003cli\u003eDAST running\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWhen applied to your project(s), this framework allows you to oversee if/and when they fall out of compliance and what can be done to bring them back into compliance. Note that you can create and apply multiple compliance frameworks to a project(s). For example, you can have one for SOC2 process integrity requirements.\u003c/p\u003e\n\u003ch2 id=\"implement-security-policies-to-ensure-compliance-requirements-are-met\" tabindex=\"-1\"\u003eImplement security policies to ensure compliance requirements are met \u003ca href=\"#implement-security-policies-to-ensure-compliance-requirements-are-met\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eAlthough not required, security policies can be applied to projects containing a Custom Compliance Framework. This allows you to assure that certain compliance criteria will be enforced via security policies. For example, you can force security scanners to run on projects that contain a Custom Compliance Framework requiring security scanning.\u003c/p\u003e\n\u003cp\u003eGitLab provides various different security policies:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.gitlab.com/user/application_security/policies/scan_execution_policies/\"\u003eScan execution policy\u003c/a\u003e: Enforces security scans, either as part of the pipeline or on a specified schedule.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.gitlab.com/user/application_security/policies/merge_request_approval_policies/\"\u003eMerge request approval policy\u003c/a\u003e: Enforces project-level settings and approval rules based on scan results.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.gitlab.com/user/application_security/policies/pipeline_execution_policies/\"\u003ePipeline execution policy\u003c/a\u003e: Enforces CI/CD jobs as part of project pipelines.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.gitlab.com/user/application_security/policies/vulnerability_management_policy/\"\u003eVulnerability management policy\u003c/a\u003e: Automatically resolves vulnerabilities that are no longer detected in the default branch.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eLet’s go ahead and force a SAST scanner to run in order to automatically adhere to any requirements that require SAST scanning. To create a security policy and apply it to a project with a particular framework:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eNavigate to a project that has a Custom Compliance Framework requiring \u003cstrong\u003eSAST scanning\u003c/strong\u003e.\u003c/li\u003e\n\u003cli\u003eIn the sidebar, select \u003cstrong\u003eSecure \u0026gt; Policies\u003c/strong\u003e.\u003c/li\u003e\n\u003cli\u003ePress the \u003cstrong\u003eNew policy\u003c/strong\u003e button.\u003c/li\u003e\n\u003cli\u003eUnder \u003cstrong\u003eScan execution policy\u003c/strong\u003e, press the \u003cstrong\u003eSelect policy\u003c/strong\u003e button.\u003c/li\u003e\n\u003cli\u003eFill in the \u003cstrong\u003eName\u003c/strong\u003e and \u003cstrong\u003eDescription\u003c/strong\u003e.\u003c/li\u003e\n\u003cli\u003eUnder \u003cstrong\u003eActions\u003c/strong\u003e, select \u003cstrong\u003eSAST\u003c/strong\u003e as the scan to run.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/74d3G21BB1pb2FN80c8iAA/b923f2a6553de21f10f0e05733c5bca8/image8.png\" alt=\"Actions screen\"/\u003e\u003c/p\u003e\n\u003col start=\"7\"\u003e\n\u003cli\u003eUnder \u003cstrong\u003eConditions\u003c/strong\u003e, select the pipeline to be triggered when a pipeline runs for all branches.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/5O5ig8QKe9iRA6ILQpV9Qy/beda5ee1b50ca562e7eb73080671bf12/image1.png\" alt=\"Conditions screen\"/\u003e\u003c/p\u003e\n\u003col start=\"8\"\u003e\n\u003cli\u003ePress the \u003cstrong\u003eConfigure with a merge request\u003c/strong\u003e button.\u003c/li\u003e\n\u003cli\u003eAn MR is now created in a separate project containing all the security policies scoped to this project.\u003c/li\u003e\n\u003cli\u003ePress the \u003cstrong\u003eMerge\u003c/strong\u003e button.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eNow SAST will run for every branch, assuring you are compliant in that area. Be sure to review all the different types of security policies and see how they can suit your requirements.\u003c/p\u003e\n\u003ch2 id=\"5-best-practices-to-follow\" tabindex=\"-1\"\u003e5 best practices to follow \u003ca href=\"#5-best-practices-to-follow\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eTo maximize the value of Custom Compliance Frameworks:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eStart small:\u003c/strong\u003e Begin with one critical regulation or standard before expanding.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eInvolve key stakeholders:\u003c/strong\u003e Include compliance, security, and development teams in framework creation.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eAutomate where possible:\u003c/strong\u003e Use GitLab CI/CD to automate compliance checks.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDocument thoroughly:\u003c/strong\u003e Maintain clear documentation of how your framework maps to regulatory requirements.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eReview regularly:\u003c/strong\u003e Update your frameworks as regulations evolve or new requirements emerge.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"get-started-today\" tabindex=\"-1\"\u003eGet started today \u003ca href=\"#get-started-today\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eGitLab Custom Compliance Frameworks represent a significant advancement in DevSecOps by bringing compliance directly into the development workflow. By implementing custom frameworks, organizations can reduce compliance overhead, improve risk management, and accelerate development cycles while maintaining robust compliance with regulatory requirements.\u003c/p\u003e\n\u003cp\u003eThe ability to define and enforce Custom Compliance Frameworks gives teams the flexibility they need to address their specific regulatory landscape while providing the structure necessary to ensure consistent compliance practices across the organization.\u003c/p\u003e\n\u003cp\u003eAs regulatory requirements continue to grow in complexity, tools like GitLab Custom Compliance Frameworks will become increasingly essential for organizations looking to balance compliance requirements with development velocity in a sustainable way.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eTo try Custom Compliance Frameworks today, sign up for your \u003ca href=\"https://about.gitlab.com/free-trial/\"\u003efree, 60-day trial of GitLab Ultimate\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"learn-more\" tabindex=\"-1\"\u003eLearn more \u003ca href=\"#learn-more\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eVisit these resources to learn more about Custom Compliance Frameworks and how they can benefit your organization:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.gitlab.com/user/compliance/compliance_center/compliance_status_report/\"\u003eCustom Compliance Frameworks documentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://gitlab.com/groups/gitlab-org/-/epics/13295\"\u003eCustom Compliance Frameworks epic\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.gitlab.com/user/application_security/policies/\"\u003eSecurity Policies documentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://about.gitlab.com/solutions/security-compliance/\"\u003eGitLab Security and Compliance solutions\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "11 min read",
  "publishedTime": "2025-04-30T00:00:00Z",
  "modifiedTime": null
}
