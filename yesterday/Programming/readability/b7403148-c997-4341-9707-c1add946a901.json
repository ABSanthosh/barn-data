{
  "id": "b7403148-c997-4341-9707-c1add946a901",
  "title": "Android VPAT journey",
  "link": "https://slack.engineering/android-vpat-journey/",
  "description": "Background A Voluntary Product Accessibility Template (VPAT) is a document that outlines how well a product aligns with accessibility (a11y) standards. Its primary purpose is to inform customers about a product’s a11y features, enabling them to make informed decisions before purchasing software. At Slack, we conducted a VPAT by a third party a11y vendor in… The post Android VPAT journey appeared first on Engineering at Slack.",
  "author": "Hye Jung Choi",
  "published": "Tue, 27 May 2025 20:42:39 +0000",
  "source": "https://slack.engineering/feed",
  "categories": [
    "Uncategorized",
    "a11y",
    "accessibility",
    "android",
    "empathy",
    "ios",
    "ui"
  ],
  "byline": "",
  "length": 11636,
  "excerpt": "Background A Voluntary Product Accessibility Template (VPAT) is a document that outlines how well a product aligns with accessibility (a11y) standards. Its primary purpose is to inform customers about a product’s a11y features, enabling them to make informed decisions before purchasing software. At Slack, we conducted a VPAT by a third party a11y vendor in…",
  "siteName": "Engineering at Slack",
  "favicon": "https://slack.engineering/wp-content/uploads/sites/7/2020/05/cropped-octothrope-1.png?w=192",
  "text": "Background A Voluntary Product Accessibility Template (VPAT) is a document that outlines how well a product aligns with accessibility (a11y) standards. Its primary purpose is to inform customers about a product’s a11y features, enabling them to make informed decisions before purchasing software. At Slack, we conducted a VPAT by a third party a11y vendor in 2024 following our significant UI change (IA4). During this VPAT process, we identified a total of 542 a11y issues, with Android having 135, iOS having 163, and desktop having 244 issues. Of the 135 issues identified in Android, we immediately assigned the obvious shovel-ready issues, such as those with color contrast and missing image labels, to the responsible teams for resolution. To address remaining Android issues, we conducted a comprehensive triage process. In this document, we take a look at the major recurring themes of Android accessibility issues and share resolution strategies and lessons learned in the hopes of preventing similar mistakes in the future. Identified themes [Note: ✅ for resolved and ❌ for not-resolved.] ✅ P1: Error messages are inaccessible  ✅ P2: Headings are not identified ✅ P2: Missing a11y label on EditField ✅ P2: Incorrect number of items in list ✅ P2: Drag and drop in the workspace switcher is inaccessible ✅ P2: Strikethrough information not conveyed to screen reader users ✅ P3: Errors indicated by color alone ❌ P3: Keyboard Navigation and Focus Keyboard navigability can help customers with motor and visual impairments use Slack on Android. It’s more commonly used on larger form factors (e.g. tablets). Despite receiving numerous VPAT tickets (45) related to the keyboard navigation, Slack Android currently does not support the large form factor. As a result, we have decided to temporarily deprioritize these issues. Issue resolution P1: Error messages are inaccessible. Report If the user enters an invalid input to an edit field and presses “Next” (or Submit), an error message is displayed, but the error is not communicated to users using screen readers. TalkBack should announce that it is in an error state when it receives focus, along with the error message so that users understand why it’s in error. Resolution On Android, errors can be displayed to users in two primary ways: (1) Immediately below the editing field. (2) Via the SK error banner. In both cases, TalkBack did not announce errors, so users must swipe through the screen to determine what occurred. For case (1), we modified OutlinedTextField so that the error is announced immediately below the editing field. For case (2), SKBanner for the error type was updated so that when an error occurs, the error is announced to screen reader users. The videos below illustrate the changes before and after using TalkBack for case (2). P1: Heading is not identified. Report The heading lacks clear semantic information, making it difficult for screen reader users to quickly grasp the page’s structure and navigate efficiently. Defining headings enables assistive technology to convey the hierarchical organization of the content, enhancing accessibility and providing an alternative navigation method. Resolution We identified and fixed issues with missing headings inside lists (such as in the Preferences page). The vendor also suggested that titles in the top app bar should also be a heading, but we found that this pattern is not consistent with Android standards after testing other apps. Therefore, we closed those tickets. P2: Missing a11y label on EditField Report Some edit fields do not have permanent labels. It is labeled using placeholder text that is removed when the user enters text. Some users with cognitive difficulties will forget the purpose of the edit field without a permanently visible label. Resolution During our recent bug fixes, we encountered a few tricky cases that required collaboration with our design team and screen reader users. Specifically, we focused on our main search field and message input area (AMI). For AMI, space constraints prevented us from implementing an optimal solution. However, for the search field, we opted for a simple yet impactful change by adding an explicit search icon. This minor modification helps users easily identify the purpose of the edit field, significantly enhancing their overall experience. Before After  P2: Incorrect number of items in list Report When TalkBack users have Always speak number of list items setting enabled and navigate through a list, TalkBack announces an incorrect number of items. Resolution Our vintage Slack Kit (SK) Bottom sheet was the primary source of the issue. SK divider, although purely decorative, was considered an item within a list. For example, if the bottom sheet had 7 row items, including 2 divider items, TalkBack would announce “7 items in a list” instead of the intended “5 items in a list”. To resolve this, we introduced a new SKListAccessibilityDelegate for SKListAdapter, overwriting the a11y CollectionInfo with the correct number of items. P2: Drag and drop in the workspace switcher is inaccessible. Report Workspaces in the workspace switcher can be rearranged, but it requires the user to select a workspace and drag it to the new location. People who lack the dexterity required to perform this action may have difficulties completing the task, or may not be able to complete the task at all. Resolution In discussions with the design team, we decided to implement an Edit mode in the workspace switcher. When a user enters Edit mode, a six-dot drag handle is displayed for each workspace row so users know that each workspace row has a drag-and-drop capability. Additionally, we introduced custom actions (Move before and after) for TalkBack users so users can move each row item from the TalkBack context menu by three-finger tap on a row item or “L” or “r” drawing gestures. Before After TalkBack custom actions to move a workspace up and down by one position. P2: Strikethrough information not conveyed to screen reader users Report Users have the option to format text as strikethrough, but the strikethrough information is not conveyed to screen reader users. It is visually evident that the text has strikethrough, but it is read as normal text for screen reader users. Resolution During our conversation, we made a decision based on feedback from a blind colleague and agreed not to fix the strikethrough format. Most screen readers don’t interpret this format, making it verbose and potentially confusing for screen reader users. They may interpret this announcement as part of the message itself. As a general best practice, it’s recommended to avoid strikethrough format for accessibility reasons. Additionally, some sighted users may find it challenging to read. P3: Errors indicated by color alone Report If the user enters an invalid input to an edit field, an error message is displayed below the edit field. The only indication it is an error is that it is written with red text. To users unable to perceive red text, the error text is just another message on the screen and not necessarily an error. Resolution We recently updated the design for displaying errors in edit fields, but there seems to be some inconsistency in its implementation. To address this, we conducted an audit of our usage and updated several screens accordingly. While it’s a relatively minor change, it improves the intuitiveness of understanding error messages. Before After Conclusion Through the process of triaging and addressing VPAT issues, we have gained valuable insights. One crucial lesson learned is the importance of immediately announcing errors to screen reader users. This eliminates the need for them to navigate through screens to understand the outcome of their actions. We discovered that seemingly minor UI changes, such as adding visual icons to text, can have a significant impact on our users’ experience. Furthermore, we recognized the need to be more diligent in adding TalkBack custom actions for gestures that may not be easily discoverable, like drag-and-drop or swipe-to-dismiss. Collaborating with our a11y-minded design team greatly facilitated the decision-making process and issue resolution. Although not all Web Content Accessibility Guidelines (WCAG) standards can be directly applied to Android, the industry has long endeavored to establish platform-specific guidelines for mobile native apps. However, significant progress has yet to be made. Our VPAT analysis revealed that certain accessibility issues are not applicable to Android’s native patterns. To gain a deeper understanding, we dedicated time to testing native Google apps and discussing our decisions regarding the applicability of WCAG standards to Android. While the timing of our next VPAT assessment is yet to be determined, we are committed to avoiding the repetition of accessibility mistakes in the future. Hopefully, readers have gained valuable insights from this article. References: WCAG mapping WCAG standard Issue Description 4.1.2 Name, Role, Value (Level A) Error messages are inaccessible. If the user enters an invalid input to an edit field and presses “Next” (or Submit), an error message is displayed, but the error is not communicated to users using screen readers. TalkBack should announce that it is in an error state when it receives focus, along with the error message so that users understand why it’s in error. 1.3.1 Info and Relationships (Level A) Heading is not identified. The heading lacks clear semantic information, making it difficult for screen reader users to quickly grasp the page’s structure and navigate efficiently. Defining headings enables assistive technology to convey the hierarchical organization of the content, enhancing accessibility and providing an alternative navigation method. 4.1.2 Name, Role, Value (Level A) Missing a11y label on EditField Some edit fields do not have permanent labels. It is labeled using placeholder text that is removed when the user enters text. Some users with cognitive difficulties will forget the purpose of the edit field without a permanently visible label. 4.1.2 Name, Role, Value (Level A) Incorrect number of items in list When TalkBack users have Always speak number of list items setting enabled and navigate through a list, TalkBack announces an incorrect number of items. 2.5.7 Dragging Movements (Level AA) Drag and drop in the workspace switcher is inaccessible. Workspaces in the workspace switcher can be rearranged, but it requires the user to select a workspace and drag it to the new location. People who lack the dexterity required to perform this action may have difficulties completing the task, or may not be able to complete the task at all. 1.3.1 Info and Relationships (Level A) Strikethrough information not conveyed to screen reader users Users have the option to format text as strikethrough, but the strikethrough information is not conveyed to screen reader users. It is visually evident that the text has strikethrough, but it is read as normal text for screen reader users. 1.4.1 Use of Color (Level A) Errors indicated by color alone If the user enters an invalid input to an edit field, an error message is displayed below the edit field. The only indication it is an error is that it is written with red text. To users unable to perceive red text, the error text is just another message on the screen and not necessarily an error. 2.1.1 Keyboard (Level A) 2.1.2 No Keyboard Trap (Level A) [Not planned] Keyboard navigation and focus",
  "image": "https://slack.engineering/wp-content/uploads/sites/7/2025/05/phil-hearing-5KyUb7PJlLI-unsplash.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\u003ch2\u003e\u003cb\u003eBackground\u003c/b\u003e\u003c/h2\u003e\n\u003cp\u003e\u003cspan\u003eA Voluntary Product Accessibility Template (VPAT) is a document that outlines how well a product aligns with accessibility (a11y) standards. Its primary purpose is to inform customers about a product’s a11y features, enabling them to make informed decisions before purchasing software.\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003eAt Slack, we conducted a\u003c/span\u003e \u003cspan\u003eVPAT\u003c/span\u003e\u003cspan\u003e by a third party a11y vendor in 2024 following our significant UI change (\u003ca href=\"https://slack.com/blog/productivity/a-redesigned-slack-built-for-focus\"\u003eIA4\u003c/a\u003e). During this VPAT process, we identified a total of 542 a11y issues, with Android having 135, iOS having 163, and desktop having 244 issues. Of the\u003c/span\u003e \u003cspan\u003e135 issues\u003c/span\u003e\u003cspan\u003e identified in Android, we immediately assigned the obvious shovel-ready issues, such as those with color contrast and missing image labels, to the responsible teams for resolution.\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003eTo address remaining Android issues, we conducted a comprehensive triage process. In this document, we take a look at the major recurring themes of Android accessibility issues and share resolution strategies and lessons learned in the hopes of preventing similar mistakes in the future.\u003c/span\u003e\u003c/p\u003e\n\n\u003ch2\u003e\u003cb\u003eIdentified themes\u003c/b\u003e\u003c/h2\u003e\n\u003cp\u003e\u003cspan\u003e[Note: ✅ for resolved and ❌ for not-resolved.]\u003c/span\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cspan\u003e✅ P1: Error messages are inaccessible \u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003e✅ P2: Headings are not identified\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003e✅ P2: Missing a11y label on EditField\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003e✅ P2: Incorrect number of items in list\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003e✅ P2: Drag and drop in the workspace switcher is inaccessible\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003e✅ P2: Strikethrough information not conveyed to screen reader users\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003e✅ P3: Errors indicated by color alone\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003e❌ P3: Keyboard Navigation and Focus\u003c/span\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cspan\u003eKeyboard navigability can help customers with motor and visual impairments use Slack on Android. It’s more commonly used on larger form factors (e.g. tablets). Despite receiving numerous VPAT tickets (45) related to the keyboard navigation, Slack Android currently does not support the large form factor. As a result, we have decided to temporarily deprioritize these issues.\u003c/span\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\u003cb\u003eIssue resolution\u003c/b\u003e\u003c/h2\u003e\n\u003ch2\u003e\u003cb\u003eP1: Error messages are inaccessible.\u003c/b\u003e\u003c/h2\u003e\n\u003ch3\u003e\u003cb\u003eReport\u003c/b\u003e\u003c/h3\u003e\n\u003cp\u003e\u003cspan\u003eIf the user enters an invalid input to an edit field and presses “Next” (or Submit), an error message is displayed, but \u003c/span\u003e\u003cb\u003ethe error is not communicated to users using screen readers\u003c/b\u003e\u003cspan\u003e. TalkBack should announce that it is in an error state when it receives focus, along with the error message so that users understand why it’s in error.\u003c/span\u003e\u003c/p\u003e\n\u003ch3\u003e\u003cb\u003eResolution\u003c/b\u003e\u003c/h3\u003e\n\u003cp\u003e\u003cspan\u003eOn Android, errors can be displayed to users in two primary ways:\u003c/span\u003e\u003c/p\u003e\n\u003ctable\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\n\u003cp\u003e\u003cspan\u003e(1) Immediately below the editing field.\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" src=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/image5.png?w=552\" alt=\"Error is displayed right below an image edit field.\" width=\"290\" height=\"125\" srcset=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/image5.png 552w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/image5.png?resize=380,164 380w\" sizes=\"(max-width: 290px) 100vw, 290px\"/\u003e\u003c/p\u003e\u003c/td\u003e\n\u003ctd\u003e\n\u003cp\u003e\u003cspan\u003e(2) Via the SK error banner.\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" src=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/image4.png?w=640\" alt=\"Error is shown via SKBanner error type.\" width=\"280\" height=\"125\" srcset=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/image4.png 842w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/image4.png?resize=640,286 640w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/image4.png?resize=768,343 768w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/image4.png?resize=380,170 380w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/image4.png?resize=800,357 800w\" sizes=\"(max-width: 280px) 100vw, 280px\"/\u003e\u003c/p\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cspan\u003eIn both cases, TalkBack did not announce errors, so users must swipe through the screen to determine what occurred. For case (1), we modified \u003c/span\u003e\u003ccode\u003eOutlinedTextField\u003c/code\u003e\u003cspan\u003e so that the error is announced immediately below the editing field. For case (2), \u003c/span\u003e\u003ccode\u003eSKBanner\u003c/code\u003e\u003cspan\u003e for the error type was updated so that when an error occurs, the error is announced to screen reader users. The videos below illustrate the changes before and after using TalkBack for case (2).\u003c/span\u003e\u003c/p\u003e\n\n\n\u003ch2\u003e\u003cb\u003eP1: Heading is not identified.\u003c/b\u003e\u003c/h2\u003e\n\u003ch3\u003e\u003cb\u003eReport\u003c/b\u003e\u003c/h3\u003e\n\u003cp\u003e\u003cspan\u003eThe heading lacks clear semantic information, making it difficult for screen reader users to quickly grasp the page’s structure and navigate efficiently. Defining headings enables assistive technology to convey the hierarchical organization of the content, enhancing accessibility and providing an alternative navigation method.\u003c/span\u003e\u003c/p\u003e\n\u003ch3\u003e\u003cb\u003eResolution\u003c/b\u003e\u003c/h3\u003e\n\u003cp\u003e\u003cspan\u003eWe identified and fixed issues with missing headings inside lists (such as in the Preferences page).\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003eThe vendor also suggested that titles in the top app bar should also be a heading, but we found that this pattern is not consistent with Android standards after testing other apps. Therefore, we closed those tickets.\u003c/span\u003e\u003c/p\u003e\n\u003ch2\u003e\u003cb\u003eP2: Missing a11y label on EditField\u003c/b\u003e\u003c/h2\u003e\n\u003ch3\u003e\u003cb\u003eReport\u003c/b\u003e\u003c/h3\u003e\n\u003cp\u003e\u003cspan\u003eSome edit fields do not have permanent labels. It is labeled using placeholder text that is removed when the user enters text. \u003c/span\u003e\u003cb\u003eSome users with cognitive difficulties will forget the purpose of the edit field without a permanently visible label.\u003c/b\u003e\u003c/p\u003e\n\u003ch3\u003e\u003cb\u003eResolution\u003c/b\u003e\u003c/h3\u003e\n\u003cp\u003e\u003cspan\u003eDuring our recent bug fixes, we encountered a few tricky cases that required collaboration with our design team and screen reader users. Specifically, we focused on our main search field and message input area (AMI). For AMI, space constraints prevented us from implementing an optimal solution. However, for the search field, we opted for a simple yet impactful change by adding an explicit search icon. This minor modification helps users easily identify the purpose of the edit field, significantly enhancing their overall experience.\u003c/span\u003e\u003c/p\u003e\n\u003ctable\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\n\u003cp\u003e\u003cspan\u003eBefore\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" decoding=\"async\" src=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/image3.png?w=341\" alt=\"Previously, there is no visual indictor in a search input field other than a placeholder text. When a user enters a text, it\u0026#39;s not obvious what this field is.\" width=\"296\" height=\"210\"/\u003e\u003c/p\u003e\u003c/td\u003e\n\u003ctd\u003e\n\u003cp\u003e\u003cspan\u003eAfter \u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" decoding=\"async\" src=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/image2.png?w=374\" alt=\"We added a magnifying glass icon to the input field. When a user enters a text, it\u0026#39;s clear that the edit field is for search.\" width=\"325\" height=\"210\"/\u003e\u003c/p\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2\u003e\u003cb\u003eP2: Incorrect number of items in list\u003c/b\u003e\u003c/h2\u003e\n\u003ch3\u003e\u003cb\u003eReport\u003c/b\u003e\u003c/h3\u003e\n\u003cp\u003e\u003cspan\u003eWhen TalkBack users have \u003c/span\u003e\u003cspan\u003eAlways speak number of list items\u003c/span\u003e\u003cspan\u003e setting enabled and navigate through a list, TalkBack announces an incorrect number of items.\u003c/span\u003e\u003c/p\u003e\n\u003ch3\u003e\u003cb\u003eResolution\u003c/b\u003e\u003c/h3\u003e\n\u003cp\u003e\u003cspan\u003eOur vintage Slack Kit (SK) Bottom sheet was the primary source of the issue. SK divider, although purely decorative, was considered an item within a list. For example, if the bottom sheet had 7 row items, including 2 divider items, TalkBack would announce “7 items in a list” instead of the intended “5 items in a list”.\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003eTo resolve this, we introduced a new \u003c/span\u003e\u003ccode\u003eSKListAccessibilityDelegate\u003c/code\u003e\u003cspan\u003e for \u003ccode\u003eSKListAdapter\u003c/code\u003e, overwriting the a11y \u003c/span\u003e\u003ccode\u003eCollectionInfo\u003c/code\u003e\u003cspan\u003e with the correct number of items\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003c/p\u003e\n\u003ch2\u003e\u003cb\u003eP2: Drag and drop in the workspace switcher is inaccessible.\u003c/b\u003e\u003c/h2\u003e\n\u003ch3\u003e\u003cb\u003eReport\u003c/b\u003e\u003c/h3\u003e\n\u003cp\u003e\u003cspan\u003eWorkspaces in the workspace switcher can be rearranged, but it requires the user to select a workspace and drag it to the new location. People who lack the dexterity required to perform this action may have difficulties completing the task, or may not be able to complete the task at all.\u003c/span\u003e\u003c/p\u003e\n\u003ch3\u003e\u003cb\u003eResolution\u003c/b\u003e\u003c/h3\u003e\n\u003cp\u003e\u003cspan\u003eIn\u003c/span\u003e \u003cspan\u003ediscussions\u003c/span\u003e\u003cspan\u003e with the design team, we decided to implement an \u003c/span\u003e\u003cspan\u003eEdit\u003c/span\u003e\u003cspan\u003e mode in the workspace switcher. When a user enters Edit mode, a six-dot drag handle is displayed for each workspace row so users know that each workspace row has a drag-and-drop capability.\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003eAdditionally, we introduced custom actions (Move before and after) for TalkBack users so users can move each row item from the TalkBack context menu by three-finger tap on a row item or “\u003c/span\u003e\u003cspan\u003eL”\u003c/span\u003e\u003cspan\u003e or “r”\u003c/span\u003e\u003cspan\u003e drawing gestures.\u003c/span\u003e\u003c/p\u003e\n\u003ctable\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\n\u003cp\u003e\u003cspan\u003eBefore\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" decoding=\"async\" src=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/image7.png?w=640\" alt=\"Before: there is no indication from UI that each workspace is draggable to move around.\" width=\"396\" height=\"250\" srcset=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/image7.png 894w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/image7.png?resize=640,404 640w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/image7.png?resize=768,485 768w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/image7.png?resize=380,240 380w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/image7.png?resize=800,505 800w\" sizes=\"auto, (max-width: 396px) 100vw, 396px\"/\u003e\u003c/p\u003e\u003c/td\u003e\n\u003ctd\u003e\n\u003cp\u003e\u003cspan\u003eAfter\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" decoding=\"async\" src=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/image1.png?w=640\" alt=\"After: Upon entering Edit mode, each row in the workspace is equipped with a six-dot drag handle. Once the user has completed rearranging the workspaces, they can click the \u0026#34;Done\u0026#34; button located in the top right corner, causing the six-dot drag handles to disappear.\" width=\"373\" height=\"250\" srcset=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/image1.png 842w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/image1.png?resize=640,429 640w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/image1.png?resize=768,514 768w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/image1.png?resize=380,255 380w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/image1.png?resize=800,536 800w\" sizes=\"auto, (max-width: 373px) 100vw, 373px\"/\u003e\u003c/p\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cb\u003eTalkBack custom actions\u003c/b\u003e\u003cspan\u003e to move a workspace up and down by one position.\u003c/span\u003e\u003c/p\u003e\n\t\t\n\t\n\u003ch2\u003e\u003cb\u003eP2: Strikethrough information not conveyed to screen reader users\u003c/b\u003e\u003c/h2\u003e\n\u003ch3\u003e\u003cb\u003eReport\u003c/b\u003e\u003c/h3\u003e\n\u003cp\u003e\u003cspan\u003eUsers have the option to format text as strikethrough, but the strikethrough information is not conveyed to screen reader users. It is visually evident that the text has strikethrough, but it is read as normal text for screen reader users.\u003c/span\u003e\u003c/p\u003e\n\u003ch3\u003e\u003cb\u003eResolution\u003c/b\u003e\u003c/h3\u003e\n\u003cp\u003e\u003cspan\u003eDuring our\u003c/span\u003e \u003cspan\u003econversation\u003c/span\u003e\u003cspan\u003e, we made a decision based on feedback from a blind colleague and agreed not to fix the strikethrough format. \u003c/span\u003e\u003cb\u003eMost screen readers don’t interpret this format\u003c/b\u003e\u003cspan\u003e, making it verbose and potentially confusing for screen reader users. They may interpret this announcement as part of the message itself.\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003eAs a general best practice, \u003c/span\u003e\u003cb\u003eit’s recommended to avoid strikethrough format for accessibility reasons\u003c/b\u003e\u003cspan\u003e. Additionally, some sighted users may find it challenging to read.\u003c/span\u003e\u003c/p\u003e\n\u003ch2\u003e\u003cb\u003eP3: Errors indicated by color alone\u003c/b\u003e\u003c/h2\u003e\n\u003ch3\u003e\u003cb\u003eReport\u003c/b\u003e\u003c/h3\u003e\n\u003cp\u003e\u003cspan\u003eIf the user enters an invalid input to an edit field, an error message is displayed below the edit field. The only indication it is an error is that it is written with red text. \u003c/span\u003e\u003cb\u003eTo users unable to perceive red text\u003c/b\u003e\u003cspan\u003e, the error text is just another message on the screen and not necessarily an error.\u003c/span\u003e\u003c/p\u003e\n\u003ch3\u003e\u003cb\u003eResolution\u003c/b\u003e\u003c/h3\u003e\n\u003cp\u003e\u003cspan\u003eWe recently updated the\u003c/span\u003e \u003cspan\u003edesign\u003c/span\u003e\u003cspan\u003e for displaying errors in edit fields, but there seems to be some inconsistency in its implementation. To address this, we conducted an audit of our usage and updated several screens accordingly. While it’s a relatively minor change, it improves the intuitiveness of understanding error messages.\u003c/span\u003e\u003c/p\u003e\n\n\u003ctable\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\n\u003cp\u003e\u003cspan\u003eBefore\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" decoding=\"async\" src=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/image8.png?w=395\" alt=\"Error text with red color is shown below an edit field.\" width=\"302\" height=\"225\" srcset=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/image8.png 395w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/image8.png?resize=380,283 380w\" sizes=\"auto, (max-width: 302px) 100vw, 302px\"/\u003e\u003c/p\u003e\u003c/td\u003e\n\u003ctd\u003e\n\u003cp\u003e\u003cspan\u003eAfter\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" decoding=\"async\" src=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/image6.png?w=395\" alt=\"Error text with red color and an error icon are shown below an edit field.\" width=\"302\" height=\"225\" srcset=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/image6.png 395w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/image6.png?resize=380,283 380w\" sizes=\"auto, (max-width: 302px) 100vw, 302px\"/\u003e\u003c/p\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003e\u003cb\u003eConclusion\u003c/b\u003e\u003c/h2\u003e\n\u003cp\u003e\u003cspan\u003eThrough the process of triaging and addressing VPAT issues, we have gained valuable insights.\u003c/span\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cspan\u003eOne crucial lesson learned is the importance of immediately announcing errors to screen reader users. This eliminates the need for them to navigate through screens to understand the outcome of their actions.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eWe discovered that seemingly minor UI changes, such as adding visual icons to text, can have a significant impact on our users’ experience.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eFurthermore, we recognized the need to be more diligent in adding TalkBack custom actions for gestures that may not be easily discoverable, like drag-and-drop or swipe-to-dismiss.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eCollaborating with our a11y-minded design team greatly facilitated the decision-making process and issue resolution.\u003c/span\u003e\u003c/li\u003e\n\u003cli\u003e\u003cspan\u003eAlthough not all Web Content Accessibility Guidelines (WCAG) standards can be directly applied to Android, the industry has long endeavored to establish platform-specific guidelines for mobile native apps. However, significant progress has yet to be made. Our VPAT analysis revealed that certain accessibility issues are not applicable to Android’s native patterns. To gain a deeper understanding, we dedicated time to testing native Google apps and discussing our decisions regarding the applicability of WCAG standards to Android.\u003c/span\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cspan\u003eWhile the timing of our next VPAT assessment is yet to be determined, we are committed to avoiding the repetition of accessibility mistakes in the future. Hopefully, readers have gained valuable insights from this article.\u003c/span\u003e\u003c/p\u003e\n\n\u003ch2\u003e\u003cb\u003eReferences: WCAG mapping\u003c/b\u003e\u003c/h2\u003e\n\u003ctable\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cb\u003eWCAG standard\u003c/b\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cb\u003eIssue\u003c/b\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cb\u003eDescription\u003c/b\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://www.w3.org/TR/WCAG/#name-role-value\"\u003e\u003cspan\u003e4.1.2 Name, Role, Value (Level A)\u003c/span\u003e\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cspan\u003e\u003cimg loading=\"lazy\" decoding=\"async\" src=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/p1-new.png?w=128\" alt=\":p1-new:\" width=\"20\" height=\"20\" srcset=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/p1-new.png 128w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/p1-new.png?resize=80,80 80w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/p1-new.png?resize=110,110 110w\" sizes=\"auto, (max-width: 20px) 100vw, 20px\"/\u003e Error messages are inaccessible.\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cspan\u003eIf the user enters an invalid input to an edit field and presses “Next” (or Submit), an error message is displayed, but the error is not communicated to users using screen readers. TalkBack should announce that it is in an error state when it receives focus, along with the error message so that users understand why it’s in error.\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://www.w3.org/TR/WCAG/#info-and-relationships\"\u003e\u003cspan\u003e1.3.1 Info and Relationships (Level A)\u003c/span\u003e\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cspan\u003e\u003cimg loading=\"lazy\" decoding=\"async\" src=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/p1-new.png?w=128\" alt=\":p1-new:\" width=\"20\" height=\"20\" srcset=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/p1-new.png 128w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/p1-new.png?resize=80,80 80w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/p1-new.png?resize=110,110 110w\" sizes=\"auto, (max-width: 20px) 100vw, 20px\"/\u003e Heading is not identified.\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cspan\u003eThe heading lacks clear semantic information, making it difficult for screen reader users to quickly grasp the page’s structure and navigate efficiently. Defining headings enables assistive technology to convey the hierarchical organization of the content, enhancing accessibility and providing an alternative navigation method.\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://www.w3.org/TR/WCAG/#name-role-value\"\u003e\u003cspan\u003e4.1.2 Name, Role, Value (Level A)\u003c/span\u003e\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cspan\u003e\u003cimg loading=\"lazy\" decoding=\"async\" src=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/p2-new.png?w=128\" alt=\":p2-new:\" width=\"20\" height=\"20\" srcset=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/p2-new.png 128w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/p2-new.png?resize=80,80 80w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/p2-new.png?resize=110,110 110w\" sizes=\"auto, (max-width: 20px) 100vw, 20px\"/\u003e Missing a11y label on EditField\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cspan\u003eSome edit fields do not have permanent labels. It is labeled using placeholder text that is removed when the user enters text. Some users with cognitive difficulties will forget the purpose of the edit field without a permanently visible label.\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://www.w3.org/TR/WCAG/#name-role-value\"\u003e\u003cspan\u003e4.1.2 Name, Role, Value (Level A)\u003c/span\u003e\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cspan\u003e\u003cimg loading=\"lazy\" decoding=\"async\" src=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/p2-new.png?w=128\" alt=\":p2-new:\" width=\"20\" height=\"20\" srcset=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/p2-new.png 128w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/p2-new.png?resize=80,80 80w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/p2-new.png?resize=110,110 110w\" sizes=\"auto, (max-width: 20px) 100vw, 20px\"/\u003e Incorrect number of items in list\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cspan\u003eWhen TalkBack users have \u003c/span\u003e\u003cspan\u003eAlways speak number of list items\u003c/span\u003e\u003cspan\u003e setting enabled and navigate through a list, TalkBack announces an incorrect number of items.\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://www.w3.org/TR/WCAG/#dragging-movements\"\u003e\u003cspan\u003e2.5.7 Dragging Movements (Level AA)\u003c/span\u003e\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cspan\u003e\u003cimg loading=\"lazy\" decoding=\"async\" src=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/p2-new.png?w=128\" alt=\":p2-new:\" width=\"20\" height=\"20\" srcset=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/p2-new.png 128w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/p2-new.png?resize=80,80 80w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/p2-new.png?resize=110,110 110w\" sizes=\"auto, (max-width: 20px) 100vw, 20px\"/\u003e Drag and drop in the workspace switcher is inaccessible.\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cspan\u003eWorkspaces in the workspace switcher can be rearranged, but it requires the user to select a workspace and drag it to the new location. People who lack the dexterity required to perform this action may have difficulties completing the task, or may not be able to complete the task at all.\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://www.w3.org/TR/WCAG/#info-and-relationships\"\u003e\u003cspan\u003e1.3.1 Info and Relationships (Level A)\u003c/span\u003e\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cspan\u003e\u003cimg loading=\"lazy\" decoding=\"async\" src=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/p2-new.png?w=128\" alt=\":p2-new:\" width=\"20\" height=\"20\" srcset=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/p2-new.png 128w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/p2-new.png?resize=80,80 80w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/p2-new.png?resize=110,110 110w\" sizes=\"auto, (max-width: 20px) 100vw, 20px\"/\u003e Strikethrough information not conveyed to screen reader users\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cspan\u003eUsers have the option to format text as strikethrough, but the strikethrough information is not conveyed to screen reader users. It is visually evident that the text has strikethrough, but it is read as normal text for screen reader users.\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://www.w3.org/TR/WCAG/#use-of-color\"\u003e\u003cspan\u003e1.4.1 Use of Color (Level A)\u003c/span\u003e\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cspan\u003e\u003cimg loading=\"lazy\" decoding=\"async\" src=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/p3-new.png?w=128\" alt=\":p3-new:\" width=\"20\" height=\"20\" srcset=\"https://slack.engineering/wp-content/uploads/sites/7/2025/05/p3-new.png 128w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/p3-new.png?resize=80,80 80w, https://slack.engineering/wp-content/uploads/sites/7/2025/05/p3-new.png?resize=110,110 110w\" sizes=\"auto, (max-width: 20px) 100vw, 20px\"/\u003eErrors indicated by color alone\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cspan\u003eIf the user enters an invalid input to an edit field, an error message is displayed below the edit field. The only indication it is an error is that it is written with red text. To users unable to perceive red text, the error text is just another message on the screen and not necessarily an error.\u003c/span\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\n\u003cp\u003e\u003ca href=\"https://www.w3.org/TR/WCAG/#keyboard\"\u003e\u003cspan\u003e2.1.1 Keyboard (Level A)\u003c/span\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.w3.org/TR/WCAG/#no-keyboard-trap\"\u003e\u003cspan\u003e2.1.2 No Keyboard Trap (Level A)\u003c/span\u003e\u003c/a\u003e\u003c/p\u003e\u003c/td\u003e\n\u003ctd\u003e\u003cb\u003e[Not planned] \u003c/b\u003e\u003cspan\u003eKeyboard navigation and focus\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "13 min read",
  "publishedTime": "2025-05-27T20:42:39Z",
  "modifiedTime": "2025-05-27T21:42:51Z"
}
