{
  "id": "501abb06-1b09-44ce-b8b1-8e7b5fb47778",
  "title": "Less TODO, more done: The difference between coding agent and agent mode in GitHub Copilot",
  "link": "https://github.blog/developer-skills/github/less-todo-more-done-the-difference-between-coding-agent-and-agent-mode-in-github-copilot/",
  "description": "We’ll decode these two tools—and show you how to use them both to work more efficiently. The post Less TODO, more done: The difference between coding agent and agent mode in GitHub Copilot appeared first on The GitHub Blog.",
  "author": "Andrea Griffiths",
  "published": "Mon, 02 Jun 2025 16:00:00 +0000",
  "source": "https://github.blog/feed/",
  "categories": [
    "Developer skills",
    "GitHub",
    "agent mode",
    "GitHub Copilot"
  ],
  "byline": "Andrea Griffiths",
  "length": 10438,
  "excerpt": "We’ll decode these two tools—and show you how to use them both to work more efficiently.",
  "siteName": "The GitHub Blog",
  "favicon": "https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=192%2C192",
  "text": "“Give a dev a code completion and they’ll merge once. Teach a dev to wield an AI agent and they’ll empty the backlog before the coffee cools.“ GitHub Copilot started life in 2021 as the autocomplete sidekick that kept you in flow. Fast forward to 2025 and it now has two new and very different superpowers: Agent mode: a real‑time collaborator that sits in your editor, works with you, and edits files based on your needs. Coding agent: an asynchronous teammate that lives in the cloud, takes on issues, and sends you fully tested pull requests while you do other things. While they’re both AI agents, they’re tuned for different parts in your day-to-day workflows. Since we’ve been getting a few questions, we’re breaking down what they are, when to reach for each, and—because we’re developers—offering some hands‑on tips. TL;DR: The difference between agent mode and coding agent Agent mode = synchronous: Works inside VS Code (and now JetBrains/Eclipse/Xcode previews) as an autonomous collaborator that iterates on code, runs tests, and fixes its own mistakes in real time. Coding agent = asynchronous: Runs inside GitHub Actions (in public preview), picks up issues you assign (assignee: Copilot), explores the repo, writes code, passes tests, and opens a pull request for your review. Think of agent mode as the senior dev pair programming with you, and coding agent as the diligent teammate grinding through well‑scoped tickets. You can (and should) use both together: Prototype interactively in agent mode, then give follow‑up tasks to the coding agent. Note: Both consume Copilot premium requests, but coding agent also uses Actions minutes.  Meet agent mode: Your real‑time collaborator Agent mode transforms Copilot Chat into an orchestrator of tools (read_file, edit_file, run_in_terminal, etc.). Give it a natural‑language goal—“add OAuth to our Flask app and write tests”—and it plans, edits files, runs the test suite, reads failures, fixes them, and loops until green. You watch the steps, intervene when you like, and keep all changes local. How to turn agent mode on Open Copilot Chat in VS Code. Select Agent from the mode dropdown. (Optional but smart) Click Tools → Manage to enable or disable capabilities and add MCP extensions. Pro tips for using agent mode to the fullest extent Scope the outcome: “Generate a REST endpoint” beats “help?” Vagueness breeds hallucination, so be as clear as possible about what you want. Seed with context: Point it at the spec file or paste the schema so it doesn’t reinvent shapes. Iterate interactively: Let it run, but nudge when it veers—like pair programming with a skilled teammate who’s fast but needs occasional direction. Extend with MCP servers: If you need custom tools (database migrations, cloud deploys, etc.). Choose your model: OpenAI GPT‑4o for raw power, Anthropic Claude for longer context—swap via the model picker. TLDR: Agent mode is like pair programming with a pro who writes code, runs tests, and fixes errors instantly, all within your editor. Meet your coding agent: Your asynchronous teammate  Where agent mode lives in the IDE, coding agent lives in your repos. Assign an issue to Copilot, and it spins up a secure cloud workspace (via GitHub Actions), figures out a plan, edits code on its own branch, runs your tests/linters, and opens a pull request tagging you for review. How to enable it Plan eligibility: Requires Copilot Pro+ or Copilot  Enterprise. Flip the switch: Enterprise admins must enable “Copilot coding agent” in organization policies. Assign issues: Prompt coding agent with natural language by pointing it at an issue to get started.  ### Feature: add dark‑mode toggle assignees: Copilot Watch the pull requests roll in—quick turnarounds for small tasks, thorough work on the complex ones. Sweet‑spot tasks Low‑to‑medium complexity changes in well‑tested repositories. Adding or extending unit tests. Small refactors (rename a service, extract helpers). Documentation or typo fixes. Not yet ideal for: massive rewrites, cross‑repo changes, codebases with 0% test coverage. Pro tips for using coding agent in GitHub Copilot Write crisp acceptance criteria in the issue. The agent reads them like a spec. Link to files or functions the change touches; saves exploration time. Keep it atomic: one logical task per issue. Multiple smaller issues scale better than one behemoth. Leverage PR comments: Ask the agent for tweaks, then you can extract the logic into a separate function and add error handling. Mind your minutes: Heavy tasks consume Actions minutes and premium requests, so queue strategically. And remember: GitHub Copilot coding agent follows your existing code style without complaints… yet. Decision lensAgent modeCoding agentWorkflow pacingReal‑time collaboration, conversational, and iterativeFire and forget, background tasksInterfaceVS Code / JetBrains / Eclipse / Xcode chatGitHub Issues or Copilot Chat → Monitored via pull requestsTypical tasksRefactor, prototype, debug, migrateFeature add, bug fix, extending tests, boring tasks and repetitive engineering choresHuman oversightContinuous (you watch edits)At pull request review checkpointResource costPremium requestsPremium requests + Actions minutesBest forExploring unknown code, tight feedback loopsClearing backlog, parallelizing chores Get more done by using both Before we dive into the tactical playbook, remember that Copilot’s superpowers aren’t either/or—they’re peanut butter and jelly. The magic really shows up when the real‑time, in‑editor agent mode meets the steady, background hustle of the coding agent.  With that, here are three proven pairings that let you wring every drop of productivity (and fun) out of both: Prototype in agent mode. Ship with coding agent. Use agent mode to spike a working feature branch. Open an issue describing polish tasks; assign to Copilot. Agent mode for spec generation. Coding agent for implementation. Ask agent mode to draft a design doc from code context. Fine‑tune it, then hand the ticket to coding agent to execute. Coding agent regression fix. Agent mode hot patch.  If coding agent’s pull request introduces a build failure, open the branch locally and summon agent mode to diagnose and patch instantly. These aren’t the only areas where you can use agent mode and coding agent to greater effect. But they do offer some examples to help you get started.  Safety and quality checklist Excited to watch Copilot code circles around your backlog? Same—but let’s make sure the wheels don’t fall off at 120 mph. Before you hit merge, run through this quick pre‑flight to keep quality, security, and version‑control hygiene firmly on‑track. Tests green? Both agents rely on tests—invest in coverage or they’ll fly blind. Secrets safe? Coding agent runs in a secure ephemeral env; still, guard .env files. Review everything: Agents accelerate work; they don’t eliminate your responsibility as reviewer-of-record. Version control FTW: Agent mode edits locally in a branch, so commit early and often. Common questions, quick answers Still scratching your head about edge cases, quirky workflows, or editor allegiance? Below are the questions we hear most often when we demo these agents—served up in a lightning round so you can get back to shipping. Q: Can coding agent fix that legacy Perl CGI script from 2002?A: It can try—but without tests it’s like teaching a golden retriever calculus. Use agent mode to refactor first. Q: Does agent mode support vim?A: Not yet. But you can always :wq VS Code if you miss modal editing (ducks). Q: How many issues can I throw at coding agent at once?A: Multiple, but remember each consumes compute and your pull request queue tolerance. Treat it like coffee—great in moderation, disaster when the pot overflows. Q: Can GitHub Copilot coding agent work with images?A: Yes! Thanks to vision models, it can see screenshots of bugs or mockups included in GitHub issues, making visual bug reports much more effective. Q: What about accessing external data sources? A: With Model Context Protocol (MCP) support, GitHub Copilot coding agent can connect to external data and capabilities beyond GitHub. Take this with you Agent mode = synchronous mastery inside your editor; coding agent = asynchronous work in issues and PRs on GitHub. Clear prompts, good tests, and small scopes remain the secret sauce. Use both agents in tandem to cover the full dev‑cycle—from “Hmm, what if…?” to “LGTM, ship it.” Keep humans in the loop for architecture choices, security reviews, and celebratory high‑fives. AI agents won’t replace engineers; they’ll replace the boring parts of engineering. That means more time for inventive features, better code quality, and building what’s next. And isn’t that why we all love being developers? (Ok, maybe that’s just me.)  Happy building, and may your Actions minutes be plentiful and your pull request diff stats impressively tiny. Written by Andrea is a Senior Developer Advocate at GitHub with over a decade of experience in developer tools. She combines technical depth with a mission to make advanced technologies more accessible. After transitioning from Army service and construction management to software development, she brings a unique perspective to bridging complex engineering concepts with practical implementation. She lives in Florida with her Welsh partner, two sons, and two dogs, where she continues to drive innovation and support open source through GitHub's global initiatives. Find her online @alacolombiadev. Explore more from GitHub Docs Everything you need to master GitHub, all in one place. Go to Docs GitHub Build what’s next on GitHub, the place for anyone from anywhere to build anything. Start building Customer stories Meet the companies and engineering teams that build with GitHub. Learn more Enterprise content Executive insights, curated just for you Get started",
  "image": "https://github.blog/wp-content/uploads/2025/05/Github-DarkMode-Blog-Logo-16x9-07.png?fit=1200%2C630",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003csection\u003e\n\t\n\u003cp\u003e“\u003cem\u003eGive a dev a code completion and they’ll merge once. Teach a dev to wield an AI agent and they’ll empty the backlog before the coffee cools.\u003c/em\u003e“\u003c/p\u003e\n\n\n\n\u003cp\u003eGitHub Copilot started life in 2021 as the autocomplete sidekick that kept you in flow. Fast forward to 2025 and it now has two new and very different superpowers:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eAgent mode\u003c/strong\u003e: a real‑time collaborator that sits in your editor, works with you, and edits files based on your needs.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eCoding agent\u003c/strong\u003e: an asynchronous teammate that lives in the cloud, takes on issues, and sends you fully tested pull requests while you do other things.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eWhile they’re both AI agents, they’re tuned for different parts in your day-to-day workflows. Since we’ve been getting a few questions, we’re breaking down what they are, when to reach for each, and—because we’re developers—offering some hands‑on tips.\u003c/p\u003e\n\n\n\n\u003ch2 id=\"h-tl-dr-the-difference-between-agent-mode-and-coding-agent\"\u003eTL;DR: The difference between agent mode and coding agent\u003c/h2\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eAgent mode = synchronous\u003c/strong\u003e: Works inside VS Code (and now JetBrains/Eclipse/Xcode previews) as an autonomous collaborator that \u003cem\u003eiterates\u003c/em\u003e on code, runs tests, and fixes its own mistakes in real time.\u003cbr/\u003e\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eCoding agent = asynchronous\u003c/strong\u003e: Runs inside GitHub Actions (in public preview), picks up issues you assign (\u003ccode\u003eassignee: Copilot\u003c/code\u003e), explores the repo, writes code, passes tests, and opens a pull request for your review.\u003cbr/\u003e\u003c/li\u003e\n\n\n\n\u003cli\u003eThink of \u003cstrong\u003eagent mode\u003c/strong\u003e as the senior dev pair programming with you, and \u003cstrong\u003ecoding agent\u003c/strong\u003e as the diligent teammate grinding through well‑scoped tickets.\u003cbr/\u003e\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eYou can (and should) use both together\u003c/strong\u003e: Prototype interactively in agent mode, then give follow‑up tasks to the coding agent.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e: Both consume \u003ca href=\"https://docs.github.com/copilot/managing-copilot/monitoring-usage-and-entitlements/about-premium-requests\"\u003eCopilot premium requests\u003c/a\u003e, but coding agent also uses Actions minutes. \u003c/p\u003e\n\n\n\n\u003ch2 id=\"h-meet-agent-mode-your-real-time-collaborator\"\u003eMeet agent mode: Your real‑time collaborator\u003c/h2\u003e\n\n\n\n\u003cp\u003eAgent mode transforms Copilot Chat into an \u003cem\u003eorchestrator\u003c/em\u003e of tools (\u003ccode\u003eread_file\u003c/code\u003e, \u003ccode\u003eedit_file\u003c/code\u003e, \u003ccode\u003erun_in_terminal\u003c/code\u003e, etc.). Give it a natural‑language goal—“add OAuth to our Flask app and write tests”—and it plans, edits files, runs the test suite, reads failures, fixes them, and loops until green. You watch the steps, intervene when you like, and keep all changes local.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cp\u003e\n\u003ciframe loading=\"lazy\" title=\"GitHub Copilot: agent mode now available\" width=\"500\" height=\"281\" src=\"https://www.youtube.com/embed/pRihTxpipZ0?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\u003c/p\u003e\u003c/figure\u003e\n\n\n\n\u003ch3 id=\"h-how-to-turn-agent-mode-on\"\u003eHow to turn agent mode on\u003c/h3\u003e\n\n\n\n\u003col\u003e\n\u003cli\u003eOpen \u003cstrong\u003eCopilot Chat\u003c/strong\u003e in VS Code.\u003c/li\u003e\n\n\n\n\u003cli\u003eSelect \u003cstrong\u003eAgent\u003c/strong\u003e from the mode dropdown.\u003c/li\u003e\n\n\n\n\u003cli\u003e(Optional but smart) Click \u003cstrong\u003eTools → Manage\u003c/strong\u003e to enable or disable capabilities and add MCP extensions.\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\n\u003ch3 id=\"h-pro-tips-for-using-agent-mode-to-the-fullest-extent\"\u003ePro tips for using agent mode to the fullest extent\u003c/h3\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eScope the outcome\u003c/strong\u003e: “Generate a REST endpoint” beats “help?” Vagueness breeds \u003cem\u003ehallucination\u003c/em\u003e, so be as clear as possible about what you want.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eSeed with context\u003c/strong\u003e: Point it at the spec file or paste the schema so it doesn’t reinvent shapes.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eIterate interactively\u003c/strong\u003e: Let it run, but nudge when it veers—like pair programming with a skilled teammate who’s fast but needs occasional direction.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eExtend with MCP servers\u003c/strong\u003e: If you need custom tools (database migrations, cloud deploys, etc.).\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eChoose your model\u003c/strong\u003e: OpenAI GPT‑4o for raw power, Anthropic Claude for longer context—swap via the model picker.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eTLDR:\u003c/strong\u003e Agent mode is like pair programming with a pro who writes code, runs tests, and fixes errors instantly, all within your editor.\u003c/p\u003e\n\n\n\n\u003ch2 id=\"h-meet-your-coding-agent-your-asynchronous-teammate\"\u003eMeet your coding agent: Your asynchronous teammate \u003c/h2\u003e\n\n\n\n\u003cp\u003eWhere agent mode lives in the IDE, \u003cem\u003ecoding agent\u003c/em\u003e lives in your repos. Assign an issue to \u003cstrong\u003eCopilot\u003c/strong\u003e, and it spins up a secure cloud workspace (via GitHub Actions), figures out a plan, edits code on its own branch, runs your tests/linters, and opens a pull request tagging you for review.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cp\u003e\n\u003ciframe loading=\"lazy\" title=\"The GitHub Copilot coding agent *NEW*\" width=\"500\" height=\"281\" src=\"https://www.youtube.com/embed/6xHZJVnKkSs?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\u003c/p\u003e\u003c/figure\u003e\n\n\n\n\u003ch3 id=\"h-how-to-enable-it\"\u003eHow to enable it\u003c/h3\u003e\n\n\n\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003ePlan eligibility\u003c/strong\u003e: Requires \u003cstrong\u003eCopilot Pro+\u003c/strong\u003e or \u003cstrong\u003eCopilot  Enterprise\u003c/strong\u003e.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eFlip the switch\u003c/strong\u003e: Enterprise admins must enable \u003cem\u003e“Copilot coding agent”\u003c/em\u003e in organization policies.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eAssign issues\u003c/strong\u003e: Prompt coding agent with natural language by pointing it at an issue to get started. \u003c/li\u003e\n\u003c/ol\u003e\n\n\n\n\u003cpre\u003e\u003ccode\u003e### Feature: add dark‑mode toggle\nassignees: Copilot\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003col start=\"4\"\u003e\n\u003cli\u003eWatch the pull requests roll in—quick turnarounds for small tasks, thorough work on the complex ones.\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\n\u003ch3 id=\"h-sweet-spot-tasks\"\u003eSweet‑spot tasks\u003c/h3\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eLow‑to‑medium complexity changes in \u003cstrong\u003ewell‑tested\u003c/strong\u003e repositories.\u003c/li\u003e\n\n\n\n\u003cli\u003eAdding or extending unit tests.\u003c/li\u003e\n\n\n\n\u003cli\u003eSmall refactors (rename a service, extract helpers).\u003c/li\u003e\n\n\n\n\u003cli\u003eDocumentation or typo fixes.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eNot yet ideal for\u003c/strong\u003e: massive rewrites, cross‑repo changes, codebases with 0% test coverage.\u003c/p\u003e\n\n\n\n\u003ch3 id=\"h-pro-tips-for-using-coding-agent-in-github-copilot\"\u003ePro tips for using coding agent in GitHub Copilot\u003c/h3\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eWrite crisp acceptance criteria\u003c/strong\u003e in the issue. The agent reads them like a spec.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eLink to files\u003c/strong\u003e or functions the change touches; saves exploration time.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eKeep it atomic\u003c/strong\u003e: one logical task per issue. Multiple smaller issues scale better than one behemoth.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eLeverage PR comments\u003c/strong\u003e: Ask the agent for tweaks, then you can extract the logic into a separate function and add error handling.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eMind your minutes\u003c/strong\u003e: Heavy tasks consume Actions minutes and premium requests, so queue strategically.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eAnd remember:\u003c/strong\u003e GitHub Copilot coding agent follows your existing code style without complaints… yet.\u003c/p\u003e\n\n\n\n\n\n\n\n\u003cfigure\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\u003cstrong\u003eDecision lens\u003c/strong\u003e\u003c/td\u003e\u003ctd\u003e\u003cstrong\u003eAgent mode\u003c/strong\u003e\u003c/td\u003e\u003ctd\u003e\u003cstrong\u003eCoding agent\u003c/strong\u003e\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e\u003cstrong\u003eWorkflow pacing\u003c/strong\u003e\u003c/td\u003e\u003ctd\u003eReal‑time collaboration, conversational, and iterative\u003c/td\u003e\u003ctd\u003eFire and forget, background tasks\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e\u003cstrong\u003eInterface\u003c/strong\u003e\u003c/td\u003e\u003ctd\u003eVS Code / JetBrains / Eclipse / Xcode chat\u003c/td\u003e\u003ctd\u003eGitHub Issues or Copilot Chat → Monitored via pull requests\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e\u003cstrong\u003eTypical tasks\u003c/strong\u003e\u003c/td\u003e\u003ctd\u003eRefactor, prototype, debug, migrate\u003c/td\u003e\u003ctd\u003eFeature add, bug fix, extending tests, boring tasks and repetitive engineering chores\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e\u003cstrong\u003eHuman oversight\u003c/strong\u003e\u003c/td\u003e\u003ctd\u003eContinuous (you watch edits)\u003c/td\u003e\u003ctd\u003eAt pull request review checkpoint\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e\u003cstrong\u003eResource cost\u003c/strong\u003e\u003c/td\u003e\u003ctd\u003ePremium requests\u003c/td\u003e\u003ctd\u003ePremium requests \u003cstrong\u003e+\u003c/strong\u003e Actions minutes\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e\u003cstrong\u003eBest for\u003c/strong\u003e\u003c/td\u003e\u003ctd\u003eExploring unknown code, tight feedback loops\u003c/td\u003e\u003ctd\u003eClearing backlog, parallelizing chores\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\n\n\u003ch2 id=\"h-get-more-done-by-using-both\"\u003eGet more done by using both\u003c/h2\u003e\n\n\n\n\u003cp\u003eBefore we dive into the tactical playbook, remember that Copilot’s superpowers aren’t either/or—they’re peanut butter and jelly. The magic really shows up when the real‑time, in‑editor agent mode meets the steady, background hustle of the coding agent. \u003c/p\u003e\n\n\n\n\u003cp\u003eWith that, here are three proven pairings that let you wring every drop of productivity (and fun) out of both:\u003c/p\u003e\n\n\n\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003ePrototype in agent mode. Ship with coding agent.\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003eUse agent mode to spike a working feature branch.\u003c/li\u003e\n\n\n\n\u003cli\u003eOpen an issue describing polish tasks; assign to Copilot.\u003cbr/\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eAgent mode for spec generation. Coding agent for implementation.\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003eAsk agent mode to draft a design doc from code context.\u003c/li\u003e\n\n\n\n\u003cli\u003eFine‑tune it, then hand the ticket to coding agent to execute.\u003cbr/\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eCoding agent regression fix. Agent mode hot patch. \u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003eIf coding agent’s pull request introduces a build failure, open the branch locally and summon agent mode to diagnose and patch instantly.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\n\u003cp\u003eThese aren’t the only areas where you can use agent mode and coding agent to greater effect. But they do offer some examples to help you get started. \u003c/p\u003e\n\n\n\n\u003ch2 id=\"h-safety-and-quality-checklist\"\u003eSafety and quality checklist\u003c/h2\u003e\n\n\n\n\u003cp\u003eExcited to watch Copilot code circles around your backlog? Same—but let’s make sure the wheels don’t fall off at 120 mph. Before you hit merge, run through this quick pre‑flight to keep quality, security, and version‑control hygiene firmly on‑track.\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eTests green?\u003c/strong\u003e Both agents rely on tests—invest in coverage or they’ll fly blind.\u003cbr/\u003e\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eSecrets safe?\u003c/strong\u003e Coding agent runs in a secure ephemeral env; still, guard \u003ccode\u003e.env\u003c/code\u003e files.\u003cbr/\u003e\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eReview everything\u003c/strong\u003e: Agents accelerate work; they don’t eliminate your responsibility as reviewer-of-record.\u003cbr/\u003e\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eVersion control FTW\u003c/strong\u003e: Agent mode edits locally in a branch, so commit early and often.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003ch2 id=\"h-common-questions-quick-answers\"\u003eCommon questions, quick answers\u003c/h2\u003e\n\n\n\n\u003cp\u003eStill scratching your head about edge cases, quirky workflows, or editor allegiance? Below are the questions we hear most often when we demo these agents—served up in a lightning round so you can get back to shipping.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eQ: Can coding agent fix that legacy Perl CGI script from 2002?\u003c/strong\u003e\u003cstrong\u003e\u003cbr/\u003e\u003c/strong\u003eA: It \u003cem\u003ecan try\u003c/em\u003e—but without tests it’s like teaching a golden retriever calculus. Use agent mode to refactor first.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eQ: Does agent mode support vim?\u003cbr/\u003e\u003c/strong\u003eA: Not yet. But you can always \u003ccode\u003e:wq\u003c/code\u003e VS Code if you miss modal editing (ducks).\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eQ: How many issues can I throw at coding agent at once?\u003c/strong\u003e\u003cstrong\u003e\u003cbr/\u003e\u003c/strong\u003eA: Multiple, but remember each consumes compute and your pull request queue tolerance. Treat it like coffee—great in moderation, disaster when the pot overflows.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eQ: Can GitHub Copilot coding agent work with images?\u003c/strong\u003e\u003cstrong\u003e\u003cbr/\u003e\u003c/strong\u003eA: Yes! Thanks to vision models, it can see screenshots of bugs or mockups included in GitHub issues, making visual bug reports much more effective.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eQ: What about accessing external data sources? \u003c/strong\u003e\u003cstrong\u003e\u003cbr/\u003e\u003c/strong\u003eA: With Model Context Protocol (MCP) support, GitHub Copilot coding agent can connect to external data and capabilities beyond GitHub.\u003c/p\u003e\n\n\n\n\u003ch2 id=\"h-take-this-with-you\"\u003eTake this with you\u003c/h2\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eAgent mode = synchronous mastery\u003c/strong\u003e inside your editor; \u003cstrong\u003ecoding agent = asynchronous work\u003c/strong\u003e in issues and PRs on GitHub.\u003cbr/\u003e\u003c/li\u003e\n\n\n\n\u003cli\u003eClear prompts, good tests, and small scopes remain the secret sauce.\u003cbr/\u003e\u003c/li\u003e\n\n\n\n\u003cli\u003eUse both agents in tandem to cover the full dev‑cycle—from “Hmm, what if…?” to “LGTM, ship it.”\u003cbr/\u003e\u003c/li\u003e\n\n\n\n\u003cli\u003eKeep humans in the loop for architecture choices, security reviews, and celebratory high‑fives.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eAI agents won’t replace engineers; they’ll replace the \u003cem\u003eboring parts\u003c/em\u003e of engineering. That means more time for inventive features, better code quality, and building what’s next. And isn’t that why we all love being developers? (Ok, maybe that’s just me.) \u003c/p\u003e\n\n\n\n\u003cp\u003eHappy building, and may your Actions minutes be plentiful and your pull request diff stats impressively tiny.\u003c/p\u003e\n\n\n\n\n\n\t\n\n\t\u003cdiv\u003e\n\t\u003ch2\u003e\n\t\tWritten by\t\u003c/h2\u003e\n\t\n\t\t\t\u003carticle\u003e\n\t\u003cdiv\u003e\n\t\t\t\t\t\u003cdiv\u003e\n\t\t\t\t\u003cpicture\u003e\n\t\t\t\t\t\u003csource srcset=\"https://github.blog/wp-content/uploads/2025/03/cropped-IMG_1971-200x200.jpeg\" width=\"120\" height=\"120\" media=\"(min-width: 768px)\"/\u003e\n\t\t\t\t\t\u003cimg src=\"https://github.blog/wp-content/uploads/2025/03/cropped-IMG_1971-200x200.jpeg\" alt=\"Andrea Griffiths\" width=\"80\" height=\"80\" loading=\"lazy\" decoding=\"async\"/\u003e\n\t\t\t\t\u003c/picture\u003e\n\t\t\t\u003c/div\u003e\n\t\t\t\t\n\t\t\t\t\t\u003cp\u003eAndrea is a Senior Developer Advocate at GitHub with over a decade of experience in developer tools. She combines technical depth with a mission to make advanced technologies more accessible. After transitioning from Army service and construction management to software development, she brings a unique perspective to bridging complex engineering concepts with practical implementation. She lives in Florida with her Welsh partner, two sons, and two dogs, where she continues to drive innovation and support open source through GitHub\u0026#39;s global initiatives. Find her online @alacolombiadev.\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\u003c/article\u003e\n\t\u003c/div\u003e\n\u003c/section\u003e\u003cdiv\u003e\n\t\u003ch2\u003e\n\t\tExplore more from GitHub\t\u003c/h2\u003e\n\t\u003cdiv\u003e\n\t\t\u003cdiv\u003e\n\t\t\u003cp\u003e\u003cimg src=\"https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg\" width=\"44\" height=\"44\" alt=\"Docs\"/\u003e\u003c/p\u003e\u003ch3\u003e\n\t\t\tDocs\t\t\u003c/h3\u003e\n\t\t\u003cp\u003eEverything you need to master GitHub, all in one place.\u003c/p\u003e\n\t\t\t\t\t\u003cp\u003e\n\t\t\t\t\u003ca data-analytics-click=\"Blog, click on module, text: Go to Docs; ref_location:bottom recirculation;\" href=\"https://docs.github.com/\" target=\"_blank\" aria-label=\"Go to Docs\"\u003e\n\t\t\t\t\tGo to Docs\t\t\t\t\t\t\t\t\t\t\t\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"\u003e\u003cpath fill-rule=\"evenodd\" d=\"M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n\t\t\t\t\t\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\u003cdiv\u003e\n\t\t\u003cp\u003e\u003cimg src=\"https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg\" width=\"44\" height=\"44\" alt=\"GitHub\"/\u003e\u003c/p\u003e\u003ch3\u003e\n\t\t\tGitHub\t\t\u003c/h3\u003e\n\t\t\u003cp\u003eBuild what’s next on GitHub, the place for anyone from anywhere to build anything.\u003c/p\u003e\n\t\t\t\t\t\u003cp\u003e\n\t\t\t\t\u003ca data-analytics-click=\"Blog, click on module, text: Start building; ref_location:bottom recirculation;\" href=\"https://github.com/\" target=\"_blank\" aria-label=\"Start building\"\u003e\n\t\t\t\t\tStart building\t\t\t\t\t\t\t\t\t\t\t\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"\u003e\u003cpath fill-rule=\"evenodd\" d=\"M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n\t\t\t\t\t\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\u003cdiv\u003e\n\t\t\u003cp\u003e\u003cimg src=\"https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg\" width=\"44\" height=\"44\" alt=\"Customer stories\"/\u003e\u003c/p\u003e\u003ch3\u003e\n\t\t\tCustomer stories\t\t\u003c/h3\u003e\n\t\t\u003cp\u003eMeet the companies and engineering teams that build with GitHub.\u003c/p\u003e\n\t\t\t\t\t\u003cp\u003e\n\t\t\t\t\u003ca data-analytics-click=\"Blog, click on module, text: Learn more; ref_location:bottom recirculation;\" href=\"https://github.com/customer-stories\" target=\"_blank\" aria-label=\"Learn more\"\u003e\n\t\t\t\t\tLearn more\t\t\t\t\t\t\t\t\t\t\t\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"\u003e\u003cpath fill-rule=\"evenodd\" d=\"M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n\t\t\t\t\t\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\u003cdiv\u003e\n\t\t\u003cp\u003e\u003cimg src=\"https://github.blog/wp-content/uploads/2022/05/careers.svg\" width=\"44\" height=\"44\" alt=\"Enterprise content\"/\u003e\u003c/p\u003e\u003ch3\u003e\n\t\t\tEnterprise content\t\t\u003c/h3\u003e\n\t\t\u003cp\u003eExecutive insights, curated just for you\u003c/p\u003e\n\t\t\t\t\t\u003cp\u003e\n\t\t\t\t\u003ca data-analytics-click=\"Blog, click on module, text: Get started; ref_location:bottom recirculation;\" href=\"https://github.com/solutions/executive-insights\" target=\"_blank\" aria-label=\"Get started\"\u003e\n\t\t\t\t\tGet started\t\t\t\t\t\t\t\t\t\t\t\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"\u003e\u003cpath fill-rule=\"evenodd\" d=\"M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n\t\t\t\t\t\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\t\u003c/div\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "12 min read",
  "publishedTime": "2025-06-02T16:00:00Z",
  "modifiedTime": null
}
