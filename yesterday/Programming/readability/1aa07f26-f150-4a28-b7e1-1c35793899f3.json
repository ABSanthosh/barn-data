{
  "id": "1aa07f26-f150-4a28-b7e1-1c35793899f3",
  "title": "Claude Code Gains Support for Remote MCP Servers over Streamable HTTP",
  "link": "https://www.infoq.com/news/2025/06/anthropic-claude-remote-mcp/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "Anthropic has recently introduced support for connecting to remote MCP servers in Claude Code, allowing developers to integrate external tools and resources without manual local server setup. By Sergio De Simone",
  "author": "Sergio De Simone",
  "published": "Sun, 22 Jun 2025 20:00:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Claude",
    "Retrieval-Augmented Generation",
    "Anthropic",
    "Model Context Protocol (MCP)",
    "Development",
    "AI, ML \u0026 Data Engineering",
    "news"
  ],
  "byline": "Sergio De Simone",
  "length": 3584,
  "excerpt": "Anthropic has recently introduced support for connecting to remote MCP servers in Claude Code, allowing developers to integrate external tools and resources without manual local server setup.",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s1_20250605075448/apple-touch-icon.png",
  "text": "Anthropic has recently introduced support for connecting to remote MCP servers in Claude Code, allowing developers to integrate external tools and resources without manual local server setup. The new capability makes it easier for developers to pull context from their existing tools, including security services, project management systems, and knowledge bases. For example, a developer can use the Sentry MCP server to get a list of errors and issues in their project, check whether fixes are available, and apply them using Claude, all within a unified workflow. Additional integration examples include pulling data from APIs, accessing remote documentation, working with cloud services, collaborating on shared team resources, and more. Before Claude Code natively supported remote MCP server, developers had to set up a local MCP server to integrate it with their existing toolchain. Remote MCP servers offer a lower maintenance alternative to local servers: just add the vendor’s URL to Claude Code—no manual setup required. Vendors handle updates, scaling, and availability, so you can focus on building instead of managing server infrastructure. For authentication, Claude Code supports OAuth 2.0 over HTTP or SSE, allowing developers to authenticate directly through the terminal without needing to provide an API key. For example, here's how you can connect Claude Code to GitHub MCP: $ claude mcp add --transport sse github-server https://api.github.com/mcp \u003e/mcp The /mcp command, executed within Claude Code, opens an interactive menu that provides the option to authenticate using OAuth. This launches your browser to connect automatically to the OAuth provider. After successful authentication through the browser, Claude Code store the received access token locally. Several Reddit users commented on Anthropic's announcement, downplaying its significance and noting that, while convenient, this feature is far from being a game changer. Others, however, emphasized the importance of Claude Code gaining support for streamable HTTP as an alternative to stdio for connecting to MCP servers. According to Robert Matsukoa, former head of product engineering at Tripadvisor and currently CTO at Fractional, this is not just a convenient upgrade, but one that \"alters the economics of AI tool integration\": Remote servers eliminate infrastructure costs previously required for local MCP deployments. Teams no longer need to provision servers, manage updates, or handle scaling for MCP services. However, Matsukoa notes that using MCP servers tipically increases costs by 25-30% due to the larger contexts pulled from external sources and that remote MCPs, by making this task easier, can actually compound those costs. So, careful consideration is required as to where it makes sense: MCP's advantages emerge in scenarios requiring deep contextual integration: multi-repository debugging sessions, legacy system analysis requiring historical context, or workflows combining multiple data sources simultaneously. The protocol excels when Claude needs to maintain state across tool interactions or correlate information from disparate systems. Conversely, for workflows based on CLIs and standard APIs, he sees no need to go the MCP route. Anthropic published a list of MCP servers developed in collaboration with their respective creators, but a more extensive collection is available on GitHub. About the Author Sergio De Simone",
  "image": "https://res.infoq.com/news/2025/06/anthropic-claude-remote-mcp/en/headerimage/anthropic-claude-remote-mcp-1750621183655.jpeg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eAnthropic has recently introduced support for \u003ca href=\"https://www.anthropic.com/news/claude-code-remote-mcp\"\u003econnecting to remote MCP servers in Claude Code\u003c/a\u003e, allowing developers to integrate external tools and resources without manual local server setup.\u003c/p\u003e\n\n\u003cp\u003eThe new capability makes it easier for developers to pull context from their existing tools, including security services, project management systems, and knowledge bases. For example, a developer can use the Sentry MCP server to get a list of errors and issues in their project, check whether fixes are available, and apply them using Claude, all within a unified workflow.\u003c/p\u003e\n\n\u003cp\u003eAdditional integration examples include pulling data from APIs, accessing remote documentation, working with cloud services, collaborating on shared team resources, and more.\u003c/p\u003e\n\n\u003cp\u003eBefore Claude Code natively supported remote MCP server, developers had to set up a local MCP server to integrate it with their existing toolchain.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eRemote MCP servers offer a lower maintenance alternative to local servers: just add the vendor’s URL to Claude Code—no manual setup required. Vendors handle updates, scaling, and availability, so you can focus on building instead of managing server infrastructure.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eFor authentication, Claude Code supports OAuth 2.0 over HTTP or SSE, allowing developers to authenticate directly through the terminal without needing to provide an API key. For example, here\u0026#39;s how you can connect Claude Code to GitHub MCP:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e$ claude mcp add --transport sse github-server https://api.github.com/mcp\n\u0026gt;/mcp\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe \u003ccode\u003e/mcp\u003c/code\u003e command, executed within Claude Code, opens an interactive menu that provides the option to authenticate using OAuth. This launches your browser to connect automatically to the OAuth provider. After successful authentication through the browser, Claude Code store the received access token locally.\u003c/p\u003e\n\n\u003cp\u003eSeveral Reddit users commented on Anthropic\u0026#39;s announcement, downplaying its significance and noting that, \u003ca href=\"https://www.reddit.com/r/ClaudeAI/comments/1lemtxx/claude_code_now_supports_remote_mcp_servers_no/\"\u003ewhile convenient, this feature is far from being a game changer\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eOthers, however, emphasized the importance of Claude Code gaining \u003ca href=\"https://www.reddit.com/r/ClaudeAI/comments/1lecqrt/comment/myj0002/?utm_source=share\u0026amp;utm_medium=web3x\u0026amp;utm_name=web3xcss\u0026amp;utm_term=1\u0026amp;utm_content=share_button\"\u003esupport for streamable HTTP\u003c/a\u003e as an alternative to \u003ca href=\"https://modelcontextprotocol.io/specification/2025-03-26/basic/transports\"\u003estdio\u003c/a\u003e for connecting to MCP servers.\u003c/p\u003e\n\n\u003cp\u003eAccording to Robert Matsukoa, former head of product engineering at Tripadvisor and currently CTO at Fractional, \u003ca href=\"https://hyperdev.matsuoka.com/p/claude-code-remote-mcp\"\u003ethis is not just a convenient upgrade\u003c/a\u003e, but one that \u0026#34;alters the economics of AI tool integration\u0026#34;:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eRemote servers eliminate infrastructure costs previously required for local MCP deployments. Teams no longer need to provision servers, manage updates, or handle scaling for MCP services.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eHowever, Matsukoa notes that using MCP servers tipically increases costs by 25-30% due to the larger contexts pulled from external sources and that remote MCPs, by making this task easier, can actually compound those costs. So, careful consideration is required as to where it makes sense:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eMCP\u0026#39;s advantages emerge in scenarios requiring deep contextual integration: multi-repository debugging sessions, legacy system analysis requiring historical context, or workflows combining multiple data sources simultaneously. The protocol excels when Claude needs to maintain state across tool interactions or correlate information from disparate systems.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eConversely, for workflows based on CLIs and standard APIs, he sees no need to go the MCP route.\u003c/p\u003e\n\n\u003cp\u003eAnthropic published a \u003ca href=\"http://anthropic.com/partners/mcp\"\u003elist of MCP servers\u003c/a\u003e developed in collaboration with their respective creators, but a more extensive collection is available on \u003ca href=\"https://github.com/jaw9c/awesome-remote-mcp-servers\"\u003eGitHub\u003c/a\u003e.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Sergio-De-Simone\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eSergio De Simone\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": "2025-06-22T00:00:00Z",
  "modifiedTime": null
}
