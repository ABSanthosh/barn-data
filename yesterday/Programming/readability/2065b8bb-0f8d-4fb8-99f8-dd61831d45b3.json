{
  "id": "2065b8bb-0f8d-4fb8-99f8-dd61831d45b3",
  "title": "SAFe without silos in GitLab",
  "link": "https://about.gitlab.com/blog/2025/04/08/safe-without-silos-in-gitlab",
  "description": "",
  "author": "Amanda Rueda",
  "published": "2025-04-08T00:00:00.000Z",
  "source": "https://about.gitlab.com/atom.xml",
  "categories": null,
  "byline": "Amanda Rueda",
  "length": 9054,
  "excerpt": "Learn how to map the Scaled Agile Framework to the native capabilities of the DevSecOps platform and the advantages that come from doing so.",
  "siteName": "GitLab",
  "favicon": "https://about.gitlab.com/blog/nuxt-images/ico/favicon-192x192.png?cache=2022041",
  "text": "Let's talk about what happens when your organization adopts the Scaled Agile Framework (SAFe) to scale to enterprise levels. You've got multiple teams working on complex products, and you need a way to coordinate all that work. But here's a common headache: Your planning happens in one tool, while your actual development work lives somewhere else entirely. This divide creates real problems day-to-day. Developers jump between systems constantly. Product managers struggle to get an accurate picture of progress. And everyone wastes time manually copying information from one place to another. It's precisely the kind of disjointed experience that SAFe was designed to eliminate. While your development teams might already be using GitLab for source code management, CI/CD, and security, you may wonder whether GitLab can also support your planning needs within the SAFe framework. The good news is that GitLab's Agile project management capabilities offer strong support for SAFe, in this article, you'll learn how GitLab maps to SAFe concepts and ceremonies, all within the same DevSecOps platform your software developers already know and love. What is SAFe? SAFe, or the Scaled Agile Framework, is a way to bring Agile principles to large organizations without losing speed, alignment, or customer focus. It takes the iterative and flexible teamwork model of small teams and applies its principles across big organizations that have multiple teams, roadmaps, and stakeholders. This brings the organization into alignment, all planning and executing in the same direction. For product managers, SAFe helps connect strategy to execution so youâ€™re not just shipping fast, youâ€™re shipping the right things, backed by clear priorities and cross-team alignment. SAFe reduces silos, encourages collaboration, and helps teams rally around customer outcomes, not just tasks. When integrated in GitLab, the magic really happens: visibility, traceability, and delivery all live in one place. SAFe terminology in GitLab First, let's establish how SAFe concepts map to GitLab: SAFe GitLab Epic Top-level Epic Capability Sub-epic (Level 1) Feature Sub-epic (Level 2) User Story Issue Task Task Team Custom Field / Scoped Label Sprint Iteration Program Increment (PI) Milestone Value Stream Top-level Group Agile Release Train (ART) Top-level Group With this mapping as your guide, you can set up GitLab to mirror your SAFe implementation. The group structure lets you organize around your value streams and ARTs, while the work item hierarchy (with up to seven levels of nested epics!) gives you all the depth you need for complex product portfolios. Whether you're working at the portfolio level (with top-level groups), program level (with subgroups), or team level (with projects), GitLab's organizational structure aligns perfectly with SAFe's hierarchy. Supporting SAFe ceremonies in GitLab Now for the fun part - how do you actually run your SAFe ceremonies in GitLab? Let's walk through each one. PI planning To facilitate the cross-team alignment and dependency management that makes PI planning successful, GitLab offers several capabilities: Use the Roadmap view to visualize features across teams and time periods Assign features to the PI milestone Document and visualize cross-team dependencies as they're identified GitLab gives you flexibility for PI planning through both the Epic boards (which can be configured to show team assignments) and the Roadmap view (which shows features over time like a Gantt chart). You can switch between these views during your planning session depending on whether you're focusing on the timeline or team organization. Refinement As a product manager, running effective refinement sessions means having clear visibility into your feature backlog. You can run your refinement session right inside GitLab. No more updating one tool during the meeting and then having to update another tool afterward. GitLab powers refinement sessions with: Epic boards that group features based on status The ability to view story points directly in the overview Comprehensive drawer views that let you interact with work items without losing context The ability to create and link child issues directly from epics Sprint planning When it's time to figure out what your team can tackle in the next sprint, GitLab gives you: Issue boards that provide a comprehensive view of your backlog Total weight of user stories displayed directly on boards The ability to easily move issues between iterations A collapsible view that simplifies moving stories between sprints This means you can keep everything in one place and spend your planning meetings actually planning instead of jumping between tools. ðŸ’¡ Check out this tutorial on using GitLab to facilitate Scrum for a detailed glimpse into the power of GitLab in Agile planning and sprint tracking. Daily stand-ups Your team can gather around the board during daily stand-ups and actually see what everyone's working on, what's stuck, and what's ready for review â€“ all in one view. For your dev team's daily stand-ups, GitLab lets you: Create iteration-scoped boards that show the current sprint's work Display story points/weights directly on cards Use the drawer view to access details without leaving the context Highlight tasks at risk through health status Sprint review Want to know how your team is doing over time? GitLab provides comprehensive metrics with: Burndown and burnup charts for iterations Velocity tracking Lead and cycle time metrics Dashboards that can be scoped to teams These metrics help you understand if your team is getting faster, where they're getting stuck, and what you might want to talk about in your next retrospective. 5 reasons a unified platform provides an advantage I know there are plenty of planning tools that can handle SAFe ceremonies. But there are game-changing reasons why I genuinely believe GitLab is different: No more context switching - Your planning, coding, testing, and security all happen in one place. Everything's connected - You can trace work from the big epic down to the code and deployment. Everyone's on the same page - Developers, product folks, and security teams all work together in the same tool. Total visibility - Stakeholders have one place to check for updates. The full picture - You see planning and development metrics together, so you know what's really going on. If your dev teams already love GitLab, why make them jump to another tool for planning or create some complex, cobbled-together integrations? Bringing your SAFe planning into GitLab creates a much smoother experience for everyone. Implementation principles I've worked with teams transitioning from traditional SAFe tools to GitLab, and here's what I've learned: Focus on what each ceremony is trying to accomplish, not on recreating exact replicas of your old tools. The teams that get the most out of GitLab are the ones who embrace its native capabilities instead of fighting against them. Yes, it takes some initial work to figure out how to map your SAFe concepts and set up your workflows. But once you do, you'll find your processes actually get simpler rather than more complex. The key is defining conventions that everyone follows. Which labels mean what? How will you track teams? What goes in an epic versus an issue? With a little upfront investment in these decisions, you'll end up with an intuitive system that eliminates all that cross-tool coordination overhead. Getting started Ready to give this a shot? Here's how to start implementing SAFe in GitLab: Set up your structure - Create groups and subgroups that match your organization. Define your work breakdown - Decide how you'll use epics, issues, and tasks. Create your iterations - Set up your sprint schedule. Add your milestones - Milestones will represent your Program Increments in GitLab. Build your boards - Create different views for different ceremonies. Agree on conventions - Document how you'll use labels and custom fields. Taking time to think through these decisions upfront will save you many headaches later. And remember, you don't have to perfect it on day one - you can always adjust as you learn. Bringing it all together GitLab gives you a solid foundation for running SAFe, especially if your dev teams are already GitLab fans. When you bring planning and development into the same tool, you eliminate those painful handoffs, make collaboration way easier, and get everything moving faster. The beauty of GitLab's planning tools is that they're flexible enough to adapt to your specific flavor of SAFe. You're not locked into rigid workflows - you can evolve your approach as your teams mature and your needs change. Ready to see how much better life is without those planning silos? Start your free trial today and experience firsthand how GitLab can transform your SAFe implementation. ðŸ’¡ If you liked this topic check out this related post - GitLab for Agile Software Development",
  "image": "https://images.ctfassets.net/r9o86ar0p03f/2hcwWx49wQ7CHfvhhkVH6S/ecf8d19af8b2652d101784738c0df8df/blog-image-template-1800x945__11_.png?fm=webp\u0026w=820\u0026h=500",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv data-v-37f1022b=\"\" data-v-53094866=\"\" data-v-74bd29c6=\"\"\u003e\u003cp\u003eLet\u0026#39;s talk about what happens when your organization adopts the Scaled Agile Framework (SAFe) to scale to enterprise levels. You\u0026#39;ve got multiple teams working on complex products, and you need a way to coordinate all that work. But here\u0026#39;s a common headache: Your planning happens in one tool, while your actual development work lives somewhere else entirely.\u003c/p\u003e\n\u003cp\u003eThis divide creates real problems day-to-day. Developers jump between systems constantly. Product managers struggle to get an accurate picture of progress. And everyone wastes time manually copying information from one place to another. It\u0026#39;s precisely the kind of disjointed experience that SAFe was designed to eliminate.\u003c/p\u003e\n\u003cp\u003eWhile your development teams might already be using GitLab for source code management, CI/CD, and security, you may wonder whether GitLab can also support your planning needs within the SAFe framework. The good news is that GitLab\u0026#39;s Agile project management capabilities offer strong support for SAFe, in this article, you\u0026#39;ll learn how GitLab maps to SAFe concepts and ceremonies, all within the same DevSecOps platform your software developers already know and love.\u003c/p\u003e\n\u003ch2 id=\"what-is-safe%3F\" tabindex=\"-1\"\u003eWhat is SAFe? \u003ca href=\"#what-is-safe%3F\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eSAFe, or the Scaled Agile Framework, is a way to bring Agile principles to large organizations without losing speed, alignment, or customer focus. It takes the iterative and flexible teamwork model of small teams and applies its principles across big organizations that have multiple teams, roadmaps, and stakeholders. This brings the organization into alignment, all planning and executing in the same direction. For product managers, SAFe helps connect strategy to execution so youâ€™re not just shipping fast, youâ€™re shipping the right things, backed by clear priorities and cross-team alignment.\u003c/p\u003e\n\u003cp\u003eSAFe reduces silos, encourages collaboration, and helps teams rally around customer outcomes, not just tasks. When integrated in GitLab, the magic really happens: visibility, traceability, and delivery all live in one place.\u003c/p\u003e\n\u003ch2 id=\"safe-terminology-in-gitlab\" tabindex=\"-1\"\u003eSAFe terminology in GitLab \u003ca href=\"#safe-terminology-in-gitlab\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eFirst, let\u0026#39;s establish how SAFe concepts map to GitLab:\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eSAFe\u003c/th\u003e\n\u003cth\u003eGitLab\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eEpic\u003c/td\u003e\n\u003ctd\u003eTop-level Epic\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eCapability\u003c/td\u003e\n\u003ctd\u003eSub-epic (Level 1)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eFeature\u003c/td\u003e\n\u003ctd\u003eSub-epic (Level 2)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eUser Story\u003c/td\u003e\n\u003ctd\u003eIssue\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eTask\u003c/td\u003e\n\u003ctd\u003eTask\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eTeam\u003c/td\u003e\n\u003ctd\u003eCustom Field / Scoped Label\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eSprint\u003c/td\u003e\n\u003ctd\u003eIteration\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eProgram Increment (PI)\u003c/td\u003e\n\u003ctd\u003eMilestone\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eValue Stream\u003c/td\u003e\n\u003ctd\u003eTop-level Group\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eAgile Release Train (ART)\u003c/td\u003e\n\u003ctd\u003eTop-level Group\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eWith this mapping as your guide, you can set up GitLab to mirror your SAFe implementation. The group structure lets you organize around your value streams and ARTs, while the work item hierarchy (with up to seven levels of nested epics!) gives you all the depth you need for complex product portfolios. Whether you\u0026#39;re working at the portfolio level (with top-level groups), program level (with subgroups), or team level (with projects), GitLab\u0026#39;s organizational structure aligns perfectly with SAFe\u0026#39;s hierarchy.\u003c/p\u003e\n\u003ch2 id=\"supporting-safe-ceremonies-in-gitlab\" tabindex=\"-1\"\u003eSupporting SAFe ceremonies in GitLab \u003ca href=\"#supporting-safe-ceremonies-in-gitlab\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eNow for the fun part - how do you actually run your SAFe ceremonies in GitLab? Let\u0026#39;s walk through each one.\u003c/p\u003e\n\u003ch3 id=\"pi-planning\" tabindex=\"-1\"\u003ePI planning \u003ca href=\"#pi-planning\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eTo facilitate the cross-team alignment and dependency management that makes PI planning successful, GitLab offers several capabilities:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse the \u003ca href=\"https://docs.gitlab.com/user/group/roadmap/\"\u003eRoadmap\u003c/a\u003e view to visualize features across teams and time periods\u003c/li\u003e\n\u003cli\u003eAssign features to the PI \u003ca href=\"https://docs.gitlab.com/user/project/milestones/\"\u003emilestone\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDocument and visualize cross-team \u003ca href=\"https://docs.gitlab.com/user/project/issues/related_issues/#blocking-issues\"\u003edependencies\u003c/a\u003e as they\u0026#39;re identified\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eGitLab gives you flexibility for PI planning through both the Epic boards (which can be configured to show team assignments) and the Roadmap view (which shows features over time like a Gantt chart). You can switch between these views during your planning session depending on whether you\u0026#39;re focusing on the timeline or team organization.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/36C6eDLeIoRoZLCWJuYcQW/ed58a4a3c323f4cb6675e342f7298d3b/image3.gif\" alt=\"Roadmap view and epic board\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/6WhPdthteizqh23lNGTnJp/86a4348773fa37f2ab0ce7c99774bde2/image5.png\" alt=\"Roadmap view with Gantt chart\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"refinement\" tabindex=\"-1\"\u003eRefinement \u003ca href=\"#refinement\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eAs a product manager, running effective refinement sessions means having clear visibility into your feature backlog. You can run your refinement session right inside GitLab. No more updating one tool during the meeting and then having to update another tool afterward.\u003c/p\u003e\n\u003cp\u003eGitLab powers refinement sessions with:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.gitlab.com/user/group/epics/epic_boards/\"\u003eEpic boards\u003c/a\u003e that group features based on status\u003c/li\u003e\n\u003cli\u003eThe ability to view story points directly in the \u003ca href=\"https://docs.gitlab.com/user/group/epics/epic_boards/#view-count-of-issues-weight-and-progress-of-an-epic\"\u003eoverview\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eComprehensive \u003ca href=\"https://docs.gitlab.com/user/group/epics/manage_epics/#open-epics-in-a-drawer\"\u003edrawer views\u003c/a\u003e that let you interact with work items without losing context\u003c/li\u003e\n\u003cli\u003eThe ability to create and link \u003ca href=\"https://docs.gitlab.com/user/group/epics/manage_epics/#add-an-issue-to-an-epic\"\u003echild issues\u003c/a\u003e directly from epics\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/7iQ3GYsmXEEDUHrmqu0jeE/abc6943f5eecc345dc304de8b158f373/image2.gif\" alt=\"SAFe - image 3\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"sprint-planning\" tabindex=\"-1\"\u003eSprint planning \u003ca href=\"#sprint-planning\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eWhen it\u0026#39;s time to figure out what your team can tackle in the next sprint, GitLab gives you:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.gitlab.com/user/project/issue_board/\"\u003eIssue boards\u003c/a\u003e that provide a comprehensive view of your backlog\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.gitlab.com/user/project/issue_board/#sum-of-issue-weights\"\u003eTotal weight\u003c/a\u003e of user stories displayed directly on boards\u003c/li\u003e\n\u003cli\u003eThe ability to easily move issues between iterations\u003c/li\u003e\n\u003cli\u003eA collapsible view that simplifies moving stories between sprints\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThis means you can keep everything in one place and spend your planning meetings actually planning instead of jumping between tools.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/7KXnAye9JcMZsv7exICm41/a9ee23c95b58c172bd59e61410e58ef6/image4.gif\" alt=\"Sprint planning with GitLab\"/\u003e\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eðŸ’¡ Check out \u003ca href=\"https://docs.gitlab.com/tutorials/scrum_events/\"\u003ethis tutorial on using GitLab to facilitate Scrum\u003c/a\u003e for a detailed glimpse into the power of GitLab in Agile planning and sprint tracking.\u003c/em\u003e\u003c/p\u003e\n\u003ch3 id=\"daily-stand-ups\" tabindex=\"-1\"\u003eDaily stand-ups \u003ca href=\"#daily-stand-ups\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eYour team can gather around the board during daily stand-ups and actually see what everyone\u0026#39;s working on, what\u0026#39;s stuck, and what\u0026#39;s ready for review â€“ all in one view. For your dev team\u0026#39;s daily stand-ups, GitLab lets you:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate \u003ca href=\"https://docs.gitlab.com/user/project/issue_board/#iteration-lists\"\u003eiteration-scoped\u003c/a\u003e boards that show the current sprint\u0026#39;s work\u003c/li\u003e\n\u003cli\u003eDisplay story points/weights directly on cards\u003c/li\u003e\n\u003cli\u003eUse the \u003ca href=\"https://docs.gitlab.com/user/project/issues/managing_issues/#open-issues-in-a-drawer\"\u003edrawer view\u003c/a\u003e to access details without leaving the context\u003c/li\u003e\n\u003cli\u003eHighlight tasks at risk through \u003ca href=\"https://docs.gitlab.com/user/project/issues/managing_issues/#health-status\"\u003ehealth status\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/5cgUJA6M5ETQYRRzZf69H4/e096a8fc83dbed23b6cdbb1985f03c0b/image6.png\" alt=\"Daily stand-up board\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"sprint-review\" tabindex=\"-1\"\u003eSprint review \u003ca href=\"#sprint-review\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eWant to know how your team is doing over time? GitLab provides comprehensive metrics with:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.gitlab.com/user/group/iterations/#iteration-burndown-and-burnup-charts\"\u003eBurndown and burnup charts\u003c/a\u003e for iterations\u003c/li\u003e\n\u003cli\u003eVelocity tracking\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.gitlab.com/user/group/value_stream_analytics/#lifecycle-metrics\"\u003eLead and cycle time\u003c/a\u003e metrics\u003c/li\u003e\n\u003cli\u003eDashboards that can be scoped to teams\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThese metrics help you understand if your team is getting faster, where they\u0026#39;re getting stuck, and what you might want to talk about in your next retrospective.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/3GNP6KYmKdufFseYk5xXS/786c8fcc0331248e285fc7a72ee39e01/image1.png\" alt=\"Burndown and burnup charts\"/\u003e\u003c/p\u003e\n\u003ch2 id=\"5-reasons-a-unified-platform-provides-an-advantage\" tabindex=\"-1\"\u003e5 reasons a unified platform provides an advantage \u003ca href=\"#5-reasons-a-unified-platform-provides-an-advantage\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eI know there are plenty of planning tools that can handle SAFe ceremonies. But there are game-changing reasons why I genuinely believe GitLab is different:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eNo more context switching\u003c/strong\u003e - Your planning, coding, testing, and security all happen in one place.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eEverything\u0026#39;s connected\u003c/strong\u003e - You can trace work from the big epic down to the code and deployment.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eEveryone\u0026#39;s on the same page\u003c/strong\u003e - Developers, product folks, and security teams all work together in the same tool.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTotal visibility\u003c/strong\u003e - Stakeholders have one place to check for updates.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eThe full picture\u003c/strong\u003e - You see planning and development metrics together, so you know what\u0026#39;s really going on.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eIf your dev teams already love GitLab, why make them jump to another tool for planning or create some complex, cobbled-together integrations? Bringing your SAFe planning into GitLab creates a much smoother experience for everyone.\u003c/p\u003e\n\u003ch2 id=\"implementation-principles\" tabindex=\"-1\"\u003eImplementation principles \u003ca href=\"#implementation-principles\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eI\u0026#39;ve worked with teams transitioning from traditional SAFe tools to GitLab, and here\u0026#39;s what I\u0026#39;ve learned: Focus on \u003cstrong\u003ewhat each ceremony is trying to accomplish\u003c/strong\u003e, not on recreating exact replicas of your old tools.\u003c/p\u003e\n\u003cp\u003eThe teams that get the most out of GitLab are the ones who embrace its native capabilities instead of fighting against them. Yes, it takes some initial work to figure out how to map your SAFe concepts and set up your workflows. But once you do, you\u0026#39;ll find your processes actually get simpler rather than more complex.\u003c/p\u003e\n\u003cp\u003eThe key is defining conventions that everyone follows. Which labels mean what? How will you track teams? What goes in an epic versus an issue? With a little upfront investment in these decisions, you\u0026#39;ll end up with an intuitive system that eliminates all that cross-tool coordination overhead.\u003c/p\u003e\n\u003ch2 id=\"getting-started\" tabindex=\"-1\"\u003eGetting started \u003ca href=\"#getting-started\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eReady to give this a shot? Here\u0026#39;s how to start implementing SAFe in GitLab:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eSet up your structure\u003c/strong\u003e - Create groups and subgroups that \u003ca href=\"https://about.gitlab.com/blog/2024/07/22/best-practices-to-set-up-organizational-hierarchies-that-scale/\"\u003ematch your organization\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDefine your work breakdown\u003c/strong\u003e - Decide how you\u0026#39;ll use \u003ca href=\"https://about.gitlab.com/blog/2024/02/06/unlocking-agile-excellence-gitlab-epics-for-seamless-portfolio-management/\"\u003eepics\u003c/a\u003e, \u003ca href=\"https://docs.gitlab.com/user/project/issues/managing_issues/\"\u003eissues\u003c/a\u003e, and \u003ca href=\"https://docs.gitlab.com/user/tasks/\"\u003etasks\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eCreate your iterations\u003c/strong\u003e - Set up your \u003ca href=\"https://docs.gitlab.com/user/group/iterations/#create-an-iteration-cadence\"\u003esprint schedule\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eAdd your milestones\u003c/strong\u003e - \u003ca href=\"https://docs.gitlab.com/user/project/milestones/#create-a-milestone\"\u003eMilestones\u003c/a\u003e will represent your Program Increments in GitLab.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eBuild your boards\u003c/strong\u003e - Create different views for different ceremonies.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eAgree on conventions\u003c/strong\u003e - Document how you\u0026#39;ll use labels and custom fields.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTaking time to think through these decisions upfront will save you many headaches later. And remember, you don\u0026#39;t have to perfect it on day one - you can always adjust as you learn.\u003c/p\u003e\n\u003ch2 id=\"bringing-it-all-together\" tabindex=\"-1\"\u003eBringing it all together \u003ca href=\"#bringing-it-all-together\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eGitLab gives you a solid foundation for running SAFe, especially if your dev teams are already GitLab fans. When you bring planning and development into the same tool, you eliminate those painful handoffs, make collaboration way easier, and get everything moving faster.\u003c/p\u003e\n\u003cp\u003eThe beauty of GitLab\u0026#39;s planning tools is that they\u0026#39;re flexible enough to adapt to your specific flavor of SAFe. You\u0026#39;re not locked into rigid workflows - you can evolve your approach as your teams mature and your needs change.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eReady to see how much better life is without those planning silos? \u003ca href=\"https://about.gitlab.com/free-trial/\"\u003eStart your free trial today\u003c/a\u003e and experience firsthand how GitLab can transform your SAFe implementation.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cem\u003eðŸ’¡ If you liked this topic check out this related post - \u003ca href=\"https://about.gitlab.com/blog/gitlab-for-agile-software-development/\"\u003eGitLab for Agile Software Development\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "10 min read",
  "publishedTime": "2025-04-08T00:00:00Z",
  "modifiedTime": null
}
