{
  "id": "ff51491c-5f9a-4f0a-ba05-7cb7f09a29b2",
  "title": "Java News Roundup: Java Operator SDK 5.0, Open Liberty, Quarkus MCP, Vert.x, JBang, TornadoVM",
  "link": "https://www.infoq.com/news/2025/02/java-news-roundup-jan27-2025/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "This week's Java roundup for January 27th, 2025 features news highlighting: the GA release of Java Operator SDK 5.0; the January 2025 release of Open Liberty; an implementation of Model Context Protocol in Quarkus; the fourth milestone release of Vert.x 5.0; and point releases of JBang 0.123.0 and TornadoVM 1.0.10. By Michael Redlich",
  "author": "Michael Redlich",
  "published": "Mon, 03 Feb 2025 12:30:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Quarkus",
    "TornadoVM",
    "Vert.x",
    "Java",
    "JDK 24",
    "JBang",
    "Apache Camel",
    "JDK 25",
    "Open Liberty",
    "Infinispan",
    "Java Operator SDK",
    "Spring Cloud",
    "JHipster",
    "Development",
    "Architecture \u0026 Design",
    "news"
  ],
  "byline": "Michael Redlich",
  "length": 6104,
  "excerpt": "This week's Java roundup for January 27th, 2025 features news highlighting: the GA release of Java Operator SDK 5.0; the January 2025 release of Open Liberty; an implementation of Model Context Protoc",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s1_20250129235850/apple-touch-icon.png",
  "text": "This week's Java roundup for January 27th, 2025 features news highlighting: the GA release of Java Operator SDK 5.0; the January 2025 release of Open Liberty; an implementation of Model Context Protocol in Quarkus; the fourth milestone release of Vert.x 5.0; and point releases of JBang 0.123.0 and TornadoVM 1.0.10. JDK 24 Build 34 of the JDK 24 early-access builds was made available this past week featuring updates from Build 33 that include fixes for various issues. Further details on this release may be found in the release notes. JDK 25 Build 8 of the JDK 25 early-access builds was also made available this past week featuring updates from Build 7 that include fixes for various issues. More details on this release may be found in the release notes. For JDK 24 and JDK 25, developers are encouraged to report bugs via the Java Bug Database. TornadoVM TornadoVM 1.0.10 features bug fixes, compatibility enhancements, and improvements: a new command-line option, -Dtornado.spirv.runtimes, to select individual (Level Zero and/or OpenCL) runtimes for dispatching and managing SPIR-V; and support for multiplication of matrices using the HalfFloat type. Further details on this release may be found in the release notes. Spring Framework The first milestone release of Spring Cloud 2025.0.0, codenamed Northfields, features bug fixes and notable updates to sub-projects: Spring Cloud Kubernetes 3.3.0-M1; Spring Cloud Function 4.3.0-M1; Spring Cloud Stream 4.3.0-M1; and Spring Cloud Circuit Breaker 3.3.0-M1. This release is based upon Spring Boot 3.5.0-M1. More details on this release may be found in the release notes. Open Liberty IBM has released version 25.0.0.1 of Open Liberty featuring updated Open Liberty features - Batch API (batch-1.0), Jakarta Batch 2.0 (batch-2.0), Jakarta Batch 2.1 (batch-2.1), Java Connector Architecture Security Inflow 1.0 (jcaInboundSecurity-1.0), Jakarta Connectors Inbound Security 2.0 (connectorsInboundSecurity-2.0) - to support InstantOn; and a more simplified web module migration with the introduction of the webModuleClassPathLoader configuration attribute for the enterpriseApplication element that controls what class loader is used for the JARs that are referenced by a web module Class-Path attribute. Quarkus The release of Quarkus 3.18.0 provides bug fixes, dependency upgrades and notable changes such as; an integration of Micrometer to the WebSockets Next extension; support for a JWT bearer client authentication in the OpenID Connect and OpenID Connect Client extensions using client assertions loaded from the filesystem; and a new extension, OpenID Connect Redis Token State Manager to store an OIDC connect token state in a Redis cache datasource. Further details on this release may be found in the changelog. The Quarkus team has also introduced their own implementation of the Model Context Protocol (MCP) protocol featuring three servers so far: JDBC, Filesystem and JavaFX. These servers have been tested with Claude for Desktop, Model Context Protocol CLI and Goose clients. The team recommends using JBang to use these servers for ease of use, but isn't required. Apache Software Foundation Maintaining alignment with Quarkus, the release of Camel Quarkus 3.18.0, composed of Camel 4.9.0 and Quarkus 3.18.0, provides resolutions to notable issues such as: the Kamelet extension unable to serialize objects from an instance of the ClasspathResolver, an inner class defined in the DefaultResourceResolvers, to bytecode; and the Debezium BOM adversely affects the unit tests from the Cassandra CQL extension driver since the release of Debezium 1.19.2.Final. More details on this release may be found in the release notes. Infinispan The release of Infinispan 15.1.5 features dependency upgrades and resolutions to issues such as: a NullPointerException due to a concurrent removal with the DELETE statement causing the cache::removeAsync statement to return null; and an instance of the HotRodUpgradeContainerSSLTest class crashes the test suite due to an instance of the PersistenceManagerImpl class failing to start. Further details on this release may be found in the release notes. Java Operator SDK The release of Java Operator SDK 5.0.0 ships with continuous improvements on new features such as: the Kubernetes Server-Side Apply elevated to a first-class citizen with a default approach for patching the status resource; and a change in responsibility with the EventSource interface to monitor the resources and handles accessing the cached resources, filtering, and additional capabilities that was once maintained by the ResourceEventSource subinterface. More details on this release may be found in the release notes. JBang JBang 0.123.0 provides bug fixes, improvements in documentation and new features: the options, such as add-open and exports, in a bundled MANIFEST.MF file are now honored; and the addition of Cursor, the AI code editor, in the list of supported IDEs. Further details on this release may be found in the release notes. Eclipse Vert.x The fourth release candidate of Eclipse Vert.x 5.0 delivers notable changes such as: the removal of deprecated classes - ServiceAuthInterceptor and ProxyHelper - along with the two of the overloaded addInterceptor() methods defined in the ServiceBinder class; and support for the Java Platform Module System (JPMS). More details on this release may be found in the release notes and deprecations and breaking changes. JHipster Versions 1.26.0 and 1.25.0 of JHipster Lite (announced here and here, respectively) ship with bug fixes, dependency upgrades and new features/enhancements such as: new datasource modules for PostgreSQL, MariaDB, MySQL and MSSQL; and a restructured state ranking system for modules. Version 1.26.0 also represents the 100th release of JHipster Lite. Further details on these releases may be found in the release notes for version 1.26.0 and version 1.25.0. About the Author Michael Redlich",
  "image": "https://res.infoq.com/news/2025/02/java-news-roundup-jan27-2025/en/headerimage/java-istock-image-01-1738585710052.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eThis week\u0026#39;s Java roundup for January 27th, 2025 features news highlighting: the GA release of Java Operator SDK 5.0; the January 2025 release of Open Liberty; an implementation of Model Context Protocol in Quarkus; the fourth milestone release of Vert.x 5.0; and point releases of JBang 0.123.0 and TornadoVM 1.0.10.\u003c/p\u003e\n\n\u003ch4\u003eJDK 24\u003c/h4\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/openjdk/jdk/releases/tag/jdk-24%2B34\"\u003eBuild 34\u003c/a\u003e of the JDK 24 \u003ca href=\"https://jdk.java.net/24/\"\u003eearly-access builds\u003c/a\u003e was made available this past week featuring \u003ca href=\"https://github.com/openjdk/jdk/compare/jdk-24%2B33...jdk-24%2B34\"\u003eupdates\u003c/a\u003e from Build 33 that include fixes for various \u003ca href=\"https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2024%20and%20%22resolved%20in%20build%22%20%3D%20b34%20order%20by%20component%2C%20subcomponent\"\u003eissues\u003c/a\u003e. Further details on this release may be found in the \u003ca href=\"https://jdk.java.net/24/release-notes\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eJDK 25\u003c/h4\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/openjdk/jdk/releases/tag/jdk-25%2B8\"\u003eBuild 8\u003c/a\u003e of the JDK 25 \u003ca href=\"https://jdk.java.net/25/\"\u003eearly-access builds\u003c/a\u003e was also made available this past week featuring \u003ca href=\"https://github.com/openjdk/jdk/compare/jdk-25%2B7...jdk-25%2B8\"\u003eupdates\u003c/a\u003e from Build 7 that include fixes for various \u003ca href=\"https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2025%20and%20%22resolved%20in%20build%22%20%3D%20b08%20order%20by%20component%2C%20subcomponent\"\u003eissues\u003c/a\u003e. More details on this release may be found in the \u003ca href=\"https://jdk.java.net/25/release-notes\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eFor \u003ca href=\"https://openjdk.org/projects/jdk/24/\"\u003eJDK 24\u003c/a\u003e and \u003ca href=\"https://openjdk.org/projects/jdk/25/\"\u003eJDK 25\u003c/a\u003e, developers are encouraged to report bugs via the \u003ca href=\"https://bugreport.java.com/bugreport/\"\u003eJava Bug Database\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eTornadoVM\u003c/h4\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.tornadovm.org/\"\u003eTornadoVM\u003c/a\u003e 1.0.10 features bug fixes, compatibility enhancements, and improvements: a new command-line option, \u003cstrong\u003e\u003ccode\u003e-Dtornado.spirv.runtimes\u003c/code\u003e\u003c/strong\u003e, to select individual (Level Zero and/or OpenCL) runtimes for dispatching and managing \u003ca href=\"https://www.khronos.org/api/index_2017/spirv\"\u003eSPIR-V\u003c/a\u003e; and support for multiplication of matrices using the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/beehive-lab/TornadoVM/blob/master/tornado-api/src/main/java/uk/ac/manchester/tornado/api/types/HalfFloat.java\"\u003eHalfFloat\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e type. Further details on this release may be found in the \u003ca href=\"https://github.com/beehive-lab/TornadoVM/releases/tag/v1.0.10\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eSpring Framework\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://spring.io/blog/2025/01/30/spring-cloud-2025-0-0-M1-aka-northfields-has-been-released\"\u003efirst milestone release\u003c/a\u003e of \u003ca href=\"https://spring.io/projects/spring-cloud\"\u003eSpring Cloud\u003c/a\u003e 2025.0.0, codenamed Northfields, features bug fixes and notable updates to sub-projects: \u003ca href=\"https://spring.io/projects/spring-cloud-kubernetes\"\u003eSpring Cloud Kubernetes\u003c/a\u003e 3.3.0-M1; \u003ca href=\"https://spring.io/projects/spring-cloud-function\"\u003eSpring Cloud Function\u003c/a\u003e 4.3.0-M1; \u003ca href=\"https://spring.io/projects/spring-cloud-stream\"\u003eSpring Cloud Stream\u003c/a\u003e 4.3.0-M1; and \u003ca href=\"https://spring.io/projects/spring-cloud-circuitbreaker\"\u003eSpring Cloud Circuit Breaker\u003c/a\u003e 3.3.0-M1. This release is based upon Spring Boot 3.5.0-M1. More details on this release may be found in the \u003ca href=\"https://github.com/spring-cloud/spring-cloud-release/wiki/Spring-Cloud-2025.0-Release-Notes\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eOpen Liberty\u003c/h4\u003e\n\n\u003cp\u003eIBM has \u003ca href=\"https://openliberty.io/blog/2025/01/28/25.0.0.1.html\"\u003ereleased\u003c/a\u003e version 25.0.0.1 of \u003ca href=\"https://openliberty.io/\"\u003eOpen Liberty\u003c/a\u003e featuring updated Open Liberty features - \u003ca href=\"https://openliberty.io/docs/latest/reference/feature/batch-1.0.html\"\u003eBatch API\u003c/a\u003e (\u003cstrong\u003e\u003ccode\u003ebatch-1.0\u003c/code\u003e\u003c/strong\u003e), \u003ca href=\"https://openliberty.io/docs/latest/reference/feature/batch-2.0.html\"\u003eJakarta Batch 2.0\u003c/a\u003e (\u003cstrong\u003e\u003ccode\u003ebatch-2.0\u003c/code\u003e\u003c/strong\u003e), \u003ca href=\"https://openliberty.io/docs/latest/reference/feature/batch-2.1.html\"\u003eJakarta Batch 2.1\u003c/a\u003e (\u003cstrong\u003e\u003ccode\u003ebatch-2.1\u003c/code\u003e\u003c/strong\u003e), \u003ca href=\"https://openliberty.io/docs/latest/reference/feature/jcaInboundSecurity-1.0.html\"\u003eJava Connector Architecture Security Inflow 1.0\u003c/a\u003e (\u003cstrong\u003e\u003ccode\u003ejcaInboundSecurity-1.0\u003c/code\u003e\u003c/strong\u003e), \u003ca href=\"https://openliberty.io/docs/latest/reference/feature/connectorsInboundSecurity-2.0.html\"\u003eJakarta Connectors Inbound Security 2.0\u003c/a\u003e (\u003cstrong\u003e\u003ccode\u003econnectorsInboundSecurity-2.0\u003c/code\u003e\u003c/strong\u003e) - to support \u003ca href=\"https://openliberty.io/blog/2023/06/27/23.0.0.6.html#InstantOn\"\u003eInstantOn\u003c/a\u003e; and a more simplified web module migration with the introduction of the \u003cstrong\u003e\u003ccode\u003ewebModuleClassPathLoader\u003c/code\u003e\u003c/strong\u003e configuration attribute for the \u003cstrong\u003e\u003ccode\u003eenterpriseApplication\u003c/code\u003e\u003c/strong\u003e element that controls what class loader is used for the JARs that are referenced by a web module \u003cstrong\u003e\u003ccode\u003eClass-Path\u003c/code\u003e\u003c/strong\u003e attribute.\u003c/p\u003e\n\n\u003ch4\u003eQuarkus\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://quarkus.io/blog/quarkus-3-18-1-released/\"\u003erelease\u003c/a\u003e of \u003ca href=\"https://quarkus.io/\"\u003eQuarkus\u003c/a\u003e 3.18.0 provides bug fixes, dependency upgrades and notable changes such as; an integration of \u003ca href=\"https://micrometer.io/\"\u003eMicrometer\u003c/a\u003e to the \u003ca href=\"https://quarkus.io/extensions/io.quarkus/quarkus-websockets-next/\"\u003eWebSockets Next\u003c/a\u003e extension; support for a JWT bearer client authentication in the \u003ca href=\"https://quarkus.io/extensions/io.quarkus/quarkus-oidc/\"\u003eOpenID Connect\u003c/a\u003e and \u003ca href=\"https://quarkus.io/extensions/io.quarkus/quarkus-oidc-client/\"\u003eOpenID Connect Client\u003c/a\u003e extensions using client assertions loaded from the filesystem; and a new extension, \u003ca href=\"https://quarkus.io/extensions/io.quarkus/quarkus-oidc-redis-token-state-manager/\"\u003eOpenID Connect Redis Token State Manager\u003c/a\u003e to store an OIDC connect token state in a Redis cache datasource. Further details on this release may be found in the \u003ca href=\"https://github.com/quarkusio/quarkus/releases/tag/3.18.1\"\u003echangelog\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe Quarkus team has also \u003ca href=\"https://quarkus.io/blog/introducing-mcp-servers/\"\u003eintroduced\u003c/a\u003e their own \u003ca href=\"https://github.com/quarkiverse/quarkus-mcp-servers/blob/main/README.md\"\u003eimplementation\u003c/a\u003e of the \u003ca href=\"https://modelcontextprotocol.io/introduction\"\u003eModel Context Protocol\u003c/a\u003e (MCP) protocol featuring three servers so far: JDBC, Filesystem and JavaFX. These servers have been tested with \u003ca href=\"https://claude.ai/download\"\u003eClaude for Desktop\u003c/a\u003e, \u003ca href=\"https://github.com/chrishayuk/mcp-cli/blob/main/README.md\"\u003eModel Context Protocol CLI\u003c/a\u003e and \u003ca href=\"https://block.github.io/goose/docs/quickstart/\"\u003eGoose\u003c/a\u003e clients. The team recommends using \u003ca href=\"https://www.jbang.dev/\"\u003eJBang\u003c/a\u003e to use these servers for ease of use, but isn\u0026#39;t required.\u003c/p\u003e\n\n\u003ch4\u003eApache Software Foundation\u003c/h4\u003e\n\n\u003cp\u003eMaintaining alignment with Quarkus, the \u003ca href=\"https://camel.apache.org/blog/2025/01/camel-quarkus-release-3.18.0/\"\u003erelease\u003c/a\u003e of \u003ca href=\"https://quarkus.io/guides/camel\"\u003eCamel Quarkus\u003c/a\u003e 3.18.0, composed of Camel 4.9.0 and Quarkus 3.18.0, provides resolutions to notable issues such as: the \u003ca href=\"https://camel.apache.org/components/next/kamelet-component.html\"\u003eKamelet\u003c/a\u003e extension unable to serialize objects from an instance of the \u003cstrong\u003e\u003ccode\u003eClasspathResolver\u003c/code\u003e\u003c/strong\u003e, an inner class defined in the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/apache/camel/blob/main/core/camel-base-engine/src/main/java/org/apache/camel/impl/engine/DefaultResourceResolvers.java\"\u003eDefaultResourceResolvers\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e, to bytecode; and the \u003ca href=\"https://debezium.io/\"\u003eDebezium\u003c/a\u003e BOM adversely affects the unit tests from the \u003ca href=\"https://quarkus.io/extensions/org.apache.camel.quarkus/camel-quarkus-cassandraql/\"\u003eCassandra CQL\u003c/a\u003e extension driver since the release of Debezium 1.19.2.Final. More details on this release may be found in the \u003ca href=\"https://camel.apache.org/releases/q-3.18.0/\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eInfinispan\u003c/h4\u003e\n\n\u003cp\u003eThe release of \u003ca href=\"https://infinispan.org/\"\u003eInfinispan\u003c/a\u003e 15.1.5 features dependency upgrades and resolutions to issues such as: a \u003cstrong\u003e\u003ccode\u003eNullPointerException\u003c/code\u003e\u003c/strong\u003e due to a concurrent removal with the \u003cstrong\u003e\u003ccode\u003eDELETE\u003c/code\u003e\u003c/strong\u003e statement causing the \u003cstrong\u003e\u003ccode\u003ecache::removeAsync\u003c/code\u003e\u003c/strong\u003e statement to return \u003cstrong\u003e\u003ccode\u003enull\u003c/code\u003e\u003c/strong\u003e; and an instance of the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/infinispan/infinispan/blob/main/persistence/remote/src/test/java/org/infinispan/persistence/remote/upgrade/HotRodUpgradeContainerSSLTest.java\"\u003eHotRodUpgradeContainerSSLTest\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class crashes the test suite due to an instance of the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/infinispan/infinispan/blob/main/core/src/main/java/org/infinispan/persistence/manager/PersistenceManagerImpl.java\"\u003ePersistenceManagerImpl\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class failing to start. Further details on this release may be found in the \u003ca href=\"https://github.com/infinispan/infinispan/releases/tag/15.1.5.Final\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eJava Operator SDK\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://javaoperatorsdk.io/blog/2025/01/06/version-5-released/\"\u003erelease\u003c/a\u003e of \u003ca href=\"https://javaoperatorsdk.io/\"\u003eJava Operator SDK\u003c/a\u003e 5.0.0 ships with continuous improvements on new features such as: the Kubernetes \u003ca href=\"https://kubernetes.io/docs/reference/using-api/server-side-apply/\"\u003eServer-Side Apply\u003c/a\u003e elevated to a first-class citizen with a default approach for patching the status resource; and a change in responsibility with the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/operator-framework/java-operator-sdk/blob/1635c9ea338f8e89bacc547808d2b409de8734cf/operator-framework-core/src/main/java/io/javaoperatorsdk/operator/processing/event/source/EventSource.java\"\u003eEventSource\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e interface to monitor the resources and handles accessing the cached resources, filtering, and additional capabilities that was once maintained by the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://javadoc.io/static/io.javaoperatorsdk/operator-framework-core/3.0.3/io/javaoperatorsdk/operator/processing/event/source/ResourceEventSource.html\"\u003eResourceEventSource\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e subinterface. More details on this release may be found in the \u003ca href=\"https://github.com/operator-framework/java-operator-sdk/releases/tag/v5.0.0\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eJBang\u003c/h4\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.jbang.dev/\"\u003eJBang\u003c/a\u003e 0.123.0 provides bug fixes, improvements in documentation and new features: the options, such as \u003cstrong\u003e\u003ccode\u003eadd-open\u003c/code\u003e\u003c/strong\u003e and \u003ccode\u003eexports\u003c/code\u003e, in a bundled \u003cstrong\u003e\u003ccode\u003eMANIFEST.MF\u003c/code\u003e\u003c/strong\u003e file are now honored; and the addition of \u003ca href=\"https://www.cursor.com/\"\u003eCursor\u003c/a\u003e, the AI code editor, in the list of supported IDEs. Further details on this release may be found in the \u003ca href=\"https://github.com/jbangdev/jbang/releases/tag/v0.123.0\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eEclipse Vert.x\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://vertx.io/blog/eclipse-vert-x-5-candidate-4-released/\"\u003efourth release candidate\u003c/a\u003e of \u003ca href=\"https://vertx.io/\"\u003eEclipse Vert.x\u003c/a\u003e 5.0 delivers notable changes such as: the removal of deprecated classes - \u003cstrong\u003e\u003ccode\u003eServiceAuthInterceptor\u003c/code\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003ccode\u003eProxyHelper\u003c/code\u003e\u003c/strong\u003e - along with the two of the overloaded \u003cstrong\u003e\u003ccode\u003eaddInterceptor()\u003c/code\u003e\u003c/strong\u003e methods defined in the ServiceBinder class; and support for the Java Platform Module System (JPMS). More details on this release may be found in the \u003ca href=\"https://github.com/vert-x3/wiki/wiki/5.0.0-Release-Notes\"\u003erelease notes\u003c/a\u003e and \u003ca href=\"https://github.com/vert-x3/wiki/wiki/5.0.0-Deprecations-and-breaking-changes\"\u003edeprecations and breaking changes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eJHipster\u003c/h4\u003e\n\n\u003cp\u003eVersions 1.26.0 and 1.25.0 of \u003ca href=\"https://www.jhipster.tech/jhipster-lite/\"\u003eJHipster Lite\u003c/a\u003e (announced \u003ca href=\"https://x.com/pascalgrimaud/status/1885416144963571945\"\u003ehere\u003c/a\u003e and \u003ca href=\"https://x.com/pascalgrimaud/status/1883247570174316952\"\u003ehere\u003c/a\u003e, respectively) ship with bug fixes, dependency upgrades and new features/enhancements such as: new datasource modules for PostgreSQL, MariaDB, MySQL and MSSQL; and a restructured state ranking system for modules. Version 1.26.0 also represents the 100th release of JHipster Lite. Further details on these releases may be found in the release notes for \u003ca href=\"https://github.com/jhipster/jhipster-lite/releases/tag/v1.26.0\"\u003eversion 1.26.0\u003c/a\u003e and \u003ca href=\"https://github.com/jhipster/jhipster-lite/releases/tag/v1.25.0\"\u003eversion 1.25.0\u003c/a\u003e.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Michael-Redlich\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eMichael Redlich\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": "2025-02-03T00:00:00Z",
  "modifiedTime": null
}
