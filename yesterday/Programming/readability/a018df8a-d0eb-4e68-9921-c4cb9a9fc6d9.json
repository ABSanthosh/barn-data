{
  "id": "a018df8a-d0eb-4e68-9921-c4cb9a9fc6d9",
  "title": "How developers spend the time they save thanks to AI coding tools",
  "link": "https://github.blog/ai-and-ml/generative-ai/how-developers-spend-the-time-they-save-thanks-to-ai-coding-tools/",
  "description": "Developers tell us how GitHub Copilot and other AI coding tools are transforming their work and changing how they spend their days. The post How developers spend the time they save thanks to AI coding tools appeared first on The GitHub Blog.",
  "author": "Klint Finley",
  "published": "Thu, 14 Nov 2024 17:32:20 +0000",
  "source": "https://github.blog/feed/",
  "categories": [
    "AI \u0026 ML",
    "Generative AI",
    "Collaboration",
    "Developer workflow"
  ],
  "byline": "Klint Finley",
  "length": 9840,
  "excerpt": "Developers tell us how GitHub Copilot and other AI coding tools are transforming their work and changing how they spend their days.",
  "siteName": "The GitHub Blog",
  "favicon": "https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=192%2C192",
  "text": "The arrival of AI coding tools is already changing the way developers work. Nearly all respondents in our recent survey said they’ve used AI coding tools at some point—and the vast majority said these tools help make it easier to write higher-quality, and more secure, code. Similarly, the State of JS 2023 survey found that only 18% of respondents did not regularly use an AI coding tool. Generative AI for the IT Pro co-author, Chrissy LeMaire, told us recently that LLMs are transforming her workflow. “When you start a project, you have to set up all sorts of things,” she said. “It takes a while before you get to the exciting parts. Now I let the LLM do it for me. With AI coding, it starts out exciting.” GitHub research suggests AI tools can boost developer productivity by up to 55%—but what do you do with the time saved from using AI coding tools? According to our survey, respondents spend more time on system design, collaborating with colleagues, and learning new skills, among other things. What’s more, AI tools make them better at what they do, creating positive feedback loops that help them not only write more code, but write better code as well. To find out what this looks like on the ground, we’ve been talking with developers about how AI is changing their workflows and what they’re doing with the time saved from using AI coding tools. In this article, we’ll: Hear from developers about how they use AI coding tools to save time. Share a few tips on how to get started. Less time debugging, more time planning Many developers report the ability to spend more time on the designing and planning stages thanks to AI—and that means more time for being a system thinker, which is a net benefit. “I spend less time figuring things out through trial and error, and more time making sure my code is secure and performant,” open source developer, Claudio Wunder, told us in our recent Q\u0026A on AI coding tools. He’s not alone. In our survey, 40-47% of respondents say AI has enabled them to spend more time designing systems and customer solutions. Meanwhile, 37-43% of respondents said they spent more time refactoring and optimizing code. In other words: Developers are spending their time making their code better, instead of just trying to make their code work. The process starts before you even write your first line of code. For example, Wunder uses GitHub Copilot Chat to think through projects. This idea of explaining ideas to an inanimate object to clarify one’s own thoughts is called “rubber ducking.” But LLMs bring a new dimension to this activity: They can talk back. Instead of just putting his thoughts in order, Wunder actually gets feedback on his ideas and goes into new projects with a clearer idea of how he wants to structure his code. LeMaire finds herself doing much the same: “I spend less time doing grunt work and more time just talking.” Here are some practical tips to get started designing systems and refactoring code with GitHub Copilot: State your preferences. Wunder starts new projects by telling GitHub Copilot Chat he prefers ES6 built-ins and arrow functions. “These simple statements can usually help you achieve your desired code output and better understand Copilot’s thought process,” he explains. Share examples. LeMaire approaches projects in much the same way she did without LLMs: By finding examples of similar things. “I upload the sample files, sometimes concatenating them into one big file, and tell the LLM what I’d like,” she says. Start with a skeleton function. When it comes time to generate inline code, Wunder recommends starting with meaningful parameters, arguments, and comments that explain what the function should be and what each parameter should control. Debugging as a conversation. Wunder keeps all the related code open in VS Code and starts a new Copilot Chat session with the prompt “Let’s debug some code.” He then asks Copilot questions, such as what it believes the code is doing and what would happen in response to different user inputs. “I try to provide as much context to Copilot about what the code is supposed to achieve and I keep iterating with follow-up questions until I find the problems and solutions,” he says. Less time working on docs, more time working together AI isn’t just for talking to machines. It frees up time for developers to talk with each other as well. 40-47% of our survey respondents say AI helps them spend more time collaborating with team members on projects. Another 39-45% said they spent more time on code reviews, which are one of the main ways developers collaborate and help each other produce better work. LLMs can automatically generate code comments and documentation, making code easier to understand and, by extension, easier to contribute to. “I was able to go through some JavaScript and have an LLM generate JSDoc-formatted documentation based on function names and parameters with something like 95% accuracy,” LeMaire says. “My team really loved that.” The upshot: Not only do developers have more time to work together, they can do so with more ease. Here are some practical tips to get started when using LLMs to improve collaboration: Use your favorite existing help text as examples. LeMaire recommends providing LLMs documentation examples in the style you want to replicate. For example, she prompts the LLMs with help text from her favorite PowerShell commands to help the LLMs generate documentation that matches the tone and format she prefers. Leave comments in every file. Whenever you open a code file, add some comments to the top as a header to help GitHub Copilot better understand the code. “This will both accelerate your productivity, but also those of your team as you leave these little treats behind,” says GitHub developer advocate, Christopher Harrison. “A digital version of donuts in the break room.” Less time searching, more time learning and experimenting It’s important to keep up with the latest languages, databases, libraries, frameworks, and APIs, but it can be overwhelming. AI helps by giving you more time to keep up with cutting-edge technologies. In our survey, 43-47% of respondents said they spent more time on learning and development, while 44-46% said they spent more time on research and development and emerging technologies. AI also aids in learning, providing real-time assistance as developers learn new skills. LeMaire recently transitioned from a career in DevOps to one in front-end development and has been using AI tools to work faster while deepening her knowledge of front-end technologies. “It made switching from writing mostly PowerShell and SQL to writing mostly JavaScript much less stressful,” she says. “Otherwise, I would have had to spend much more time context switching and looking things up.” Similarly, DevOps architect, Alessio Fiorentino, has been using GitHub Copilot to learn Rust. “Rust is a powerful language that provides full control over the execution flow, but it has many nuances and requires a different way of thinking, especially for those who started with Python or JavaScript,” Fiorentino told us in a previous article. “AI assists me in navigating these complexities and ensures that I write efficient and idiomatic Rust code.” AI coding tools can be helpful, but they still require a pilot—and they aren’t a substitute for learning. “Even if LLMs are able to generate entire applications in the future, you will need to evaluate the code,” Wunder says. He sees the role of the developer transforming as LLMs take care of implementation details and recommends that developers work on understanding higher-level computer science concepts, and sharpen their communication skills. Fortunately there’s some synergy there: You need to write clear instructions to use an LLM, so AI coding tools actually strengthen the skills developers of the future need to hone. Here are some practical tips to get started when using GitHub Copilot as a learning tool: Navigate a new or unfamiliar language or technology. Wunder recommends using GitHub Copilot to walk through the syntax and features of a given language. “I started learning Go recently and asked Copilot ‘What does adding a type after :=\u003c on a variable definition do?’ It also helped me understand how namespacing and module definitions in Go work.” Onboard with new code bases. Try highlighting a block of code and asking Copilot to explain it, or ask questions about the code, such as which variables relate to particular functionality. Visualize what you’re learning. GitHub developer advocate, Kedasha Kerr, has used Copilot’s mermaid diagramming features to better understand how data flows through an application. What’s next In a remarkably short period, AI coding tools have become an essential part of the development stack, rapidly transforming how developers spend their time and approach their work. Software development is shifting towards design and collaboration, as opposed to squashing bugs. It’s still early, but AI is empowering developers to unlock their potential like never before. We’re excited to see what you build with it. Written by Related posts Explore more from GitHub Docs Everything you need to master GitHub, all in one place. Go to Docs GitHub Build what’s next on GitHub, the place for anyone from anywhere to build anything. Start building Customer stories Meet the companies and engineering teams that build with GitHub. Learn more GitHub Universe 2024 Get tickets to the 10th anniversary of our global developer event on AI, DevEx, and security. Get tickets",
  "image": "https://github.blog/wp-content/uploads/2024/02/AI-DarkMode-3-1.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003csection\u003e\n\t\n\u003cp\u003eThe arrival of AI coding tools is already changing the way developers work.\u003c/p\u003e\n\u003cp\u003eNearly all respondents in \u003ca href=\"https://github.blog/news-insights/research/survey-ai-wave-grows/\"\u003eour recent survey\u003c/a\u003e said they’ve used AI coding tools at some point—and the vast majority said these tools help make it easier to write higher-quality, and more secure, code. Similarly, the \u003ca href=\"https://2023.stateofjs.com/en-US/other-tools/#ai_tools\"\u003eState of JS 2023 survey\u003c/a\u003e found that only 18% of respondents \u003cem\u003edid not\u003c/em\u003e regularly use an AI coding tool.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eGenerative AI for the IT Pro\u003c/em\u003e co-author, Chrissy LeMaire, \u003ca href=\"https://us11.campaign-archive.com/?e=430919a6ee\u0026amp;u=9d7ced8c4bbd6c2f238673f0f\u0026amp;id=9556427e04\"\u003etold us recently\u003c/a\u003e that LLMs are transforming her workflow. “When you start a project, you have to set up all sorts of things,” she said. “It takes a while before you get to the exciting parts. Now I let the LLM do it for me. With AI coding, it starts out exciting.”\u003c/p\u003e\n\u003cp\u003eGitHub research suggests AI tools can boost developer productivity by up to 55%—but what do you do with the time saved from using AI coding tools? According to our survey, respondents spend more time on system design, collaborating with colleagues, and learning new skills, among other things.\u003c/p\u003e\n\u003cp\u003eWhat’s more, AI tools make them better at what they do, creating positive feedback loops that help them not only write more code, but write better code as well. To find out what this looks like on the ground, we’ve been talking with developers about how AI is changing their workflows and what they’re doing with the time saved from using AI coding tools.\u003c/p\u003e\n\u003cp\u003eIn this article, we’ll:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eHear from developers about how they use AI coding tools to save time.\u003c/li\u003e\n\u003cli\u003eShare a few tips on how to get started.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"less-time-debugging-more-time-planning\" id=\"less-time-debugging-more-time-planning\"\u003eLess time debugging, more time planning\u003ca href=\"#less-time-debugging-more-time-planning\" aria-label=\"Less time debugging, more time planning\"\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eMany developers report the ability to spend more time on the designing and planning stages thanks to AI—and that means more time for being a system thinker, which is a net benefit. “I spend less time figuring things out through trial and error, and more time making sure my code is secure and performant,” open source developer, Claudio Wunder, told us in our \u003ca href=\"https://us11.campaign-archive.com/?e=430919a6ee\u0026amp;u=9d7ced8c4bbd6c2f238673f0f\u0026amp;id=9556427e04\"\u003erecent Q\u0026amp;A on AI coding tools\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eHe’s not alone. In our survey, 40-47% of respondents say AI has enabled them to spend more time designing systems and customer solutions. Meanwhile, 37-43% of respondents said they spent more time refactoring and optimizing code.\u003c/p\u003e\n\u003cp\u003eIn other words: Developers are spending their time making their code better, instead of just trying to make their code work.\u003c/p\u003e\n\u003cp\u003eThe process starts before you even write your first line of code. For example, Wunder uses GitHub Copilot Chat to think through projects. This idea of explaining ideas to an inanimate object to clarify one’s own thoughts is called “\u003ca href=\"https://en.wikipedia.org/wiki/Rubber_duck_debugging\"\u003erubber ducking\u003c/a\u003e.” But LLMs bring a new dimension to this activity: They can talk back. Instead of just putting his thoughts in order, Wunder actually gets feedback on his ideas and goes into new projects with a clearer idea of how he wants to structure his code. LeMaire finds herself doing much the same: “I spend less time doing grunt work and more time just talking.”\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eHere are some practical tips to get started designing systems and refactoring code with GitHub Copilot:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eState your preferences.\u003c/strong\u003e Wunder starts new projects by telling GitHub Copilot Chat he prefers ES6 built-ins and arrow functions. “These simple statements can usually help you achieve your desired code output and better understand Copilot’s thought process,” he explains.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eShare examples.\u003c/strong\u003e LeMaire approaches projects in much the same way she did without LLMs: By finding examples of similar things. “I upload the sample files, sometimes concatenating them into one big file, and tell the LLM what I’d like,” she says.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eStart with a skeleton function.\u003c/strong\u003e When it comes time to generate inline code, Wunder recommends starting with meaningful parameters, arguments, and comments that explain what the function should be and what each parameter should control.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDebugging as a conversation.\u003c/strong\u003e Wunder keeps all the related code open in VS Code and starts a new Copilot Chat session with the prompt “Let’s debug some code.” He then asks Copilot questions, such as what it believes the code is doing and what would happen in response to different user inputs. “I try to provide as much context to Copilot about what the code is supposed to achieve and I keep iterating with follow-up questions until I find the problems and solutions,” he says.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"less-time-working-on-docs-more-time-working-together\" id=\"less-time-working-on-docs-more-time-working-together\"\u003eLess time working on docs, more time working together\u003ca href=\"#less-time-working-on-docs-more-time-working-together\" aria-label=\"Less time working on docs, more time working together\"\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eAI isn’t just for talking to machines. It frees up time for developers to talk with each other as well. 40-47% of our survey respondents say AI helps them spend more time collaborating with team members on projects. Another 39-45% said they spent more time on code reviews, which are one of the \u003ca href=\"https://github.blog/news-insights/research/research-quantifying-github-copilots-impact-on-code-quality/\"\u003emain ways developers collaborate\u003c/a\u003e and \u003ca href=\"https://github.blog/developer-skills/github/how-to-review-code-effectively-a-github-staff-engineers-philosophy/\"\u003ehelp each other produce better work\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eLLMs can automatically generate code comments and documentation, making code easier to understand and, by extension, easier to contribute to. “I was able to go through some JavaScript and have an LLM generate JSDoc-formatted documentation based on function names and parameters with something like 95% accuracy,” LeMaire says. “My team really loved that.”\u003c/p\u003e\n\u003cp\u003eThe upshot: Not only do developers have more time to work together, they can do so with more ease.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eHere are some practical tips to get started when using LLMs to improve collaboration:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eUse your favorite existing help text as examples.\u003c/strong\u003e LeMaire recommends providing LLMs documentation examples in the style you want to replicate. For example, she prompts the LLMs with help text from her favorite PowerShell commands to help the LLMs generate documentation that matches the tone and format she prefers.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eLeave comments in every file.\u003c/strong\u003e Whenever you open a code file, add some comments to the top as a header to help GitHub Copilot better understand the code. “This will both accelerate your productivity, but also those of your team as you leave these little treats behind,” says GitHub developer advocate, Christopher Harrison. “A digital version of donuts in the break room.”\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"less-time-searching-more-time-learning-and-experimenting\" id=\"less-time-searching-more-time-learning-and-experimenting\"\u003eLess time searching, more time learning and experimenting\u003ca href=\"#less-time-searching-more-time-learning-and-experimenting\" aria-label=\"Less time searching, more time learning and experimenting\"\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eIt’s important to keep up with the latest languages, databases, libraries, frameworks, and APIs, but it can be overwhelming. AI helps by giving you more time to keep up with cutting-edge technologies. In our survey, 43-47% of respondents said they spent more time on learning and development, while 44-46% said they spent more time on research and development and emerging technologies.\u003c/p\u003e\n\u003cp\u003eAI also aids in learning, providing real-time assistance as developers learn new skills. LeMaire recently transitioned from a career in DevOps to one in front-end development and has been using AI tools to work faster while deepening her knowledge of front-end technologies. “It made switching from writing mostly PowerShell and SQL to writing mostly JavaScript much less stressful,” she says. “Otherwise, I would have had to spend much more time context switching and looking things up.”\u003c/p\u003e\n\u003cp\u003eSimilarly, DevOps architect, Alessio Fiorentino, has been using GitHub Copilot to learn Rust. “Rust is a powerful language that provides full control over the execution flow, but it has many nuances and requires a different way of thinking, especially for those who started with Python or JavaScript,” Fiorentino told us \u003ca href=\"https://github.blog/developer-skills/programming-languages-and-frameworks/how-to-use-ai-coding-tools-to-learn-a-new-programming-language/\"\u003ein a previous article\u003c/a\u003e. “AI assists me in navigating these complexities and ensures that I write efficient and idiomatic Rust code.”\u003c/p\u003e\n\u003cp\u003eAI coding tools can be helpful, but they still require a pilot—and they aren’t a substitute for learning. “Even if LLMs are able to generate entire applications in the future, you will need to evaluate the code,” Wunder says. He sees the role of the developer transforming as LLMs take care of implementation details and recommends that developers work on understanding higher-level computer science concepts, and sharpen their communication skills. Fortunately there’s some synergy there: You need to write clear instructions to use an LLM, so AI coding tools actually strengthen the skills developers of the future need to hone.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eHere are some practical tips to get started when using GitHub Copilot as a learning tool:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eNavigate a new or unfamiliar language or technology.\u003c/strong\u003e Wunder recommends using GitHub Copilot to walk through the syntax and features of a given language. “I started learning Go recently and asked Copilot ‘What does adding a type after \u003ccode\u003e:=\u0026lt;\u003c/code\u003e on a variable definition do?’ It also helped me understand how namespacing and module definitions in Go work.”\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eOnboard with new code bases.\u003c/strong\u003e Try highlighting a block of code and asking Copilot to explain it, or ask questions about the code, such as which variables relate to particular functionality.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eVisualize what you’re learning.\u003c/strong\u003e GitHub developer advocate, Kedasha Kerr, has \u003ca href=\"https://github.blog/developer-skills/programming-languages-and-frameworks/how-to-use-ai-coding-tools-to-learn-a-new-programming-language/\"\u003eused Copilot’s mermaid diagramming features\u003c/a\u003e to better understand how data flows through an application.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"whats-next\" id=\"whats-next\"\u003eWhat’s next\u003ca href=\"#whats-next\" aria-label=\"What’s next\"\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eIn a remarkably short period, AI coding tools have become an essential part of the development stack, rapidly transforming how developers spend their time and approach their work. Software development is shifting towards design and collaboration, as opposed to squashing bugs. It’s still early, but AI is empowering developers to unlock their potential like never before. We’re excited to see what you build with it.\u003c/p\u003e\n\n\t\n\n\t\u003cdiv\u003e\n\t\u003ch2\u003e\n\t\tWritten by\t\u003c/h2\u003e\n\t\n\t\t\t\u003carticle\u003e\n\t\u003cdiv\u003e\n\t\t\t\t\u003cpicture\u003e\n\t\t\t\t\t\u003csource srcset=\"https://avatars.githubusercontent.com/u/957053?v=4\u0026amp;s=200\" width=\"120\" height=\"120\" media=\"(min-width: 768px)\"/\u003e\n\t\t\t\t\t\u003cimg src=\"https://avatars.githubusercontent.com/u/957053?v=4\u0026amp;s=200\" alt=\"Klint Finley\" width=\"80\" height=\"80\" loading=\"lazy\" decoding=\"async\"/\u003e\n\t\t\t\t\u003c/picture\u003e\n\t\t\t\u003c/div\u003e\n\u003c/article\u003e\n\t\u003c/div\u003e\n\u003c/section\u003e\u003csection\u003e\n\t\u003ch2\u003e\n\t\tRelated posts\t\u003c/h2\u003e\n\t\n\u003c/section\u003e\u003cdiv\u003e\n\t\u003ch2\u003e\n\t\tExplore more from GitHub\t\u003c/h2\u003e\n\t\u003cdiv\u003e\n\t\t\u003cdiv\u003e\n\t\t\u003cp\u003e\u003cimg src=\"https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg\" width=\"44\" height=\"44\" alt=\"Docs\"/\u003e\u003c/p\u003e\u003ch3\u003e\n\t\t\tDocs\t\t\u003c/h3\u003e\n\t\t\u003cp\u003eEverything you need to master GitHub, all in one place.\u003c/p\u003e\n\t\t\t\t\t\u003cp\u003e\n\t\t\t\t\u003ca data-analytics-click=\"Blog, click on module, text: Go to Docs; ref_location:bottom recirculation;\" href=\"https://docs.github.com/\" target=\"_blank\" aria-label=\"Go to Docs\"\u003e\n\t\t\t\t\tGo to Docs\t\t\t\t\t\t\t\t\t\t\t\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"\u003e\u003cpath fill-rule=\"evenodd\" d=\"M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n\t\t\t\t\t\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\u003cdiv\u003e\n\t\t\u003cp\u003e\u003cimg src=\"https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg\" width=\"44\" height=\"44\" alt=\"GitHub\"/\u003e\u003c/p\u003e\u003ch3\u003e\n\t\t\tGitHub\t\t\u003c/h3\u003e\n\t\t\u003cp\u003eBuild what’s next on GitHub, the place for anyone from anywhere to build anything.\u003c/p\u003e\n\t\t\t\t\t\u003cp\u003e\n\t\t\t\t\u003ca data-analytics-click=\"Blog, click on module, text: Start building; ref_location:bottom recirculation;\" href=\"https://github.blog/developer-skills/github/\" target=\"_blank\" aria-label=\"Start building\"\u003e\n\t\t\t\t\tStart building\t\t\t\t\t\t\t\t\t\t\t\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"\u003e\u003cpath fill=\"currentColor\" d=\"M7.28033 3.21967C6.98744 2.92678 6.51256 2.92678 6.21967 3.21967C5.92678 3.51256 5.92678 3.98744 6.21967 4.28033L7.28033 3.21967ZM11 8L11.5303 8.53033C11.8232 8.23744 11.8232 7.76256 11.5303 7.46967L11 8ZM6.21967 11.7197C5.92678 12.0126 5.92678 12.4874 6.21967 12.7803C6.51256 13.0732 6.98744 13.0732 7.28033 12.7803L6.21967 11.7197ZM6.21967 4.28033L10.4697 8.53033L11.5303 7.46967L7.28033 3.21967L6.21967 4.28033ZM10.4697 7.46967L6.21967 11.7197L7.28033 12.7803L11.5303 8.53033L10.4697 7.46967Z\"\u003e\u003c/path\u003e\u003cpath stroke=\"currentColor\" d=\"M1.75 8H11\" stroke-width=\"1.5\" stroke-linecap=\"round\"\u003e\u003c/path\u003e\u003c/svg\u003e\n\t\t\t\t\t\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\u003cdiv\u003e\n\t\t\u003cp\u003e\u003cimg src=\"https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg\" width=\"44\" height=\"44\" alt=\"Customer stories\"/\u003e\u003c/p\u003e\u003ch3\u003e\n\t\t\tCustomer stories\t\t\u003c/h3\u003e\n\t\t\u003cp\u003eMeet the companies and engineering teams that build with GitHub.\u003c/p\u003e\n\t\t\t\t\t\u003cp\u003e\n\t\t\t\t\u003ca data-analytics-click=\"Blog, click on module, text: Learn more; ref_location:bottom recirculation;\" href=\"https://github.com/customer-stories\" target=\"_blank\" aria-label=\"Learn more\"\u003e\n\t\t\t\t\tLearn more\t\t\t\t\t\t\t\t\t\t\t\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"\u003e\u003cpath fill-rule=\"evenodd\" d=\"M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n\t\t\t\t\t\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\u003cdiv\u003e\n\t\t\u003cp\u003e\u003cimg src=\"https://github.blog/wp-content/uploads/2024/04/Icon.svg\" width=\"44\" height=\"44\" alt=\"GitHub Universe 2024\"/\u003e\u003c/p\u003e\u003ch3\u003e\n\t\t\tGitHub Universe 2024\t\t\u003c/h3\u003e\n\t\t\u003cp\u003eGet tickets to the 10th anniversary of our global developer event on AI, DevEx, and security.\u003c/p\u003e\n\t\t\t\t\t\u003cp\u003e\n\t\t\t\t\u003ca data-analytics-click=\"Blog, click on module, text: Get tickets; ref_location:bottom recirculation;\" href=\"https://githubuniverse.com/?utm_source=Blog\u0026amp;utm_medium=GitHub\u0026amp;utm_campaign=blog-module\" target=\"_blank\" aria-label=\"Get tickets\"\u003e\n\t\t\t\t\tGet tickets\t\t\t\t\t\t\t\t\t\t\t\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"\u003e\u003cpath fill-rule=\"evenodd\" d=\"M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n\t\t\t\t\t\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\t\u003c/div\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "11 min read",
  "publishedTime": "2024-11-14T17:32:20Z",
  "modifiedTime": null
}
