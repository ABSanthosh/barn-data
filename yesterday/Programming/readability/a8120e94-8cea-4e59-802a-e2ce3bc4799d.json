{
  "id": "a8120e94-8cea-4e59-802a-e2ce3bc4799d",
  "title": "Transforming Location Retrieval at Airbnb: A Journey from Heuristics to Reinforcement Learning",
  "link": "https://medium.com/airbnb-engineering/transforming-location-retrieval-at-airbnb-a-journey-from-heuristics-to-reinforcement-learning-d33ffc4ddb8f?source=rss----53c7c27702d5---4",
  "description": "",
  "author": "Dillon Davis",
  "published": "Mon, 11 Nov 2024 18:14:35 GMT",
  "source": "https://medium.com/feed/airbnb-engineering",
  "categories": [
    "search-engines",
    "machine-learning",
    "information-retrieval",
    "engineering",
    "artificial-intelligence"
  ],
  "byline": "Dillon Davis",
  "length": 11900,
  "excerpt": "How Airbnb leverages machine learning and reinforcement learning techniques to solve a unique information retrieval task in order to provide guests with unique, affordable, and differentiated…",
  "siteName": "The Airbnb Tech Blog",
  "favicon": "https://miro.medium.com/v2/resize:fill:1000:1000/7*GAOKVe--MXbEJmV9230oOQ.png",
  "text": "How Airbnb leverages machine learning and reinforcement learning techniques to solve a unique information retrieval task in order to provide guests with unique, affordable, and differentiated accommodations around the world.By: Dillon Davis, Huiji Gao, Thomas Legrand, Weiwei Guo, Malay Haldar, Alex Deng, Han Zhao, Liwei He, Sanjeev KatariyaIntroductionAirbnb has transformed the way people travel around the globe. As Airbnb’s inventory spans diverse locations and property types, providing guests with relevant options in their search results has become increasingly complex. In this blog post, we’ll discuss shifting from using simple heuristics to advanced machine learning and reinforcement learning techniques to transform what we call location retrieval in order to address this challenge.The Challenge of Location RetrievalGuests typically start searching by entering a destination in the search bar and expect the most relevant results to be surfaced. These destinations can be countries, states, cities, neighborhoods, streets, addresses, or points of interest. Unlike traditional travel accommodations, Airbnb listings are spread across different neighborhoods and surrounding areas. For example, a family searching for a vacation rental in San Francisco might find better options in nearby cities like Daly City, where there are larger single-family homes. Thus, the system needs to account for not just the searched location but also nearby areas that might offer better options for the guest. This is evidenced by the locations of booked listings when searching for San Francisco shown below.Given Airbnb’s scale, we cannot rank every listing for every search. This presented a challenge to create a system that dynamically infers a relevant map area for a query. This system, known as location retrieval, needed to balance including a wide variety of listings to appeal to all guests’ needs while still being relevant to the query. Our search ranking models can then efficiently rank the subset of our inventory that is within the relevant map area and surface the most relevant inventory to our guests. This system and more is outlined belowStarting with Heuristics: The Cold Start ProblemInitially, Airbnb relied on heuristics to define map areas based on the type of search. For example, if a guest searched for a country, the system would use administrative boundaries to filter listings within that country. If they searched for a city, the system would create a 25-mile radius around the city center to retrieve listings.Improving these heuristics proved to be profoundly impactful. One such example is the introduction of a log scale parameterized smooth function to compute an expansion factor for the diagonal size of the administrative bounds of the searched destination. We applied this for very precise locations like addresses, buildings, and POI’s resulting in a 0.35% increase in uncancelled bookers on the platform when tested in an online A/B experiment against the baseline heuristics. Figures below demonstrate how search results for a building in Ibiza, Spain improved dramatically with this heuristic by surfacing significantly more and higher quality inventory.These heuristics were simple and worked well enough to start, but they had limitations. They couldn’t differentiate between different types of searches (e.g., a family looking for a large home versus a solo traveler looking for a small apartment), and they didn’t adapt well to new data as Airbnb’s inventory and guest preferences evolved.Exploring Statistics to Help Improve Location RetrievalWith more data available over time from these intuition based heuristics, we thought there might be a way to take advantage of this historical user booking behavior to improve location retrieval. We built a dataset for each travel destination that recorded where guests booked listings when searching for that destination. Based on this data, the system could create retrieval map areas that included 96% of the nearest booked listings for a given destination.We tested these newly constructed retrieval map areas in lieu of the intuition based heuristics outlined above based on the hypothesis that it would provide guests a more bookable selection of inventory. While this statistical approach was more aligned with guest booking behavior, it still had limitations. It treated all searches for a location the same, regardless of specific search parameters like group size or travel dates. This uniform approach meant that some guests might not see the best listings for their particular needs. As a result, this statistics based method had no detectable increase in uncancelled bookers on the platform when tested against the heuristics outlined above in an online A/B experiment. This led us to believe that location retrieval may require more advanced techniques such as machine learning.Advancing to Machine LearningInstead of only relying on past booking data, the new system could learn from various search parameters, such as the number of guests and stay duration. By analyzing this data, a model could predict more relevant map areas for each search, rather than applying a one-size-fits-all approach.For example, a group of ten travelers searching for a San Francisco vacation rental might prefer larger homes in the suburbs, while solo travelers might prioritize central locations. The machine learning model could distinguish between these different preferences and adjust the retrieval map areas accordingly, providing more tailored results.We constructed our machine learning model in the following manner. This is a result of three iterations that introduced the machine learning model, expanded its feature set, and expanded search attribution. The architecture is depicted in the figure below.Training Examples: Searches issued by a booker by entering a destination in the search bar or manipulating the map that contained the booked listing in their search results on the same day or one day before the booking. We discard any bookings that are canceled 7 days after booking.Training Features: We derive features directly from the search request such as location name, stay length, number of guests, price filters, location country, etc. There are 9 continuous features and 19 categorical features in total.Training Labels: The latitude and longitude coordinates of the booked listing attributed to the searchArchitecture: A two layer neural network of size 256 was chosen in order to have more flexibility for loss formulation compared to traditional regression and decision tree based approaches.Model Output: 4 floats that define the latitude and longitude offsets from the center latitude and longitude coordinates of the searched destination that represent the relevant map area.Loss: Trained to predict map areas that contain their associated booked listing while minimizing the size of the predicted map area and the occurrence of predictions that cannot construct a valid rectangular map area.The machine learning system increased the recall of booked listings (i.e., how often the system retrieved a listing that was eventually booked) by 7.12% and reduced the size of the retrieval map area by 40.83%. It had a cumulative impact of +1.8% in uncancelled bookers on the platform. The initial model was evaluated against the baseline and each subsequent model iteration was evaluated against the preceding outgoing model.Figures below demonstrate how search results for a specific street in Lima, Peru improved dramatically with the model by surfacing results that are much closer to the searched street.BeforeAfterExploring New Frontiers with Reinforcement LearningWhile machine learning improved the system’s ability to differentiate search results, there was still room for improvement, particularly in learning whether locations that had never been surfaced before were relevant to guests for a search. To address this, Airbnb introduced reinforcement learning to the location retrieval process.Reinforcement learning allowed the system to continuously learn from guest interactions by surfacing new areas for a given destination and adjusting the retrieval map area based on guest booking behavior. This approach, known as a contextual multi-armed bandit problem, involved balancing exploration (surfacing new locations) with exploitation (surfacing previous successful locations). The system could actively experiment with different retrieval map areas learning from guest bookings to refine its predictions.Applying a contextual multi-armed bandit traditionally requires defining an active contextual estimator, a method for uncertainty estimation, and an exploration strategy. We took the following approach given product constraints, system constraints, and the nature of our model formulation. The architecture is depicted in the figure below.Active contextual estimation: We employed our existing machine learning model for location retrieval retrained on a daily basis to regularly learn from any new bookings data that we collect while surfacing previously unshown locations.Uncertainty estimation: We modified our model architecture with a random dropout layer to generate 32 unique predictions for a given search (Monte Carlo Dropout). This allows us to measure the mean and standard deviation of our prediction while minimizing negative impact to system performance and changes to our existing model formulation.Exploration Strategy: We compute an upper confidence bound using the mean and standard deviation of our prediction in order to construct larger retrieval map areas based on the model’s confidence in its prediction for the search.This system successfully explored more for less-traveled locations where it was less confident and explored less for locations that are often searched and booked. For example, pictured below are the mean (inner) and upper confidence bound (outer) estimates of retrieval map areas for San Francisco, CA (left) and Smith Mountain Lake, Virginia (right). San Francisco is searched almost 25x more than Smith Mountain Lake with proportionately more bookings as well. As a result, the model is more confident in its retrieval map area estimate for San Francisco vs Smith Mountain Lake resulting in 2–3x less exploration for San Francisco queries vs Smith Mountain Lake.The reinforcement learning system was also tested against the outgoing machine learning model in online A/B experiments showing a cumulative 0.51% increase in uncanceled bookers and 0.71% increase in 5 star trip rate over two iterations that introduced reinforcement learning and optimized scoring of the more complex model.Conclusion: A Transformative JourneyAirbnb’s journey from simple heuristics to sophisticated machine learning and reinforcement learning models demonstrates the power of data-driven approaches in transforming complex systems. By continually iterating and improving its location retrieval process, Airbnb has not only enhanced the relevance of its search results but also helped guests experience more 5 star trips.This transformation cumulatively results in a 2.66% increase in uncanceled bookers — a major achievement for a company operating at Airbnb’s scale. More details can be found in our technical paper. As Airbnb continues to innovate, we are continuously evaluating and introducing more advanced features and retrieval mechanisms like retrieving with complex polygons . These will further refine and enhance the search experience for millions of guests worldwide.If this type of work interests you, check out some of our related positions and more at Careers at Airbnb!****************All product names, logos, and brands are property of their respective owners. All company, product and service names used in this website are for identification purposes only. Use of these names, logos, and brands does not imply endorsement.",
  "image": "https://miro.medium.com/v2/da:true/resize:fit:1200/0*ntAY9EP682xs6adB",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca rel=\"noopener follow\" href=\"https://medium.com/@davisdillon?source=post_page---byline--d33ffc4ddb8f--------------------------------\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Dillon Davis\" src=\"https://miro.medium.com/v2/da:true/resize:fill:88:88/0*waniwSVN0qtSGdIE\" width=\"44\" height=\"44\" loading=\"lazy\" data-testid=\"authorPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://medium.com/airbnb-engineering?source=post_page---byline--d33ffc4ddb8f--------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"The Airbnb Tech Blog\" src=\"https://miro.medium.com/v2/resize:fill:48:48/1*MlNQKg-sieBGW5prWoe9HQ.jpeg\" width=\"24\" height=\"24\" loading=\"lazy\" data-testid=\"publicationPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/div\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"478b\"\u003eHow Airbnb leverages machine learning and reinforcement learning techniques to solve a unique information retrieval task in order to provide guests with unique, affordable, and differentiated accommodations around the world.\u003c/p\u003e\u003cp id=\"2252\"\u003e\u003cstrong\u003eBy:\u003c/strong\u003e \u003ca href=\"https://www.linkedin.com/in/dillon-davis/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eDillon Davis\u003c/a\u003e, \u003ca href=\"https://www.linkedin.com/in/huiji-gao/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eHuiji Gao,\u003c/a\u003e \u003ca href=\"https://www.linkedin.com/in/thomaslegrand1/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eThomas Legrand\u003c/a\u003e, \u003ca href=\"https://www.linkedin.com/in/weiwei-guo/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eWeiwei Guo\u003c/a\u003e, \u003ca href=\"https://www.linkedin.com/in/malayhaldar/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eMalay Haldar\u003c/a\u003e, \u003ca href=\"https://www.linkedin.com/in/alex-shaojie-deng-b572347/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eAlex Deng\u003c/a\u003e, \u003ca href=\"https://www.linkedin.com/in/han-zhao-692944116/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eHan Zhao\u003c/a\u003e, \u003ca href=\"https://www.linkedin.com/in/liweihe/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eLiwei He\u003c/a\u003e, \u003ca href=\"https://www.linkedin.com/in/sanjeevkatariya/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eSanjeev Katariya\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"70a9\"\u003eIntroduction\u003c/h2\u003e\u003cp id=\"2509\"\u003eAirbnb has transformed the way people travel around the globe. As Airbnb’s inventory spans diverse locations and property types, providing guests with relevant options in their search results has become increasingly complex. In this blog post, we’ll discuss shifting from using simple heuristics to advanced machine learning and reinforcement learning techniques to transform what we call location retrieval in order to address this challenge.\u003c/p\u003e\u003ch2 id=\"ed27\"\u003eThe Challenge of Location Retrieval\u003c/h2\u003e\u003cp id=\"a9ea\"\u003eGuests typically start searching by entering a destination in the search bar and expect the most relevant results to be surfaced. These destinations can be countries, states, cities, neighborhoods, streets, addresses, or points of interest. Unlike traditional travel accommodations, Airbnb listings are spread across different neighborhoods and surrounding areas. For example, a family searching for a vacation rental in San Francisco might find better options in nearby cities like Daly City, where there are larger single-family homes. Thus, the system needs to account for not just the searched location but also nearby areas that might offer better options for the guest. This is evidenced by the locations of booked listings when searching for San Francisco shown below.\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"31fd\"\u003eGiven Airbnb’s scale, we \u003cstrong\u003ecannot rank every listing for every search\u003c/strong\u003e. This presented a challenge to create a system that dynamically infers a relevant map area for a query. This system, known as location retrieval, needed to balance including a wide variety of listings to appeal to all guests’ needs while still being relevant to the query. Our search ranking models can then efficiently rank the subset of our inventory that is within the relevant map area and surface the \u003cstrong\u003emost relevant \u003c/strong\u003einventory to our guests. This system and more is outlined below\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003ch2 id=\"2f8c\"\u003eStarting with Heuristics: The Cold Start Problem\u003c/h2\u003e\u003cp id=\"54e5\"\u003eInitially, Airbnb relied on heuristics to define map areas based on the type of search. For example, if a guest searched for a country, the system would use administrative boundaries to filter listings within that country. If they searched for a city, the system would create a 25-mile radius around the city center to retrieve listings.\u003c/p\u003e\u003cp id=\"7c35\"\u003eImproving these heuristics proved to be profoundly impactful. One such example is the introduction of a log scale parameterized smooth function to compute an expansion factor for the diagonal size of the administrative bounds of the searched destination. We applied this for very precise locations like addresses, buildings, and POI’s resulting in a 0.35% increase in uncancelled bookers on the platform when tested in an online A/B experiment against the baseline heuristics. Figures below demonstrate how search results for a building in Ibiza, Spain improved dramatically with this heuristic by surfacing significantly more and higher quality inventory.\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"f745\"\u003eThese heuristics were simple and worked well enough to start, but they had limitations. They couldn’t differentiate between different types of searches (e.g., a family looking for a large home versus a solo traveler looking for a small apartment), and they didn’t adapt well to new data as Airbnb’s inventory and guest preferences evolved.\u003c/p\u003e\u003ch2 id=\"762d\"\u003eExploring Statistics to Help Improve Location Retrieval\u003c/h2\u003e\u003cp id=\"f27e\"\u003eWith more data available over time from these intuition based heuristics, we thought there might be a way to take advantage of this historical user booking behavior to improve location retrieval. We built a dataset for each travel destination that recorded where guests booked listings when searching for that destination. Based on this data, the system could create retrieval map areas that included 96% of the nearest booked listings for a given destination.\u003c/p\u003e\u003cp id=\"f3c4\"\u003eWe tested these newly constructed retrieval map areas in lieu of the intuition based heuristics outlined above based on the hypothesis that it would provide guests a more bookable selection of inventory. While this statistical approach was more aligned with guest booking behavior, it still had limitations. It treated all searches for a location the same, regardless of specific search parameters like group size or travel dates. This uniform approach meant that some guests might not see the best listings for their particular needs. As a result, this statistics based method had no detectable increase in uncancelled bookers on the platform when tested against the heuristics outlined above in an online A/B experiment. This led us to believe that location retrieval may require more advanced techniques such as machine learning.\u003c/p\u003e\u003ch2 id=\"6905\"\u003eAdvancing to Machine Learning\u003c/h2\u003e\u003cp id=\"3099\"\u003eInstead of only relying on past booking data, the new system could learn from various search parameters, such as the number of guests and stay duration. By analyzing this data, a model could predict more relevant map areas for each search, rather than applying a one-size-fits-all approach.\u003c/p\u003e\u003cp id=\"852c\"\u003eFor example, a group of ten travelers searching for a San Francisco vacation rental might prefer larger homes in the suburbs, while solo travelers might prioritize central locations. The machine learning model could distinguish between these different preferences and adjust the retrieval map areas accordingly, providing more tailored results.\u003c/p\u003e\u003cp id=\"a689\"\u003eWe constructed our machine learning model in the following manner. This is a result of three iterations that introduced the machine learning model, expanded its feature set, and expanded search attribution. The architecture is depicted in the figure below.\u003c/p\u003e\u003col\u003e\u003cli id=\"ac3b\"\u003eTraining Examples: Searches issued by a booker by entering a destination in the search bar or manipulating the map that contained the booked listing in their search results on the same day or one day before the booking. We discard any bookings that are canceled 7 days after booking.\u003c/li\u003e\u003cli id=\"9ce7\"\u003eTraining Features: We derive features directly from the search request such as location name, stay length, number of guests, price filters, location country, etc. There are 9 continuous features and 19 categorical features in total.\u003c/li\u003e\u003cli id=\"0824\"\u003eTraining Labels: The latitude and longitude coordinates of the booked listing attributed to the search\u003c/li\u003e\u003cli id=\"53c4\"\u003eArchitecture: A two layer neural network of size 256 was chosen in order to have more flexibility for loss formulation compared to traditional regression and decision tree based approaches.\u003c/li\u003e\u003cli id=\"aa21\"\u003eModel Output: 4 floats that define the latitude and longitude offsets from the center latitude and longitude coordinates of the searched destination that represent the relevant map area.\u003c/li\u003e\u003cli id=\"cc3b\"\u003eLoss: Trained to predict map areas that contain their associated booked listing while minimizing the size of the predicted map area and the occurrence of predictions that cannot construct a valid rectangular map area.\u003c/li\u003e\u003c/ol\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"4685\"\u003eThe machine learning system increased the recall of booked listings (i.e., how often the system retrieved a listing that was eventually booked) by 7.12% and reduced the size of the retrieval map area by 40.83%. It had a cumulative impact of +1.8% in uncancelled bookers on the platform. The initial model was evaluated against the baseline and each subsequent model iteration was evaluated against the preceding outgoing model.\u003c/p\u003e\u003cp id=\"e941\"\u003eFigures below demonstrate how search results for a specific street in Lima, Peru improved dramatically with the model by surfacing results that are much closer to the searched street.\u003c/p\u003e\u003cp id=\"23ab\"\u003eBefore\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"227f\"\u003eAfter\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003ch2 id=\"32f5\"\u003eExploring New Frontiers with Reinforcement Learning\u003c/h2\u003e\u003cp id=\"20a8\"\u003eWhile machine learning improved the system’s ability to differentiate search results, there was still room for improvement, particularly in learning whether locations that had never been surfaced before were relevant to guests for a search. To address this, Airbnb introduced reinforcement learning to the location retrieval process.\u003c/p\u003e\u003cp id=\"6451\"\u003eReinforcement learning allowed the system to continuously learn from guest interactions by surfacing new areas for a given destination and adjusting the retrieval map area based on guest booking behavior. This approach, known as a contextual multi-armed bandit problem, involved balancing exploration (surfacing new locations) with exploitation (surfacing previous successful locations). The system could actively experiment with different retrieval map areas learning from guest bookings to refine its predictions.\u003c/p\u003e\u003cp id=\"a30a\"\u003eApplying a contextual multi-armed bandit traditionally requires defining an active contextual estimator, a method for uncertainty estimation, and an exploration strategy. We took the following approach given product constraints, system constraints, and the nature of our model formulation. The architecture is depicted in the figure below.\u003c/p\u003e\u003col\u003e\u003cli id=\"a93c\"\u003eActive contextual estimation: We employed our existing machine learning model for location retrieval retrained on a daily basis to regularly learn from any new bookings data that we collect while surfacing previously unshown locations.\u003c/li\u003e\u003cli id=\"2f1f\"\u003eUncertainty estimation: We modified our model architecture with a random dropout layer to generate 32 unique predictions for a given search \u003ca href=\"https://arxiv.org/abs/1506.02142\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e(Monte Carlo Dropout\u003c/a\u003e). This allows us to measure the mean and standard deviation of our prediction while minimizing negative impact to system performance and changes to our existing model formulation.\u003c/li\u003e\u003cli id=\"6592\"\u003eExploration Strategy: We compute an \u003ca href=\"https://www.sciencedirect.com/science/article/pii/0196885885900028/pdf?md5=5e944497404774c469271b5074a677a8\u0026amp;pid=1-s2.0-0196885885900028-main.pdf\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eupper confidence bound\u003c/a\u003e using the mean and standard deviation of our prediction in order to construct larger retrieval map areas based on the model’s confidence in its prediction for the search.\u003c/li\u003e\u003c/ol\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"38e0\"\u003eThis system successfully explored more for less-traveled locations where it was less confident and explored less for locations that are often searched and booked. For example, pictured below are the mean (inner) and upper confidence bound (outer) estimates of retrieval map areas for San Francisco, CA (left) and Smith Mountain Lake, Virginia (right). San Francisco is searched almost 25x more than Smith Mountain Lake with proportionately more bookings as well. As a result, the model is more confident in its retrieval map area estimate for San Francisco vs Smith Mountain Lake resulting in 2–3x less exploration for San Francisco queries vs Smith Mountain Lake.\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"e5bd\"\u003eThe reinforcement learning system was also tested against the outgoing machine learning model in online A/B experiments showing a cumulative 0.51% increase in uncanceled bookers and 0.71% increase in 5 star trip rate over two iterations that introduced reinforcement learning and optimized scoring of the more complex model.\u003c/p\u003e\u003ch2 id=\"3fed\"\u003eConclusion: A Transformative Journey\u003c/h2\u003e\u003cp id=\"206e\"\u003eAirbnb’s journey from simple heuristics to sophisticated machine learning and reinforcement learning models demonstrates the power of data-driven approaches in transforming complex systems. By continually iterating and improving its location retrieval process, Airbnb has not only enhanced the relevance of its search results but also helped guests experience more 5 star trips.\u003c/p\u003e\u003cp id=\"6751\"\u003eThis transformation cumulatively results in a 2.66% increase in uncanceled bookers — a major achievement for a company operating at Airbnb’s scale. More details can be found in \u003ca href=\"https://arxiv.org/abs/2408.13399\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eour technical paper\u003c/a\u003e. As Airbnb continues to innovate, we are continuously evaluating and introducing more advanced features and retrieval mechanisms like retrieving with complex polygons . These will further refine and enhance the search experience for millions of guests worldwide.\u003c/p\u003e\u003cp id=\"e269\"\u003eIf this type of work interests you, check out some of our related positions and more at \u003ca href=\"https://careers.airbnb.com/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eCareers at Airbnb\u003c/a\u003e!\u003c/p\u003e\u003ch2 id=\"935a\"\u003e****************\u003c/h2\u003e\u003cp id=\"f64b\"\u003e\u003cem\u003eAll product names, logos, and brands are property of their respective owners. All company, product and service names used in this website are for identification purposes only. Use of these names, logos, and brands does not imply endorsement.\u003c/em\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "13 min read",
  "publishedTime": "2024-11-11T18:14:35.417Z",
  "modifiedTime": null
}
