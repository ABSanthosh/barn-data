{
  "id": "c1d5768d-d8f9-4c8a-8959-25f0a27fca1c",
  "title": "Google Previews Gemini's Agent Mode in Android Studio Narwhal",
  "link": "https://www.infoq.com/news/2025/06/gemini-agent-mode-android-studio/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "Google has announced the integration of Gemini in Android Studio's Agent Mode into the latest canary release of Android Studio, Android Studio Narwhal preview. According to Google, the new Agent Mode is designed to handle multi-step development tasks that span across several files. By Sergio De Simone",
  "author": "Sergio De Simone",
  "published": "Mon, 30 Jun 2025 01:00:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Android",
    "Gemini",
    "Android Studio",
    "Google",
    "Large language models",
    "Mobile",
    "Agents",
    "Development",
    "news"
  ],
  "byline": "Sergio De Simone",
  "length": 2975,
  "excerpt": "Google has announced the integration of Gemini in Android Studio's Agent Mode into the latest canary release of Android Studio, Android Studio Narwhal preview. According to Google, the new Agent Mode",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s2_20250605075544/apple-touch-icon.png",
  "text": "Google has announced the integration of Gemini in Android Studio's Agent Mode into the latest canary release of Android Studio, Android Studio Narwhal preview. According to Google, the new Agent Mode is designed to handle multi-step development tasks that span across several files. Agent Mode takes Gemini integration in Android Studio a step forward by going beyond what was previously possible through simple chat interactions. Specifically, Agent Mode uses the entire project as context, not just the contents of the chat window. Its deeper integration with the IDE also allows it to directly modify the project, rather than merely suggesting code snippets to copy and paste. Most importantly, it can execute multi-step tasks. With Agent Mode, you can describe a complex goal in natural language — from generating unit tests to complex refactors — and the agent formulates an execution plan that can span multiple files in your project and executes under your direction. Examples of tasks you can ask Agent Mode to perform include building a project and fixing all errors, extracting hardcoded strings and migrating them to strings.xml, adding support for dark mode to an existing application, and more. The agent carries out requested tasks step by step, allowing developers to review the changes. If they’re not satisfied, they can provide feedback and ask the agent to provide a new solution based on it until the result meets their expectations. Agent Mode can interact with external tools via the Model Context Protocol (MCP), for example to create a pull request directly from Android Studio, or use any of the MCP servers currently available. The initial implementation of MCP support in this preview is partial, as only the stdio transport is available, with support for Streamable HTTP transport planned for a future release, along with external context resources, and prompt templates. Agent Mode can be used with the Gemini's free tier, which supports a limited context window though. Alternatively, you can use a one million tokens window by upgrading to Gemini 2.5 Pro. Google highlights that Agent Mode is especially useful for routine, time-consuming tasks, helping free up developers’ time for more creative work. This could be seen as a subtle way to set expectation right about what this tool can bring to a developer's workflow, or a hint at the most appropriate way to use it day to day. As this is still a preview release, it’s expected that not all features will work flawlessly in every scenario. Early adopters of Gemini in Android Studio’s Agent Mode have reported several shortcomings, including issues seemingly related to the tool’s inability to run external tools to access source files or modify them. Google is aware of these issues and is actively working to address them. About the Author Sergio De Simone",
  "image": "https://res.infoq.com/news/2025/06/gemini-agent-mode-android-studio/en/headerimage/gemini-agent-mode-android-studio-1751176618411.jpeg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eGoogle has announced the integration of Gemini in Android Studio\u0026#39;s Agent Mode into the latest canary release of Android Studio, \u003ca href=\"https://developer.android.com/studio/preview\"\u003eAndroid Studio Narwhal preview\u003c/a\u003e. According to Google, the new Agent Mode is designed to handle multi-step development tasks that span across several files.\u003c/p\u003e\n\n\u003cp\u003eAgent Mode takes Gemini integration in Android Studio a step forward by going beyond what was previously possible through simple chat interactions. Specifically, Agent Mode uses the entire project as context, not just the contents of the chat window. Its deeper integration with the IDE also allows it to directly modify the project, rather than merely suggesting code snippets to copy and paste. Most importantly, it can execute multi-step tasks.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eWith Agent Mode, you can describe a complex goal in natural language — from generating unit tests to complex refactors — and the agent formulates an execution plan that can span multiple files in your project and executes under your direction.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eExamples of tasks you can ask Agent Mode to perform include building a project and fixing all errors, extracting hardcoded strings and migrating them to \u003ccode\u003estrings.xml\u003c/code\u003e, adding support for dark mode to an existing application, and more.\u003c/p\u003e\n\n\u003cp\u003eThe agent carries out requested tasks step by step, allowing developers to review the changes. If they’re not satisfied, they can provide feedback and ask the agent to provide a new solution based on it until the result meets their expectations.\u003c/p\u003e\n\n\u003cp\u003eAgent Mode can interact with external tools via the \u003ca href=\"https://www.infoq.com/model-context-protocol/\"\u003eModel Context Protocol (MCP)\u003c/a\u003e, for example to create a pull request directly from Android Studio, or use any of the \u003ca href=\"https://modelcontextprotocol.io/\"\u003eMCP servers currently available\u003c/a\u003e. The initial implementation of MCP support in this preview is partial, as only the stdio transport is available, with support for Streamable HTTP transport planned for a future release, along with external context resources, and prompt templates.\u003c/p\u003e\n\n\u003cp\u003eAgent Mode can be \u003ca href=\"https://developer.android.com/studio/preview/gemini/agent-mode#add-gemini\"\u003eused with the Gemini\u0026#39;s free tier\u003c/a\u003e, which supports a limited context window though. Alternatively, you can use a one million tokens window by upgrading to Gemini 2.5 Pro.\u003c/p\u003e\n\n\u003cp\u003eGoogle highlights that Agent Mode is especially useful for routine, time-consuming tasks, helping free up developers’ time for more creative work. This could be seen as a subtle way to set expectation right about what this tool can bring to a developer\u0026#39;s workflow, or a hint at the most appropriate way to use it day to day.\u003c/p\u003e\n\n\u003cp\u003eAs this is still a preview release, it’s expected that not all features will work flawlessly in every scenario. Early adopters of Gemini in Android Studio’s Agent Mode have reported several shortcomings, including issues seemingly related to the tool’s inability to run external tools to \u003ca href=\"https://www.reddit.com/r/androiddev/comments/1lin1w5/comment/mzj0ukw/\"\u003eaccess source files\u003c/a\u003e or \u003ca href=\"https://www.reddit.com/r/androiddev/comments/1lin1w5/comment/n080r65/\"\u003emodify them\u003c/a\u003e. Google is aware of these issues and is actively working to address them.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Sergio-De-Simone\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eSergio De Simone\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": "2025-06-30T00:00:00Z",
  "modifiedTime": null
}
