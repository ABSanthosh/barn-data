{
  "id": "a2a4a73f-b6d3-48ba-bce9-a128baaa8080",
  "title": "IntelliJ IDEA 2025.1 EAP 2: Containerfile Support and Updates for Dockerfiles",
  "link": "https://blog.jetbrains.com/idea/2025/01/intellij-idea-2025-1-eap-2/",
  "description": "IntelliJ IDEA 2025.1 EAP 2 is out! With a focus on improving workflows for environments like Docker containers and other remote solutions, this build introduces updates that simplify setup and enhance productivity in these scenarios. You can now download this version from our website, update directly from within the IDE, use the free Toolbox App, […]",
  "author": "Maria Kosukhina",
  "published": "Wed, 22 Jan 2025 18:39:56 +0000",
  "source": "https://blog.jetbrains.com/feed",
  "categories": [
    "eap"
  ],
  "byline": "Maria Kosukhina",
  "length": 4892,
  "excerpt": "IntelliJ IDEA 2025.1 EAP 2 is out!With a focus on improving workflows for environments like Docker containers and other remote solutions, this build introduces updates that simplify setup and enhance",
  "siteName": "The JetBrains Blog",
  "favicon": "https://blog.jetbrains.com/wp-content/uploads/2024/01/cropped-mstile-310x310-1-180x180.png",
  "text": "IntelliJ IDEA – the Leading Java and Kotlin IDE, by JetBrains Early Access ProgramIntelliJ IDEA 2025.1 EAP 2: Containerfile Support and Updates for Dockerfiles IntelliJ IDEA 2025.1 EAP 2 is out!With a focus on improving workflows for environments like Docker containers and other remote solutions, this build introduces updates that simplify setup and enhance productivity in these scenarios. You can now download this version from our website, update directly from within the IDE, use the free Toolbox App, or install it via snap packages for Ubuntu.  Download IntelliJ IDEA 2025.1 EAP 2 Try the new updates delivered with the second EAP build for yourself!  Remote development environments  Containerfile support  Container ecosystems have been evolving beyond Docker-centric workflows, with tools like Podman and Buildah favoring Containerfile as a neutral alternative. However, IDE support, which is typically tied to Dockerfile, often lagged behind. That created friction, forcing developers to either rename Containerfile to Dockerfile, lose Podman-specific best practices, or just plow through with basic text editing.  Now, JetBrains IDEs come with built-in Containerfile recognition. This might seem like a relatively minor enhancement, but it really contributes to a smooth developer experience for anyone juggling Docker, Podman, and Buildah in the same environment. It is no longer necessary to keep separate versions of your build files just so your IDE doesn’t treat them as plain text. And for new hires or open-source contributors using Podman straight from the get-go, it provides enhanced clarity. Syntax highlighting, linting, and snippet suggestions are fully supported, reducing errors, speeding up debugging, and improving clarity – especially for new hires or contributors using Podman. Now, it doesn’t matter if you switch engines or if half the team uses Docker while the other half uses Podman – everyone can work with the same file, recognized by the same tools. Support for lowercase instructions in Dockerfiles  IntelliJ IDEA 2025.1 EAP 2 brings enhanced Dockerfile support, allowing you to write directives in lowercase in addition to the conventional uppercase. Previously, the IDE recognized commands like FROM, RUN, and COPY primarily as Dockerfile instructions. Now, you’re also free to use the lowercase from, run, and copy, too. Although Docker itself is case-insensitive with regard to instructions, uppercase has historically been used to improve readability and to distinguish instructions from arguments. However, alternative casing styles might be preferred to accommodate specific commands, plugins, corporate standards, or personal preferences. With this update, you can adhere to your preferred conventions without risking missing highlights or encountering misleading warnings from the IDE. New inspection for reliable ENTRYPOINT initialization with exec We’ve introduced a new Dockerfile inspection that ensures your ENTRYPOINT is correctly initiated with exec. Using exec allows signals sent via docker stop to reach the main process directly, preventing lingering or improperly terminated processes. If you omit exec, your application may run as a child process and fail to receive signals like SIGTERM, making shutdown unreliable. This inspection highlights incorrect ENTRYPOINT usage and guides you toward best practices, helping you maintain cleaner Dockerfiles and more robust container lifecycles. These are the key updates for this week. For the complete list of changes, refer to the release notes. We’d love for you to explore the new features and share your feedback. Let us know your thoughts and ideas in the comments below, or get in touch with us on X. If you encounter any issues, please report them through our issue tracker. Happy developing! Subscribe to IntelliJ IDEA Blog updates Discover more",
  "image": "https://blog.jetbrains.com/wp-content/uploads/2025/01/IntelliJ-IDEA-2025.1-EAP-2_social.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"main\"\u003e\n    \u003cdiv\u003e\n                        \u003ca href=\"https://blog.jetbrains.com/idea/\"\u003e\n                            \u003cimg src=\"https://blog.jetbrains.com/wp-content/uploads/2019/01/IntelliJ-IDEA-1.svg\" alt=\"Idea logo\"/\u003e\n                                                                                                \n                                                                                    \u003c/a\u003e\n                                                    \u003cp\u003eIntelliJ IDEA – the Leading Java and Kotlin IDE, by JetBrains\u003c/p\u003e\n                                            \u003c/div\u003e\n                            \u003csection data-clarity-region=\"article\"\u003e\n                \u003cdiv\u003e\n                    \t\t\t\t\u003cp\u003e\u003ca href=\"https://blog.jetbrains.com/idea/category/eap/\"\u003eEarly Access Program\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"major-updates\"\u003eIntelliJ IDEA 2025.1 EAP 2: Containerfile Support and Updates for Dockerfiles\u003c/h2\u003e                    \n                    \n\u003cdiv\u003e\u003cp\u003eIntelliJ IDEA 2025.1 EAP 2 is out!\u003c/p\u003e\u003cp\u003eWith a focus on improving workflows for environments like Docker containers and other remote solutions, this build introduces updates that simplify setup and enhance productivity in these scenarios.\u003c/p\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eYou can now download this version from our \u003ca href=\"https://www.jetbrains.com/idea/nextversion/\" target=\"_blank\" rel=\"noopener\"\u003ewebsite\u003c/a\u003e, update directly from within the IDE, use the free \u003ca href=\"https://www.jetbrains.com/toolbox-app/\" target=\"_blank\" rel=\"noopener\"\u003eToolbox App\u003c/a\u003e, or install it via snap packages for Ubuntu. \u003c/p\u003e\n\n\n\n\u003cp\u003e\u003ca href=\"https://www.jetbrains.com/idea/nextversion/\" target=\"_blank\" rel=\"noopener\"\u003eDownload IntelliJ IDEA 2025.1 EAP 2\u003c/a\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003eTry the new updates delivered with the second EAP build for yourself! \u003c/p\u003e\n\n\n\n\u003ch2\u003eRemote development environments \u003c/h2\u003e\n\n\n\n\u003ch3\u003eContainerfile support \u003c/h3\u003e\n\n\n\n\u003cp\u003eContainer ecosystems have been evolving beyond Docker-centric workflows, with tools like Podman and Buildah favoring Containerfile as a neutral alternative. However, IDE support, which is typically tied to Dockerfile, often lagged behind. That created friction, forcing developers to either rename Containerfile to Dockerfile, lose Podman-specific best practices, or just plow through with basic text editing. \u003c/p\u003e\n\n\n\n\u003cp\u003eNow, JetBrains IDEs come with built-in Containerfile recognition. This might seem like a relatively minor enhancement, but it really contributes to a smooth developer experience for anyone juggling Docker, Podman, and Buildah in the same environment.\u003c/p\u003e\n\n\n\n\u003cp\u003eIt is no longer necessary to keep separate versions of your build files just so your IDE doesn’t treat them as plain text. And for new hires or open-source contributors using Podman straight from the get-go, it provides enhanced clarity.\u003c/p\u003e\n\n\n\n\u003cp\u003eSyntax highlighting, linting, and snippet suggestions are fully supported, reducing errors, speeding up debugging, and improving clarity – especially for new hires or contributors using Podman. Now, it doesn’t matter if you switch engines or if half the team uses Docker while the other half uses Podman – everyone can work with the same file, recognized by the same tools.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXfOPB05M_qJxC8Zxv-0AwdRIRx1NQa_3u5oELJ4miKnEXWs7fs6Y2GGRBbLUQM7lOikq_RjgZ-eIrDWAD4PAAj8PP-XtouH4PGdVij4om6B5WaQezNYN6qjS0gy55KL9WbRkDTfdA?key=W3y1-U-bXo4mtQ_gY7TGf7nc\" alt=\"image.png\"/\u003e\u003c/figure\u003e\n\n\n\n\u003ch3\u003eSupport for lowercase instructions in Dockerfiles \u003c/h3\u003e\n\n\n\n\u003cp\u003eIntelliJ IDEA 2025.1 EAP 2 brings enhanced Dockerfile support, allowing you to write directives in lowercase in addition to the conventional uppercase. Previously, the IDE recognized commands like \u003ccode\u003eFROM\u003c/code\u003e, \u003ccode\u003eRUN\u003c/code\u003e, and \u003ccode\u003eCOPY\u003c/code\u003e primarily as Dockerfile instructions. Now, you’re also free to use the lowercase \u003ccode\u003efrom\u003c/code\u003e, \u003ccode\u003erun\u003c/code\u003e, and \u003ccode\u003ecopy\u003c/code\u003e, too.\u003c/p\u003e\n\n\n\n\u003cp\u003eAlthough Docker itself is case-insensitive with regard to instructions, uppercase has historically been used to improve readability and to distinguish instructions from arguments. However, alternative casing styles might be preferred to accommodate specific commands, plugins, corporate standards, or personal preferences. With this update, you can adhere to your preferred conventions without risking missing highlights or encountering misleading warnings from the IDE.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXfZLAC84YXFVcLGtALThkrEo5omPUz_kfz8ijnR8UWo5ceyxQt80ijTLdb4UEXG5f9_wRrL22ZhB96Pra8OG5h0-AUNOic_ICLbSmLIzkrE7cdTKJ_CPPwRC-HOfwbkcSW_zSCd?key=W3y1-U-bXo4mtQ_gY7TGf7nc\" alt=\"image.png\"/\u003e\u003c/figure\u003e\n\n\n\n\u003ch3\u003eNew inspection for reliable \u003ccode\u003eENTRYPOINT\u003c/code\u003e initialization with exec\u003c/h3\u003e\n\n\n\n\u003cp\u003eWe’ve introduced a new Dockerfile inspection that ensures your \u003ccode\u003eENTRYPOINT\u003c/code\u003e is correctly initiated with \u003ccode\u003eexec\u003c/code\u003e. Using exec allows signals sent via \u003ccode\u003edocker stop\u003c/code\u003e to reach the main process directly, preventing lingering or improperly terminated processes. If you omit \u003ccode\u003eexec\u003c/code\u003e, your application may run as a child process and fail to receive signals like \u003ccode\u003eSIGTERM\u003c/code\u003e, making shutdown unreliable. This inspection highlights incorrect \u003ccode\u003eENTRYPOINT\u003c/code\u003e usage and guides you toward best practices, helping you maintain cleaner Dockerfiles and more robust container lifecycles.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXfLwUkTZQmg3eBuqu7Ujbhjkzh9_-wxKxlLssfyum8ERUAG2G6cY-cIRwsSZY1bQG-PSfw0uAwGhykJD5-OQfC80uSMRfFpdCw995TfiZsBvErPWic5KUiq-dX8Dbzg9pB7fyu7?key=W3y1-U-bXo4mtQ_gY7TGf7nc\" alt=\"image1.png\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eThese are the key updates for this week. For the complete list of changes, refer to the \u003ca href=\"https://youtrack.jetbrains.com/articles/IDEA-A-2100662350/IntelliJ-IDEA-2025.1-EAP-2-251.17181.16-build-Release-Notes\" target=\"_blank\" rel=\"noopener\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cp\u003eWe’d love for you to explore the new features and share your feedback. Let us know your thoughts and ideas in the comments below, or get in touch with us on \u003ca href=\"https://x.com/intellijidea\" target=\"_blank\"\u003eX\u003c/a\u003e. If you encounter any issues, please report them through our \u003ca href=\"https://youtrack.jetbrains.com/issues/IDEA\" target=\"_blank\" rel=\"noopener\"\u003eissue tracker\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cp\u003eHappy developing!\u003c/p\u003e\n                    \n                                                                \n                                                                                                                                \u003cdiv\u003e\n                                \u003cdiv\u003e\n                                                                            \u003ch4\u003eSubscribe to IntelliJ IDEA Blog updates\u003c/h4\u003e\n                                                                                                            \n                                \u003c/div\u003e\n                                \n                                \u003cp\u003e\u003cimg src=\"https://blog.jetbrains.com/wp-content/themes/jetbrains/assets/img/img-form.svg\" alt=\"image description\"/\u003e\n                                                                    \u003c/p\u003e\n                            \u003c/div\u003e\n                                                            \u003c/div\u003e\n                \u003ca href=\"#\"\u003e\u003c/a\u003e\n                \n                \n            \u003c/section\u003e\n                    \u003cdiv\u003e\n                \u003cp\u003e\n                    \u003ch2\u003eDiscover more\u003c/h2\u003e\n                \u003c/p\u003e\n                \n            \u003c/div\u003e\n                \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": null,
  "modifiedTime": null
}
