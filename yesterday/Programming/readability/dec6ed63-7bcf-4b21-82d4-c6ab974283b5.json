{
  "id": "dec6ed63-7bcf-4b21-82d4-c6ab974283b5",
  "title": "Java News Roundup: OpenJDK JEP Updates, Spring AI, Quarkus, LangChain4j, JReleaser, WildFly",
  "link": "https://www.infoq.com/news/2025/05/java-news-roundup-apr28-2025/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "This week's Java roundup for April 28th, 2025 features news highlighting: four JEPs proposed to target and targeted for JDK 25; new JEPs; three new JEPs; the eighth milestone release of Spring AI 1.0.0; Quarkus 3.22.0; the first release candidate of LangChain4j 1.0.0; the release of JReleaser 1.18.0; and Wildfly joins the Commonhaus Foundation. By Michael Redlich",
  "author": "Michael Redlich",
  "published": "Mon, 05 May 2025 16:15:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "LangChain",
    "JReleaser",
    "Spring Cloud",
    "Commonhaus Foundation",
    "Quarkus",
    "Java",
    "Spring AI",
    "Open JDK",
    "JDK 25",
    "Architecture \u0026 Design",
    "Development",
    "news"
  ],
  "byline": "Michael Redlich",
  "length": 5934,
  "excerpt": "This week's Java roundup for April 28th, 2025 features news highlighting: four JEPs proposed to target and targeted for JDK 25; new JEPs; three new JEPs; the eighth milestone release of Spring AI 1.0.",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s2_20250422123044_u1/apple-touch-icon.png",
  "text": "This week's Java roundup for April 28th, 2025 features news highlighting: four JEPs proposed to target and targeted for JDK 25; new JEPs; three new JEPs; the eighth milestone release of Spring AI 1.0.0; Quarkus 3.22.0; the first release candidate of LangChain4j 1.0.0; the release of JReleaser 1.18.0; and Wildfly joins the Commonhaus Foundation. OpenJDK Two JEPs have been elevated from Proposed to Target to Targeted for JDK 25, namely: JEP 512, Compact Source Files and Instance Main Methods, and JEP 511, Module Import Declarations, announced here and here, respectively. Two JEPs have been elevated from Candidate to Proposed to Target for JDK 25, namely: JEP 513, Flexible Constructor Bodies, and JEP 505, Structured Concurrency (Fifth Preview), announced here and here, respectively. Their reviews are expected to conclude by May 8, 2025. Details for each of these four JEPs may be found in this InfoQ news story. JEP 517, HTTP/3 for the HTTP Client API, has been elevated from its JEP Draft 8291976 to Candidate status. This JEP proposes to \"update the HTTPClient API to support the HTTP/3 protocol, so that libraries and applications can interact with HTTP/3 servers with minimal code change.\" JEP 515, Ahead-of-Time Method Profiling, has been elevated from its JEP Draft 8325147 to Candidate status. This JEP proposes to improve application warmup time by \"making method-execution profiles from a previous run of an application instantly available, when the HotSpot JVM starts.\" This allows the JIT compiler to immediately generate native code upon application startup as opposed to waiting for profiles to be collected. JEP 470, PEM Encodings of Cryptographic Objects (Preview), has been elevated from its JEP Draft 8300911 to Candidate status. This JEP previews \"an API for encoding objects that represent cryptographic keys, certificates, and certificate revocation lists into the widely-used Privacy-Enhanced Mail (PEM) transport format, and for decoding from that format back into objects.\" This feature will support conversions between PEM text and cryptographic objects in PKCS #8 and X.509 binary formats. JDK 25 Build 21 of the JDK 25 early-access builds was made available this past week featuring updates from Build 20 that include fixes for various issues. More details on this release may be found in the release notes. For JDK 25, developers are encouraged to report bugs via the Java Bug Database. Spring Framework The eighth milestone release of Spring AI 1.0.0 features \"several significant changes [that] would become breaking changes in an [upcoming] RC1 release.\" This additional milestone release serves as a transition for providing the deprecated API along wit the corresponding replacement APIs. More details on this release may be found in the upgrade notes and release notes. The first release candidate of Spring Cloud 2025.0.0, codenamed Northfields, features bug fixes and notable updates to sub-projects: Spring Cloud Kubernetes 3.3.0-RC1; Spring Cloud Function 4.3.0-RC1; Spring Cloud Stream 4.3.0-RC1; and Spring Cloud Circuit Breaker 3.3.0-RC1. This release is based on Spring Boot 3.5.0-RC1. More details on this release may be found in the release notes. Quarkus The release of Quarkus 3.22.0 features: Compose Dev Services that discover Compose specification files in a Quarkus application; a dedicated user interface to execute Hibernate Query Language (HQL) queries; and an improved test class loading infrastructure using a runtime classloader. More details on this release may be found in the release notes. LangChain4j The first release candidate (along with the fourth beta release) of LangChain4j delivers fie modules released under the release candidate, namely: langchain4j-core; langchain4j; langchain4j-http-client; langchain4j-http-client-jdk and langchain4j-open-ai wit the the remaining modules still under the milestone 4 release. Breaking changes include: a rename of the ChatLanguageModel and StreamingChatLanguageModel interfaces to ChatModel and StreamingChatModel, respectively; and a renaming and reshuffling of some internal utility classes that the team recommends that should not be directly used (even if they are public as these classes are now annotated with @Internal. More details on this release may be found in the release notes. JReleaser Version 1.18.0 of JReleaser, a Java utility that streamlines creating project releases, has been released to deliver: support for Forgejo, a self-hosted lightweight software forge; allow the native-image assembler to create FLAT_BINARY distributions; and support for deploying to the Sonatype Nexus 3 repository manager (NXRM3). More details on this release may be found in the release notes. Commonhaus Foundation The Commonhaus Foundation, a non-profit organization dedicated to the sustainability of open source libraries and frameworks, has announced that WildFly has joined the foundation this past week as a member project. In a blog post published in early-February 2025, Brian Stansberry, Senior Principal Software Engineer at Red Hat, described their rationale to transition to the foundation, writing: WildFly has been a successful project for a long time now, and I believe that's largely because we are passionate about serving our community. To help us continue on this path, we are considering moving WildFly to a vendor-neutral software foundation. Our hope is that by doing this we could further expand our community, improve our openness and transparency, refresh our governance model, and encourage more participation by contributors not affiliated with Red Hat. Other notable projects that have joined the foundation include: Infinispan, Debezium, JReleaser, JBang, OpenRewrite, SDKMAN, EasyMock, Objenesis and Feign. About the Author Michael Redlich",
  "image": "https://res.infoq.com/news/2025/05/java-news-roundup-apr28-2025/en/headerimage/java-istock-image-01-1746461665354.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eThis week\u0026#39;s Java roundup for April 28th, 2025 features news highlighting: four JEPs proposed to target and targeted for JDK 25; new JEPs; three new JEPs; the eighth milestone release of Spring AI 1.0.0; Quarkus 3.22.0; the first release candidate of LangChain4j 1.0.0; the release of JReleaser 1.18.0; and Wildfly joins the Commonhaus Foundation.\u003c/p\u003e\n\n\u003ch4\u003eOpenJDK\u003c/h4\u003e\n\n\u003cp\u003eTwo JEPs have been elevated from \u003cstrong\u003eProposed to Target\u003c/strong\u003e to \u003cstrong\u003eTargeted\u003c/strong\u003e for JDK 25, namely: JEP 512, \u003ca href=\"https://openjdk.org/jeps/512\"\u003eCompact Source Files and Instance Main Methods\u003c/a\u003e, and JEP 511, \u003ca href=\"https://openjdk.org/jeps/511\"\u003eModule Import Declarations\u003c/a\u003e, announced \u003ca href=\"https://mail.openjdk.org/pipermail/jdk-dev/2025-April/010019.html\"\u003ehere\u003c/a\u003e and \u003ca href=\"https://mail.openjdk.org/pipermail/jdk-dev/2025-April/010018.html\"\u003ehere\u003c/a\u003e, respectively.\u003c/p\u003e\n\n\u003cp\u003eTwo JEPs have been elevated from \u003cstrong\u003eCandidate\u003c/strong\u003e to \u003cstrong\u003eProposed to Target\u003c/strong\u003e for JDK 25, namely: JEP 513, \u003ca href=\"https://openjdk.org/jeps/513\"\u003eFlexible Constructor Bodies\u003c/a\u003e, and JEP 505, \u003ca href=\"https://openjdk.org/jeps/505\"\u003eStructured Concurrency (Fifth Preview)\u003c/a\u003e, announced \u003ca href=\"https://mail.openjdk.org/pipermail/jdk-dev/2025-April/010021.html\"\u003ehere\u003c/a\u003e and \u003ca href=\"https://mail.openjdk.org/pipermail/jdk-dev/2025-May/010027.html\"\u003ehere\u003c/a\u003e, respectively. \u003cspan\u003eTheir reviews are expected to conclude by May 8, 2025\u003c/span\u003e.\u003c/p\u003e\n\n\u003cp\u003eDetails for each of these four JEPs may be found in this InfoQ \u003ca href=\"https://www.infoq.com/news/2025/04/jdk-news-roundup-apr14-2025\"\u003enews story\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eJEP 517, \u003ca href=\"https://openjdk.org/jeps/517\"\u003eHTTP/3 for the HTTP Client API\u003c/a\u003e, has been \u003ca href=\"https://mail.openjdk.org/pipermail/jdk-dev/2025-May/010029.html\"\u003eelevated\u003c/a\u003e from its \u003cstrong\u003eJEP Draft 8291976\u003c/strong\u003e to \u003cstrong\u003eCandidate\u003c/strong\u003e status. This JEP proposes to \u0026#34;\u003cem\u003eupdate the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://docs.oracle.com/en/java/javase/24/docs/api/java.net.http/java/net/http/HttpClient.html\"\u003eHTTPClient\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e API to support the HTTP/3 protocol, so that libraries and applications can interact with HTTP/3 servers with minimal code change.\u003c/em\u003e\u0026#34;\u003c/p\u003e\n\n\u003cp\u003eJEP 515, \u003ca href=\"https://openjdk.org/jeps/515\"\u003eAhead-of-Time Method Profiling\u003c/a\u003e, has been \u003ca href=\"https://mail.openjdk.org/pipermail/jdk-dev/2025-May/010030.html\"\u003eelevated\u003c/a\u003e from its \u003cstrong\u003eJEP Draft 8325147\u003c/strong\u003e to \u003cstrong\u003eCandidate\u003c/strong\u003e status. This JEP proposes to improve application warmup time by \u0026#34;\u003cem\u003emaking method-execution profiles from a previous run of an application instantly available, when the HotSpot JVM starts.\u003c/em\u003e\u0026#34; This allows the JIT compiler to immediately generate native code upon application startup as opposed to waiting for profiles to be collected.\u003c/p\u003e\n\n\u003cp\u003eJEP 470, \u003ca href=\"https://openjdk.org/jeps/470\"\u003ePEM Encodings of Cryptographic Objects (Preview)\u003c/a\u003e, has been \u003ca href=\"https://mail.openjdk.org/pipermail/jdk-dev/2025-April/010017.html\"\u003eelevated\u003c/a\u003e from its \u003cstrong\u003eJEP Draft 8300911\u003c/strong\u003e to \u003cstrong\u003eCandidate\u003c/strong\u003e status. This JEP previews \u0026#34;\u003cem\u003ean API for encoding objects that represent cryptographic keys, certificates, and certificate revocation lists into the widely-used Privacy-Enhanced Mail (PEM) transport format, and for decoding from that format back into objects.\u003c/em\u003e\u0026#34; This feature will support conversions between PEM text and cryptographic objects in \u003ca href=\"https://datatracker.ietf.org/doc/html/rfc5208\"\u003ePKCS #8\u003c/a\u003e and \u003ca href=\"https://datatracker.ietf.org/doc/html/rfc5280\"\u003eX.509\u003c/a\u003e binary formats.\u003c/p\u003e\n\n\u003ch4\u003eJDK 25\u003c/h4\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/openjdk/jdk/releases/tag/jdk-25%2B21\"\u003eBuild 21\u003c/a\u003e of the JDK 25 \u003ca href=\"https://jdk.java.net/25/\"\u003eearly-access builds\u003c/a\u003e was made available this past week featuring \u003ca href=\"https://github.com/openjdk/jdk/compare/jdk-25%2B20...jdk-25%2B21\"\u003eupdates\u003c/a\u003e from Build 20 that include fixes for various \u003ca href=\"https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2025%20and%20%22resolved%20in%20build%22%20%3D%20b21%20order%20by%20component%2C%20subcomponent\"\u003eissues\u003c/a\u003e. More details on this release may be found in the \u003ca href=\"https://jdk.java.net/25/release-notes\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eFor \u003ca href=\"https://openjdk.org/projects/jdk/25/\"\u003eJDK 25\u003c/a\u003e, developers are encouraged to report bugs via the \u003ca href=\"https://bugreport.java.com/bugreport/\"\u003eJava Bug Database\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eSpring Framework\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://spring.io/blog/2025/04/30/spring-ai-1-0-0-m8-released\"\u003eeighth milestone release\u003c/a\u003e of \u003ca href=\"https://spring.io/projects/spring-ai\"\u003eSpring AI\u003c/a\u003e 1.0.0 features \u0026#34;\u003cem\u003eseveral significant changes [that] would become breaking changes in an [upcoming] RC1 release.\u003c/em\u003e\u0026#34; This additional milestone release serves as a transition for providing the deprecated API along wit the corresponding replacement APIs. More details on this release may be found in the \u003ca href=\"https://docs.spring.io/spring-ai/reference/upgrade-notes.html#upgrading-to-1-0-0-m8\"\u003eupgrade notes\u003c/a\u003e and \u003ca href=\"https://docs.spring.io/spring-ai/reference/upgrade-notes.html#upgrading-to-1-0-0-m8\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://spring.io/blog/2025/05/01/spring-cloud-2025-0-0-rc1-released\"\u003efirst release candidate\u003c/a\u003e of \u003ca href=\"https://spring.io/projects/spring-cloud\"\u003eSpring Cloud\u003c/a\u003e 2025.0.0, codenamed Northfields, features bug fixes and notable updates to sub-projects: \u003ca href=\"https://spring.io/projects/spring-cloud-kubernetes\"\u003eSpring Cloud Kubernetes\u003c/a\u003e 3.3.0-RC1; \u003ca href=\"https://spring.io/projects/spring-cloud-function\"\u003eSpring Cloud Function\u003c/a\u003e 4.3.0-RC1; \u003ca href=\"https://spring.io/projects/spring-cloud-stream\"\u003eSpring Cloud Stream\u003c/a\u003e 4.3.0-RC1; and \u003ca href=\"https://spring.io/projects/spring-cloud-circuitbreaker\"\u003eSpring Cloud Circuit Breaker\u003c/a\u003e 3.3.0-RC1. This release is based on Spring Boot 3.5.0-RC1. More details on this release may be found in the \u003ca href=\"https://github.com/spring-cloud/spring-cloud-release/wiki/Spring-Cloud-2025.0-Release-Notes\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eQuarkus\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://quarkus.io/blog/quarkus-3-22-1-released/\"\u003erelease\u003c/a\u003e of \u003ca href=\"https://quarkus.io/\"\u003eQuarkus\u003c/a\u003e 3.22.0 features: \u003ca href=\"https://github.com/quarkusio/quarkus/pull/46848\"\u003eCompose Dev Services\u003c/a\u003e that discover \u003ca href=\"https://github.com/compose-spec/compose-spec/blob/main/README.md\"\u003eCompose\u003c/a\u003e specification files in a Quarkus application; a dedicated user interface to execute \u003ca href=\"https://docs.jboss.org/hibernate/orm/7.0/querylanguage/html_single/Hibernate_Query_Language.html\"\u003eHibernate Query Language\u003c/a\u003e (HQL) queries; and an improved test class loading infrastructure using a runtime classloader. More details on this release may be found in the \u003ca href=\"https://github.com/quarkusio/quarkus/releases/tag/3.22.0\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eLangChain4j\u003c/h4\u003e\n\n\u003cp\u003eThe \u003cem\u003efirst release candidate\u003c/em\u003e (along with the \u003cem\u003efourth beta release\u003c/em\u003e) of \u003ca href=\"https://docs.langchain4j.dev/\"\u003eLangChain4j\u003c/a\u003e delivers fie modules released under the release candidate, namely: \u003cstrong\u003e\u003ccode\u003elangchain4j-core\u003c/code\u003e\u003c/strong\u003e; \u003cstrong\u003e\u003ccode\u003elangchain4j\u003c/code\u003e\u003c/strong\u003e; \u003cstrong\u003e\u003ccode\u003elangchain4j-http-client\u003c/code\u003e\u003c/strong\u003e; \u003cstrong\u003e\u003ccode\u003elangchain4j-http-client-jdk\u003c/code\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003ccode\u003elangchain4j-open-ai\u003c/code\u003e\u003c/strong\u003e wit the the remaining modules still under the milestone 4 release. Breaking changes include: a rename of the \u003cstrong\u003e\u003ccode\u003eChatLanguageModel\u003c/code\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003ccode\u003eStreamingChatLanguageModel\u003c/code\u003e\u003c/strong\u003e interfaces to \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/langchain4j/langchain4j/blob/main/langchain4j-core/src/main/java/dev/langchain4j/model/chat/ChatModel.java\"\u003eChatModel\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/langchain4j/langchain4j/blob/main/langchain4j-core/src/main/java/dev/langchain4j/model/chat/StreamingChatModel.java\"\u003eStreamingChatModel\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e, respectively; and a renaming and reshuffling of some internal utility classes that the team recommends that should not be directly used (even if they are \u003cstrong\u003e\u003ccode\u003epublic\u003c/code\u003e\u003c/strong\u003e as these classes are now annotated with \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/langchain4j/langchain4j/blob/main/langchain4j-core/src/main/java/dev/langchain4j/Internal.java\"\u003e@Internal\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e. More details on this release may be found in the \u003ca href=\"https://github.com/langchain4j/langchain4j/releases/tag/1.0.0-rc1\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eJReleaser\u003c/h4\u003e\n\n\u003cp\u003eVersion 1.18.0 of \u003ca href=\"https://jreleaser.org/\"\u003eJReleaser\u003c/a\u003e, a Java utility that streamlines creating project releases, has been \u003ca href=\"https://andresalmiray.com/jreleaser-1-18-0-has-been-released/\"\u003ereleased\u003c/a\u003e to deliver: support for \u003ca href=\"https://forgejo.org/\"\u003eForgejo\u003c/a\u003e, a self-hosted lightweight software forge; allow the native-image assembler to create \u003cstrong\u003e\u003ccode\u003eFLAT_BINARY\u003c/code\u003e\u003c/strong\u003e distributions; and support for deploying to the Sonatype \u003ca href=\"https://jreleaser.org/guide/latest/reference/deploy/maven/nexus3.html\"\u003eNexus 3\u003c/a\u003e repository manager (NXRM3). More details on this release may be found in the \u003ca href=\"https://github.com/jreleaser/jreleaser/releases/tag/v1.18.0\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eCommonhaus Foundation\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://www.commonhaus.org/\"\u003eCommonhaus Foundation\u003c/a\u003e, a non-profit organization dedicated to the sustainability of open source libraries and frameworks, has \u003ca href=\"https://www.commonhaus.org/activity/259.html\"\u003eannounced\u003c/a\u003e that \u003ca href=\"https://www.wildfly.org/\"\u003eWildFly\u003c/a\u003e has joined the foundation this past week as a member project. In a blog post published in early-February 2025, \u003ca href=\"https://www.linkedin.com/in/brian-stansberry-5220636/\"\u003eBrian Stansberry\u003c/a\u003e, Senior Principal Software Engineer at Red Hat, described their rationale to transition to the foundation, \u003ca href=\"https://www.wildfly.org/news/2025/02/03/WildFly-in-a-Foundation/\"\u003ewriting\u003c/a\u003e:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eWildFly has been a successful project for a long time now, and I believe that\u0026#39;s largely because we are passionate about serving our community. To help us continue on this path, we are considering moving WildFly to a vendor-neutral software foundation. Our hope is that by doing this we could further expand our community, improve our openness and transparency, refresh our governance model, and encourage more participation by contributors not affiliated with Red Hat.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eOther notable projects that have joined the foundation include: \u003ca href=\"https://infinispan.org/\"\u003eInfinispan\u003c/a\u003e, \u003ca href=\"https://debezium.io/\"\u003eDebezium\u003c/a\u003e, \u003ca href=\"https://jreleaser.org/\"\u003eJReleaser\u003c/a\u003e, \u003ca href=\"https://www.jbang.dev/\"\u003eJBang\u003c/a\u003e, \u003ca href=\"https://docs.openrewrite.org/\"\u003eOpenRewrite\u003c/a\u003e, \u003ca href=\"https://sdkman.io/\"\u003eSDKMAN\u003c/a\u003e, \u003ca href=\"https://easymock.org/\"\u003eEasyMock\u003c/a\u003e, \u003ca href=\"https://objenesis.org/\"\u003eObjenesis\u003c/a\u003e and \u003ca href=\"https://github.com/OpenFeign/feign/blob/master/README.md\"\u003eFeign\u003c/a\u003e.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Michael-Redlich\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eMichael Redlich\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": "2025-05-05T00:00:00Z",
  "modifiedTime": null
}
