{
  "id": "8c12ed55-5341-4c1b-9271-8d4fcc70662e",
  "title": "",
  "link": "http://scripting.com/2024/10/17.html#a221105",
  "description": "I made the reallySimple package for Node.js because I wanted to make it as easy as possible to read feeds in Node apps. It should be as easy as reading a file. Give it the URL of a feed, get back a JavaScript object that's as simple as feeds are. It can read RSS, Atom and RDF feeds, but you get the same object regardless of what form the feed was in. I'm up for creating some example apps if you're interested. There is a very simple Hello World app included in the package and a set of demo apps. It's MIT-licensed, so you can do whatever you want with the code. It would lovely to see it ported. The idea is to plant some seeds in the Node.js world to make it easy for developers to try out new ideas with feeds, figuring the easier it is, the more people will do it. Be creative. Blow our minds! :-)",
  "author": "",
  "published": "Thu, 17 Oct 2024 22:11:05 GMT",
  "source": "http://scripting.com/rss.xml",
  "categories": null,
  "byline": "",
  "length": 5726,
  "excerpt": "Dave Winer, OG blogger, podcaster, developed first apps in many categories. Old enough to know better. It's even worse than it appears.",
  "siteName": "Scripting News",
  "favicon": "",
  "text": "It's even worse than it appears.. One of the things that makes me want to see Automattic stick around and grow is that they have a really large codebase that has been scaled, debugged and maintained for over 20 freaking years. And the most important thing -- they don't break users. The code I wrote to run against WordPress in the 00s still runs today. To me as a developer this speaks very loudly. It means it's safe to develop here. It means there's discipline in their development organization. Most companies don't do this, but the ones who do, have earned my deep respect. For all of Microsoft's sins, they were incredibly good at this too. It's why I liked working with them, and also why we laughed at each others' jokes if you can believe that. In some ways all the open source stuff is too complicated. I understand the concept of \"development org\" -- so I look at it that way. I dig around their codebase, see how they do things, and figure it'll work out pretty well if I just do it that way. Because the last people they're going to break are themselves. What I see on their latest APIs is maturity and completeness. They didn't rush off to the next thing before finishing. I found that in their Calypso API, which I've been building on. Honestly this is my kind of platform, it's what Manila's API would look like today probably if we had continued developing it. I'll see if I can find the docs around here somewhere. Long time ago. ;-)# I made the reallySimple package for Node.js because I wanted to make it as easy as possible to read feeds in Node apps. It should be as easy as reading a file. Give it the URL of a feed, get back a JavaScript object that's as simple as feeds are. It can read RSS, Atom and RDF feeds, but you get the same object regardless of what form the feed was in. I'm up for creating some example apps if you're interested. There is a very simple Hello World app included in the package and a set of demo apps. It's MIT-licensed, so you can do whatever you want with the code. It would lovely to see it ported. The idea is to plant some seeds in the Node.js world to make it easy for developers to try out new ideas with feeds, figuring the easier it is, the more people will do it. Be creative. Blow our minds! :-)# The question has come up in various contexts, is a Substack feed a blog? Yes, I think it can be. For some reason people thought I'd say no. In 2003, I compiled a list of things that make a blog a blog, and it's not about the software you use, rather it's about who's writing it, and whether they're being edited. Now it's a different question to ask if I would use it. I would not. Because it forces you to use their editor. And that's a pernicious form of lock-in. It might sound like a small thing, but it means you can't easily try out something new. You are not available to other software developers as a possible user, so no software will be designed for you. I know how well that kind of system works. And that's probably why they lock you into using their editor. If I can't switch without breaking everything, I'm not going there. # Mathew Ingram asks if AI will save us or kill us. It could both save and kill us. That's what's so disturbing about evolving. We live such short lives, people aren't really designed to evolve, but because of medicine and other tech, we are often forced to do it. Evolution can come many ways. Losing a job may force you to evolve. The dissolution of a marriage. Having life-saving surgery with a long recovery saves you for sure, but it might also kill you because you can't go back to being the person you were before. There might not be a path back. One thing's for sure we need saving. We can't survive without radical change. We're on a path that doesn't work. Is there any way for us to change radically without a complete collapse? Well, actually kind of looks like we might have been given a path out through AI. But it means we must give up control. But here's the funny thing about that. We aren't giving up anything because no one has any control. That's a political question in the US, can one person become a mad king and thus gain complete control. But he's 78 and not in good health, and that control could only last a few years at most. We will need saving from that. If somehow we could configure AI so it did what humans can't and won't do, at least our civilization might have a way forward if not our species. Just some random thoughts. Maybe unthinkable, but they occur to me anyway, which is why I have a blog. ðŸ˜„# I keep writing on my hybrid WordPress/Mastodon blog at my kitchen table. This morning I wrote about why I don't believe in the Ya Gotta Believe, a baseball slogan coined by a 1973 Mets pitcher Tug McGraw. It's on-topic because the Mets are in a challenging series with the Dodgers for the National League championship. No matter how it turns out, this is a historic year for the Mets, and no matter how it turns out I won't love the Mets any less if they lose. I think true believers believe in that -- love -- without any expectations, win or lose, or maybe even more if they lose. BTW, I know the rendering of the post isn't complete on Mastodon, and there are errors. I'm working with the people at Automattic at getting this right. I'm glad to see that Mastodon has the flexibility to do that. Anyway, I believe in the things I believe in, not because I \"gotta.\" I don't like the slogan because it doesn't reflect how I feel about the team. My philosophy is respectful (in a way) of the teams the Mets beat, because I understand that their fans don't love them any less because they lost. If anything I think the better slogan for the Mets would be this: Wait till next year! ðŸ˜„#",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"idPageTopText\"\u003e\n\t\n\t\u003cp\u003eIt\u0026#39;s even worse than it appears..\u003c/p\u003e\n\t\u003c/div\u003e\u003cdiv id=\"idDayContainer\"\u003e\n\t\t\t\t\n\u003cp\u003e\u003ca name=\"a223019\"\u003e\u003c/a\u003e\u003cimg src=\"https://imgs.scripting.com/2024/06/11/nakedJenToday.png\"/\u003eOne of the things that makes me want to see Automattic stick around and grow is that they have a really large codebase that has been scaled, debugged and maintained for over 20 freaking years. And the most important thing -- they don\u0026#39;t break users. The code I wrote to run against WordPress in the 00s still runs today. To me as a developer this speaks very loudly. It means it\u0026#39;s safe to develop here. It means there\u0026#39;s discipline in their development organization. Most companies don\u0026#39;t do this, but the ones who do, have earned my deep respect. For all of Microsoft\u0026#39;s sins, they were incredibly good at this too. It\u0026#39;s why I liked working with them, and also why we laughed at each others\u0026#39; jokes if you can believe that. In some ways all the open source stuff is too complicated. I understand the concept of \u0026#34;development org\u0026#34; -- so I look at it that way. I dig around their codebase, see how they do things, and figure it\u0026#39;ll work out pretty well if I just do it that way. Because the last people they\u0026#39;re going to break are themselves. What I see on their latest APIs is maturity and completeness. They didn\u0026#39;t rush off to the next thing before finishing. I found that in their Calypso API, which I\u0026#39;ve been building on. Honestly this is my kind of platform, it\u0026#39;s what Manila\u0026#39;s API would look like today probably if we had continued developing it. I\u0026#39;ll see if I can find the docs around here somewhere. Long time ago. ;-)\u003cspan\u003e\u003ca href=\"http://scripting.com/2024/10/17.html#a223019\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca name=\"a221105\"\u003e\u003c/a\u003e\u003cimg src=\"https://imgs.scripting.com/2022/10/24/rssCoffeeMug.png\"/\u003eI made the \u003ca href=\"https://github.com/scripting/reallysimple\"\u003ereallySimple package\u003c/a\u003e for Node.js because I wanted to make it as easy as possible to read feeds in Node apps. It should be as easy as reading a file. Give it the URL of a feed, get back a JavaScript object that\u0026#39;s as simple as feeds are. It can read RSS, Atom and RDF feeds, but you get the same object regardless of what form the feed was in. I\u0026#39;m up for creating some example apps if you\u0026#39;re interested. There is a very simple \u003ca href=\"https://github.com/scripting/reallysimple/tree/main/example\"\u003eHello World app\u003c/a\u003e included in the package and a set of \u003ca href=\"https://github.com/scripting/reallysimple/tree/main/demos\"\u003edemo apps\u003c/a\u003e. It\u0026#39;s MIT-licensed, so you can do whatever you want with the code. It would lovely to see it ported. The idea is to plant some seeds in the Node.js world to make it easy for developers to try out new ideas with feeds, figuring the easier it is, the more people will do it. Be creative. Blow our minds! :-)\u003cspan\u003e\u003ca href=\"http://scripting.com/2024/10/17.html#a221105\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca name=\"a151304\"\u003e\u003c/a\u003e\u003cimg src=\"https://imgs.scripting.com/2020/01/16/rodneyDangerfield.png\"/\u003eThe question has come up in various contexts, is a Substack feed a blog? Yes, I think it can be. For some reason people thought I\u0026#39;d say no. In 2003, I compiled a list of \u003ca href=\"https://archive.blogs.harvard.edu/whatmakesaweblogaweblog/\"\u003ethings that make a blog a blog\u003c/a\u003e, and it\u0026#39;s not about the software you use, rather it\u0026#39;s about who\u0026#39;s writing it, and whether they\u0026#39;re being edited. Now it\u0026#39;s a different question to ask if I would use it. I would not. Because it forces you to use their editor. And that\u0026#39;s a \u003ca href=\"https://www.google.com/search?q=pernicious\"\u003epernicious\u003c/a\u003e form of lock-in. It might sound like a small thing, but it means you can\u0026#39;t easily try out something new. You are not available to other software developers as a possible user, so no software will be designed for you. I know how well that kind of system works. And that\u0026#39;s probably why they lock you into using their editor. If I can\u0026#39;t switch without breaking everything, I\u0026#39;m not going there. \u003cspan\u003e\u003ca href=\"http://scripting.com/2024/10/17.html#a151304\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca name=\"a145140\"\u003e\u003c/a\u003e\u003cimg src=\"https://imgs.scripting.com/2020/04/29/gecko.png\"/\u003eMathew Ingram \u003ca href=\"https://tormentnexus.substack.com/p/is-ai-going-to-save-us-or-kill-us\"\u003easks\u003c/a\u003e if AI will save us or kill us. It could both save and kill us. That\u0026#39;s what\u0026#39;s so disturbing about evolving. We live such short lives, people aren\u0026#39;t really designed to evolve, but because of medicine and other tech, we are often forced to do it. Evolution can come many ways. Losing a job may force you to evolve. The dissolution of a marriage. Having life-saving surgery with a long recovery saves you for sure, but it might also kill you because you can\u0026#39;t go back to being the person you were before. There might not be a path back. One thing\u0026#39;s for sure we \u003ci\u003eneed\u003c/i\u003e saving. We can\u0026#39;t survive without radical change. We\u0026#39;re on a path that doesn\u0026#39;t work. Is there any way for us to change radically without a complete collapse? Well, actually kind of looks like we might have been given a path out through AI. But it means we must give up control. But here\u0026#39;s the funny thing about that. We aren\u0026#39;t giving up anything because no one has any control. That\u0026#39;s a political question in the US, can one person become a mad king and thus gain complete control. But he\u0026#39;s 78 and not in good health, and that control could only last a few years at most. We will need saving from that. If somehow we could configure AI so it did what humans can\u0026#39;t and won\u0026#39;t do, at least our civilization might have a way forward if not our species. Just some random thoughts. Maybe unthinkable, but they occur to me anyway, which is why I have a blog.  \u003cspan\u003eðŸ˜„\u003c/span\u003e\u003cspan\u003e\u003ca href=\"http://scripting.com/2024/10/17.html#a145140\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca name=\"a134443\"\u003e\u003c/a\u003e\u003cimg src=\"https://imgs.scripting.com/2020/08/04/melo.png\"/\u003eI keep writing on my hybrid \u003ca href=\"https://mastodon.social/@daveverse.wordpress.com@daveverse.wordpress.com/113322998712983125\"\u003eWordPress/Mastodon blog\u003c/a\u003e at my kitchen table. This morning I wrote about why I don\u0026#39;t believe in the Ya Gotta Believe, a baseball slogan coined by a 1973 Mets pitcher Tug McGraw. It\u0026#39;s on-topic because the Mets are in a challenging series with the Dodgers for the National League championship. No matter how it turns out, this is a historic year for the Mets, and no matter how it turns out I won\u0026#39;t love the Mets any less if they lose. I think true believers believe in that -- love -- without any expectations, win or lose, or maybe \u003ci\u003eeven more\u003c/i\u003e if they lose. BTW, I know the rendering of the post isn\u0026#39;t complete on Mastodon, and there are errors. I\u0026#39;m working with the people at Automattic at getting this right. I\u0026#39;m glad to see that Mastodon has the flexibility to do that. Anyway, I believe in the things I believe in, not because I \u0026#34;gotta.\u0026#34; I don\u0026#39;t like the slogan because it doesn\u0026#39;t reflect how I feel about the team. My philosophy is respectful (in a way) of the teams the Mets beat, because I understand that their fans don\u0026#39;t love them any less because they lost. If anything I think the better slogan for the Mets would be this: \u003ca href=\"https://www.google.com/search?q=site%3Ascripting.com+Wait+till+next+year!\"\u003eWait till next year!\u003c/a\u003e \u003cspan\u003eðŸ˜„\u003c/span\u003e\u003cspan\u003e\u003ca href=\"http://scripting.com/2024/10/17.html#a134443\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\n\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": null,
  "modifiedTime": null
}
