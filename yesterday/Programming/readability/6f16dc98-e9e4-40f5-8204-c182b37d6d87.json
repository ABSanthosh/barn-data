{
  "id": "6f16dc98-e9e4-40f5-8204-c182b37d6d87",
  "title": "GPT-4o Code Completion Model Now Available in Public Preview for VS Code Copilot",
  "link": "https://www.infoq.com/news/2025/03/gpt4o-code-completion-vscode/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "Recently, GPT-4o Copilot is introduced for Visual Studio Code (VS Code) users. This AI model is built upon the GPT-4o mini foundation and includes extensive training from over 275,000 high-quality public repositories across more than 30 widely used programming languages. The enhanced training is expected to provide more accurate and contextually relevant code suggestions. By Aditya Kulkarni",
  "author": "Aditya Kulkarni",
  "published": "Sun, 23 Mar 2025 05:30:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Generative AI",
    "IDE",
    "Code Generation",
    "Visual Studio Code",
    "Development",
    "news"
  ],
  "byline": "Aditya Kulkarni",
  "length": 3764,
  "excerpt": "Recently, GPT-4o Copilot is introduced for Visual Studio Code (VS Code) users. This AI model is built upon the GPT-4o mini foundation and includes extensive training from over 275,000 high-quality pub",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s2_20250320073856_u1/apple-touch-icon.png",
  "text": "Recently, GPT-4o Copilot is introduced for Visual Studio Code (VS Code) users. This AI model is built upon the GPT-4o mini foundation and includes extensive training from over 275,000 high-quality public repositories across more than 30 widely used programming languages. The enhanced training is expected to provide more accurate and contextually relevant code suggestions, with improved performance, boosting developer productivity and aiding the coding process. This announcement was made through a changelog post on the GitHub blog. The GPT-4o Copilot model differentiates itself through some key enhancements. Utilizing a vast dataset of high-quality code offers more precise and contextually relevant code completions. Its architecture and training also enable faster and more efficient code suggestion generation. The model can support various development projects with training across over 30 programming languages. To integrate GPT-4o Copilot into VS Code, users can access the Copilot menu in the VS Code title bar, select Configure Code Completions, and then choose Change Completions Model. Alternatively, users can choose the Command Palette by opening it and selecting GitHub Copilot: Change Completions Model. Once in the model selection menu, users can choose the GPT-4o Copilot model from the available options. For Copilot Business and Enterprise users, administrators must first enable Editor preview features within the Copilot policy settings on github.com to grant users access to the new model. Meanwhile, for Copilot Free users, using this model will count toward their 2,000 free monthly completions. The model will soon be available to Copilot users in all JetBrains Integrated Development Environments (IDEs), further expanding its reach across different platforms. In JetBrains IDEs, users can click the icon in the status bar, navigate to the settings dialog box for Languages \u0026 Frameworks \u003e GitHub Copilot, and select the preferred model from the dropdown menu. Covering this announcement as a part of the Tech Insights 2025 Week 9 newsletter, Johan Sanneblad, CEO \u0026 co-founder at ToeknTek, said, GitHub Copilot is quickly catching up to Cursor IDE which is already packed with custom models. From what I can see there are just two main features missing in Copilot: Prompt caching for performance and a local model for code merging. Once it gets those two features I think I would feel equally at home in Visual Studio Code + Copilot as with Cursor. And for all you Java and C# users, this is the update you have been waiting for. We finally have a good code completion model with good support for C++, C# and Java. GitHub Copilot was also in the news as it introduced Next Edit Suggestions, which can predict and suggest logical edits based on the context of ongoing changes in the code. It can identify potential modifications across an entire file, offering suggestions for insertions, deletions, and replacements. Developers can navigate through these suggestions using the Tab key, streamlining the editing process and potentially saving significant time It's important to note that switching the AI model does not affect the model used by Copilot Chat. The data collection and usage policy remains unchanged regardless of the chosen model, and the setting to enable or disable suggestions that match public code applies regardless of the chosen model. User feedback is essential for refining and enhancing the GPT-4o Copilot model. Developers are encouraged to share their experiences to help improve the model's performance and usability for all Copilot users. About the Author Aditya Kulkarni",
  "image": "https://res.infoq.com/news/2025/03/gpt4o-code-completion-vscode/en/headerimage/generatedHeaderImage-1742701255070.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eRecently, GPT-4o Copilot is introduced for Visual Studio Code (VS Code) users. This AI model is built upon the GPT-4o mini foundation and includes extensive training from over 275,000 high-quality public repositories across more than 30 widely used programming languages. The enhanced training is expected to provide more accurate and contextually relevant code suggestions, with improved performance, boosting developer productivity and aiding the coding process.\u003c/p\u003e\n\n\u003cp\u003eThis announcement was made through \u003ca href=\"https://github.blog/changelog/2025-02-18-new-gpt-4o-copilot-code-completion-model-now-available-in-public-preview-for-copilot-in-vs-code/\"\u003ea changelog post on the GitHub blog\u003c/a\u003e. The GPT-4o Copilot model differentiates itself through some key enhancements. Utilizing a vast dataset of high-quality code offers more precise and contextually relevant code completions. Its architecture and training also enable faster and more efficient code suggestion generation. The model can support various development projects with training across over 30 programming languages.\u003c/p\u003e\n\n\u003cp\u003eTo integrate GPT-4o Copilot into VS Code, users can access the Copilot menu in the VS Code title bar, select \u003ccode\u003eConfigure Code Completions\u003c/code\u003e, and then choose \u003ccode\u003eChange Completions Model\u003c/code\u003e. Alternatively, users can choose the Command Palette by opening it and selecting \u003ccode\u003eGitHub Copilot: Change Completions Model\u003c/code\u003e. Once in the model selection menu, users can choose the GPT-4o Copilot model from the available options.\u003c/p\u003e\n\n\u003cp\u003eFor Copilot Business and Enterprise users, administrators must first enable \u003ccode\u003eEditor preview features\u003c/code\u003e within the \u003ca href=\"https://docs.github.com/en/enterprise-cloud@latest/copilot/managing-copilot/managing-github-copilot-in-your-organization/managing-policies-for-copilot-in-your-organization#enabling-copilot-features-in-your-organization\"\u003eCopilot policy settings\u003c/a\u003e on github.com to grant users access to the new model. Meanwhile, for Copilot Free users, using this model will count toward their 2,000 free monthly completions. The model will soon be available to Copilot users in all JetBrains Integrated Development Environments (IDEs), further expanding its reach across different platforms.\u003c/p\u003e\n\n\u003cp\u003eIn JetBrains IDEs, users can click the icon in the status bar, navigate to the settings dialog box for \u003ccode\u003eLanguages \u0026amp; Frameworks \u0026gt; GitHub Copilot\u003c/code\u003e, and select the preferred model from the dropdown menu.\u003c/p\u003e\n\n\u003cp\u003eCovering this announcement as a part of the \u003ca href=\"https://www.linkedin.com/pulse/tech-insights-2025-week-9-johan-sanneblad-onp9f/?trackingId=DAsFREwRRtimQGeiGNtuCw%3D%3D\"\u003eTech Insights 2025 Week 9\u003c/a\u003e newsletter, \u003ca href=\"https://www.linkedin.com/in/johansan/\"\u003eJohan Sanneblad\u003c/a\u003e, CEO \u0026amp; co-founder at ToeknTek, said,\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eGitHub Copilot is quickly catching up to Cursor IDE which is already packed with custom models. From what I can see there are just two main features missing in Copilot: Prompt caching for performance and a local model for code merging. Once it gets those two features I think I would feel equally at home in Visual Studio Code + Copilot as with Cursor. And for all you Java and C# users, this is the update you have been waiting for. We finally have a good code completion model with good support for C++, C# and Java.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eGitHub Copilot was also in the news as it introduced Next Edit Suggestions, which can \u003ca href=\"https://code.visualstudio.com/blogs/2025/02/12/next-edit-suggestions#_next-edit-suggestions-nes\"\u003epredict and suggest logical edits based on the context of ongoing changes in the code\u003c/a\u003e. It can identify potential modifications across an entire file, offering suggestions for insertions, deletions, and replacements. Developers can navigate through these suggestions using the \u003ccode\u003eTab\u003c/code\u003e key, streamlining the editing process and potentially saving significant time\u003c/p\u003e\n\n\u003cp\u003eIt\u0026#39;s important to note that switching the AI model does not affect the model used by Copilot Chat. The data collection and usage policy remains unchanged regardless of the chosen model, and the setting to enable or disable suggestions that match public code applies regardless of the chosen model.\u003c/p\u003e\n\n\u003cp\u003eUser feedback is essential for refining and enhancing the GPT-4o Copilot model. Developers are encouraged to \u003ca href=\"https://github.com/microsoft/vscode-copilot-release\"\u003eshare their experiences\u003c/a\u003e to help improve the model\u0026#39;s performance and usability for all Copilot users.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Aditya-Kulkarni\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eAditya Kulkarni\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": "2025-03-23T00:00:00Z",
  "modifiedTime": null
}
