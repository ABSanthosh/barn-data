{
  "id": "05640380-2ef1-4f82-863f-a2b9a6ccb4d8",
  "title": "Uber Completes Massive Kubernetes Migration for Microservices and Large-Scale Compute Workloads",
  "link": "https://www.infoq.com/news/2025/05/uber-kubernetes-migration/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "Uber has successfully completed a large Kubernetes migration, transitioning its entire compute platform from Apache Mesos to Kubernetes across multiple data centers and cloud environments. By Claudio Masolo",
  "author": "Claudio Masolo",
  "published": "Sat, 24 May 2025 09:00:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Batch Processing",
    "migration",
    "Kubernetes",
    "Machine Learning",
    "AI, ML \u0026 Data Engineering",
    "DevOps",
    "news"
  ],
  "byline": "Claudio Masolo",
  "length": 5723,
  "excerpt": "Uber has successfully completed a large Kubernetes migration, transitioning its entire compute platform from Apache Mesos to Kubernetes across multiple data centers and cloud environments.",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s2_20250513062629/apple-touch-icon.png",
  "text": "Uber has successfully completed a large Kubernetes migration, transitioning its entire compute platform from Apache Mesos to Kubernetes across multiple data centers and cloud environments. The ride-sharing giant's engineering teams have detailed their comprehensive journey in a series of technical blog posts, revealing the challenges, solutions, and lessons learned from migrating thousands of microservices and large-scale compute workloads. The migration represents a fundamental shift in Uber's infrastructure architecture, affecting thousands of services that power everything from ride-hailing to food delivery across global markets. The company's previous compute platform, built on Apache Mesos, had served Uber well during its rapid growth phase but presented limitations as the organization evolved toward a more cloud-native approach. \"This migration was not just a technology change, but a complete reimagining of how we operate our compute infrastructure,\" explained Uber's engineering team. The project spanned multiple years and required careful coordination across numerous engineering teams to ensure zero-downtime transitions for critical services. Uber's approach to the Kubernetes migration was methodical and risk-averse, prioritizing service reliability above migration speed. The engineering teams developed a sophisticated migration framework that allowed for gradual service transitions while maintaining full backward compatibility with existing Mesos-based services. The migration strategy centered on several key principles: maintaining service reliability throughout the transition ensuring seamless integration with existing tools and workflows establishing robust monitoring and observability capabilities in the new Kubernetes environment. The teams implemented a dual-stack approach, running services simultaneously on both Mesos and Kubernetes during transition periods to minimize risk. One of the most significant technical challenges involved adapting Uber's extensive suite of internal tools and platforms to work with Kubernetes. This included reimplementing deployment pipelines, monitoring systems, and service discovery mechanisms that had been tightly integrated with the Mesos ecosystem. Uber migration ecosystem from mesos to kubernetes  Beyond migrating standard microservices, Uber faced the complex challenge of transitioning large-scale compute workloads that power critical business functions including machine learning model training, data processing pipelines, and analytics workloads. These compute-intensive applications presented unique challenges due to their resource requirements and performance sensitivity. The engineering teams developed specialized solutions for handling these workloads in Kubernetes, likes modeling DSW sessions as a Custom Resource Definition (CRD) in Kubernetes, optimized networking configurations, and enhanced scheduling capabilities. The Uber engineers also implemented sophisticated resource allocation mechanisms using Federator, a cluster federation layer that provides an abstraction over ‌Kubernetes batch clusters. Thanks to this, the large-scale batch jobs could coexist efficiently with real-time services without impacting user-facing applications. Kubernetes clusters usage without and with federation The migration journey was not without significant technical hurdles. Uber's engineering teams encountered challenges related to networking complexity, resource management at scale, and maintaining performance benchmarks across different infrastructure paradigms. The company's global presence added additional complexity, requiring solutions that worked consistently across multiple regions and cloud providers. One particular challenge involved maintaining Uber's strict latency requirements while transitioning services to the new platform. The teams implemented comprehensive performance testing and gradual rollout strategies to ensure that service quality remained consistent throughout the migration process. The engineering teams also had to address cultural and operational challenges, including training hundreds of engineers on Kubernetes concepts and updating development workflows to align with cloud-native practices. The completed migration has delivered substantial benefits across multiple dimensions. Uber reports improved operational efficiency, enhanced developer productivity, and better resource utilization across their infrastructure. The move to Kubernetes has also positioned the company to better leverage cloud-native technologies and practices, enabling faster innovation and more flexible deployment strategies. The new platform provides enhanced scalability capabilities, allowing Uber to more efficiently handle traffic spikes and seasonal variations in demand. Additionally, the migration has simplified Uber's infrastructure management, reducing operational overhead and enabling teams to focus more on product development rather than platform maintenance. Also other big companies migrated their core infrastructure to Kubernetes: Figma migrated the core services to Kubernetes in 12 months, or CERN who migrated the CMSWEB Cluster to Kubernetes. These examples and also the Uber's successful Kubernetes migration serve as a valuable case study for other large-scale organizations considering similar transitions. The company's detailed documentation of their journey provides insights into best practices for enterprise Kubernetes adoption, particularly for organizations operating at significant scale. About the Author Claudio Masolo",
  "image": "https://res.infoq.com/news/2025/05/uber-kubernetes-migration/en/headerimage/generatedHeaderImage-1748012365452.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eUber has \u003ca href=\"https://www.uber.com/en-AU/blog/migrating-ubers-compute-platform-to-kubernetes-a-technical-journey\"\u003esuccessfully completed\u003c/a\u003e a large Kubernetes migration, transitioning its entire compute platform from \u003ca href=\"https://mesos.apache.org\"\u003eApache Mesos\u003c/a\u003e to \u003ca href=\"https://kubernetes.io\"\u003eKubernetes\u003c/a\u003e across multiple data centers and cloud environments. The ride-sharing giant\u0026#39;s engineering teams have detailed their comprehensive journey in a series of technical blog posts, revealing the challenges, solutions, and lessons learned from migrating thousands of microservices and large-scale compute workloads.\u003c/p\u003e\n\n\u003cp\u003eThe migration represents a fundamental shift in Uber\u0026#39;s infrastructure architecture, affecting thousands of services that power everything from ride-hailing to food delivery across global markets. The company\u0026#39;s previous compute platform, built on Apache Mesos, had served Uber well during its rapid growth phase but presented limitations as the organization evolved toward a more cloud-native approach.\u003c/p\u003e\n\n\u003cp\u003e\u0026#34;This migration was not just a technology change, but a complete reimagining of how we operate our compute infrastructure,\u0026#34; explained Uber\u0026#39;s engineering team. The project spanned multiple years and required careful coordination across numerous engineering teams to ensure zero-downtime transitions for critical services.\u003c/p\u003e\n\n\u003cp\u003eUber\u0026#39;s approach to the Kubernetes migration was methodical and risk-averse, prioritizing service reliability above migration speed. The engineering teams developed a sophisticated migration framework that allowed for gradual service transitions while maintaining full backward compatibility with existing Mesos-based services.\u003c/p\u003e\n\n\u003cp\u003eThe migration strategy centered on several key principles:\u003c/p\u003e\n\n\u003cul\u003e\n\t\u003cli\u003emaintaining service reliability throughout the transition\u003c/li\u003e\n\t\u003cli\u003eensuring seamless integration with existing tools and workflows\u003c/li\u003e\n\t\u003cli\u003eestablishing robust monitoring and observability capabilities in the new Kubernetes environment.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe teams implemented a dual-stack approach, running services simultaneously on both Mesos and Kubernetes during transition periods to minimize risk.\u003c/p\u003e\n\n\u003cp\u003eOne of the most significant technical challenges involved adapting Uber\u0026#39;s extensive suite of internal tools and platforms to work with Kubernetes. This included reimplementing deployment pipelines, monitoring systems, and service discovery mechanisms that had been tightly integrated with the Mesos ecosystem.\u003c/p\u003e\n\n\n\n\u003ccenter\u003e\u003cimg alt=\"\" data-src=\"news/2025/05/uber-kubernetes-migration/en/resources/1uber1-1748013426067.jpg\" src=\"https://imgopt.infoq.com/fit-in/3000x4000/filters:quality(85)/filters:no_upscale()/news/2025/05/uber-kubernetes-migration/en/resources/1uber1-1748013426067.jpg\" rel=\"share\"/\u003e\u003c/center\u003e\n\n\u003ccenter\u003e\u003csmall\u003eUber migration ecosystem from mesos to kubernetes \u003c/small\u003e\u003c/center\u003e\n\n\u003cp id=\"gdcalert1\"\u003eBeyond migrating standard microservices, Uber faced the \u003ca href=\"https://www.uber.com/en-AU/blog/migrating-large-scale-compute-workloads-to-kubernetes/\"\u003ecomplex challenge\u003c/a\u003e of transitioning large-scale compute workloads that power critical business functions including machine learning model training, data processing pipelines, and analytics workloads. These compute-intensive applications presented unique challenges due to their resource requirements and performance sensitivity.\u003c/p\u003e\n\n\u003cp\u003eThe engineering teams developed specialized solutions for handling these workloads in Kubernetes, likes modeling DSW sessions as a \u003ca href=\"https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/\"\u003eCustom Resource Definition\u003c/a\u003e (CRD) in Kubernetes, optimized networking configurations, and enhanced scheduling capabilities. The Uber engineers also implemented sophisticated resource allocation mechanisms using Federator, a cluster federation layer that provides an abstraction over ‌Kubernetes batch clusters. Thanks to this, the large-scale batch jobs could coexist efficiently with real-time services without impacting user-facing applications.\u003c/p\u003e\n\n\n\n\u003ccenter\u003e\u003cimg alt=\"\" data-src=\"news/2025/05/uber-kubernetes-migration/en/resources/1figure-3-17466473951993-1748013426067.jpg\" src=\"https://imgopt.infoq.com/fit-in/3000x4000/filters:quality(85)/filters:no_upscale()/news/2025/05/uber-kubernetes-migration/en/resources/1figure-3-17466473951993-1748013426067.jpg\" rel=\"share\"/\u003e\u003c/center\u003e\n\n\u003ccenter\u003e\u003csmall\u003eKubernetes clusters usage without and with federation\u003c/small\u003e\u003c/center\u003e\n\n\u003cp\u003eThe migration journey was not without significant technical hurdles. Uber\u0026#39;s engineering teams encountered challenges related to networking complexity, resource management at scale, and maintaining performance benchmarks across different infrastructure paradigms. The company\u0026#39;s global presence added additional complexity, requiring solutions that worked consistently across multiple regions and cloud providers.\u003c/p\u003e\n\n\u003cp\u003eOne particular challenge involved maintaining Uber\u0026#39;s strict latency requirements while transitioning services to the new platform. The teams implemented comprehensive performance testing and gradual rollout strategies to ensure that service quality remained consistent throughout the migration process.\u003c/p\u003e\n\n\u003cp\u003eThe engineering teams also had to address cultural and operational challenges, including training hundreds of engineers on Kubernetes concepts and updating development workflows to align with cloud-native practices.\u003c/p\u003e\n\n\u003cp\u003eThe completed migration has delivered substantial benefits across multiple dimensions. Uber reports improved operational efficiency, enhanced developer productivity, and better resource utilization across their infrastructure. The move to Kubernetes has also positioned the company to better leverage cloud-native technologies and practices, enabling faster innovation and more flexible deployment strategies.\u003c/p\u003e\n\n\u003cp\u003eThe new platform provides enhanced scalability capabilities, allowing Uber to more efficiently handle traffic spikes and seasonal variations in demand. Additionally, the migration has simplified Uber\u0026#39;s infrastructure management, reducing operational overhead and enabling teams to focus more on product development rather than platform maintenance.\u003c/p\u003e\n\n\u003cp\u003eAlso other big companies migrated their core infrastructure to Kubernetes: Figma \u003ca href=\"https://www.figma.com/blog/migrating-onto-kubernetes/\"\u003emigrated\u003c/a\u003e the core services to Kubernetes in 12 months, or CERN who \u003ca href=\"https://arxiv.org/abs/2102.12751\"\u003emigrated\u003c/a\u003e the CMSWEB Cluster to Kubernetes. These examples and also the Uber\u0026#39;s successful Kubernetes migration serve as a valuable case study for other large-scale organizations considering similar transitions. The company\u0026#39;s detailed documentation of their journey provides insights into best practices for enterprise Kubernetes adoption, particularly for organizations operating at significant scale.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Claudio-Masolo\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eClaudio Masolo\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": "2025-05-24T00:00:00Z",
  "modifiedTime": null
}
