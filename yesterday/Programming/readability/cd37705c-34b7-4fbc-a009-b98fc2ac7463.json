{
  "id": "cd37705c-34b7-4fbc-a009-b98fc2ac7463",
  "title": "What Is Penetration Testing? Types, Processes, Tools, And Why It‚Äôs All Worth It",
  "link": "https://blog.jetbrains.com/teamcity/2025/06/what-is-penetration-testing/",
  "description": "Penetration testing (or ‚Äúpen testing‚Äù) is an authorized, simulated cyberattack designed to test the security of a production system. Ethical hackers perform penetration tests, emulating the behavior of cybercriminals to evaluate your software‚Äôs security and identify any weaknesses. During a pen test, these cybersecurity specialists use a range of techniques to attack a system. Once [‚Ä¶]",
  "author": "Olga Bedrina",
  "published": "Mon, 09 Jun 2025 14:03:04 +0000",
  "source": "https://blog.jetbrains.com/feed",
  "categories": [
    "security",
    "testing",
    "best-practices"
  ],
  "byline": "Olga Bedrina",
  "length": 17514,
  "excerpt": "A practical guide to penetration testing that explains key methods, tools, and business value, plus how to integrate testing into your CI/CD pipeline.",
  "siteName": "The JetBrains Blog",
  "favicon": "https://blog.jetbrains.com/wp-content/uploads/2024/01/cropped-mstile-310x310-1-180x180.png",
  "text": "Powerful CI/CD for DevOps-centric teams Security TestingWhat Is Penetration Testing? Types, Processes, Tools, And Why It‚Äôs All Worth It Penetration testing (or ‚Äúpen testing‚Äù) is an authorized, simulated cyberattack designed to test the security of a production system. Ethical hackers perform penetration tests, emulating the behavior of cybercriminals to evaluate your software‚Äôs security and identify any weaknesses. During a pen test, these cybersecurity specialists use a range of techniques to attack a system. Once they have gained access, their goal is to demonstrate the potential damage that somebody could do during a real attack. Penetration testing is an effective way to identify and prioritize security flaws in your software, protecting both your organization and users from cyberattacks. üí° See also: SAST vs DAST: Differences And When to Use Why is penetration testing important? Cybercriminals typically seek to steal sensitive data, such as company IP, financial information, or users‚Äô data, and/or disrupt operations. A successful cyberattack can result in serious reputational and financial damage (enough to jeopardize the future of your business) and may also expose you to liability and regulatory penalties. With cyberattacks becoming increasingly common, the importance of software security cannot be overstated. A penetration test provides a realistic assessment of how well your system will withstand a cyberattack and identifies weaknesses that you should address. ‚ùì Why penetration testing matters: risk vs. resilience Without penetration testingWith penetration testing‚ùå Unknown vulnerabilities remain hidden in your code or infrastructure‚úÖ Known exploits are identified before attackers can abuse them‚ö†Ô∏è High risk of data breaches, IP theft, or operational disruptionüõ°Ô∏è Stronger defenses built around real attack simulationsüí∏ Financial losses from fines, lawsuits, or ransom demandsüíº Demonstrated compliance with ISO27001, HIPAA, and other standardsüìâ Reputational damage after publicized incidentsüìà Customer trust reinforced through visible due diligence‚è≥ Delayed response to incidents you didn‚Äôt anticipateüöÄ Faster remediation guided by expert pen test reports An external penetration testing service will provide a detailed report of the attempted attacks, the exploits found, and the potential harm that could be inflicted. As a proven security testing technique, penetration testing is recommended by several security standards and regulations, including ISO27001 and HIPAA. Running regular pen tests (and acting on the findings) can be used to demonstrate due diligence and compliance with these standards. Black box, white box, and gray box penetration testing Depending on your goals, you can run penetration tests using a black box, white box, or gray box approach. The different approaches refer to the amount of information provided to the pen testers in advance of the exercise. Black box testing Also known as opaque box or blind testing, this approach simulates an attack by an outsider. In a black box test, the pen testers are given only the name of the organization or product under test. It‚Äôs then up to them to glean whatever information they can to mount an attack. To make the test even more realistic, you can run a double-blind pen test, in which employees of your organization are unaware that the test is happening. Gray box testing In a semi-opaque or gray box test, pen testers are given some information in advance. This might include system diagrams or design documents, or potentially credentials for a part of the system or a related service. Taking a gray box approach simulates an attack following a leak of confidential information or the actions of a disgruntled employee. White box testing With a transparent or white box approach, pen testers have access to all the source code, binaries, containers, and any other artifacts of the system. While not a realistic attack, a white box penetration test is the quickest way to conduct this type of test and can be useful if you want rapid feedback so you can address security flaws quickly. Once you have addressed any issues, you may want to follow up with a black box test to ensure nothing has been missed. Vulnerability scanning vs. penetration testing An effective cybersecurity strategy should involve multiple levels of security testing. This includes both automated vulnerability scans, such as Static Application Security Testing (SAST) and Dynamic Application Security Testing (DAST), as well as manual techniques like pen testing. Vulnerability scanners check your source code or software systematically for known security flaws. Because they are reasonably quick to run and require no manual intervention, they are ideal for inclusion in your automated CI/CD pipeline. üß™ Vulnerability scanning vs. penetration testing AspectVulnerability scanningPenetration testingTypeAutomatedManualTechniquesSAST, DAST, predefined rule setsSimulated real-world attacks by ethical hackersScopeSource code, known vulnerabilitiesEntire system: code, infrastructure, social engineering, physical securityDetection abilityFast and repeatable; ideal for frequent useSlow; time-intensive due to human effortCostLow; can run in every CI/CD cycleHigh; typically done a few times a yearIdeal use caseContinuous feedback in CI/CD pipelineIn-depth analysis for high-risk releases or compliance needsLimitationsDoesn‚Äôt test exploit feasibility or user behaviorNot scalable for every build; limited frequencyBest when combined withPenetration testing for real-world attack simulationAutomated scans for consistent baseline coverage This ensures you get regular and rapid feedback on each set of code changes, allowing you to address any new security issues quickly and efficiently. On the other hand, automated security scans can only ever discover the issues they‚Äôve been programmed to detect. As a result, they cannot identify new vulnerabilities or combinations of exploits. The fully automated process also carries a higher risk of false positives. This is where pen testing can offer advantages. Penetration testing is a form of manual security testing that involves skilled individuals mounting realistic attacks on your system. In addition to checking for common vulnerabilities, pen testers often chain exploits together, leveraging each small weakness in the same way an attacker would to gain access to a system. Pen testers also look beyond the codebase, exploiting social engineering tactics and physical security gaps to compromise systems. As a result, penetration tests can reveal flaws in your defenses that might go unnoticed by automated security tests. The downside of pen tests is that they are expensive and time-consuming to run. How frequently you run penetration tests will depend on your risk profile and budget, but it is typically a few times a year or less.If you‚Äôre releasing changes frequently, penetration testing alone is not enough to defend against cyberattacks. However, by combining pen testing with vulnerability scans and other automated security tests, you can leverage the benefits of each approach. üí° Find out more about automated testing from our CI/CD guide. Types of penetration testing Pen testing can involve a range of methods. Rather than focusing on a particular type to the exclusion of others, pen testers combine different methods according to the system under test and the organization‚Äôs requirements. External vs. internal In an external penetration test, the simulated attack starts from outside the organization‚Äôs network. The initial target might be a router, external servers, employee computers, or cloud-hosted services. The pen tester aims to find a way in and then see what else they can access and what damage they can do. By contrast, an internal test starts from inside the network. You can use this to simulate an attack by a rogue employee or an attack that could follow a successful phishing attempt. Application testing Application testing involves looking for vulnerabilities in deployed software, such as web apps, mobile apps, APIs, and IoT devices. Pen testers will look for common security flaws, such as SQL injection, broken authentication, and others listed in the OWASP Top 10. Although vulnerability scans can detect these types of issues, fixes are sometimes deprioritized if they are not considered a significant threat. However, minor exploits can be chained together by a creative pen tester to reveal a viable attack vector. Social engineering Social engineering targets the individuals working at an organization. Attack vectors include phishing emails and phone calls to extract valuable information and credentials, tailgating staff entering the building, or cloning office badges (often with the help of photos on social media) and masquerading as an employee or contractor. Physical security Physical security can involve searching for vulnerabilities in hardware, such as unpatched servers, or simply gaining entry to premises and then plugging a device into a network socket. Once a pen tester has gained access to the network in this way, they can seek to access key systems with the help of malware or key loggers, and then download or take screenshots of sensitive data. How to do penetration testing Most pen testers will follow a process that includes the following steps. Rules of engagement Before starting, the pen testers should agree on a brief with the organization that defines the test‚Äôs target and the rules of engagement. This should include what forms of testing are acceptable and what is off the table (such as phishing attempts on staff or forcing entry to premises), as well as the contact to inform of progress. The brief should also provide any additional context (in the case of a white or gray box test) and specify whether employees are aware that a pen test is being run. Planning and reconnaissance Based on the brief, the pen testing team will collect as much information as possible about the software. This may include scouring public websites, published documentation, social media accounts, and public repositories to learn more about the software architecture and how it‚Äôs hosted. They will also gather intelligence about the organization and look for ways to get into the network so they can access key systems and data. Once the reconnaissance is complete, the pen testers identify potential attack vectors and prioritize them, while considering how to evade detection at all stages of the exercise. Gaining access The pen testing team then attempts to gain access to the system through any means allowed in the brief. During this stage, they may use various tools to automate specific elements of the process, including vulnerability scanners, credential cracking tools, port scanners, and network analyzers. If permitted by the rules of engagement, they may use social engineering techniques to gain access to premises and attempt to install malware on devices within the network so they can continue the attack remotely. Maintaining access Once inside, pen testers attempt to escalate privileges and access critical systems or demonstrate the potential to disrupt them. Remaining undetected throughout this process is crucial ‚Äì if somebody discovered a real hacker, they could avert the attack. The longer a pen tester can remain undetected, the higher the risk that an advanced persistent threat could be carried out. Covering tracks Before concluding, pen testers remove all traces of their activity. This both tests the organization‚Äôs ability to detect intrusions and ensures nothing remains for real attackers to exploit. This might involve removing any hardware or malware they have planted, and reverting any configurations to their original state. Reporting Finally, the pen testers will write a report detailing what they attempted, the defenses that worked, how they managed to gain access, and the damage they could have caused. They may provide evidence of how far they penetrated the defenses by placing a file in a secure location or taking a screenshot of sensitive data. They will also suggest recommendations on how you can enhance your security and prevent similar attacks in the future. Popular penetration testing tools Although penetration testing is a form of manual security testing, pen testers typically use many tools to simulate an attack, just as a malicious actor would. By using these tools on your systems, you can also detect potential vulnerabilities and address them before they‚Äôre exploited. Reconnaissance tools During the reconnaissance phase, pen testers may use network scanners, like Nmap, to scan IP addresses and ports to find out more about the system design and identify potential entry points. Network packet analyzers, such as Wireshark, are used to gain a deeper understanding of the systems in use and look for sensitive data or credentials being transmitted without encryption. Credential cracking Tools designed to crack encryption protocols or mount brute force attacks, such as Hydra and John the Ripper, are frequently used to try to gain access to systems. Other options include installing key loggers on employees‚Äô devices or using phishing emails to trick users into divulging their credentials. Exploitation tools Tools such as Metasploit, Burp Suite, and OWASP ZAP enable pen testers to automate common attacks including SQL injection, cross-site scripting, and fuzzing. Having identified a vulnerability, pen testers may then chain several exploits together to mount a more sophisticated attack. Business perspective: the ROI of penetration testing Penetration testing is often seen as a technical requirement, but it can also be viewed as a business safeguard. A successful cyberattack can lead to downtime, reputational damage, regulatory fines, or loss of sensitive data. In some cases, the financial impact may exceed the cost of a structured penetration testing program. While vulnerability scans are useful for identifying known issues, penetration testing simulates how an attacker might exploit multiple weaknesses in combination. This type of testing can uncover risks that are difficult to detect through automation alone. For organizations operating in regulated industries, penetration testing may also support compliance with standards such as ISO27001, HIPAA, and PCI DSS. In this context, it can be used to demonstrate due diligence and reduce legal exposure. When penetration testing pays for itself Although penetration tests can be expensive to run, they are often justified in scenarios with elevated risk. These include: Launching a new product or major architectural change Storing or processing sensitive information, such as personal data or payment details Preparing for a security certification or compliance audit Following a publicized security incident affecting a competitor or similar company Expanding into new infrastructure environments, such as third-party APIs or cloud services In such cases, the cost of remediation after a breach may significantly outweigh the cost of identifying and fixing issues earlier through targeted testing. Combining pen testing with automated security scanning Penetration testing offers detailed insight into your security posture, but it is not designed for continuous use. To maintain security at scale, it‚Äôs best used in combination with automated tools. For example, vulnerability scanners can be integrated into your CI/CD pipeline to provide regular feedback on source code and deployed software. This allows you to identify common issues quickly, without the need for manual intervention. üí°Read also: What Is a CI/CD Pipeline? Pen testers, on the other hand, can focus on exploring complex attack paths, misconfigurations, or issues that are specific to your architecture. This combination ensures broader coverage while making efficient use of internal or third-party security resources. Tools such as OWASP ZAP or Snyk can be added to your build process, while platforms like TeamCity allow you to automate scanning tasks and generate reports at each deployment stage. Setting up TeamCity Snyk plugin Subscribe to TeamCity Blog updates Discover more",
  "image": "https://blog.jetbrains.com/wp-content/uploads/2025/06/what-is-penetration-testing-social.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"main\"\u003e\n    \u003cdiv\u003e\n                        \u003ca href=\"https://blog.jetbrains.com/teamcity/\"\u003e\n                            \u003cimg src=\"https://blog.jetbrains.com/wp-content/uploads/2019/01/TeamCity-2.svg\" alt=\"Teamcity logo\"/\u003e\n                                                                                                \n                                                                                    \u003c/a\u003e\n                                                    \u003cp\u003ePowerful CI/CD for DevOps-centric teams\u003c/p\u003e\n                                            \u003c/div\u003e\n                            \u003csection data-clarity-region=\"article\"\u003e\n                \u003cdiv\u003e\n                    \t\t\t\t\u003cp\u003e\u003ca href=\"https://blog.jetbrains.com/teamcity/category/security/\"\u003eSecurity\u003c/a\u003e\n\t\t\t\u003ca href=\"https://blog.jetbrains.com/teamcity/category/testing/\"\u003eTesting\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"major-updates\"\u003eWhat Is Penetration Testing? Types, Processes, Tools, And Why It‚Äôs All Worth It\u003c/h2\u003e                    \n                    \n\u003cp\u003ePenetration testing (or ‚Äúpen testing‚Äù) is an authorized, simulated cyberattack designed to test the security of a production system.\u003c/p\u003e\n\n\n\n\u003cp\u003eEthical hackers perform penetration tests, emulating the behavior of cybercriminals to evaluate your software‚Äôs security and identify any weaknesses. During a pen test, these cybersecurity specialists use a range of techniques to attack a system. \u003c/p\u003e\n\n\n\u003cdiv\u003e\n\u003cfigure\u003e\u003cimg decoding=\"async\" fetchpriority=\"high\" width=\"478\" height=\"374\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/06/Julia-Stiles-Reaction-GIF-by-MOODMAN-1.gif\" alt=\"\"/\u003e\u003c/figure\u003e\u003c/div\u003e\n\n\n\u003cp\u003eOnce they have gained access, their goal is to demonstrate the potential damage that somebody could do during a real attack.\u003c/p\u003e\n\n\n\n\u003cp\u003ePenetration testing is an effective way to identify and prioritize security flaws in your software, protecting both your organization and users from cyberattacks.\u003c/p\u003e\n\n\n\n\u003cp\u003eüí° See also: \u003ca href=\"https://blog.jetbrains.com/teamcity/2025/05/sast-vs-dast/\" data-type=\"link\" data-id=\"https://blog.jetbrains.com/teamcity/2025/05/sast-vs-dast/\"\u003eSAST vs DAST: Differences And When to Use\u003c/a\u003e\u003c/p\u003e\n\n\n\n\u003ch2\u003eWhy is penetration testing important?\u003c/h2\u003e\n\n\n\n\u003cp\u003eCybercriminals typically seek to steal sensitive data, such as company IP, financial information, or users‚Äô data, and/or disrupt operations. A successful cyberattack can result in serious reputational and financial damage (enough to jeopardize the future of your business) and may also expose you to liability and regulatory penalties.\u003c/p\u003e\n\n\n\n\u003cp\u003eWith cyberattacks becoming increasingly common, the importance of software security cannot be overstated. A penetration test provides a realistic assessment of how well your system will withstand a cyberattack and identifies weaknesses that you should address.\u003c/p\u003e\n\n\n\n\u003cp\u003e‚ùì \u003cstrong\u003eWhy penetration testing matters: risk vs. resilience\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\u003cstrong\u003eWithout penetration testing\u003c/strong\u003e\u003c/td\u003e\u003ctd\u003e\u003cstrong\u003eWith penetration testing\u003c/strong\u003e\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e‚ùå Unknown vulnerabilities remain hidden in your code or infrastructure\u003c/td\u003e\u003ctd\u003e‚úÖ Known exploits are identified before attackers can abuse them\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e‚ö†Ô∏è High risk of data breaches, IP theft, or operational disruption\u003c/td\u003e\u003ctd\u003eüõ°Ô∏è Stronger defenses built around real attack simulations\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eüí∏ Financial losses from fines, lawsuits, or ransom demands\u003c/td\u003e\u003ctd\u003eüíº Demonstrated compliance with ISO27001, HIPAA, and other standards\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eüìâ Reputational damage after publicized incidents\u003c/td\u003e\u003ctd\u003eüìà Customer trust reinforced through visible due diligence\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e‚è≥ Delayed response to incidents you didn‚Äôt anticipate\u003c/td\u003e\u003ctd\u003eüöÄ Faster remediation guided by expert pen test reports\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eAn external penetration testing service will provide a detailed report of the attempted attacks, the exploits found, and the potential harm that could be inflicted.\u003c/p\u003e\n\n\n\n\u003cp\u003eAs a proven security testing technique, penetration testing is recommended by several security standards and regulations, including ISO27001 and HIPAA. Running regular pen tests (and acting on the findings) can be used to demonstrate due diligence and compliance with these standards.\u003c/p\u003e\n\n\n\n\u003ch2\u003eBlack box, white box, and gray box penetration testing\u003c/h2\u003e\n\n\n\n\u003cp\u003eDepending on your goals, you can run penetration tests using a black box, white box, or gray box approach. The different approaches refer to the amount of information provided to the pen testers in advance of the exercise.\u003c/p\u003e\n\n\n\n\u003ch3\u003eBlack box testing\u003c/h3\u003e\n\n\n\n\u003cp\u003eAlso known as opaque box or blind testing, this approach simulates an attack by an outsider. In a black box test, the pen testers are given only the name of the organization or product under test. It‚Äôs then up to them to glean whatever information they can to mount an attack.\u003c/p\u003e\n\n\n\n\u003cp\u003eTo make the test even more realistic, you can run a double-blind pen test, in which employees of your organization are unaware that the test is happening.\u003c/p\u003e\n\n\n\u003cdiv\u003e\n\u003cfigure\u003e\u003cimg decoding=\"async\" width=\"1022\" height=\"659\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/06/black-box-grey-box-white-box-testing-1.png\" alt=\"\"/\u003e\u003c/figure\u003e\u003c/div\u003e\n\n\n\u003ch3\u003eGray box testing\u003c/h3\u003e\n\n\n\n\u003cp\u003eIn a semi-opaque or gray box test, pen testers are given some information in advance. This might include system diagrams or design documents, or potentially credentials for a part of the system or a related service. Taking a gray box approach simulates an attack following a leak of confidential information or the actions of a disgruntled employee.\u003c/p\u003e\n\n\n\n\u003ch3\u003eWhite box testing\u003c/h3\u003e\n\n\n\n\u003cp\u003eWith a transparent or white box approach, pen testers have access to all the source code, binaries, containers, and any other artifacts of the system. While not a realistic attack, a white box penetration test is the quickest way to conduct this type of test and can be useful if you want rapid feedback so you can address security flaws quickly. \u003c/p\u003e\n\n\n\n\u003cp\u003eOnce you have addressed any issues, you may want to follow up with a black box test to ensure nothing has been missed.\u003c/p\u003e\n\n\n\n\u003ch2\u003eVulnerability scanning vs. penetration testing\u003c/h2\u003e\n\n\n\n\u003cp\u003eAn effective cybersecurity strategy should involve multiple levels of security testing. This includes both \u003ca href=\"https://www.jetbrains.com/teamcity/features/test-automation/\" target=\"_blank\" rel=\"noopener\"\u003eautomated\u003c/a\u003e vulnerability scans, such as\u003ca href=\"https://blog.jetbrains.com/teamcity/2025/03/what-is-sast/\"\u003e Static Application Security Testing (SAST\u003c/a\u003e) and\u003ca href=\"https://blog.jetbrains.com/teamcity/2025/02/what-is-dast/\"\u003e Dynamic Application Security Testing (DAST\u003c/a\u003e), as well as manual techniques like pen testing.\u003c/p\u003e\n\n\n\n\u003cp\u003eVulnerability scanners check your source code or software systematically for known security flaws. Because they are reasonably quick to run and require no manual intervention, they are ideal for inclusion in your automated \u003ca href=\"https://www.jetbrains.com/teamcity/ci-cd-guide/ci-cd-pipeline/\" target=\"_blank\" rel=\"noopener\"\u003eCI/CD pipeline\u003c/a\u003e. \u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eüß™ Vulnerability scanning vs. penetration testing\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\u003cstrong\u003eAspect\u003c/strong\u003e\u003c/td\u003e\u003ctd\u003e\u003cstrong\u003eVulnerability scanning\u003c/strong\u003e\u003c/td\u003e\u003ctd\u003e\u003cstrong\u003ePenetration testing\u003c/strong\u003e\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eType\u003c/td\u003e\u003ctd\u003eAutomated\u003c/td\u003e\u003ctd\u003eManual\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eTechniques\u003c/td\u003e\u003ctd\u003eSAST, DAST, predefined rule sets\u003c/td\u003e\u003ctd\u003eSimulated real-world attacks by ethical hackers\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eScope\u003c/td\u003e\u003ctd\u003eSource code, known vulnerabilities\u003c/td\u003e\u003ctd\u003eEntire system: code, infrastructure, social engineering, physical security\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eDetection ability\u003c/td\u003e\u003ctd\u003eFast and repeatable; ideal for frequent use\u003c/td\u003e\u003ctd\u003eSlow; time-intensive due to human effort\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eCost\u003c/td\u003e\u003ctd\u003eLow; can run in every CI/CD cycle\u003c/td\u003e\u003ctd\u003eHigh; typically done a few times a year\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eIdeal use case\u003c/td\u003e\u003ctd\u003eContinuous feedback in CI/CD pipeline\u003c/td\u003e\u003ctd\u003eIn-depth analysis for high-risk releases or compliance needs\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eLimitations\u003c/td\u003e\u003ctd\u003eDoesn‚Äôt test exploit feasibility or user behavior\u003c/td\u003e\u003ctd\u003eNot scalable for every build; limited frequency\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eBest when combined with\u003c/td\u003e\u003ctd\u003ePenetration testing for real-world attack simulation\u003c/td\u003e\u003ctd\u003eAutomated scans for consistent baseline coverage\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eThis ensures you get regular and rapid feedback on each set of code changes, allowing you to address any new security issues quickly and efficiently.\u003c/p\u003e\n\n\n\n\u003cp\u003eOn the other hand, automated security scans can only ever discover the issues they‚Äôve been programmed to detect. As a result, they cannot identify new vulnerabilities or combinations of exploits. The fully automated process also carries a higher risk of false positives. This is where pen testing can offer advantages.\u003c/p\u003e\n\n\n\n\u003cp\u003ePenetration testing is a form of manual security testing that involves skilled individuals mounting realistic attacks on your system. In addition to checking for common vulnerabilities, pen testers often chain exploits together, leveraging each small weakness in the same way an attacker would to gain access to a system.\u003c/p\u003e\n\n\n\n\u003cp\u003ePen testers also look beyond the codebase, exploiting social engineering tactics and physical security gaps to compromise systems. As a result, penetration tests can reveal flaws in your defenses that might go unnoticed by automated security tests.\u003c/p\u003e\n\n\n\n\u003cp\u003eThe downside of pen tests is that they are expensive and time-consuming to run. How frequently you run penetration tests will depend on your risk profile and budget, but it is typically a few times a year or less.If you‚Äôre releasing changes frequently, penetration testing alone is not enough to defend against cyberattacks. \u003c/p\u003e\n\n\n\n\u003cp\u003eHowever, by combining pen testing with vulnerability scans and other automated security tests, you can leverage the benefits of each approach.\u003ca href=\"https://www.jetbrains.com/teamcity/ci-cd-guide/automated-testing/\" target=\"_blank\" rel=\"noopener\"\u003e \u003c/a\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003eüí° \u003ca href=\"https://www.jetbrains.com/teamcity/ci-cd-guide/automated-testing/\" target=\"_blank\" rel=\"noopener\"\u003eFind out more about automated testing from our CI/CD guide\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003ch2\u003eTypes of penetration testing\u003c/h2\u003e\n\n\n\n\u003cp\u003ePen testing can involve a range of methods. Rather than focusing on a particular \u003ca href=\"https://www.jetbrains.com/teamcity/ci-cd-guide/faq/types-of-testing/\" target=\"_blank\" rel=\"noopener\"\u003etype\u003c/a\u003e to the exclusion of others, pen testers combine different methods according to the system under test and the organization‚Äôs requirements.\u003c/p\u003e\n\n\n\n\u003ch3\u003eExternal vs. internal\u003c/h3\u003e\n\n\n\n\u003cp\u003eIn an external penetration test, the simulated attack starts from outside the organization‚Äôs network. The initial target might be a router, external servers, employee computers, or cloud-hosted services. The pen tester aims to find a way in and then see what else they can access and what damage they can do.\u003c/p\u003e\n\n\n\n\u003cp\u003eBy contrast, an internal test starts from inside the network. You can use this to simulate an attack by a rogue employee or an attack that could follow a successful phishing attempt.\u003c/p\u003e\n\n\n\n\u003ch3\u003eApplication testing\u003c/h3\u003e\n\n\n\n\u003cp\u003eApplication testing involves looking for vulnerabilities in deployed software, such as web apps, mobile apps, APIs, and IoT devices. Pen testers will look for common security flaws, such as SQL injection, broken authentication, and others listed in the\u003ca href=\"https://owasp.org/www-project-top-ten/\" target=\"_blank\" rel=\"noopener\"\u003e OWASP Top 10\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cp\u003eAlthough vulnerability scans can detect these types of issues, fixes are sometimes deprioritized if they are not considered a significant threat. However, minor exploits can be chained together by a creative pen tester to reveal a viable attack vector.\u003c/p\u003e\n\n\n\n\u003ch3\u003eSocial engineering\u003c/h3\u003e\n\n\n\n\u003cp\u003eSocial engineering targets the individuals working at an organization. Attack vectors include phishing emails and phone calls to extract valuable information and credentials, tailgating staff entering the building, or cloning office badges (often with the help of photos on social media) and masquerading as an employee or contractor.\u003c/p\u003e\n\n\n\n\u003ch3\u003ePhysical security\u003c/h3\u003e\n\n\n\n\u003cp\u003ePhysical security can involve searching for vulnerabilities in hardware, such as unpatched servers, or simply gaining entry to premises and then plugging a device into a network socket. \u003c/p\u003e\n\n\n\n\u003cp\u003eOnce a pen tester has gained access to the network in this way, they can seek to access key systems with the help of malware or key loggers, and then download or take screenshots of sensitive data.\u003c/p\u003e\n\n\n\n\u003ch2\u003eHow to do penetration testing\u003c/h2\u003e\n\n\n\n\u003cp\u003eMost pen testers will follow a process that includes the following steps.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" width=\"2005\" height=\"1215\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/06/How-to-do-penetration-testing-visual-selection-1-2.png\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003ch3\u003eRules of engagement\u003c/h3\u003e\n\n\n\n\u003cp\u003eBefore starting, the pen testers should agree on a brief with the organization that defines the test‚Äôs target and the rules of engagement. This should include what forms of testing are acceptable and what is off the table (such as phishing attempts on staff or forcing entry to premises), as well as the contact to inform of progress. \u003c/p\u003e\n\n\n\n\u003cp\u003eThe brief should also provide any additional context (in the case of a white or gray box test) and specify whether employees are aware that a pen test is being run.\u003c/p\u003e\n\n\n\n\u003ch3\u003ePlanning and reconnaissance\u003c/h3\u003e\n\n\n\n\u003cp\u003eBased on the brief, the pen testing team will collect as much information as possible about the software. This may include scouring public websites, published documentation, social media accounts, and public repositories to learn more about the software architecture and how it‚Äôs hosted. \u003c/p\u003e\n\n\n\n\u003cp\u003eThey will also gather intelligence about the organization and look for ways to get into the network so they can access key systems and data.\u003c/p\u003e\n\n\n\n\u003cp\u003eOnce the reconnaissance is complete, the pen testers identify potential attack vectors and prioritize them, while considering how to evade detection at all stages of the exercise.\u003c/p\u003e\n\n\n\n\u003ch3\u003eGaining access\u003c/h3\u003e\n\n\n\n\u003cp\u003eThe pen testing team then attempts to gain access to the system through any means allowed in the brief. During this stage, they may use various tools to automate specific elements of the process, including vulnerability scanners, credential cracking tools, port scanners, and network analyzers.\u003c/p\u003e\n\n\n\n\u003cp\u003eIf permitted by the rules of engagement, they may use social engineering techniques to gain access to premises and attempt to install malware on devices within the network so they can continue the attack remotely.\u003c/p\u003e\n\n\n\n\u003ch3\u003eMaintaining access\u003c/h3\u003e\n\n\n\n\u003cp\u003eOnce inside, pen testers attempt to escalate privileges and access critical systems or demonstrate the potential to disrupt them.\u003c/p\u003e\n\n\n\n\u003cp\u003eRemaining undetected throughout this process is crucial ‚Äì if somebody discovered a real hacker, they could avert the attack. The longer a pen tester can remain undetected, the higher the risk that an advanced persistent threat could be carried out.\u003c/p\u003e\n\n\n\n\u003ch3\u003eCovering tracks\u003c/h3\u003e\n\n\n\n\u003cp\u003eBefore concluding, pen testers remove all traces of their activity. This both tests the organization‚Äôs ability to detect intrusions and ensures nothing remains for real attackers to exploit. This might involve removing any hardware or malware they have planted, and reverting any configurations to their original state.\u003c/p\u003e\n\n\n\n\u003ch3\u003eReporting\u003c/h3\u003e\n\n\n\n\u003cp\u003eFinally, the pen testers will write a report detailing what they attempted, the defenses that worked, how they managed to gain access, and the damage they could have caused. \u003c/p\u003e\n\n\n\n\u003cp\u003eThey may provide evidence of how far they penetrated the defenses by placing a file in a secure location or taking a screenshot of sensitive data. They will also suggest recommendations on how you can enhance your security and prevent similar attacks in the future.\u003c/p\u003e\n\n\n\n\u003ch2\u003ePopular penetration testing tools\u003c/h2\u003e\n\n\n\n\u003cp\u003eAlthough penetration testing is a form of manual security testing, pen testers typically use many tools to simulate an attack, just as a malicious actor would. By using these tools on your systems, you can also detect potential vulnerabilities and address them before they‚Äôre exploited.\u003c/p\u003e\n\n\n\n\u003ch3\u003eReconnaissance tools\u003c/h3\u003e\n\n\n\n\u003cp\u003eDuring the reconnaissance phase, pen testers may use network scanners, like Nmap, to scan IP addresses and ports to find out more about the system design and identify potential entry points. \u003c/p\u003e\n\n\n\n\u003cp\u003eNetwork packet analyzers, such as \u003ca href=\"https://www.wireshark.org/\" data-type=\"link\" data-id=\"https://www.wireshark.org/\" target=\"_blank\" rel=\"noopener\"\u003eWireshark\u003c/a\u003e, are used to gain a deeper understanding of the systems in use and look for sensitive data or credentials being transmitted without encryption.\u003c/p\u003e\n\n\n\n\u003ch3\u003eCredential cracking\u003c/h3\u003e\n\n\n\n\u003cp\u003eTools designed to crack encryption protocols or mount brute force attacks, such as Hydra and John the Ripper, are frequently used to try to gain access to systems. Other options include installing key loggers on employees‚Äô devices or using phishing emails to trick users into divulging their credentials.\u003c/p\u003e\n\n\n\n\u003ch3\u003eExploitation tools\u003c/h3\u003e\n\n\n\n\u003cp\u003eTools such as \u003ca href=\"https://www.metasploit.com/\" data-type=\"link\" data-id=\"https://www.metasploit.com/\" target=\"_blank\" rel=\"noopener\"\u003eMetasploit\u003c/a\u003e, \u003ca href=\"https://portswigger.net/burp\" data-type=\"link\" data-id=\"https://portswigger.net/burp\" target=\"_blank\" rel=\"noopener\"\u003eBurp Suite\u003c/a\u003e, and OWASP ZAP enable pen testers to automate common attacks including SQL injection, cross-site scripting, and fuzzing. Having identified a vulnerability, pen testers may then chain several exploits together to mount a more sophisticated attack.\u003c/p\u003e\n\n\n\n\u003ch2\u003eBusiness perspective: the ROI of penetration testing\u003c/h2\u003e\n\n\n\n\u003cp\u003ePenetration testing is often seen as a technical requirement, but it can also be viewed as a business safeguard. A successful cyberattack can lead to downtime, reputational damage, regulatory fines, or loss of sensitive data. In some cases, the financial impact may exceed the cost of a structured penetration testing program.\u003c/p\u003e\n\n\n\n\u003cp\u003eWhile vulnerability scans are useful for identifying known issues, penetration testing simulates how an attacker might exploit multiple weaknesses in combination. This type of testing can uncover risks that are difficult to detect through automation alone.\u003c/p\u003e\n\n\n\n\u003cp\u003eFor organizations operating in regulated industries, penetration testing may also support compliance with standards such as ISO27001, HIPAA, and PCI DSS. In this context, it can be used to demonstrate due diligence and reduce legal exposure.\u003c/p\u003e\n\n\n\n\u003ch3\u003eWhen penetration testing pays for itself\u003c/h3\u003e\n\n\n\n\u003cp\u003eAlthough penetration tests can be expensive to run, they are often justified in scenarios with elevated risk. \u003c/p\u003e\n\n\n\n\u003cp\u003eThese include:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eLaunching a new product or major architectural change\u003c/li\u003e\n\n\n\n\u003cli\u003eStoring or processing sensitive information, such as personal data or payment details\u003c/li\u003e\n\n\n\n\u003cli\u003ePreparing for a security certification or compliance audit\u003c/li\u003e\n\n\n\n\u003cli\u003eFollowing a publicized security incident affecting a competitor or similar company\u003c/li\u003e\n\n\n\n\u003cli\u003eExpanding into new infrastructure environments, such as third-party APIs or cloud services\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eIn such cases, the cost of remediation after a breach may significantly outweigh the cost of identifying and fixing issues earlier through targeted testing.\u003c/p\u003e\n\n\n\n\u003ch3\u003eCombining pen testing with automated security scanning\u003c/h3\u003e\n\n\n\n\u003cp\u003ePenetration testing offers detailed insight into your security posture, but it is not designed for continuous use. To maintain security at scale, it‚Äôs best used in combination with automated tools.\u003c/p\u003e\n\n\n\n\u003cp\u003eFor example, vulnerability scanners can be integrated into your \u003ca href=\"https://www.jetbrains.com/teamcity/ci-cd-guide/ci-cd-pipeline/\" data-type=\"link\" data-id=\"https://www.jetbrains.com/teamcity/ci-cd-guide/ci-cd-pipeline/\" target=\"_blank\" rel=\"noopener\"\u003eCI/CD pipeline\u003c/a\u003e to provide regular feedback on source code and deployed software. This allows you to identify common issues quickly, without the need for manual intervention.\u003c/p\u003e\n\n\n\n\u003cp\u003eüí°Read also: \u003ca href=\"https://www.jetbrains.com/teamcity/ci-cd-guide/ci-cd-pipeline/\" data-type=\"link\" data-id=\"https://www.jetbrains.com/teamcity/ci-cd-guide/ci-cd-pipeline/\" target=\"_blank\" rel=\"noopener\"\u003eWhat Is a CI/CD Pipeline?\u003c/a\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003ePen testers, on the other hand, can focus on exploring complex attack paths, misconfigurations, or issues that are specific to your architecture. This combination ensures broader coverage while making efficient use of internal or third-party security resources.\u003c/p\u003e\n\n\n\n\u003cp\u003eTools such as OWASP ZAP or \u003ca href=\"https://plugins.jetbrains.com/plugin/12227-snyk-security\" data-type=\"link\" data-id=\"https://plugins.jetbrains.com/plugin/12227-snyk-security\" target=\"_blank\" rel=\"noopener\"\u003eSnyk\u003c/a\u003e can be added to your build process, while platforms like TeamCity allow you to automate scanning tasks and generate reports at each deployment stage.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" loading=\"lazy\" width=\"1897\" height=\"1355\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/06/screenshot_19360-1.png\" alt=\"\"/\u003e\u003cfigcaption\u003e\u003cem\u003eSetting up TeamCity Snyk plugin\u003c/em\u003e\u003c/figcaption\u003e\u003c/figure\u003e\n                    \n                                                                                                                                                                                                                            \u003cdiv\u003e\n                                \u003cdiv\u003e\n                                                                            \u003ch4\u003eSubscribe to TeamCity Blog updates\u003c/h4\u003e\n                                                                                                            \n                                \u003c/div\u003e\n                                \n                                \u003cp\u003e\u003cimg src=\"https://blog.jetbrains.com/wp-content/themes/jetbrains/assets/img/img-form.svg\" alt=\"image description\"/\u003e\n                                                                    \u003c/p\u003e\n                            \u003c/div\u003e\n                                                            \u003c/div\u003e\n                \u003ca href=\"#\"\u003e\u003c/a\u003e\n                \n                \n            \u003c/section\u003e\n                    \u003cdiv\u003e\n                \u003cp\u003e\n                    \u003ch2\u003eDiscover more\u003c/h2\u003e\n                \u003c/p\u003e\n                \n            \u003c/div\u003e\n                \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "19 min read",
  "publishedTime": null,
  "modifiedTime": null
}
