{
  "id": "c8b49636-4193-4967-9fb0-f8f71fd37056",
  "title": "Agent mode 101: All about GitHub Copilot’s powerful mode",
  "link": "https://github.blog/ai-and-ml/github-copilot/agent-mode-101-all-about-github-copilots-powerful-mode/",
  "description": "A full look at agent mode in GitHub Copilot, including what it can do, when to use it, and best practices. The post Agent mode 101: All about GitHub Copilot’s powerful mode appeared first on The GitHub Blog.",
  "author": "Alexandra Lietzke",
  "published": "Thu, 22 May 2025 19:15:57 +0000",
  "source": "https://github.blog/feed/",
  "categories": [
    "AI \u0026 ML",
    "GitHub Copilot",
    "agent mode",
    "AI agents"
  ],
  "byline": "Alexandra Lietzke",
  "length": 10245,
  "excerpt": "A full look at agent mode in GitHub Copilot, including what it can do, when to use it, and best practices.",
  "siteName": "The GitHub Blog",
  "favicon": "https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=192%2C192",
  "text": "Last month, we released agent mode as a step toward building GitHub Copilot into a system that not only works with you, but works for you. When you give it a natural-language prompt, Copilot’s agent mode works to execute it on your behalf, automating processes and workflows that would otherwise take a lot of time and giving you space to focus on higher-level problem solving.​  For those who are newer to coding, agent mode can be a useful synchronous tool when it comes to developing an app (whereas our new preview of coding agent in Copilot offers asynchronous task completion capabilities). But it’s equally, if not more so, an incredibly useful tool for more seasoned developers looking to work faster. With agent mode, you can quickly move from prompting Copilot with a higher-level requirement to testing out a prototype. Plus, we’re still seeing new use cases unfold among developers of all levels.  Let’s take a closer look at what agent mode is, how it works, and how you can use it.  But first, what is GitHub Copilot agent mode?  GitHub Copilot agent mode is an autonomous and agentic real-time, synchronous collaborator that performs multi-step coding tasks based on natural-language prompts. More simply, it’s a problem solver that understands your intent, builds a solution, and iterates until it gets it right.  Agent mode can: Analyze your codebase to grasp the full context. Plan and execute multi-step solutions. Run commands or tests. Reach out to external tools for specialized tasks. Suggest architectural improvements. Run and refine its own work through an agentic loop, including planning, applying changes, testing, and iterating. Rather than just responding to requests, agent mode actively works toward your goal. You define the outcome, and it determines the best approach—seeking feedback from you as needed, testing its own solutions, and refining its work in real time. And as it operates, you can see its reasoning, decision-making process, and the tools it uses. Whether you want Copilot to analyze your code base, propose file edits, or run tests, agent mode allows Copilot to complete all the necessary subtasks on its own.  On top of that, agent mode enables Copilot to quickly recognize errors and fix them automatically.  Here’s how agent mode compares to some of our other AI coding tools:  ToolWhat it isAgent modeA mode where Copilot is capable of iterating on its own code, recognizing errors, and fixing them automaticallyGitHub Copilot coding agentAn autonomous SWE agent that asynchronously works on your behalf to do everything from resolving issues to solving for human feedback Code completionA Copilot feature that offers autocomplete-style suggestions in supported IDEs  How does agent mode in GitHub Copilot work? At its core, agent mode works as an orchestrator of several different tools and variables (e.g., your prompt and workspace) through a system prompt that tells Copilot to keep iterating on its own output until it reaches a final state.  When you send a natural-language prompt to Copilot agent mode, it’s augmented by our backend system prompt. This includes your query, a summarized structure of the workspace, machine context, and tool descriptions. Here’s a breakdown of what happens when you use Copilot agent mode:  You prompt Copilot with clear requirements on the end result you want. Copilot parses the question and asks an AI language model how to resolve the task, then begins working. Copilot monitors the first iteration for errors and determines how to fix them. Agent mode autonomously uses various tools to get to the end result.  After it runs commands and applies edits, agent mode works to detect syntax errors, terminal output, test results, and build errors. Based on the results, it then determines how to course-correct, whether that’s by making additional edits, terminal commands, or performing tool calls. The LLM has an ever-expanding set of tools to call, each with capabilities that help Copilot complete the task—and you’re in charge of which tools you want agent mode to use. Each tool, such as read_file, edit_file, and run_in_terminal, gives Copilot detailed instructions on how and when to use it. These tools allow Copilot to search your workspace, read file contents, run terminal commands, get errors from the editor and apply proposed changes, and more. You’re not limited to just built-in tools. You can extend agent mode’s capabilities by installing more specialized tools from Model Context Protocol (MCP) servers or extensions. MCP is an open standard that enables AI models to interact with external tools and services through a unified interface. We recently announced the GitHub MCP server, which allows you to: Automate GitHub workflows and processes. Extract and analyze data from GitHub repositories. Build AI-powered tools and applications that interact with GitHub’s ecosystem. Combining the power of agent mode and MCP means that the LLM’s knowledge expands even further once connected to your services and data sources. ✨ What can I do with GitHub Copilot agent mode? What are some use cases? Agent mode brings an agentic workflow to GitHub Copilot, offering real-time, synchronous help across any number of tasks in your workflows.  Whether you let the agent take the idea and run with it, or you lead it each step of the way and control the path, you’re in the driver’s seat with Copilot as your, well, copilot.   In my personal experience, agent mode has been a game-changer for starting small projects and proof-of-concepts from scratch. When I needed to modernize our open source history visualization scripts, I put agent mode to the test with both GPT-4o and Claude 3.7 models. The results were remarkable—it transformed our basic matplotlib histograms into sophisticated, SVG-based animated line charts with minimal guidance. What truly impressed me was seeing Copilot produce a perfect SVG histogram on its first attempt. This intelligent assistance not only accelerates development but has fundamentally transformed how I approach both prototyping and refactoring. Zhe-You Liu, Apache Airflow Committer Here are some ways we’ve seen developers inside and outside GitHub use agent mode: Refactoring code  Migrating a project to another programming language or to another tech stack Writing tests  Modernizing legacy code (maybe so you don’t have to learn an outdated language) Autofixing code gen errors Adding new features to an application Prototyping a new app based on a functional spec or UI sketch Implementing non-functional requirements or boilerplate code Scoping and planning the work for implementing a new feature  Non-code generation tasks, like documentation One important thing to note: Copilot is powered by LLMs, which are nondeterministic, and that means its suggestions may differ even with the same prompt and context. Agent mode is powerful, but you can extend its capabilities by combining it with other features in GitHub Copilot. For instance, you can give Copilot custom instructions so all of its responses fit your day-to-day coding practices, tools, and developers workflows.  At GitHub, we often use custom instructions to give Copilot specific testing frameworks to use, as well as guardrails, frameworks, and instructions for unit testing. This allows you to customize how Copilot codes for you in agent mode, similar to giving instructions to one of your peers.  You can also use other Copilot Chat modes, like edit mode and ask mode.  ModeWhat you can do with itA use caseEdit modeEasily make edits across multiple files in your codebase.Apply code edits directly in your project for implementing a new feature, fixing a bug, or refactoring code.Ask modeAsk Copilot questions for a better understanding of your codebase or technology concepts.Learn how a piece of code works, brainstorm ideas for software, or discover new technologies.Agent modeStart an agentic, autonomous coding workflow that delivers your desired result with minimal guidance.Implement high-level requirements for a new feature or project through agent mode, which identifies and applies necessary changes automatically. Take this with you Like working with any other developer, the more context you give and the more specific you are about your intended outcome, the better results you’ll get from GitHub Copilot—and that’s particularly true with agent mode. It needs the right tools to do the right work, but by feeding agent mode custom instructions to tailor it to your coding preferences or extending its capabilities via MCP integrations, it can fit your specific style of building software.  As with anything powered by LLMs, agent mode’s suggestions benefit from having you in the pilot’s seat to review code, and make sure things work as expected. But what’s so remarkable about agent mode is that you can use it exactly the way you want. It’s your peer programmer, which means that if you want to use it to build a prototype app, work with an existing codebase, or have it answer questions and automate lower-level parts of your workflow, you can. It’s up to you. Happy building! Looking to try agent mode? Learn more about GitHub Copilot features or purchase your plan today. More resources to explore: Use agent mode in VS Code Copilot ask, edit, and agent modes: What they do and when to use them Guides on using GitHub Copilot Written by Content Writer Explore more from GitHub Docs Everything you need to master GitHub, all in one place. Go to Docs GitHub Build what’s next on GitHub, the place for anyone from anywhere to build anything. Start building Customer stories Meet the companies and engineering teams that build with GitHub. Learn more Enterprise content Executive insights, curated just for you Get started",
  "image": "https://github.blog/wp-content/uploads/2025/04/wallpaper_copilot_generic_logo.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003csection\u003e\n\t\n\u003cp\u003eLast month, we released \u003ca href=\"https://github.blog/news-insights/product-news/github-copilot-agent-mode-activated/\"\u003eagent mode\u003c/a\u003e as a step toward building \u003ca href=\"https://github.com/features/copilot\"\u003eGitHub Copilot\u003c/a\u003e into a system that not only works with you, but works for you. When you give it a natural-language prompt, Copilot’s agent mode works to execute it on your behalf, automating processes and workflows that would otherwise take a lot of time and giving you space to focus on higher-level problem solving.​ \u003c/p\u003e\n\n\n\n\u003cp\u003eFor those who are newer to coding, agent mode can be a useful synchronous tool when it comes to developing an app (whereas \u003ca href=\"https://github.blog/news-insights/product-news/github-copilot-meet-the-new-coding-agent/\"\u003eour new preview of coding agent in Copilot offers asynchronous task completion capabilities\u003c/a\u003e). But it’s equally, if not more so, an incredibly useful tool for more seasoned developers looking to work faster. With agent mode, you can quickly move from prompting Copilot with a higher-level requirement to testing out a prototype. Plus, we’re still seeing new use cases unfold among developers of all levels. \u003c/p\u003e\n\n\n\n\u003cp\u003eLet’s take a closer look at what agent mode is, how it works, and how you can use it. \u003c/p\u003e\n\n\n\n\u003ch2 id=\"h-but-first-what-is-github-copilot-agent-mode-nbsp\"\u003eBut first, what is GitHub Copilot agent mode? \u003c/h2\u003e\n\n\n\n\u003cp\u003eGitHub Copilot agent mode is an autonomous and agentic real-time, synchronous collaborator that performs multi-step coding tasks based on natural-language prompts. More simply, it’s a problem solver that understands your intent, builds a solution, and iterates until it gets it right. \u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cp\u003e\n\u003ciframe loading=\"lazy\" title=\"GitHub Copilot: agent mode now available\" width=\"500\" height=\"281\" src=\"https://www.youtube.com/embed/pRihTxpipZ0?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\u003c/p\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eAgent mode can:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eAnalyze your codebase to grasp the full context.\u003c/li\u003e\n\n\n\n\u003cli\u003ePlan and execute multi-step solutions.\u003c/li\u003e\n\n\n\n\u003cli\u003eRun commands or tests.\u003c/li\u003e\n\n\n\n\u003cli\u003eReach out to external tools for specialized tasks.\u003c/li\u003e\n\n\n\n\u003cli\u003eSuggest architectural improvements.\u003c/li\u003e\n\n\n\n\u003cli\u003eRun and refine its own work through an agentic loop, including planning, applying changes, testing, and iterating.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eRather than just responding to requests, agent mode actively works toward your goal. You define the outcome, and it determines the best approach—seeking feedback from you as needed, testing its own solutions, and refining its work in real time. And as it operates, you can see its reasoning, decision-making process, and the tools it uses.\u003c/p\u003e\n\n\n\n\u003cp\u003eWhether you want Copilot to analyze your code base, propose file edits, or run tests, agent mode allows Copilot to complete all the necessary subtasks on its own. \u003c/p\u003e\n\n\n\n\u003cp\u003eOn top of that, agent mode enables Copilot to quickly recognize errors and fix them automatically. \u003c/p\u003e\n\n\n\n\u003cp\u003eHere’s how agent mode compares to some of our other AI coding tools: \u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\u003cstrong\u003eTool\u003c/strong\u003e\u003c/td\u003e\u003ctd\u003e\u003cstrong\u003eWhat it is\u003c/strong\u003e\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eAgent mode\u003c/td\u003e\u003ctd\u003eA mode where Copilot is capable of iterating on its own code, recognizing errors, and fixing them automatically\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eGitHub Copilot coding agent\u003c/td\u003e\u003ctd\u003eAn autonomous SWE agent that asynchronously works on your behalf to do everything from resolving issues to solving for human feedback \u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eCode completion\u003c/td\u003e\u003ctd\u003eA Copilot feature that offers autocomplete-style suggestions in supported IDEs \u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\n\n\u003ch2 id=\"h-how-does-agent-mode-in-github-copilot-work\"\u003eHow does agent mode in GitHub Copilot work?\u003c/h2\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" decoding=\"async\" width=\"1600\" height=\"774\" loading=\"lazy\" src=\"https://github.blog/wp-content/uploads/2025/05/how-it-works.png?resize=1600%2C774\" alt=\"Flowchart diagram illustrating how a user interacts with Copilot, which communicates with a machine, workspace, and tools, all connected through a loop involving a large language model (LLM).\" srcset=\"https://github.blog/wp-content/uploads/2025/05/how-it-works.png?w=1600 1600w, https://github.blog/wp-content/uploads/2025/05/how-it-works.png?w=300 300w, https://github.blog/wp-content/uploads/2025/05/how-it-works.png?w=768 768w, https://github.blog/wp-content/uploads/2025/05/how-it-works.png?w=1024 1024w, https://github.blog/wp-content/uploads/2025/05/how-it-works.png?w=1536 1536w\" sizes=\"auto, (max-width: 1000px) 100vw, 1000px\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eAt its core, agent mode works as an orchestrator of several different tools and variables (e.g., your prompt and workspace) through a system prompt that tells Copilot to keep iterating on its own output until it reaches a final state. \u003c/p\u003e\n\n\n\n\u003cp\u003eWhen you send a natural-language prompt to Copilot agent mode, it’s augmented by our backend system prompt. This includes your query, a summarized structure of the workspace, machine context, and tool descriptions.\u003c/p\u003e\n\n\n\n\u003cp\u003eHere’s a breakdown of what happens when you use Copilot agent mode: \u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eYou prompt Copilot with clear requirements on the end result you want.\u003c/li\u003e\n\n\n\n\u003cli\u003eCopilot parses the question and asks an AI language model how to resolve the task, then begins working.\u003c/li\u003e\n\n\n\n\u003cli\u003eCopilot monitors the first iteration for errors and determines how to fix them.\u003c/li\u003e\n\n\n\n\u003cli\u003eAgent mode autonomously uses various tools to get to the end result. \u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eAfter it runs commands and applies edits, agent mode works to detect syntax errors, terminal output, test results, and build errors. Based on the results, it then determines how to course-correct, whether that’s by making additional edits, terminal commands, or performing tool calls.\u003c/p\u003e\n\n\n\n\u003cp\u003eThe LLM has an ever-expanding set of tools to call, each with capabilities that help Copilot complete the task—and you’re in charge of which tools you want agent mode to use. Each tool, such as \u003ccode\u003eread_file\u003c/code\u003e, \u003ccode\u003eedit_file\u003c/code\u003e, and \u003ccode\u003erun_in_terminal\u003c/code\u003e, gives Copilot detailed instructions on how and when to use it. These tools allow Copilot to search your workspace, read file contents, run terminal commands, get errors from the editor and apply proposed changes, and more.\u003c/p\u003e\n\n\n\n\u003cp\u003eYou’re not limited to just built-in tools. You can extend agent mode’s capabilities by installing more specialized tools from Model Context Protocol (MCP) servers or extensions. MCP is an open standard that enables AI models to interact with external tools and services through a unified interface. We recently announced \u003ca href=\"https://github.com/github/github-mcp-server\"\u003ethe GitHub MCP server\u003c/a\u003e, which allows you to:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eAutomate GitHub workflows and processes.\u003c/li\u003e\n\n\n\n\u003cli\u003eExtract and analyze data from GitHub repositories.\u003c/li\u003e\n\n\n\n\u003cli\u003eBuild AI-powered tools and applications that interact with GitHub’s ecosystem.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eCombining the power of agent mode and MCP means that the LLM’s knowledge expands even further once connected to your services and data sources. ✨\u003c/p\u003e\n\n\n\n\u003ch2 id=\"h-what-can-i-do-with-github-copilot-agent-mode-what-are-some-use-cases\"\u003eWhat can I do with GitHub Copilot agent mode? What are some use cases?\u003c/h2\u003e\n\n\n\n\u003cp\u003eAgent mode brings an agentic workflow to GitHub Copilot, offering real-time, synchronous help across any number of tasks in your workflows. \u003c/p\u003e\n\n\n\n\u003cp\u003eWhether you let the agent take the idea and run with it, or you lead it each step of the way and control the path, you’re in the driver’s seat with Copilot as your, well, copilot.  \u003c/p\u003e\n\n\n\n\u003cblockquote\u003e\n\u003cp\u003eIn my personal experience, agent mode has been a game-changer for starting small projects and proof-of-concepts from scratch. When I needed to modernize our open source history visualization scripts, I put agent mode to the test with both GPT-4o and Claude 3.7 models. The results were remarkable—it transformed our basic matplotlib histograms into sophisticated, SVG-based animated line charts with minimal guidance. What truly impressed me was seeing Copilot produce a perfect SVG histogram on its first attempt. \u003cstrong\u003e\u003cstrong\u003eThis intelligent assistance not only accelerates development but has fundamentally transformed how I approach both prototyping and refactoring.\u003c/strong\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003ccite\u003eZhe-You Liu, Apache Airflow Committer\u003cbr/\u003e\u003c/cite\u003e\u003c/blockquote\u003e\n\n\n\n\u003cp\u003eHere are some ways we’ve seen developers inside and outside GitHub use agent mode:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eRefactoring code \u003c/li\u003e\n\n\n\n\u003cli\u003eMigrating a project to another programming language or to another tech stack\u003c/li\u003e\n\n\n\n\u003cli\u003eWriting tests \u003c/li\u003e\n\n\n\n\u003cli\u003eModernizing legacy code (maybe so you don’t have to learn an outdated language)\u003c/li\u003e\n\n\n\n\u003cli\u003eAutofixing code gen errors\u003c/li\u003e\n\n\n\n\u003cli\u003eAdding new features to an application\u003c/li\u003e\n\n\n\n\u003cli\u003ePrototyping a new app based on a functional spec or UI sketch\u003c/li\u003e\n\n\n\n\u003cli\u003eImplementing non-functional requirements or boilerplate code\u003c/li\u003e\n\n\n\n\u003cli\u003eScoping and planning the work for implementing a new feature \u003c/li\u003e\n\n\n\n\u003cli\u003eNon-code generation tasks, like documentation\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eOne important thing to note: Copilot is powered by LLMs, which are nondeterministic, and that means its suggestions may differ even with the same prompt and context.\u003c/p\u003e\n\n\n\n\n\n\n\n\n\n\n\n\u003cp\u003eAgent mode is powerful, but you can extend its capabilities by combining it with other features in GitHub Copilot. For instance, you can give Copilot \u003ca href=\"https://code.visualstudio.com/docs/copilot/copilot-customization\"\u003ecustom instructions\u003c/a\u003e so all of its responses fit your day-to-day coding practices, tools, and developers workflows. \u003c/p\u003e\n\n\n\n\u003cp\u003eAt GitHub, we often use custom instructions to give Copilot specific testing frameworks to use, as well as guardrails, frameworks, and instructions for unit testing. This allows you to customize how Copilot codes for you in agent mode, similar to giving instructions to one of your peers. \u003c/p\u003e\n\n\n\n\u003cp\u003eYou can also use other \u003ca href=\"https://github.blog/ai-and-ml/github-copilot/copilot-ask-edit-and-agent-modes-what-they-do-and-when-to-use-them/\"\u003eCopilot Chat modes\u003c/a\u003e, like edit mode and ask mode. \u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\u003cstrong\u003eMode\u003c/strong\u003e\u003c/td\u003e\u003ctd\u003e\u003cstrong\u003eWhat you can do with it\u003c/strong\u003e\u003c/td\u003e\u003ctd\u003e\u003cstrong\u003eA use case\u003c/strong\u003e\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e\u003ca href=\"https://code.visualstudio.com/docs/copilot/chat/copilot-edits\"\u003eEdit mode\u003c/a\u003e\u003c/td\u003e\u003ctd\u003eEasily make edits across multiple files in your codebase.\u003c/td\u003e\u003ctd\u003eApply code edits directly in your project for implementing a new feature, fixing a bug, or refactoring code.\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e\u003ca href=\"https://code.visualstudio.com/docs/copilot/chat/chat-ask-mode\"\u003eAsk mode\u003c/a\u003e\u003c/td\u003e\u003ctd\u003eAsk Copilot questions for a better understanding of your codebase or technology concepts.\u003c/td\u003e\u003ctd\u003eLearn how a piece of code works, brainstorm ideas for software, or discover new technologies.\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e\u003ca href=\"https://code.visualstudio.com/docs/copilot/chat/chat-agent-mode\"\u003eAgent mode\u003c/a\u003e\u003c/td\u003e\u003ctd\u003eStart an agentic, autonomous coding workflow that delivers your desired result with minimal guidance.\u003c/td\u003e\u003ctd\u003eImplement high-level requirements for a new feature or project through agent mode, which identifies and applies necessary changes automatically.\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\n\n\u003ch2 id=\"h-take-this-with-you\"\u003eTake this with you\u003c/h2\u003e\n\n\n\n\u003cp\u003eLike working with any other developer, the more context you give and the more specific you are about your intended outcome, the better results you’ll get from GitHub Copilot—and that’s particularly true with agent mode. It needs the right tools to do the right work, but by feeding agent mode custom instructions to tailor it to your coding preferences or extending its capabilities via MCP integrations, it can fit your specific style of building software. \u003c/p\u003e\n\n\n\n\u003cp\u003eAs with anything powered by LLMs, agent mode’s suggestions benefit from having you in the pilot’s seat to review code, and make sure things work as expected. But what’s so remarkable about agent mode is that you can use it exactly the way you want. It’s your peer programmer, which means that if you want to use it to build a prototype app, work with an existing codebase, or have it answer questions and automate lower-level parts of your workflow, you can. It’s up to you. Happy building!\u003c/p\u003e\n\n\n\n\u003cdiv\u003e\n\u003cp\u003e\u003cstrong\u003eLooking to try agent mode?\u003c/strong\u003e \u003ca href=\"https://docs.github.com/en/copilot/about-github-copilot/github-copilot-features\"\u003eLearn more\u003c/a\u003e about GitHub Copilot features or \u003ca href=\"https://resources.github.com/copilot-for-business/?ef_id=_k_Cj0KCQjwsp6pBhCfARIsAD3GZubTXuCGU1hy65GlbZ2fA1YjoRRhw64GoF8UI-lrQsnWSqAWJ7dC3QoaAqQ4EALw_wcB_k_\u0026amp;OCID=AIDcmmc3fhtaow_SEM__k_Cj0KCQjwsp6pBhCfARIsAD3GZubTXuCGU1hy65GlbZ2fA1YjoRRhw64GoF8UI-lrQsnWSqAWJ7dC3QoaAqQ4EALw_wcB_k_\u0026amp;gclid=Cj0KCQjwsp6pBhCfARIsAD3GZubTXuCGU1hy65GlbZ2fA1YjoRRhw64GoF8UI-lrQsnWSqAWJ7dC3QoaAqQ4EALw_wcB\"\u003epurchase your plan\u003c/a\u003e today.\u003c/p\u003e\n\u003c/div\u003e\n\n\n\n\u003ch3 id=\"h-more-resources-to-explore\"\u003eMore resources to explore:\u003c/h3\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://code.visualstudio.com/docs/copilot/chat/chat-agent-mode?ocid=AIDcmmb150vbv1_SEM__k_CjwKCAjw87XBBhBIEiwAxP3_A1_WBEXTLAxMTF1FEu_MwyN3WwXm6qrdkqNTmKuvYaQHDhtqxLHH_BoCfu8QAvD_BwE_k_\"\u003eUse agent mode in VS Code\u003c/a\u003e\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003ca href=\"https://github.blog/ai-and-ml/github-copilot/copilot-ask-edit-and-agent-modes-what-they-do-and-when-to-use-them/\"\u003eCopilot ask, edit, and agent modes: What they do and when to use them\u003c/a\u003e\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003ca href=\"https://docs.github.com/en/copilot/using-github-copilot/guides-on-using-github-copilot\"\u003eGuides on using GitHub Copilot\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\t\n\n\t\u003cdiv\u003e\n\t\u003ch2\u003e\n\t\tWritten by\t\u003c/h2\u003e\n\t\n\t\t\t\u003carticle\u003e\n\t\u003cdiv\u003e\n\t\t\t\t\t\u003cdiv\u003e\n\t\t\t\t\u003cpicture\u003e\n\t\t\t\t\t\u003csource srcset=\"https://avatars.githubusercontent.com/u/188614820?v=4\u0026amp;s=200\" width=\"120\" height=\"120\" media=\"(min-width: 768px)\"/\u003e\n\t\t\t\t\t\u003cimg src=\"https://avatars.githubusercontent.com/u/188614820?v=4\u0026amp;s=200\" alt=\"Alexandra Lietzke\" width=\"80\" height=\"80\" loading=\"lazy\" decoding=\"async\"/\u003e\n\t\t\t\t\u003c/picture\u003e\n\t\t\t\u003c/div\u003e\n\t\t\t\t\n\t\t\t\t\t\u003cp\u003eContent Writer\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\u003c/article\u003e\n\t\u003c/div\u003e\n\u003c/section\u003e\u003cdiv\u003e\n\t\u003ch2\u003e\n\t\tExplore more from GitHub\t\u003c/h2\u003e\n\t\u003cdiv\u003e\n\t\t\u003cdiv\u003e\n\t\t\u003cp\u003e\u003cimg src=\"https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg\" width=\"44\" height=\"44\" alt=\"Docs\"/\u003e\u003c/p\u003e\u003ch3\u003e\n\t\t\tDocs\t\t\u003c/h3\u003e\n\t\t\u003cp\u003eEverything you need to master GitHub, all in one place.\u003c/p\u003e\n\t\t\t\t\t\u003cp\u003e\n\t\t\t\t\u003ca data-analytics-click=\"Blog, click on module, text: Go to Docs; ref_location:bottom recirculation;\" href=\"https://docs.github.com/\" target=\"_blank\" aria-label=\"Go to Docs\"\u003e\n\t\t\t\t\tGo to Docs\t\t\t\t\t\t\t\t\t\t\t\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"\u003e\u003cpath fill-rule=\"evenodd\" d=\"M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n\t\t\t\t\t\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\u003cdiv\u003e\n\t\t\u003cp\u003e\u003cimg src=\"https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg\" width=\"44\" height=\"44\" alt=\"GitHub\"/\u003e\u003c/p\u003e\u003ch3\u003e\n\t\t\tGitHub\t\t\u003c/h3\u003e\n\t\t\u003cp\u003eBuild what’s next on GitHub, the place for anyone from anywhere to build anything.\u003c/p\u003e\n\t\t\t\t\t\u003cp\u003e\n\t\t\t\t\u003ca data-analytics-click=\"Blog, click on module, text: Start building; ref_location:bottom recirculation;\" href=\"https://github.com/\" target=\"_blank\" aria-label=\"Start building\"\u003e\n\t\t\t\t\tStart building\t\t\t\t\t\t\t\t\t\t\t\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"\u003e\u003cpath fill-rule=\"evenodd\" d=\"M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n\t\t\t\t\t\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\u003cdiv\u003e\n\t\t\u003cp\u003e\u003cimg src=\"https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg\" width=\"44\" height=\"44\" alt=\"Customer stories\"/\u003e\u003c/p\u003e\u003ch3\u003e\n\t\t\tCustomer stories\t\t\u003c/h3\u003e\n\t\t\u003cp\u003eMeet the companies and engineering teams that build with GitHub.\u003c/p\u003e\n\t\t\t\t\t\u003cp\u003e\n\t\t\t\t\u003ca data-analytics-click=\"Blog, click on module, text: Learn more; ref_location:bottom recirculation;\" href=\"https://github.com/customer-stories\" target=\"_blank\" aria-label=\"Learn more\"\u003e\n\t\t\t\t\tLearn more\t\t\t\t\t\t\t\t\t\t\t\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"\u003e\u003cpath fill-rule=\"evenodd\" d=\"M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n\t\t\t\t\t\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\u003cdiv\u003e\n\t\t\u003cp\u003e\u003cimg src=\"https://github.blog/wp-content/uploads/2022/05/careers.svg\" width=\"44\" height=\"44\" alt=\"Enterprise content\"/\u003e\u003c/p\u003e\u003ch3\u003e\n\t\t\tEnterprise content\t\t\u003c/h3\u003e\n\t\t\u003cp\u003eExecutive insights, curated just for you\u003c/p\u003e\n\t\t\t\t\t\u003cp\u003e\n\t\t\t\t\u003ca data-analytics-click=\"Blog, click on module, text: Get started; ref_location:bottom recirculation;\" href=\"https://github.com/solutions/executive-insights\" target=\"_blank\" aria-label=\"Get started\"\u003e\n\t\t\t\t\tGet started\t\t\t\t\t\t\t\t\t\t\t\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"\u003e\u003cpath fill-rule=\"evenodd\" d=\"M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n\t\t\t\t\t\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\t\u003c/div\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "11 min read",
  "publishedTime": "2025-05-22T19:15:57Z",
  "modifiedTime": "2025-05-22T19:15:59Z"
}
