{
  "id": "65080f05-e680-4354-85d8-ee5fc2ca8e05",
  "title": "Java News Roundup: Gradle 8.14, JBash Jash, Hibernate, Open Liberty, Spring Cloud Data Flow",
  "link": "https://www.infoq.com/news/2025/04/java-news-roundup-apr21-2025/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "This week's Java roundup for April 21st, 2025 features news highlighting: the GA release of Gradle 8.14; JBang introduces Jash, a Java library for shell scripts; the first release candidate of Hibernate ORM 7.0; the April edition of Open Liberty; and the end of open-source support for Spring Cloud Data Flow. By Michael Redlich",
  "author": "Michael Redlich",
  "published": "Mon, 28 Apr 2025 22:00:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Java",
    "Architecture \u0026 Design",
    "Development",
    "news"
  ],
  "byline": "Michael Redlich",
  "length": 6494,
  "excerpt": "This week's Java roundup for April 21st, 2025 features news highlighting: the GA release of Gradle 8.14; JBang introduces Jash, a Java library for shell scripts; the first release candidate of Hiberna",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s1_20250422123038_u1/apple-touch-icon.png",
  "text": "This week's Java roundup for April 21st, 2025 features news highlighting: the GA release of Gradle 8.14; JBang introduces Jash, a Java library for shell scripts; the first release candidate of Hibernate ORM 7.0; the April edition of Open Liberty; and the end of open-source support for Spring Cloud Data Flow. OpenJDK Two JEPs have been elevated from Candidate to Proposed to Target for JDK 25, announced here and here, respectively, namely: JEP 512, Compact Source Files and Instance Main Methods, and JEP 511, Module Import Declarations. Their reviews are expected to conclude on Monday, April 28, 2025 and details for each JEP may be found in this InfoQ news story. JEP 513, Flexible Constructor Bodies, has been elevated from its JEP Draft 8344702 to Candidate status. This JEP proposes to finalize this feature, without change, after three rounds of preview, namely: JEP 492, Flexible Constructor Bodies (Third Preview), delivered in JDK 24; JEP 482, Flexible Constructor Bodies (Second Preview), delivered in JDK 23; and JEP 447, Statements before super(...) (Preview), delivered in JDK 22. This feature allows statements that do not reference an instance being created to appear before the this() or super() calls in a constructor; and preserve existing safety and initialization guarantees for constructors. Gavin Bierman, Consulting Member of Technical Staff at Oracle, has provided an initial specification of this JEP for the Java community to review and provide feedback. JDK 25 Build 20 of the JDK 25 early-access builds was made available this past week featuring updates from Build 19 that include fixes for various issues. More details on this release may be found in the release notes. For JDK 25, developers are encouraged to report bugs via the Java Bug Database. GlassFish GlassFish 7.0.24, the twenty-fourth maintenance release, delivers bug fixes, dependency upgrades and new features such as: support for JDK 24; and faster deployment time with improved file discovery by using the walkFileTree() method defined in the Java Files class. More details on this release may be found in the release notes. Spring Framework It was a busy week over at Spring as the various teams have delivered first release candidates of Spring Boot, Spring Data 2025.0.0, Spring Security, Spring Authorization Server, Spring Session, Spring Integration, Spring Modulith and Spring Web Services. There were also second milestone releases of Spring Data 2025.1.0 and Spring for Apache Kafka and a first milestone release of Spring Vault. Further details may be found in this InfoQ news story. The Spring Cloud Data Flow team has announced the end of open-source support for this project along with Spring Cloud Deployer and Spring Statemachine. The reasoning for this includes: Spring Cloud Data Flow came out of the roots for Spring XD eight years ago for orchestrating both batch and streaming workloads and has shown great success with our customers over those years. However, in order to keep Spring Cloud Data Flow and related ecosystem projects going into the future in a way that is sustainable, we have made the decision to only release Spring Cloud Data Flow as a commercial offering. Future releases, after versions 2.11.x, 2.9.x and 4.0.x, respectively, will only be made available to Tanzu Spring customers. Open Liberty IBM has released version 25.0.0.4 of Open Liberty featuring: support for Java 24; the ability to collect Liberty audit logs, via their Audit 2.0 feature, and send them to a configured OpenTelemetry exporter; and InstantOn support for the J2EE Management 1.1, Application Client Support for Server 1.0, Jakarta Application Client Support for Server 2.0 and Web Security Service 1.1 features. There were also resolutions to CVE-2025-25193 and CVE-2025-23184 that may cause a denial-of-service due to vulnerabilities from Netty versions up to and including 4.1.118.Final and Apache CXF versions before 3.5.10, 3.6.5 and 4.0.6, respectively. Quarkus Quarkus 3.21.4, the fourth maintenance release, ships with notable changes such as: a resolution to a StackOverflowError using a retry policy from the SmallRye implementation of MicroProfile Fault Tolerance specification; and the addition of a warning or error when attempting to create an instance of the HttpSecurityPolicy interface with a duplicated name. More details on this release may be found in the release notes. Helidon The release of Helidon 4.2.1 provides bug fixes and notable changes such as: the use of base units from the Timer interface for improved metrics reporting, in JSON format, in the toString() method defined in the MTimer class; and support for configurable buffering added to the TcpClientConnection class to to prevent small write chunks. More details on this release may be found in the release notes. Hibernate The first candidate release of Hibernate ORM 7.0.0 delivers new features such as: a new QuerySpecification interface that provides a common set of methods for all query specifications that allow for iterative, programmatic building of a query; and a migration from Hibernate Commons Annotations (HCANN) to the new Hibernate Models project for low-level processing of an application domain model. There is also support for the Jakarta Persistence 3.2 specification, the latest version targeted for Jakarta EE 11. The team anticipates this as the only release candidate before the GA release. More details on this release may be found in the release notes and the migration guide. JBang The JBang team has introduced Jash, a new Java library that provides a way to execute process or shell scripts that are \"fluent, predictable and with a great developer experience.\" Jash, pronounced \"Jazz,\" handles the behind-the-scenes tasks with the complexities of using multiple threads. More details on this initial release may be found in the release notes and InfoQ will follow up with a more detailed news story. Gradle After three release candidates, the release of Gradle 8.14 delivers new features such as: support for JDK 24; an introduction to lazy dependency configuration initialization for improved configuration performance and use of memory; and a new integrity check mode for improved debugging in the configuration cache. More details on this release may be found in the release notes. About the Author Michael Redlich",
  "image": "https://res.infoq.com/news/2025/04/java-news-roundup-apr21-2025/en/headerimage/java-istock-image-01-1745843457107.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eThis week\u0026#39;s Java roundup for April 21st, 2025 features news highlighting: the GA release of Gradle 8.14; JBang introduces Jash, a Java library for shell scripts; the first release candidate of Hibernate ORM 7.0; the April edition of Open Liberty; and the end of open-source support for Spring Cloud Data Flow.\u003c/p\u003e\n\n\u003ch4\u003eOpenJDK\u003c/h4\u003e\n\n\u003cp\u003eTwo JEPs have been elevated from \u003cstrong\u003eCandidate\u003c/strong\u003e to \u003cstrong\u003eProposed to Target\u003c/strong\u003e for JDK 25, announced \u003ca href=\"https://mail.openjdk.org/pipermail/jdk-dev/2025-April/009974.html\"\u003ehere\u003c/a\u003e and \u003ca href=\"https://mail.openjdk.org/pipermail/jdk-dev/2025-April/009973.html\"\u003ehere\u003c/a\u003e, respectively, namely: JEP 512, \u003ca href=\"https://openjdk.org/jeps/512\"\u003eCompact Source Files and Instance Main Methods\u003c/a\u003e, and JEP 511, \u003ca href=\"https://openjdk.org/jeps/511\"\u003eModule Import Declarations\u003c/a\u003e. Their reviews are expected to conclude on \u003cspan\u003eMonday, April 28, 2025\u003c/span\u003e and details for each JEP may be found in this InfoQ \u003ca href=\"https://www.infoq.com/news/2025/04/jdk-news-roundup-apr14-2025\"\u003enews story\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eJEP 513, \u003ca href=\"https://openjdk.org/jeps/513\"\u003eFlexible Constructor Bodies\u003c/a\u003e, has been \u003ca href=\"https://mail.openjdk.org/pipermail/jdk-dev/2025-April/009976.html\"\u003eelevated\u003c/a\u003e from its \u003cstrong\u003eJEP Draft 8344702\u003c/strong\u003e to \u003cstrong\u003eCandidate\u003c/strong\u003e status. This JEP proposes to finalize this feature, without change, after three rounds of preview, namely: JEP 492, \u003ca href=\"https://openjdk.org/jeps/492\"\u003eFlexible Constructor Bodies (Third Preview)\u003c/a\u003e, delivered in JDK 24; JEP 482, \u003ca href=\"https://openjdk.org/jeps/482\"\u003eFlexible Constructor Bodies (Second Preview)\u003c/a\u003e, delivered in JDK 23; and JEP 447, \u003ca href=\"https://openjdk.org/jeps/447\"\u003eStatements before super(...) (Preview)\u003c/a\u003e, delivered in JDK 22. This feature allows statements that do not reference an instance being created to appear before the \u003cstrong\u003e\u003ccode\u003ethis()\u003c/code\u003e\u003c/strong\u003e or \u003cstrong\u003e\u003ccode\u003esuper()\u003c/code\u003e\u003c/strong\u003e calls in a constructor; and preserve existing safety and initialization guarantees for constructors. \u003ca href=\"https://www.linkedin.com/in/gavin-bierman-a0173075/\"\u003eGavin Bierman\u003c/a\u003e, Consulting Member of Technical Staff at Oracle, has provided an \u003ca href=\"https://cr.openjdk.org/~gbierman/jep447/jep447-20230420/specs/statements-before-super-jls.html\"\u003einitial specification\u003c/a\u003e of this JEP for the Java community to review and provide feedback.\u003c/p\u003e\n\n\u003ch4\u003eJDK 25\u003c/h4\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/openjdk/jdk/releases/tag/jdk-25%2B20\"\u003eBuild 20\u003c/a\u003e of the JDK 25 \u003ca href=\"https://jdk.java.net/25/\"\u003eearly-access builds\u003c/a\u003e was made available this past week featuring \u003ca href=\"https://github.com/openjdk/jdk/compare/jdk-25%2B19...jdk-25%2B20\"\u003eupdates\u003c/a\u003e from Build 19 that include fixes for various \u003ca href=\"https://bugs.openjdk.org/browse/JDK-8355002?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2025%20and%20%22resolved%20in%20build%22%20%3D%20b20%20order%20by%20component%2C%20subcomponent\"\u003eissues\u003c/a\u003e. More details on this release may be found in the \u003ca href=\"https://jdk.java.net/25/release-notes\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eFor \u003ca href=\"https://openjdk.org/projects/jdk/25/\"\u003eJDK 25\u003c/a\u003e, developers are encouraged to report bugs via the \u003ca href=\"https://bugreport.java.com/bugreport/\"\u003eJava Bug Database\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eGlassFish\u003c/h4\u003e\n\n\u003cp\u003e\u003ca href=\"https://glassfish.org/\"\u003eGlassFish\u003c/a\u003e 7.0.24, the \u003ca href=\"https://x.com/OmniFishEE/status/1915018714816147721\"\u003etwenty-fourth maintenance release\u003c/a\u003e, delivers bug fixes, dependency upgrades and new features such as: support for JDK 24; and faster deployment time with improved file discovery by using the \u003cstrong\u003e\u003ccode\u003ewalkFileTree()\u003c/code\u003e\u003c/strong\u003e method defined in the Java \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://docs.oracle.com/en/java/javase/24/docs/api/java.base/java/nio/file/Files.html\"\u003eFiles\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class. More details on this release may be found in the \u003ca href=\"https://github.com/eclipse-ee4j/glassfish/releases/tag/7.0.24\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eSpring Framework\u003c/h4\u003e\n\n\u003cp\u003eIt was a busy week over at Spring as the various teams have delivered first release candidates of \u003ca href=\"https://spring.io/projects/spring-boot\"\u003eSpring Boot\u003c/a\u003e, \u003ca href=\"https://spring.io/projects/spring-data\"\u003eSpring Data\u003c/a\u003e \u003cstrong\u003e2025.0.0\u003c/strong\u003e, \u003ca href=\"https://spring.io/projects/spring-security\"\u003eSpring Security\u003c/a\u003e, \u003ca href=\"https://spring.io/projects/spring-authorization-server\"\u003eSpring Authorization Server\u003c/a\u003e, \u003ca href=\"https://spring.io/projects/spring-session\"\u003eSpring Session\u003c/a\u003e, \u003ca href=\"https://spring.io/projects/spring-integration\"\u003eSpring Integration\u003c/a\u003e, \u003ca href=\"https://spring.io/projects/spring-modulith\"\u003eSpring Modulith\u003c/a\u003e and \u003ca href=\"https://spring.io/projects/spring-ws\"\u003eSpring Web Services\u003c/a\u003e. There were also second milestone releases of Spring Data \u003cstrong\u003e2025.1.0\u003c/strong\u003e and \u003ca href=\"https://spring.io/projects/spring-kafka\"\u003eSpring for Apache Kafka\u003c/a\u003e and a first milestone release of \u003ca href=\"https://spring.io/projects/spring-vault\"\u003eSpring Vault\u003c/a\u003e. Further details may be found in this InfoQ \u003ca href=\"https://www.infoq.com/news/2025/04/spring-news-roundup-apr21-2025/\"\u003enews story\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://spring.io/projects/spring-cloud-dataflow\"\u003eSpring Cloud Data Flow\u003c/a\u003e team has \u003ca href=\"https://spring.io/blog/2025/04/21/spring-cloud-data-flow-commercial\"\u003eannounced\u003c/a\u003e the end of open-source support for this project along with \u003ca href=\"https://github.com/spring-cloud/spring-cloud-deployer/blob/main/README.adoc\"\u003eSpring Cloud Deployer\u003c/a\u003e and \u003ca href=\"https://spring.io/projects/spring-statemachine\"\u003eSpring Statemachine\u003c/a\u003e. The reasoning for this includes:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eSpring Cloud Data Flow came out of the roots for Spring XD eight years ago for orchestrating both batch and streaming workloads and has shown great success with our customers over those years. However, in order to keep Spring Cloud Data Flow and related ecosystem projects going into the future in a way that is sustainable, we have made the decision to only release Spring Cloud Data Flow as a commercial offering.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eFuture releases, after versions 2.11.x, 2.9.x and 4.0.x, respectively, will only be made available to \u003ca href=\"https://www.vmware.com/products/app-platform/tanzu-spring\"\u003eTanzu Spring\u003c/a\u003e customers.\u003c/p\u003e\n\n\u003ch4\u003eOpen Liberty\u003c/h4\u003e\n\n\u003cp\u003eIBM has \u003ca href=\"https://openliberty.io/blog/2025/04/22/25.0.0.4.html\"\u003ereleased\u003c/a\u003e version 25.0.0.4 of \u003ca href=\"https://openliberty.io/\"\u003eOpen Liberty\u003c/a\u003e featuring: support for Java 24; the ability to collect Liberty audit logs, via their \u003ca href=\"https://openliberty.io/docs/latest/reference/feature/audit-2.0.html\"\u003eAudit 2.0\u003c/a\u003e feature, and send them to a configured OpenTelemetry exporter; and \u003ca href=\"https://openliberty.io/docs/latest/instanton.html\"\u003eInstantOn\u003c/a\u003e support for the \u003ca href=\"https://openliberty.io/docs/latest/reference/feature/j2eeManagement-1.1.html\"\u003eJ2EE Management 1.1\u003c/a\u003e, \u003ca href=\"https://openliberty.io/docs/latest/reference/feature/appClientSupport-1.0.html\"\u003eApplication Client Support for Server 1.0\u003c/a\u003e, \u003ca href=\"https://openliberty.io/docs/latest/reference/feature/appClientSupport-2.0.html\"\u003eJakarta Application Client Support for Server 2.0\u003c/a\u003e and \u003ca href=\"https://openliberty.io/docs/latest/reference/feature/wsSecurity-1.1.html\"\u003eWeb Security Service 1.1\u003c/a\u003e features. There were also resolutions to \u003ca href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-25193\"\u003eCVE-2025-25193\u003c/a\u003e and \u003ca href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-23184\"\u003eCVE-2025-23184\u003c/a\u003e that may cause a denial-of-service due to vulnerabilities from Netty versions up to and including 4.1.118.Final and Apache CXF versions before 3.5.10, 3.6.5 and 4.0.6, respectively.\u003c/p\u003e\n\n\u003ch4\u003eQuarkus\u003c/h4\u003e\n\n\u003cp\u003e\u003ca href=\"https://quarkus.io/\"\u003eQuarkus\u003c/a\u003e 3.21.4, the \u003ca href=\"https://quarkus.io/blog/quarkus-3-21-4-released/\"\u003efourth maintenance release\u003c/a\u003e, ships with notable changes such as: a resolution to a \u003cstrong\u003e\u003ccode\u003eStackOverflowError\u003c/code\u003e\u003c/strong\u003e using a retry policy from the \u003ca href=\"https://smallrye.io/\"\u003eSmallRye\u003c/a\u003e implementation of \u003ca href=\"https://github.com/microprofile/microprofile-fault-tolerance/blob/main/README.adoc\"\u003eMicroProfile Fault Tolerance\u003c/a\u003e specification; and the addition of a warning or error when attempting to create an instance of the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/security/HttpSecurityPolicy.java\"\u003eHttpSecurityPolicy\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e interface with a duplicated name. More details on this release may be found in the \u003ca href=\"https://github.com/quarkusio/quarkus/releases/tag/3.21.4\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eHelidon\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://x.com/helidon_project/status/1915723866917241005\"\u003erelease\u003c/a\u003e of \u003ca href=\"https://helidon.io/\"\u003eHelidon\u003c/a\u003e 4.2.1 provides bug fixes and notable changes such as: the use of base units from the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://helidon.io/docs/v4/apidocs/io.helidon.metrics.api/io/helidon/metrics/api/Timer.html\"\u003eTimer\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e interface for improved metrics reporting, in JSON format, in the \u003cstrong\u003e\u003ccode\u003etoString()\u003c/code\u003e\u003c/strong\u003e method defined in the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/helidon-io/helidon/blob/main/metrics/providers/micrometer/src/main/java/io/helidon/metrics/providers/micrometer/MTimer.java\"\u003eMTimer\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class; and support for configurable buffering added to the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://helidon.io/docs/v4/apidocs/io.helidon.webclient.api/io/helidon/webclient/api/TcpClientConnection.html\"\u003eTcpClientConnection\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class to to prevent small write chunks. More details on this release may be found in the \u003ca href=\"https://github.com/helidon-io/helidon/blob/4.2.1/CHANGELOG.md\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eHibernate\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://in.relation.to/2025/04/24/orm-70-cr1/\"\u003efirst candidate release\u003c/a\u003e of \u003ca href=\"https://hibernate.org/orm/\"\u003eHibernate ORM\u003c/a\u003e 7.0.0 delivers new features such as: a new \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://docs.jboss.org/hibernate/orm/7.0/javadocs/org/hibernate/query/specification/QuerySpecification.html\"\u003eQuerySpecification\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e interface that provides a common set of methods for all query specifications that allow for iterative, programmatic building of a query; and a migration from \u003ca href=\"https://github.com/hibernate/hibernate-commons-annotations/\"\u003eHibernate Commons Annotations\u003c/a\u003e (HCANN) to the new \u003ca href=\"https://github.com/hibernate/hibernate-models/blob/main/README.adoc\"\u003eHibernate Models\u003c/a\u003e project for low-level processing of an application domain model. There is also support for the \u003ca href=\"https://jakarta.ee/specifications/persistence/3.2/\"\u003eJakarta Persistence 3.2\u003c/a\u003e specification, the latest version targeted for Jakarta EE 11. The team anticipates this as the only release candidate before the GA release. More details on this release may be found in the \u003ca href=\"https://github.com/hibernate/hibernate-orm/releases/tag/7.0.0.CR1\"\u003erelease notes\u003c/a\u003e and the \u003ca href=\"https://docs.jboss.org/hibernate/orm/7.0/migration-guide/migration-guide.html\"\u003emigration guide\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eJBang\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://www.jbang.dev/\"\u003eJBang\u003c/a\u003e team has introduced \u003ca href=\"https://github.com/jbangdev/jbang-jash/blob/main/README.md\"\u003eJash\u003c/a\u003e, a new Java library that provides a way to execute process or shell scripts that are \u0026#34;\u003cem\u003efluent, predictable and with a great developer experience.\u003c/em\u003e\u0026#34; Jash, pronounced \u0026#34;\u003cem\u003eJazz\u003c/em\u003e,\u0026#34; handles the behind-the-scenes tasks with the complexities of using multiple threads. More details on this initial release may be found in the \u003ca href=\"https://github.com/jbangdev/jbang-jash/releases/tag/v0.0.1\"\u003erelease notes\u003c/a\u003e and InfoQ will follow up with a more detailed news story.\u003c/p\u003e\n\n\u003ch4\u003eGradle\u003c/h4\u003e\n\n\u003cp\u003eAfter three release candidates, the \u003ca href=\"https://github.com/gradle/gradle/releases/tag/v8.14.0\"\u003erelease\u003c/a\u003e of \u003ca href=\"https://gradle.org/\"\u003eGradle\u003c/a\u003e 8.14 delivers new features such as: support for JDK 24; an introduction to lazy \u003ca href=\"https://docs.gradle.org/8.14/userguide/declaring_configurations.html\"\u003edependency configuration\u003c/a\u003e initialization for improved configuration performance and use of memory; and a new integrity check mode for improved debugging in the \u003ca href=\"https://docs.gradle.org/8.14/userguide/configuration_cache.html\"\u003econfiguration cache\u003c/a\u003e. More details on this release may be found in the \u003ca href=\"https://docs.gradle.org/8.14/release-notes.html\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Michael-Redlich\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eMichael Redlich\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": "2025-04-28T00:00:00Z",
  "modifiedTime": null
}
