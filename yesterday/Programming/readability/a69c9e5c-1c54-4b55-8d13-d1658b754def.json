{
  "id": "a69c9e5c-1c54-4b55-8d13-d1658b754def",
  "title": "Diving deeper into using the Strangler Fig with Mobile Apps",
  "link": "https://martinfowler.com/articles/strangler-fig-mobile-apps.html#DivingDeeperx2026",
  "description": "",
  "author": "",
  "published": "2024-10-30T10:29:00-04:00",
  "source": "https://martinfowler.com/feed.atom",
  "categories": [
    "skip-home-page"
  ],
  "byline": "Matthew Foster",
  "length": 27554,
  "excerpt": "How to incrementally replace a legacy mobile application",
  "siteName": "martinfowler.com",
  "favicon": "",
  "text": "In this article we aim to show why taking an incremental approach to legacy mobile application modernization can be preferable to the classical 'rewrite from scratch' methodology. Thoughtworks has the benefit of working with large enterprise clients that are dependent on their in-house mobile applications for their core business. We see many of them asking their applications to do more and evolve faster, while at the same time, we see an increasing rejection of reputationally damaging high risk releases. As a solution, this article proposes alternative methods of legacy modernization that are based in Domain Driven Design and hinge on the application of the Strangler Fig pattern. While these concepts are far from new, we believe that their usage in mobile applications are novel. We feel that despite incurring a larger temporary overhead from their usage, this is an acceptable tradeoff. We assert how the methodology is used to combat the aforementioned attitudinal shifts in legacy mobile application development while gaining a platform to lower risk and drive incremental value delivery. We discuss how this works in theory, diving into both the architecture and code. We also recount how this worked in practice when it was trialled on a large, legacy mobile application at one of Thoughtworks’ enterprise clients. We highlight how the pattern enabled our client to rapidly build, test and productionize a modernized subset of domain functionalities inside an existing legacy application. We move on to evaluate the effectiveness of the trial by highlighting the business facing benefits such as a signficantly faster time to value and a 50% reduced median cycle time. We also touch on other expected benefits that should be used to measure the success of this methodology. The Problem with Mobile Legacy Modernization As applications age and grow, they tend to deteriorate both in quality and performance. Features take longer to get to market while outages and rolled back releases become more severe and frequent. There is a nuanced complexity to be understood about the reasons why this occurs both at the code and organizational level. To summarize though, at some point, an organization will grow tired of the poor outcomes from their software and start the process of legacy replacement. The decision to replace may be made based on multiple factors, including (but not limited to) cost/benefit analysis, risk analysis, or opportunity cost. Eventually a legacy modernization strategy will be chosen. This will be dependent on the organization’s attitude to risk. For example, a complex, high availability system may demand a more incremental or interstitial approach to legacy replacement/displacement than a simpler, less business critical one. In the case of mobile application modernization, those decisions have in recent memory been reasonably clear cut. A mobile application was often designed to do an individual thing- Apple’s “There’s an app for that” still rings out loud and clear in people’s minds 15 years after the initial batch of advertisements. That message was one that was taken to heart by organizations and startups alike: If you need to do something, write an app to do it. If you need to do something else, write another app to do that. This example struck me when I was pruning the apps on my phone a couple of years ago. At the time I noticed I had several apps from the manufacturer of my car; an older one and a newer one. I also had two apps from my bank; one showed my checking account, another that analyzed and illustrated my spending habits. I had three apps from Samsung for various IoT devices, and at least two from Philips that controlled my toothbrush and light bulbs. The point I’m laboring here is that a mobile application was never allowed to get so complicated, that it couldn’t be torn down, split out or started from scratch again. But what happens when this isn’t the case? Surely not all apps are created equal? Many believe that the mobile experience of the future will be centered around so-called “super-apps”; apps where you can pay, socialize, shop, call, message, and game, all under one application. To some degree this has already happened in China with “do-everything” applications like ‘WeChat’ and ‘AliPay’- we see the mobile device and its operating system as more of a vehicle to allow the running of these gigantic pieces of software. Comments from industry indicate a realization that the West is not quite as far along as China in this regard. But while not at the super-app, there is no doubt that complexity of the mobile app experience as a whole has increased significantly in recent years. Take the example of YouTube, when first installed, back in the early 2010’s, the application could play videos and not much else. Opening the application today one is presented with “Videos” and “Shorts”, a news feed, controllable categories, subscriptions, not to mention a content editing and publishing studio. Similarly with the Uber app, the user is asked if they want to order food. Google Maps can show a 3D view of a street and Amazon now recommends scrollable product-recommendation mood boards. These extra features have certainly enriched a user’s experience but they also make the traditional build, use, rebuild technique much more difficult. This difficulty can be explained by considering some of the existing common problems of mobile application development: Massive View Controllers/Activities/Fragments Direct manipulation of UI elements Platform specific code Poor Separation of Concerns Limited Testability With discipline, these problems can be managed early on. However, with a large application that has grown chaotically inline with the business it supports, incremental change will be difficult regardless. The solution then, as before, is to build new and release all at once. But what if you only want to add a new feature, or modernize an existing domain? What if you want to test your new feature with a small group of users ahead of time while serving everyone else the old experience? What if you’re happy with your app store reviews and don’t want to risk impacting them? Taking an incremental approach to app replacement then is the key to avoiding the pitfalls associated with ‘big bang releases’. The Strangler Fig pattern is often used to rebuild a legacy application in place: a new system is gradually created around the edges of an old one through frequent releases. This pattern is well known, but not widely used in a mobile context. We believe the reason for this is that there are several prerequisites that need to be in place before diving headfirst into the pattern. In their article on Patterns of Legacy Displacement, the authors describe four broad categories (prerequisites) used to help break a legacy problem into smaller, deliverable parts: Understand the outcomes you want to achieve Decide how to break the problem up into smaller parts Successfully deliver the parts Change the organization to allow this to happen on an ongoing basis Only in the third point, can we envisage the invocation of the Strangler Fig pattern. Doing so without an understanding of why, what or how it might continue in the future is a recipe for failure. Going forward, the article charts how Thoughtworks was able to help one of its enterprise clients expand its existing mobile legacy modernization efforts into a successful experiment that demonstrated the value behind the use of the Strangler Fig pattern in a mobile context. Satisfying the Prerequisites At this point, it seems appropriate to introduce the client that inspired the writing of this article – a globally distributed business with an established retail organization that had embraced mobile applications for many years. Our client had realized the benefits an app brought to provide a self-service experience for their products. They had quickly expanded and developed their app domains to allow millions of customers to take full advantage of all the products they sold. The organization had already spent a significant amount of time and effort modernizing its mobile applications in its smaller sub-brands. Responding to a lack of reuse/significant duplication of efforts, high cognitive load in app teams and slow feature delivery, the organization chose a mobile technology stack that leveraged a Modular Micro-app architecture. This strategy had been largely successful for them, enabling proliferation of features common to the organization (e.g. ‘login/registration/auth’ or ‘grocery shopping’) across different brands and territories, in a fraction of the time it would have taken to write them all individually. The diagram above is a simplified representation of the modular architecture the organization had successfully implemented. React Native was used due to its ability to entirely encapsulate a domain’s bounded context within an importable component. Each component was underpinned by its own backend for frontend (BFF) that came with the infrastructure as code to instantiate and run it. The host apps, shown above as UK and US, were simply containers that provided the app specific configuration and theming to the individual micro-apps. This ‘full slice’ of functionality has the advantages of both allowing re-use and reducing complexity by abstracting application domains to micro-apps managed by individual teams. We speak in depth about the results of this architecture in the already referenced article on ‘Linking Modular Architecture’. As touched upon earlier, the organization’s mobile estate was made up of a number of smaller sub-brands that served similar products in other territories. With the modular architecture pattern tried and tested, the organization wanted to focus efforts on its 'home-territory' mobile application (serving its main brand). Their main mobile app was much larger in terms of feature richness, revenue and user volumes to that of the sub brands. The app had been gaining features and users over many years of product development. This steady but significant growth had brought success in terms of how well-regarded their software was on both Google and Apple stores. However, it also started to show the characteristic signs of deterioration. Change frequency in the application had moved from days to months, resulting in a large product backlog and frustrated stakeholders who wanted an application that could evolve as fast as their products did. Their long release cycle was related to risk aversion: Any outage in the application was a serious loss of revenue to the organization and also caused their customers distress due to the essential nature of the products they sold. Changes were always tested exhaustively before being put live. The organization first considered a rewrite of the entire application and were shocked by the cost and duration of such a project. The potential negative reception of a ‘big bang’ new release to their app store customers also caused concerns in the levels of risk they could accept. Suggestions of alpha and beta user groups were considered unacceptable given the huge volumes of users the organization was serving. In this instance, a modernization effort similar to that seen in their sub-brands was believed to be of considerably higher cost and risk. Thoughtworks suggested an initial proof of concept that built on the successes of the reusability already seen with a modular architecture. We addressed the organization’s big bang risk aversion by suggesting the Strangler Fig pattern to incrementally replace individual domains. By leveraging both techniques together we were able to give the organization the ability to reuse production-ready domains from their modernized mobile apps inside their legacy app experience. The idea was to deliver value into the hands of customers much sooner with less duplication than in a full rewrite. Our focus was not on delivering the most beautiful or cohesive full app experience (-not quite yet anyway). It was about obtaining confidence both in the stability of the iterative replacement pattern and also in how well the new product was being received. These pieces of information allowed the organization to make more informed product decisions early on in the modernization process. This ensured the finished product had been extensively used and molded by the actual end users. Strangler Fig and Micro-apps So how far did we get with the proof of concept and more importantly how did we actually do this? Taking the learnings from Modular Micro-app architecture (described above), we theorized the design to be as follows: The initial state of the application involved the identification of domains and their navigation routes (Decide how to break the problem into smaller parts). We focused our efforts on finding navigation entry points to domains, we called them our ‘points of interception’. Those familiar with mobile application development will know that navigation is generally a well encapsulated concern, meaning that we could be confident that we could always direct our users to the experience of our choosing. Once we identified our ‘points of interception’, we selected a domain for incremental replacement/retirement. In the example above we focus on the Grocery domain within the existing application. The ‘new‘ Grocery domain, was a micro-app that was already being used within the sub-brand apps. The key to implementation of the Strangler Fig pattern involved embedding an entire React Native application inside the existing legacy application. The team took the opportunity to follow the good modularity practices that the framework encourages and built Grocery as an encapsulated component. This meant that as we added more domains to our Strangler Fig Embedded Application, we could control their enablement on an individual level. As per the diagram, in the legacy app, Grocery functionality was underpinned by a monolithic backend. When we imported the New Grocery Micro-app, it was configured to use that same monolithic backend. As mentioned previously, each micro-app came with its own Backend for Frontend (BFF). In this instance, the BFF was used as an anti-corruption layer; creating an isolating layer to maintain the same domain model as the frontend. The BFF talked to the existing monolith through the same interfaces the legacy mobile application did. Translation between both monolith and micro-app happened in both directions as necessary. This allowed the new module’s frontend not to be constrained by the legacy API as it developed. We continued the inside out replacement of the old application by repeating the process again on the next prioritized domain. Although out of scope for this proof of concept, the intention was that the process shown be repeated until the native application is eventually just a shell containing the new React Native application. This then would allow the removal of the old native application entirely, leaving the new one in its place. The new application is already tested with the existing customer base, the business has confidence in its resilience under load, developers find it easier to develop features and most importantly, unacceptable risks associated with a typical big bang release were negated. Diving Deeper… So far we’ve presented a very broad set of diagrams to illustrate our Mobile Strangler Fig concept. However, there are still many outstanding implementation-focused questions in order to take theory into practice. Implanting the Strangler Fig A good start might be, how did we abstract the complexity of building both native and non-native codebases? Starting with the repository structure, we turned our original native application structure inside out. By inverting the control of the native application to a React Native (RN) application we avoided significant duplication associated with nesting our RN directory twice inside each mobile operating system’s folder. In fact, the react-native init default template gave a structure to embed our iOS and Android subfolders. From a developer perspective, the code was largely unchanged. The legacy application’s two operating-system-separated teams were able to target their original directories, only this time it was within a single repository. The diagram below is a generalized representation (that is, applicable to both iOS and Android) of the current pipeline from the Client as we understood: Bi-Directional Communication using the Native Bridge We’ve already touched on navigation with our previously mentioned ‘points of interception’. It is worth looking deeper into how we facilitated communication and the transfer of control between native and React Native as it would be easy to oversimplify this area. The React Native ‘Bridge’ enables communication between both worlds. Its purpose is to serve as the message queue for instructions like rendering views, calling native functions, event handlers, passing values etc. Examples of properties passed across the bridge would be isCartOpen or sessionDuration. While an example of a bridge function call might be js invocations of the device’s native geolocation module. The diagram above also references the concept of a ‘React Native Micro App’. We introduced this concept earlier in the article when we described our app in terms of journeys. To recap though, a micro-app is a self-contained encapsulation of UI and functionality related to a single domain. A React Native app may be made up of many micro-apps similar to the micro frontend pattern. In addition to those advantages we have already discussed, it also allows us to have a greater degree of control over how our Strangler Fig application grows and is interacted with. For example, in a situation where we have more confidence in one of our new journeys than another we are afforded the option to divert a larger proportion of traffic to one micro-app without impacting another. Bringing both concepts together, we utilized the bridge to seamlessly move our users back and forth across experiences. The ability to pass information allowed us to preserve any immediate state or action from the UI that needed to persevere across experiences. This was particularly useful in our case as it helped us to decouple domains at appropriate fracture points without worrying whether we would lose any local state when we crossed the bridge. Handling Sensitive Data So far we’ve discussed moving between legacy and new codebases as atomic entities. We’ve touched on how local state can be shared across the bridge, but what about more sensitive data? Having recently replaced their login and registration (auth) process in their other customer-facing React Native apps with a modular, configurable, brand agnostic one, the client was keen for us to reuse that experience. We set ourselves the task of integrating this experience as an initial demonstration of the Strangler Fig pattern in action. We leveraged the techniques already discussed to implant the Strangler Fig: i.e. the new authentication journey on the React Native side. When a customer successfully logged in or registered, we needed to ensure that if they moved away from the new experience (back into the legacy journey), their authentication status was preserved no matter where they were. For this, we utilized the native module code calling side of the bridge. The diagram above explains how we achieved this by using a React Native library that served as a wrapper to save authentication data to the Android EncryptedSharedPreferences or iOS Keychain after a successful login. Due to the flexible structure of the data inside the keystore, it allowed us to seamlessly share the (re)authentication process irrespective of whether the user was in the native or non-native experience. It also gave us a pattern for the secure sharing of any sensitive data between experiences. Regression Testing at Domain Boundaries An important part of a cutover strategy is the ability to know from any vantage point (in our case, different teams working within the same app) whether a change made affected the overall functionality of the system. The embedded app pattern described above presents a unique challenge in this regard around scalable testability of a multi-journey experience. Moreover one that is managed by multiple teams with numerous branching paths. UserNative App(maintained byNative Team)React Native (RN) BridgeRN AuthMicro-app(maintained by RN Team)RN Grocery ShoppingMicro-app(maintained by RN Team) Opens App Native app requests theinitialization ofRN Auth micro-app RN Auth micro-appinitializeUser is presented theRN Auth micro-appUser logs in usingRN Auth micro-app User's credentials is sentto the micro-app for processing Request to initializeRN Grocery Shoppingmicro-app Initialize request RN Grocery Shoppingmicro-app initialized User is presented theRN GroceryShoppingmicro-appMicro-app processescredentials \u0026 resultsto successful authentication Initializes RN Grocery shopping micro-appbecause of a feature flag The interaction diagram above shows an example journey flow within the embedded app. One thing to notice is the amount of branching complexity across a journey that is carrying out just two concurrent experiments. We speak more on accidental complexity later in this section. The test pyramid is a well known heuristic that recommends a relationship between the cost of a test (maintenance and writing) and its quantity in the system. Our client had kept to the test pyramid and we found unit, subcutaneous and journey-centric UI-driving tests when we examined their code. The solution therefore was to continue to follow the pattern: Expanding the number of tests across all layers and also extending the suite of journey tests to incorporate the jumping in and out of our embedded Strangler Fig app. But there was a potential problem, ownership. We realized that it would be unreasonable to tie the success of another team’s build to code they did not write or were in control of. We therefore proposed the following test strategy across teams: Test TypeNativeReact Native UnitXX SubcutaneousXX Legacy JourneyX e2e Micro-app JourneyX Contract tests for interactions with ‘The Bridge’ (journeys with both legacy and micro-app components)XX On the last table row, by contract we simply mean: If I interact with the bridge interface a particular way, I expect a specific event to fire For Native to RN interactions, these contracts act as blueprints for micro-apps and enable unit testing with mocks. Mocks simulate the behavior of the micro-app, ensuring it utilizes the required context correctly. The other way around (RN to Native) was similar. We identified the Native functionality we wished to call through the Bridge. RN then provided us with an object called NativeModules which, when mocked, allowed us to assert against the resulting context. Defining these boundaries of responsibility meant that we could limit the ‘regression-related’ cognitive load on teams through ‘hand-off’ points without compromising on overall app test coverage. This strategy was largely well received by both the native and non-native teams. Where we did run into friction was the complexity behind the implementation of the contract tests across the bridge. The team running the legacy application simply did not have the bandwidth to understand and write a new category of tests. As a compromise, for the duration of the PoC, all contract tests were written by the React Native team. From this we learned that any interstitial state required thought to be paid to the developer experience. In our case, simply layering complexity to achieve our goals was only part of the problem to be solved. Creating the Experiment Bringing everything together to form an experiment was the last hurdle we had to overcome. We needed a means to be able to demonstrate measurable success from two different experiences and also have an ability to quickly backout and revert a change if things were going wrong. The organization had an existing integration with an experimentation tool, so out of ease, we chose it as our tool for metric capture and experiment measurement. For experiment user selection, we decided device level user selection (IMEI number) would be more representative. This was due to the potential for multiple device usage across a single account skewing the results. We also utilized the feature flagging component of the experimentation tool to allow us to ‘turn off’ the experiment (revert to native app only) without the need for a release; greatly reducing the time taken to recover should any outage occur. We're releasing this article in installments. The next and final installment will describe the results of this experiment: how it altered time to value and cycle time. To find out when we publish the next installment subscribe to this site's RSS feed, or Martin's feeds on Mastodon, LinkedIn, or X (Twitter).",
  "image": "https://martinfowler.com/articles/strangler-fig-mobile-apps/card.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\n\n\u003cp\u003eIn this article we aim to show why taking an incremental approach to\n    legacy mobile application modernization can be preferable to the classical\n    \u0026#39;rewrite from scratch\u0026#39; methodology. Thoughtworks has the benefit of working with\n    large enterprise clients that are dependent on their in-house mobile\n    applications for their core business. We see many of them asking their\n    applications to do more and evolve faster, while at the same time, we see an\n    increasing rejection of reputationally damaging high risk releases.\u003c/p\u003e\n\n\u003cp\u003eAs a solution, this article proposes alternative methods of legacy\n    modernization that are based in Domain Driven Design and hinge on the\n    application of the Strangler Fig pattern. While these concepts are far from\n    new, we believe that their usage in mobile applications are novel. We feel\n    that despite incurring a larger temporary overhead from their usage, this is\n    an acceptable tradeoff. We assert how the methodology is used to combat the\n    aforementioned attitudinal shifts in legacy mobile application development\n    while gaining a platform to lower risk and drive incremental value\n    delivery.\u003c/p\u003e\n\n\u003cp\u003eWe discuss how this works in theory, diving into both the architecture\n    and code. We also recount how this worked in practice when it was trialled on\n    a large, legacy mobile application at one of Thoughtworks’ enterprise\n    clients. We highlight how the pattern enabled our client to rapidly build,\n    test and productionize a modernized subset of domain functionalities inside\n    an existing legacy application. \u003c/p\u003e\n\n\u003cp\u003eWe move on to evaluate the effectiveness of the trial by highlighting the business\n    facing benefits such as a signficantly faster time to value and a 50% reduced median cycle\n    time. We also touch on other expected benefits that should be used to\n    measure the success of this methodology.\u003c/p\u003e\n\n\u003csection id=\"TheProblemWithMobileLegacyModernization\"\u003e\n\u003ch2\u003eThe Problem with Mobile Legacy Modernization\u003c/h2\u003e\n\n\u003cp\u003eAs applications age and grow, they tend to deteriorate both in quality\n      and performance. Features take longer to get to market while outages\n      and rolled back releases become more severe and frequent. There is a\n      nuanced complexity to be understood about the reasons why this\n      occurs both at the code and organizational level.\n      To summarize though, at some point, an\n      organization will grow tired of the poor outcomes from their\n      software and start the process of legacy replacement. The decision\n      to replace may be made based on multiple factors, including (but not limited to)\n      cost/benefit analysis, risk analysis, or opportunity cost. Eventually a legacy modernization strategy will be chosen.\n      This will be dependent on the organization’s attitude to risk. For\n      example, a complex, high availability system may demand a more\n      incremental or interstitial approach to legacy\n      replacement/displacement than a simpler, less business critical one.\u003c/p\u003e\n\n\n\n\u003cp\u003eIn the case of mobile application modernization, those decisions have\n      in recent memory been reasonably clear cut. A mobile application was\n      often designed to do an individual thing- Apple’s “There’s an app for\n      that” still rings out loud and clear in people’s minds 15 years after\n      the initial batch of advertisements. That message was one that was taken\n      to heart by organizations and startups alike: \u003ci\u003eIf you need to do\n      something, write an app to do it. If you need to do something else, write\n      another app to do that.\u003c/i\u003e This example struck me when I was\n      pruning the apps on my phone a couple of years ago. At the time I noticed I\n      had several apps from the manufacturer of my car; an older one and a newer\n      one. I also had two apps from my bank; one showed my checking account,\n      another that analyzed and illustrated my spending habits. I had three apps\n      from Samsung for various IoT devices, and at least two from Philips that\n      controlled my toothbrush and light bulbs. The point I’m laboring here is\n      that a mobile application was never allowed to get so complicated,\n      that it couldn’t be torn down, split out or started from scratch again.\n      \u003c/p\u003e\n\n\u003cp\u003e But what happens when this isn’t the case? Surely not all apps are\n      created equal? Many believe that the mobile experience of the future\n      will be centered around so-called \u003ca href=\"https://www.theverge.com/23940924/elon-musk-x-twitter-all-hands-linda-yaccarino-super-app\"\u003e\n      “super-apps”\u003c/a\u003e; apps where you can pay, socialize, shop, call,\n      message, and game, all under one application. To some degree this has\n      already happened in China with “do-everything” applications like\n      ‘WeChat’ and ‘AliPay’- we see the mobile device and its operating\n      system as more of a vehicle to allow the running of these gigantic\n      pieces of software. Comments from industry indicate a realization\n      that the \u003ca href=\"https://hbr.org/2023/04/are-super-apps-coming-to-the-u-s-market\"\u003eWest\n      is not quite as far along as China in this regard\u003c/a\u003e. But while not\n      at the super-app, there is no doubt that complexity of the mobile\n      app experience as a whole has increased significantly in recent\n      years. Take the example of YouTube, when first installed, back in\n      the early 2010’s, the application could play videos and not much\n      else. Opening the application today one is presented with “Videos”\n      and “Shorts”, a news feed, controllable categories, subscriptions,\n      not to mention a content editing and publishing studio. Similarly\n      with the Uber app, the user is asked if they want to order food.\n      Google Maps can show a 3D view of a street and Amazon now recommends\n      scrollable product-recommendation mood boards. These extra features\n      have certainly enriched a user’s experience but they also make the\n      traditional build, use, rebuild technique much more difficult. \u003c/p\u003e\n\n\u003cp\u003eThis difficulty can be explained by considering some of the existing\n      common problems of mobile application development:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e Massive View Controllers/Activities/Fragments\u003c/li\u003e\n\n\u003cli\u003eDirect manipulation of UI elements \u003c/li\u003e\n\n\u003cli\u003e Platform specific code \u003c/li\u003e\n\n\u003cli\u003e Poor Separation of Concerns \u003c/li\u003e\n\n\u003cli\u003eLimited Testability\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWith discipline, these problems can be managed early on. However, with\n      a large application that has grown chaotically inline with the business it\n      supports, incremental change will be difficult regardless. The solution then, as\n      before, is to build new and release all at once. But what if you only want\n      to add a new feature, or modernize an existing domain? What if you want to\n      test your new feature with a small group of users ahead of time while\n      serving everyone else the old experience? What if you’re happy with your\n      app store reviews and don’t want to risk impacting them? \u003c/p\u003e\n\n\u003cp\u003eTaking an incremental approach to app replacement then is the key to\n      avoiding the pitfalls associated with ‘big bang releases’. The \u003ca href=\"https://martinfowler.com/bliki/StranglerFigApplication.html\"\u003eStrangler\n      Fig pattern\u003c/a\u003e is often used to rebuild a legacy application in\n      place: a new system is gradually created around the edges of an old\n      one through frequent releases. This pattern is well known, but\n      not widely used in a mobile context. We believe the reason for this is that there are several prerequisites that need to be in\n      place before diving headfirst into the pattern. \u003c/p\u003e\n\n\u003cp\u003e In their article on \u003ca href=\"https://martinfowler.com/articles/patterns-legacy-displacement/\"\u003ePatterns\n      of Legacy Displacement\u003c/a\u003e, the authors describe four broad\n      categories (prerequisites) used to help break a legacy problem into\n      smaller, deliverable parts: \u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eUnderstand the outcomes you want to achieve\u003c/li\u003e\n\n\u003cli\u003eDecide how to break the problem up into smaller parts\u003c/li\u003e\n\n\u003cli\u003eSuccessfully deliver the parts\u003c/li\u003e\n\n\u003cli\u003eChange the organization to allow this to happen on an ongoing\n        basis\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eOnly in the third point, can we envisage the invocation of the Strangler Fig\n      pattern. Doing so without an understanding of why, what or how it might\n      continue in the future is a recipe for failure.\u003c/p\u003e\n\n\u003cp\u003eGoing forward, the article charts how Thoughtworks was able to help one\n      of its enterprise clients expand its existing mobile legacy modernization\n      efforts into a successful experiment that demonstrated the value behind\n      the use of the Strangler Fig pattern in a mobile context.\u003c/p\u003e\n\u003c/section\u003e\n\n\u003csection id=\"SatisfyingThePrerequisites\"\u003e\n\u003ch2\u003eSatisfying the Prerequisites \u003c/h2\u003e\n\n\n\n\u003cp\u003eAt this point, it seems appropriate to introduce the client that\n      inspired the writing of this article – a globally distributed business\n      with an established retail organization that had embraced mobile\n      applications for many years. Our client had realized the benefits an\n      app brought to provide a self-service experience for their\n      products. They had quickly expanded and developed their app domains to allow millions\n      of customers to take full advantage of all the products they sold.\u003c/p\u003e\n\n\u003cp\u003eThe organization had already spent a significant amount of time and\n      effort modernizing its mobile applications in its smaller\n      sub-brands. Responding to a lack of reuse/significant duplication of\n      efforts, \u003ca href=\"https://itrevolution.com/articles/cognitive-load/\"\u003ehigh\n      cognitive load\u003c/a\u003e in app teams and slow feature delivery, the\n      organization chose a mobile technology stack that leveraged a\n      Modular Micro-app architecture. This strategy had been largely\n      successful for them, enabling proliferation of features common to\n      the organization (e.g. ‘login/registration/auth’ or ‘grocery shopping’)\n      across different brands and territories, in a fraction of the time it\n      would have taken to write them all individually. \u003c/p\u003e\n\n\u003cdiv id=\"d1.svg\"\u003e\u003cp\u003e\u003cimg src=\"https://martinfowler.com/articles/strangler-fig-mobile-apps/d1.svg\" width=\"900\"/\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003e The diagram above is a simplified representation of the modular\n      architecture the organization had successfully implemented. React\n      Native was used due to its ability to entirely encapsulate a\n      domain’s bounded context within an importable component. Each\n      component was underpinned by its own \u003ca href=\"https://samnewman.io/patterns/architectural/bff/\"\u003ebackend\n      for frontend (BFF) \u003c/a\u003e that came with the infrastructure as code to\n      instantiate and run it. The host apps, shown above as UK and US,\n      were simply containers that provided the app specific configuration\n      and theming to the individual micro-apps. This ‘full slice’ of\n      functionality has the advantages of both allowing re-use and\n      reducing complexity by abstracting application domains to micro-apps\n      managed by individual teams. We speak in depth about the results of\n      this architecture in the already referenced article on \u003ca href=\"https://martinfowler.com/articles/linking-modular-arch.html\"\u003e‘Linking\n      Modular Architecture’\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eAs touched upon earlier, the organization’s mobile estate was made up of\n      a number of smaller sub-brands that served similar products in other\n      territories. With the modular architecture pattern tried and tested, the\n      organization wanted to focus efforts on its \u0026#39;home-territory\u0026#39; mobile\n      application (serving its main brand). Their main mobile app was much\n      larger in terms of feature richness, revenue and user volumes to that of\n      the sub brands. The app had been gaining features and users over many\n      years of product development. This steady but significant growth had\n      brought success in terms of how well-regarded their software was on both\n      Google and Apple stores. However, it also started to show the\n      characteristic signs of deterioration. Change frequency in the application\n      had moved from days to months, resulting in a large product backlog and\n      frustrated stakeholders who wanted an application that could evolve as\n      fast as their products did. Their long release cycle was related to risk\n      aversion: Any outage in the application was a serious loss of revenue to\n      the organization and also caused their customers distress due to the\n      essential nature of the products they sold. Changes were always tested\n      exhaustively before being put live.\u003c/p\u003e\n\n\u003cp\u003eThe organization first considered a rewrite of the entire application\n      and were shocked by the cost and duration of such a project. The potential\n      negative reception of a ‘big bang’ new release to their app store\n      customers also caused concerns in the levels of risk they could accept.\n      Suggestions of alpha and beta user groups were considered unacceptable\n      given the huge volumes of users the organization was serving. In this\n      instance, a modernization effort similar to that seen in their sub-brands\n      was believed to be of considerably higher cost and risk.\u003c/p\u003e\n\n\u003cp\u003e Thoughtworks suggested an initial proof of concept that built on the\n      successes of the reusability already seen with a modular\n      architecture. We addressed the organization’s big bang risk aversion\n      by suggesting the \u003ca href=\"https://martinfowler.com/bliki/StranglerFigApplication.html\"\u003eStrangler\n      Fig pattern\u003c/a\u003e to incrementally replace individual domains. By\n      leveraging both techniques together we were able to give the\n      organization the ability to reuse production-ready domains from\n      their modernized mobile apps inside their legacy app experience. The\n      idea was to deliver value into the hands of customers much sooner\n      with less duplication than in a full rewrite. Our focus was not on\n      delivering the most beautiful or cohesive full app experience (-not\n      quite yet anyway). It was about obtaining confidence both in the\n      stability of the iterative replacement pattern and also in how well\n      the new product was being received. These pieces of information\n      allowed the organization to make more informed product decisions\n      early on in the modernization process. This ensured the finished product\n      had been extensively used and molded by the actual end users. \u003c/p\u003e\n\u003c/section\u003e\n\n\u003csection id=\"StranglerFigAndMicro-apps\"\u003e\n\u003ch2\u003eStrangler Fig and Micro-apps\u003c/h2\u003e\n\n\u003cp\u003eSo how far did we get with the proof of concept and more importantly\n      how did we actually do this? Taking the learnings from Modular Micro-app\n      architecture (described above), we theorized the design to be as follows:\u003c/p\u003e\n\n\u003cdiv id=\"d2.svg\"\u003e\u003cp\u003e\u003cimg src=\"https://martinfowler.com/articles/strangler-fig-mobile-apps/d2.svg\" width=\"900\"/\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\n\n\n\n\u003cp\u003eThe initial state of the application involved the identification of\n      domains and their navigation routes \u003ci\u003e(Decide how to break the problem into\n      smaller parts)\u003c/i\u003e. We focused our efforts on finding navigation entry points\n      to domains, we called them our ‘points of interception’. Those familiar\n      with mobile application development will know that navigation is generally\n      a well encapsulated concern, meaning that we could be confident that we\n      could always direct our users to the experience of our choosing.\u003c/p\u003e\n\n\u003cdiv id=\"d3.svg\"\u003e\u003cp\u003e\u003cimg src=\"https://martinfowler.com/articles/strangler-fig-mobile-apps/d3.svg\" width=\"900\"/\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eOnce we identified our ‘points of interception’, we selected a domain\n      for incremental replacement/retirement. In the example above we focus on\n      the Grocery domain within the existing application. The ‘new‘ Grocery domain,\n      was a micro-app that was already being used within the sub-brand apps. The\n      key to implementation of the Strangler Fig pattern involved embedding an\n      entire React Native application inside the existing legacy application.\n      The team took the opportunity to follow the good modularity practices that\n      the framework encourages and built Grocery as an encapsulated component. This\n      meant that as we added more domains to our Strangler Fig Embedded\n      Application, we could control their enablement on an individual level.\u003c/p\u003e\n\n\u003cp\u003eAs per the diagram, in the legacy app, Grocery functionality was\n      underpinned by a monolithic backend. When we imported the New Grocery\n      Micro-app, it was configured to use that same monolithic backend. As\n      mentioned previously, each micro-app came with its own Backend for\n      Frontend (BFF). In this instance, the BFF was used as an anti-corruption\n      layer; creating an isolating layer to maintain the same domain model as\n      the frontend. The BFF talked to the existing monolith through the same\n      interfaces the legacy mobile application did. Translation between both\n      monolith and micro-app happened in both directions as necessary. This\n      allowed the new module’s frontend not to be constrained by the legacy API\n      as it developed.\u003c/p\u003e\n\n\u003cp\u003eWe continued the inside out replacement of the old application by\n      repeating the process again on the next prioritized domain. Although out\n      of scope for this proof of concept, the intention was that the process\n      shown be repeated until the native application is eventually just a shell\n      containing the new React Native application. This then would allow the removal of the\n      old native application entirely, leaving the new one in its place. The new\n      application is already tested with the existing customer base, the\n      business has confidence in its resilience under load, developers find it\n      easier to develop features and most importantly, unacceptable risks\n      associated with a typical big bang release were negated.\u003c/p\u003e\n\u003c/section\u003e\n\n\u003csection id=\"DivingDeeperx2026\"\u003e\n\u003ch2\u003eDiving Deeper…\u003c/h2\u003e\n\n\u003cp\u003eSo far we’ve presented a very broad set of diagrams to\n      illustrate our Mobile Strangler Fig concept. However, there are\n      still many\n      outstanding implementation-focused questions in order to take theory\n      into\n      practice. \u003c/p\u003e\n\n\u003csection id=\"implant\"\u003e\n\u003ch3\u003eImplanting the Strangler Fig\u003c/h3\u003e\n\n\u003cp\u003eA good start might be, how did we abstract the complexity of\n        building both native and non-native codebases?\n        \u003c/p\u003e\n\n\u003cp\u003eStarting with the repository structure, we turned our original native\n        application structure inside out. By inverting the control\n        of the native application to a React Native (RN) application\n        we avoided significant duplication associated with nesting\n        our RN directory twice inside each mobile operating system’s\n        folder. In fact, the \u003ccode\u003ereact-native init\u003c/code\u003e default\n        template gave a structure to embed our iOS and Android\n        subfolders. \u003c/p\u003e\n\n\u003cdiv id=\"d4.svg\"\u003e\u003cp\u003e\u003cimg src=\"https://martinfowler.com/articles/strangler-fig-mobile-apps/d4.svg\"/\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eFrom a developer perspective, the code was largely unchanged. The\n        legacy application’s two operating-system-separated teams were able to\n        target their original directories, only this time it was within a single\n        repository. The diagram below is a generalized representation (that is,\n        applicable to both iOS and Android) of the current pipeline from the\n        Client as we understood:\u003c/p\u003e\n\n\u003cdiv id=\"d5.svg\"\u003e\u003cp\u003e\u003cimg src=\"https://martinfowler.com/articles/strangler-fig-mobile-apps/d5.svg\"/\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\n\u003c/section\u003e\n\n\u003csection id=\"Bi-directionalCommunicationUsingTheNativeBridge\"\u003e\n\u003ch3\u003eBi-Directional Communication using the Native Bridge\u003c/h3\u003e\n\n\u003cp\u003eWe’ve already touched on navigation with our previously mentioned\n        ‘points of interception’. It is worth looking deeper into how we\n        facilitated communication and the transfer of control between native and\n        React Native as it would be easy to oversimplify this area.\u003c/p\u003e\n\n\u003cp\u003e The \u003ca href=\"https://reactnative.dev/docs/communication-ios#other-ways-of-cross-language-interaction-events-and-native-modules\"\u003eReact\n        Native ‘Bridge’\u003c/a\u003e enables communication between both\n        worlds. Its purpose is to serve as the message queue for\n        instructions like rendering views, calling native functions,\n        event handlers, passing values etc. Examples of\n        properties passed across the bridge would be \u003ci\u003eisCartOpen\u003c/i\u003e\n        or \u003ci\u003esessionDuration\u003c/i\u003e. While an example of a bridge\n        function call might be js invocations of the device’s native \u003ca href=\"https://github.com/michalchudziak/react-native-geolocation\"\u003egeolocation\n        module\u003c/a\u003e. \u003c/p\u003e\n\n\u003cdiv id=\"d6.svg\"\u003e\u003cp\u003e\u003cimg src=\"https://martinfowler.com/articles/strangler-fig-mobile-apps/d6.svg\" width=\"900\"/\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003e The diagram above also references the concept of a ‘React Native\n        Micro App’. We introduced this concept earlier in the article when we\n        described our app in terms of journeys. To recap though, a micro-app is a self-contained\n        encapsulation of UI and functionality related to a single\n        domain. A React Native app may be made up of many micro-apps\n        similar to the \u003ca href=\"https://martinfowler.com/articles/micro-frontends.html\"\u003emicro\n        frontend pattern\u003c/a\u003e. In addition to those advantages we have already discussed, it also allows us to have a greater\n        degree of control over how our Strangler Fig application\n        grows and is interacted with. For example, in a situation\n        where we have more confidence in one of our new journeys\n        than another we are afforded the option to divert a larger\n        proportion of traffic to one micro-app without impacting\n        another. \u003c/p\u003e\n\n\u003cp\u003eBringing both concepts together, we utilized the bridge to\n        seamlessly move our users back and forth across experiences.\n        The ability to pass information allowed us to preserve any\n        immediate state or action from the UI that needed to\n        persevere across experiences. This was particularly useful\n        in our case as it helped us to decouple domains at\n        appropriate fracture points without worrying whether we\n        would lose any local state when we crossed the bridge. \u003c/p\u003e\n\u003c/section\u003e\n\n\u003csection id=\"HandlingSensitiveData\"\u003e\n\u003ch3\u003eHandling Sensitive Data\u003c/h3\u003e\n\n\u003cp\u003eSo far we’ve discussed moving between legacy and new codebases as\n        atomic entities. We’ve touched on how local state can be\n        shared across the bridge, but what about more sensitive\n        data? Having recently replaced their login and registration (auth)\n        process in their other customer-facing React Native apps\n        with a modular, configurable, brand agnostic one, the client\n        was keen for us to reuse that experience. We set ourselves\n        the task of integrating this experience as an\n        initial demonstration of the Strangler Fig pattern in\n        action.\u003c/p\u003e\n\n\u003cp\u003eWe leveraged the techniques \u003ca href=\"#implant\"\u003ealready discussed\u003c/a\u003e to implant the\n        Strangler Fig: i.e. the new authentication journey on the\n        React Native side. When a customer successfully logged in or\n        registered, we needed to ensure that if they moved away from\n        the new experience (back into the legacy journey), their\n        authentication status was preserved no matter where they\n        were. \u003c/p\u003e\n\n\u003cdiv id=\"d7.svg\"\u003e\u003cp\u003e\u003cimg src=\"https://martinfowler.com/articles/strangler-fig-mobile-apps/d7.svg\" width=\"900\"/\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eFor this, we utilized the native module code calling side of the\n        bridge. The diagram above explains how we achieved this by\n        using a React Native library that served as a wrapper to\n        save authentication data to the Android\n        EncryptedSharedPreferences or iOS Keychain after a\n        successful login. Due to the flexible structure of the data\n        inside the keystore, it allowed us to seamlessly share the\n        (re)authentication process irrespective of whether\n        the user was in the native or non-native experience. It also\n        gave us a pattern for the secure sharing of any sensitive\n        data between experiences.\u003c/p\u003e\n\u003c/section\u003e\n\n\u003csection id=\"RegressionTestingAtDomainBoundaries\"\u003e\n\u003ch3\u003eRegression Testing at Domain Boundaries\u003c/h3\u003e\n\n\u003cp\u003eAn important part of a cutover strategy is the ability to know\n        from any vantage point (in our case, different teams working within the same app) whether a change made affected the\n        overall functionality of the system. The embedded app\n        pattern described above presents a unique challenge in this\n        regard around scalable testability of a multi-journey\n        experience. Moreover one that is managed by multiple teams\n        with numerous branching paths.\u003c/p\u003e\n\n\u003cdiv id=\"d8.svg\"\u003e\n\u003cp\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" d2version=\"v0.6.6-HEAD\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"100 100 2452 2979\"\u003e\u003csvg id=\"d2-svg\" width=\"2652\" height=\"3179\" viewBox=\"-100 -100 2652 3179\"\u003e\u003crect x=\"-100.000000\" y=\"-100.000000\" width=\"2652.000000\" height=\"3179.000000\" rx=\"0.000000\" stroke-width=\"0\"\u003e\u003c/rect\u003e\u003cdefs\u003e\u003cpattern id=\"streaks-bright\" x=\"0\" y=\"0\" width=\"100\" height=\"100\" patternUnits=\"userSpaceOnUse\"\u003e\n    \u003cpath fill=\"rgba(0, 0, 0, 0.1)\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M58.1193 0H58.1703L55.4939 2.67644L58.1193 0ZM45.7725 0H45.811L41.2851 4.61498L42.7191 3.29325L37.0824 8.92997L35.0554 10.9569L32.0719 13.9404L29.6229 16.5017L27.1738 19.0631L25.8089 20.2034L23.2195 22.6244L18.181 27.6068L23.8178 21.97L27.0615 18.9508L33.8666 11.9773L33.1562 12.5194L37.0262 8.87383L40.784 5.11602L38.0299 7.64561L45.7725 0ZM23.1079 0H23.108L21.5814 1.66688L20.3126 2.79534L23.1079 0ZM7.53869 0H7.54254L7.50005 0.035944L7.53869 0ZM2.49995 0H2.52362L0.900245 1.59971L2.49995 0ZM0 3.64398V3.60744L0.278386 3.36559L0 3.64398ZM0 18.6564V18.5398L0.67985 17.8416L3.4459 15.0755L1.15701 17.1333L2.78713 15.6022L6.01437 12.507L8.5168 9.87253L5.15803 13.2313L11.0357 7.25453L10.4926 7.89678L13.6868 4.7686L8.54982 9.90555L7.05177 11.5687L4.68087 13.9396L0.729379 17.8911L3.01827 15.8333L0 18.6564ZM0 69.2431V69.178L1.64651 67.4763L1.46347 67.7796L5.84063 63.4025L4.42167 64.9016L0 69.4007V69.3408L0.247596 68.9955L0 69.2431ZM2.51594 100H2.49238L5.19989 97.2925L7.70071 95.0162L12.8713 89.6772L12.3094 90.0707L15.288 87.3167L18.1542 84.4504L16.0269 86.3532L22.8752 79.6172L18.5364 84.0683L19.6435 83.0734L15.3441 87.3728L13.798 88.9189L11.5224 91.1945L9.66768 93.1615L7.81297 95.1285L6.74529 95.9716L4.75024 97.7983L2.51594 100ZM7.54255 100H7.5387L9.81396 97.884L8.46606 99.2189L7.54255 100ZM45.8189 100H45.7807L46.9912 98.8047L45.8189 100ZM58.1784 100H58.1272L62.2952 95.7511L66.1408 91.9055L63.0037 94.8115L65.2507 92.6635L69.7117 88.3346L73.2165 84.6977L68.5469 89.3673L76.7379 81.0773L75.9634 81.9509L80.3913 77.5889L73.2496 84.7307L71.1346 87.0107L67.8384 90.3069L62.3447 95.8006L65.4818 92.8947L61.2625 96.9159L58.1784 100ZM75.4277 100H75.229L82.1834 92.9039L81.3403 93.5787L86.0063 89.1371L90.5601 84.5833L87.2464 87.6725L98.0937 76.9375L91.1673 83.9761L92.8932 82.3625L86.0625 89.1933L83.6062 91.6496L79.9907 95.265L77.011 98.357L75.4277 100ZM100 18.5398V18.6563L99.9556 18.6979L95.8065 22.847L100 18.5398ZM100 3.60743V3.64398L99.6791 3.9649L99.2094 4.29428L100 3.60743ZM75.4201 0L74.0312 1.4412L72.401 2.84687L69.281 5.79854L63.1812 11.8422L70.0119 5.01151L73.919 1.32893L75.2214 0H75.4201ZM100 69.1858V69.2509L98.059 71.1919L100 69.1858ZM100 69.3486V69.4085L99.8414 69.5698L100 69.3486ZM41.9398 28.8254L53.6223 16.993L52.5215 18.2437L54.7428 16.0575L54.6875 16.0759L54.8008 16.0004L58.842 12.0231L54.9925 15.8726L55.1085 15.7953L54.898 16.0058L54.84 16.0251L48.6523 22.2128L45.6419 25.473L40.9389 30.1759L33.1007 38.0142L37.5866 33.878L31.558 39.6068L23.3278 47.837L33.0257 37.9393L38.5125 32.4525L34.0266 36.5887L37.2369 33.5283L43.6074 27.3576L48.6023 22.1628L41.9398 28.8254ZM41.0977 17.0531L39.718 18.2925L40.312 17.8388L41.0977 17.0531ZM36.875 20.3106L48.1601 7.88137L42.3438 13.7478L36.875 20.3106ZM35.7125 25.8109L34.3328 27.0503L34.9268 26.5966L35.7125 25.8109ZM17.7022 39.7534L19.0819 38.514L18.8092 38.7867L36.7575 21.8045L23.1569 35.3051L13.5771 43.7372L18.1448 39.4154L17.7022 39.7534ZM3.48102 28.9281L1.53562 30.8735L1.22228 31.0465L0.0765686 32.3326L1.60579 30.9437L2.57849 29.971L3.48102 28.9281ZM0.953463 26.2027L19.5702 7.58594L9.31575 18.6078L0.953463 26.2027ZM23.7175 12.11L17.9339 18.0875L21.4622 14.5592L20.8074 15.4725L28.1915 7.95918L30.4791 5.54232L23.4224 12.599L23.7175 12.11ZM43.4641 43.1538L40.7872 46.1552L42.4907 44.4517L42.3285 45.0465L45.8166 41.3421L46.8441 40.0983L43.4371 43.5053L43.4641 43.1538ZM1.32715 48.3271L8.0918 41.5625L4.3657 45.5674L1.32715 48.3271ZM11.1479 31.2556L11.5689 30.975L11.3584 31.1855L11.1479 31.2556ZM11.9898 27.4667L12.2003 27.2562L11.7793 27.5369L11.9898 27.4667ZM11.3585 34.5531L11.148 34.7636L10.9375 34.8338L11.3585 34.5531ZM72.929 28.5457L82.2965 19.0792L81.4043 20.0705L86.4597 15.0811L78.2983 23.2425L75.8697 25.8362L72.1029 29.603L65.8249 35.881L69.3934 32.5437L64.5858 37.1531L57.994 43.745L65.7754 35.8314L70.17 31.4369L66.6015 34.7742L69.1623 32.3125L74.2507 27.3562L78.2653 23.2095L72.929 28.5457ZM82.6674 1.83549L84.3245 0.31872L83.3724 1.27088L82.6674 1.83549ZM64.5872 16.1312L62.9301 17.648L63.6351 17.0834L64.5872 16.1312ZM70.868 9.85044L80.0048 1.1214L74.6221 6.47142L70.868 9.85044ZM90.2409 41.9448L70.7578 61.4279L79.5093 53.4795L90.2409 41.9448ZM91.8088 42.5434L95.3963 38.8357L95.2132 39.139L99.5904 34.7618L98.1714 36.261L93.5912 40.9214L93.9973 40.3549L91.8088 42.5434ZM94.331 12.8233L89.9853 17.1691L89.2853 17.5555L86.7259 20.4284L90.142 17.3258L92.3149 15.1529L94.331 12.8233ZM44.7972 62.3259L76.9824 30.1406L59.2542 49.1955L44.7972 62.3259ZM77.1482 40.321L70.1709 47.5323L70 47.6463L70.0895 47.6164L68.1916 49.5779L70.185 47.5846L70.2105 47.5761L70.421 47.3656L70.37 47.3996L73.6557 44.1139L72.6416 45.5283L84.0768 33.893L87.6194 30.1502L76.6913 41.0783L77.1482 40.321ZM50.5355 34.3137L72.6617 12.1875L60.4955 25.3084L50.5355 34.3137ZM70.2104 44.0681L70.6314 43.7875L70.4209 43.998L70.2104 44.0681ZM71.263 40.0687L70.842 40.3494L71.0525 40.2792L71.263 40.0687ZM55.1084 12.4355L55.3189 12.225L54.8979 12.5056L55.1084 12.4355ZM48.8718 15.5785L60.2075 4.70496L49.4056 15.4006L48.8718 15.5785ZM23.7636 57.4491L29.9099 51.5854L26.1656 55.6123L27.2361 54.8244L23.435 58.6255L22.0681 59.9924L20.0562 62.0042L18.5082 63.8349L16.9601 65.6656L15.8328 66.2277L13.9315 67.7051L10.4821 71.0132L14.2832 67.2121L16.6775 65.383L21.1113 60.5253L20.477 60.7357L23.2937 58.4842L25.8277 55.9502L23.7636 57.4491ZM48.3825 74.1824L44.8832 77.8523L46.9145 75.8211L45.4748 77.4881L43.4493 79.2862L42.4082 80.1568L43.9215 79.0414L42.2487 80.7143L39.3752 83.8151L41.8844 81.3059L43.8473 79.6842L42.334 80.7995L44.7237 78.4098L46.1576 76.976L46.9713 75.8779L50.078 72.7713L48.1093 74.6262L48.3825 74.1824ZM29.2877 62.9906L29.0772 63.2011L28.8667 63.2713L29.2877 62.9906ZM29.7088 59.4823L29.9193 59.2719L29.4983 59.5525L29.7088 59.4823ZM29.0772 66.5687L28.8667 66.7792L28.6562 66.8494L29.0772 66.5687ZM22.9729 68.748L23.1834 68.5375L22.7624 68.8181L22.9729 68.748ZM3.8147e-05 91.7593L13.2499 79.1355L6.5001 86.2595L3.8147e-05 91.7593ZM16.0685 87.9974L17.1375 87.0687L16.5382 87.668L16.0685 87.9974ZM21.7869 79.3344L20.7179 80.263L21.1876 79.9337L21.7869 79.3344ZM12.3607 95.0755L13.4298 94.1469L12.8304 94.7462L12.3607 95.0755ZM42.7176 59.3801L43.2789 58.8187L43.0684 59.1696L42.7877 59.4502L42.2966 59.801L42.5772 59.3801H42.7176ZM26.3124 49.3152L24.3599 51.2676L23.996 51.3918L22.8956 52.732L24.4798 51.3875L25.456 50.4113L26.3124 49.3152ZM39.0689 63.3097L38.5777 63.6606L39.56 62.6782L39.0689 63.3097ZM20.3574 55.8032L19.3751 56.7856L19.8662 56.4347L20.3574 55.8032ZM39.9297 64.195L41.5504 62.3779L41.534 62.5907L43.5967 60.528L42.9746 61.2811L40.8628 63.5238L40.961 63.1637L39.9297 64.195ZM22.3921 55.457L21.3998 56.5696L22.0313 55.9381L21.9711 56.1587L23.2642 54.7854L23.6451 54.3243L22.3821 55.5873L22.3921 55.457ZM40.6473 92.4498L45.0485 88.0485L43.0066 90.4079L40.806 92.6085L37.3463 95.7507L39.9384 92.8412L40.6473 92.4498ZM18.5042 48.7973L11.5457 55.7558L10.4249 56.3746L6.32684 60.9746L11.7967 56.0067L15.2759 52.5275L18.5042 48.7973ZM32.7113 78.139L31.1131 79.7372L30.8432 79.8668L29.9145 80.9358L31.1833 79.8074L31.9823 79.0083L32.7113 78.139ZM21.7577 93.9525L31.2855 84.0344L30.8324 84.8777L42.4999 73.2102L38.7408 77.2295L26.5552 89.6753L27.5914 88.1187L21.7577 93.9525ZM98.5132 90.0591L89.9224 97.9224L93.5769 94.9953L98.5132 90.0591ZM97.8456 80.2105L99.5027 78.6937L98.5506 79.6459L97.8456 80.2105ZM88.5656 56.4599L78.9205 65.7009L82.1262 63.3036L78.1413 67.2885L73.7522 70.8692L74.7195 70.5082L67.717 78.117L63.992 81.0336L58.0146 87.011L63.4289 81.7988L66.3887 79.4454L68.1212 78.5213L70.5757 75.6625L73.0302 72.8038L76.194 69.64L78.3434 67.4906L84.3208 61.5132L82.6575 62.7723L88.5656 56.4599ZM85.1893 67.0375L83.7304 68.356L84.3561 67.8707L85.1893 67.0375ZM90.7969 58.2022L99.2725 50.5418L94.4317 55.3826L90.7969 58.2022ZM79.377 76.2172L77.9182 77.5357L78.5438 77.0504L79.377 76.2172ZM59.4922 91.7253L56.4011 94.1231L60.0049 90.8659L63.6087 87.6087L59.4922 91.7253ZM63.8833 75.4153L46 92.3896L49.6884 89.1193L53.3767 85.8491L63.8833 75.4153ZM71.6063 55.0765L69.6609 57.0219L69.3475 57.1949L68.2018 58.481L69.731 57.0921L70.7037 56.1194L71.6063 55.0765ZM55.1405 71.6857L61.4131 65.4131L57.958 69.1267L55.1405 71.6857ZM65.8396 69.4497L61.7138 73.7138L64.2308 71.1968L63.7637 71.8484L69.0313 66.4886L70.6632 64.7645L65.6292 69.7985L65.8396 69.4497ZM53.0034 65.4955L58.2258 59.8914L58.0558 60.4431L64.5517 53.9472L62.5136 56.2398L55.7841 63.2238L56.2513 62.2475L53.0034 65.4955ZM97.0997 71.2032L79.6514 88.6515L86.7697 80.814L97.0997 71.2032ZM35.1848 56.2513L31.93 59.9006L34.0012 57.8294L33.804 58.5527L38.0451 54.0485L39.2945 52.5361L35.1519 56.6787L35.1848 56.2513ZM66.8712 26.2471L78.1907 14.3099L77.7244 15.394L91.6784 1.4399L87.233 6.29715L72.7096 21.2323L73.8482 19.2701L66.8712 26.2471ZM28.0473 68.2068L20.4355 76.375L25.1695 71.641L24.4884 73.0639L34.297 62.8844L37.2675 59.5429L27.7995 69.0109L28.0473 68.2068ZM8.94067 39.5658L14.1631 33.9617L13.993 34.5134L20.4889 28.0175L18.4509 30.3101L11.7213 37.2941L12.1886 36.3178L8.94067 39.5658ZM99.7403 26L88 37.7404L93.2735 32.9508L99.7403 26ZM1.93388 8.08743L4.77765 5.04974L4.67856 5.34275L8.20743 1.81388L7.09578 3.05481L3.4355 6.84437L3.69832 6.32299L1.93388 8.08743ZM54.4485 44.211L48.5985 50.061L47.6563 50.5813L44.211 54.4485L48.8095 50.272L51.7345 47.347L54.4485 44.211Z\"\u003e\u003c/path\u003e\n\u003c/pattern\u003e\u003cpattern id=\"streaks-normal\" x=\"0\" y=\"0\" width=\"100\" height=\"100\" patternUnits=\"userSpaceOnUse\"\u003e\n    \u003cpath fill=\"rgba(0, 0, 0, 0.16)\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M58.1193 0H58.1703L55.4939 2.67644L58.1193 0ZM45.7725 0H45.811L41.2851 4.61498L42.7191 3.29325L37.0824 8.92997L35.0554 10.9569L32.0719 13.9404L29.6229 16.5017L27.1738 19.0631L25.8089 20.2034L23.2195 22.6244L18.181 27.6068L23.8178 21.97L27.0615 18.9508L33.8666 11.9773L33.1562 12.5194L37.0262 8.87383L40.784 5.11602L38.0299 7.64561L45.7725 0ZM23.1079 0H23.108L21.5814 1.66688L20.3126 2.79534L23.1079 0ZM7.53869 0H7.54254L7.50005 0.035944L7.53869 0ZM2.49995 0H2.52362L0.900245 1.59971L2.49995 0ZM0 3.64398V3.60744L0.278386 3.36559L0 3.64398ZM0 18.6564V18.5398L0.67985 17.8416L3.4459 15.0755L1.15701 17.1333L2.78713 15.6022L6.01437 12.507L8.5168 9.87253L5.15803 13.2313L11.0357 7.25453L10.4926 7.89678L13.6868 4.7686L8.54982 9.90555L7.05177 11.5687L4.68087 13.9396L0.729379 17.8911L3.01827 15.8333L0 18.6564ZM0 69.2431V69.178L1.64651 67.4763L1.46347 67.7796L5.84063 63.4025L4.42167 64.9016L0 69.4007V69.3408L0.247596 68.9955L0 69.2431ZM2.51594 100H2.49238L5.19989 97.2925L7.70071 95.0162L12.8713 89.6772L12.3094 90.0707L15.288 87.3167L18.1542 84.4504L16.0269 86.3532L22.8752 79.6172L18.5364 84.0683L19.6435 83.0734L15.3441 87.3728L13.798 88.9189L11.5224 91.1945L9.66768 93.1615L7.81297 95.1285L6.74529 95.9716L4.75024 97.7983L2.51594 100ZM7.54255 100H7.5387L9.81396 97.884L8.46606 99.2189L7.54255 100ZM45.8189 100H45.7807L46.9912 98.8047L45.8189 100ZM58.1784 100H58.1272L62.2952 95.7511L66.1408 91.9055L63.0037 94.8115L65.2507 92.6635L69.7117 88.3346L73.2165 84.6977L68.5469 89.3673L76.7379 81.0773L75.9634 81.9509L80.3913 77.5889L73.2496 84.7307L71.1346 87.0107L67.8384 90.3069L62.3447 95.8006L65.4818 92.8947L61.2625 96.9159L58.1784 100ZM75.4277 100H75.229L82.1834 92.9039L81.3403 93.5787L86.0063 89.1371L90.5601 84.5833L87.2464 87.6725L98.0937 76.9375L91.1673 83.9761L92.8932 82.3625L86.0625 89.1933L83.6062 91.6496L79.9907 95.265L77.011 98.357L75.4277 100ZM100 18.5398V18.6563L99.9556 18.6979L95.8065 22.847L100 18.5398ZM100 3.60743V3.64398L99.6791 3.9649L99.2094 4.29428L100 3.60743ZM75.4201 0L74.0312 1.4412L72.401 2.84687L69.281 5.79854L63.1812 11.8422L70.0119 5.01151L73.919 1.32893L75.2214 0H75.4201ZM100 69.1858V69.2509L98.059 71.1919L100 69.1858ZM100 69.3486V69.4085L99.8414 69.5698L100 69.3486ZM41.9398 28.8254L53.6223 16.993L52.5215 18.2437L54.7428 16.0575L54.6875 16.0759L54.8008 16.0004L58.842 12.0231L54.9925 15.8726L55.1085 15.7953L54.898 16.0058L54.84 16.0251L48.6523 22.2128L45.6419 25.473L40.9389 30.1759L33.1007 38.0142L37.5866 33.878L31.558 39.6068L23.3278 47.837L33.0257 37.9393L38.5125 32.4525L34.0266 36.5887L37.2369 33.5283L43.6074 27.3576L48.6023 22.1628L41.9398 28.8254ZM41.0977 17.0531L39.718 18.2925L40.312 17.8388L41.0977 17.0531ZM36.875 20.3106L48.1601 7.88137L42.3438 13.7478L36.875 20.3106ZM35.7125 25.8109L34.3328 27.0503L34.9268 26.5966L35.7125 25.8109ZM17.7022 39.7534L19.0819 38.514L18.8092 38.7867L36.7575 21.8045L23.1569 35.3051L13.5771 43.7372L18.1448 39.4154L17.7022 39.7534ZM3.48102 28.9281L1.53562 30.8735L1.22228 31.0465L0.0765686 32.3326L1.60579 30.9437L2.57849 29.971L3.48102 28.9281ZM0.953463 26.2027L19.5702 7.58594L9.31575 18.6078L0.953463 26.2027ZM23.7175 12.11L17.9339 18.0875L21.4622 14.5592L20.8074 15.4725L28.1915 7.95918L30.4791 5.54232L23.4224 12.599L23.7175 12.11ZM43.4641 43.1538L40.7872 46.1552L42.4907 44.4517L42.3285 45.0465L45.8166 41.3421L46.8441 40.0983L43.4371 43.5053L43.4641 43.1538ZM1.32715 48.3271L8.0918 41.5625L4.3657 45.5674L1.32715 48.3271ZM11.1479 31.2556L11.5689 30.975L11.3584 31.1855L11.1479 31.2556ZM11.9898 27.4667L12.2003 27.2562L11.7793 27.5369L11.9898 27.4667ZM11.3585 34.5531L11.148 34.7636L10.9375 34.8338L11.3585 34.5531ZM72.929 28.5457L82.2965 19.0792L81.4043 20.0705L86.4597 15.0811L78.2983 23.2425L75.8697 25.8362L72.1029 29.603L65.8249 35.881L69.3934 32.5437L64.5858 37.1531L57.994 43.745L65.7754 35.8314L70.17 31.4369L66.6015 34.7742L69.1623 32.3125L74.2507 27.3562L78.2653 23.2095L72.929 28.5457ZM82.6674 1.83549L84.3245 0.31872L83.3724 1.27088L82.6674 1.83549ZM64.5872 16.1312L62.9301 17.648L63.6351 17.0834L64.5872 16.1312ZM70.868 9.85044L80.0048 1.1214L74.6221 6.47142L70.868 9.85044ZM90.2409 41.9448L70.7578 61.4279L79.5093 53.4795L90.2409 41.9448ZM91.8088 42.5434L95.3963 38.8357L95.2132 39.139L99.5904 34.7618L98.1714 36.261L93.5912 40.9214L93.9973 40.3549L91.8088 42.5434ZM94.331 12.8233L89.9853 17.1691L89.2853 17.5555L86.7259 20.4284L90.142 17.3258L92.3149 15.1529L94.331 12.8233ZM44.7972 62.3259L76.9824 30.1406L59.2542 49.1955L44.7972 62.3259ZM77.1482 40.321L70.1709 47.5323L70 47.6463L70.0895 47.6164L68.1916 49.5779L70.185 47.5846L70.2105 47.5761L70.421 47.3656L70.37 47.3996L73.6557 44.1139L72.6416 45.5283L84.0768 33.893L87.6194 30.1502L76.6913 41.0783L77.1482 40.321ZM50.5355 34.3137L72.6617 12.1875L60.4955 25.3084L50.5355 34.3137ZM70.2104 44.0681L70.6314 43.7875L70.4209 43.998L70.2104 44.0681ZM71.263 40.0687L70.842 40.3494L71.0525 40.2792L71.263 40.0687ZM55.1084 12.4355L55.3189 12.225L54.8979 12.5056L55.1084 12.4355ZM48.8718 15.5785L60.2075 4.70496L49.4056 15.4006L48.8718 15.5785ZM23.7636 57.4491L29.9099 51.5854L26.1656 55.6123L27.2361 54.8244L23.435 58.6255L22.0681 59.9924L20.0562 62.0042L18.5082 63.8349L16.9601 65.6656L15.8328 66.2277L13.9315 67.7051L10.4821 71.0132L14.2832 67.2121L16.6775 65.383L21.1113 60.5253L20.477 60.7357L23.2937 58.4842L25.8277 55.9502L23.7636 57.4491ZM48.3825 74.1824L44.8832 77.8523L46.9145 75.8211L45.4748 77.4881L43.4493 79.2862L42.4082 80.1568L43.9215 79.0414L42.2487 80.7143L39.3752 83.8151L41.8844 81.3059L43.8473 79.6842L42.334 80.7995L44.7237 78.4098L46.1576 76.976L46.9713 75.8779L50.078 72.7713L48.1093 74.6262L48.3825 74.1824ZM29.2877 62.9906L29.0772 63.2011L28.8667 63.2713L29.2877 62.9906ZM29.7088 59.4823L29.9193 59.2719L29.4983 59.5525L29.7088 59.4823ZM29.0772 66.5687L28.8667 66.7792L28.6562 66.8494L29.0772 66.5687ZM22.9729 68.748L23.1834 68.5375L22.7624 68.8181L22.9729 68.748ZM3.8147e-05 91.7593L13.2499 79.1355L6.5001 86.2595L3.8147e-05 91.7593ZM16.0685 87.9974L17.1375 87.0687L16.5382 87.668L16.0685 87.9974ZM21.7869 79.3344L20.7179 80.263L21.1876 79.9337L21.7869 79.3344ZM12.3607 95.0755L13.4298 94.1469L12.8304 94.7462L12.3607 95.0755ZM42.7176 59.3801L43.2789 58.8187L43.0684 59.1696L42.7877 59.4502L42.2966 59.801L42.5772 59.3801H42.7176ZM26.3124 49.3152L24.3599 51.2676L23.996 51.3918L22.8956 52.732L24.4798 51.3875L25.456 50.4113L26.3124 49.3152ZM39.0689 63.3097L38.5777 63.6606L39.56 62.6782L39.0689 63.3097ZM20.3574 55.8032L19.3751 56.7856L19.8662 56.4347L20.3574 55.8032ZM39.9297 64.195L41.5504 62.3779L41.534 62.5907L43.5967 60.528L42.9746 61.2811L40.8628 63.5238L40.961 63.1637L39.9297 64.195ZM22.3921 55.457L21.3998 56.5696L22.0313 55.9381L21.9711 56.1587L23.2642 54.7854L23.6451 54.3243L22.3821 55.5873L22.3921 55.457ZM40.6473 92.4498L45.0485 88.0485L43.0066 90.4079L40.806 92.6085L37.3463 95.7507L39.9384 92.8412L40.6473 92.4498ZM18.5042 48.7973L11.5457 55.7558L10.4249 56.3746L6.32684 60.9746L11.7967 56.0067L15.2759 52.5275L18.5042 48.7973ZM32.7113 78.139L31.1131 79.7372L30.8432 79.8668L29.9145 80.9358L31.1833 79.8074L31.9823 79.0083L32.7113 78.139ZM21.7577 93.9525L31.2855 84.0344L30.8324 84.8777L42.4999 73.2102L38.7408 77.2295L26.5552 89.6753L27.5914 88.1187L21.7577 93.9525ZM98.5132 90.0591L89.9224 97.9224L93.5769 94.9953L98.5132 90.0591ZM97.8456 80.2105L99.5027 78.6937L98.5506 79.6459L97.8456 80.2105ZM88.5656 56.4599L78.9205 65.7009L82.1262 63.3036L78.1413 67.2885L73.7522 70.8692L74.7195 70.5082L67.717 78.117L63.992 81.0336L58.0146 87.011L63.4289 81.7988L66.3887 79.4454L68.1212 78.5213L70.5757 75.6625L73.0302 72.8038L76.194 69.64L78.3434 67.4906L84.3208 61.5132L82.6575 62.7723L88.5656 56.4599ZM85.1893 67.0375L83.7304 68.356L84.3561 67.8707L85.1893 67.0375ZM90.7969 58.2022L99.2725 50.5418L94.4317 55.3826L90.7969 58.2022ZM79.377 76.2172L77.9182 77.5357L78.5438 77.0504L79.377 76.2172ZM59.4922 91.7253L56.4011 94.1231L60.0049 90.8659L63.6087 87.6087L59.4922 91.7253ZM63.8833 75.4153L46 92.3896L49.6884 89.1193L53.3767 85.8491L63.8833 75.4153ZM71.6063 55.0765L69.6609 57.0219L69.3475 57.1949L68.2018 58.481L69.731 57.0921L70.7037 56.1194L71.6063 55.0765ZM55.1405 71.6857L61.4131 65.4131L57.958 69.1267L55.1405 71.6857ZM65.8396 69.4497L61.7138 73.7138L64.2308 71.1968L63.7637 71.8484L69.0313 66.4886L70.6632 64.7645L65.6292 69.7985L65.8396 69.4497ZM53.0034 65.4955L58.2258 59.8914L58.0558 60.4431L64.5517 53.9472L62.5136 56.2398L55.7841 63.2238L56.2513 62.2475L53.0034 65.4955ZM97.0997 71.2032L79.6514 88.6515L86.7697 80.814L97.0997 71.2032ZM35.1848 56.2513L31.93 59.9006L34.0012 57.8294L33.804 58.5527L38.0451 54.0485L39.2945 52.5361L35.1519 56.6787L35.1848 56.2513ZM66.8712 26.2471L78.1907 14.3099L77.7244 15.394L91.6784 1.4399L87.233 6.29715L72.7096 21.2323L73.8482 19.2701L66.8712 26.2471ZM28.0473 68.2068L20.4355 76.375L25.1695 71.641L24.4884 73.0639L34.297 62.8844L37.2675 59.5429L27.7995 69.0109L28.0473 68.2068ZM8.94067 39.5658L14.1631 33.9617L13.993 34.5134L20.4889 28.0175L18.4509 30.3101L11.7213 37.2941L12.1886 36.3178L8.94067 39.5658ZM99.7403 26L88 37.7404L93.2735 32.9508L99.7403 26ZM1.93388 8.08743L4.77765 5.04974L4.67856 5.34275L8.20743 1.81388L7.09578 3.05481L3.4355 6.84437L3.69832 6.32299L1.93388 8.08743ZM54.4485 44.211L48.5985 50.061L47.6563 50.5813L44.211 54.4485L48.8095 50.272L51.7345 47.347L54.4485 44.211Z\"\u003e\u003c/path\u003e\n\u003c/pattern\u003e\u003cpattern id=\"streaks-dark\" x=\"0\" y=\"0\" width=\"100\" height=\"100\" patternUnits=\"userSpaceOnUse\"\u003e\n    \u003cpath fill=\"rgba(0, 0, 0, 0.32)\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M58.1193 0H58.1703L55.4939 2.67644L58.1193 0ZM45.7725 0H45.811L41.2851 4.61498L42.7191 3.29325L37.0824 8.92997L35.0554 10.9569L32.0719 13.9404L29.6229 16.5017L27.1738 19.0631L25.8089 20.2034L23.2195 22.6244L18.181 27.6068L23.8178 21.97L27.0615 18.9508L33.8666 11.9773L33.1562 12.5194L37.0262 8.87383L40.784 5.11602L38.0299 7.64561L45.7725 0ZM23.1079 0H23.108L21.5814 1.66688L20.3126 2.79534L23.1079 0ZM7.53869 0H7.54254L7.50005 0.035944L7.53869 0ZM2.49995 0H2.52362L0.900245 1.59971L2.49995 0ZM0 3.64398V3.60744L0.278386 3.36559L0 3.64398ZM0 18.6564V18.5398L0.67985 17.8416L3.4459 15.0755L1.15701 17.1333L2.78713 15.6022L6.01437 12.507L8.5168 9.87253L5.15803 13.2313L11.0357 7.25453L10.4926 7.89678L13.6868 4.7686L8.54982 9.90555L7.05177 11.5687L4.68087 13.9396L0.729379 17.8911L3.01827 15.8333L0 18.6564ZM0 69.2431V69.178L1.64651 67.4763L1.46347 67.7796L5.84063 63.4025L4.42167 64.9016L0 69.4007V69.3408L0.247596 68.9955L0 69.2431ZM2.51594 100H2.49238L5.19989 97.2925L7.70071 95.0162L12.8713 89.6772L12.3094 90.0707L15.288 87.3167L18.1542 84.4504L16.0269 86.3532L22.8752 79.6172L18.5364 84.0683L19.6435 83.0734L15.3441 87.3728L13.798 88.9189L11.5224 91.1945L9.66768 93.1615L7.81297 95.1285L6.74529 95.9716L4.75024 97.7983L2.51594 100ZM7.54255 100H7.5387L9.81396 97.884L8.46606 99.2189L7.54255 100ZM45.8189 100H45.7807L46.9912 98.8047L45.8189 100ZM58.1784 100H58.1272L62.2952 95.7511L66.1408 91.9055L63.0037 94.8115L65.2507 92.6635L69.7117 88.3346L73.2165 84.6977L68.5469 89.3673L76.7379 81.0773L75.9634 81.9509L80.3913 77.5889L73.2496 84.7307L71.1346 87.0107L67.8384 90.3069L62.3447 95.8006L65.4818 92.8947L61.2625 96.9159L58.1784 100ZM75.4277 100H75.229L82.1834 92.9039L81.3403 93.5787L86.0063 89.1371L90.5601 84.5833L87.2464 87.6725L98.0937 76.9375L91.1673 83.9761L92.8932 82.3625L86.0625 89.1933L83.6062 91.6496L79.9907 95.265L77.011 98.357L75.4277 100ZM100 18.5398V18.6563L99.9556 18.6979L95.8065 22.847L100 18.5398ZM100 3.60743V3.64398L99.6791 3.9649L99.2094 4.29428L100 3.60743ZM75.4201 0L74.0312 1.4412L72.401 2.84687L69.281 5.79854L63.1812 11.8422L70.0119 5.01151L73.919 1.32893L75.2214 0H75.4201ZM100 69.1858V69.2509L98.059 71.1919L100 69.1858ZM100 69.3486V69.4085L99.8414 69.5698L100 69.3486ZM41.9398 28.8254L53.6223 16.993L52.5215 18.2437L54.7428 16.0575L54.6875 16.0759L54.8008 16.0004L58.842 12.0231L54.9925 15.8726L55.1085 15.7953L54.898 16.0058L54.84 16.0251L48.6523 22.2128L45.6419 25.473L40.9389 30.1759L33.1007 38.0142L37.5866 33.878L31.558 39.6068L23.3278 47.837L33.0257 37.9393L38.5125 32.4525L34.0266 36.5887L37.2369 33.5283L43.6074 27.3576L48.6023 22.1628L41.9398 28.8254ZM41.0977 17.0531L39.718 18.2925L40.312 17.8388L41.0977 17.0531ZM36.875 20.3106L48.1601 7.88137L42.3438 13.7478L36.875 20.3106ZM35.7125 25.8109L34.3328 27.0503L34.9268 26.5966L35.7125 25.8109ZM17.7022 39.7534L19.0819 38.514L18.8092 38.7867L36.7575 21.8045L23.1569 35.3051L13.5771 43.7372L18.1448 39.4154L17.7022 39.7534ZM3.48102 28.9281L1.53562 30.8735L1.22228 31.0465L0.0765686 32.3326L1.60579 30.9437L2.57849 29.971L3.48102 28.9281ZM0.953463 26.2027L19.5702 7.58594L9.31575 18.6078L0.953463 26.2027ZM23.7175 12.11L17.9339 18.0875L21.4622 14.5592L20.8074 15.4725L28.1915 7.95918L30.4791 5.54232L23.4224 12.599L23.7175 12.11ZM43.4641 43.1538L40.7872 46.1552L42.4907 44.4517L42.3285 45.0465L45.8166 41.3421L46.8441 40.0983L43.4371 43.5053L43.4641 43.1538ZM1.32715 48.3271L8.0918 41.5625L4.3657 45.5674L1.32715 48.3271ZM11.1479 31.2556L11.5689 30.975L11.3584 31.1855L11.1479 31.2556ZM11.9898 27.4667L12.2003 27.2562L11.7793 27.5369L11.9898 27.4667ZM11.3585 34.5531L11.148 34.7636L10.9375 34.8338L11.3585 34.5531ZM72.929 28.5457L82.2965 19.0792L81.4043 20.0705L86.4597 15.0811L78.2983 23.2425L75.8697 25.8362L72.1029 29.603L65.8249 35.881L69.3934 32.5437L64.5858 37.1531L57.994 43.745L65.7754 35.8314L70.17 31.4369L66.6015 34.7742L69.1623 32.3125L74.2507 27.3562L78.2653 23.2095L72.929 28.5457ZM82.6674 1.83549L84.3245 0.31872L83.3724 1.27088L82.6674 1.83549ZM64.5872 16.1312L62.9301 17.648L63.6351 17.0834L64.5872 16.1312ZM70.868 9.85044L80.0048 1.1214L74.6221 6.47142L70.868 9.85044ZM90.2409 41.9448L70.7578 61.4279L79.5093 53.4795L90.2409 41.9448ZM91.8088 42.5434L95.3963 38.8357L95.2132 39.139L99.5904 34.7618L98.1714 36.261L93.5912 40.9214L93.9973 40.3549L91.8088 42.5434ZM94.331 12.8233L89.9853 17.1691L89.2853 17.5555L86.7259 20.4284L90.142 17.3258L92.3149 15.1529L94.331 12.8233ZM44.7972 62.3259L76.9824 30.1406L59.2542 49.1955L44.7972 62.3259ZM77.1482 40.321L70.1709 47.5323L70 47.6463L70.0895 47.6164L68.1916 49.5779L70.185 47.5846L70.2105 47.5761L70.421 47.3656L70.37 47.3996L73.6557 44.1139L72.6416 45.5283L84.0768 33.893L87.6194 30.1502L76.6913 41.0783L77.1482 40.321ZM50.5355 34.3137L72.6617 12.1875L60.4955 25.3084L50.5355 34.3137ZM70.2104 44.0681L70.6314 43.7875L70.4209 43.998L70.2104 44.0681ZM71.263 40.0687L70.842 40.3494L71.0525 40.2792L71.263 40.0687ZM55.1084 12.4355L55.3189 12.225L54.8979 12.5056L55.1084 12.4355ZM48.8718 15.5785L60.2075 4.70496L49.4056 15.4006L48.8718 15.5785ZM23.7636 57.4491L29.9099 51.5854L26.1656 55.6123L27.2361 54.8244L23.435 58.6255L22.0681 59.9924L20.0562 62.0042L18.5082 63.8349L16.9601 65.6656L15.8328 66.2277L13.9315 67.7051L10.4821 71.0132L14.2832 67.2121L16.6775 65.383L21.1113 60.5253L20.477 60.7357L23.2937 58.4842L25.8277 55.9502L23.7636 57.4491ZM48.3825 74.1824L44.8832 77.8523L46.9145 75.8211L45.4748 77.4881L43.4493 79.2862L42.4082 80.1568L43.9215 79.0414L42.2487 80.7143L39.3752 83.8151L41.8844 81.3059L43.8473 79.6842L42.334 80.7995L44.7237 78.4098L46.1576 76.976L46.9713 75.8779L50.078 72.7713L48.1093 74.6262L48.3825 74.1824ZM29.2877 62.9906L29.0772 63.2011L28.8667 63.2713L29.2877 62.9906ZM29.7088 59.4823L29.9193 59.2719L29.4983 59.5525L29.7088 59.4823ZM29.0772 66.5687L28.8667 66.7792L28.6562 66.8494L29.0772 66.5687ZM22.9729 68.748L23.1834 68.5375L22.7624 68.8181L22.9729 68.748ZM3.8147e-05 91.7593L13.2499 79.1355L6.5001 86.2595L3.8147e-05 91.7593ZM16.0685 87.9974L17.1375 87.0687L16.5382 87.668L16.0685 87.9974ZM21.7869 79.3344L20.7179 80.263L21.1876 79.9337L21.7869 79.3344ZM12.3607 95.0755L13.4298 94.1469L12.8304 94.7462L12.3607 95.0755ZM42.7176 59.3801L43.2789 58.8187L43.0684 59.1696L42.7877 59.4502L42.2966 59.801L42.5772 59.3801H42.7176ZM26.3124 49.3152L24.3599 51.2676L23.996 51.3918L22.8956 52.732L24.4798 51.3875L25.456 50.4113L26.3124 49.3152ZM39.0689 63.3097L38.5777 63.6606L39.56 62.6782L39.0689 63.3097ZM20.3574 55.8032L19.3751 56.7856L19.8662 56.4347L20.3574 55.8032ZM39.9297 64.195L41.5504 62.3779L41.534 62.5907L43.5967 60.528L42.9746 61.2811L40.8628 63.5238L40.961 63.1637L39.9297 64.195ZM22.3921 55.457L21.3998 56.5696L22.0313 55.9381L21.9711 56.1587L23.2642 54.7854L23.6451 54.3243L22.3821 55.5873L22.3921 55.457ZM40.6473 92.4498L45.0485 88.0485L43.0066 90.4079L40.806 92.6085L37.3463 95.7507L39.9384 92.8412L40.6473 92.4498ZM18.5042 48.7973L11.5457 55.7558L10.4249 56.3746L6.32684 60.9746L11.7967 56.0067L15.2759 52.5275L18.5042 48.7973ZM32.7113 78.139L31.1131 79.7372L30.8432 79.8668L29.9145 80.9358L31.1833 79.8074L31.9823 79.0083L32.7113 78.139ZM21.7577 93.9525L31.2855 84.0344L30.8324 84.8777L42.4999 73.2102L38.7408 77.2295L26.5552 89.6753L27.5914 88.1187L21.7577 93.9525ZM98.5132 90.0591L89.9224 97.9224L93.5769 94.9953L98.5132 90.0591ZM97.8456 80.2105L99.5027 78.6937L98.5506 79.6459L97.8456 80.2105ZM88.5656 56.4599L78.9205 65.7009L82.1262 63.3036L78.1413 67.2885L73.7522 70.8692L74.7195 70.5082L67.717 78.117L63.992 81.0336L58.0146 87.011L63.4289 81.7988L66.3887 79.4454L68.1212 78.5213L70.5757 75.6625L73.0302 72.8038L76.194 69.64L78.3434 67.4906L84.3208 61.5132L82.6575 62.7723L88.5656 56.4599ZM85.1893 67.0375L83.7304 68.356L84.3561 67.8707L85.1893 67.0375ZM90.7969 58.2022L99.2725 50.5418L94.4317 55.3826L90.7969 58.2022ZM79.377 76.2172L77.9182 77.5357L78.5438 77.0504L79.377 76.2172ZM59.4922 91.7253L56.4011 94.1231L60.0049 90.8659L63.6087 87.6087L59.4922 91.7253ZM63.8833 75.4153L46 92.3896L49.6884 89.1193L53.3767 85.8491L63.8833 75.4153ZM71.6063 55.0765L69.6609 57.0219L69.3475 57.1949L68.2018 58.481L69.731 57.0921L70.7037 56.1194L71.6063 55.0765ZM55.1405 71.6857L61.4131 65.4131L57.958 69.1267L55.1405 71.6857ZM65.8396 69.4497L61.7138 73.7138L64.2308 71.1968L63.7637 71.8484L69.0313 66.4886L70.6632 64.7645L65.6292 69.7985L65.8396 69.4497ZM53.0034 65.4955L58.2258 59.8914L58.0558 60.4431L64.5517 53.9472L62.5136 56.2398L55.7841 63.2238L56.2513 62.2475L53.0034 65.4955ZM97.0997 71.2032L79.6514 88.6515L86.7697 80.814L97.0997 71.2032ZM35.1848 56.2513L31.93 59.9006L34.0012 57.8294L33.804 58.5527L38.0451 54.0485L39.2945 52.5361L35.1519 56.6787L35.1848 56.2513ZM66.8712 26.2471L78.1907 14.3099L77.7244 15.394L91.6784 1.4399L87.233 6.29715L72.7096 21.2323L73.8482 19.2701L66.8712 26.2471ZM28.0473 68.2068L20.4355 76.375L25.1695 71.641L24.4884 73.0639L34.297 62.8844L37.2675 59.5429L27.7995 69.0109L28.0473 68.2068ZM8.94067 39.5658L14.1631 33.9617L13.993 34.5134L20.4889 28.0175L18.4509 30.3101L11.7213 37.2941L12.1886 36.3178L8.94067 39.5658ZM99.7403 26L88 37.7404L93.2735 32.9508L99.7403 26ZM1.93388 8.08743L4.77765 5.04974L4.67856 5.34275L8.20743 1.81388L7.09578 3.05481L3.4355 6.84437L3.69832 6.32299L1.93388 8.08743ZM54.4485 44.211L48.5985 50.061L47.6563 50.5813L44.211 54.4485L48.8095 50.272L51.7345 47.347L54.4485 44.211Z\"\u003e\u003c/path\u003e\n\u003c/pattern\u003e\u003cpattern id=\"streaks-darker\" x=\"0\" y=\"0\" width=\"100\" height=\"100\" patternUnits=\"userSpaceOnUse\"\u003e\n    \u003cpath fill=\"rgba(255, 255, 255, 0.24)\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M58.1193 0H58.1703L55.4939 2.67644L58.1193 0ZM45.7725 0H45.811L41.2851 4.61498L42.7191 3.29325L37.0824 8.92997L35.0554 10.9569L32.0719 13.9404L29.6229 16.5017L27.1738 19.0631L25.8089 20.2034L23.2195 22.6244L18.181 27.6068L23.8178 21.97L27.0615 18.9508L33.8666 11.9773L33.1562 12.5194L37.0262 8.87383L40.784 5.11602L38.0299 7.64561L45.7725 0ZM23.1079 0H23.108L21.5814 1.66688L20.3126 2.79534L23.1079 0ZM7.53869 0H7.54254L7.50005 0.035944L7.53869 0ZM2.49995 0H2.52362L0.900245 1.59971L2.49995 0ZM0 3.64398V3.60744L0.278386 3.36559L0 3.64398ZM0 18.6564V18.5398L0.67985 17.8416L3.4459 15.0755L1.15701 17.1333L2.78713 15.6022L6.01437 12.507L8.5168 9.87253L5.15803 13.2313L11.0357 7.25453L10.4926 7.89678L13.6868 4.7686L8.54982 9.90555L7.05177 11.5687L4.68087 13.9396L0.729379 17.8911L3.01827 15.8333L0 18.6564ZM0 69.2431V69.178L1.64651 67.4763L1.46347 67.7796L5.84063 63.4025L4.42167 64.9016L0 69.4007V69.3408L0.247596 68.9955L0 69.2431ZM2.51594 100H2.49238L5.19989 97.2925L7.70071 95.0162L12.8713 89.6772L12.3094 90.0707L15.288 87.3167L18.1542 84.4504L16.0269 86.3532L22.8752 79.6172L18.5364 84.0683L19.6435 83.0734L15.3441 87.3728L13.798 88.9189L11.5224 91.1945L9.66768 93.1615L7.81297 95.1285L6.74529 95.9716L4.75024 97.7983L2.51594 100ZM7.54255 100H7.5387L9.81396 97.884L8.46606 99.2189L7.54255 100ZM45.8189 100H45.7807L46.9912 98.8047L45.8189 100ZM58.1784 100H58.1272L62.2952 95.7511L66.1408 91.9055L63.0037 94.8115L65.2507 92.6635L69.7117 88.3346L73.2165 84.6977L68.5469 89.3673L76.7379 81.0773L75.9634 81.9509L80.3913 77.5889L73.2496 84.7307L71.1346 87.0107L67.8384 90.3069L62.3447 95.8006L65.4818 92.8947L61.2625 96.9159L58.1784 100ZM75.4277 100H75.229L82.1834 92.9039L81.3403 93.5787L86.0063 89.1371L90.5601 84.5833L87.2464 87.6725L98.0937 76.9375L91.1673 83.9761L92.8932 82.3625L86.0625 89.1933L83.6062 91.6496L79.9907 95.265L77.011 98.357L75.4277 100ZM100 18.5398V18.6563L99.9556 18.6979L95.8065 22.847L100 18.5398ZM100 3.60743V3.64398L99.6791 3.9649L99.2094 4.29428L100 3.60743ZM75.4201 0L74.0312 1.4412L72.401 2.84687L69.281 5.79854L63.1812 11.8422L70.0119 5.01151L73.919 1.32893L75.2214 0H75.4201ZM100 69.1858V69.2509L98.059 71.1919L100 69.1858ZM100 69.3486V69.4085L99.8414 69.5698L100 69.3486ZM41.9398 28.8254L53.6223 16.993L52.5215 18.2437L54.7428 16.0575L54.6875 16.0759L54.8008 16.0004L58.842 12.0231L54.9925 15.8726L55.1085 15.7953L54.898 16.0058L54.84 16.0251L48.6523 22.2128L45.6419 25.473L40.9389 30.1759L33.1007 38.0142L37.5866 33.878L31.558 39.6068L23.3278 47.837L33.0257 37.9393L38.5125 32.4525L34.0266 36.5887L37.2369 33.5283L43.6074 27.3576L48.6023 22.1628L41.9398 28.8254ZM41.0977 17.0531L39.718 18.2925L40.312 17.8388L41.0977 17.0531ZM36.875 20.3106L48.1601 7.88137L42.3438 13.7478L36.875 20.3106ZM35.7125 25.8109L34.3328 27.0503L34.9268 26.5966L35.7125 25.8109ZM17.7022 39.7534L19.0819 38.514L18.8092 38.7867L36.7575 21.8045L23.1569 35.3051L13.5771 43.7372L18.1448 39.4154L17.7022 39.7534ZM3.48102 28.9281L1.53562 30.8735L1.22228 31.0465L0.0765686 32.3326L1.60579 30.9437L2.57849 29.971L3.48102 28.9281ZM0.953463 26.2027L19.5702 7.58594L9.31575 18.6078L0.953463 26.2027ZM23.7175 12.11L17.9339 18.0875L21.4622 14.5592L20.8074 15.4725L28.1915 7.95918L30.4791 5.54232L23.4224 12.599L23.7175 12.11ZM43.4641 43.1538L40.7872 46.1552L42.4907 44.4517L42.3285 45.0465L45.8166 41.3421L46.8441 40.0983L43.4371 43.5053L43.4641 43.1538ZM1.32715 48.3271L8.0918 41.5625L4.3657 45.5674L1.32715 48.3271ZM11.1479 31.2556L11.5689 30.975L11.3584 31.1855L11.1479 31.2556ZM11.9898 27.4667L12.2003 27.2562L11.7793 27.5369L11.9898 27.4667ZM11.3585 34.5531L11.148 34.7636L10.9375 34.8338L11.3585 34.5531ZM72.929 28.5457L82.2965 19.0792L81.4043 20.0705L86.4597 15.0811L78.2983 23.2425L75.8697 25.8362L72.1029 29.603L65.8249 35.881L69.3934 32.5437L64.5858 37.1531L57.994 43.745L65.7754 35.8314L70.17 31.4369L66.6015 34.7742L69.1623 32.3125L74.2507 27.3562L78.2653 23.2095L72.929 28.5457ZM82.6674 1.83549L84.3245 0.31872L83.3724 1.27088L82.6674 1.83549ZM64.5872 16.1312L62.9301 17.648L63.6351 17.0834L64.5872 16.1312ZM70.868 9.85044L80.0048 1.1214L74.6221 6.47142L70.868 9.85044ZM90.2409 41.9448L70.7578 61.4279L79.5093 53.4795L90.2409 41.9448ZM91.8088 42.5434L95.3963 38.8357L95.2132 39.139L99.5904 34.7618L98.1714 36.261L93.5912 40.9214L93.9973 40.3549L91.8088 42.5434ZM94.331 12.8233L89.9853 17.1691L89.2853 17.5555L86.7259 20.4284L90.142 17.3258L92.3149 15.1529L94.331 12.8233ZM44.7972 62.3259L76.9824 30.1406L59.2542 49.1955L44.7972 62.3259ZM77.1482 40.321L70.1709 47.5323L70 47.6463L70.0895 47.6164L68.1916 49.5779L70.185 47.5846L70.2105 47.5761L70.421 47.3656L70.37 47.3996L73.6557 44.1139L72.6416 45.5283L84.0768 33.893L87.6194 30.1502L76.6913 41.0783L77.1482 40.321ZM50.5355 34.3137L72.6617 12.1875L60.4955 25.3084L50.5355 34.3137ZM70.2104 44.0681L70.6314 43.7875L70.4209 43.998L70.2104 44.0681ZM71.263 40.0687L70.842 40.3494L71.0525 40.2792L71.263 40.0687ZM55.1084 12.4355L55.3189 12.225L54.8979 12.5056L55.1084 12.4355ZM48.8718 15.5785L60.2075 4.70496L49.4056 15.4006L48.8718 15.5785ZM23.7636 57.4491L29.9099 51.5854L26.1656 55.6123L27.2361 54.8244L23.435 58.6255L22.0681 59.9924L20.0562 62.0042L18.5082 63.8349L16.9601 65.6656L15.8328 66.2277L13.9315 67.7051L10.4821 71.0132L14.2832 67.2121L16.6775 65.383L21.1113 60.5253L20.477 60.7357L23.2937 58.4842L25.8277 55.9502L23.7636 57.4491ZM48.3825 74.1824L44.8832 77.8523L46.9145 75.8211L45.4748 77.4881L43.4493 79.2862L42.4082 80.1568L43.9215 79.0414L42.2487 80.7143L39.3752 83.8151L41.8844 81.3059L43.8473 79.6842L42.334 80.7995L44.7237 78.4098L46.1576 76.976L46.9713 75.8779L50.078 72.7713L48.1093 74.6262L48.3825 74.1824ZM29.2877 62.9906L29.0772 63.2011L28.8667 63.2713L29.2877 62.9906ZM29.7088 59.4823L29.9193 59.2719L29.4983 59.5525L29.7088 59.4823ZM29.0772 66.5687L28.8667 66.7792L28.6562 66.8494L29.0772 66.5687ZM22.9729 68.748L23.1834 68.5375L22.7624 68.8181L22.9729 68.748ZM3.8147e-05 91.7593L13.2499 79.1355L6.5001 86.2595L3.8147e-05 91.7593ZM16.0685 87.9974L17.1375 87.0687L16.5382 87.668L16.0685 87.9974ZM21.7869 79.3344L20.7179 80.263L21.1876 79.9337L21.7869 79.3344ZM12.3607 95.0755L13.4298 94.1469L12.8304 94.7462L12.3607 95.0755ZM42.7176 59.3801L43.2789 58.8187L43.0684 59.1696L42.7877 59.4502L42.2966 59.801L42.5772 59.3801H42.7176ZM26.3124 49.3152L24.3599 51.2676L23.996 51.3918L22.8956 52.732L24.4798 51.3875L25.456 50.4113L26.3124 49.3152ZM39.0689 63.3097L38.5777 63.6606L39.56 62.6782L39.0689 63.3097ZM20.3574 55.8032L19.3751 56.7856L19.8662 56.4347L20.3574 55.8032ZM39.9297 64.195L41.5504 62.3779L41.534 62.5907L43.5967 60.528L42.9746 61.2811L40.8628 63.5238L40.961 63.1637L39.9297 64.195ZM22.3921 55.457L21.3998 56.5696L22.0313 55.9381L21.9711 56.1587L23.2642 54.7854L23.6451 54.3243L22.3821 55.5873L22.3921 55.457ZM40.6473 92.4498L45.0485 88.0485L43.0066 90.4079L40.806 92.6085L37.3463 95.7507L39.9384 92.8412L40.6473 92.4498ZM18.5042 48.7973L11.5457 55.7558L10.4249 56.3746L6.32684 60.9746L11.7967 56.0067L15.2759 52.5275L18.5042 48.7973ZM32.7113 78.139L31.1131 79.7372L30.8432 79.8668L29.9145 80.9358L31.1833 79.8074L31.9823 79.0083L32.7113 78.139ZM21.7577 93.9525L31.2855 84.0344L30.8324 84.8777L42.4999 73.2102L38.7408 77.2295L26.5552 89.6753L27.5914 88.1187L21.7577 93.9525ZM98.5132 90.0591L89.9224 97.9224L93.5769 94.9953L98.5132 90.0591ZM97.8456 80.2105L99.5027 78.6937L98.5506 79.6459L97.8456 80.2105ZM88.5656 56.4599L78.9205 65.7009L82.1262 63.3036L78.1413 67.2885L73.7522 70.8692L74.7195 70.5082L67.717 78.117L63.992 81.0336L58.0146 87.011L63.4289 81.7988L66.3887 79.4454L68.1212 78.5213L70.5757 75.6625L73.0302 72.8038L76.194 69.64L78.3434 67.4906L84.3208 61.5132L82.6575 62.7723L88.5656 56.4599ZM85.1893 67.0375L83.7304 68.356L84.3561 67.8707L85.1893 67.0375ZM90.7969 58.2022L99.2725 50.5418L94.4317 55.3826L90.7969 58.2022ZM79.377 76.2172L77.9182 77.5357L78.5438 77.0504L79.377 76.2172ZM59.4922 91.7253L56.4011 94.1231L60.0049 90.8659L63.6087 87.6087L59.4922 91.7253ZM63.8833 75.4153L46 92.3896L49.6884 89.1193L53.3767 85.8491L63.8833 75.4153ZM71.6063 55.0765L69.6609 57.0219L69.3475 57.1949L68.2018 58.481L69.731 57.0921L70.7037 56.1194L71.6063 55.0765ZM55.1405 71.6857L61.4131 65.4131L57.958 69.1267L55.1405 71.6857ZM65.8396 69.4497L61.7138 73.7138L64.2308 71.1968L63.7637 71.8484L69.0313 66.4886L70.6632 64.7645L65.6292 69.7985L65.8396 69.4497ZM53.0034 65.4955L58.2258 59.8914L58.0558 60.4431L64.5517 53.9472L62.5136 56.2398L55.7841 63.2238L56.2513 62.2475L53.0034 65.4955ZM97.0997 71.2032L79.6514 88.6515L86.7697 80.814L97.0997 71.2032ZM35.1848 56.2513L31.93 59.9006L34.0012 57.8294L33.804 58.5527L38.0451 54.0485L39.2945 52.5361L35.1519 56.6787L35.1848 56.2513ZM66.8712 26.2471L78.1907 14.3099L77.7244 15.394L91.6784 1.4399L87.233 6.29715L72.7096 21.2323L73.8482 19.2701L66.8712 26.2471ZM28.0473 68.2068L20.4355 76.375L25.1695 71.641L24.4884 73.0639L34.297 62.8844L37.2675 59.5429L27.7995 69.0109L28.0473 68.2068ZM8.94067 39.5658L14.1631 33.9617L13.993 34.5134L20.4889 28.0175L18.4509 30.3101L11.7213 37.2941L12.1886 36.3178L8.94067 39.5658ZM99.7403 26L88 37.7404L93.2735 32.9508L99.7403 26ZM1.93388 8.08743L4.77765 5.04974L4.67856 5.34275L8.20743 1.81388L7.09578 3.05481L3.4355 6.84437L3.69832 6.32299L1.93388 8.08743ZM54.4485 44.211L48.5985 50.061L47.6563 50.5813L44.211 54.4485L48.8095 50.272L51.7345 47.347L54.4485 44.211Z\"\u003e\u003c/path\u003e\n\u003c/pattern\u003e\u003c/defs\u003e\u003cg id=\"sd\"\u003e\u003cg\u003e\u003cpath d=\"M-0.640124 -0.231351 L2452.418220 0.724412 L2452.101479 2978.293629 L0.370222 2979.612993\" transform=\"translate(0.000000 0.000000)\" style=\"stroke-width:0;\"\u003e\u003c/path\u003e\u003cpath d=\"M0.342905 0.385553 C490.283121 -3.510040, 980.597996 -4.667374, 2451.682562 0.156934 M-0.259466 0.105839 C542.930619 -8.143056, 1085.544234 -8.370925, 2451.767850 0.301126 M2452.614681 -0.699773 C2441.435808 648.431473, 2441.712422 1295.222424, 2452.556219 2978.652258 M2452.119071 -0.319709 C2459.598977 799.206906, 2459.208390 1599.112832, 2452.162750 2979.140897 M2452.421120 2978.914623 C1923.583258 2998.328095, 1393.668737 2998.110685, 0.734582 2978.838590 M2451.622629 2978.942507 C1530.227197 2981.350757, 608.843062 2981.242172, 0.375579 2979.016737 M-0.288241 2978.887412 C-16.791401 2123.983690, -17.484374 1270.262083, 0.236720 -0.482432 M0.087182 2979.399289 C-14.972247 1895.078712, -14.769825 811.320379, 0.176296 0.395212\" transform=\"translate(0.000000 0.000000)\" style=\"stroke-width:0;\"\u003e\u003c/path\u003e\u003crect width=\"2452.000000\" height=\"2979.000000\" transform=\"translate(0.000000 0.000000)\"\u003e\u003c/rect\u003e\u003c/g\u003e\u003ctext x=\"1226.000000\" y=\"40.000000\" style=\"text-anchor:middle;font-size:35px\"\u003e \u003c/text\u003e\u003c/g\u003e\u003cg id=\"sd.user\"\u003e\u003cg\u003e\u003cpath d=\"M 113 177 H 12 V 176 C 12 160 23 145 41 138 C 31 132 25 123 25 113 C 25 96 42 82 62 82 C 83 82 99 96 99 113 C 99 123 93 132 84 138 C 101 145 113 160 113 176 V 177 H 113 Z\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003cpath d=\"M111.000089 175.340129 M110.680336 176.503301 C78.733638 174.564211, 46.793840 176.686712, 10.427037 174.883558 M111.439542 176.153829 C77.112465 176.108062, 42.471681 176.616851, 11.175023 174.878408 M12.036256 175.380720 C12.069213 175.499007, 12.056019 175.737472, 11.979145 176.020772 M12.007985 175.311751 C11.979696 175.499999, 12.017352 175.669689, 11.972177 176.008615 M12 176 C11.786559 161.030428, 22.806971 143.316406, 42.978518 139.052801 M11.263446 177.836456 C11.407310 160.286147, 20.641433 144.640669, 40.495595 139.897814 M40.495595 139.897814 C32.591845 131.984708, 26.877899 123.083688, 24.824253 113.527637 M40.231782 141.349283 C30.648165 133.575958, 23.089523 122.410416, 24.843469 112.099244 M24.843469 112.099244 C23.793919 97.275325, 43.230441 80.655019, 62.179996 82.591800 M25.279382 114.095690 C24.325739 93.748774, 43.101851 84.470075, 60.060602 80.365153 M60.060602 80.365153 C84.045551 83.811030, 99.253697 94.234072, 97.399689 112.421620 M60.986159 81.897636 C85.468886 82.633896, 97.815180 93.580097, 97.114816 113.296813 M97.114816 113.296813 C97.341310 124.377529, 91.741062 133.838976, 83.116573 138.132881 M98.349654 112.169442 C97.846208 123.344315, 93.434146 133.706502, 84.885549 139.357312 M84.885549 139.357312 C99.455059 145.199981, 114.327730 158.864811, 112.680684 174.343321 M84.183329 138.501701 C101.762926 147.229838, 114.528132 159.474000, 111.460738 174.324682 M111.260825 174.181311 C111.272548 174.857948, 111.634532 175.921802, 111.486959 177.252310 M111.458044 174.299096 C111.595740 175.141590, 111.490082 176.082102, 111.498675 176.995988 M111.419379 176.970671 C112.085265 177.051737, 112.508114 176.853453, 113.143069 177.065413 M111.437779 177.021182 C111.793192 176.963862, 112.153009 176.971964, 113.038405 176.984605 M112.970427 176.859258 C112.353591 176.531895, 111.667919 175.698756, 111.123044 175.385145 M112.938580 176.913505 C112.142524 176.438445, 111.392343 175.648734, 111.129118 175.451122\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003cpath d=\"M 113 177 H 12 V 176 C 12 160 23 145 41 138 C 31 132 25 123 25 113 C 25 96 42 82 62 82 C 83 82 99 96 99 113 C 99 123 93 132 84 138 C 101 145 113 160 113 176 V 177 H 113 Z\"\u003e\u003c/path\u003e\u003cpath d=\"M111.000089 175.340129 M110.680336 176.503301 C78.733638 174.564211, 46.793840 176.686712, 10.427037 174.883558 M111.439542 176.153829 C77.112465 176.108062, 42.471681 176.616851, 11.175023 174.878408 M12.036256 175.380720 C12.069213 175.499007, 12.056019 175.737472, 11.979145 176.020772 M12.007985 175.311751 C11.979696 175.499999, 12.017352 175.669689, 11.972177 176.008615 M12 176 C11.786559 161.030428, 22.806971 143.316406, 42.978518 139.052801 M11.263446 177.836456 C11.407310 160.286147, 20.641433 144.640669, 40.495595 139.897814 M40.495595 139.897814 C32.591845 131.984708, 26.877899 123.083688, 24.824253 113.527637 M40.231782 141.349283 C30.648165 133.575958, 23.089523 122.410416, 24.843469 112.099244 M24.843469 112.099244 C23.793919 97.275325, 43.230441 80.655019, 62.179996 82.591800 M25.279382 114.095690 C24.325739 93.748774, 43.101851 84.470075, 60.060602 80.365153 M60.060602 80.365153 C84.045551 83.811030, 99.253697 94.234072, 97.399689 112.421620 M60.986159 81.897636 C85.468886 82.633896, 97.815180 93.580097, 97.114816 113.296813 M97.114816 113.296813 C97.341310 124.377529, 91.741062 133.838976, 83.116573 138.132881 M98.349654 112.169442 C97.846208 123.344315, 93.434146 133.706502, 84.885549 139.357312 M84.885549 139.357312 C99.455059 145.199981, 114.327730 158.864811, 112.680684 174.343321 M84.183329 138.501701 C101.762926 147.229838, 114.528132 159.474000, 111.460738 174.324682 M111.260825 174.181311 C111.272548 174.857948, 111.634532 175.921802, 111.486959 177.252310 M111.458044 174.299096 C111.595740 175.141590, 111.490082 176.082102, 111.498675 176.995988 M111.419379 176.970671 C112.085265 177.051737, 112.508114 176.853453, 113.143069 177.065413 M111.437779 177.021182 C111.793192 176.963862, 112.153009 176.971964, 113.038405 176.984605 M112.970427 176.859258 C112.353591 176.531895, 111.667919 175.698756, 111.123044 175.385145 M112.938580 176.913505 C112.142524 176.438445, 111.392343 175.648734, 111.129118 175.451122\"\u003e\u003c/path\u003e\u003c/g\u003e\u003ctext x=\"62.500000\" y=\"222.000000\" style=\"text-anchor:middle;font-size:40px\"\u003eUser\u003c/text\u003e\u003c/g\u003e\u003cg id=\"sd.native\"\u003e\u003cg\u003e\u003cpath d=\"M-1.600310 -0.578379 L351.045551 1.811030 L350.253697 173.234072 L0.925556 176.532483\" transform=\"translate(302.000000 52.000000)\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003cpath d=\"M0.557181 0.626480 C69.793748 -0.166013, 139.639092 -2.046549, 349.484199 0.255000 M-0.421602 0.171976 C77.758786 -1.435300, 155.002475 -1.805561, 349.622783 0.489295 M351.536704 -1.749433 C349.482878 39.293161, 350.174414 74.485016, 351.390547 174.130645 M350.297677 -0.799274 C351.343810 46.109139, 350.367341 93.965826, 350.406876 175.352243 M350.684272 174.861273 C275.184364 179.375350, 197.935008 179.022084, 1.193612 174.737728 M349.386816 174.906580 C218.373482 175.692222, 87.378505 175.515782, 0.610274 175.027196 M-0.720604 174.718532 C-1.279304 123.279988, -3.011737 74.796734, 0.591800 -1.206080 M0.217956 175.998223 C-2.929031 110.686964, -2.422977 46.781316, 0.440740 0.988030\" transform=\"translate(302.000000 52.000000)\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003crect width=\"350.000000\" height=\"175.000000\" transform=\"translate(302.000000 52.000000)\"\u003e\u003c/rect\u003e\u003c/g\u003e\u003ctext x=\"477.000000\" y=\"114.500000\" style=\"text-anchor:middle;font-size:40px\"\u003e\u003ctspan x=\"477.000000\" dy=\"0.000000\"\u003eNative App\u003c/tspan\u003e\u003ctspan x=\"477.000000\" dy=\"43.333333\"\u003e(maintained by\u003c/tspan\u003e\u003ctspan x=\"477.000000\" dy=\"43.333333\"\u003eNative Team)\u003c/tspan\u003e\u003c/text\u003e\u003c/g\u003e\u003cg id=\"sd.bridge\"\u003e\u003cg\u003e\u003cpath d=\"M-1.600310 -0.578379 L549.045551 1.811030 L548.253697 93.234072 L0.925556 96.532483\" transform=\"translate(692.000000 132.000000)\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003cpath d=\"M0.342905 0.385553 C109.474562 -0.423177, 218.980877 -1.580511, 547.682562 0.156934 M-0.259466 0.105839 C121.476617 -1.567162, 242.636230 -1.795031, 547.767850 0.301126 M549.536704 -1.749433 C548.221633 21.892977, 548.913169 39.684647, 549.390547 94.130645 M548.297677 -0.799274 C548.840140 24.637479, 547.863671 51.022506, 548.406876 95.352243 M548.421120 94.914623 C430.223654 99.259700, 310.949528 99.042290, 0.734582 94.838590 M547.622629 94.942507 C341.964755 95.607316, 136.318178 95.498730, 0.375579 95.016737 M-0.720604 94.718532 C-0.118129 66.224733, -1.850562 40.686225, 0.591800 -1.206080 M0.217956 95.998223 C-1.944678 59.788265, -1.438624 24.983918, 0.440740 0.988030\" transform=\"translate(692.000000 132.000000)\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003crect width=\"548.000000\" height=\"95.000000\" transform=\"translate(692.000000 132.000000)\"\u003e\u003c/rect\u003e\u003c/g\u003e\u003ctext x=\"966.000000\" y=\"194.500000\" style=\"text-anchor:middle;font-size:40px\"\u003eReact Native (RN) Bridge\u003c/text\u003e\u003c/g\u003e\u003cg id=\"sd.rnma1\"\u003e\u003cg\u003e\u003cpath d=\"M-1.600310 -0.578379 L561.045551 1.811030 L560.253697 173.234072 L0.925556 176.532483\" transform=\"translate(1280.000000 52.000000)\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003cpath d=\"M0.342905 0.385553 C111.874615 -0.442632, 223.780985 -1.599966, 559.682562 0.156934 M-0.259466 0.105839 C124.132840 -1.608606, 247.948675 -1.836475, 559.767850 0.301126 M561.536704 -1.749433 C559.482878 39.293161, 560.174414 74.485016, 561.390547 174.130645 M560.297677 -0.799274 C561.343810 46.109139, 560.367341 93.965826, 560.406876 175.352243 M560.421120 174.914623 C439.635584 179.354669, 317.773388 179.137259, 0.734582 174.838590 M559.622629 174.942507 C349.453804 175.618304, 139.296276 175.509718, 0.375579 175.016737 M-0.720604 174.718532 C-1.279304 123.279988, -3.011737 74.796734, 0.591800 -1.206080 M0.217956 175.998223 C-2.929031 110.686964, -2.422977 46.781316, 0.440740 0.988030\" transform=\"translate(1280.000000 52.000000)\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003crect width=\"560.000000\" height=\"175.000000\" transform=\"translate(1280.000000 52.000000)\"\u003e\u003c/rect\u003e\u003c/g\u003e\u003ctext x=\"1560.000000\" y=\"114.500000\" style=\"text-anchor:middle;font-size:40px\"\u003e\u003ctspan x=\"1560.000000\" dy=\"0.000000\"\u003eRN Auth\u003c/tspan\u003e\u003ctspan x=\"1560.000000\" dy=\"43.333333\"\u003eMicro-app\u003c/tspan\u003e\u003ctspan x=\"1560.000000\" dy=\"43.333333\"\u003e(maintained by RN Team)\u003c/tspan\u003e\u003c/text\u003e\u003c/g\u003e\u003cg id=\"sd.rnma2\"\u003e\u003cg\u003e\u003cpath d=\"M-1.600310 -0.578379 L561.045551 1.811030 L560.253697 173.234072 L0.925556 176.532483\" transform=\"translate(1880.000000 52.000000)\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003cpath d=\"M0.342905 0.385553 C111.874615 -0.442632, 223.780985 -1.599966, 559.682562 0.156934 M-0.259466 0.105839 C124.132840 -1.608606, 247.948675 -1.836475, 559.767850 0.301126 M561.536704 -1.749433 C559.482878 39.293161, 560.174414 74.485016, 561.390547 174.130645 M560.297677 -0.799274 C561.343810 46.109139, 560.367341 93.965826, 560.406876 175.352243 M560.421120 174.914623 C439.635584 179.354669, 317.773388 179.137259, 0.734582 174.838590 M559.622629 174.942507 C349.453804 175.618304, 139.296276 175.509718, 0.375579 175.016737 M-0.720604 174.718532 C-1.279304 123.279988, -3.011737 74.796734, 0.591800 -1.206080 M0.217956 175.998223 C-2.929031 110.686964, -2.422977 46.781316, 0.440740 0.988030\" transform=\"translate(1880.000000 52.000000)\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003crect width=\"560.000000\" height=\"175.000000\" transform=\"translate(1880.000000 52.000000)\"\u003e\u003c/rect\u003e\u003c/g\u003e\u003ctext x=\"2160.000000\" y=\"114.500000\" style=\"text-anchor:middle;font-size:40px\"\u003e\u003ctspan x=\"2160.000000\" dy=\"0.000000\"\u003eRN Grocery Shopping\u003c/tspan\u003e\u003ctspan x=\"2160.000000\" dy=\"43.333333\"\u003eMicro-app\u003c/tspan\u003e\u003ctspan x=\"2160.000000\" dy=\"43.333333\"\u003e(maintained by RN Team)\u003c/tspan\u003e\u003c/text\u003e\u003c/g\u003e\u003cg id=\"(sd.user -- )[0]\"\u003e\u003cpath d=\"M61.500044 233.170064 M61.436094 233.402699 C64.051026 1108.054604, 64.324583 1983.710642, 62.185407 2965.908685 M61.587935 233.332804 C58.315094 1171.047896, 58.524897 2108.979209, 62.335004 2965.907655\" fill=\"none\" style=\"stroke-width:2;stroke-dasharray:12.000000,11.838767;\" mask=\"url(#d2-2515248876)\"\u003e\u003c/path\u003e\u003c/g\u003e\u003cg id=\"(sd.native -- )[0]\"\u003e\u003cpath d=\"M476.000044 228.170064 M475.936094 228.402699 C478.555312 1104.655933, 478.828870 1981.913298, 476.685407 2965.908685 M476.087935 228.332804 C472.808607 1167.763754, 473.018410 2107.410924, 476.835004 2965.907655\" fill=\"none\" style=\"stroke-width:2;stroke-dasharray:12.000000,11.838767;\" mask=\"url(#d2-2515248876)\"\u003e\u003c/path\u003e\u003c/g\u003e\u003cg id=\"(sd.bridge -- )[0]\"\u003e\u003cpath d=\"M965.000044 228.170064 M964.936094 228.402699 C967.555312 1104.655933, 967.828870 1981.913298, 965.685407 2965.908685 M965.087935 228.332804 C961.808607 1167.763754, 962.018410 2107.410924, 965.835004 2965.907655\" fill=\"none\" style=\"stroke-width:2;stroke-dasharray:12.000000,11.838767;\" mask=\"url(#d2-2515248876)\"\u003e\u003c/path\u003e\u003c/g\u003e\u003cg id=\"(sd.rnma1 -- )[0]\"\u003e\u003cpath d=\"M1559.000044 228.170064 M1558.936094 228.402699 C1561.555312 1104.655933, 1561.828870 1981.913298, 1559.685407 2965.908685 M1559.087935 228.332804 C1555.808607 1167.763754, 1556.018410 2107.410924, 1559.835004 2965.907655\" fill=\"none\" style=\"stroke-width:2;stroke-dasharray:12.000000,11.838767;\" mask=\"url(#d2-2515248876)\"\u003e\u003c/path\u003e\u003c/g\u003e\u003cg id=\"(sd.rnma2 -- )[0]\"\u003e\u003cpath d=\"M2159.000044 228.170064 M2158.936094 228.402699 C2161.555312 1104.655933, 2161.828870 1981.913298, 2159.685407 2965.908685 M2159.087935 228.332804 C2155.808607 1167.763754, 2156.018410 2107.410924, 2159.835004 2965.907655\" fill=\"none\" style=\"stroke-width:2;stroke-dasharray:12.000000,11.838767;\" mask=\"url(#d2-2515248876)\"\u003e\u003c/path\u003e\u003c/g\u003e\u003cg id=\"sd.native.s1\"\u003e\u003cg\u003e\u003cpath d=\"M-0.640124 -0.231351 L12.418220 0.724412 L12.101479 586.293629 L0.370222 587.612993\" transform=\"translate(471.000000 406.000000)\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003cpath d=\"M0.514358 0.578330 C2.208201 0.649265, 4.464033 -1.086736, 11.523843 0.235401 M-0.389199 0.158759 C2.919894 0.384607, 5.364280 0.042804, 11.651775 0.451689 M12.614681 -0.699773 C10.271316 128.165957, 10.547930 254.691391, 12.556219 586.652258 M12.119071 -0.319709 C13.575084 157.204261, 13.184496 315.107541, 12.162750 587.140897 M12.631680 586.871935 C10.030187 587.121605, 5.813704 586.795490, 1.101873 586.757885 M11.433944 586.913760 C7.436324 587.185761, 3.455651 587.022882, 0.563369 587.025106 M-0.288241 586.887412 C-2.903743 418.031578, -3.596716 250.357859, 0.236720 -0.482432 M0.087182 587.399289 C-3.199380 373.207625, -2.996959 159.578205, 0.176296 0.395212\" transform=\"translate(471.000000 406.000000)\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003crect width=\"12.000000\" height=\"587.000000\" transform=\"translate(471.000000 406.000000)\"\u003e\u003c/rect\u003e\u003c/g\u003e\u003c/g\u003e\u003cg id=\"sd.rnma1.s1\"\u003e\u003cg\u003e\u003cpath d=\"M-1.416231 -0.511850 L12.925284 1.602712 L12.224515 207.437202 L0.819092 210.356205\" transform=\"translate(1554.000000 595.000000)\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003cpath d=\"M0.514358 0.578330 C2.208201 0.649265, 4.464033 -1.086736, 11.523843 0.235401 M-0.389199 0.158759 C2.919894 0.384607, 5.364280 0.042804, 11.651775 0.451689 M13.359941 -1.548201 C11.264505 46.546727, 11.876496 89.463908, 13.230596 208.230644 M12.263436 -0.707335 C13.378672 55.333532, 12.514524 112.213596, 12.360074 209.311726 M12.631680 208.871935 C10.030187 209.121605, 5.813704 208.795490, 1.101873 208.757885 M11.433944 208.913760 C7.436324 209.185761, 3.455651 209.022882, 0.563369 209.025106 M-0.637715 208.750908 C-1.568883 147.704277, -3.102039 89.272996, 0.523727 -1.067348 M0.192885 209.883400 C-2.962342 132.394132, -2.514497 56.148790, 0.390043 0.874379\" transform=\"translate(1554.000000 595.000000)\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003crect width=\"12.000000\" height=\"209.000000\" transform=\"translate(1554.000000 595.000000)\"\u003e\u003c/rect\u003e\u003c/g\u003e\u003c/g\u003e\u003cg id=\"sd.native.s2\"\u003e\u003cg\u003e\u003cpath d=\"M-0.640124 -0.231351 L12.418220 0.724412 L12.101479 1625.293629 L0.370222 1626.612993\" transform=\"translate(471.000000 1162.000000)\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003cpath d=\"M0.514358 0.578330 C2.208201 0.649265, 4.464033 -1.086736, 11.523843 0.235401 M-0.389199 0.158759 C2.919894 0.384607, 5.364280 0.042804, 11.651775 0.451689 M12.614681 -0.699773 C6.433485 354.150853, 6.710099 706.661183, 12.556219 1625.652258 M12.119071 -0.319709 C16.191650 436.067450, 15.801062 872.833919, 12.162750 1626.140897 M12.631680 1625.871935 C10.030187 1626.121605, 5.813704 1625.795490, 1.101873 1625.757885 M11.433944 1625.913760 C7.436324 1626.185761, 3.455651 1626.022882, 0.563369 1626.025106 M-0.288241 1625.887412 C-8.936049 1159.036697, -9.629023 693.368097, 0.236720 -0.482432 M0.087182 1626.399289 C-8.313096 1034.254472, -8.110675 442.671900, 0.176296 0.395212\" transform=\"translate(471.000000 1162.000000)\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003crect width=\"12.000000\" height=\"1626.000000\" transform=\"translate(471.000000 1162.000000)\"\u003e\u003c/rect\u003e\u003c/g\u003e\u003c/g\u003e\u003cg id=\"sd.rnma1.s2\"\u003e\u003cg\u003e\u003cpath d=\"M-0.640124 -0.231351 L12.418220 0.724412 L12.101479 869.293629 L0.370222 870.612993\" transform=\"translate(1554.000000 1351.000000)\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003cpath d=\"M0.514358 0.578330 C2.208201 0.649265, 4.464033 -1.086736, 11.523843 0.235401 M-0.389199 0.158759 C2.919894 0.384607, 5.364280 0.042804, 11.651775 0.451689 M12.614681 -0.699773 C9.225978 189.719109, 9.502592 377.797696, 12.556219 869.652258 M12.119071 -0.319709 C14.287777 233.160259, 13.897189 467.019538, 12.162750 870.140897 M12.631680 869.871935 C10.030187 870.121605, 5.813704 869.795490, 1.101873 869.757885 M11.433944 869.913760 C7.436324 870.185761, 3.455651 870.022882, 0.563369 870.025106 M-0.288241 869.887412 C-4.546806 619.864541, -5.239779 371.023785, 0.236720 -0.482432 M0.087182 870.399289 C-4.592240 553.261771, -4.389819 236.686497, 0.176296 0.395212\" transform=\"translate(1554.000000 1351.000000)\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003crect width=\"12.000000\" height=\"870.000000\" transform=\"translate(1554.000000 1351.000000)\"\u003e\u003c/rect\u003e\u003c/g\u003e\u003c/g\u003e\u003cg id=\"sd.bridge.s1\"\u003e\u003cg\u003e\u003cpath d=\"M-1.416231 -0.511850 L12.925284 1.602712 L12.224515 207.437202 L0.819092 210.356205\" transform=\"translate(960.000000 2201.000000)\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003cpath d=\"M0.514358 0.578330 C2.208201 0.649265, 4.464033 -1.086736, 11.523843 0.235401 M-0.389199 0.158759 C2.919894 0.384607, 5.364280 0.042804, 11.651775 0.451689 M13.359941 -1.548201 C11.264505 46.546727, 11.876496 89.463908, 13.230596 208.230644 M12.263436 -0.707335 C13.378672 55.333532, 12.514524 112.213596, 12.360074 209.311726 M12.631680 208.871935 C10.030187 209.121605, 5.813704 208.795490, 1.101873 208.757885 M11.433944 208.913760 C7.436324 209.185761, 3.455651 209.022882, 0.563369 209.025106 M-0.637715 208.750908 C-1.568883 147.704277, -3.102039 89.272996, 0.523727 -1.067348 M0.192885 209.883400 C-2.962342 132.394132, -2.514497 56.148790, 0.390043 0.874379\" transform=\"translate(960.000000 2201.000000)\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003crect width=\"12.000000\" height=\"209.000000\" transform=\"translate(960.000000 2201.000000)\"\u003e\u003c/rect\u003e\u003c/g\u003e\u003c/g\u003e\u003cg id=\"sd.rnma2.s1\"\u003e\u003cg\u003e\u003cpath d=\"M-1.416231 -0.511850 L12.925284 1.602712 L12.224515 207.437202 L0.819092 210.356205\" transform=\"translate(2154.000000 2390.000000)\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003cpath d=\"M0.514358 0.578330 C2.208201 0.649265, 4.464033 -1.086736, 11.523843 0.235401 M-0.389199 0.158759 C2.919894 0.384607, 5.364280 0.042804, 11.651775 0.451689 M13.359941 -1.548201 C11.264505 46.546727, 11.876496 89.463908, 13.230596 208.230644 M12.263436 -0.707335 C13.378672 55.333532, 12.514524 112.213596, 12.360074 209.311726 M12.631680 208.871935 C10.030187 209.121605, 5.813704 208.795490, 1.101873 208.757885 M11.433944 208.913760 C7.436324 209.185761, 3.455651 209.022882, 0.563369 209.025106 M-0.637715 208.750908 C-1.568883 147.704277, -3.102039 89.272996, 0.523727 -1.067348 M0.192885 209.883400 C-2.962342 132.394132, -2.514497 56.148790, 0.390043 0.874379\" transform=\"translate(2154.000000 2390.000000)\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003crect width=\"12.000000\" height=\"209.000000\" transform=\"translate(2154.000000 2390.000000)\"\u003e\u003c/rect\u003e\u003c/g\u003e\u003c/g\u003e\u003cg id=\"sd.(user -\u0026gt; native.s1)[0]\"\u003e\u003cmarker id=\"mk-202500746\" markerWidth=\"24.000000\" markerHeight=\"24.000000\" refX=\"16.500000\" refY=\"12.000000\" viewBox=\"0.000000 0.000000 24.000000 24.000000\" orient=\"auto\" markerUnits=\"userSpaceOnUse\"\u003e \u003cpolygon points=\"0.000000,0.000000 24.000000,12.000000 0.000000,24.000000 6.000000,12.000000\" stroke-width=\"5\"\u003e\u003c/polygon\u003e \u003c/marker\u003e\u003cpath d=\"M65.000044 415.170064 M64.908790 415.502022 C192.146785 414.395365, 319.385733 415.266905, 462.051092 415.869699 M65.125460 415.402286 C201.433849 415.224350, 337.654247 415.654364, 462.264559 415.868229\" fill=\"none\" style=\"stroke-width:5;\" mask=\"url(#d2-2515248876)\"\u003e\u003c/path\u003e\u003cpath d=\"M-10.769114 -4.596862 C-8.536035 -3.535648, -6.924229 -3.101790, 0.871974 0.633837 M-9.970918 -3.572527 C-7.753913 -2.635753, -4.606709 -1.422831, 0.139409 0.139178 M0.328555 -0.672230 C-2.879206 0.911935, -4.287065 1.591773, -9.907567 4.749580 M0.480913 -0.214233 C-1.623082 0.530947, -4.175455 1.708350, -10.419703 3.492034\" fill=\"none\" style=\"stroke-width:5;\" transform=\"translate(462.500000 416.000000) rotate(0)\"\u003e\u003c/path\u003e\u003ctext x=\"267.000000\" y=\"429.000000\" style=\"text-anchor:middle;font-size:35px\"\u003e   Opens App   \u003c/text\u003e\u003c/g\u003e\u003cg id=\"sd.(native.s1 -\u0026gt; rnma1.s1)[0]\"\u003e\u003cpath d=\"M485.500044 604.170064 M485.436094 604.402699 C824.870299 603.068113, 1164.305172 603.758413, 1545.185407 604.908685 M485.587935 604.332804 C849.278101 603.942731, 1212.906603 604.329299, 1545.335004 604.907655\" fill=\"none\" style=\"stroke-width:5;\" mask=\"url(#d2-2515248876)\"\u003e\u003c/path\u003e\u003cpath d=\"M-10.769114 -4.596862 C-8.536035 -3.535648, -6.924229 -3.101790, 0.871974 0.633837 M-9.970918 -3.572527 C-7.753913 -2.635753, -4.606709 -1.422831, 0.139409 0.139178 M0.328555 -0.672230 C-2.879206 0.911935, -4.287065 1.591773, -9.907567 4.749580 M0.480913 -0.214233 C-1.623082 0.530947, -4.175455 1.708350, -10.419703 3.492034\" fill=\"none\" style=\"stroke-width:5;\" transform=\"translate(1545.500000 605.000000) rotate(0)\"\u003e\u003c/path\u003e\u003ctext x=\"1018.500000\" y=\"583.000000\" style=\"text-anchor:middle;font-size:35px\"\u003e\u003ctspan x=\"1018.500000\" dy=\"0.000000\"\u003eNative app requests the\u003c/tspan\u003e\u003ctspan x=\"1018.500000\" dy=\"38.000000\"\u003einitialization of\u003c/tspan\u003e\u003ctspan x=\"1018.500000\" dy=\"38.000000\"\u003eRN Auth micro-app\u003c/tspan\u003e\u003c/text\u003e\u003c/g\u003e\u003cg id=\"sd.(rnma1.s1 -\u0026gt; native.s1)[0]\"\u003e\u003cmarker id=\"mk-4125695325\" markerWidth=\"24.000000\" markerHeight=\"24.000000\" refX=\"16.500000\" refY=\"12.000000\" viewBox=\"0.000000 0.000000 24.000000 24.000000\" orient=\"auto\" markerUnits=\"userSpaceOnUse\"\u003e \u003cpolygon points=\"0.000000,0.000000 24.000000,12.000000 0.000000,24.000000 6.000000,12.000000\" stroke-width=\"5\"\u003e\u003c/polygon\u003e \u003c/marker\u003e\u003cpath d=\"M1549.500044 793.170064 M1549.436094 793.402699 C1210.547666 794.109621, 871.659907 794.799921, 491.185407 793.908685 M1549.587935 793.332804 C1186.440704 794.063571, 823.231808 794.450139, 491.335004 793.907655\" fill=\"none\" style=\"stroke-width:5;stroke-dasharray:15.000000,14.106102;\" mask=\"url(#d2-2515248876)\"\u003e\u003c/path\u003e\u003cpath d=\"M-10.769114 -4.596862 C-8.536035 -3.535648, -6.924229 -3.101790, 0.871974 0.633837 M-9.970918 -3.572527 C-7.753913 -2.635753, -4.606709 -1.422831, 0.139409 0.139178 M0.328555 -0.672230 C-2.879206 0.911935, -4.287065 1.591773, -9.907567 4.749580 M0.480913 -0.214233 C-1.623082 0.530947, -4.175455 1.708350, -10.419703 3.492034\" fill=\"none\" style=\"stroke-width:5;\" transform=\"translate(491.500000 794.000000) rotate(180.00000500895632)\"\u003e\u003c/path\u003e\u003ctext x=\"1019.000000\" y=\"790.000000\" style=\"text-anchor:middle;font-size:35px\"\u003e\u003ctspan x=\"1019.000000\" dy=\"0.000000\"\u003eRN Auth micro-app\u003c/tspan\u003e\u003ctspan x=\"1019.000000\" dy=\"39.500000\"\u003einitialize\u003c/tspan\u003e\u003c/text\u003e\u003c/g\u003e\u003cg id=\"sd.(native.s1 -\u0026gt; user)[0]\"\u003e\u003cpath d=\"M466.500044 982.170064 M466.408257 982.503960 C339.675202 982.486362, 212.943107 983.361440, 70.548470 982.868938 M466.626192 982.403642 C330.798925 982.825325, 194.883152 983.256186, 70.763184 982.867459\" fill=\"none\" style=\"stroke-width:5;stroke-dasharray:15.000000,14.106102;\" mask=\"url(#d2-2515248876)\"\u003e\u003c/path\u003e\u003cpath d=\"M-10.769114 -4.596862 C-8.536035 -3.535648, -6.924229 -3.101790, 0.871974 0.633837 M-9.970918 -3.572527 C-7.753913 -2.635753, -4.606709 -1.422831, 0.139409 0.139178 M0.328555 -0.672230 C-2.879206 0.911935, -4.287065 1.591773, -9.907567 4.749580 M0.480913 -0.214233 C-1.623082 0.530947, -4.175455 1.708350, -10.419703 3.492034\" fill=\"none\" style=\"stroke-width:5;\" transform=\"translate(71.000000 983.000000) rotate(180.00000500895632)\"\u003e\u003c/path\u003e\u003ctext x=\"267.000000\" y=\"979.000000\" style=\"text-anchor:middle;font-size:35px\"\u003e\u003ctspan x=\"267.000000\" dy=\"0.000000\"\u003eUser is presented the\u003c/tspan\u003e\u003ctspan x=\"267.000000\" dy=\"39.500000\"\u003eRN Auth micro-app\u003c/tspan\u003e\u003c/text\u003e\u003c/g\u003e\u003cg id=\"sd.(user -\u0026gt; native.s2)[0]\"\u003e\u003cpath d=\"M65.000044 1171.170064 M64.908790 1171.502022 C192.146785 1170.395365, 319.385733 1171.266905, 462.051092 1171.869699 M65.125460 1171.402286 C201.433849 1171.224350, 337.654247 1171.654364, 462.264559 1171.868229\" fill=\"none\" style=\"stroke-width:5;\" mask=\"url(#d2-2515248876)\"\u003e\u003c/path\u003e\u003cpath d=\"M-10.769114 -4.596862 C-8.536035 -3.535648, -6.924229 -3.101790, 0.871974 0.633837 M-9.970918 -3.572527 C-7.753913 -2.635753, -4.606709 -1.422831, 0.139409 0.139178 M0.328555 -0.672230 C-2.879206 0.911935, -4.287065 1.591773, -9.907567 4.749580 M0.480913 -0.214233 C-1.623082 0.530947, -4.175455 1.708350, -10.419703 3.492034\" fill=\"none\" style=\"stroke-width:5;\" transform=\"translate(462.500000 1172.000000) rotate(0)\"\u003e\u003c/path\u003e\u003ctext x=\"267.000000\" y=\"1168.000000\" style=\"text-anchor:middle;font-size:35px\"\u003e\u003ctspan x=\"267.000000\" dy=\"0.000000\"\u003eUser logs in using\u003c/tspan\u003e\u003ctspan x=\"267.000000\" dy=\"39.500000\"\u003eRN Auth micro-app\u003c/tspan\u003e\u003c/text\u003e\u003c/g\u003e\u003cg id=\"sd.(native.s2 -\u0026gt; rnma1.s2)[0]\"\u003e\u003cpath d=\"M485.500044 1360.170064 M485.436094 1360.402699 C824.870299 1359.068113, 1164.305172 1359.758413, 1545.185407 1360.908685 M485.587935 1360.332804 C849.278101 1359.942731, 1212.906603 1360.329299, 1545.335004 1360.907655\" fill=\"none\" style=\"stroke-width:5;\" mask=\"url(#d2-2515248876)\"\u003e\u003c/path\u003e\u003cpath d=\"M-10.769114 -4.596862 C-8.536035 -3.535648, -6.924229 -3.101790, 0.871974 0.633837 M-9.970918 -3.572527 C-7.753913 -2.635753, -4.606709 -1.422831, 0.139409 0.139178 M0.328555 -0.672230 C-2.879206 0.911935, -4.287065 1.591773, -9.907567 4.749580 M0.480913 -0.214233 C-1.623082 0.530947, -4.175455 1.708350, -10.419703 3.492034\" fill=\"none\" style=\"stroke-width:5;\" transform=\"translate(1545.500000 1361.000000) rotate(0)\"\u003e\u003c/path\u003e\u003ctext x=\"1018.500000\" y=\"1357.000000\" style=\"text-anchor:middle;font-size:35px\"\u003e\u003ctspan x=\"1018.500000\" dy=\"0.000000\"\u003e   User\u0026#39;s credentials is sent\u003c/tspan\u003e\u003ctspan x=\"1018.500000\" dy=\"39.500000\"\u003eto the micro-app for processing   \u003c/tspan\u003e\u003c/text\u003e\u003c/g\u003e\u003cg id=\"sd.(rnma1.s2 -\u0026gt; bridge.s1)[0]\"\u003e\u003cpath d=\"M1549.500044 2210.170064 M1549.436094 2210.402699 C1367.157566 2210.638282, 1184.879706 2211.328581, 980.185407 2210.908685 M1549.587935 2210.332804 C1354.251604 2210.804793, 1158.853609 2211.191361, 980.335004 2210.907655\" fill=\"none\" style=\"stroke-width:5;stroke-dasharray:15.000000,14.106102;\" mask=\"url(#d2-2515248876)\"\u003e\u003c/path\u003e\u003cpath d=\"M-10.769114 -4.596862 C-8.536035 -3.535648, -6.924229 -3.101790, 0.871974 0.633837 M-9.970918 -3.572527 C-7.753913 -2.635753, -4.606709 -1.422831, 0.139409 0.139178 M0.328555 -0.672230 C-2.879206 0.911935, -4.287065 1.591773, -9.907567 4.749580 M0.480913 -0.214233 C-1.623082 0.530947, -4.175455 1.708350, -10.419703 3.492034\" fill=\"none\" style=\"stroke-width:5;\" transform=\"translate(980.500000 2211.000000) rotate(180.00000500895632)\"\u003e\u003c/path\u003e\u003ctext x=\"1263.500000\" y=\"2189.000000\" style=\"text-anchor:middle;font-size:35px\"\u003e\u003ctspan x=\"1263.500000\" dy=\"0.000000\"\u003eRequest to initialize\u003c/tspan\u003e\u003ctspan x=\"1263.500000\" dy=\"38.000000\"\u003eRN Grocery Shopping\u003c/tspan\u003e\u003ctspan x=\"1263.500000\" dy=\"38.000000\"\u003emicro-app\u003c/tspan\u003e\u003c/text\u003e\u003c/g\u003e\u003cg id=\"sd.(bridge.s1 -\u0026gt; rnma2.s1)[0]\"\u003e\u003cpath d=\"M974.500044 2399.170064 M974.436094 2399.402699 C1349.419785 2397.961122, 1724.404145 2398.651422, 2145.185407 2399.908685 M974.587935 2399.332804 C1376.370146 2398.883990, 1778.090692 2399.270558, 2145.335004 2399.907655\" fill=\"none\" style=\"stroke-width:5;\" mask=\"url(#d2-2515248876)\"\u003e\u003c/path\u003e\u003cpath d=\"M-10.769114 -4.596862 C-8.536035 -3.535648, -6.924229 -3.101790, 0.871974 0.633837 M-9.970918 -3.572527 C-7.753913 -2.635753, -4.606709 -1.422831, 0.139409 0.139178 M0.328555 -0.672230 C-2.879206 0.911935, -4.287065 1.591773, -9.907567 4.749580 M0.480913 -0.214233 C-1.623082 0.530947, -4.175455 1.708350, -10.419703 3.492034\" fill=\"none\" style=\"stroke-width:5;\" transform=\"translate(2145.500000 2400.000000) rotate(0)\"\u003e\u003c/path\u003e\u003ctext x=\"1563.500000\" y=\"2413.000000\" style=\"text-anchor:middle;font-size:35px\"\u003e     Initialize request    \u003c/text\u003e\u003c/g\u003e\u003cg id=\"sd.(rnma2.s1 -\u0026gt; native.s2)[0]\"\u003e\u003cpath d=\"M2149.500044 2588.170064 M2149.436094 2588.402699 C1618.388280 2589.687952, 1087.341135 2590.378252, 491.185407 2588.908685 M2149.587935 2588.332804 C1580.537758 2589.381089, 1011.425917 2589.767657, 491.335004 2588.907655\" fill=\"none\" style=\"stroke-width:5;stroke-dasharray:15.000000,14.106102;\" mask=\"url(#d2-2515248876)\"\u003e\u003c/path\u003e\u003cpath d=\"M-10.769114 -4.596862 C-8.536035 -3.535648, -6.924229 -3.101790, 0.871974 0.633837 M-9.970918 -3.572527 C-7.753913 -2.635753, -4.606709 -1.422831, 0.139409 0.139178 M0.328555 -0.672230 C-2.879206 0.911935, -4.287065 1.591773, -9.907567 4.749580 M0.480913 -0.214233 C-1.623082 0.530947, -4.175455 1.708350, -10.419703 3.492034\" fill=\"none\" style=\"stroke-width:5;\" transform=\"translate(491.500000 2589.000000) rotate(180.00000500895632)\"\u003e\u003c/path\u003e\u003ctext x=\"1319.000000\" y=\"2585.000000\" style=\"text-anchor:middle;font-size:35px\"\u003e\u003ctspan x=\"1319.000000\" dy=\"0.000000\"\u003e     RN Grocery Shopping\u003c/tspan\u003e\u003ctspan x=\"1319.000000\" dy=\"39.500000\"\u003emicro-app initialized    \u003c/tspan\u003e\u003c/text\u003e\u003c/g\u003e\u003cg id=\"sd.(native.s2 -\u0026gt; user)[0]\"\u003e\u003cpath d=\"M466.500044 2777.170064 M466.408257 2777.503960 C339.675202 2777.486362, 212.943107 2778.361440, 70.548470 2777.868938 M466.626192 2777.403642 C330.798925 2777.825325, 194.883152 2778.256186, 70.763184 2777.867459\" fill=\"none\" style=\"stroke-width:5;stroke-dasharray:15.000000,14.106102;\" mask=\"url(#d2-2515248876)\"\u003e\u003c/path\u003e\u003cpath d=\"M-10.769114 -4.596862 C-8.536035 -3.535648, -6.924229 -3.101790, 0.871974 0.633837 M-9.970918 -3.572527 C-7.753913 -2.635753, -4.606709 -1.422831, 0.139409 0.139178 M0.328555 -0.672230 C-2.879206 0.911935, -4.287065 1.591773, -9.907567 4.749580 M0.480913 -0.214233 C-1.623082 0.530947, -4.175455 1.708350, -10.419703 3.492034\" fill=\"none\" style=\"stroke-width:5;\" transform=\"translate(71.000000 2778.000000) rotate(180.00000500895632)\"\u003e\u003c/path\u003e\u003ctext x=\"267.000000\" y=\"2739.000000\" style=\"text-anchor:middle;font-size:35px\"\u003e\u003ctspan x=\"267.000000\" dy=\"0.000000\"\u003eUser is presented the\u003c/tspan\u003e\u003ctspan x=\"267.000000\" dy=\"37.250000\"\u003eRN Grocery\u003c/tspan\u003e\u003ctspan x=\"267.000000\" dy=\"37.250000\"\u003eShopping\u003c/tspan\u003e\u003ctspan x=\"267.000000\" dy=\"37.250000\"\u003emicro-app\u003c/tspan\u003e\u003c/text\u003e\u003c/g\u003e\u003cg id=\"sd.rnma1.\u0026#34;Micro-app processes\\ncredentials \u0026amp; results\\nto successful authentication\u0026#34;\"\u003e\u003cg\u003e\u003cpath d=\"M 1280 1550 H 1819 C 1820 1550 1821 1550 1822 1551 L 1839 1567 C 1840 1568 1840 1569 1840 1570 V 1709 C 1840 1709 1840 1709 1840 1709 H 1280 C 1279 1709 1279 1709 1279 1709 V 1551 C 1279 1550 1279 1550 1280 1550 Z\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003cpath d=\"M1278.000089 1548.340129 M1277.872188 1548.805398 C1451.039724 1545.562217, 1624.210020 1546.411217, 1818.370815 1548.157501 M1278.175870 1548.665609 C1463.690438 1547.292557, 1649.079523 1547.496073, 1818.670009 1548.155441 M1819 1548.340129 C1819.300226 1550.439561, 1821.492103 1550.716176, 1822.182482 1551.614681 M1818.343683 1548.896348 C1820.314793 1549.409092, 1821.297677 1549.200725, 1821.565322 1550.683957 M1821.619947 1551.497711 C1827.641514 1554.543213, 1833.111664 1563.497996, 1840.052801 1566.786559 M1821.197045 1551.602185 C1827.460728 1557.472050, 1833.554077 1562.562822, 1838.056573 1566.856267 M1839 1567 C1841.591845 1567.984708, 1841.877899 1569.083688, 1839.824253 1570.527637 M1838.736186 1568.451469 C1839.648165 1569.575958, 1838.089523 1568.410416, 1839.843469 1569.099244 M1841.118794 1570.329686 C1839.326421 1612.764464, 1842.667848 1654.006339, 1838.535591 1708.460591 M1839.043313 1568.810055 C1841.599443 1599.377061, 1841.203516 1626.960884, 1840.306247 1709.766241 M1839.843469 1709 C1841.975109 1709.507117, 1839.052144 1707.064078, 1838.491853 1709.237450 M1838.960042 1709.132881 C1838.426328 1711.298720, 1841.543547 1707.590787, 1837.926637 1710.721912 M1838.036818 1710.860839 C1651.331862 1708.534247, 1462.982253 1708.043997, 1280.079992 1711.253004 M1837.680355 1710.453861 C1702.338320 1709.169212, 1566.750367 1708.728278, 1279.919271 1710.668937 M1280 1710.721912 C1278.571275 1708.458444, 1278.356080 1709.540885, 1278.350985 1708.402199 M1280.298781 1710.800318 C1279.331255 1709.047647, 1278.979859 1708.808723, 1279.943103 1709.532086 M1277.962463 1710.099299 C1282.917986 1648.633312, 1281.286459 1587.734431, 1279.405712 1550.618933 M1279.103032 1710.461555 C1278.947302 1649.092052, 1277.572703 1589.943345, 1279.644793 1551.275225 M1279.943103 1551 C1277.447668 1549.412918, 1279.998023 1549.599953, 1278.868289 1549.202387 M1281.285760 1550.433351 C1277.646200 1550.754313, 1280.487150 1551.221423, 1279.167713 1549.715536 M1279.303267 1549.603830 C1278.701577 1549.258276, 1278.396164 1548.790087, 1278.126156 1548.162770 M1279.098791 1549.686603 C1278.894343 1549.475533, 1278.577981 1549.011993, 1278.004294 1548.305836\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003cpath d=\"M 1280 1550 H 1819 C 1820 1550 1821 1550 1822 1551 L 1839 1567 C 1840 1568 1840 1569 1840 1570 V 1709 C 1840 1709 1840 1709 1840 1709 H 1280 C 1279 1709 1279 1709 1279 1709 V 1551 C 1279 1550 1279 1550 1280 1550 Z\"\u003e\u003c/path\u003e\u003cpath d=\"M1278.000089 1548.340129 M1277.872188 1548.805398 C1451.039724 1545.562217, 1624.210020 1546.411217, 1818.370815 1548.157501 M1278.175870 1548.665609 C1463.690438 1547.292557, 1649.079523 1547.496073, 1818.670009 1548.155441 M1819 1548.340129 C1819.300226 1550.439561, 1821.492103 1550.716176, 1822.182482 1551.614681 M1818.343683 1548.896348 C1820.314793 1549.409092, 1821.297677 1549.200725, 1821.565322 1550.683957 M1821.619947 1551.497711 C1827.641514 1554.543213, 1833.111664 1563.497996, 1840.052801 1566.786559 M1821.197045 1551.602185 C1827.460728 1557.472050, 1833.554077 1562.562822, 1838.056573 1566.856267 M1839 1567 C1841.591845 1567.984708, 1841.877899 1569.083688, 1839.824253 1570.527637 M1838.736186 1568.451469 C1839.648165 1569.575958, 1838.089523 1568.410416, 1839.843469 1569.099244 M1841.118794 1570.329686 C1839.326421 1612.764464, 1842.667848 1654.006339, 1838.535591 1708.460591 M1839.043313 1568.810055 C1841.599443 1599.377061, 1841.203516 1626.960884, 1840.306247 1709.766241 M1839.843469 1709 C1841.975109 1709.507117, 1839.052144 1707.064078, 1838.491853 1709.237450 M1838.960042 1709.132881 C1838.426328 1711.298720, 1841.543547 1707.590787, 1837.926637 1710.721912 M1838.036818 1710.860839 C1651.331862 1708.534247, 1462.982253 1708.043997, 1280.079992 1711.253004 M1837.680355 1710.453861 C1702.338320 1709.169212, 1566.750367 1708.728278, 1279.919271 1710.668937 M1280 1710.721912 C1278.571275 1708.458444, 1278.356080 1709.540885, 1278.350985 1708.402199 M1280.298781 1710.800318 C1279.331255 1709.047647, 1278.979859 1708.808723, 1279.943103 1709.532086 M1277.962463 1710.099299 C1282.917986 1648.633312, 1281.286459 1587.734431, 1279.405712 1550.618933 M1279.103032 1710.461555 C1278.947302 1649.092052, 1277.572703 1589.943345, 1279.644793 1551.275225 M1279.943103 1551 C1277.447668 1549.412918, 1279.998023 1549.599953, 1278.868289 1549.202387 M1281.285760 1550.433351 C1277.646200 1550.754313, 1280.487150 1551.221423, 1279.167713 1549.715536 M1279.303267 1549.603830 C1278.701577 1549.258276, 1278.396164 1548.790087, 1278.126156 1548.162770 M1279.098791 1549.686603 C1278.894343 1549.475533, 1278.577981 1549.011993, 1278.004294 1548.305836\"\u003e\u003c/path\u003e\u003cpath d=\"M 1839 1709 H 1280 C 1279 1709 1279 1709 1279 1708 V 1551 C 1279 1550 1279 1550 1280 1550 H 1818 C 1819 1550 1819 1550 1819 1551 V 1568 C 1819 1569 1820 1570 1821 1570 H 1839 C 1840 1570 1840 1570 1840 1571 V 1708 C 1839 1709 1840 1709 1839 1709 Z\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003cpath d=\"M1837.000089 1707.340129 M1836.872188 1707.805398 C1658.388048 1708.795599, 1479.906667 1709.644599, 1279.370815 1707.157501 M1837.175870 1707.665609 C1645.888048 1708.616792, 1454.474743 1708.820307, 1279.670009 1707.155441 M1280 1707.340129 C1278.300226 1709.439561, 1279.492103 1709.716176, 1279.182482 1708.614681 M1279.343683 1707.896348 C1279.314793 1708.409092, 1279.297677 1708.200725, 1278.565322 1707.683957 M1278.619947 1708.497711 C1281.965142 1655.199962, 1281.782914 1608.067586, 1279.618124 1550.786559 M1278.197045 1708.602185 C1278.666005 1653.365316, 1278.630691 1597.642882, 1277.621895 1550.856267 M1278.565322 1551 C1280.591845 1549.984708, 1280.877899 1550.083688, 1279.824253 1550.527637 M1278.301508 1552.451469 C1278.648165 1551.575958, 1277.089523 1549.410416, 1279.843469 1549.099244 M1280.353599 1549.591421 C1445.595739 1551.869851, 1613.222573 1551.074878, 1817.476849 1548.883481 M1279.523407 1548.983568 C1393.039074 1545.207732, 1505.867197 1544.492340, 1818.185111 1549.405741 M1818 1549.099244 C1819.790043 1550.202846, 1818.620857 1549.225631, 1818.396741 1551.094980 M1817.646629 1549.152397 C1818.370531 1550.919488, 1819.617419 1549.436314, 1818.170655 1551.688764 M1818.395303 1551.972023 C1819.461177 1556.899490, 1816.996646 1561.371064, 1818.333752 1569.082845 M1817.668510 1551.142235 C1818.304999 1556.383747, 1818.554628 1559.452278, 1818.006057 1567.891990 M1818.170655 1568 C1817.928189 1567.646110, 1818.390200 1571.352214, 1819.377462 1568.505498 M1818.917608 1568.196015 C1819.828139 1569.119118, 1819.949649 1569.521807, 1823.357757 1571.330215 M1821.808676 1571.773839 C1829.374932 1571.740999, 1834.162983 1572.178875, 1838.579700 1571.032178 M1822.700728 1572.057164 C1829.598716 1570.817914, 1834.432215 1571.392044, 1838.766688 1571.545472 M1839 1571.330215 C1838.447668 1569.412918, 1840.998023 1569.599953, 1838.868289 1570.202387 M1840.342657 1570.763567 C1838.646200 1570.754313, 1841.487150 1571.221423, 1839.167713 1570.715536 M1840.670370 1569.477246 C1838.982345 1607.303424, 1839.135459 1643.814995, 1840.565199 1706.033909 M1838.403687 1570.394813 C1842.290013 1604.644801, 1841.906730 1636.317183, 1839.214317 1707.619842 M1839.167713 1708 C1837.998878 1707.850022, 1841.450321 1709.490399, 1837.820290 1707.229972 M1839.255482 1708.668620 C1838.259052 1707.710533, 1841.171308 1709.246640, 1837.723326 1707.708318 M1837.794427 1707.719321 C1837.499577 1707.623678, 1837.183221 1707.449295, 1836.998196 1707.329624 M1837.685022 1707.698766 C1837.574390 1707.610741, 1837.336526 1707.539647, 1837.038257 1707.301485\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003cpath d=\"M 1839 1709 H 1280 C 1279 1709 1279 1709 1279 1708 V 1551 C 1279 1550 1279 1550 1280 1550 H 1818 C 1819 1550 1819 1550 1819 1551 V 1568 C 1819 1569 1820 1570 1821 1570 H 1839 C 1840 1570 1840 1570 1840 1571 V 1708 C 1839 1709 1840 1709 1839 1709 Z\"\u003e\u003c/path\u003e\u003cpath d=\"M1837.000089 1707.340129 M1836.872188 1707.805398 C1658.388048 1708.795599, 1479.906667 1709.644599, 1279.370815 1707.157501 M1837.175870 1707.665609 C1645.888048 1708.616792, 1454.474743 1708.820307, 1279.670009 1707.155441 M1280 1707.340129 C1278.300226 1709.439561, 1279.492103 1709.716176, 1279.182482 1708.614681 M1279.343683 1707.896348 C1279.314793 1708.409092, 1279.297677 1708.200725, 1278.565322 1707.683957 M1278.619947 1708.497711 C1281.965142 1655.199962, 1281.782914 1608.067586, 1279.618124 1550.786559 M1278.197045 1708.602185 C1278.666005 1653.365316, 1278.630691 1597.642882, 1277.621895 1550.856267 M1278.565322 1551 C1280.591845 1549.984708, 1280.877899 1550.083688, 1279.824253 1550.527637 M1278.301508 1552.451469 C1278.648165 1551.575958, 1277.089523 1549.410416, 1279.843469 1549.099244 M1280.353599 1549.591421 C1445.595739 1551.869851, 1613.222573 1551.074878, 1817.476849 1548.883481 M1279.523407 1548.983568 C1393.039074 1545.207732, 1505.867197 1544.492340, 1818.185111 1549.405741 M1818 1549.099244 C1819.790043 1550.202846, 1818.620857 1549.225631, 1818.396741 1551.094980 M1817.646629 1549.152397 C1818.370531 1550.919488, 1819.617419 1549.436314, 1818.170655 1551.688764 M1818.395303 1551.972023 C1819.461177 1556.899490, 1816.996646 1561.371064, 1818.333752 1569.082845 M1817.668510 1551.142235 C1818.304999 1556.383747, 1818.554628 1559.452278, 1818.006057 1567.891990 M1818.170655 1568 C1817.928189 1567.646110, 1818.390200 1571.352214, 1819.377462 1568.505498 M1818.917608 1568.196015 C1819.828139 1569.119118, 1819.949649 1569.521807, 1823.357757 1571.330215 M1821.808676 1571.773839 C1829.374932 1571.740999, 1834.162983 1572.178875, 1838.579700 1571.032178 M1822.700728 1572.057164 C1829.598716 1570.817914, 1834.432215 1571.392044, 1838.766688 1571.545472 M1839 1571.330215 C1838.447668 1569.412918, 1840.998023 1569.599953, 1838.868289 1570.202387 M1840.342657 1570.763567 C1838.646200 1570.754313, 1841.487150 1571.221423, 1839.167713 1570.715536 M1840.670370 1569.477246 C1838.982345 1607.303424, 1839.135459 1643.814995, 1840.565199 1706.033909 M1838.403687 1570.394813 C1842.290013 1604.644801, 1841.906730 1636.317183, 1839.214317 1707.619842 M1839.167713 1708 C1837.998878 1707.850022, 1841.450321 1709.490399, 1837.820290 1707.229972 M1839.255482 1708.668620 C1838.259052 1707.710533, 1841.171308 1709.246640, 1837.723326 1707.708318 M1837.794427 1707.719321 C1837.499577 1707.623678, 1837.183221 1707.449295, 1836.998196 1707.329624 M1837.685022 1707.698766 C1837.574390 1707.610741, 1837.336526 1707.539647, 1837.038257 1707.301485\"\u003e\u003c/path\u003e\u003c/g\u003e\u003ctext x=\"1559.500000\" y=\"1607.500000\" style=\"text-anchor:middle;font-size:35px\"\u003e\u003ctspan x=\"1559.500000\" dy=\"0.000000\"\u003eMicro-app processes\u003c/tspan\u003e\u003ctspan x=\"1559.500000\" dy=\"38.000000\"\u003ecredentials \u0026amp; results\u003c/tspan\u003e\u003ctspan x=\"1559.500000\" dy=\"38.000000\"\u003eto successful authentication\u003c/tspan\u003e\u003c/text\u003e\u003c/g\u003e\u003cg id=\"sd.rnma1.\u0026#34;          Initializes RN Grocery shopping micro-app\\nbecause of a feature flag        \u0026#34;\"\u003e\u003cg\u003e\u003cpath d=\"M 1100 1898 H 1999 C 2000 1898 2001 1898 2002 1899 L 2019 1915 C 2020 1916 2020 1917 2020 1918 V 2022 C 2020 2022 2020 2022 2020 2022 H 1100 C 1099 2022 1099 2022 1099 2022 V 1899 C 1099 1898 1099 1898 1100 1898 Z\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003cpath d=\"M1098.000089 1896.340129 M1097.872188 1896.805398 C1386.335356 1892.174223, 1674.801283 1893.023223, 1998.370815 1896.157501 M1098.175870 1896.665609 C1407.232205 1894.530513, 1716.163058 1894.734029, 1998.670009 1896.155441 M1999 1896.340129 C1999.300226 1898.439561, 2001.492103 1898.716176, 2002.182482 1899.614681 M1998.343683 1896.896348 C2000.314793 1897.409092, 2001.297677 1897.200725, 2001.565322 1898.683957 M2001.619947 1899.497711 C2007.641514 1902.543213, 2013.111664 1911.497996, 2020.052801 1914.786559 M2001.197045 1899.602185 C2007.460728 1905.472050, 2013.554077 1910.562822, 2018.056573 1914.856267 M2019 1915 C2021.591845 1915.984708, 2021.877899 1917.083688, 2019.824253 1918.527637 M2018.736186 1916.451469 C2019.648165 1917.575958, 2018.089523 1916.410416, 2019.843469 1917.099244 M2021.118794 1918.329686 C2019.119291 1949.949471, 2022.460718 1980.376352, 2018.535591 2021.460591 M2019.043313 1916.810055 C2021.290925 1940.028777, 2020.894998 1960.264315, 2020.306247 2022.766241 M2019.843469 2022 C2021.975109 2022.507117, 2019.052144 2020.064078, 2018.491853 2022.237450 M2018.960042 2022.132881 C2018.426328 2024.298720, 2021.543547 2020.590787, 2017.926637 2023.721912 M2018.036818 2023.860839 C1710.579950 2020.205080, 1401.478429 2019.714830, 1100.079992 2024.253004 M2017.680355 2023.453861 C1794.771719 2020.937131, 1571.617166 2020.496197, 1099.919271 2023.668937 M1100 2023.721912 C1098.571275 2021.458444, 1098.356080 2022.540885, 1098.350985 2021.402199 M1100.298781 2023.800318 C1099.331255 2022.047647, 1098.979859 2021.808723, 1099.943103 2022.532086 M1097.962463 2023.099299 C1102.247962 1975.201896, 1100.616435 1927.871601, 1099.405712 1898.618933 M1099.103032 2023.461555 C1099.260972 1975.312704, 1097.886373 1929.384648, 1099.644793 1899.275225 M1099.943103 1899 C1097.447668 1897.412918, 1099.998023 1897.599953, 1098.868289 1897.202387 M1101.285760 1898.433351 C1097.646200 1898.754313, 1100.487150 1899.221423, 1099.167713 1897.715536 M1099.303267 1897.603830 C1098.701577 1897.258276, 1098.396164 1896.790087, 1098.126156 1896.162770 M1099.098791 1897.686603 C1098.894343 1897.475533, 1098.577981 1897.011993, 1098.004294 1896.305836\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003cpath d=\"M 1100 1898 H 1999 C 2000 1898 2001 1898 2002 1899 L 2019 1915 C 2020 1916 2020 1917 2020 1918 V 2022 C 2020 2022 2020 2022 2020 2022 H 1100 C 1099 2022 1099 2022 1099 2022 V 1899 C 1099 1898 1099 1898 1100 1898 Z\"\u003e\u003c/path\u003e\u003cpath d=\"M1098.000089 1896.340129 M1097.872188 1896.805398 C1386.335356 1892.174223, 1674.801283 1893.023223, 1998.370815 1896.157501 M1098.175870 1896.665609 C1407.232205 1894.530513, 1716.163058 1894.734029, 1998.670009 1896.155441 M1999 1896.340129 C1999.300226 1898.439561, 2001.492103 1898.716176, 2002.182482 1899.614681 M1998.343683 1896.896348 C2000.314793 1897.409092, 2001.297677 1897.200725, 2001.565322 1898.683957 M2001.619947 1899.497711 C2007.641514 1902.543213, 2013.111664 1911.497996, 2020.052801 1914.786559 M2001.197045 1899.602185 C2007.460728 1905.472050, 2013.554077 1910.562822, 2018.056573 1914.856267 M2019 1915 C2021.591845 1915.984708, 2021.877899 1917.083688, 2019.824253 1918.527637 M2018.736186 1916.451469 C2019.648165 1917.575958, 2018.089523 1916.410416, 2019.843469 1917.099244 M2021.118794 1918.329686 C2019.119291 1949.949471, 2022.460718 1980.376352, 2018.535591 2021.460591 M2019.043313 1916.810055 C2021.290925 1940.028777, 2020.894998 1960.264315, 2020.306247 2022.766241 M2019.843469 2022 C2021.975109 2022.507117, 2019.052144 2020.064078, 2018.491853 2022.237450 M2018.960042 2022.132881 C2018.426328 2024.298720, 2021.543547 2020.590787, 2017.926637 2023.721912 M2018.036818 2023.860839 C1710.579950 2020.205080, 1401.478429 2019.714830, 1100.079992 2024.253004 M2017.680355 2023.453861 C1794.771719 2020.937131, 1571.617166 2020.496197, 1099.919271 2023.668937 M1100 2023.721912 C1098.571275 2021.458444, 1098.356080 2022.540885, 1098.350985 2021.402199 M1100.298781 2023.800318 C1099.331255 2022.047647, 1098.979859 2021.808723, 1099.943103 2022.532086 M1097.962463 2023.099299 C1102.247962 1975.201896, 1100.616435 1927.871601, 1099.405712 1898.618933 M1099.103032 2023.461555 C1099.260972 1975.312704, 1097.886373 1929.384648, 1099.644793 1899.275225 M1099.943103 1899 C1097.447668 1897.412918, 1099.998023 1897.599953, 1098.868289 1897.202387 M1101.285760 1898.433351 C1097.646200 1898.754313, 1100.487150 1899.221423, 1099.167713 1897.715536 M1099.303267 1897.603830 C1098.701577 1897.258276, 1098.396164 1896.790087, 1098.126156 1896.162770 M1099.098791 1897.686603 C1098.894343 1897.475533, 1098.577981 1897.011993, 1098.004294 1896.305836\"\u003e\u003c/path\u003e\u003cpath d=\"M 2019 2022 H 1100 C 1099 2022 1099 2022 1099 2021 V 1899 C 1099 1898 1099 1898 1100 1898 H 1998 C 1999 1898 1999 1898 1999 1899 V 1916 C 1999 1917 2000 1918 2001 1918 H 2019 C 2020 1918 2020 1918 2020 1919 V 2021 C 2019 2022 2020 2022 2019 2022 Z\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003cpath d=\"M2017.000089 2020.340129 M2016.872188 2020.805398 C1723.092416 2023.183593, 1429.315404 2024.032593, 1099.370815 2020.157501 M2017.175870 2020.665609 C1702.346281 2022.378836, 1387.391208 2022.582351, 1099.670009 2020.155441 M1100 2020.340129 C1098.300226 2022.439561, 1099.492103 2022.716176, 1099.182482 2021.614681 M1099.343683 2020.896348 C1099.314793 2021.409092, 1099.297677 2021.200725, 1098.565322 2020.683957 M1098.619947 2021.497711 C1101.363060 1979.547075, 1101.180831 1943.761812, 1099.618124 1898.786559 M1098.197045 2021.602185 C1098.598445 1978.668566, 1098.563131 1935.249382, 1097.621895 1898.856267 M1098.565322 1899 C1100.591845 1897.984708, 1100.877899 1898.083688, 1099.824253 1898.527637 M1098.301508 1900.451469 C1098.648165 1899.575958, 1097.089523 1897.410416, 1099.843469 1897.099244 M1100.353599 1897.591421 C1376.835669 1901.606607, 1655.702433 1900.811635, 1997.476849 1896.883481 M1099.523407 1896.983568 C1288.621429 1890.362205, 1477.031908 1889.646814, 1998.185111 1897.405741 M1998 1897.099244 C1999.790043 1898.202846, 1998.620857 1897.225631, 1998.396741 1899.094980 M1997.646629 1897.152397 C1998.370531 1898.919488, 1999.617419 1897.436314, 1998.170655 1899.688764 M1998.395303 1899.972023 C1999.461177 1904.899490, 1996.996646 1909.371064, 1998.333752 1917.082845 M1997.668510 1899.142235 C1998.304999 1904.383747, 1998.554628 1907.452278, 1998.006057 1915.891990 M1998.170655 1916 C1997.928189 1915.646110, 1998.390200 1919.352214, 1999.377462 1916.505498 M1998.917608 1916.196015 C1999.828139 1917.119118, 1999.949649 1917.521807, 2003.357757 1919.330215 M2001.808676 1919.773839 C2009.374932 1919.740999, 2014.162983 1920.178875, 2018.579700 1919.032178 M2002.700728 1920.057164 C2009.598716 1918.817914, 2014.432215 1919.392044, 2018.766688 1919.545472 M2019 1919.330215 C2018.447668 1917.412918, 2020.998023 1917.599953, 2018.868289 1918.202387 M2020.342657 1918.763567 C2018.646200 1918.754313, 2021.487150 1919.221423, 2019.167713 1918.715536 M2020.670370 1917.477246 C2018.651187 1945.734529, 2018.804302 1972.677204, 2020.565199 2019.033909 M2018.403687 1918.394813 C2021.594975 1944.198135, 2021.211692 1967.423853, 2019.214317 2020.619842 M2019.167713 2021 C2017.998878 2020.850022, 2021.450321 2022.490399, 2017.820290 2020.229972 M2019.255482 2021.668620 C2018.259052 2020.710533, 2021.171308 2022.246640, 2017.723326 2020.708318 M2017.794427 2020.719321 C2017.499577 2020.623678, 2017.183221 2020.449295, 2016.998196 2020.329624 M2017.685022 2020.698766 C2017.574390 2020.610741, 2017.336526 2020.539647, 2017.038257 2020.301485\" style=\"stroke-width:2;\"\u003e\u003c/path\u003e\u003cpath d=\"M 2019 2022 H 1100 C 1099 2022 1099 2022 1099 2021 V 1899 C 1099 1898 1099 1898 1100 1898 H 1998 C 1999 1898 1999 1898 1999 1899 V 1916 C 1999 1917 2000 1918 2001 1918 H 2019 C 2020 1918 2020 1918 2020 1919 V 2021 C 2019 2022 2020 2022 2019 2022 Z\"\u003e\u003c/path\u003e\u003cpath d=\"M2017.000089 2020.340129 M2016.872188 2020.805398 C1723.092416 2023.183593, 1429.315404 2024.032593, 1099.370815 2020.157501 M2017.175870 2020.665609 C1702.346281 2022.378836, 1387.391208 2022.582351, 1099.670009 2020.155441 M1100 2020.340129 C1098.300226 2022.439561, 1099.492103 2022.716176, 1099.182482 2021.614681 M1099.343683 2020.896348 C1099.314793 2021.409092, 1099.297677 2021.200725, 1098.565322 2020.683957 M1098.619947 2021.497711 C1101.363060 1979.547075, 1101.180831 1943.761812, 1099.618124 1898.786559 M1098.197045 2021.602185 C1098.598445 1978.668566, 1098.563131 1935.249382, 1097.621895 1898.856267 M1098.565322 1899 C1100.591845 1897.984708, 1100.877899 1898.083688, 1099.824253 1898.527637 M1098.301508 1900.451469 C1098.648165 1899.575958, 1097.089523 1897.410416, 1099.843469 1897.099244 M1100.353599 1897.591421 C1376.835669 1901.606607, 1655.702433 1900.811635, 1997.476849 1896.883481 M1099.523407 1896.983568 C1288.621429 1890.362205, 1477.031908 1889.646814, 1998.185111 1897.405741 M1998 1897.099244 C1999.790043 1898.202846, 1998.620857 1897.225631, 1998.396741 1899.094980 M1997.646629 1897.152397 C1998.370531 1898.919488, 1999.617419 1897.436314, 1998.170655 1899.688764 M1998.395303 1899.972023 C1999.461177 1904.899490, 1996.996646 1909.371064, 1998.333752 1917.082845 M1997.668510 1899.142235 C1998.304999 1904.383747, 1998.554628 1907.452278, 1998.006057 1915.891990 M1998.170655 1916 C1997.928189 1915.646110, 1998.390200 1919.352214, 1999.377462 1916.505498 M1998.917608 1916.196015 C1999.828139 1917.119118, 1999.949649 1917.521807, 2003.357757 1919.330215 M2001.808676 1919.773839 C2009.374932 1919.740999, 2014.162983 1920.178875, 2018.579700 1919.032178 M2002.700728 1920.057164 C2009.598716 1918.817914, 2014.432215 1919.392044, 2018.766688 1919.545472 M2019 1919.330215 C2018.447668 1917.412918, 2020.998023 1917.599953, 2018.868289 1918.202387 M2020.342657 1918.763567 C2018.646200 1918.754313, 2021.487150 1919.221423, 2019.167713 1918.715536 M2020.670370 1917.477246 C2018.651187 1945.734529, 2018.804302 1972.677204, 2020.565199 2019.033909 M2018.403687 1918.394813 C2021.594975 1944.198135, 2021.211692 1967.423853, 2019.214317 2020.619842 M2019.167713 2021 C2017.998878 2020.850022, 2021.450321 2022.490399, 2017.820290 2020.229972 M2019.255482 2021.668620 C2018.259052 2020.710533, 2021.171308 2022.246640, 2017.723326 2020.708318 M2017.794427 2020.719321 C2017.499577 2020.623678, 2017.183221 2020.449295, 2016.998196 2020.329624 M2017.685022 2020.698766 C2017.574390 2020.610741, 2017.336526 2020.539647, 2017.038257 2020.301485\"\u003e\u003c/path\u003e\u003c/g\u003e\u003ctext x=\"1559.500000\" y=\"1955.500000\" style=\"text-anchor:middle;font-size:35px\"\u003e\u003ctspan x=\"1559.500000\" dy=\"0.000000\"\u003e          Initializes RN Grocery shopping micro-app\u003c/tspan\u003e\u003ctspan x=\"1559.500000\" dy=\"39.500000\"\u003ebecause of a feature flag        \u003c/tspan\u003e\u003c/text\u003e\u003c/g\u003e\u003cmask id=\"d2-2515248876\" maskUnits=\"userSpaceOnUse\" x=\"-100\" y=\"-100\" width=\"2652\" height=\"3179\"\u003e\n\u003crect x=\"-100\" y=\"-100\" width=\"2652\" height=\"3179\" fill=\"white\"\u003e\u003c/rect\u003e\n\u003crect x=\"1226.000000\" y=\"5.000000\" width=\"0\" height=\"0\" fill=\"rgba(0,0,0,0.75)\"\u003e\u003c/rect\u003e\n\u003crect x=\"19.500000\" y=\"182.000000\" width=\"86\" height=\"50\" fill=\"rgba(0,0,0,0.75)\"\u003e\u003c/rect\u003e\n\u003crect x=\"324.500000\" y=\"74.500000\" width=\"305\" height=\"130\" fill=\"rgba(0,0,0,0.75)\"\u003e\u003c/rect\u003e\n\u003crect x=\"714.500000\" y=\"154.500000\" width=\"503\" height=\"50\" fill=\"rgba(0,0,0,0.75)\"\u003e\u003c/rect\u003e\n\u003crect x=\"1302.500000\" y=\"74.500000\" width=\"515\" height=\"130\" fill=\"rgba(0,0,0,0.75)\"\u003e\u003c/rect\u003e\n\u003crect x=\"1902.500000\" y=\"74.500000\" width=\"515\" height=\"130\" fill=\"rgba(0,0,0,0.75)\"\u003e\u003c/rect\u003e\n\u003crect x=\"159.000000\" y=\"394.000000\" width=\"216\" height=\"44\" fill=\"black\"\u003e\u003c/rect\u003e\n\u003crect x=\"808.000000\" y=\"548.000000\" width=\"421\" height=\"114\" fill=\"black\"\u003e\u003c/rect\u003e\n\u003crect x=\"850.000000\" y=\"755.000000\" width=\"338\" height=\"79\" fill=\"black\"\u003e\u003c/rect\u003e\n\u003crect x=\"80.000000\" y=\"944.000000\" width=\"374\" height=\"79\" fill=\"black\"\u003e\u003c/rect\u003e\n\u003crect x=\"98.000000\" y=\"1133.000000\" width=\"338\" height=\"79\" fill=\"black\"\u003e\u003c/rect\u003e\n\u003crect x=\"719.000000\" y=\"1322.000000\" width=\"599\" height=\"79\" fill=\"black\"\u003e\u003c/rect\u003e\n\u003crect x=\"1078.000000\" y=\"2154.000000\" width=\"371\" height=\"114\" fill=\"black\"\u003e\u003c/rect\u003e\n\u003crect x=\"1396.000000\" y=\"2378.000000\" width=\"335\" height=\"44\" fill=\"black\"\u003e\u003c/rect\u003e\n\u003crect x=\"1100.000000\" y=\"2550.000000\" width=\"438\" height=\"79\" fill=\"black\"\u003e\u003c/rect\u003e\n\u003crect x=\"80.000000\" y=\"2704.000000\" width=\"374\" height=\"149\" fill=\"black\"\u003e\u003c/rect\u003e\n\u003crect x=\"1301.500000\" y=\"1572.500000\" width=\"516\" height=\"114\" fill=\"rgba(0,0,0,0.75)\"\u003e\u003c/rect\u003e\n\u003crect x=\"1121.500000\" y=\"1920.500000\" width=\"876\" height=\"79\" fill=\"rgba(0,0,0,0.75)\"\u003e\u003c/rect\u003e\n\u003c/mask\u003e\u003c/svg\u003e\u003c/svg\u003e\n\u003c/p\u003e\n\n\n\u003c/div\u003e\n\n\n\n\u003cp\u003eThe interaction diagram above shows an example journey flow\n        within the embedded app. One thing to notice is the amount\n        of branching complexity across a journey that is carrying\n        out just two concurrent experiments. We speak more on accidental complexity later in this section. \u003c/p\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://martinfowler.com/bliki/TestPyramid.html\"\u003etest\n        pyramid\u003c/a\u003e is a well known heuristic that recommends a\n        relationship between the cost of a test (maintenance and\n        writing) and its quantity in the system. Our client had kept\n        to the test pyramid and we found unit, subcutaneous and\n        journey-centric UI-driving tests when we examined their\n        code. The solution therefore was to continue to follow the\n        pattern: Expanding the number of tests across all layers and\n        also extending the suite of journey tests to incorporate the\n        jumping in and out of our embedded Strangler Fig app. But\n        there was a potential problem, ownership. We realized\n        that it would be unreasonable to tie the success of another\n        team’s build to code they did not write or were in control of.\n        We therefore proposed the following test strategy across\n        teams:\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\u003cth\u003eTest Type\u003c/th\u003e\u003cth\u003eNative\u003c/th\u003e\u003cth\u003eReact Native\u003c/th\u003e\u003c/tr\u003e\n\u003c/thead\u003e\n\n\u003ctbody\u003e\n\u003ctr\u003e\u003ctd\u003eUnit\u003c/td\u003e\u003ctd\u003eX\u003c/td\u003e\u003ctd\u003eX\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eSubcutaneous\u003c/td\u003e\u003ctd\u003eX\u003c/td\u003e\u003ctd\u003eX\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eLegacy Journey\u003c/td\u003e\u003ctd\u003eX\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003ee2e Micro-app Journey\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003ctd\u003eX\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003eContract tests for interactions with ‘The Bridge’ (journeys with both legacy and micro-app components)\u003c/td\u003e\u003ctd\u003eX\u003c/td\u003e\u003ctd\u003eX\u003c/td\u003e\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eOn the last table row, by contract we simply mean: \u003c/p\u003e\n\n\u003cp\u003e\u003ci\u003eIf I interact with the bridge interface a particular way, I\n          expect a specific event to fire\u003c/i\u003e\u003c/p\u003e\n\n\u003cp\u003eFor Native to RN interactions, these contracts act as blueprints\n        for micro-apps and enable unit testing with mocks. Mocks\n        simulate the behavior of the micro-app, ensuring it utilizes\n        the required context correctly.\u003c/p\u003e\n\n\u003cp\u003eThe other way around (RN to Native) was similar. We identified\n        the Native functionality we wished to call through the\n        Bridge. RN then provided us with an object called\n        NativeModules which, when mocked, allowed us to assert\n        against the resulting context. \u003c/p\u003e\n\n\u003cp\u003eDefining these boundaries of responsibility meant that we could\n        limit the ‘regression-related’ cognitive load on teams through\n        ‘hand-off’ points without compromising on overall app test\n        coverage.\u003c/p\u003e\n\n\u003cp\u003eThis strategy was largely well received by both the native and\n        non-native teams. Where we did run into friction was the\n        complexity behind the implementation of the contract tests\n        across the bridge. The team running the legacy application\n        simply did not have the bandwidth to understand and write a\n        new category of tests. As a compromise, for the duration of\n        the PoC, all contract tests were written by the React Native\n        team. From this we learned that any interstitial state\n        required thought to be paid to the developer experience. In\n        our case, simply layering complexity to achieve our goals\n        was only part of the problem to be solved.\u003c/p\u003e\n\u003c/section\u003e\n\n\u003csection id=\"CreatingTheExperiment\"\u003e\n\u003ch3\u003eCreating the Experiment \u003c/h3\u003e\n\n\u003cp\u003eBringing everything together to form an experiment was the last\n        hurdle we had to overcome. We needed a means to be able to\n        demonstrate measurable success from two different\n        experiences and also have an ability to quickly backout and\n        revert a change if things were going wrong. \u003c/p\u003e\n\n\u003cp\u003eThe organization had an existing integration with an\n        experimentation tool, so out of ease, we chose it as our\n        tool for metric capture and experiment measurement. For experiment\n        user selection, we decided device level user selection (IMEI\n        number) would be more representative. This was due to the\n        potential for multiple device usage across a single account\n        skewing the results. \u003c/p\u003e\n\n\u003cp\u003eWe also utilized the feature\n        flagging component of the experimentation tool to allow us to ‘turn off’ the experiment (revert to\n        native app only) without the need for a release; greatly\n        reducing the time taken to recover should any outage occur.\u003c/p\u003e\n\u003c/section\u003e\n\u003c/section\u003e\n\n\u003cdiv\u003e\n\u003cp\u003eWe\u0026#39;re releasing this article in installments. The next and final\n        installment will describe the results of this experiment: how it altered\n        time to value and cycle time.\u003c/p\u003e\n\n\u003cp\u003e To find out when we publish the next installment subscribe to this\n        site\u0026#39;s\n        \u003ca href=\"https://martinfowler.com/feed.atom\"\u003eRSS feed\u003c/a\u003e, or Martin\u0026#39;s feeds on \n        \u003ca href=\"https://toot.thoughtworks.com/@mfowler\"\u003eMastodon\u003c/a\u003e,\n        \u003ca href=\"https://www.linkedin.com/in/martin-fowler-com/\"\u003eLinkedIn\u003c/a\u003e, or\n        \u003ca href=\"https://twitter.com/martinfowler\"\u003eX (Twitter)\u003c/a\u003e.\n        \u003c/p\u003e\n\n\u003c/div\u003e\n\n\u003chr/\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "29 min read",
  "publishedTime": null,
  "modifiedTime": "2024-10-30T00:00:00Z"
}
