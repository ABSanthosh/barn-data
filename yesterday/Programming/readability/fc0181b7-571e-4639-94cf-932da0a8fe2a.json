{
  "id": "fc0181b7-571e-4639-94cf-932da0a8fe2a",
  "title": "A Chain Reaction",
  "link": "https://overreacted.io/a-chain-reaction/",
  "description": "The limits of my language mean the limits of my world.",
  "author": "",
  "published": "Mon, 11 Dec 2023 00:00:00 GMT",
  "source": "https://overreacted.io/rss.xml",
  "categories": null,
  "byline": "",
  "length": 16884,
  "excerpt": "The limits of my language mean the limits of my world.",
  "siteName": "",
  "favicon": "https://overreacted.io/icon.png?e0852c1e2c7f0e65",
  "text": "I wrote a bit of JSX in my editor: \u003cp className=\"text-2xl font-sans text-purple-400 dark:text-purple-500\"\u003e Hello, \u003ci\u003eAlice\u003c/i\u003e! \u003c/p\u003e Right now, this information only exists on my device. But with a bit of luck, it will travel through time and space to your device, and appear on your screen. Hello, Alice! The fact that this works is a marvel of engineering. Deep inside of your browser, there are pieces of code that know how to display a paragraph or draw text in italics. These pieces of code are different between different browsers, and even between different versions of the same browser. Drawing to the screen is also done differently on different operating systems. However, because these concepts have been given agreed-upon names (\u003cp\u003e for a paragraph, \u003ci\u003e for italics), I can refer to them without worrying how they really work on your device. I can’t directly access their internal logic but I know which information I can pass to them (such as a CSS className). Thanks to the web standards, I can be reasonably sure my greeting will appear as I intended. Tags like \u003cp\u003e and \u003ci\u003e let us refer to the built-in browser concepts. However, names don’t have to refer to something built-in. For example, I’m using CSS classes like text-2xl and font-sans to style my greeting. I didn’t come up with those names myself—they come from a CSS library called Tailwind. I’ve included it on this page which lets me use any of the CSS class names it defines. So why do we like giving names to things? I wrote \u003cp\u003e and \u003ci\u003e, and my editor recognized those names. So did your browser. If you’ve done some web development, you probably recognized them too, and maybe even guessed what would appear on the screen by reading the markup. In that sense, names help us start with a bit of a shared understanding. Fundamentally, computers execute relatively basic kinds of instructions—like adding or multiplying numbers, writing stuff to memory and reading from it, or communicating with external devices like a display. Merely showing a \u003cp\u003e on your screen could involve running hundreds of thousands of such instructions. If you saw all the instructions your computer ran to display a \u003cp\u003e on the screen, you could hardly guess what they’re doing. It’s like trying to figure out which song is playing by analyzing all the atoms bouncing around the room. It would seem incomprehensible! You’d need to “zoom out” to see what’s going on. To describe a complex system, or to instruct a complex system what to do, it helps to separate its behavior into layers that build on each other’s concepts. This way, people working on screen drivers can focus on how to send the right colors to the right pixels. Then people working on text rendering can focus on how each character should turn into a bunch of pixels. And that lets people like me focus on picking just the right color for my “paragraphs” and “italics”. We like names because they let us forget what’s behind them. I’ve used many names that other people came up with. Some are built into the browsers, like \u003cp\u003e and \u003ci\u003e. Some are built into the tools I’m using, like text-2xl and font-sans. These may be my building blocks, but what am I building? For example, what is this? \u003cp className=\"text-2xl font-sans text-purple-400 dark:text-purple-500\"\u003e Hello, \u003ci\u003eAlice\u003c/i\u003e! \u003c/p\u003e Hello, Alice! From your browser’s perspective, this is a paragraph with certain CSS classes (which make it large and purple) and some text inside (part of it is in italics). But from my perspective, it’s a greeting for Alice. Although my greeting happens to be a paragraph, most of the time I want to think about it this way instead: \u003cGreeting person={alice} /\u003e Giving this concept a name provides me with some newfound flexibility. I can now display multiple Greetings without copying and pasting their markup. I can pass different data to them. If I wanted to change how all greetings look and behave, I could do it in a single place. Turning Greeting into its own concept lets me adjust “which greetings to display” separately from “what a greeting is”. However, I have also introduced a problem. Now that I’ve given this concept a name, the “language” in my mind is different from the “language” that your browser speaks. Your browser knows about \u003cp\u003e and \u003ci\u003e, but it has never heard of a \u003cGreeting\u003e—that’s my own concept. If I wanted your browser to understand what I mean, I’d have to “translate” this piece of markup to only use the concepts that your browser already knows. I’d need to turn this: \u003cGreeting person={alice} /\u003e into this: \u003cp className=\"text-2xl font-sans text-purple-400 dark:text-purple-500\"\u003e Hello, \u003ci\u003eAlice\u003c/i\u003e! \u003c/p\u003e How would I go about that? To name something, I need to define it. For example, alice does not mean anything until I define alice: const alice = { firstName: 'Alice', birthYear: 1970 }; Now alice refers to that JavaScript object. Similarly, I need to actually define what my concept of a Greeting means. I will define a Greeting for any person as a paragraph showing “Hello, ” followed by that person’s first name in italics, plus an exclamation mark: function Greeting({ person }) { return ( \u003cp className=\"text-2xl font-sans text-purple-400 dark:text-purple-500\"\u003e Hello, \u003ci\u003e{person.firstName}\u003c/i\u003e! \u003c/p\u003e ); } Unlike alice, I defined Greeting as a function. This is because a greeting would have to be different for every person. Greeting is a piece of code—it performs a transformation or a translation. It turns some data into some UI. That gives me an idea for what to do with this: \u003cGreeting person={alice} /\u003e Your browser wouldn’t know what a Greeting is—that’s my own concept. But now that I wrote a definition for that concept, I can apply this definition to “unpack” what I meant. You see, a greeting for a person is actually a paragraph: function Greeting({ person }) { return ( \u003cp className=\"text-2xl font-sans text-purple-400 dark:text-purple-500\"\u003e Hello, \u003ci\u003e{person.firstName}\u003c/i\u003e! \u003c/p\u003e ); } Plugging the alice’s data into that definition, I end up with this final JSX: \u003cp className=\"text-2xl font-sans text-purple-400 dark:text-purple-500\"\u003e Hello, \u003ci\u003eAlice\u003c/i\u003e! \u003c/p\u003e At this point I only refer to the browser’s own concepts. By substituting the Greeting with what I defined it to be, I have “translated” it for your browser. Hello, Alice! Now let’s teach a computer to do the same thing. Take a look at what JSX is made of. const originalJSX = \u003cGreeting person={alice} /\u003e; console.log(originalJSX.type); // Greeting console.log(originalJSX.props); // { person: { firstName: 'Alice', birthYear: 1970 } } Under the hood, JSX constructs an object with the type property corresponding to the tag, and the props property corresponding to the JSX attributes. You can think of type as being the “code” and props as being the “data”. To get the result, you need to plug that data into that code like I’ve done earlier. Here is a little function I wrote that does exactly that: function translateForBrowser(originalJSX) { const { type, props } = originalJSX; return type(props); } In this case, type will be Greeting and props will be { person: alice }, so translateForBrowser(\u003cGreeting person={alice} /\u003e) will return the result of calling Greeting with { person: alice } as the argument. Which, as you might recall from the previous section, would give me this: \u003cp className=\"text-2xl font-sans text-purple-400 dark:text-purple-500\"\u003e Hello, \u003ci\u003eAlice\u003c/i\u003e! \u003c/p\u003e And that’s exactly what I wanted! You can verify that feeding my original piece of JSX to translateForBrowser will produce the “browser JSX” that only refers to concepts like \u003cp\u003e and \u003ci\u003e. const originalJSX = \u003cGreeting person={alice} /\u003e; console.log(originalJSX.type); // Greeting console.log(originalJSX.props); // { person: { firstName: 'Alice', birthYear: 1970 } } const browserJSX = translateForBrowser(originalJSX); console.log(browserJSX.type); // 'p' console.log(browserJSX.props); // { className: 'text-2xl font-sans text-purple-400 dark:text-purple-500', children: ['Hello', { type: 'i', props: { children: 'Alice' }, '!'] } There are many things I could do with that “browser JSX”. For example, I could turn it into an HTML string to be sent to the browser. I could also convert it into a sequence of instructions that update an already existing DOM node. For now, I won’t be focusing on the different ways to use it. All that matters right now is that by the time I have the “browser JSX”, there is nothing left to “translate”. It’s as if my \u003cGreeting\u003e has dissolved, and \u003cp\u003e and \u003ci\u003e are the residue. Let’s try something a tiny bit more complex. Suppose I want to wrap my greeting inside a \u003cdetails\u003e tag so that it appears collapsed by default: \u003cdetails\u003e \u003cGreeting person={alice} /\u003e \u003c/details\u003e The browser should display it like this (click “Details” to expand it!) Hello, Alice! So now my task is to figure out how to turn this: \u003cdetails\u003e \u003cGreeting person={alice} /\u003e \u003c/details\u003e into this: \u003cdetails\u003e \u003cp className=\"text-2xl font-sans text-purple-400 dark:text-purple-500\"\u003e Hello, \u003ci\u003eAlice\u003c/i\u003e! \u003c/p\u003e \u003c/details\u003e Let’s see if translateForBrowser can already handle that. const originalJSX = ( \u003cdetails\u003e \u003cGreeting person={alice} /\u003e \u003c/details\u003e ); console.log(originalJSX.type); // 'details' console.log(originalJSX.props); // { children: { type: Greeting, props: { person: alice } } } const browserJSX = translateForBrowser(originalJSX); You will get an error inside of the translateForBrowser call: function translateForBrowser(originalJSX) { const { type, props } = originalJSX; return type(props); // 🔴 TypeError: type is not a function } What happened here? My translateForBrowser implementation assumed that type—that is, originalJSX.type—is always a function like Greeting. However, notice that originalJSX.type is actually a string this time: const originalJSX = ( \u003cdetails\u003e \u003cGreeting person={alice} /\u003e \u003c/details\u003e ); console.log(originalJSX.type); // 'details' console.log(originalJSX.props); // { children: { type: Greeting, props: { person: alice } } } When you start a JSX tag with a lower case (like \u003cdetails\u003e), by convention it’s assumed that you want a built-in tag rather than some function you defined. Since built-in tags don’t have any code associated with them (that code is somewhere inside your browser!), the type will be a string like 'details'. How \u003cdetails\u003e work is opaque to my code—all I really know is its name. Let’s split the logic in two cases, and skip translating the built-ins for now: function translateForBrowser(originalJSX) { const { type, props } = originalJSX; if (typeof type === 'function') { return type(props); } else if (typeof type === 'string') { return originalJSX; } } After this change, translateForBrowser will only attempt to call some function if the original JSX’s type actually is a function like Greeting. So that’s the result I wanted, right?… \u003cdetails\u003e \u003cGreeting person={alice} /\u003e \u003c/details\u003e Wait. What I wanted is this: \u003cdetails\u003e \u003cp className=\"text-2xl font-sans text-purple-400 dark:text-purple-500\"\u003e Hello, \u003ci\u003eAlice\u003c/i\u003e! \u003c/p\u003e \u003c/details\u003e In my translation process, I want to skip over the \u003cdetails\u003e tag because its implementation is opaque to me. I can’t do anything useful with it—it is fully up to the browser. However, anything inside of it may still need to be translated! Let’s fix translateForBrowser to translate any built-in tag’s children: function translateForBrowser(originalJSX) { const { type, props } = originalJSX; if (typeof type === 'function') { return type(props); } else if (typeof type === 'string') { return { type, props: { ...props, children: translateForBrowser(props.children) } }; } } With this change, when it meets an element like \u003cdetails\u003e...\u003c/details\u003e, it will return another \u003cdetails\u003e...\u003c/details\u003e tag, but the stuff inside of it would be translated with my function again—so the Greeting will be gone: \u003cdetails\u003e \u003cp className=\"text-2xl font-sans text-purple-400 dark:text-purple-500\"\u003e Hello, \u003ci\u003eAlice\u003c/i\u003e! \u003c/p\u003e \u003c/details\u003e And now I am speaking the browser’s “language” again: Hello, Alice! The Greeting has been dissolved. Now suppose that I try to define an ExpandableGreeting: function ExpandableGreeting({ person }) { return ( \u003cdetails\u003e \u003cGreeting person={person} /\u003e \u003c/details\u003e ); } Here is my new original JSX: \u003cExpandableGreeting person={alice} /\u003e If I run it through translateForBrowser, I’ll get this JSX in return: \u003cdetails\u003e \u003cGreeting person={alice} /\u003e \u003c/details\u003e But that’s not what I wanted! It still has a Greeting in it, and we don’t consider a piece of JSX “browser-ready” until all of my own concepts are gone. This is a bug in my translateForBrowser function. When it calls a function like ExpandableGreeting, it will return its output, and not do anything else. But we need to keep on going! That returned JSX also needs to be translated. Luckily, there is an easy way I can solve this. When I call a function like ExpandableGreeting, I can take the JSX it returned and translate that next: function translateForBrowser(originalJSX) { const { type, props } = originalJSX; if (typeof type === 'function') { const returnedJSX = type(props); return translateForBrowser(returnedJSX); } else if (typeof type === 'string') { return { type, props: { ...props, children: translateForBrowser(props.children) } }; } } I also need to stop the process when there’s nothing left to translate, like if it receives null or a string. If it receives an array of things, I need to translate each of them. With these two fixes, translateForBrowser is complete: function translateForBrowser(originalJSX) { if (originalJSX == null || typeof originalJSX !== 'object') { return originalJSX; } if (Array.isArray(originalJSX)) { return originalJSX.map(translateForBrowser); } const { type, props } = originalJSX; if (typeof type === 'function') { const returnedJSX = type(props); return translateForBrowser(returnedJSX); } else if (typeof type === 'string') { return { type, props: { ...props, children: translateForBrowser(props.children) } }; } } Now, suppose that I start with this: \u003cExpandableGreeting person={alice} /\u003e It will turn into this: \u003cdetails\u003e \u003cGreeting person={alice} /\u003e \u003c/details\u003e Which will turn into this: \u003cdetails\u003e \u003cp className=\"text-2xl font-sans text-purple-400 dark:text-purple-500\"\u003e Hello, \u003ci\u003eAlice\u003c/i\u003e! \u003c/p\u003e \u003c/details\u003e And at that point, the process will stop. Let’s see how this works one more time, with a bit of extra depth. I’ll define WelcomePage like this: function WelcomePage() { return ( \u003csection\u003e \u003ch1 className=\"text-3xl font-sans pb-2\"\u003eWelcome\u003c/h1\u003e \u003cExpandableGreeting person={alice} /\u003e \u003cExpandableGreeting person={bob} /\u003e \u003cExpandableGreeting person={crystal} /\u003e \u003c/section\u003e ); } Now let’s say I start the process with this original JSX: Can you retrace the sequence of transformations in your head? Let’s do it step by step together. First, imagine WelcomePage dissolving, leaving behind its output: \u003csection\u003e \u003ch1 className=\"text-3xl font-sans pb-2\"\u003eWelcome\u003c/h1\u003e \u003cExpandableGreeting person={alice} /\u003e \u003cExpandableGreeting person={bob} /\u003e \u003cExpandableGreeting person={crystal} /\u003e \u003c/section\u003e Then imagine each ExpandableGreeting dissolving, leaving behind its output: \u003csection\u003e \u003ch1 className=\"text-3xl font-sans pb-2\"\u003eWelcome\u003c/h1\u003e \u003cdetails\u003e \u003cGreeting person={alice} /\u003e \u003c/details\u003e \u003cdetails\u003e \u003cGreeting person={bob} /\u003e \u003c/details\u003e \u003cdetails\u003e \u003cGreeting person={crystal} /\u003e \u003c/details\u003e \u003c/section\u003e Then imagine each Greeting dissolving, leaving behind its output: \u003csection\u003e \u003ch1 className=\"text-3xl font-sans pb-2\"\u003eWelcome\u003c/h1\u003e \u003cdetails\u003e \u003cp className=\"text-2xl font-sans text-purple-400 dark:text-purple-500\"\u003e Hello, \u003ci\u003eAlice\u003c/i\u003e! \u003c/p\u003e \u003c/details\u003e \u003cdetails\u003e \u003cp className=\"text-2xl font-sans text-purple-400 dark:text-purple-500\"\u003e Hello, \u003ci\u003eBob\u003c/i\u003e! \u003c/p\u003e \u003c/details\u003e \u003cdetails\u003e \u003cp className=\"text-2xl font-sans text-purple-400 dark:text-purple-500\"\u003e Hello, \u003ci\u003eCrystal\u003c/i\u003e! \u003c/p\u003e \u003c/details\u003e \u003c/section\u003e And now there is nothing left to “translate”. All my concepts have dissolved. WelcomeHello, Alice!Hello, Bob!Hello, Crystal! This feels like a chain reaction. You mix a bit of data and code, and it keeps transforming until there is no more code to run, and only the residue is left. It would be nice if there was a library that could do this for us. But wait, here’s a question. These transformations have to happen somewhere on the way between your computer and mine. So where do they happen? Do they happen on your computer? Or do they happen on mine?Discuss on Bluesky  ·  Edit on GitHub",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cp\u003eI wrote a bit of JSX in my editor:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e className=\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003etext-2xl font-sans text-purple-400 dark:text-purple-500\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  Hello, \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003eAlice\u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003e!\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eRight now, this information only exists on \u003cem\u003emy\u003c/em\u003e device. But with a bit of luck, it will travel through time and space to \u003cem\u003eyour\u003c/em\u003e device, and appear on \u003cem\u003eyour\u003c/em\u003e screen.\u003c/p\u003e\n\u003cp\u003eHello, \u003ci\u003eAlice\u003c/i\u003e!\u003c/p\u003e\n\u003cp\u003eThe fact that this works is a marvel of engineering.\u003c/p\u003e\n\u003cp\u003eDeep inside of your browser, there are pieces of code that know how to display a paragraph or draw text in italics. These pieces of code are different between different browsers, and even between different versions of the same browser. Drawing to the screen is also done differently on different operating systems.\u003c/p\u003e\n\u003cp\u003eHowever, because these concepts have been given agreed-upon \u003cem\u003enames\u003c/em\u003e (\u003ca target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p\"\u003e\u003ccode\u003e\u0026lt;p\u0026gt;\u003c/code\u003e\u003c/a\u003e for a paragraph, \u003ca target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i\"\u003e\u003ccode\u003e\u0026lt;i\u0026gt;\u003c/code\u003e\u003c/a\u003e for italics), I can refer to them without worrying how they \u003cem\u003ereally\u003c/em\u003e work on your device. I can’t directly access their internal logic but I know which information I can pass to them (such as a CSS \u003ca target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/className\"\u003e\u003ccode\u003eclassName\u003c/code\u003e\u003c/a\u003e). Thanks to the web standards, I can be reasonably sure my greeting will appear as I intended.\u003c/p\u003e\n\u003cp\u003eTags like \u003ccode\u003e\u0026lt;p\u0026gt;\u003c/code\u003e and \u003ccode\u003e\u0026lt;i\u0026gt;\u003c/code\u003e let us refer to the built-in browser concepts. However, names don’t \u003cem\u003ehave to\u003c/em\u003e refer to something built-in. For example, I’m using CSS classes like \u003ca target=\"_blank\" href=\"https://tailwindcss.com/docs/font-size\"\u003e\u003ccode\u003etext-2xl\u003c/code\u003e\u003c/a\u003e and \u003ca target=\"_blank\" href=\"https://tailwindcss.com/docs/font-family\"\u003e\u003ccode\u003efont-sans\u003c/code\u003e\u003c/a\u003e to style my greeting. I didn’t come up with those names myself—they come from a CSS library called Tailwind. I’ve included it on this page which lets me use any of the CSS class names it defines.\u003c/p\u003e\n\u003cp\u003eSo why do we like giving names to things?\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003eI wrote \u003ccode\u003e\u0026lt;p\u0026gt;\u003c/code\u003e and \u003ccode\u003e\u0026lt;i\u0026gt;\u003c/code\u003e, and my editor recognized those names. So did your browser. If you’ve done some web development, you probably recognized them too, and maybe even guessed what would appear on the screen by reading the markup. In that sense, names help us start with a bit of a shared understanding.\u003c/p\u003e\n\u003cp\u003eFundamentally, computers execute relatively basic kinds of instructions—like adding or multiplying numbers, writing stuff to memory and reading from it, or communicating with external devices like a display. Merely showing a \u003ccode\u003e\u0026lt;p\u0026gt;\u003c/code\u003e on your screen could involve running hundreds of thousands of such instructions.\u003c/p\u003e\n\u003cp\u003eIf you saw all the instructions your computer ran to display a \u003ccode\u003e\u0026lt;p\u0026gt;\u003c/code\u003e on the screen, you could hardly guess what they’re doing. It’s like trying to figure out which song is playing by analyzing all the atoms bouncing around the room. It would seem incomprehensible! You’d need to “zoom out” to see what’s going on.\u003c/p\u003e\n\u003cp\u003eTo describe a complex system, or to instruct a complex system what to do, it helps to separate its behavior into layers that build on each other’s concepts.\u003c/p\u003e\n\u003cp\u003eThis way, people working on screen drivers can focus on how to send the right colors to the right pixels. Then people working on text rendering can focus on how each character should turn into a bunch of pixels. And that lets people like me focus on picking just the right color for my “paragraphs” and “italics”.\u003c/p\u003e\n\u003cp\u003eWe like names because they let us forget what’s behind them.\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003eI’ve used many names that other people came up with. Some are built into the browsers, like \u003ccode\u003e\u0026lt;p\u0026gt;\u003c/code\u003e and \u003ccode\u003e\u0026lt;i\u0026gt;\u003c/code\u003e. Some are built into the tools I’m using, like \u003ccode\u003etext-2xl\u003c/code\u003e and \u003ccode\u003efont-sans\u003c/code\u003e. These may be my building blocks, but what am \u003cem\u003eI\u003c/em\u003e building?\u003c/p\u003e\n\u003cp\u003eFor example, what is this?\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e className=\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003etext-2xl font-sans text-purple-400 dark:text-purple-500\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  Hello, \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003eAlice\u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003e!\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHello, \u003ci\u003eAlice\u003c/i\u003e!\u003c/p\u003e\n\u003cp\u003eFrom your browser’s perspective, this is a paragraph with certain CSS classes (which make it large and purple) and some text inside (part of it is in italics).\u003c/p\u003e\n\u003cp\u003eBut from \u003cem\u003emy\u003c/em\u003e perspective, it’s \u003cem\u003ea greeting for Alice.\u003c/em\u003e Although my greeting \u003cem\u003ehappens\u003c/em\u003e to be a paragraph, most of the time I want to think about it this way instead:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eGreeting\u003c/span\u003e\u003cspan\u003e person={\u003c/span\u003e\u003cspan\u003ealice\u003c/span\u003e\u003cspan\u003e} /\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eGiving this concept a name provides me with some newfound flexibility. I can now display multiple \u003ccode\u003eGreeting\u003c/code\u003es without copying and pasting their markup. I can pass different data to them. If I wanted to change how all greetings look and behave, I could do it in a single place. Turning \u003ccode\u003eGreeting\u003c/code\u003e into its own concept lets me adjust \u003cem\u003e“which greetings to display”\u003c/em\u003e separately from \u003cem\u003e“what a greeting is”\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eHowever, I have also introduced a problem.\u003c/p\u003e\n\u003cp\u003eNow that I’ve given this concept a name, the “language” in my mind is different from the “language” that your browser speaks. Your browser knows about \u003ccode\u003e\u0026lt;p\u0026gt;\u003c/code\u003e and \u003ccode\u003e\u0026lt;i\u0026gt;\u003c/code\u003e, but it has never heard of a \u003ccode\u003e\u0026lt;Greeting\u0026gt;\u003c/code\u003e—that’s my own concept. If I wanted your browser to understand what I mean, I’d have to “translate” this piece of markup to only use the concepts that your browser already knows.\u003c/p\u003e\n\u003cp\u003eI’d need to turn this:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eGreeting\u003c/span\u003e\u003cspan\u003e person={\u003c/span\u003e\u003cspan\u003ealice\u003c/span\u003e\u003cspan\u003e} /\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003einto this:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e className=\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003etext-2xl font-sans text-purple-400 dark:text-purple-500\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  Hello, \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003eAlice\u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003e!\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHow would I go about that?\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003eTo name something, I need to define it.\u003c/p\u003e\n\u003cp\u003eFor example, \u003ccode\u003ealice\u003c/code\u003e does not mean anything until I define \u003ccode\u003ealice\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003econst \u003c/span\u003e\u003cspan\u003ealice\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003efirstName\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003cspan\u003eAlice\u003c/span\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003ebirthYear\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e1970\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e};\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow \u003ccode\u003ealice\u003c/code\u003e refers to that JavaScript object.\u003c/p\u003e\n\u003cp\u003eSimilarly, I need to actually \u003cem\u003edefine\u003c/em\u003e what my concept of a \u003ccode\u003eGreeting\u003c/code\u003e means.\u003c/p\u003e\n\u003cp\u003eI will define a \u003ccode\u003eGreeting\u003c/code\u003e for any \u003ccode\u003eperson\u003c/code\u003e as a paragraph showing “Hello, ” followed by \u003cem\u003ethat\u003c/em\u003e person’s first name in italics, plus an exclamation mark:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003efunction\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eGreeting\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e{ person }\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003ereturn\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e className=\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003etext-2xl font-sans text-purple-400 dark:text-purple-500\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e      Hello, \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;{\u003c/span\u003e\u003cspan\u003eperson\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003efirstName\u003c/span\u003e\u003cspan\u003e}\u0026lt;/\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003e!\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eUnlike \u003ccode\u003ealice\u003c/code\u003e, I defined \u003ccode\u003eGreeting\u003c/code\u003e as a function. This is because \u003cem\u003ea greeting\u003c/em\u003e would have to be different for every person. \u003ccode\u003eGreeting\u003c/code\u003e is a piece of code—it performs a \u003cem\u003etransformation\u003c/em\u003e or a \u003cem\u003etranslation\u003c/em\u003e. It \u003cem\u003eturns\u003c/em\u003e some data into some UI.\u003c/p\u003e\n\u003cp\u003eThat gives me an idea for what to do with this:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eGreeting\u003c/span\u003e\u003cspan\u003e person={\u003c/span\u003e\u003cspan\u003ealice\u003c/span\u003e\u003cspan\u003e} /\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYour browser wouldn’t know what a \u003ccode\u003eGreeting\u003c/code\u003e is—that’s my own concept. But now that I wrote a definition for that concept, I can \u003cem\u003eapply\u003c/em\u003e this definition to “unpack” what I meant. You see, \u003cem\u003ea greeting for a person is actually a paragraph:\u003c/em\u003e\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003efunction\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eGreeting\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e{ person }\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003ereturn\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e className=\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003etext-2xl font-sans text-purple-400 dark:text-purple-500\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e      Hello, \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;{\u003c/span\u003e\u003cspan\u003eperson\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003efirstName\u003c/span\u003e\u003cspan\u003e}\u0026lt;/\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003e!\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ePlugging the \u003ccode\u003ealice\u003c/code\u003e’s data into that definition, I end up with this final JSX:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e className=\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003etext-2xl font-sans text-purple-400 dark:text-purple-500\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  Hello, \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003eAlice\u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003e!\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAt this point I only refer to the browser’s own concepts. By substituting the \u003ccode\u003eGreeting\u003c/code\u003e with what I defined it to be, I have “translated” it for your browser.\u003c/p\u003e\n\u003cp\u003eHello, \u003ci\u003eAlice\u003c/i\u003e!\u003c/p\u003e\n\u003cp\u003eNow let’s teach a computer to do the same thing.\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003eTake a look at what JSX is made of.\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003econst \u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eGreeting\u003c/span\u003e\u003cspan\u003e person={\u003c/span\u003e\u003cspan\u003ealice\u003c/span\u003e\u003cspan\u003e} /\u0026gt;;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003econsole\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003elog\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etype\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e// Greeting\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003econsole\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003elog\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eprops\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e// { person: { firstName: \u0026#39;Alice\u0026#39;, birthYear: 1970 } }\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eUnder the hood, JSX constructs an object with the \u003ccode\u003etype\u003c/code\u003e property corresponding to the tag, and the \u003ccode\u003eprops\u003c/code\u003e property corresponding to the JSX attributes.\u003c/p\u003e\n\u003cp\u003eYou can think of \u003ccode\u003etype\u003c/code\u003e as being the “code” and \u003ccode\u003eprops\u003c/code\u003e as being the “data”. To get the result, you need to plug that data \u003cem\u003einto\u003c/em\u003e that code like I’ve done earlier.\u003c/p\u003e\n\u003cp\u003eHere is a little function I wrote that does exactly that:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003efunction\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etranslateForBrowser\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003econst { \u003c/span\u003e\u003cspan\u003etype\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eprops\u003c/span\u003e\u003cspan\u003e } \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003ereturn\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etype\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eprops\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn this case, \u003ccode\u003etype\u003c/code\u003e will be \u003ccode\u003eGreeting\u003c/code\u003e and \u003ccode\u003eprops\u003c/code\u003e will be \u003ccode\u003e{ person: alice }\u003c/code\u003e, so \u003ccode\u003etranslateForBrowser(\u0026lt;Greeting person={alice} /\u0026gt;)\u003c/code\u003e will return the result of calling \u003ccode\u003eGreeting\u003c/code\u003e with \u003ccode\u003e{ person: alice }\u003c/code\u003e as the argument.\u003c/p\u003e\n\u003cp\u003eWhich, as you might recall from the previous section, would give me this:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e className=\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003etext-2xl font-sans text-purple-400 dark:text-purple-500\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  Hello, \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003eAlice\u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003e!\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd that’s exactly what I wanted!\u003c/p\u003e\n\u003cp\u003eYou can verify that feeding my original piece of JSX to \u003ccode\u003etranslateForBrowser\u003c/code\u003e will produce the “browser JSX” that only refers to concepts like \u003ccode\u003e\u0026lt;p\u0026gt;\u003c/code\u003e and \u003ccode\u003e\u0026lt;i\u0026gt;\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003econst \u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eGreeting\u003c/span\u003e\u003cspan\u003e person={\u003c/span\u003e\u003cspan\u003ealice\u003c/span\u003e\u003cspan\u003e} /\u0026gt;;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003econsole\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003elog\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etype\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e// Greeting\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003econsole\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003elog\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eprops\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e// { person: { firstName: \u0026#39;Alice\u0026#39;, birthYear: 1970 } }\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e \u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003econst \u003c/span\u003e\u003cspan\u003ebrowserJSX\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etranslateForBrowser\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003econsole\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003elog\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003ebrowserJSX\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etype\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e// \u0026#39;p\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003econsole\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003elog\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003ebrowserJSX\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eprops\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e// { className: \u0026#39;text-2xl font-sans text-purple-400 dark:text-purple-500\u0026#39;, children: [\u0026#39;Hello\u0026#39;, { type: \u0026#39;i\u0026#39;, props: { children: \u0026#39;Alice\u0026#39; }, \u0026#39;!\u0026#39;] }\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere are many things I could do with that “browser JSX”. For example, I could turn it into an HTML string to be sent to the browser. I could also convert it into a sequence of instructions that update an already existing DOM node. For now, I won’t be focusing on the different ways to use it. All that matters right now is that by the time I have the “browser JSX”, there is nothing left to “translate”.\u003c/p\u003e\n\u003cp\u003eIt’s as if my \u003ccode\u003e\u0026lt;Greeting\u0026gt;\u003c/code\u003e has dissolved, and \u003ccode\u003e\u0026lt;p\u0026gt;\u003c/code\u003e and \u003ccode\u003e\u0026lt;i\u0026gt;\u003c/code\u003e are the residue.\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003eLet’s try something a tiny bit more complex. Suppose I want to wrap my greeting inside a \u003ca target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details\"\u003e\u003ccode\u003e\u0026lt;details\u0026gt;\u003c/code\u003e\u003c/a\u003e tag so that it appears collapsed by default:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eGreeting\u003c/span\u003e\u003cspan\u003e person={\u003c/span\u003e\u003cspan\u003ealice\u003c/span\u003e\u003cspan\u003e} /\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe browser should display it like this (click “Details” to expand it!)\u003c/p\u003e\n\u003cdetails\u003e\u003cp\u003eHello, \u003ci\u003eAlice\u003c/i\u003e!\u003c/p\u003e\u003c/details\u003e\n\u003cp\u003eSo now my task is to figure out how to turn this:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eGreeting\u003c/span\u003e\u003cspan\u003e person={\u003c/span\u003e\u003cspan\u003ealice\u003c/span\u003e\u003cspan\u003e} /\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003einto this:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e className=\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003etext-2xl font-sans text-purple-400 dark:text-purple-500\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e    Hello, \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003eAlice\u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003e!\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eLet’s see if \u003ccode\u003etranslateForBrowser\u003c/code\u003e can already handle that.\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003econst \u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eGreeting\u003c/span\u003e\u003cspan\u003e person={\u003c/span\u003e\u003cspan\u003ealice\u003c/span\u003e\u003cspan\u003e} /\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e);\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003econsole\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003elog\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etype\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e// \u0026#39;details\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003econsole\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003elog\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eprops\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e// { children: { type: Greeting, props: { person: alice } } }\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e \u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003econst \u003c/span\u003e\u003cspan\u003ebrowserJSX\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etranslateForBrowser\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou will get an error inside of the \u003ccode\u003etranslateForBrowser\u003c/code\u003e call:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003efunction\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etranslateForBrowser\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003econst { \u003c/span\u003e\u003cspan\u003etype\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eprops\u003c/span\u003e\u003cspan\u003e } \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003ereturn\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etype\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eprops\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e// 🔴 TypeError: type is not a function\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhat happened here? My \u003ccode\u003etranslateForBrowser\u003c/code\u003e implementation assumed that \u003ccode\u003etype\u003c/code\u003e—that is, \u003ccode\u003eoriginalJSX.type\u003c/code\u003e—is always a function like \u003ccode\u003eGreeting\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eHowever, notice that \u003ccode\u003eoriginalJSX.type\u003c/code\u003e is actually a \u003cem\u003estring\u003c/em\u003e this time:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003econst \u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eGreeting\u003c/span\u003e\u003cspan\u003e person={\u003c/span\u003e\u003cspan\u003ealice\u003c/span\u003e\u003cspan\u003e} /\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e);\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003econsole\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003elog\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etype\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e// \u0026#39;details\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003econsole\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003elog\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eprops\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e// { children: { type: Greeting, props: { person: alice } } }\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhen you start a JSX tag with a lower case (like \u003ccode\u003e\u0026lt;details\u0026gt;\u003c/code\u003e), by convention it’s assumed that you \u003cem\u003ewant\u003c/em\u003e a built-in tag rather than some function you defined.\u003c/p\u003e\n\u003cp\u003eSince built-in tags don’t have any code associated with them (that code is somewhere inside your browser!), the \u003ccode\u003etype\u003c/code\u003e will be a string like \u003ccode\u003e\u0026#39;details\u0026#39;\u003c/code\u003e. How \u003ccode\u003e\u0026lt;details\u0026gt;\u003c/code\u003e work is opaque to my code—all I really know is its name.\u003c/p\u003e\n\u003cp\u003eLet’s split the logic in two cases, and skip translating the built-ins for now:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003efunction\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etranslateForBrowser\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003econst { \u003c/span\u003e\u003cspan\u003etype\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eprops\u003c/span\u003e\u003cspan\u003e } \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003eif\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e(typeof\u003c/span\u003e\u003cspan\u003e type \u003c/span\u003e\u003cspan\u003e===\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003cspan\u003efunction\u003c/span\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003ereturn\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etype\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eprops\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eelse\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eif\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e(typeof\u003c/span\u003e\u003cspan\u003e type \u003c/span\u003e\u003cspan\u003e===\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003cspan\u003estring\u003c/span\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003ereturn\u003c/span\u003e\u003cspan\u003e originalJSX\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter this change, \u003ccode\u003etranslateForBrowser\u003c/code\u003e will only attempt to call some function if the original JSX’s \u003ccode\u003etype\u003c/code\u003e actually \u003cem\u003eis\u003c/em\u003e a function like \u003ccode\u003eGreeting\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eSo that’s the result I wanted, right?…\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eGreeting\u003c/span\u003e\u003cspan\u003e person={\u003c/span\u003e\u003cspan\u003ealice\u003c/span\u003e\u003cspan\u003e} /\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWait. What I wanted is this:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e className=\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003etext-2xl font-sans text-purple-400 dark:text-purple-500\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e    Hello, \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003eAlice\u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003e!\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn my translation process, I want to \u003cem\u003eskip over\u003c/em\u003e the \u003ccode\u003e\u0026lt;details\u0026gt;\u003c/code\u003e tag because its implementation is opaque to me. I can’t do anything useful with it—it is fully up to the browser. However, anything \u003cem\u003einside\u003c/em\u003e of it may still need to be translated!\u003c/p\u003e\n\u003cp\u003eLet’s fix \u003ccode\u003etranslateForBrowser\u003c/code\u003e to translate any built-in tag’s children:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003efunction\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etranslateForBrowser\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003econst { \u003c/span\u003e\u003cspan\u003etype\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eprops\u003c/span\u003e\u003cspan\u003e } \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003eif\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e(typeof\u003c/span\u003e\u003cspan\u003e type \u003c/span\u003e\u003cspan\u003e===\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003cspan\u003efunction\u003c/span\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003ereturn\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etype\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eprops\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eelse\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eif\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e(typeof\u003c/span\u003e\u003cspan\u003e type \u003c/span\u003e\u003cspan\u003e===\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003cspan\u003estring\u003c/span\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003ereturn\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e      type\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e      props\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e        \u003c/span\u003e\u003cspan\u003e...\u003c/span\u003e\u003cspan\u003eprops\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e        children\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etranslateForBrowser\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eprops\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003echildren\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e      \u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e};\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWith this change, when it meets an element like \u003ccode\u003e\u0026lt;details\u0026gt;...\u0026lt;/details\u0026gt;\u003c/code\u003e, it will return another \u003ccode\u003e\u0026lt;details\u0026gt;...\u0026lt;/details\u0026gt;\u003c/code\u003e tag, but the stuff \u003cem\u003einside\u003c/em\u003e of it would be translated with my function again—so the \u003ccode\u003eGreeting\u003c/code\u003e will be gone:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e className=\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003etext-2xl font-sans text-purple-400 dark:text-purple-500\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e    Hello, \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003eAlice\u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003e!\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd \u003cem\u003enow\u003c/em\u003e I am speaking the browser’s “language” again:\u003c/p\u003e\n\u003cdetails\u003e\u003cp\u003eHello, \u003ci\u003eAlice\u003c/i\u003e!\u003c/p\u003e\u003c/details\u003e\n\u003cp\u003eThe \u003ccode\u003eGreeting\u003c/code\u003e has been dissolved.\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003eNow suppose that I try to define an \u003ccode\u003eExpandableGreeting\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003efunction\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eExpandableGreeting\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e{ person }\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003ereturn\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e      \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eGreeting\u003c/span\u003e\u003cspan\u003e person={\u003c/span\u003e\u003cspan\u003eperson\u003c/span\u003e\u003cspan\u003e} /\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eHere is my new original JSX:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eExpandableGreeting\u003c/span\u003e\u003cspan\u003e person={\u003c/span\u003e\u003cspan\u003ealice\u003c/span\u003e\u003cspan\u003e} /\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIf I run it through \u003ccode\u003etranslateForBrowser\u003c/code\u003e, I’ll get this JSX in return:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eGreeting\u003c/span\u003e\u003cspan\u003e person={\u003c/span\u003e\u003cspan\u003ealice\u003c/span\u003e\u003cspan\u003e} /\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eBut that’s not what I wanted! It still has a \u003ccode\u003eGreeting\u003c/code\u003e in it, and we don’t consider a piece of JSX “browser-ready” until \u003cem\u003eall\u003c/em\u003e of my own concepts are gone.\u003c/p\u003e\n\u003cp\u003eThis is a bug in my \u003ccode\u003etranslateForBrowser\u003c/code\u003e function. When it calls a function like \u003ccode\u003eExpandableGreeting\u003c/code\u003e, it will return its output, and not do anything else. But we need to keep on going! That returned JSX \u003cem\u003ealso\u003c/em\u003e needs to be translated.\u003c/p\u003e\n\u003cp\u003eLuckily, there is an easy way I can solve this. When I call a function like \u003ccode\u003eExpandableGreeting\u003c/code\u003e, I can take the JSX it returned and translate \u003cem\u003ethat\u003c/em\u003e next:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003efunction\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etranslateForBrowser\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003econst { \u003c/span\u003e\u003cspan\u003etype\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eprops\u003c/span\u003e\u003cspan\u003e } \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003eif\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e(typeof\u003c/span\u003e\u003cspan\u003e type \u003c/span\u003e\u003cspan\u003e===\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003cspan\u003efunction\u003c/span\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003econst \u003c/span\u003e\u003cspan\u003ereturnedJSX\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etype\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eprops\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003ereturn\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etranslateForBrowser\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003ereturnedJSX\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eelse\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eif\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e(typeof\u003c/span\u003e\u003cspan\u003e type \u003c/span\u003e\u003cspan\u003e===\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003cspan\u003estring\u003c/span\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003ereturn\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e      type\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e      props\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e        \u003c/span\u003e\u003cspan\u003e...\u003c/span\u003e\u003cspan\u003eprops\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e        children\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etranslateForBrowser\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eprops\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003echildren\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e      \u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e};\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eI also need to stop the process when there’s nothing left to translate, like if it receives \u003ccode\u003enull\u003c/code\u003e or a string. If it receives an array of things, I need to translate each of them. With these two fixes, \u003ccode\u003etranslateForBrowser\u003c/code\u003e is complete:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003efunction\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etranslateForBrowser\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003eif\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eoriginalJSX \u003c/span\u003e\u003cspan\u003e==\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003enull\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e||\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etypeof\u003c/span\u003e\u003cspan\u003e originalJSX \u003c/span\u003e\u003cspan\u003e!==\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003cspan\u003eobject\u003c/span\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003ereturn\u003c/span\u003e\u003cspan\u003e originalJSX\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003eif\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eArray\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eisArray\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e))\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003ereturn\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003emap\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003etranslateForBrowser\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003econst { \u003c/span\u003e\u003cspan\u003etype\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eprops\u003c/span\u003e\u003cspan\u003e } \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eoriginalJSX\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003eif\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e(typeof\u003c/span\u003e\u003cspan\u003e type \u003c/span\u003e\u003cspan\u003e===\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003cspan\u003efunction\u003c/span\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003econst \u003c/span\u003e\u003cspan\u003ereturnedJSX\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etype\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eprops\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003ereturn\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etranslateForBrowser\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003ereturnedJSX\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eelse\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eif\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e(typeof\u003c/span\u003e\u003cspan\u003e type \u003c/span\u003e\u003cspan\u003e===\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003cspan\u003estring\u003c/span\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003ereturn\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e      type\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e      props\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e        \u003c/span\u003e\u003cspan\u003e...\u003c/span\u003e\u003cspan\u003eprops\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e        children\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etranslateForBrowser\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eprops\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003echildren\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e      \u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e};\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow, suppose that I start with this:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eExpandableGreeting\u003c/span\u003e\u003cspan\u003e person={\u003c/span\u003e\u003cspan\u003ealice\u003c/span\u003e\u003cspan\u003e} /\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIt will turn into this:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eGreeting\u003c/span\u003e\u003cspan\u003e person={\u003c/span\u003e\u003cspan\u003ealice\u003c/span\u003e\u003cspan\u003e} /\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eWhich will turn into this:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e className=\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003etext-2xl font-sans text-purple-400 dark:text-purple-500\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e    Hello, \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003eAlice\u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003e!\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd at that point, the process will stop.\u003c/p\u003e\n\u003chr/\u003e\n\u003cp\u003eLet’s see how this works one more time, with a bit of extra depth.\u003c/p\u003e\n\u003cp\u003eI’ll define \u003ccode\u003eWelcomePage\u003c/code\u003e like this:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003efunction\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eWelcomePage\u003c/span\u003e\u003cspan\u003e()\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003ereturn\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003esection\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e      \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eh1\u003c/span\u003e\u003cspan\u003e className=\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003etext-3xl font-sans pb-2\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003eWelcome\u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003eh1\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e      \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eExpandableGreeting\u003c/span\u003e\u003cspan\u003e person={\u003c/span\u003e\u003cspan\u003ealice\u003c/span\u003e\u003cspan\u003e} /\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e      \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eExpandableGreeting\u003c/span\u003e\u003cspan\u003e person={\u003c/span\u003e\u003cspan\u003ebob\u003c/span\u003e\u003cspan\u003e} /\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e      \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eExpandableGreeting\u003c/span\u003e\u003cspan\u003e person={\u003c/span\u003e\u003cspan\u003ecrystal\u003c/span\u003e\u003cspan\u003e} /\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003esection\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNow let’s say I start the process with this original JSX:\u003c/p\u003e\n\n\u003cp\u003eCan you retrace the sequence of transformations in your head?\u003c/p\u003e\n\u003cp\u003eLet’s do it step by step together.\u003c/p\u003e\n\u003cp\u003eFirst, imagine \u003ccode\u003eWelcomePage\u003c/code\u003e dissolving, leaving behind its output:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003esection\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eh1\u003c/span\u003e\u003cspan\u003e className=\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003etext-3xl font-sans pb-2\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003eWelcome\u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003eh1\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eExpandableGreeting\u003c/span\u003e\u003cspan\u003e person={\u003c/span\u003e\u003cspan\u003ealice\u003c/span\u003e\u003cspan\u003e} /\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eExpandableGreeting\u003c/span\u003e\u003cspan\u003e person={\u003c/span\u003e\u003cspan\u003ebob\u003c/span\u003e\u003cspan\u003e} /\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eExpandableGreeting\u003c/span\u003e\u003cspan\u003e person={\u003c/span\u003e\u003cspan\u003ecrystal\u003c/span\u003e\u003cspan\u003e} /\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003esection\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen imagine each \u003ccode\u003eExpandableGreeting\u003c/code\u003e dissolving, leaving behind \u003cem\u003eits\u003c/em\u003e output:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003esection\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eh1\u003c/span\u003e\u003cspan\u003e className=\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003etext-3xl font-sans pb-2\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003eWelcome\u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003eh1\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eGreeting\u003c/span\u003e\u003cspan\u003e person={\u003c/span\u003e\u003cspan\u003ealice\u003c/span\u003e\u003cspan\u003e} /\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eGreeting\u003c/span\u003e\u003cspan\u003e person={\u003c/span\u003e\u003cspan\u003ebob\u003c/span\u003e\u003cspan\u003e} /\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eGreeting\u003c/span\u003e\u003cspan\u003e person={\u003c/span\u003e\u003cspan\u003ecrystal\u003c/span\u003e\u003cspan\u003e} /\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003esection\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThen imagine each \u003ccode\u003eGreeting\u003c/code\u003e dissolving, leaving behind \u003cem\u003eits\u003c/em\u003e output:\u003c/p\u003e\n\u003cdiv data-rehype-pretty-code-fragment=\"\"\u003e\u003cpre tabindex=\"0\" data-language=\"js\" data-theme=\"default\"\u003e\u003ccode data-language=\"js\" data-theme=\"default\"\u003e\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003esection\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eh1\u003c/span\u003e\u003cspan\u003e className=\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003etext-3xl font-sans pb-2\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003eWelcome\u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003eh1\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e className=\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003etext-2xl font-sans text-purple-400 dark:text-purple-500\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e      Hello, \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003eAlice\u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003e!\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e className=\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003etext-2xl font-sans text-purple-400 dark:text-purple-500\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e      Hello, \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003eBob\u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003e!\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e className=\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003etext-2xl font-sans text-purple-400 dark:text-purple-500\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e      Hello, \u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003eCrystal\u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ei\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003e!\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\" data-highlighted-line=\"\"\u003e\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003ep\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003edetails\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan data-line=\"\"\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003e\u003cspan\u003esection\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAnd now there is nothing left to “translate”. All \u003cem\u003emy\u003c/em\u003e concepts have dissolved.\u003c/p\u003e\n\u003csection\u003e\u003ch2\u003eWelcome\u003c/h2\u003e\u003cdetails\u003e\u003cp\u003eHello, \u003ci\u003eAlice\u003c/i\u003e!\u003c/p\u003e\u003c/details\u003e\u003cdetails\u003e\u003cp\u003eHello, \u003ci\u003eBob\u003c/i\u003e!\u003c/p\u003e\u003c/details\u003e\u003cdetails\u003e\u003cp\u003eHello, \u003ci\u003eCrystal\u003c/i\u003e!\u003c/p\u003e\u003c/details\u003e\u003c/section\u003e\n\u003cp\u003eThis feels like a chain reaction. You mix a bit of data and code, and it keeps transforming until there is no more code to run, and only the residue is left.\u003c/p\u003e\n\u003cp\u003eIt would be nice if there was a library that could do this for us.\u003c/p\u003e\n\u003cp\u003eBut wait, here’s a question. These transformations have to happen \u003cem\u003esomewhere\u003c/em\u003e on the way between your computer and mine. So where \u003cem\u003edo\u003c/em\u003e they happen?\u003c/p\u003e\n\u003cp\u003eDo they happen on your computer?\u003c/p\u003e\n\u003cp\u003eOr do they happen on mine?\u003c/p\u003e\u003chr/\u003e\u003cp\u003e\u003ca target=\"_blank\" href=\"https://bsky.app/search?q=https%3A%2F%2Foverreacted.io%2Fa-chain-reaction%2F\"\u003eDiscuss on Bluesky\u003c/a\u003e  ·  \u003ca target=\"_blank\" href=\"https://github.com/gaearon/overreacted.io/edit/main/public/a-chain-reaction/index.md\"\u003eEdit on GitHub\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "18 min read",
  "publishedTime": null,
  "modifiedTime": null
}
