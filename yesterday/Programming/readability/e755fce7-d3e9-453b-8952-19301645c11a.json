{
  "id": "e755fce7-d3e9-453b-8952-19301645c11a",
  "title": "New Google Pay features to enhance your payment flows",
  "link": "https://developers.googleblog.com/en/new-google-pay-features-to-enhance-your-payment-flows/",
  "description": "At Google I/O 2025, new Google Pay API updates were unveiled to enhance checkout experiences with features like Android WebViews integration, a more versatile API, and improved developer tools.",
  "author": "",
  "published": "",
  "source": "http://feeds.feedburner.com/GDBcode",
  "categories": null,
  "byline": "Jose Ugia",
  "length": 6139,
  "excerpt": "At Google I/O 2025, new Google Pay API updates were unveiled to enhance checkout experiences with features like Android WebViews integration, a more versatile API, and improved developer tools.",
  "siteName": "",
  "favicon": "https://storage.googleapis.com/gweb-developer-goog-blog-assets/meta/apple-touch-icon.png",
  "text": "At Google I/O 2025, we unveiled updates across the Google Pay API designed to help you create smoother, safer, and more successful checkout experiences for your users. Whether you're looking to boost conversions, enable new payment scenarios, enhance security, or simplify your integration, there's something new for you. Let's dive into the key announcements developers need to know.Enhancing the checkout experience and conversionGoogle Pay in Android WebViewsBig news! Starting with Chrome v137, users can seamlessly use Google Pay within Android WebViews, accessing an Android native experience and device tokens from their Google Wallet. Simply enable PaymentRequest in your app manifest, and tap into the opportunities of in-app browser purchases with a high-quality, secure form of payment. Take a look at the integration guide to learn more. Sorry, your browser doesn't support playback for this video Figure 1: A sample checkout flow via a WebView on Android that uses Google Pay to complete the payment A more versatile API to power modern checkout flowsWe are introducing improvements to the Google Pay API to help you adapt to a payment ecosystem that is in continuous evolution. Here are some of our favorite updates:The Google Pay payment sheet now features richer card art and names, helping users select their preferred card faster. The payment sheet also supports dark mode for a more integrated feel within your application. Figure 2: Screenshots showcasing the Google Pay payment sheet in their dark and light versions. Building on last year's success, the createButton API for Web now offers more customization options (show/hide border, more button text options) to better match your UI, and continue to help boost sales by showing card details upfront.Need to show card-identifying information without using a payment button? We're introducing a new API in the coming months to enable this use case. figure 3: An example offering Google Pay using a list selector through the Payment Metadata API We're adding support for Merchant-Initiated Transactions (MITs) (subscriptions, auto-reloads, deferred charges) to the Google Pay Online API. This includes details in the payment sheet to inform users, device-independent tokens for payment continuity (even if users change devices), and lifecycle notifications for underlying card changes.Streamlining the developer experienceWe are dedicated to making the Google Pay API easier to integrate, test and maintain. Here are some updates that improve the integration experience:Testing just got easier. We have improved the test card suite, so you can now see relevant test cards (regular, tokenized, debit) for your specific PSP directly in the payments sheet when using the TEST environment.Debug your integrations faster on Android with more fine-grained build time error logs to amend your logic more easily, and detailed exceptions/error codes at runtime. Check out the troubleshooting guide if you are seeing errors in your integration. Figure 4: More detailed error messages are now surfaced via the Logcat and the debugger We've launched new codelabs, Firebase Studio templates (one-click development environments), and a learning pathway for web developers. We are planning to add similar resources for native Android, Flutter, React JS, React Native, and Angular.Stay informed about the status of the Google Pay API with the new Google Pay API Status Dashboard. The dashboard monitors key APIs like the CreateButton, IsReadyToPay, or LoadPaymentData APIs in real-time. Check the availability of the API (99.99% uptime last year!) and get incident updates instantly. Figure 5: The Google Pay API Status Dashboard includes service uptime and health information. Doubling down on security and risk managementSecurity and fraud prevention is at the core of everything we do. When you use Google Pay, you are making your checkout forms more secure. Here are some updates on the topic:Smarter Fraud Detection: Our latest models help significantly reduce payment fraud. You can now contribute to further tuning by uploading chargeback data via the Google Pay \u0026 Wallet Console.Built-in ID\u0026V: Google Pay can automatically trigger identity verification challenges for suspicious transactions. This is available to you today without you writing a single line of code..We plan to enhance the API response with more detailed risk information in the next few months, giving you more control over risk decisions. Remember that Google Pay validation and fraud checks are supplementary and should not replace your established risk management procedures.Explore the latest Google Pay API updatesThis year's Google I/O brought significant advancements to Google Pay, focused on tangible benefits: higher conversion, enhanced security, broader payment capabilities, and a smoother development process. We encourage you to explore the updated documentation, try out the new testing tools, and leverage these features to build better payment experiences.Check out the following resources to learn more:See the integration guide to start using Google Pay in your WebViews2. Check out the updated test card suite page in the documentation3. Explore the new developer resourcesLearning pathway for WebFirebase Studio template (Web)4. Bookmark the Google Pay API Status Dashboard to stay up to date about the status of the Google Pay API and gain insights about potential incidentsExplore this announcement and all Google I/O 2025 updates on io.google starting May 22.",
  "image": "https://storage.googleapis.com/gweb-developer-goog-blog-assets/images/O25-BHero-Cloud-2-Meta.2e16d0ba.fill-1200x600.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\n    \n      \n    \n\n    \n\n    \n\n    \n\n    \n    \u003cdiv\u003e\n          \n\n\u003cdiv\u003e\n    \u003cp data-block-key=\"3i5bz\"\u003eAt Google I/O 2025, we unveiled updates across the Google Pay API designed to help you create smoother, safer, and more successful checkout experiences for your users. Whether you\u0026#39;re looking to boost conversions, enable new payment scenarios, enhance security, or simplify your integration, there\u0026#39;s something new for you. Let\u0026#39;s dive into the key announcements developers need to know.\u003c/p\u003e\u003ch2 data-block-key=\"bjzjv\" id=\"enhancing-the-checkout-experience-and-conversion\"\u003e\u003cbr/\u003eEnhancing the checkout experience and conversion\u003c/h2\u003e\u003ch3 data-block-key=\"fft7z\" id=\"google-pay-in-android-webviews\"\u003e\u003cb\u003eGoogle Pay in Android WebViews\u003c/b\u003e\u003c/h3\u003e\u003cp data-block-key=\"cpm88\"\u003eBig news! Starting with Chrome v137, users can seamlessly use Google Pay within Android WebViews, accessing an Android native experience and device tokens from their Google Wallet. Simply enable \u003ccode\u003ePaymentRequest\u003c/code\u003e in your app manifest, and tap into the opportunities of in-app browser purchases with a high-quality, secure form of payment. Take a look at \u003ca href=\"https://developers.google.com/pay/api/android/guides/recipes/using-android-webview\"\u003ethe integration guide\u003c/a\u003e to learn more.\u003c/p\u003e\n\u003c/div\u003e   \n\n\u003cdiv\u003e\n    \n        \u003cvideo autoplay=\"\" loop=\"\" muted=\"\" playsinline=\"\" poster=\"https://storage.googleapis.com/gweb-developer-goog-blog-assets/original_videos/wagtailvideo-yi2nz1v0_thumb.jpg\"\u003e\n\u003csource src=\"https://storage.googleapis.com/gweb-developer-goog-blog-assets/original_videos/webviews-google-pay.mp4\" type=\"video/mp4\"/\u003e\n\u003cp\u003eSorry, your browser doesn\u0026#39;t support playback for this video\u003c/p\u003e\n\n\u003c/video\u003e\n    \n    \n        \n            \u003cp\u003eFigure 1: A sample checkout flow via a WebView on Android that uses Google Pay to complete the payment\u003c/p\u003e\n        \n    \n\u003c/div\u003e  \u003cdiv\u003e\n    \u003ch3 data-block-key=\"c3vx8\" id=\"a-more-versatile-api-to-power-modern-checkout-flows\"\u003e\u003cb\u003eA more versatile API to power modern checkout flows\u003c/b\u003e\u003c/h3\u003e\u003cp data-block-key=\"avi3t\"\u003eWe are introducing improvements to the Google Pay API to help you adapt to a payment ecosystem that is in continuous evolution. Here are some of our favorite updates:\u003c/p\u003e\u003cul\u003e\u003cli data-block-key=\"7n8kr\"\u003eThe \u003cb\u003eGoogle Pay payment sheet now features richer card art and names\u003c/b\u003e, helping users select their preferred card faster. The payment sheet also supports dark mode for a more integrated feel within your application.\u003c/li\u003e\u003c/ul\u003e\n\u003c/div\u003e   \n\n\n    \n    \u003cdiv\u003e\n            \n                \u003cp\u003e\u003cimg src=\"https://storage.googleapis.com/gweb-developer-goog-blog-assets/images/image6.original.jpg\" alt=\"Google Pay payment sheet\"/\u003e\u003c/p\u003e\u003cp\u003e\n                        Figure 2: Screenshots showcasing the Google Pay payment sheet in their dark and light versions.\n                    \u003c/p\u003e\n                \n            \n        \u003c/div\u003e\n  \u003cdiv\u003e\n    \u003cul\u003e\u003cli data-block-key=\"3i5bz\"\u003eBuilding on last year\u0026#39;s success, the \u003cb\u003ecreateButton API for Web now offers more customization options\u003c/b\u003e (show/hide border, more button text options) to better match your UI, and continue to help boost sales by showing card details upfront.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"bir5l\"\u003eNeed to show card-identifying information \u003ci\u003ewithout\u003c/i\u003e using a payment button? \u003cb\u003eWe\u0026#39;re introducing a new API\u003c/b\u003e in the coming months \u003cb\u003eto enable this use case\u003c/b\u003e.\u003c/li\u003e\u003c/ul\u003e\n\u003c/div\u003e   \n\n\n    \n    \u003cdiv\u003e\n            \n                \u003cp\u003e\u003cimg src=\"https://storage.googleapis.com/gweb-developer-goog-blog-assets/images/image2_uIzW5le.original.png\" alt=\"list selector\"/\u003e\u003c/p\u003e\u003cp\u003e\n                        figure 3: An example offering Google Pay using a list selector through the Payment Metadata API\n                    \u003c/p\u003e\n                \n            \n        \u003c/div\u003e\n  \u003cdiv\u003e\n    \u003cul\u003e\u003cli data-block-key=\"3i5bz\"\u003eWe\u0026#39;re adding support for \u003cb\u003eMerchant-Initiated Transactions (MITs)\u003c/b\u003e (subscriptions, auto-reloads, deferred charges) to the Google Pay Online API. This includes details in the payment sheet to inform users, device-independent tokens for payment continuity (even if users change devices), and lifecycle notifications for underlying card changes.\u003c/li\u003e\u003c/ul\u003e\u003ch3 data-block-key=\"kte7t\" id=\"streamlining-the-developer-experience\"\u003e\u003cbr/\u003e\u003cb\u003eStreamlining the developer experience\u003c/b\u003e\u003c/h3\u003e\u003cp data-block-key=\"dsas3\"\u003eWe are dedicated to making the Google Pay API easier to integrate, test and maintain. Here are some updates that improve the integration experience:\u003c/p\u003e\u003cul\u003e\u003cli data-block-key=\"2t2fk\"\u003eTesting just got easier. We have \u003ca href=\"https://developers.google.com/pay/api/android/guides/resources/test-card-suite\"\u003e\u003cb\u003eimproved the test card suite\u003c/b\u003e\u003c/a\u003e, so you can now see relevant test cards (regular, tokenized, debit) for your specific PSP directly in the payments sheet when using the \u003ccode\u003eTEST\u003c/code\u003e environment.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"982o1\"\u003e\u003cb\u003eDebug your integrations faster on Android\u003c/b\u003e with more fine-grained build time error logs to amend your logic more easily, and detailed exceptions/error codes at runtime. Check out the \u003ca href=\"https://developers.google.com/pay/api/android/support/troubleshooting\"\u003etroubleshooting guide\u003c/a\u003e if you are seeing errors in your integration.\u003cbr/\u003e\u003c/li\u003e\u003c/ul\u003e\n\u003c/div\u003e   \n\n\n    \n    \u003cdiv\u003e\n            \n                \u003cp\u003e\u003cimg src=\"https://storage.googleapis.com/gweb-developer-goog-blog-assets/images/image4.original.jpg\" alt=\"detailed error messages\"/\u003e\u003c/p\u003e\u003cp\u003e\n                        Figure 4: More detailed error messages are now surfaced via the Logcat and the debugger\n                    \u003c/p\u003e\n                \n            \n        \u003c/div\u003e\n  \u003cdiv\u003e\n    \u003cul\u003e\u003cli data-block-key=\"3i5bz\"\u003eWe\u0026#39;ve launched \u003cb\u003enew codelabs,\u003c/b\u003e \u003ca href=\"https://studio.firebase.google.com/new/google-pay-101\"\u003e\u003cb\u003eFirebase Studio templates\u003c/b\u003e\u003c/a\u003e (one-click development environments), and \u003ca href=\"https://developers.google.com/learn/pathways/google-pay-for-web?hl=en\"\u003e\u003cb\u003ea learning pathway\u003c/b\u003e for web developers\u003c/a\u003e. \u003ci\u003eWe are planning to add\u003c/i\u003e similar resources for native Android, Flutter, React JS, React Native, and Angular.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"bojvf\"\u003eStay informed about the status of the Google Pay API with the new \u003ca href=\"https://pay.google.com/status/\"\u003e\u003cb\u003eGoogle Pay API Status Dashboard\u003c/b\u003e\u003c/a\u003e. The dashboard monitors key APIs like the CreateButton, IsReadyToPay, or LoadPaymentData APIs in real-time. Check the availability of the API (99.99% uptime last year!) and get incident updates instantly.\u003c/li\u003e\u003c/ul\u003e\n\u003c/div\u003e   \n\n\n    \n    \u003cdiv\u003e\n            \n                \u003cp\u003e\u003cimg src=\"https://storage.googleapis.com/gweb-developer-goog-blog-assets/images/status-dash.original.jpg\" alt=\"Google Pay API Status Dashboard\"/\u003e\u003c/p\u003e\u003cp\u003e\n                        Figure 5: The Google Pay API Status Dashboard includes service uptime and health information.\n                    \u003c/p\u003e\n                \n            \n        \u003c/div\u003e\n  \u003cdiv\u003e\n    \u003ch3 data-block-key=\"29jvo\" id=\"doubling-down-on-security-and-risk-management\"\u003e\u003cb\u003eDoubling down on security and risk management\u003c/b\u003e\u003c/h3\u003e\u003cp data-block-key=\"f15ot\"\u003eSecurity and fraud prevention is at the core of everything we do. When you use Google Pay, you are making your checkout forms more secure. Here are some updates on the topic:\u003c/p\u003e\u003cul\u003e\u003cli data-block-key=\"duohq\"\u003e\u003cb\u003eSmarter Fraud Detection:\u003c/b\u003e Our latest models help significantly reduce payment fraud. You can now contribute to further tuning by uploading chargeback data via the Google Pay \u0026amp; Wallet Console.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"5dlh4\"\u003e\u003cb\u003eBuilt-in ID\u0026amp;V:\u003c/b\u003e Google Pay can automatically trigger \u003cb\u003eidentity verification challenges for suspicious transactions\u003c/b\u003e. This is available to you today without you writing a single line of code..\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"9piu2\"\u003eWe plan to enhance the API response with more \u003cb\u003edetailed risk information\u003c/b\u003e in the next few months, giving you more control over risk decisions. Remember that Google Pay validation and fraud checks are supplementary and should not replace your established risk management procedures.\u003c/li\u003e\u003c/ul\u003e\u003ch2 data-block-key=\"ey1jt\" id=\"explore-the-latest-google-pay-api-updates\"\u003e\u003cbr/\u003eExplore the latest Google Pay API updates\u003c/h2\u003e\u003cp data-block-key=\"d4r0a\"\u003eThis year\u0026#39;s Google I/O brought significant advancements to Google Pay, focused on tangible benefits: higher conversion, enhanced security, broader payment capabilities, and a smoother development process. We encourage you to explore the updated documentation, try out the new testing tools, and leverage these features to build better payment experiences.\u003c/p\u003e\u003cp data-block-key=\"50kqd\"\u003eCheck out the following resources to learn more:\u003c/p\u003e\u003col\u003e\u003cli data-block-key=\"dsg31\"\u003eSee the \u003ca href=\"https://developers.google.com/pay/api/android/guides/recipes/using-android-webview\"\u003eintegration guide\u003c/a\u003e to start using Google Pay in your WebViews\u003c/li\u003e\u003c/ol\u003e\u003cp data-block-key=\"ehuo8\"\u003e\u003cbr/\u003e2. Check out the \u003ca href=\"https://developers.google.com/pay/api/android/guides/resources/test-card-suite\"\u003eupdated test card suite page in the documentation\u003c/a\u003e\u003c/p\u003e\u003cp data-block-key=\"6kgva\"\u003e\u003cbr/\u003e3. Explore the new developer resources\u003c/p\u003e\u003cul\u003e\u003cli data-block-key=\"b4l2h\"\u003e\u003ca href=\"https://developers.google.com/learn/pathways/google-pay-for-web?hl=en\"\u003eLearning pathway for Web\u003c/a\u003e\u003c/li\u003e\u003cli data-block-key=\"cj11j\"\u003e\u003ca href=\"https://studio.firebase.google.com/new/google-pay-101\"\u003eFirebase Studio template (Web)\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003cp data-block-key=\"67da5\"\u003e\u003cbr/\u003e4. Bookmark the \u003ca href=\"https://pay.google.com/status/\"\u003eGoogle Pay API Status Dashboard\u003c/a\u003e to stay up to date about the status of the Google Pay API and gain insights about potential incidents\u003c/p\u003e\u003cp data-block-key=\"g7jh\"\u003e\u003cbr/\u003eExplore this announcement and all Google I/O 2025 updates on \u003ca href=\"https://io.google/2025/?utm_source=blogpost\u0026amp;utm_medium=pr\u0026amp;utm_campaign=event\u0026amp;utm_content=\"\u003eio.google\u003c/a\u003e starting May 22.\u003c/p\u003e\n\u003c/div\u003e \n      \u003c/div\u003e\n    \n\n    \n\n    \n    \n    \n  \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": "2025-05-21T00:00:00Z",
  "modifiedTime": null
}
