{
  "id": "57b4b9c5-4459-4183-b243-6bbfa9307e45",
  "title": "Git security vulnerabilities announced",
  "link": "https://github.blog/open-source/git/git-security-vulnerabilities-announced-6/",
  "description": "Today, the Git project released new versions to address seven security vulnerabilities that affect all prior versions of Git. The post Git security vulnerabilities announced appeared first on The GitHub Blog.",
  "author": "Taylor Blau",
  "published": "Tue, 08 Jul 2025 17:02:11 +0000",
  "source": "https://github.blog/feed/",
  "categories": [
    "Git",
    "Open Source",
    "security alert"
  ],
  "byline": "Taylor Blau",
  "length": 6022,
  "excerpt": "Today, the Git project released new versions to address seven security vulnerabilities that affect all prior versions of Git.",
  "siteName": "The GitHub Blog",
  "favicon": "https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=192%2C192",
  "text": "Today, the Git project released new versions to address seven security vulnerabilities that affect all prior versions of Git. Vulnerabilities in Git CVE-2025-48384 When reading a configuration value, Git will strip any trailing carriage return (CR) and line feed (LF) characters. When writing a configuration value, however, Git does not quote trailing CR characters, causing them to be lost when they are read later on. When initializing a submodule whose path contains a trailing CR character, the stripped path is used, causing the submodule to be checked out in the wrong place. If a symlink already exists between the stripped path and the submodule’s hooks directory, an attacker can execute arbitrary code through the submodule’s post-checkout hook. [source] CVE-2025-48385 When cloning a repository, Git can optionally fetch a bundle, allowing the server to offload a portion of the clone to a CDN. The Git client does not properly validate the advertised bundle(s), allowing the remote side to perform protocol injection. When a specially crafted bundle is advertised, the remote end can cause the client to write the bundle to an arbitrary location, which may lead to code execution similar to the previous CVE. [source] CVE-2025-48386 (Windows only) When cloning from an authenticated remote, Git uses a credential helper in order to authenticate the request. Git includes a handful of credential helpers, including Wincred, which uses the Windows Credential Manager to store its credentials. Wincred uses the contents of a static buffer as a unique key to store and retrieve credentials. However, it does not properly bounds check the remaining space in the buffer, leading to potential buffer overflows. [source] Vulnerabilities in Git GUI and Gitk This release resolves four new CVEs related to Gitk and Git GUI. Both tools are Tcl/Tk-based graphical interfaces used to interact with Git repositories. Gitk is focused on showing a repository’s history, whereas Git GUI focuses on making changes to existing repositories. CVE-2025-27613 (Gitk) When running Gitk in a specially crafted repository without additional command-line arguments, Gitk can write and truncate arbitrary writable files. The “Support per-file encoding” option must be enabled; however, the operation of “Show origin of this line” is affected regardless. [source] CVE-2025-27614 (Gitk) If a user is tricked into running gitk filename (where filename has a particular structure), they may run arbitrary scripts supplied by the attacker, leading to arbitrary code execution. [source] CVE-2025-46334 (Git GUI, Windows only) If a malicious repository includes an executable sh.exe, or common textconv programs (for e.g.,  astextplain, exif, or ps2ascii), path lookup on Windows may locate these executables in the working tree. If a user running Git GUI in such a repository selects either the “Git Bash” or “Browse Files” from the menu, these programs may be invoked, leading to arbitrary code execution. [source] CVE-2025-46335 (Git GUI) When a user is tricked into editing a file in a specially named directory in an untrusted repository, Git GUI can create and overwrite arbitrary writable files, similar to CVE-2025-27613. [source] Upgrade to the latest Git version The most effective way to protect against these vulnerabilities is to upgrade to Git 2.50.1, the newest release containing fixes for the aforementioned vulnerabilities. If you can’t upgrade immediately, you can reduce your risk by doing the following: Avoid running git clone with --recurse-submodules against untrusted repositories. Disable auto-fetching bundle URIs by setting the transfer.bundleURI configuration value to “false.” Avoid using the wincred credential helper on Windows. Avoid running Gitk and Git GUI in untrusted repositories. In order to protect users against attacks related to these vulnerabilities, GitHub has taken proactive steps. Specifically, we have scheduled releases of GitHub Desktop. GitHub Codespaces and GitHub Actions will update their versions of Git shortly. GitHub itself, including Enterprise Server, is unaffected by these vulnerabilities. CVE-2025-48384, CVE-2025-48385, and CVE-2025-48386 were discovered by David Leadbeater. Justin Tobler and Patrick Steinhardt provided fixes for CVEs 2025-48384 and 2025-48385 respectively. The fix for CVE-2025-48386 is joint work between Taylor Blau and Jeff KingCVE-2025-46835 was found and fixed by Johannes Sixt. Mark Levedahl discovered and fixed CVE-2025-46334. Avi Halachmi discovered both CVE-2025-27613 and CVE-2025-27614, and fixed the latter. CVE-2025-27613 was fixed by Johannes Sixt. Written by Taylor Blau is a Staff Software Engineer at GitHub where he works on Git. Related posts Highlights from Git 2.50 The open source Git project just released Git 2.50. Here is GitHub’s look at some of the most interesting features and changes introduced since last time. Shine a spotlight on your open source project Celebrate #MaintainerMonth with two big opportunities to showcase your open source project at GitHub Universe and WeAreDevelopers World Congress. Applications are open. Don’t miss out! Explore more from GitHub Docs Everything you need to master GitHub, all in one place. Go to Docs GitHub Build what’s next on GitHub, the place for anyone from anywhere to build anything. Start building Customer stories Meet the companies and engineering teams that build with GitHub. Learn more Git Merge 2025 As Git marks its 20th anniversary, join us September 29-30 to explore its impact, evolution, and future. Get tickets",
  "image": "https://github.blog/wp-content/uploads/2025/07/wallpaper2.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003csection\u003e\n\t\n\u003cp\u003eToday, the Git project \u003ca href=\"https://lore.kernel.org/git/xmqq5xg2wrd1.fsf@gitster.g/\"\u003ereleased new versions\u003c/a\u003e to address seven security vulnerabilities that affect all prior versions of Git.\u003c/p\u003e\n\n\n\n\u003ch2 id=\"h-vulnerabilities-in-git\"\u003eVulnerabilities in Git\u003c/h2\u003e\n\n\n\n\u003ch3 id=\"h-cve-2025-48384\"\u003eCVE-2025-48384\u003c/h3\u003e\n\n\n\n\u003cp\u003eWhen reading a \u003ca href=\"https://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration\"\u003econfiguration\u003c/a\u003e value, Git will strip any trailing carriage return (CR) and line feed (LF) characters. When writing a configuration value, however, Git does not quote trailing CR characters, causing them to be lost when they are read later on. When initializing a \u003ca href=\"https://git-scm.com/docs/gitsubmodules\"\u003esubmodule\u003c/a\u003e whose path contains a trailing CR character, the stripped path is used, causing the submodule to be checked out in the wrong place.\u003c/p\u003e\n\n\n\n\u003cp\u003eIf a \u003ca href=\"https://en.wikipedia.org/wiki/Symbolic_link\"\u003esymlink\u003c/a\u003e already exists between the stripped path and the submodule’s \u003ca href=\"https://git-scm.com/docs/githooks\"\u003ehooks\u003c/a\u003e directory, an attacker can execute arbitrary code through the submodule’s \u003ccode\u003epost-checkout\u003c/code\u003e hook.\u003c/p\u003e\n\n\n\n\u003cp\u003e[\u003ca href=\"https://github.com/git/git/compare/d2bc61fcabd6cfa582d286bed1ce20d5d7c58d52...05e9cd64ee23bbadcea6bcffd6660ed02b8eab89\"\u003esource\u003c/a\u003e]\u003c/p\u003e\n\n\n\n\u003ch3 id=\"h-cve-2025-48385\"\u003eCVE-2025-48385\u003c/h3\u003e\n\n\n\n\u003cp\u003eWhen cloning a repository, Git can optionally fetch a \u003ca href=\"https://git-scm.com/docs/git-bundle\"\u003ebundle\u003c/a\u003e, allowing the server to offload a portion of the clone to a \u003ca href=\"https://en.wikipedia.org/wiki/Content_delivery_network\"\u003eCDN\u003c/a\u003e. The Git client does not properly validate the advertised bundle(s), allowing the remote side to perform protocol injection. When a specially crafted bundle is advertised, the remote end can cause the client to write the bundle to an arbitrary location, which may lead to code execution similar to the previous CVE.\u003c/p\u003e\n\n\n\n\u003cp\u003e[\u003ca href=\"https://github.com/git/git/compare/d61cfed2c23705fbeb9c0d08f59e75ee08738950...35cb1bb0b92c132249d932c05bbd860d410e12d4\"\u003esource\u003c/a\u003e]\u003c/p\u003e\n\n\n\n\u003ch3 id=\"h-cve-2025-48386-windows-only\"\u003eCVE-2025-48386 (Windows only)\u003c/h3\u003e\n\n\n\n\u003cp\u003eWhen cloning from an authenticated remote, Git uses a \u003ca href=\"https://git-scm.com/docs/gitcredentials\"\u003ecredential helper\u003c/a\u003e in order to authenticate the request. Git includes a handful of \u003ca href=\"https://git-scm.com/doc/credential-helpers\"\u003ecredential helpers\u003c/a\u003e, including \u003ca href=\"https://github.com/git/git/tree/v2.43.7/contrib/credential/wincred\"\u003eWincred\u003c/a\u003e, which uses the \u003ca href=\"https://support.microsoft.com/en-us/windows/credential-manager-in-windows-1b5c916a-6a16-889f-8581-fc16e8165ac0\"\u003eWindows Credential Manager\u003c/a\u003e to store its credentials.\u003c/p\u003e\n\n\n\n\u003cp\u003eWincred uses the contents of a static buffer as a unique key to store and retrieve credentials. However, it does not properly bounds check the remaining space in the buffer, leading to potential buffer overflows.\u003c/p\u003e\n\n\n\n\u003cp\u003e[\u003ca href=\"https://github.com/git/git/compare/2d22f0cd07c308d7ff25bbf4ec8f1bb53b4bcda7...9de345cb273cc7faaeda279c7e07149d8a15a319\"\u003esource\u003c/a\u003e]\u003c/p\u003e\n\n\n\n\u003ch2 id=\"h-vulnerabilities-in-git-gui-and-gitk\"\u003eVulnerabilities in Git GUI and Gitk\u003c/h2\u003e\n\n\n\n\u003cp\u003eThis release resolves four new CVEs related to \u003ca href=\"https://git-scm.com/docs/gitk\"\u003eGitk\u003c/a\u003e and \u003ca href=\"https://git-scm.com/docs/git-gui\"\u003eGit GUI\u003c/a\u003e. Both tools are \u003ca href=\"https://en.wikipedia.org/wiki/Tcl\"\u003eTcl/Tk\u003c/a\u003e-based graphical interfaces used to interact with Git repositories. Gitk is focused on showing a repository’s history, whereas Git GUI focuses on making changes to existing repositories.\u003c/p\u003e\n\n\n\n\u003ch3 id=\"h-cve-2025-27613-gitk\"\u003eCVE-2025-27613 (Gitk)\u003c/h3\u003e\n\n\n\n\u003cp\u003eWhen running Gitk in a specially crafted repository without additional command-line arguments, Gitk can write and truncate arbitrary writable files. The “Support per-file encoding” option must be enabled; however, the operation of “Show origin of this line” is affected regardless.\u003c/p\u003e\n\n\n\n\u003cp\u003e[\u003ca href=\"https://github.com/git/git/compare/4e7e3b792e6973e09de6ddc191b86bbc245c53dd...67a128b91e25978a15f9f7e194d81b441d603652\"\u003esource\u003c/a\u003e]\u003c/p\u003e\n\n\n\n\u003ch3 id=\"h-cve-2025-27614-gitk\"\u003eCVE-2025-27614 (Gitk)\u003c/h3\u003e\n\n\n\n\u003cp\u003eIf a user is tricked into running \u003ccode\u003egitk filename\u003c/code\u003e (where \u003ccode\u003efilename\u003c/code\u003e has a particular structure), they may run arbitrary scripts supplied by the attacker, leading to arbitrary code execution.\u003c/p\u003e\n\n\n\n\u003cp\u003e[\u003ca href=\"https://github.com/git/git/compare/664d4fa692cb8637a7c9297c94abf0de8593e585...8e3070aa5e331be45d4d03e3be41f84494fce129\"\u003esource\u003c/a\u003e]\u003c/p\u003e\n\n\n\n\u003ch3 id=\"h-cve-2025-46334-git-gui-windows-only\"\u003eCVE-2025-46334 (Git GUI, Windows only)\u003c/h3\u003e\n\n\n\n\u003cp\u003eIf a malicious repository includes an executable \u003ccode\u003esh.exe\u003c/code\u003e, or common \u003ca href=\"https://git-scm.com/docs/gitattributes#_performing_text_diffs_of_binary_files\"\u003etextconv\u003c/a\u003e programs (for e.g.,  \u003ccode\u003eastextplain\u003c/code\u003e, \u003ccode\u003eexif\u003c/code\u003e, or \u003ccode\u003eps2ascii\u003c/code\u003e), path lookup on Windows may locate these executables in the working tree. If a user running Git GUI in such a repository selects either the “Git Bash” or “Browse Files” from the menu, these programs may be invoked, leading to arbitrary code execution.\u003c/p\u003e\n\n\n\n\u003cp\u003e[\u003ca href=\"https://github.com/git/git/compare/27fbab4898620183e608865beffd960139c04d58...a1ccd2512072cf52835050f4c97a4fba9f0ec8f9\"\u003esource\u003c/a\u003e]\u003c/p\u003e\n\n\n\n\u003ch3 id=\"h-cve-2025-46335-git-gui\"\u003eCVE-2025-46335 (Git GUI)\u003c/h3\u003e\n\n\n\n\u003cp\u003eWhen a user is tricked into editing a file in a specially named directory in an untrusted repository, Git GUI can create and overwrite arbitrary writable files, similar to CVE-2025-27613.\u003c/p\u003e\n\n\n\n\u003cp\u003e[\u003ca href=\"https://github.com/git/git/compare/a7d1716fa648f6557ea9c91e0f04bae2e8738e6a...a437f5bc93330a70b42a230e52f3bd036ca1b1da\"\u003esource\u003c/a\u003e]\u003c/p\u003e\n\n\n\n\u003ch2 id=\"h-upgrade-to-the-latest-git-version\"\u003eUpgrade to the latest Git version\u003c/h2\u003e\n\n\n\n\u003cp\u003eThe most effective way to protect against these vulnerabilities is to upgrade to Git 2.50.1, the newest release containing fixes for the aforementioned vulnerabilities. If you can’t upgrade immediately, you can reduce your risk by doing the following:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eAvoid running \u003ccode\u003egit clone\u003c/code\u003e with \u003ccode\u003e--recurse-submodules\u003c/code\u003e against untrusted repositories.\u003c/li\u003e\n\n\n\n\u003cli\u003eDisable auto-fetching bundle URIs by setting the \u003ccode\u003etransfer.bundleURI\u003c/code\u003e configuration value to “false.”\u003c/li\u003e\n\n\n\n\u003cli\u003eAvoid using the \u003ccode\u003ewincred\u003c/code\u003e credential helper on Windows.\u003c/li\u003e\n\n\n\n\u003cli\u003eAvoid running Gitk and Git GUI in untrusted repositories.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eIn order to protect users against attacks related to these vulnerabilities, GitHub has taken proactive steps. Specifically, we have scheduled releases of \u003ca href=\"https://github.com/apps/desktop\"\u003eGitHub Desktop\u003c/a\u003e. \u003ca href=\"https://github.com/features/codespaces\"\u003eGitHub Codespaces\u003c/a\u003e and \u003ca href=\"https://github.com/features/actions\"\u003eGitHub Actions\u003c/a\u003e will update their versions of Git shortly. GitHub itself, including \u003ca href=\"https://github.com/enterprise\"\u003eEnterprise Server\u003c/a\u003e, is unaffected by these vulnerabilities.\u003c/p\u003e\n\n\n\n\u003chr/\u003e\n\n\n\n\u003cp\u003eCVE-2025-48384, CVE-2025-48385, and CVE-2025-48386 were discovered by \u003ca href=\"https://github.com/dgl\"\u003eDavid Leadbeater\u003c/a\u003e. \u003ca href=\"https://github.com/jltobler\"\u003eJustin Tobler\u003c/a\u003e and \u003ca href=\"https://github.com/pks-t\"\u003ePatrick Steinhardt\u003c/a\u003e provided fixes for CVEs 2025-48384 and 2025-48385 respectively. The fix for CVE-2025-48386 is joint work between \u003ca href=\"https://github.com/ttaylorr\"\u003eTaylor Blau\u003c/a\u003e and \u003ca href=\"https://github.com/peff\"\u003eJeff King\u003c/a\u003eCVE-2025-46835 was found and fixed by \u003ca href=\"https://github.com/j6t\"\u003eJohannes Sixt\u003c/a\u003e. \u003ca href=\"https://github.com/mark987\"\u003eMark Levedahl\u003c/a\u003e discovered and fixed CVE-2025-46334. \u003ca href=\"https://github.com/avih\"\u003eAvi Halachmi\u003c/a\u003e discovered both CVE-2025-27613 and CVE-2025-27614, and fixed the latter. CVE-2025-27613 was fixed by Johannes Sixt.\u003c/p\u003e\n\n\t\n\n\t\u003cdiv\u003e\n\t\u003ch2\u003e\n\t\tWritten by\t\u003c/h2\u003e\n\t\n\t\t\t\u003carticle\u003e\n\t\u003cdiv\u003e\n\t\t\t\t\t\u003cdiv\u003e\n\t\t\t\t\u003cpicture\u003e\n\t\t\t\t\t\u003csource srcset=\"https://avatars.githubusercontent.com/u/443245?v=4\u0026amp;s=200\" width=\"120\" height=\"120\" media=\"(min-width: 768px)\"/\u003e\n\t\t\t\t\t\u003cimg src=\"https://avatars.githubusercontent.com/u/443245?v=4\u0026amp;s=200\" alt=\"Taylor Blau\" width=\"80\" height=\"80\" loading=\"lazy\" decoding=\"async\"/\u003e\n\t\t\t\t\u003c/picture\u003e\n\t\t\t\u003c/div\u003e\n\t\t\t\t\n\t\t\t\t\t\u003cp\u003eTaylor Blau is a Staff Software Engineer at GitHub where he works on Git.\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\u003c/article\u003e\n\t\u003c/div\u003e\n\u003c/section\u003e\u003csection\u003e\n\t\u003ch2\u003e\n\t\tRelated posts\t\u003c/h2\u003e\n\t\u003cdiv\u003e\n\t\u003carticle\u003e\n\t\u003cdiv\u003e\n\t\t\t\u003ch3\u003e\n\t\t\t\t\u003ca href=\"https://github.blog/open-source/git/highlights-from-git-2-50/\" target=\"_self\"\u003e\n\t\t\t\t\tHighlights from Git 2.50\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/h3\u003e\n\t\t\t\u003cp\u003eThe open source Git project just released Git 2.50. Here is GitHub’s look at some of the most interesting features and changes introduced since last time.\u003c/p\u003e\n\t\t\u003c/div\u003e\n\u003c/article\u003e\n\u003carticle\u003e\n\t\n\u003c/article\u003e\n\u003carticle\u003e\n\t\u003cdiv\u003e\n\t\t\t\u003ch3\u003e\n\t\t\t\t\u003ca href=\"https://github.blog/open-source/shine-a-spotlight-on-your-open-source-project/\" target=\"_self\"\u003e\n\t\t\t\t\tShine a spotlight on your open source project\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/h3\u003e\n\t\t\t\u003cp\u003eCelebrate #MaintainerMonth with two big opportunities to showcase your open source project at GitHub Universe and WeAreDevelopers World Congress. Applications are open. Don’t miss out!\u003c/p\u003e\n\t\t\u003c/div\u003e\n\u003c/article\u003e\n\u003c/div\u003e\n\u003c/section\u003e\u003cdiv\u003e\n\t\u003ch2\u003e\n\t\tExplore more from GitHub\t\u003c/h2\u003e\n\t\u003cdiv\u003e\n\t\t\u003cdiv\u003e\n\t\t\u003cp\u003e\u003cimg src=\"https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg\" width=\"44\" height=\"44\" alt=\"Docs\"/\u003e\u003c/p\u003e\u003ch3\u003e\n\t\t\tDocs\t\t\u003c/h3\u003e\n\t\t\u003cp\u003eEverything you need to master GitHub, all in one place.\u003c/p\u003e\n\t\t\t\t\t\u003cp\u003e\n\t\t\t\t\u003ca data-analytics-click=\"Blog, click on module, text: Go to Docs; ref_location:bottom recirculation;\" href=\"https://docs.github.com/\" target=\"_blank\" aria-label=\"Go to Docs\"\u003e\n\t\t\t\t\tGo to Docs\t\t\t\t\t\t\t\t\t\t\t\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"\u003e\u003cpath fill-rule=\"evenodd\" d=\"M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n\t\t\t\t\t\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\u003cdiv\u003e\n\t\t\u003cp\u003e\u003cimg src=\"https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg\" width=\"44\" height=\"44\" alt=\"GitHub\"/\u003e\u003c/p\u003e\u003ch3\u003e\n\t\t\tGitHub\t\t\u003c/h3\u003e\n\t\t\u003cp\u003eBuild what’s next on GitHub, the place for anyone from anywhere to build anything.\u003c/p\u003e\n\t\t\t\t\t\u003cp\u003e\n\t\t\t\t\u003ca data-analytics-click=\"Blog, click on module, text: Start building; ref_location:bottom recirculation;\" href=\"https://github.com/\" target=\"_blank\" aria-label=\"Start building\"\u003e\n\t\t\t\t\tStart building\t\t\t\t\t\t\t\t\t\t\t\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"\u003e\u003cpath fill-rule=\"evenodd\" d=\"M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n\t\t\t\t\t\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\u003cdiv\u003e\n\t\t\u003cp\u003e\u003cimg src=\"https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg\" width=\"44\" height=\"44\" alt=\"Customer stories\"/\u003e\u003c/p\u003e\u003ch3\u003e\n\t\t\tCustomer stories\t\t\u003c/h3\u003e\n\t\t\u003cp\u003eMeet the companies and engineering teams that build with GitHub.\u003c/p\u003e\n\t\t\t\t\t\u003cp\u003e\n\t\t\t\t\u003ca data-analytics-click=\"Blog, click on module, text: Learn more; ref_location:bottom recirculation;\" href=\"https://github.com/customer-stories\" target=\"_blank\" aria-label=\"Learn more\"\u003e\n\t\t\t\t\tLearn more\t\t\t\t\t\t\t\t\t\t\t\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"\u003e\u003cpath fill-rule=\"evenodd\" d=\"M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n\t\t\t\t\t\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\u003cdiv\u003e\n\t\t\u003cp\u003e\u003cimg src=\"https://github.blog/wp-content/uploads/2025/05/git-merge-24-Orange.svg\" width=\"44\" height=\"44\" alt=\"Git Merge 2025\"/\u003e\u003c/p\u003e\u003ch3\u003e\n\t\t\tGit Merge 2025\t\t\u003c/h3\u003e\n\t\t\u003cp\u003eAs Git marks its 20th anniversary, join us September 29-30 to explore its impact, evolution, and future.\u003c/p\u003e\n\t\t\t\t\t\u003cp\u003e\n\t\t\t\t\u003ca data-analytics-click=\"Blog, click on module, text: Get tickets; ref_location:bottom recirculation;\" href=\"https://git-merge.com/\" target=\"_blank\" aria-label=\"Get tickets\"\u003e\n\t\t\t\t\tGet tickets\t\t\t\t\t\t\t\t\t\t\t\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"\u003e\u003cpath fill-rule=\"evenodd\" d=\"M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n\t\t\t\t\t\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\t\u003c/div\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": "2025-07-08T17:02:11Z",
  "modifiedTime": "2025-07-09T00:37:14Z"
}
