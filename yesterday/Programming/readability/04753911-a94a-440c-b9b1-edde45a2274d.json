{
  "id": "04753911-a94a-440c-b9b1-edde45a2274d",
  "title": "Rider 2025.2 Early Access Program Is Live!",
  "link": "https://blog.jetbrains.com/dotnet/2025/05/16/rider-2025-2-eap-1/",
  "description": "The Early Access Program (EAP) for Rider 2025.2 has just begun, and the first preview build for the upcoming major release is already out.  There are several ways for you to get your hands on the first preview build: A reminder of what the EAP is all about The Early Access Program is a long-standing […]",
  "author": "Sasha Ivanova",
  "published": "Fri, 16 May 2025 11:00:45 +0000",
  "source": "https://blog.jetbrains.com/feed",
  "categories": [
    "net-tools",
    "eap",
    "news",
    "releases",
    "rider",
    "early-access-program",
    "roslyn"
  ],
  "byline": "Sasha Ivanova",
  "length": 4883,
  "excerpt": "The Early Access Program (EAP) for Rider 2025.2 has just begun, and the first preview build for the upcoming major release is already out. There are several ways for you to get your hands on",
  "siteName": "The JetBrains Blog",
  "favicon": "https://blog.jetbrains.com/wp-content/uploads/2024/01/cropped-mstile-310x310-1-180x180.png",
  "text": "Essential productivity kit for .NET and game developers .NET Tools Early Access Program News Releases RiderRider 2025.2 Early Access Program Is Live! The Early Access Program (EAP) for Rider 2025.2 has just begun, and the first preview build for the upcoming major release is already out.  There are several ways for you to get your hands on the first preview build: Download and install it from our website. Get it via the Toolbox App. Install this snap package from the SnapCraft store if you’re using a compatible Linux distribution. A reminder of what the EAP is all about The Early Access Program is a long-standing tradition that gives our users early access to the new features we’re preparing. By participating, you get a first look at what’s coming and a chance to help shape the final release through your feedback. EAP builds are free to use, though they may be less stable than the final release versions. You can learn more about the EAP and why you might want to participate here. Rider 2025.2 EAP 1 release highlights Support for Roslyn-based suppressors Roslyn-based suppressors give analyzer authors a powerful tool to eliminate unnecessary warnings with custom logic. Unlike traditional methods such as [SuppressMessage] attributes or #pragma directives, suppressors work invisibly in the background, keeping your code clean and maintainable, which is particularly important when using external analyzers. With Rider 2025.2 EAP 1, these suppressors now work exactly as intended. When a diagnostic is suppressed, it simply disappears from your editor and won’t disrupt your workflow or CI pipelines. This means: Framework-specific code no longer shows false warnings. The same suppression rules work across all .NET IDEs. Libraries that include their own suppressors now function properly in Rider. You’ll see fewer irrelevant warnings in specialized code like Unity fields, EF Core models, and test fixtures. The Pencils widget is back In response to feedback from the community, we’ve decided to bring the Pencils widget back. In Rider 2025.2 EAP 1, as well as in Rider 2025.1.2, the widget can be enabled in the status bar, giving you quick access to visual indicators for code style inspections, highlighting levels, and inlay hints. Here’s how it works now: The widget is disabled by default, but can be added to your status bar via the main menu View | Appearance | Status Bar Widgets, as well as directly from the status bar. A restart is required after enabling it for the changes to take effect. Once enabled, the Pencils icon appears in the lower-right corner of the IDE window. Disabling the widget does not require a restart. We appreciate all of your feedback and advocacy – thanks for helping us shape Rider into the tool you need! Important fixes The Detach action is now available for C++ processes, allowing you to disconnect the debugger without terminating the application. [RIDER-70201] Rider can once again successfully create IIS virtual directories when running or debugging ASP.NET applications targeting the .NET Framework. [RIDER-122091] Rider no longer crashes when editing or merging .sln files due to a critical lexer issue. [RIDER-114986] We’ve resolved an issue where identifiers were incorrectly colored or partially styled in Unity projects. [RIDER-124907]  For the full list of changes included in this build, please see our issue tracker. We encourage you to download the EAP build, give these new features a try, and share your feedback. The Early Access Program is a collaborative effort, and your input plays a vital role in making Rider the best it can be. Thank you for being part of our EAP community, and we look forward to hearing what you think! Subscribe to a monthly digest curated from the .NET Tools blog: Discover more",
  "image": "https://blog.jetbrains.com/wp-content/uploads/2025/05/Social_Share_Blog_1280x720-2x-11.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"main\"\u003e\n    \u003cdiv\u003e\n                        \u003ca href=\"https://blog.jetbrains.com/dotnet/\"\u003e\n                            \u003cimg src=\"https://blog.jetbrains.com/wp-content/uploads/2019/01/Frame-1321314548.svg\" alt=\"Dotnet logo\"/\u003e\n                                                                                                \n                                                                                    \u003c/a\u003e\n                                                    \u003cp\u003eEssential productivity kit for .NET and game developers\u003c/p\u003e\n                                            \u003c/div\u003e\n                            \u003csection data-clarity-region=\"article\"\u003e\n                \u003cdiv\u003e\n                    \t\t\t\t\u003cp\u003e\u003ca href=\"https://blog.jetbrains.com/dotnet/category/net-tools/\"\u003e.NET Tools\u003c/a\u003e\n\t\t\t\u003ca href=\"https://blog.jetbrains.com/dotnet/category/eap/\"\u003eEarly Access Program\u003c/a\u003e\n\t\t\t\u003ca href=\"https://blog.jetbrains.com/dotnet/category/news/\"\u003eNews\u003c/a\u003e\n\t\t\t\u003ca href=\"https://blog.jetbrains.com/dotnet/category/releases/\"\u003eReleases\u003c/a\u003e\n\t\t\t\u003ca href=\"https://blog.jetbrains.com/dotnet/category/rider/\"\u003eRider\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"major-updates\"\u003eRider 2025.2 Early Access Program Is Live!\u003c/h2\u003e                    \n                    \n\u003cp\u003eThe Early Access Program (EAP) for Rider 2025.2 has just begun, and the first preview build for the upcoming major release is already out. \u003c/p\u003e\n\n\n\n\u003cp\u003eThere are several ways for you to get your hands on the first preview build:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eDownload and install it from \u003ca href=\"http://jetbrains.com/\" target=\"_blank\" rel=\"noopener\"\u003eour website\u003c/a\u003e.\u003c/li\u003e\n\n\n\n\u003cli\u003eGet it via the \u003ca href=\"https://www.jetbrains.com/toolbox/\" target=\"_blank\" rel=\"noopener\"\u003eToolbox App\u003c/a\u003e.\u003c/li\u003e\n\n\n\n\u003cli\u003eInstall this \u003ca href=\"https://snapcraft.io/rider\" target=\"_blank\" rel=\"noopener\"\u003esnap package\u003c/a\u003e from the SnapCraft store if you’re using a compatible Linux distribution.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\u003chr/\u003e\n\n\n\n\u003ch2\u003eA reminder of what the EAP is all about\u003c/h2\u003e\n\n\n\n\u003cp\u003eThe Early Access Program is a long-standing tradition that gives our users early access to the new features we’re preparing. By participating, you get a first look at what’s coming and a chance to help shape the final release through your feedback.\u003c/p\u003e\n\n\n\n\u003cp\u003eEAP builds are free to use, though they may be less stable than the final release versions. You can learn more about the EAP and why you might want to participate \u003ca href=\"https://blog.jetbrains.com/dotnet/2024/01/19/rider-2024-1-eap1/#what-is-an-early-access-program\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" fetchpriority=\"high\" width=\"2560\" height=\"1440\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/05/Featured_Blog_1280x720-2x-12.png\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003ch2\u003eRider 2025.2 EAP 1 release highlights\u003c/h2\u003e\n\n\n\n\u003ch3\u003eSupport for Roslyn-based suppressors\u003c/h3\u003e\n\n\n\n\u003cp\u003eRoslyn-based suppressors give analyzer authors a powerful tool to eliminate unnecessary warnings with custom logic. Unlike traditional methods such as [SuppressMessage] attributes or #pragma directives, suppressors work invisibly in the background, keeping your code clean and maintainable, which is particularly important when using external analyzers.\u003c/p\u003e\n\n\n\n\u003cp\u003eWith Rider 2025.2 EAP 1, these suppressors now work exactly as intended. When a diagnostic is suppressed, it simply disappears from your editor and won’t disrupt your workflow or CI pipelines. This means:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eFramework-specific code no longer shows false warnings.\u003c/li\u003e\n\n\n\n\u003cli\u003eThe same suppression rules work across all .NET IDEs.\u003c/li\u003e\n\n\n\n\u003cli\u003eLibraries that include their own suppressors now function properly in Rider.\u003c/li\u003e\n\n\n\n\u003cli\u003eYou’ll see fewer irrelevant warnings in specialized code like Unity fields, EF Core models, and test fixtures.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003ch3\u003eThe \u003cem\u003ePencils\u003c/em\u003e widget is back\u003c/h3\u003e\n\n\n\n\u003cp\u003eIn response to feedback from the community, we’ve decided to bring the \u003cem\u003ePencils\u003c/em\u003e widget back. In Rider 2025.2 EAP 1, as well as in \u003ca href=\"https://www.jetbrains.com/rider/download/\" target=\"_blank\" rel=\"noopener\"\u003eRider 2025.1.2\u003c/a\u003e, the widget can be enabled in the \u003ca href=\"https://www.jetbrains.com/help/rider/Guided_Tour_Around_the_User_Interface.html#status-bar\" target=\"_blank\" rel=\"noopener\"\u003estatus bar\u003c/a\u003e\u003cem\u003e,\u003c/em\u003e giving you quick access to visual indicators for code style inspections, highlighting levels, and inlay hints.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eHere’s how it works now:\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eThe widget is disabled by default, but can be added to your status bar via the main menu \u003cem\u003eView | Appearance | Status Bar Widgets\u003c/em\u003e, as well as directly from the status bar.\u003c/li\u003e\n\n\n\n\u003cli\u003eA restart is required after enabling it for the changes to take effect.\u003c/li\u003e\n\n\n\n\u003cli\u003eOnce enabled, the \u003cem\u003ePencils\u003c/em\u003e icon appears in the lower-right corner of the IDE window.\u003c/li\u003e\n\n\n\n\u003cli\u003eDisabling the widget does not require a restart.\u003cbr/\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eWe appreciate all of your feedback and advocacy – thanks for helping us shape Rider into the tool you need!\u003c/p\u003e\n\n\n\n\u003ch3\u003eImportant fixes\u003c/h3\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eThe \u003cem\u003eDetach\u003c/em\u003e action is now available for C++ processes, allowing you to disconnect the debugger without terminating the application. [\u003ca href=\"https://youtrack.jetbrains.com/issue/RIDER-70201/Run-Detach-button-is-missing-for-C\" target=\"_blank\" rel=\"noopener\"\u003eRIDER-70201\u003c/a\u003e]\u003c/li\u003e\n\n\n\n\u003cli\u003eRider can once again successfully create IIS virtual directories when running or debugging ASP.NET applications targeting the .NET Framework. [\u003ca href=\"https://youtrack.jetbrains.com/issue/RIDER-122091/Unable-to-create-IIS-virtual-directory\" target=\"_blank\" rel=\"noopener\"\u003eRIDER-122091\u003c/a\u003e]\u003c/li\u003e\n\n\n\n\u003cli\u003eRider no longer crashes when editing or merging \u003ccode\u003e.sln\u003c/code\u003e files due to a critical lexer issue. [\u003ca href=\"https://youtrack.jetbrains.com/issue/RIDER-114986/Sln-file-lexer-crash\" target=\"_blank\" rel=\"noopener\"\u003eRIDER-114986\u003c/a\u003e]\u003c/li\u003e\n\n\n\n\u003cli\u003eWe’ve resolved an issue where identifiers were incorrectly colored or partially styled in Unity projects. [\u003ca href=\"https://youtrack.jetbrains.com/issue/RIDER-124907/Color-scheme-is-broken\" target=\"_blank\" rel=\"noopener\"\u003eRIDER-124907\u003c/a\u003e] \u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003chr/\u003e\n\n\n\n\u003cp\u003eFor the full list of changes included in this build, please see \u003ca href=\"https://youtrack.jetbrains.com/issues/RIDER?q=Available%20in:%20%7B2025.2%20EAP%201%7D%20\" target=\"_blank\" rel=\"noopener\"\u003eour issue tracker\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cp\u003eWe encourage you to download the EAP build, give these new features a try, and share your feedback. The Early Access Program is a collaborative effort, and your input plays a vital role in making Rider the best it can be.\u003c/p\u003e\n\n\n    \n\n\n\n\n\n\n\n\u003cp\u003eThank you for being part of our EAP community, and we look forward to hearing what you think!\u003c/p\u003e\n                    \n                                                                                                                                                                            \u003cdiv\u003e\n                                \u003cdiv\u003e\n                                                                            \u003ch4\u003eSubscribe to a monthly digest curated from the .NET Tools blog:\u003c/h4\u003e\n                                                                                                            \n                                \u003c/div\u003e\n                                \n                                \u003cp\u003e\u003cimg src=\"https://blog.jetbrains.com/wp-content/themes/jetbrains/assets/img/img-form.svg\" alt=\"image description\"/\u003e\n                                                                    \u003c/p\u003e\n                            \u003c/div\u003e\n                                                            \u003c/div\u003e\n                \u003ca href=\"#\"\u003e\u003c/a\u003e\n                \n                \n            \u003c/section\u003e\n                    \u003cdiv\u003e\n                \u003cp\u003e\n                    \u003ch2\u003eDiscover more\u003c/h2\u003e\n                \u003c/p\u003e\n                \n            \u003c/div\u003e\n                \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": null,
  "modifiedTime": null
}
