{
  "id": "27a868cc-7e62-4b59-b93a-8111c803081f",
  "title": "Software Developers on AI: Insights and Opportunities",
  "link": "https://blog.jetbrains.com/research/2025/06/software-developers-on-ai/",
  "description": "As AI tools continue to advance and become bigger parts of our lives, it is important to think critically about AI interactions. At JetBrains, the Developer Experience (DX) and Human-AI eXperience (HAX) study this, with a particular interest in enhancing these interactions in code-related tasks. In this post we will look at how our teams […]",
  "author": "Katie Fraser",
  "published": "Wed, 18 Jun 2025 12:02:46 +0000",
  "source": "https://blog.jetbrains.com/feed",
  "categories": [
    "research",
    "developer-experience",
    "hax",
    "human-ai-experience",
    "jetbrains-research",
    "self-determination-theory"
  ],
  "byline": "Katie Fraser",
  "length": 15601,
  "excerpt": "As AI tools continue to advance and become bigger parts of our lives, it is important to think critically about AI interactions. At JetBrains, some of our research teams study this, with a particular interest in enhancing these interactions in code-related tasks. In this post we will look at how our teams applied insights from a leading theory on motivation, Self-Determination Theory, to empirical results, and identified areas for actionable improvement.",
  "siteName": "The JetBrains Blog",
  "favicon": "https://blog.jetbrains.com/wp-content/uploads/2024/01/cropped-mstile-310x310-1-180x180.png",
  "text": "JetBrains Research Research is crucial for progress and innovation, which is why at JetBrains we are passionate about both scientific and market research Research As AI tools continue to advance and become bigger parts of our lives, it is important to think critically about AI interactions. At JetBrains, the Developer Experience (DX) and Human-AI eXperience (HAX) study this, with a particular interest in enhancing these interactions in code-related tasks. In this post we will look at how our teams applied insights from a leading theory on motivation, Self-Determination Theory, to empirical results, and identified areas for actionable improvement. The roadmap for this post is the following: Introduction to Self-Determination TheorySDT in connection with software developers’ survey and interview responses to questions about their challenges, successes, needs, and wishes from AI in coding environments From the motivation-theory perspective, why relatedness is important for developers and their AI tools and an ongoing HAX project working to fill this gap Whether you are a developer interested in improving your AI interactions or you’re just interested in applying motivation theory to different contexts, we hope you can learn something new! Self-Determination Theory To research developers’ productivity and motivation, we need a solid theoretical framework. A framework commonly used in motivation psychology is Self-Determination Theory (SDT). Introduced in the 1980s by E. Deci and R. Ryan, this theory analyzes how social and cultural factors can affect a person’s well-being and motivation. Essential to this theory are the following three psychological needs: Self-Determination Theory predicts that when contextual conditions support and work towards fulfilling these three psychological requirements, the individual is more likely to be motivated and engaged. In contrast, when these needs are unmet, or “thwarted” in the theory’s terminology, their motivation and engagement will be negatively impacted. The image below illustrates this. Before jumping into the empirical work below, we can apply the three needs to developers and AI. Take a look at the following list for examples of how developers’ motivation, engagement, and well-being could be enhanced with specific AI features. What would you add? In the rest of this post, we will look at how this does or doesn’t align with what developers actually say when asked what they want from AI. Then we’ll describe how to support these needs with potential next steps, including best practices and further research directions from our HAX team. What developers want from AI Traditionally, developer productivity has been analyzed from a performance-centric perspective. Recently, more researchers are showing interest in a flipped viewpoint, bringing the focus away from performance metrics and towards the non-technical context. This means that the frameworks used to develop empirical studies and to analyze the results are increasingly looking towards fields such as psychology and including theories such as Self-Determination Theory. In this section, we take a look at JetBrains studies that asked developers about what they expect from AI tools in their coding environments. What developers want to delegate to AI  Every year since 2017, we at JetBrains has been conducting our State of the Developer Ecosystem Survey, with tens of thousands of responses from developers all over the world. The survey is thoughtfully designed, with features like localization in 10 different languages, only showing relevant sections based on participants’ responses to minimize effort, and updating the survey annually to reflect advances in the field. Here, we will look at the 2023 survey, because it is the first time that respondents were asked targeted questions about AI and, as we will see below, these results pattern similarly to results from later empirical studies. Our DX Research and Survey teams carefully clean the raw data before analysis with clearly defined criteria, such as omitting duplicate submissions or those with conflicting responses (e.g., claiming to be 18–20 years old while also claiming to have more than 16 years of industry experience). If you are interested, there are more details about the survey’s methodology on the survey page. Specifics of the survey include: Submissions before data cleaning: more than 35 thousand; after data cleaning: more than 26 thousand Participants reported being from 196 countries Responses were collected from both internal and external sources (e.g., through social media ads) Over 17 thousand respondents answered target questions about AI The following figures depict the percentage of answers to three questions from the 2023 Developer Ecosystem survey: (A) What activity is the most time-consuming? (B) How enjoyable/unpleasant do you find these activities? and (C) How likely is it that you would delegate the following activities to an AI assistant (in an ideal world where the performance of an AI assistant is humanlike)? A: What activity is the most time-consuming? The respondents could choose their top three answers out of twelve possibilities. Figure A shows a snapshot of the survey responses. From top to bottom, we can see which categories are reported to be the most time consuming: the top activity is writing code with almost 80% of the respondents choosing it as a time-consuming task, then understanding code with half of the respondents choosing it. Less than one-third of the respondents chose any of the other three tasks. B: How enjoyable or unpleasant do you find these activities? C: How likely is it that you would delegate the following activities to an AI assistant (in an ideal world where the performance of an AI assistant is humanlike)?  The answers to the other two questions about enjoyability and delegation are depicted in Figures B and C, where we see an interesting pattern in the results. Similar to Figure A, there is a split between the top two categories (understanding code and writing code) and the bottom three (writing code comments/documentation, writing tests, and searching for code fragments inside the database). These responses indicate that while understanding and writing code eat up a lot of developers’ time (according to Figure A), the developers themselves do not wish to delegate these relatively enjoyable tasks (according to Figures B and C). They would rather delegate the more unpleasant activities to an AI assistant, thus freeing up time and energy for writing and understanding code. In a recent paper titled Using AI-based Coding Assistants in Practice: State of Affairs, Perceptions, and Ways Forward, our HAX team asked developers similar questions as in the 2023 State of the Developer Ecosystem survey, in addition to other questions. After cleaning the data to eliminate inconsistencies like those described for the survey above, the final sample contained 481 responses from experienced developers across 71 countries: Almost half reported having more than 10 years of experience and almost one-third reported having more than 15 years of experience. The approach in this paper differs from the research described above, but the results show a similar pattern. Instead of asking developers about twelve different code-related activities, our HAX team first asked them about five broad categories, and then posed more pointed questions about the individual stages of the activities. In addition, participants were asked to rate answers on a 5-point Likert scale, instead of picking their top three or rating on a 3-point scale. The responses to questions on the five broad activities, similar to those in Figures B and C, are shown in the image below. (If you are interested in more details about reported AI use in specific stages of these activities or developers’ perceptions about AI tools in coding environments, check out the paper.) D: How unpleasant or enjoyable is this activity for you? E: How likely is it that you would delegate this activity to an AI assistant? Both images from Sergeyuk et al. (2025: 13) Figures D and E show similarities in the developers’ responses to Figures B and C, despite different methodologies. Namely, the responses in Figures D and E indicate that writing tests and writing natural language artifacts (which includes code comments/documentation, an activity specified in the 2023 survey) are the two activities that developers both find the most unpleasant and would most like to delegate to AI. The other three activities tend to suggest the same relationship between enjoyability and delegation, but not as strongly. From these survey results, we can see that developers: Find coding-related activities more enjoyable and are willing to do these activities themselves. Would like to delegate other tasks to AI. In terms of SDT and according to these survey responses, software developers are interested in AI features and tools that enhance their autonomy and competence.  What AI features developers want to see The previous subsection described research looking at how developers view certain coding-related activities and showed that the activities rated as more unpleasant are those that developers would more like to delegate to AI tools. The responses reported in those studies indicated that developers are interested in tools that support their autonomy and competence needs. This subsection looks at a study that asked developers open-ended questions, adding to the insights from the survey data in the previous subsection.  In a 2024 paper, our HAX team conducted interviews with users of JetBrains IDEs. In the 35 semi-structured interviews, the researchers asked participants about AI: their overall experience, tool use in coding, challenges and successes of in-IDE experiences, needs and desired features, and future perspectives.  Our team analyzed the developers’ answers, found clear thematic groupings of their needs, and assembled them into broader topics. They named the resulting map of participants’ concerns a design space, or a chart of what can be designed, innovated, or implemented to address those concerns. The five topics are listed in the table below, with examples of the specific ideas expressed by the study participants. The themes that emerged in the interviews include respondents’ needs for efficient, context-aware, and user-friendly AI programming assistants that integrate smoothly into their workflows, as well as concerns related to privacy, security, and ethics. Based on these insights, our HAX team provides practical guidance for improving AI tools for developers. Here are some of their tips: Create proactive AI that can make autonomous suggestions and suggest improvements with direct changes. For example, when a user starts a new project, the tool would be able to generate an appropriate project structure. Personalize AI to accommodate the developer’s unique needs and workflows. Ways to do this include custom setups, anywhere in-IDE access, and having an assistant that learns from user feedback. Develop more reliable tools so users are more likely to adopt AI in coding environments. Features that prioritize transparency and reliability include on-premise AI, suggestions with sources and explanations, and up-to-date data. In terms of SDT, the interviews suggest that many developers are already discussing AI tools in ways that touch on autonomy and competence. Namely, topics 1-4 address autonomy and topics 4-5 address competence. There is, however, a distinct lack of discussion of topics connected to the third need of relatedness.  In both this subsection and the preceding one, we have seen developers’ answers to various types of questions. The general tendency in their answers showed how supporting developers’ autonomy and competence with AI tools is a prominent topic for both researchers and developers, but that so far relatedness is missing from the discussions. The next section takes a look at why this need should also be considered and what our HAX team is already doing to address this. The previous section presented what developers think about the current state of AI tools in coding and what they would like to see from AI tools. We looked at the results through the lens of psychology, targeting the basic needs of autonomy, competence, and relatedness. This final subsection talks about the importance of studying relatedness in connection with AI and an ongoing research project of the JetBrains HAX team. When thinking about AI, connecting with people is not usually a top priority. But that doesn’t mean the topic should be ignored, especially as AI tools in their current state are already affecting how people connect with one another. Think about when you have a question for a busy colleague, but you’re worried it is too trivial (or complex!) to bother them with it. An alternative to asking your colleague is to use an AI tool, something we already see in practice. For example, in the State of the Developer Ecosystem 2024 survey, over two-thirds of respondents reported that a benefit of AI is that it reduces time spent searching for information.The responses to this one survey question indicate that AI is already changing human-to-human interaction.  Even if the more recent advances in AI are helping us, say, not bother colleagues with trivial questions, the flipside of no longer asking a colleague is that we are also reducing team interactions, and therefore relatedness. This is why our HAX team has started a new study to look more closely at how AI can influence developer teams. In collaboration with the University of Zurich and the University of British Columbia, our team is exploring when and why people turn to AI instead of their teammates and how AI impacts team dynamics. The research will offer data on how AI affects work processes and team dynamics, with the following benefits: Understanding when developers choose AI over human teammates can help us better integrate AI to support, and not replace, team interactions. Recognizing where AI tools are inadequate can help create tools and strategies to address these issues, ensuring smoother projects.  Identifying patterns in effective AI use will allow us to tailor tools for different team sizes, roles, and projects. Rather than replacing developers, AI has the potential to enhance their work and overall well-being. We want to keep the conversation open between developers and researchers so that we can continue creating environments where people and technology can collaborate productively. Watch this space for more work by our JetBrains Research teams on this topic! Discover more",
  "image": "https://blog.jetbrains.com/wp-content/uploads/2025/06/JB-social-BlogSocialShare-1280x720-2x-2.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"main\"\u003e\n    \u003cdiv\u003e\n                        \u003ca href=\"https://blog.jetbrains.com/research/\"\u003e\n                                                                                                                            \u003ch2\u003eJetBrains Research\u003c/h2\u003e\n                                                                                    \u003c/a\u003e\n                                                    \u003cp\u003eResearch is crucial for progress and innovation, which is why at JetBrains we are passionate about both scientific and market research\u003c/p\u003e\n                                            \u003c/div\u003e\n                            \u003csection data-clarity-region=\"article\"\u003e\n                \u003cdiv\u003e\n                    \t\t\t\t\u003cp\u003e\u003ca href=\"https://blog.jetbrains.com/research/category/research/\"\u003eResearch\u003c/a\u003e\u003c/p\u003e                    \n                    \n\u003cp\u003eAs AI tools continue to advance and become bigger parts of our lives, it is important to think critically about AI interactions. At JetBrains, the Developer Experience (DX) and \u003ca href=\"https://lp.jetbrains.com/research/hax/\" target=\"_blank\" rel=\"noopener\"\u003eHuman-AI eXperience (HAX)\u003c/a\u003e study this, with a particular interest in enhancing these interactions in code-related tasks. In this post we will look at how our teams applied insights from a leading theory on motivation, Self-Determination Theory, to empirical results, and identified areas for actionable improvement.\u003c/p\u003e\n\n\n\n\u003cp\u003eThe roadmap for this post is the following:\u003c/p\u003e\n\n\n\n\u003cdiv id=\"rank-math-toc\"\u003e\u003cnav\u003e\u003col\u003e\u003cli\u003e Introduction to \u003ca href=\"#self-determination-theory\"\u003eSelf-Determination Theory\u003c/a\u003e\u003c/li\u003e\u003cli\u003eSDT in connection with \u003ca href=\"#what-developers-want-from-ai\"\u003e software developers’ survey and interview responses \u003c/a\u003e  to questions about their challenges, successes, needs, and wishes from AI in coding environments  \u003c/li\u003e\u003cli\u003eFrom the motivation-theory perspective, \u003ca href=\"#why-relatedness-is-important-for-developers-and-their-ai-tools\"\u003ewhy relatedness is important for developers and their AI tools\u003c/a\u003e and an ongoing HAX project working to fill this gap\u003c/li\u003e\u003c/ol\u003e\u003c/nav\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eWhether you are a developer interested in improving your AI interactions or you’re just interested in applying motivation theory to different contexts, we hope you can learn something new!\u003c/p\u003e\n\n\n\n\u003ch2 id=\"self-determination-theory\"\u003eSelf-Determination Theory\u003c/h2\u003e\n\n\n\n\u003cp\u003eTo research developers’ productivity and motivation, we need a solid theoretical framework. A framework commonly used in motivation psychology is \u003ca href=\"https://selfdeterminationtheory.org/the-theory/\" target=\"_blank\" rel=\"noopener\"\u003eSelf-Determination Theory\u003c/a\u003e (SDT). Introduced in the 1980s by E. Deci and R. Ryan, this theory analyzes how social and cultural factors can affect a person’s well-being and motivation.\u003c/p\u003e\n\n\n\n\u003cp\u003eEssential to this theory are the following three psychological needs:\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cimg decoding=\"async\" width=\"740\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXcY9yQQF517uSATLgjxqRmDd_fWpG8JBP5WNC1OJ3X4EsimSadmqEK2GexMgB51AzbyDnOFz1j3P-p1XPWLFY1wmpf_q8zF1WN_7QGk0ei7UgM-T43t-Xm-sG1fKC3cbCnd0m17bA?key=mzNAXFmoG5A0TCg9bcjcUg\"/\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003eSelf-Determination Theory predicts that when contextual conditions support and work towards fulfilling these three psychological requirements, the individual is more likely to be motivated and engaged. In contrast, when these needs are unmet, or “thwarted” in the theory’s terminology, their motivation and engagement will be negatively impacted. The image below illustrates this.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cimg width=\"456\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXdHDrNyWSw38a0zj9f66XxYl_WqOlIXdoa11CS71X3DCDqJlbhF7XNcFCIVwka2LKRslhgYNtAdyALzwXwJew4DiiDCijPyp0cjpyCHauTvm-Phn0OairCUu9unp98RON34RivZCw?key=mzNAXFmoG5A0TCg9bcjcUg\"/\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003eBefore jumping into the empirical work below, we can apply the three needs to developers and AI. Take a look at the following list for examples of how developers’ motivation, engagement, and well-being could be enhanced with specific AI features. What would you add?\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cimg decoding=\"async\" width=\"750\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXfLL-hUMDJuw_VXSNllQDAkpHQK4-KscdUBRuu-OgzIPhJRVxFnIOZemnsyNrL2pntg2piSgFEwyvFLg0LNiIV0h3EDm7J3OWwPynf8f000Pu1tuopPKLbUy_YUY6W2b3Xu2RvOLw?key=mzNAXFmoG5A0TCg9bcjcUg\" \u003c=\"\" p=\"\"/\u003e\n\n\n\n\u003c/p\u003e\u003cp\u003eIn the rest of this post, we will look at how this does or doesn’t align with what developers actually say when asked what they want from AI. Then we’ll describe how to support these needs with potential next steps, including best practices and further research directions from our HAX team.\u003c/p\u003e\n\n\n\n\u003ch2 id=\"what-developers-want-from-ai\"\u003eWhat developers want from AI\u003c/h2\u003e\n\n\n\n\u003cp\u003eTraditionally, developer productivity has been analyzed from a performance-centric perspective. Recently, more researchers are showing interest in a flipped viewpoint, bringing the focus away from performance metrics and towards the non-technical context. This means that the frameworks used to develop empirical studies and to analyze the results are increasingly looking towards fields such as psychology and including theories such as Self-Determination Theory. In this section, we take a look at JetBrains studies that asked developers about what they expect from AI tools in their coding environments.\u003c/p\u003e\n\n\n\n\u003ch2 id=\"which-tasks-developers-want-to-delegate-to-ai\"\u003eWhat developers want to delegate to AI \u003c/h2\u003e\n\n\n\n\u003cp\u003eEvery year \u003ca href=\"https://www.jetbrains.com/lp/devecosystem-2017/\" target=\"_blank\" rel=\"noopener\"\u003esince 2017\u003c/a\u003e, we at JetBrains has been conducting our \u003ca href=\"https://www.jetbrains.com/lp/devecosystem-2024/\" target=\"_blank\" rel=\"noopener\"\u003eState of the Developer Ecosystem Survey\u003c/a\u003e, with tens of thousands of responses from developers all over the world. The survey is thoughtfully designed, with features like localization in 10 different languages, only showing relevant sections based on participants’ responses to minimize effort, and updating the survey annually to reflect advances in the field. Here, we will look at \u003ca href=\"https://www.jetbrains.com/lp/devecosystem-2023/\" target=\"_blank\" rel=\"noopener\"\u003ethe 2023 survey\u003c/a\u003e, because it is the first time that respondents were asked targeted questions about AI and, as we will see below, these results pattern similarly to results from later empirical studies.\u003c/p\u003e\n\n\n\n\u003cp\u003eOur DX Research and Survey teams carefully clean the raw data before analysis with clearly defined criteria, such as omitting duplicate submissions or those with conflicting responses (e.g., claiming to be 18–20 years old while also claiming to have more than 16 years of industry experience). If you are interested, there are more details about the survey’s methodology on \u003ca href=\"https://www.jetbrains.com/lp/devecosystem-2023/methodology/\" target=\"_blank\" rel=\"noopener\"\u003ethe survey page\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cp\u003eSpecifics of the survey include:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eSubmissions before data cleaning: more than 35 thousand; after data cleaning: more than 26 thousand\u003c/li\u003e\n\n\n\n\u003cli\u003eParticipants reported being from 196 countries\u003c/li\u003e\n\n\n\n\u003cli\u003eResponses were collected from both internal and external sources (e.g., through social media ads)\u003c/li\u003e\n\n\n\n\u003cli\u003eOver 17 thousand respondents answered target questions about AI\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eThe following figures depict the percentage of answers to three questions from the 2023 Developer Ecosystem survey: (A) \u003cem\u003eWhat activity is the most time-consuming?\u003c/em\u003e (B) \u003cem\u003eHow enjoyable/unpleasant do you find these activities? \u003c/em\u003eand (C)\u003cem\u003e How likely is it that you would delegate the following activities to an AI assistant (in an ideal world where the performance of an AI assistant is humanlike)?\u003c/em\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eA: What activity is the most time-consuming?\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cimg decoding=\"async\" width=\"600\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXdzg877of22WnsFUs3gq8Sa-8AEaJ3Ij5jm5Ke-Vge5JRsRprncJ9zGQv3PoBSrgdE-TWie6W805hmiQkDHrxbY2jXxPyuMy9p2ZkrQRyYIOgufZDv3qSbl98p1VrNiXj-XqRN7iQ?key=mzNAXFmoG5A0TCg9bcjcUg\"/\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003eThe respondents could choose their top three answers out of twelve possibilities. Figure A shows a snapshot of the survey responses. From top to bottom, we can see which categories are reported to be the most time consuming: the top activity is \u003cem\u003ewriting code\u003c/em\u003e with almost 80% of the respondents choosing it as a time-consuming task, then \u003cem\u003eunderstanding code\u003c/em\u003e with half of the respondents choosing it. Less than one-third of the respondents chose any of the other three tasks.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eB: How enjoyable or unpleasant do you find these activities?\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cimg decoding=\"async\" width=\"700\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXfrFUxo8dfjL4IWAy0wSrC-XSO1i0GJ6f63arMAMDWg-LUCn_3FNnZzaV3v2NzCN7QPOqiAE_C29BoRp055Dyodlb5-BKsfCMbmePhSObyzfdZ6EMDEoel7w06EmODs6roicF8E3A?key=mzNAXFmoG5A0TCg9bcjcUg\"/\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eC: How likely is it that you would delegate the following activities to an AI assistant (in an ideal world where the performance of an AI assistant is humanlike)? \u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cimg decoding=\"async\" width=\"740\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXcPB20R0AkeU3UKuuIJOHftrX_OdTIDkFWYtqP5h_BGr_ufNSip7l3iumtApJsun5y-2uCwiX8L3A2LI126hR0G4i2-WBA2bUz5dsvmt2tc-1SE4ys7unDY0trPe40v8FuscC2A3g?key=mzNAXFmoG5A0TCg9bcjcUg\"/\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003eThe answers to the other two questions about enjoyability and delegation are depicted in Figures B and C, where we see an interesting pattern in the results. Similar to Figure A, there is a split between the top two categories\u003cem\u003e \u003c/em\u003e(\u003cem\u003eunderstanding code\u003c/em\u003e and \u003cem\u003ewriting code\u003c/em\u003e) and the bottom three (\u003cem\u003ewriting code comments/documentation, writing tests, \u003c/em\u003eand\u003cem\u003e searching for code fragments inside the database\u003c/em\u003e).\u003c/p\u003e\n\n\n\n\u003cp\u003eThese responses indicate that while understanding and writing code eat up a lot of developers’ time (according to Figure A), the developers themselves do not wish to delegate these relatively enjoyable tasks (according to Figures B and C). They would rather delegate the more unpleasant activities to an AI assistant, thus freeing up time and energy for writing and understanding code.\u003c/p\u003e\n\n\n\n\u003cp\u003eIn a \u003ca href=\"https://www.sciencedirect.com/science/article/abs/pii/S0950584924002155?via%3Dihub\" target=\"_blank\" rel=\"noopener\"\u003erecent paper\u003c/a\u003e titled \u003cem\u003eUsing AI-based Coding Assistants in Practice: State of Affairs, Perceptions, and Ways Forward\u003c/em\u003e, our HAX team asked developers similar questions as in the 2023 State of the Developer Ecosystem survey, in addition to other questions. After cleaning the data to eliminate inconsistencies like those described for the survey above, the final sample contained 481 responses from experienced developers across 71 countries: Almost half reported having more than 10 years of experience and almost one-third reported having more than 15 years of experience.\u003c/p\u003e\n\n\n\n\u003cp\u003eThe approach in this paper differs from the research described above, but the results show a similar pattern. Instead of asking developers about twelve different code-related activities, our HAX team first asked them about five broad categories, and then posed more pointed questions about the individual stages of the activities. In addition, participants were asked to rate answers on a 5-point Likert scale, instead of picking their top three or rating on a 3-point scale.\u003c/p\u003e\n\n\n\n\u003cp\u003eThe responses to questions on the five broad activities, similar to those in Figures B and C, are shown in the image below. (If you are interested in more details about reported AI use in specific stages of these activities or developers’ perceptions about AI tools in coding environments, check out the \u003ca href=\"https://www.sciencedirect.com/science/article/abs/pii/S0950584924002155?via%3Dihub\" target=\"_blank\" rel=\"noopener\"\u003epaper\u003c/a\u003e.)\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eD: How unpleasant or enjoyable is this activity for you?\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cimg decoding=\"async\" width=\"350\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXe3LDdhfCq6S5m7GQwI6Kkf8Uyi9P9r3iSORdSPfVGSHPFG0NsWutHOBrH8SPlMiw7UW-4k-qVOyeLHr1ktYqXfm9w2f3xPOy85dmjjIrtgpJ-a2d4WxwhOrLwfXg6f9JePf9F1?key=mzNAXFmoG5A0TCg9bcjcUg\"/\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eE: How likely is it that you would delegate this activity to an AI assistant?\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cimg decoding=\"async\" width=\"350\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXf5YMrdiprpZvRDJoZDm6xp1aczYlwbKHSlL4u_CUVWGEVybbgF8pmT6FHBm-ddV0jURBjLC-e-ynz6xp3tJsxl3au5VBSs_lQV5kxDcs0IH3KVwoJn7UlOA7B61xXq7Fxn-8RmSQ?key=mzNAXFmoG5A0TCg9bcjcUg\"/\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cem\u003eBoth images from Sergeyuk et al. (2025: 13)\u003c/em\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003eFigures D and E show similarities in the developers’ responses to Figures B and C, despite different methodologies. Namely, the responses in Figures D and E indicate that \u003cem\u003ewriting tests\u003c/em\u003e and \u003cem\u003ewriting natural language artifacts\u003c/em\u003e (which includes code comments/documentation, an activity specified in the 2023 survey) are the two activities that developers both find the most unpleasant and would most like to delegate to AI. The other three activities tend to suggest the same relationship between enjoyability and delegation, but not as strongly.\u003c/p\u003e\n\n\n\n\u003cp\u003eFrom these survey results, we can see that developers:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eFind coding-related activities more enjoyable and are willing to do these activities themselves.\u003c/li\u003e\n\n\n\n\u003cli\u003eWould like to delegate other tasks to AI.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eIn terms of SDT and according to these survey responses,\u003cstrong\u003e software developers are interested in AI features and tools that enhance their autonomy and competence\u003c/strong\u003e. \u003c/p\u003e\n\n\n\n\u003ch2 id=\"what-ai-features-developers-want-to-see\"\u003eWhat AI features developers want to see\u003c/h2\u003e\n\n\n\n\u003cp\u003eThe previous subsection described research looking at how developers view certain coding-related activities and showed that the activities rated as more unpleasant are those that developers would more like to delegate to AI tools. The responses reported in those studies indicated that developers are interested in tools that support their autonomy and competence needs. This subsection looks at a study that asked developers open-ended questions, adding to the insights from the survey data in the previous subsection. \u003c/p\u003e\n\n\n\n\u003cp\u003eIn a \u003ca href=\"https://arxiv.org/pdf/2410.08676\" target=\"_blank\" rel=\"noopener\"\u003e2024 paper\u003c/a\u003e, our HAX team conducted interviews with users of JetBrains IDEs. In the 35 semi-structured interviews, the researchers asked participants about AI: their overall experience, tool use in coding, challenges and successes of in-IDE experiences, needs and desired features, and future perspectives. \u003c/p\u003e\n\n\n\n\u003cp\u003eOur team analyzed the developers’ answers, found clear thematic groupings of their needs, and assembled them into broader topics. They named the resulting map of participants’ concerns a \u003cstrong\u003edesign space\u003c/strong\u003e, or a chart of what can be designed, innovated, or implemented to address those concerns. The five topics are listed in the table below, with examples of the specific ideas expressed by the study participants.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cimg decoding=\"async\" width=\"650\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXde85aNXFY174mtNKA5hkYlkFxwV1fIRBgN2lMF_GsWkpITl5sbm5E-lIgwrZRwCod8xa-_gKH5TQn8YnSZyvAH_ZbiSeN-D6V-crWkoJnupVAqKV8dUM51-jnXFmME_X7U0WvY?key=mzNAXFmoG5A0TCg9bcjcUg\"/\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003eThe themes that emerged in the interviews include respondents’ needs for efficient, context-aware, and user-friendly AI programming assistants that integrate smoothly into their workflows, as well as concerns related to privacy, security, and ethics.\u003c/p\u003e\n\n\n\n\u003cp\u003eBased on these insights, our HAX team provides practical guidance for improving AI tools for developers. Here are some of their tips:\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eCreate proactive AI\u003c/strong\u003e that can make autonomous suggestions and suggest improvements with direct changes. For example, when a user starts a new project, the tool would be able to generate an appropriate project structure.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003ePersonalize AI\u003c/strong\u003e to accommodate the developer’s unique needs and workflows. Ways to do this include custom setups, anywhere in-IDE access, and having an assistant that learns from user feedback.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eDevelop more reliable tools\u003c/strong\u003e so users are more likely to adopt AI in coding environments. Features that prioritize transparency and reliability include on-premise AI, suggestions with sources and explanations, and up-to-date data.\u003c/p\u003e\n\n\n\n\u003cp\u003eIn terms of SDT, the interviews suggest that many developers are already discussing AI tools in ways that touch on autonomy and competence. Namely, topics 1-4 address autonomy and topics 4-5 address competence. There is, however, a distinct lack of discussion of topics connected to the third need of relatedness. \u003c/p\u003e\n\n\n\n\u003cp\u003eIn both this subsection and the preceding one, we have seen developers’ answers to various types of questions. The general tendency in their answers showed how \u003cstrong\u003esupporting developers’ autonomy and competence with AI tools is a prominent topic for both researchers and developers\u003c/strong\u003e, but that so far relatedness is missing from the discussions. The next section takes a look at why this need should also be considered and what our HAX team is already doing to address this.\u003c/p\u003e\n\n\n\n\n\n\n\n\u003cp\u003eThe previous section presented what developers think about the current state of AI tools in coding and what they would like to see from AI tools. We looked at the results through the lens of psychology, targeting the basic needs of autonomy, competence, and relatedness. This final subsection talks about the importance of studying relatedness in connection with AI and an ongoing research project of the JetBrains HAX team.\u003c/p\u003e\n\n\n\n\u003cp\u003eWhen thinking about AI, connecting with people is not usually a top priority. But that doesn’t mean the topic should be ignored, especially as AI tools in their current state are already affecting how people connect with one another.\u003c/p\u003e\n\n\n\n\u003cp\u003eThink about when you have a question for a busy colleague, but you’re worried it is too trivial (or complex!) to bother them with it. An alternative to asking your colleague is to use an AI tool, something we already see in practice. For example, in the \u003ca href=\"https://www.jetbrains.com/lp/devecosystem-2024/\" target=\"_blank\" rel=\"noopener\"\u003eState of the Developer Ecosystem 2024 survey\u003c/a\u003e, over two-thirds of respondents reported that a benefit of AI is that it reduces time spent searching for information.The responses to this one survey question indicate that \u003cstrong\u003eAI is already changing human-to-human interaction\u003c/strong\u003e. \u003c/p\u003e\n\n\n\n\u003cp\u003eEven if the more recent advances in AI are helping us, say, not bother colleagues with trivial questions, the flipside of no longer asking a colleague is that we are also reducing team interactions, and therefore relatedness. This is why our HAX team has started a new study to look more closely at how AI can influence developer teams.\u003c/p\u003e\n\n\n\n\u003cp\u003eIn collaboration with the University of Zurich and the University of British Columbia, our team is exploring \u003cstrong\u003ewhen and why people turn to AI instead of their teammates\u003c/strong\u003e and \u003cstrong\u003ehow AI impacts team dynamics\u003c/strong\u003e. The research will offer data on how AI affects work processes and team dynamics, with the following benefits:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eUnderstanding when developers choose AI over human teammates can help us better integrate AI to support, and not replace, team interactions.\u003c/li\u003e\n\n\n\n\u003cli\u003eRecognizing where AI tools are inadequate can help create tools and strategies to address these issues, ensuring smoother projects. \u003c/li\u003e\n\n\n\n\u003cli\u003eIdentifying patterns in effective AI use will allow us to tailor tools for different team sizes, roles, and projects.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eRather than replacing developers, AI has the potential to enhance their work and overall well-being. We want to keep the conversation open between developers and researchers so that we can continue creating environments where people and technology can collaborate productively. Watch this space for more work by our JetBrains Research teams on this topic!\u003c/p\u003e\n                    \n                                                                                                                                                                                                                                    \u003c/div\u003e\n                \u003ca href=\"#\"\u003e\u003c/a\u003e\n                \n                \n            \u003c/section\u003e\n                    \u003cdiv\u003e\n                \u003cp\u003e\n                    \u003ch2\u003eDiscover more\u003c/h2\u003e\n                \u003c/p\u003e\n                \n            \u003c/div\u003e\n                \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "17 min read",
  "publishedTime": null,
  "modifiedTime": null
}
