{
  "id": "55b232be-9cd1-4a37-ade4-2894d1f956ce",
  "title": "AWS CodeBuild Now Supports Fastlane to Simplify iOS Deployments",
  "link": "https://www.infoq.com/news/2025/02/aws-codebuild-macos-fastlane/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "CodeBuild, AWS continuous integration service, now provides Fastlane support to manage tasks such as code signing, screenshot generation, beta distribution, and app store submissions for iOS, iPadOS, watchOS, tvOS, and macOS apps. By Sergio De Simone",
  "author": "Sergio De Simone",
  "published": "Tue, 11 Feb 2025 17:00:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "MacOS",
    "Apple",
    "Continuous Integration",
    "Mobile",
    "iOS",
    "Continuous Deployment",
    "Development",
    "DevOps",
    "news"
  ],
  "byline": "Sergio De Simone",
  "length": 2892,
  "excerpt": "CodeBuild, AWS continuous integration service, now provides Fastlane support to manage tasks such as code signing, screenshot generation, beta distribution, and app store submissions for iOS, iPadOS,",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s2_20250211144358/apple-touch-icon.png",
  "text": "CodeBuild, AWS continuous integration service, now provides Fastlane support to manage tasks such as code signing, screenshot generation, beta distribution, and app store submissions for iOS, iPadOS, watchOS, tvOS, and macOS apps. Amazon started to support macOS environments in CodeBuild a few months ago. As AWS principal developer advocate Sébastien Stormacq notes, manually installing Fastlane was an unnecessary hurdle for developers wanting to use CodeBuild. Therefore, AWS now installs Fastlane by default to make it ready to use out-of-the-box. While having Fastlane available by default makes it simpler to use, developers still have to configure it properly for their projects and integrate it into CodeBuild. The key step to this, as Stormacq explains, is providing Fastlane with access to the private keys, certificates, and mobile provisioning profiles required for iOS builds. To this aim, Fastlane stores all signing materials in a private repository hosted on GitHub, GitLab, or secure Cloud storage, and encrypts them using a password. At build time, it retrieves all signing materials and uses them with codebuild. This is the basic mechanism in Fastlane that makes it possible for a team to securely share the signing materials necessary for iOS builds and deployments. Once Fastlane is configured locally, you need configure CodeBuild to use it. This requires setting several environment variables to store the password to decrypt signing materials, the Apple ID session cookie, and Git's basic authorization. For increased security, Stormacq strongly suggests to use AWS Secrets Manager to store those values. For example, for the MATCH_PASSWORD variable containing the encryption password, you would use: aws --region $REGION secretsmanager create-secret --name /CodeBuild/MATCH_PASSWORD --secret-string MySuperSecretPassword The process of configuring Fastlane requires several steps with multiple failure points. If anything goes wrong, says Stormacq, the first step is checking the provided environment variables and ensuring CodeBuild has access to AWS Secrets Manager. Refer to Stormacq's article for a step-by-step introduction. Fastlane is available on all macOS images at no extra cost. In addition to Fastlane, CodeBuild images for Mac also include Xcode and support a variety of tools and frameworks, including Java, Kotlin, Node.js, Python, Ruby, Rust, and Swift. As a final note, CodeBuild for macOS utilizes reserved fleets, which are designed for building and testing in latency-sensitive scenarios but are less flexible than on-demand fleets. Indeed, while on-demand fleets are charged per minute of build time, macOS fleets are charged for a 24-hour minimum, due to Apple's SLA for macOS. About the Author Sergio De Simone",
  "image": "https://res.infoq.com/news/2025/02/aws-codebuild-macos-fastlane/en/headerimage/aws-codebuild-macos-fastlane-1739292731536.jpeg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003e\u003ca href=\"https://aws.amazon.com/blogs/aws/codebuild-for-macos-adds-support-for-fastlane/\"\u003eCodeBuild, AWS continuous integration service, now provides Fastlane support\u003c/a\u003e to manage tasks such as \u003ca href=\"https://docs.fastlane.tools/codesigning/getting-started/\"\u003ecode signing\u003c/a\u003e, \u003ca href=\"https://docs.fastlane.tools/getting-started/ios/screenshots/\"\u003escreenshot generation\u003c/a\u003e, \u003ca href=\"https://docs.fastlane.tools/getting-started/ios/beta-deployment/\"\u003ebeta distribution\u003c/a\u003e, and \u003ca href=\"https://docs.fastlane.tools/getting-started/ios/appstore-deployment/\"\u003eapp store submissions\u003c/a\u003e for iOS, iPadOS, watchOS, tvOS, and macOS apps.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.infoq.com/news/2024/09/aws-codebuild-mac/\"\u003eAmazon started to support macOS environments in CodeBuild a few months ago\u003c/a\u003e. As AWS principal developer advocate Sébastien Stormacq notes, manually installing Fastlane was an unnecessary hurdle for developers wanting to use CodeBuild. Therefore, AWS now installs Fastlane by default to make it ready to use out-of-the-box.\u003c/p\u003e\n\n\u003cp\u003eWhile having Fastlane available by default makes it simpler to use, developers still have to configure it properly for their projects and integrate it into CodeBuild.\u003c/p\u003e\n\n\u003cp\u003eThe key step to this, as Stormacq explains, is providing Fastlane with access to the private keys, certificates, and mobile provisioning profiles required for iOS builds. To this aim, Fastlane stores all signing materials in a private repository hosted on GitHub, GitLab, or secure Cloud storage, and encrypts them using a password. At build time, it retrieves all signing materials and uses them with \u003ccode\u003ecodebuild\u003c/code\u003e. This is the basic mechanism in Fastlane that makes it possible for a team to securely share the signing materials necessary for iOS builds and deployments.\u003c/p\u003e\n\n\u003cp\u003eOnce Fastlane is configured locally, you need configure CodeBuild to use it. This requires setting several environment variables to store the password to decrypt signing materials, the Apple ID session cookie, and Git\u0026#39;s basic authorization. For increased security, Stormacq strongly suggests to use AWS Secrets Manager to store those values. For example, for the \u003ccode\u003eMATCH_PASSWORD\u003c/code\u003e variable containing the encryption password, you would use:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eaws --region $REGION secretsmanager create-secret --name /CodeBuild/MATCH_PASSWORD --secret-string MySuperSecretPassword\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe process of configuring Fastlane requires several steps with multiple failure points. If anything goes wrong, says Stormacq, the first step is checking the provided environment variables and ensuring CodeBuild has access to AWS Secrets Manager. Refer to Stormacq\u0026#39;s article for a step-by-step introduction.\u003c/p\u003e\n\n\u003cp\u003eFastlane is available on all macOS images at no extra cost. In addition to Fastlane, CodeBuild images for Mac also include Xcode and support a variety of tools and frameworks, including Java, Kotlin, Node.js, Python, Ruby, Rust, and Swift.\u003c/p\u003e\n\n\u003cp\u003eAs a final note, CodeBuild for macOS utilizes reserved fleets, which are designed for building and testing in latency-sensitive scenarios but are less flexible than on-demand fleets. Indeed, while on-demand fleets are charged per minute of build time, macOS fleets are charged for a 24-hour minimum, due to Apple\u0026#39;s SLA for macOS.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Sergio-De-Simone\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eSergio De Simone\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": "2025-02-11T00:00:00Z",
  "modifiedTime": null
}
