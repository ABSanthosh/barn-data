{
  "id": "deae2e4a-baa0-4d29-835c-33238988c51e",
  "title": "How Locking, Saturation and CDN Network Issues Brought Down Canva",
  "link": "https://www.infoq.com/news/2025/02/canva-incident-report/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "The Canva engineering team recently published their post-mortem on the outage they experienced last November, detailing the API Gateway failure and the lessons learned during the incident. By Renato Losio",
  "author": "Renato Losio",
  "published": "Sat, 08 Feb 2025 05:19:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "API Gateway",
    "CDN",
    "Resilience",
    "Incident Response",
    "Cloud",
    "DevOps",
    "Architecture \u0026 Design",
    "news"
  ],
  "byline": "Renato Losio",
  "length": 4742,
  "excerpt": "The Canva engineering team recently published their post-mortem on the outage they experienced last November, detailing the API Gateway failure and the lessons learned during the incident.",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s1_20250205131451/apple-touch-icon.png",
  "text": "The Canva engineering team recently published their post-mortem on the outage they experienced last November, detailing the API Gateway failure and the lessons learned during the incident. Brendan Humphreys, Canva's CTO, acknowledges: On November 12, 2024, Canva experienced a critical outage that affected the availability of canva.com. From 9:08 AM UTC to approximately 10:00 AM UTC, canva.com was unavailable. This was caused by our API Gateway cluster failing due to multiple factors, including a software deployment of Canva's editor, a locking issue, and network issues in Cloudflare, our CDN provider. Canva's editor is a single-page application, deployed multiple times daily, with client devices fetching new assets through Cloudflare using a tiered caching system. However, a routing issue within the CDN provider disrupted traffic between two regions. As a result, when the assets became available on the CDN, all clients began downloading them simultaneously. This led to a sudden surge, with over 270000 pending requests being completed at the same time. Humphreys explains: Normally, an increase in errors would cause our canary system to abort a deployment. However, in this case, no errors were recorded because requests didn’t complete. As a result, over 270,000+ user requests for the JavaScript file waited on the same cache stream. Source: Canva Engineering Blog Lorin Hochstein, staff software engineer at Airbnb and author of the Surfing Complexity blog, describes the outage as a tale of saturation and resilience. Hochstein highlights: The incident wasn’t triggered by a bug in the code in the new version, or even by some unexpected emergent behavior in the code of this version. No, while the incident was triggered by a deploy, the changes from the previous version are immaterial to this outage. Rather, it was the system behavior that emerged from clients downloading the new version that led to the outage. Suddenly, the new object panel loaded simultaneously across all waiting devices, resulting in over 1.5 million requests per second to the API Gateway, a surge approximately three times the typical peak load. This overwhelming wave caused the load balancer to transform into an \"overload balancer,\" turning healthy nodes into unhealthy ones. Hochstein adds: This is a classic example of a positive feedback loop: the more tasks go unhealthy, the more traffic the healthy nodes received, the more likely those tasks will go unhealthy as well. As autoscaling failed to keep pace, API Gateway tasks began failing due to memory exhaustion, ultimately leading to a complete collapse. To address the issue, Canva's team attempted to manually increase capacity while simultaneously reducing the load on the nodes, achieving mixed results. The situation was finally mitigated when traffic was entirely blocked at the CDN layer. Humphreys details: At 9:29 AM UTC, we added a temporary Cloudflare firewall rule to block all traffic at the CDN. This prevented any traffic reaching the API Gateway, allowing new tasks to start up without being overwhelmed with incoming requests. We later redirected canva.com to our status page to make it clear to users that we were experiencing an incident. The Canva engineers gradually ramped up traffic, fully restoring it in approximately 20 minutes. In a popular HackerNews thread, John Nagle comments: This problem is similar to what electric utilities call \"load takeup\". After a power outage, when power is turned back on, there are many loads that draw more power at startup. (...) Bringing up a power grid is thus done by sections, not all at once. While all functional requirements were initially met and the automated systems exacerbated the problem, Hochstein highlights: It was up to the incident responders to adapt the behavior of the system, to change the way it functioned in order to get it back to a healthy state. (...) This is a classic example of resilience, of acting to reconfigure the behavior of your system when it enters a state that it wasn’t originally designed to handle. Humphreys concludes on Linkedin: The full picture took some time to assemble, in coordination with our very capable and helpful partners at Cloudflare (...) a riveting tale involving lost packets, cache dynamics, traffic spikes, thread contention, and task headroom. To minimize the likelihood of similar incidents in the future, the team focused on incident response process improvements, including runbook for traffic blocking and restoration, and increased resilience of the API Gateway. About the Author Renato Losio",
  "image": "https://res.infoq.com/news/2025/02/canva-incident-report/en/headerimage/generatedHeaderImage-1737840124770.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eThe Canva engineering team recently published their \u003ca href=\"https://www.canva.dev/blog/engineering/canva-incident-report-api-gateway-outage/\"\u003epost-mortem\u003c/a\u003e on the outage they experienced last November, detailing the API Gateway failure and the lessons learned during the incident. \u003ca href=\"https://www.linkedin.com/in/brendanhumphreys/\"\u003eBrendan Humphreys\u003c/a\u003e, Canva\u0026#39;s CTO, acknowledges:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eOn November 12, 2024, Canva experienced a critical outage that affected the availability of canva.com. From 9:08 AM UTC to approximately 10:00 AM UTC, canva.com was unavailable. This was caused by our API Gateway cluster failing due to multiple factors, including a software deployment of Canva\u0026#39;s editor, a locking issue, and network issues in Cloudflare, our CDN provider.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eCanva\u0026#39;s editor is a single-page application, deployed multiple times daily, with client devices fetching new assets through Cloudflare using a tiered caching system. However, a routing issue within the CDN provider disrupted traffic between two regions. As a result, when the assets became available on the CDN, all clients began downloading them simultaneously. This led to a sudden surge, with over 270000 pending requests being completed at the same time. Humphreys explains:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eNormally, an increase in errors would cause our canary system to abort a deployment. However, in this case, no errors were recorded because requests didn’t complete. As a result, over 270,000+ user requests for the JavaScript file waited on the same cache stream.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cimg alt=\"\" data-src=\"news/2025/02/canva-incident-report/en/resources/1requests-between-cdn-gateway-and-clients.c04a2309-1737840349259.png\" src=\"https://imgopt.infoq.com/fit-in/3000x4000/filters:quality(85)/filters:no_upscale()/news/2025/02/canva-incident-report/en/resources/1requests-between-cdn-gateway-and-clients.c04a2309-1737840349259.png\" rel=\"share\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eSource: Canva Engineering Blog\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.linkedin.com/in/lhochstein/\"\u003eLorin Hochstein\u003c/a\u003e, staff software engineer at Airbnb and author of the Surfing Complexity blog, describes the outage as a \u003ca href=\"https://surfingcomplexity.blog/2024/12/21/the-canva-outage-another-tale-of-saturation-and-resilience/\"\u003etale of saturation and resilience\u003c/a\u003e. Hochstein highlights:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe incident wasn’t triggered by a bug in the code in the new version, or even by some unexpected emergent behavior in the code of this version. No, while the incident was triggered by a deploy, the changes from the previous version are immaterial to this outage. Rather, it was the system behavior that emerged from clients downloading the new version that led to the outage.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eSuddenly, the new object panel loaded simultaneously across all waiting devices, resulting in over 1.5 million requests per second to the API Gateway, a surge approximately three times the typical peak load. This overwhelming wave caused the load balancer to transform into an \u0026#34;overload balancer,\u0026#34; turning healthy nodes into unhealthy ones. Hochstein adds:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis is a classic example of a positive feedback loop: the more tasks go unhealthy, the more traffic the healthy nodes received, the more likely those tasks will go unhealthy as well.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAs autoscaling failed to keep pace, API Gateway tasks began failing due to memory exhaustion, ultimately leading to a complete collapse. To address the issue, Canva\u0026#39;s team attempted to manually increase capacity while simultaneously reducing the load on the nodes, achieving mixed results. The situation was finally mitigated when traffic was entirely blocked at the CDN layer. Humphreys details:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAt 9:29 AM UTC, we added a temporary Cloudflare firewall rule to block all traffic at the CDN. This prevented any traffic reaching the API Gateway, allowing new tasks to start up without being overwhelmed with incoming requests. We later redirected canva.com to our status page to make it clear to users that we were experiencing an incident.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe Canva engineers gradually ramped up traffic, fully restoring it in approximately 20 minutes. In a popular \u003ca href=\"https://news.ycombinator.com/item?id=42676529\"\u003eHackerNews\u003c/a\u003e thread, \u003ca href=\"https://github.com/John-Nagle\"\u003eJohn Nagle\u003c/a\u003e comments:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis problem is similar to what electric utilities call \u0026#34;load takeup\u0026#34;. After a power outage, when power is turned back on, there are many loads that draw more power at startup. (...) Bringing up a power grid is thus done by sections, not all at once.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eWhile all functional requirements were initially met and the automated systems exacerbated the problem, Hochstein highlights:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIt was up to the incident responders to adapt the behavior of the system, to change the way it functioned in order to get it back to a healthy state. (...) This is a classic example of resilience, of acting to reconfigure the behavior of your system when it enters a state that it wasn’t originally designed to handle.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eHumphreys \u003ca href=\"https://www.linkedin.com/feed/update/urn:li:activity:7275988718618877953/\"\u003econcludes\u003c/a\u003e on Linkedin:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe full picture took some time to assemble, in coordination with our very capable and helpful partners at Cloudflare (...) a riveting tale involving lost packets, cache dynamics, traffic spikes, thread contention, and task headroom.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eTo minimize the likelihood of similar incidents in the future, the team focused on incident response process improvements, including runbook for traffic blocking and restoration, and increased resilience of the API Gateway.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Renato-Losio\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eRenato Losio\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": "2025-02-08T00:00:00Z",
  "modifiedTime": null
}
