{
  "id": "8f10c5ed-421f-45f6-ba7b-88d6a24cf5aa",
  "title": "Introducing Ink API, a new Jetpack library for stylus apps",
  "link": "http://android-developers.googleblog.com/2024/10/introducing-ink-api-jetpack-library.html",
  "description": "",
  "author": "Android Developers",
  "published": "2024-10-08T09:00:00.000-07:00",
  "source": "http://feeds.feedburner.com/blogspot/hsDu",
  "categories": [
    "APIs",
    "Developer Tools",
    "form factors",
    "Jetpack"
  ],
  "byline": "",
  "length": 5267,
  "excerpt": "Ink API is a new Jetpack library for stylus apps making it easy for developers to create, render, and manipulate beautiful ink strokes.",
  "siteName": "Android Developers Blog",
  "favicon": "",
  "text": "Posted by Chris Assigbe – Developer Relations Engineer and Tom Buckley – Product Manager With stylus input, Android apps on phones, foldables, tablets, and Chromebooks become even more powerful tools for productivity and creativity. While there's already a lot to think about when designing for large screens – see our full guidance and inspiration gallery – styluses are especially impactful, transforming these devices into a digital notebook or sketchbook. Users expect stylus experiences to feel as fluid and natural as writing on paper, which is why Android previously added APIs to reduce inking latency to as low as 4ms; virtually imperceptible. However, latency is just one aspect of an inking experience – developers currently need to generate stroke shapes from stylus input, render those strokes quickly, and efficiently run geometric queries over strokes for tools like selection and eraser. These capabilities can require significant investment in geometry and graphics just to get started. Today, we're excited to share Ink API, an alpha Jetpack library that makes it easy to create, render, and manipulate beautiful ink strokes, enabling developers to build amazing features on top of these APIs. Ink API builds upon the Android framework's foundation of low latency and prediction, providing you with a powerful and intuitive toolkit for integrating rich inking features into your apps. Writing with Ink API on a Samsung Tab S8, 4ms end-to-end latency What is Ink API? Ink API is a comprehensive stylus input library that empowers you to quickly create innovative and expressive inking experiences. It offers a modular architecture rather than a one-size-fits-all canvas, so you can tailor Ink API to your app's stack and needs. The modules encompass key functionalities like: Strokes module: Represents the ink input and its visual representation. Geometry module: Supports manipulating and analyzing strokes, facilitating features like erasing, and selecting strokes. Brush module: Provides a declarative way to define the visual style of strokes, including color, size, and the type of tool to draw with. Rendering module: Efficiently displays ink strokes on the screen, allowing them to be combined with Jetpack Compose or Android Views. Live Authoring module: Handles real-time inking input to create smooth strokes with the lowest latency a device can provide. Ink API is compatible with devices running Android 5.0 (API level 21) or later, and offers benefits on all of these devices. It can also take advantage of latency improvements in Android 10 (API 29) and improved rendering effects and performance in Android 14 (API 34). Why choose Ink API? Ink API provides an out-of-the-box implementation for basic inking tasks so you can create a unique drawing experience for your own app. Ink API offers several advantages over a fully custom implementation: Ease of Use: Ink API abstracts away the complexities of graphics and geometry, allowing you to focus on your app's unique inking features. Performance: Built-in low latency support and optimized rendering ensure a smooth and responsive inking experience. Flexibility: The modular design allows you to pick and choose the components you need, tailoring the library to your specific requirements. Ink API has already been adopted across many Google apps because of these advantages, including for markup in Docs and Circle-to-Search; and the underlying technology also powers markup in Photos, Drive, Meet, Keep, and Classroom. For Circle to Search, the Ink API modular design empowered the team to utilize only the components they needed. They leveraged the live authoring and brush capabilities of Ink API to render a beautiful stroke as users circle (to search). The team also built custom geometry tools tailored to their ML models. That’s modularity at its finest. “Ink API was our first choice for Circle-to-Search (CtS). Utilizing their extensive documentation, integrating the Ink API was a breeze, allowing us to reach our first working prototype w/in just one week. Ink's custom brush texture and animation support allowed us to quickly iterate on the stroke design.” - Jordan Komoda, Software Engineer, Google We have also designed Ink API with our Android app partners' feedback in mind to make sure it fits with their existing app architectures and requirements. With Ink API, building a natural and fluid inking experience on Android is simpler than ever. Ink API lets you focus on what differentiates your experience rather than on the details of paths, meshes, and shaders. Whether you are exploring inking for note-taking, photo or document markup, interactive learning, or something completely different, we hope you’ll give Ink API a try! Get started with Ink API Ready to dive into the well of Ink API? Check out the official developer guide and explore the API reference to start building your next-generation inking app. We're eager to see the innovative experiences you create! Note: This alpha release is just the beginning for Ink API. We're committed to continuously improving the library, adding new features and functionalities based on your feedback. Stay tuned for updates and join us in shaping the future of inking on Android!",
  "image": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjsX5BcJ2qvBaVRKJXf2T-1hxCl9E_VuSZqUDgJnAMhmUGEiOhaC8XreGD9y_I9nRi-Ibz4IQfrWA0tVHmuCzVRmg3oMiJBpsqr-S5m3UHnMKogPfFf8M6Dk9MJv5qxhOE8H5JGypK0ZGpOyRvOhrnNR-z6H-8t8epx76z1jBI2oDlNP211Z1WSP9glBC0/w1200-h630-p-k-no-nu/v2-card-Android-type-safe-navigation-for-compose.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\u003cmeta content=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjsX5BcJ2qvBaVRKJXf2T-1hxCl9E_VuSZqUDgJnAMhmUGEiOhaC8XreGD9y_I9nRi-Ibz4IQfrWA0tVHmuCzVRmg3oMiJBpsqr-S5m3UHnMKogPfFf8M6Dk9MJv5qxhOE8H5JGypK0ZGpOyRvOhrnNR-z6H-8t8epx76z1jBI2oDlNP211Z1WSP9glBC0/s1600/v2-card-Android-type-safe-navigation-for-compose.png\" name=\"twitter:image\"/\u003e\n\u003cp\u003e\n\n\u003cem\u003ePosted by  Chris Assigbe – Developer Relations Engineer and Tom Buckley – Product Manager \u003c/em\u003e\n\n\u003ca href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjr-fQK660FgiUsJF64wNgAAxkWgA-Ul68stuzOKasoAIpQddUhACLL1nEmwSu7oRJriJh_B1vlKftd2VfQ2kDAnDNQNhQ8SGd0y6-U5Zatg9xAKe0EFW7Q13YtB1owvG2vMbC72XsBzsJOhBrGegpCnn4PEEfyFksSkSdAqDviGhDbtm_SyH89Uy4QmQo/s1600/v2-header-Android-type-safe-navigation-for-compose.png\"\u003e\u003cimg data-original-height=\"800\" data-original-width=\"100%\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjr-fQK660FgiUsJF64wNgAAxkWgA-Ul68stuzOKasoAIpQddUhACLL1nEmwSu7oRJriJh_B1vlKftd2VfQ2kDAnDNQNhQ8SGd0y6-U5Zatg9xAKe0EFW7Q13YtB1owvG2vMbC72XsBzsJOhBrGegpCnn4PEEfyFksSkSdAqDviGhDbtm_SyH89Uy4QmQo/s1600/v2-header-Android-type-safe-navigation-for-compose.png\"/\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003eWith stylus input, Android apps on phones, foldables, tablets, and Chromebooks become even more powerful tools for productivity and creativity. While there\u0026#39;s already a lot to think about when designing for large screens – \u003ca href=\"https://developer.android.com/large-screens\" target=\"_blank\"\u003esee our full guidance and inspiration gallery\u003c/a\u003e – styluses are especially impactful, transforming these devices into a digital notebook or sketchbook. Users expect stylus experiences to feel as fluid and natural as writing on paper, which is why Android previously added APIs to \u003ca href=\"https://medium.com/androiddevelopers/stylus-low-latency-d4a140a9c982\" target=\"_blank\"\u003ereduce inking latency\u003c/a\u003e to as low as 4ms; virtually imperceptible. However, latency is just one aspect of an inking experience – developers currently need to generate stroke shapes from stylus input, render those strokes quickly, and efficiently run geometric queries over strokes for tools like selection and eraser. These capabilities can require significant investment in geometry and graphics just to get started.\u003c/p\u003e \n\n\u003cp\u003eToday, we\u0026#39;re excited to share \u003ca href=\"https://developer.android.com/jetpack/androidx/releases/ink#1.0.0-alpha01\" target=\"_blank\"\u003eInk API\u003c/a\u003e, an alpha Jetpack library that makes it easy to create, render, and manipulate beautiful ink strokes, enabling developers to build amazing features on top of these APIs. Ink API builds upon the Android framework\u0026#39;s foundation of low latency and prediction, providing you with a powerful and intuitive toolkit for integrating rich inking features into your apps.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"moving image of a stylus writing with Ink API on a Samsung Tab S8, 4ms showing end-to-end latency\" height=\"468\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiE_VC7aiMgrPRq-rBG-c1LdauGYqi2U8alx80PoxZI4G9kNoURFNHh6RM21KO5SQL8RGRNDxIn_KuYjqA2sFXy_KWjorI1w16wN8HWaXEus2JlEjRtTWfInJGyJb9LpexvxzneqsVL2_Uw214MHlUhi4R7nw1O6QsiJyMEZ4N3hQ-nGQw5PzsNBk6kQe0/w640-h468/image5.gif\" width=\"640\"/\u003e\u003c/p\u003e\u003cimgcaption\u003e\u003ccenter\u003e\u003cem\u003eWriting with Ink API on a Samsung Tab S8, 4ms end-to-end latency\u003c/em\u003e\u003c/center\u003e\u003c/imgcaption\u003e\u003cbr/\u003e\n\n\u003ch2\u003e\u003cspan\u003eWhat is Ink API?\u003c/span\u003e\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://developer.android.com/jetpack/androidx/releases/ink#1.0.0-alpha01\" target=\"_blank\"\u003eInk API\u003c/a\u003e is a comprehensive stylus input library that empowers you to quickly create innovative and expressive inking experiences. It offers a modular architecture rather than a one-size-fits-all canvas, so you can tailor \u003ca href=\"https://developer.android.com/jetpack/androidx/releases/ink#1.0.0-alpha01\" target=\"_blank\"\u003eInk API\u003c/a\u003e to your app\u0026#39;s stack and needs. The modules encompass key functionalities like:\u003c/p\u003e\n\u003cul\u003e\u003cul\u003e\n\u003cli\u003e\u003cb\u003e\u003cspan\u003e\u003ca href=\"https://developer.android.com/reference/kotlin/androidx/ink/strokes/package-summary\" target=\"_blank\"\u003eStrokes\u003c/a\u003e\u003c/span\u003e module:\u003c/b\u003e Represents the ink input and its visual representation.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\n\u003cli\u003e\u003cb\u003e\u003cspan\u003e\u003ca href=\"https://developer.android.com/reference/kotlin/androidx/ink/geometry/package-summary\" target=\"_blank\"\u003eGeometry\u003c/a\u003e\u003c/span\u003e module:\u003c/b\u003e Supports manipulating and analyzing strokes, facilitating features like erasing, and selecting strokes.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\n\u003cli\u003e\u003cb\u003e\u003cspan\u003e\u003ca href=\"https://developer.android.com/reference/kotlin/androidx/ink/brush/package-summary\" target=\"_blank\"\u003eBrush\u003c/a\u003e\u003c/span\u003e module:\u003c/b\u003e Provides a declarative way to define the visual style of strokes, including color, size, and the type of tool to draw with.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\n\u003cli\u003e\u003cb\u003e\u003cspan\u003e\u003ca href=\"https://developer.android.com/reference/kotlin/androidx/ink/rendering/android/view/package-summary\" target=\"_blank\"\u003eRendering\u003c/a\u003e\u003c/span\u003e module:\u003c/b\u003e Efficiently displays ink strokes on the screen, allowing them to be combined with Jetpack Compose or Android Views.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\n\u003cli\u003e\u003cb\u003e\u003cspan\u003e\u003ca href=\"https://developer.android.com/reference/kotlin/androidx/ink/authoring/package-summary\" target=\"_blank\"\u003eLive Authoring\u003c/a\u003e\u003c/span\u003e module:\u003c/b\u003e Handles real-time inking input to create smooth strokes with the lowest latency a device can provide.\u003c/li\u003e\n\u003c/ul\u003e\u003c/ul\u003e\n\n\u003cp\u003e\u003ca href=\"https://developer.android.com/jetpack/androidx/releases/ink#1.0.0-alpha01\" target=\"_blank\"\u003eInk API\u003c/a\u003e is compatible with devices running \u003ca href=\"https://developer.android.com/tools/releases/platforms#5.0\" target=\"_blank\"\u003eAndroid 5.0 (API level 21)\u003c/a\u003e or later, and offers benefits on all of these devices. It can also take advantage of latency improvements in \u003ca href=\"https://developer.android.com/tools/releases/platforms#10\" target=\"_blank\"\u003eAndroid 10 (API 29)\u003c/a\u003e and improved rendering effects and performance in \u003ca href=\"https://developer.android.com/tools/releases/platforms#14\" target=\"_blank\"\u003eAndroid 14 (API 34)\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\u003cspan\u003eWhy choose Ink API?\u003c/span\u003e\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://developer.android.com/jetpack/androidx/releases/ink#1.0.0-alpha01\" target=\"_blank\"\u003eInk API\u003c/a\u003e provides an out-of-the-box implementation for basic inking tasks so you can create a unique drawing experience for your own app. \u003ca href=\"https://developer.android.com/jetpack/androidx/releases/ink#1.0.0-alpha01\" target=\"_blank\"\u003eInk API\u003c/a\u003e offers several advantages over a fully custom implementation:\u003c/p\u003e\n\u003cul\u003e\u003cul\u003e\n  \u003cli\u003e\u003cb\u003eEase of Use:\u003c/b\u003e Ink API abstracts away the complexities of graphics and geometry, allowing you to focus on your app\u0026#39;s unique inking features.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\n  \u003cli\u003e\u003cb\u003ePerformance:\u003c/b\u003e Built-in low latency support and optimized rendering ensure a smooth and responsive inking experience.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\n  \u003cli\u003e\u003cb\u003eFlexibility:\u003c/b\u003e The modular design allows you to pick and choose the components you need, tailoring the library to your specific requirements.\u003c/li\u003e\n\u003c/ul\u003e\u003c/ul\u003e\n\n\u003cp\u003e\u003ca href=\"https://developer.android.com/jetpack/androidx/releases/ink#1.0.0-alpha01\" target=\"_blank\"\u003eInk API\u003c/a\u003e has already been adopted across many Google apps because of these advantages, including for markup in Docs and Circle-to-Search; and the underlying technology also powers markup in Photos, Drive, Meet, Keep, and Classroom. For \u003ca href=\"https://support.google.com/websearch/answer/14508957?hl=en\" target=\"_blank\"\u003eCircle to Search\u003c/a\u003e, the Ink API modular design empowered the team to utilize only the components they needed. They leveraged the live authoring and brush capabilities of Ink API to render a beautiful stroke as users circle (to search). The team also built custom geometry tools tailored to their ML models. That’s modularity at its finest.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"moving image of a stylus writing with Ink API on a Samsung Tab S8, 4ms showing end-to-end latency\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiNLDZmNs7BwcQsuCn4orht8-OGhsaW4xLs-SEiGOsmu5UdPhBfs787uUFsX9zc25Fd2OEjootN6_U_FhifgLW_3855RdPWlFBZ2kKMLX0pV-ZaR5HrzZt2EevpaQghcnJbDhScQYKke3o3WmBhMvvoyQ9Dt1bqbj6N9vsevjdKa47YzhJqBv_vQQt06u8/s1600/image6.gif\" width=\"100%\"/\u003e\u003c/p\u003e\u003cbr/\u003e\n\n\u003cblockquote\u003e\u003cspan\u003e\u003ci\u003e“Ink API was our first choice for Circle-to-Search (CtS). Utilizing their extensive documentation, integrating the Ink API was a breeze, allowing us to reach our first working prototype w/in just one week. Ink\u0026#39;s custom brush texture and animation support allowed us to quickly iterate on the stroke design.” \u003c/i\u003e\u003c/span\u003e\u003cp\u003e\u003cb\u003e- Jordan Komoda, Software Engineer, Google\u003c/b\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\n\n\u003cp\u003eWe have also designed Ink API with our Android app partners\u0026#39; feedback in mind to make sure it fits with their existing app architectures and requirements.\u003c/p\u003e\n\n\u003cp\u003eWith Ink API, building a natural and fluid inking experience on Android is simpler than ever. Ink API lets you focus on what differentiates your experience rather than on the details of paths, meshes, and shaders. Whether you are exploring inking for note-taking, photo or document markup, interactive learning, or something completely different, we hope you’ll give Ink API a try!\u003c/p\u003e\n\n\u003ch2\u003e\u003cspan\u003eGet started with Ink API\u003c/span\u003e\u003c/h2\u003e\n\n\u003cp\u003eReady to dive into the well of Ink API? Check out the \u003ca href=\"https://developer.android.com/develop/ui/compose/touch-input/stylus-input/about-ink-api\" target=\"_blank\"\u003eofficial developer guide\u003c/a\u003e and explore the \u003ca href=\"https://developer.android.com/jetpack/androidx/releases/ink#1.0.0-alpha01\" target=\"_blank\"\u003eAPI reference\u003c/a\u003e to start building your next-generation inking app. We\u0026#39;re eager to see the innovative experiences you create!\u003c/p\u003e\n\n\u003cblockquote\u003e\u003cb\u003eNote:\u003c/b\u003e This alpha release is just the beginning for Ink API. We\u0026#39;re committed to continuously improving the library, adding new features and functionalities \u003ca href=\"https://developer.android.com/jetpack/androidx/releases/ink#feedback\" target=\"_blank\"\u003ebased on your feedback\u003c/a\u003e. Stay tuned for updates and join us in shaping the future of inking on Android!\u003c/blockquote\u003e\n\n\n\n\n\n\n\n\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": null,
  "modifiedTime": null
}
