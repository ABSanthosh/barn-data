{
  "id": "bd4903c5-5a26-4bbb-afa3-5ff77c321a16",
  "title": "Design FUT-Style Cards in Jetpack Compose: Clip or Cut or Mask a Composable with a Custom Shape",
  "link": "https://blog.kotlin-academy.com/design-fut-style-cards-in-jetpack-compose-clip-or-cut-or-mask-a-composable-with-a-custom-shape-e310c13f98be?source=rss----e57b304801ef---4",
  "description": "",
  "author": "Souvik Sarkar",
  "published": "Tue, 04 Feb 2025 11:23:12 GMT",
  "source": "https://blog.kotlin-academy.com/feed",
  "categories": [
    "jetpack-compose",
    "coding",
    "kotlin",
    "software-development",
    "android"
  ],
  "byline": "Souvik Sarkar",
  "length": 3823,
  "excerpt": "At Kaffein, we’re obsessed with crafting exceptional user experiences. Recently, we tackled the challenge of designing unique FUT-style cards for each user. This was a two-part challenge: One…",
  "siteName": "Kt. Academy",
  "favicon": "https://miro.medium.com/v2/resize:fill:256:256/1*2grDGjzH0tfX8XiaF4Izaw.png",
  "text": "At Kaffein, we’re obsessed with crafting exceptional user experiences. Recently, we tackled the challenge of designing unique FUT-style cards for each user. This was a two-part challenge: One, Creating the shapes of the cards, and Two, Cutting/Masking the user’s profile picture with the custom shape.Part 1. Creating the Shapes of FUT-style CardsDesigning complex shapes from scratch can be daunting. While direct path creation is an option for skilled designers, we opted for a more accessible approach. Here’s how we simplified the process:Sourcing PNG Images: The first step is finding a PNG image of your desired card shape. A simple Google search often yields great results.Tracing and Refining the Image: Downloaded images might contain colors, gradients, or extra elements. We needed a clean, single-color (black, in our case) PNG. To achieve this, we converted the PNG to a vector format. This simplifies the process of removing unwanted elements and ensures a crisp, scalable shape. Once converted, export the vector image back to PNG.Resources: If you are looking for FUT-style cards, try this link \u0026 if you are looking for online tools to convert PNG -\u003e Vector format, try this tool.Part 2. Cutting/Masking the user’s Profile Picture with the Custom ShapeFirst things first, here is the shape that I am going to use to create my custom FUT-style card.With our custom shape ready, the next step involved masking the user’s profile picture within it.You can achieve this with Modifier.drawWithContent.The drawWithContent allows us to customize the drawing behavior of Composables.The most important things to notice here:drawContent(): Calling drawContent() is essential. This ensures the content within our Composable, including the user’s profile picture, gets drawn.Size Matters: Defining the size of both the image and the content is crucial, as drawImage uses the original image size by default.BlendMode.DstIn: This blend mode is the heart of the masking effect. It uses the shape of the source image (card shape) as a mask and displays the content of the destination (user’s profile picture) within that shape.Modifier.graphicsLayer { compositingStrategy = Offscreen }: This prevents a black background artifact around the clipped image.@Composablefun FUTLikeCardUI() { val image = ImageBitmap.imageResource(R.drawable.img_card_shape) val Cardwidth = with(LocalDensity.current) { 200.dp.roundToPx() } val cardHeight = with(LocalDensity.current) { 256.dp.roundToPx() } Box( modifier = Modifier .width(200.dp) .height(256.dp), ) { Box( modifier = Modifier .graphicsLayer { compositingStrategy = Offscreen } .drawWithContent { drawContent() drawImage( image = image, dstSize = IntSize( width = width, height = height, ), blendMode = BlendMode.DstIn, colorFilter = ColorFilter.tint(Color.Black), ) }, ) { Box( modifier = Modifier .fillMaxSize(), ) { // Insert the img_user_profile_picture } } Box( modifier = Modifier .fillMaxSize(), ) { // Place the img_card_border } }}Adding the Finishing Touches: We placed another Box within the main Box to add the card’s border image, creating a polished FUT-style card design.Voila! My FUT-style card is ready.ConclusionCreating custom-shaped cards with masked images is easier than it looks, thanks to Jetpack Compose’s powerful modifiers. We hope this guide empowers you to craft unique and engaging UI elements in your own projects. Special thanks to Ban Markovic and his exception blog, which contributed massively to our solution.Souvik Sarkar, founder @Kaffein, — writes about the hurdles of first-time founders.",
  "image": "https://miro.medium.com/v2/resize:fit:1024/1*EYJJnglkSONnZu1Ncl1ACg.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://medium.com/@souvik.0204?source=post_page---byline--e310c13f98be--------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Souvik Sarkar\" src=\"https://miro.medium.com/v2/resize:fill:88:88/1*xeyIMmEKdpY6O7FVTGwA2w.png\" width=\"44\" height=\"44\" loading=\"lazy\" data-testid=\"authorPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://blog.kotlin-academy.com/?source=post_page---byline--e310c13f98be--------------------------------\" rel=\"noopener  ugc nofollow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Kt. Academy\" src=\"https://miro.medium.com/v2/resize:fill:48:48/1*2grDGjzH0tfX8XiaF4Izaw.png\" width=\"24\" height=\"24\" loading=\"lazy\" data-testid=\"publicationPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/div\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"0e9b\"\u003eAt Kaffein, we’re obsessed with crafting exceptional user experiences. Recently, we tackled the challenge of designing unique FUT-style cards for each user. This was a two-part challenge: One, Creating the shapes of the cards, and Two, Cutting/Masking the user’s profile picture with the custom shape.\u003c/p\u003e\u003ch2 id=\"bc6e\"\u003ePart 1. Creating the Shapes of FUT-style Cards\u003c/h2\u003e\u003cp id=\"2d34\"\u003eDesigning complex shapes from scratch can be daunting. While direct path creation is an option for skilled designers, we opted for a more accessible approach. Here’s how we simplified the process:\u003c/p\u003e\u003cul\u003e\u003cli id=\"42f1\"\u003e\u003cstrong\u003eSourcing PNG Images: \u003c/strong\u003eThe first step is finding a PNG image of your desired card shape. A simple Google search often yields great results.\u003c/li\u003e\u003cli id=\"e2df\"\u003e\u003cstrong\u003eTracing and Refining the Image: \u003c/strong\u003eDownloaded images might contain colors, gradients, or extra elements. We needed a clean, single-color (black, in our case) PNG. To achieve this, we converted the PNG to a vector format. This simplifies the process of removing unwanted elements and ensures a crisp, scalable shape. Once converted, export the vector image back to PNG.\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"2c38\"\u003e\u003cstrong\u003eResources: \u003c/strong\u003eIf you are looking for FUT-style cards, try this \u003ca href=\"https://yourfutcard.com/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003elink\u003c/a\u003e \u0026amp; if you are looking for online tools to convert PNG -\u0026gt; Vector format, try this \u003ca href=\"https://svgtrace.com/png-to-svg\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003etool\u003c/a\u003e.\u003c/p\u003e\u003ch2 id=\"4d02\"\u003ePart 2. Cutting/Masking the user’s Profile Picture with the Custom Shape\u003c/h2\u003e\u003cp id=\"3318\"\u003eFirst things first, here is the shape that I am going to use to create my custom FUT-style card.\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"2bbc\"\u003eWith our custom shape ready, the next step involved masking the user’s profile picture within it.\u003c/p\u003e\u003cp id=\"e221\"\u003eYou can achieve this with \u003cstrong\u003eModifier.drawWithContent\u003c/strong\u003e.\u003c/p\u003e\u003cp id=\"b96b\"\u003eThe \u003cstrong\u003edrawWithContent\u003c/strong\u003e allows us to customize the drawing behavior of Composables.\u003c/p\u003e\u003cp id=\"cdbf\"\u003eThe most important things to notice here:\u003c/p\u003e\u003col\u003e\u003cli id=\"e438\"\u003e\u003cstrong\u003edrawContent():\u003c/strong\u003e Calling drawContent() is essential. This ensures the content within our Composable, including the user’s profile picture, gets drawn.\u003c/li\u003e\u003cli id=\"2fd4\"\u003e\u003cstrong\u003eSize Matters:\u003c/strong\u003e Defining the size of both the image and the content is crucial, as drawImage uses the original image size by default.\u003c/li\u003e\u003cli id=\"f603\"\u003e\u003cstrong\u003eBlendMode.DstIn:\u003c/strong\u003e This blend mode is the heart of the masking effect. It uses the shape of the source image (card shape) as a mask and displays the content of the destination (user’s profile picture) within that shape.\u003c/li\u003e\u003cli id=\"7b16\"\u003e\u003cstrong\u003eModifier.graphicsLayer { compositingStrategy = Offscreen }:\u003c/strong\u003e This prevents a black background artifact around the clipped image.\u003c/li\u003e\u003c/ol\u003e\u003cpre\u003e\u003cspan id=\"8962\"\u003e@Composable\u003cbr/\u003efun FUTLikeCardUI() {\u003cbr/\u003e  val image = ImageBitmap.imageResource(R.drawable.img_card_shape)\u003cbr/\u003e  val Cardwidth = with(LocalDensity.current) {\u003cbr/\u003e    200.dp.roundToPx()\u003cbr/\u003e  }\u003cbr/\u003e  val cardHeight = with(LocalDensity.current) {\u003cbr/\u003e    256.dp.roundToPx()\u003cbr/\u003e  }\u003cp\u003e  Box(\u003cbr/\u003e    modifier = Modifier\u003cbr/\u003e      .width(200.dp)\u003cbr/\u003e      .height(256.dp),\u003cbr/\u003e  ) {\u003cbr/\u003e    Box(\u003cbr/\u003e      modifier = Modifier\u003cbr/\u003e        .graphicsLayer\u003cbr/\u003e        { compositingStrategy = Offscreen }\u003cbr/\u003e        .drawWithContent {\u003cbr/\u003e          drawContent()\u003cbr/\u003e          drawImage(\u003cbr/\u003e            image = image,\u003cbr/\u003e            dstSize = IntSize(\u003cbr/\u003e              width = width,\u003cbr/\u003e              height = height,\u003cbr/\u003e            ),\u003cbr/\u003e            blendMode = BlendMode.DstIn,\u003cbr/\u003e            colorFilter = ColorFilter.tint(Color.Black),\u003cbr/\u003e          )\u003cbr/\u003e        },\u003cbr/\u003e    ) {\u003cbr/\u003e      Box(\u003cbr/\u003e        modifier = Modifier\u003cbr/\u003e          .fillMaxSize(),\u003cbr/\u003e      ) {\u003cbr/\u003e        // Insert the img_user_profile_picture\u003cbr/\u003e      }\u003cbr/\u003e    }\u003cbr/\u003e    Box(\u003cbr/\u003e        modifier = Modifier\u003cbr/\u003e          .fillMaxSize(),\u003cbr/\u003e      ) {\u003cbr/\u003e        // Place the img_card_border\u003cbr/\u003e      }\u003cbr/\u003e  }\u003cbr/\u003e}\u003c/p\u003e\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"4269\"\u003e\u003cstrong\u003eAdding the Finishing Touches:\u003c/strong\u003e We placed another Box within the main Box to add the card’s border image, creating a polished FUT-style card design.\u003c/p\u003e\u003cp id=\"c3c3\"\u003eVoila! My FUT-style card is ready.\u003c/p\u003e\u003ch2 id=\"0fef\"\u003eConclusion\u003c/h2\u003e\u003cp id=\"8c6f\"\u003eCreating custom-shaped cards with masked images is easier than it looks, thanks to Jetpack Compose’s powerful modifiers. We hope this guide empowers you to craft unique and engaging UI elements in your own projects. Special thanks to \u003cspan\u003e\u003cspan aria-hidden=\"false\"\u003e\u003ca href=\"https://medium.com/u/8aced922ece?source=post_page---user_mention--e310c13f98be--------------------------------\" rel=\"noopener\" target=\"_blank\"\u003eBan Markovic\u003c/a\u003e\u003c/span\u003e\u003c/span\u003e and his exception \u003ca href=\"https://medium.com/@banmarkovic/jetpack-compose-clip-or-cut-a-composable-with-custom-image-shape-062dde54d4b2\" rel=\"noopener\"\u003eblog\u003c/a\u003e, which contributed massively to our solution.\u003c/p\u003e\u003cblockquote\u003e\u003cp id=\"bcbf\"\u003e\u003cstrong\u003eSouvik Sarkar\u003c/strong\u003e,\u003cstrong\u003e \u003c/strong\u003efounder @\u003ca href=\"https://kaffein.in/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eKaffein\u003c/a\u003e, — writes about the hurdles of first-time founders.\u003c/p\u003e\u003c/blockquote\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": "2025-02-02T14:03:49.708Z",
  "modifiedTime": null
}
