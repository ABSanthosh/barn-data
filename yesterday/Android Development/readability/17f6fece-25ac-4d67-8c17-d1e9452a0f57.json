{
  "id": "17f6fece-25ac-4d67-8c17-d1e9452a0f57",
  "title": "Android Weekly Issue #670",
  "link": "https://androidweekly.net/issues/issue-670/rss.xml",
  "description": "Articles \u0026 Tutorials Sponsored Advertise to more than 80k Android developers! We reach out to more than 80k Android developers around the world, every week, through our email newsletter and social media channels. Advertise your Android development related service or product! Delegation with By in Kotlin. Deleagation in Kotlin HyunWoo Lee explains Kotlin’s by keyword for delegation, covering standard delegates like lazy, observable, vetoable, and notNull, and demonstrates creating custom delegates by implementing getValue and setValue functions. Preloading Media: A Future-Forward Approach with ExoPlayer Prateek Batra shows how to enable smoother media playback in ExoPlayer by preloading content using new Media3 tools. Enhancing Note-Taking with Jetpack Compose henni99 introduces WriteBuddy, an open-source Jetpack Compose tool that enhances Android note-taking with features like movable sticky notes and interactive tools such as a laser pointer and tape for dynamic annotations. Debugging Coroutines in IntelliJ and Android Studio Amanda Hinchman shows how to debug Kotlin coroutines in IntelliJ and Android Studio using logging, VM options, and built-in GUI tools. Ultimate Guide for Creating Multi-tone Themed App Icons \u0026 Adaptive App icons Dinoy Raj explains how to design adaptive and themed Android app icons using layered vectors and a monochrome layer for Material You support. Vibe Coding, Kotlin, Finance, and Data Visualization Enrique López-Mañas explores the impact of random number generation methods on Monte Carlo simulations in Kotlin, demonstrating how using separate versus shared random generators can significantly alter long-term portfolio performance outcomes. runCatching vs. try-catch in Kotlin: A Comprehensive Error Handling Comparison Ioannis Anifantakis compares runCatching and try-catch in Kotlin, showing how runCatching enables cleaner and more consistent error handling. Adaptive Camera: Smooth Tabletop Mode with Animations Jolanda Verhoef demonstrates how to create a responsive camera UI in Jetpack Compose that smoothly transitions to tabletop mode on foldable devices using adaptive APIs, hinge-aware layout rulers, and the new animateBounds modifier. Prioritize media privacy with Android Photo Picker and build user trust Google outlines best practices for enhancing user trust on Google Play by minimizing data access, promoting the use of Android Photo Picker over broad media permissions, and encouraging clear in-app explanations for media access requests. Android Manifest file checklist Thomas Künneth offers a checklist for optimizing the AndroidManifest.xml in Compose Multiplatform projects to improve compatibility, appearance, and user experience. The curious case of a weird VerifyError crash Marco Gomiero details his debugging process for a crash after updating to AGP 8.7, ultimately tracing the issue to R8 removing delegated classes used in kotlin-datetime’s DateTimeFormat list. Performance Optimization in Jetpack Compose Ignacio Carrión shares strategies for optimizing Jetpack Compose performance by minimizing recompositions, using stable data, hoisting CompositionLocals, and leveraging profiling tools. Composition Over Inheritance: A Kotlin Perspective Ignacio Carrión advocates for using composition over inheritance in Kotlin to enhance flexibility, reduce coupling, and avoid issues like the diamond problem, using examples like UI component design and delegation. Navigating Kotlin Module Naming Conflicts Andrzej Zabost explains how the Android Gradle Plugin now prevents .kotlin_module file collisions, enabling cleaner module names in multi-module projects without risking build failures. Libraries \u0026 Code WriteBuddy Write smarter, smoother: A Compose-based handwriting assistant ✍️ News Bringing Fuzz Testing to Kotlin with kotlinx.fuzz JetBrains introduces kotlinx.fuzz, a Kotlin-specific fuzz testing framework that uncovers edge cases and bugs by generating random inputs, enhancing reliability in Kotlin libraries. Update on Context Parameters Alejandro Serrano Mena announces that Kotlin 2.2.0 introduces context parameters in Beta as a replacement for context receivers, with migration tools in IntelliJ IDEA 2025.1 and full deprecation of context receivers planned for version 2.3. ￼ Gemini in Android Studio for businesses: Develop with confidence, powered by AI Google introduces Gemini in Android Studio for businesses, offering enhanced privacy, security, and management features—including data governance, IP indemnification, and codebase-aware assistance—through Gemini Code Assist Standard and Enterprise subscriptions. Videos \u0026 Podcasts Android Devs Live Stream - 9-Apr-2025 Jov Mit's livestream coding session looking at: Animations In Compose, Transitions, Custom Layouts, Work Manager and Circuit (Compose-Driven Architecture). Freelancing as Mobile Dev vs. Full-time Job - Which Path Is Best For YOU? Philipp Lackner compares the freelance route with becoming an employee in four categories: Earnings potential, security, freedom and skill development. My 2025 Setup As a Software Engineer Daniel Atitienei guides readers through a personal setup, highlighting how time is spent and showcasing new accessories that make the room feel more homey. Kotlin 2.1.20 - Atomics, UUIDs, and more! - TypeAlias Show #6 The episode covers recent Kotlin and Android news, updates to the Kotlin Roadmap, new experimental Atomic types and UUID changes in the standard library, and the promotion of Clock and Instant from kotlinx.datetime. Announcing Gemini in Android Studio for businesses Gemini in Android Studio is ready for work! What are streaming callables? In this month's Firebase Release Notes video, dive into Firebase's streaming callables. Linting on the Side of Caution: Safety \u0026 Security Tor Norbye, Chet Haase, Romain Guy, Theresa Khuu, Naheed Vora take a deep dive backstage and discuss what’s new in the Android safety space. Specials Why I still podcast for Fragmented Kaushik Gopal reflects on a decade of hosting the Fragmented podcast, highlighting how listener feedback, personal learning, and connections within the Android community continue to motivate him, especially as the show transitions to a seasonal format following co-host Donn Felker’s departure. Events KotlinConf 2025, May 21–23, Copenhagen KotlinConf 2025, happening May 21–23, is the must-attend event for Kotlin developers, featuring hands-on workshops and 100+ talks on Multiplatform, Compose, coroutines, Ktor, Spring, functional programming, and more. Learn from experts at JetBrains, Google, AWS, and beyond—don’t miss this chance to level up your Kotlin skills and connect with the global community!",
  "author": "",
  "published": "Sun, 13 Apr 2025 11:46:38 +0000",
  "source": "https://androidweekly.net/rss.xml",
  "categories": null,
  "byline": "",
  "length": 3393,
  "excerpt": "",
  "siteName": "",
  "favicon": "",
  "text": "We reach out to more than 80k Android developers around the world, every week, through our email newsletter and social media channels. Advertise your Android development related service or product! HyunWoo Lee explains Kotlin’s by keyword for delegation, covering standard delegates like lazy, observable, vetoable, and notNull, and demonstrates creating custom delegates by implementing getValue and setValue functions. henni99 introduces WriteBuddy, an open-source Jetpack Compose tool that enhances Android note-taking with features like movable sticky notes and interactive tools such as a laser pointer and tape for dynamic annotations. Enrique López-Mañas explores the impact of random number generation methods on Monte Carlo simulations in Kotlin, demonstrating how using separate versus shared random generators can significantly alter long-term portfolio performance outcomes. Jolanda Verhoef demonstrates how to create a responsive camera UI in Jetpack Compose that smoothly transitions to tabletop mode on foldable devices using adaptive APIs, hinge-aware layout rulers, and the new animateBounds modifier. Thomas Künneth offers a checklist for optimizing the AndroidManifest.xml in Compose Multiplatform projects to improve compatibility, appearance, and user experience. Marco Gomiero details his debugging process for a crash after updating to AGP 8.7, ultimately tracing the issue to R8 removing delegated classes used in kotlin-datetime’s DateTimeFormat list. Ignacio Carrión shares strategies for optimizing Jetpack Compose performance by minimizing recompositions, using stable data, hoisting CompositionLocals, and leveraging profiling tools. Ignacio Carrión advocates for using composition over inheritance in Kotlin to enhance flexibility, reduce coupling, and avoid issues like the diamond problem, using examples like UI component design and delegation. Andrzej Zabost explains how the Android Gradle Plugin now prevents .kotlin_module file collisions, enabling cleaner module names in multi-module projects without risking build failures. Write smarter, smoother: A Compose-based handwriting assistant ✍️ Alejandro Serrano Mena announces that Kotlin 2.2.0 introduces context parameters in Beta as a replacement for context receivers, with migration tools in IntelliJ IDEA 2025.1 and full deprecation of context receivers planned for version 2.3. ￼ Jov Mit's livestream coding session looking at: Animations In Compose, Transitions, Custom Layouts, Work Manager and Circuit (Compose-Driven Architecture). Daniel Atitienei guides readers through a personal setup, highlighting how time is spent and showcasing new accessories that make the room feel more homey. Kaushik Gopal reflects on a decade of hosting the Fragmented podcast, highlighting how listener feedback, personal learning, and connections within the Android community continue to motivate him, especially as the show transitions to a seasonal format following co-host Donn Felker’s departure. KotlinConf 2025, happening May 21–23, is the must-attend event for Kotlin developers, featuring hands-on workshops and 100+ talks on Multiplatform, Compose, coroutines, Ktor, Spring, functional programming, and more. Learn from experts at JetBrains, Google, AWS, and beyond—don’t miss this chance to level up your Kotlin skills and connect with the global community! ]]\u003e",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://androidweekly.net/jobs/new\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/67fba3/633c93bc150a0059bf/square_aw.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003cdiv\u003e\u003cp\u003eWe reach out to more than 80k Android developers around the world, every week, through our email newsletter and social media channels. Advertise your Android development related service or product!\n\n\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp\u003eHyunWoo Lee explains Kotlin’s by keyword for delegation, covering standard delegates like lazy, observable, vetoable, and notNull, and demonstrates creating custom delegates by implementing getValue and setValue functions.\n\u003c/p\u003e\u003c/div\u003e\n\n\u003cdiv\u003e\u003cp\u003ehenni99 introduces WriteBuddy, an open-source Jetpack Compose tool that enhances Android note-taking with features like movable sticky notes and interactive tools such as a laser pointer and tape for dynamic annotations.\n\u003c/p\u003e\u003c/div\u003e\n\n\n\u003cdiv\u003e\u003cp\u003eEnrique López-Mañas explores the impact of random number generation methods on Monte Carlo simulations in Kotlin, demonstrating how using separate versus shared random generators can significantly alter long-term portfolio performance outcomes.\n\u003c/p\u003e\u003c/div\u003e\n\n\u003cdiv\u003e\u003cp\u003eJolanda Verhoef demonstrates how to create a responsive camera UI in Jetpack Compose that smoothly transitions to tabletop mode on foldable devices using adaptive APIs, hinge-aware layout rulers, and the new animateBounds modifier.\n\u003c/p\u003e\u003c/div\u003e\n\n\u003cdiv\u003e\u003cp\u003eThomas Künneth offers a checklist for optimizing the AndroidManifest.xml in Compose Multiplatform projects to improve compatibility, appearance, and user experience.\n\u003c/p\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cp\u003eMarco Gomiero details his debugging process for a crash after updating to AGP 8.7, ultimately tracing the issue to R8 removing delegated classes used in kotlin-datetime’s DateTimeFormat list.\n\u003c/p\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cp\u003eIgnacio Carrión shares strategies for optimizing Jetpack Compose performance by minimizing recompositions, using stable data, hoisting CompositionLocals, and leveraging profiling tools.\n\u003c/p\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cp\u003eIgnacio Carrión advocates for using composition over inheritance in Kotlin to enhance flexibility, reduce coupling, and avoid issues like the diamond problem, using examples like UI component design and delegation.\n\u003c/p\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cp\u003eAndrzej Zabost explains how the Android Gradle Plugin now prevents .kotlin_module file collisions, enabling cleaner module names in multi-module projects without risking build failures.\n\u003c/p\u003e\u003c/div\u003e\n\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://github.com/henni99/WriteBuddy\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/67fb14/543c93bc150a0048cf/square_Bildschirmfoto_2025-04-13_um_13.43.45.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003cdiv\u003e\u003cp\u003eWrite smarter, smoother: A Compose-based handwriting assistant ✍️\n\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\n\n\u003cdiv\u003e\u003cp\u003eAlejandro Serrano Mena announces that Kotlin 2.2.0 introduces context parameters in Beta as a replacement for context receivers, with migration tools in IntelliJ IDEA 2025.1 and full deprecation of context receivers planned for version 2.3. ￼\n\u003c/p\u003e\u003c/div\u003e\n\n\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://www.youtube.com/watch?v=BqPmU9XNdcE\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/67fb03/f63c93bc150a004706/square_Bildschirmfoto_2025-04-13_um_13.45.46.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003cdiv\u003e\u003cp\u003eJov Mit\u0026#39;s livestream coding session looking at: Animations In Compose, Transitions, Custom Layouts, Work Manager and Circuit (Compose-Driven Architecture).\n\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cp\u003eDaniel Atitienei guides readers through a personal setup, highlighting how time is spent and showcasing new accessories that make the room feel more homey.\n\u003c/p\u003e\u003c/div\u003e\n\n\n\n\n\n\u003cdiv\u003e\u003cp\u003eKaushik Gopal reflects on a decade of hosting the Fragmented podcast, highlighting how listener feedback, personal learning, and connections within the Android community continue to motivate him, especially as the show transitions to a seasonal format following co-host Donn Felker’s departure.\n\u003c/p\u003e\u003c/div\u003e\n\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://jb.gg/tf37vx\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/67fb16/153c93bc150a00490f/square_Bildschirmfoto_2025-04-13_um_13.46.16.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003cdiv\u003e\u003cp\u003eKotlinConf 2025, happening May 21–23, is the must-attend event for Kotlin developers, featuring hands-on workshops and 100+ talks on Multiplatform, Compose, coroutines, Ktor, Spring, functional programming, and more. Learn from experts at JetBrains, Google, AWS, and beyond—don’t miss this chance to level up your Kotlin skills and connect with the global community!\n\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e]]\u0026gt;\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": null,
  "modifiedTime": null
}
