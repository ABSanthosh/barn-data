{
  "id": "055f2518-49f6-4adf-bea1-29a3751460be",
  "title": "Keep the Lights On: Using keepScreenOn in Jetpack Compose",
  "link": "https://proandroiddev.com/keep-the-lights-on-using-keepscreenon-in-jetpack-compose-5c194fa000a6?source=rss----c72404660798---4",
  "description": "",
  "author": "Nav Singh",
  "published": "Mon, 09 Jun 2025 14:22:39 GMT",
  "source": "https://proandroiddev.com/feed",
  "categories": [
    "jetpack-compose",
    "android",
    "android-app-development",
    "android-development",
    "androiddev"
  ],
  "byline": "Nav Singh",
  "length": 1275,
  "excerpt": "In this article, we will look at how Compose-based applications can use the new modifier to keep the screen on üîÜ In a View-based world, we know that we have two options for implementing the keep‚Ä¶",
  "siteName": "ProAndroidDev",
  "favicon": "https://miro.medium.com/v2/resize:fill:256:256/1*A8VytPZQhvUf_MG6hm_Dlw.png",
  "text": "In this article, we will look at how Compose-based applications can use the new modifier to keep the screen on üîÜIn a View-based world, we know that we have two options for implementing the keep screen on functionality üîÜManually keep the screen onclass MainActivity : Activity() { override fun onCreate(savedInstanceState: Bundle?) { super.onCreate(savedInstanceState) window.addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON) }}Set the View‚Äôs property keepScreenOn ‚Äî trueclass MainActivity : Activity() { override fun onCreate(savedInstanceState: Bundle?) { super.onCreate(savedInstanceState) window.decorView.keepScreenOn = true }}OrSet the layout‚Äôs attribute in the XML file\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\u003cLinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\" android:keepScreenOn=\"true\" android:layout_height=\"match_parent\"\u003e\u003c/LinearLayout\u003eCompose üó∫Starting with Version 1.9.0-alpha01 of androidx.compose.ui:ui We now have a new modifier called keepScreenOn that we can use to keep the screen on ‚≠êÔ∏èWhen a composition contains multiple instances, it automatically handles the situation üéâBox( modifier = Modifier.keepScreenOn() ){ Text(\"Keep the screen on.. üîÜ\") }References",
  "image": "https://miro.medium.com/v2/resize:fit:1200/1*OrPcBSSoeEnTlv6ubcUppg.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cdiv tabindex=\"-1\" aria-hidden=\"false\"\u003e\u003ca href=\"https://navczydev.medium.com/?source=post_page---byline--5c194fa000a6---------------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Nav Singh\" src=\"https://miro.medium.com/v2/resize:fill:64:64/1*fgXFMgSUVAlGSdmMkx9TYw.png\" width=\"32\" height=\"32\" loading=\"lazy\" data-testid=\"authorPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003cfigure\u003e\u003c/figure\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"f349\"\u003eIn this article, we will look at how \u003cstrong\u003eCompose-based applications\u003c/strong\u003e can use the new \u003ccode\u003e\u003cstrong\u003emodifier\u003c/strong\u003e\u003c/code\u003e to keep the screen on üîÜ\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"1f0c\"\u003eIn a View-based world, we know that we have \u003cstrong\u003etwo options\u003c/strong\u003e for \u003cstrong\u003eimplementing\u003c/strong\u003e the \u003cstrong\u003ekeep screen on functionality \u003c/strong\u003eüîÜ\u003c/p\u003e\u003ch2 id=\"3dfe\"\u003eManually keep the screen on\u003c/h2\u003e\u003cpre\u003e\u003cspan id=\"79d7\"\u003eclass MainActivity : Activity() {\u003cp\u003e  override fun onCreate(savedInstanceState: Bundle?) {\u003cbr/\u003e    super.onCreate(savedInstanceState)\u003c/p\u003e\u003cp\u003e        window.addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON)\u003cbr/\u003e  }\u003cbr/\u003e}\u003c/p\u003e\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv\u003e\u003ch2 id=\"9002\"\u003eSet the View‚Äôs property \u003cstrong\u003e\u003cem\u003ekeepScreenOn ‚Äî true\u003c/em\u003e\u003c/strong\u003e\u003c/h2\u003e\u003cpre\u003e\u003cspan id=\"3c8f\"\u003eclass MainActivity : Activity() {\u003cp\u003e  override fun onCreate(savedInstanceState: Bundle?) {\u003cbr/\u003e    super.onCreate(savedInstanceState)\u003c/p\u003e\u003cp\u003e        window.decorView.keepScreenOn = true\u003cbr/\u003e  }\u003cbr/\u003e}\u003c/p\u003e\u003c/span\u003e\u003c/pre\u003e\u003ch2 id=\"3638\"\u003eOr\u003c/h2\u003e\u003ch2 id=\"0d24\"\u003eSet the layout‚Äôs attribute in the XML file\u003c/h2\u003e\u003cpre\u003e\u003cspan id=\"3650\"\u003e\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34;?\u0026gt;\u003cbr/\u003e\u0026lt;LinearLayout xmlns:android=\u0026#34;http://schemas.android.com/apk/res/android\u0026#34;\u003cbr/\u003e  android:layout_width=\u0026#34;match_parent\u0026#34;\u003cbr/\u003e  android:keepScreenOn=\u0026#34;true\u0026#34;\u003cbr/\u003e  android:layout_height=\u0026#34;match_parent\u0026#34;\u0026gt;\u003cp\u003e\u0026lt;/LinearLayout\u0026gt;\u003c/p\u003e\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv\u003e\u003ch2 id=\"0088\"\u003eCompose üó∫\u003c/h2\u003e\u003cul\u003e\u003cli id=\"2160\"\u003eStarting with \u003ca href=\"https://developer.android.com/jetpack/androidx/releases/compose-ui?authuser=3#1.9.0-alpha01\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eVersion 1.9.0-alpha01\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e \u003c/strong\u003eof \u003ccode\u003e\u003cstrong\u003eandroidx.compose.ui:ui\u003c/strong\u003e\u003c/code\u003e\u003cstrong\u003e \u003c/strong\u003eWe now have a new \u003cstrong\u003emodifier\u003c/strong\u003e called \u003ccode\u003e\u003cstrong\u003e\u003cem\u003ekeepScreenOn\u003c/em\u003e\u003c/strong\u003e\u003c/code\u003e\u003cstrong\u003e\u003cem\u003e \u003c/em\u003e\u003c/strong\u003ethat we can use to keep the screen on ‚≠êÔ∏è\u003c/li\u003e\u003c/ul\u003e\u003cblockquote\u003e\u003cp id=\"9f78\"\u003e\u003cem\u003eWhen a composition contains multiple instances, it automatically handles the situation üéâ\u003c/em\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003cpre\u003e\u003cspan id=\"0002\"\u003eBox(\u003cbr/\u003e    modifier = Modifier.keepScreenOn()\u003cbr/\u003e  ){\u003cbr/\u003e    Text(\u0026#34;Keep the screen on.. üîÜ\u0026#34;)\u003cbr/\u003e  }\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv\u003e\u003ch2 id=\"faac\"\u003eReferences\u003c/h2\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": "2025-05-07T12:58:12.929Z",
  "modifiedTime": null
}
