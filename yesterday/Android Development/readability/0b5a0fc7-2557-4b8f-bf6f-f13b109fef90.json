{
  "id": "0b5a0fc7-2557-4b8f-bf6f-f13b109fef90",
  "title": "April ’25 Jetpack Compose Drop: My Favorite New Features",
  "link": "https://proandroiddev.com/april-25-jetpack-compose-drop-my-favorite-new-features-2fc4ce5a21a7?source=rss----c72404660798---4",
  "description": "",
  "author": "Nav Singh",
  "published": "Mon, 09 Jun 2025 14:23:13 GMT",
  "source": "https://proandroiddev.com/feed",
  "categories": [
    "androiddev",
    "jetpack-compose",
    "compose",
    "android-app-development",
    "android"
  ],
  "byline": "Nav Singh",
  "length": 2298,
  "excerpt": "April ’25 Jetpack Compose Drop: My Favorite New Features 🔥. In this article, I will share my favorite Compose updates from the April-2025 release..",
  "siteName": "ProAndroidDev",
  "favicon": "https://miro.medium.com/v2/resize:fill:256:256/1*A8VytPZQhvUf_MG6hm_Dlw.png",
  "text": "In this article, I will share my favorite Compose updates from the April-2025 release.There are many new features and enhancements to existing APIs. With coding samples, I’ll share my favorite ones here.AutoSizeBasictText has a new parameter called autosize which helps autosize the text to fit the container size.We can customize the font size as well as stepSize 👇@Composablefun TextInputExample() { var text by remember { mutableStateOf(\"\") } Column { Text(text = \"Enter some text:\") BasicTextField( value = text, onValueChange = { text = it }, modifier = Modifier, decorationBox = { innerTextField -\u003e Box( modifier = Modifier .border(2.dp, Color.Gray, RoundedCornerShape(8.dp)) ) { innerTextField() } } ) Box { BasicText( text = \"You typed: $text\", maxLines = 1, autoSize = TextAutoSize.StepBased(), ) } }}Text overflow handlingWe now have an option to display ellipses at the start or middle of a text line.@Composableprivate fun SampleTextOverflow() { MediumArticleSamplesTheme { val text = \"Long long text that will overflow\" Column { //....... Column { Text(text, maxLines = 1, overflow = TextOverflow.Ellipsis) Text(text, maxLines = 1, overflow = TextOverflow.StartEllipsis) Text(text, maxLines = 1, overflow = TextOverflow.MiddleEllipsis) } } }}HTML 𝗯𝘂𝗹𝗹𝗲𝘁𝗲𝗱 list 𝘀𝘂𝗽𝗽𝗼𝗿𝘁𝗲𝗱 𝗶𝗻 𝗔𝗻𝗻𝗼𝘁𝗮𝘁𝗲𝗱𝗦𝘁𝗿𝗶𝗻𝗴With this release, we have first-class support for bulleted lists in 𝗔𝗻𝗻𝗼𝘁𝗮𝘁𝗲𝗱𝗦𝘁𝗿𝗶𝗻𝗴@Composableprivate fun SampleHTMLBulletedList() { MediumArticleSamplesTheme { Column { //........ Text( AnnotatedString.fromHtml( \"\"\" \u003ch1\u003eHTML content\u003c/h1\u003e \u003cul\u003e \u003cli\u003eItem 1\u003c/li\u003e \u003cli\u003eItem 2\u003c/li\u003e \u003c/ul\u003e \"\"\".trimIndent() ), //...... ) } }}This release is described in full in the following blog post by the Android team 👇",
  "image": "https://miro.medium.com/v2/resize:fit:1200/1*RNtdL_mrRE9xoYf1N1SP_g.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003carticle\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cdiv tabindex=\"-1\" aria-hidden=\"false\"\u003e\u003ca href=\"https://navczydev.medium.com/?source=post_page---byline--2fc4ce5a21a7---------------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Nav Singh\" src=\"https://miro.medium.com/v2/resize:fill:64:64/1*fgXFMgSUVAlGSdmMkx9TYw.png\" width=\"32\" height=\"32\" loading=\"lazy\" data-testid=\"authorPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003cfigure\u003e\u003c/figure\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"270b\"\u003eIn this article, I will share my favorite Compose updates from the April-2025 release.\u003c/p\u003e\u003cp id=\"92e8\"\u003eThere are many new features and enhancements to existing APIs. With coding samples, I’ll share my favorite ones here.\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003ch2 id=\"08c5\"\u003e\u003cstrong\u003eAutoSize\u003c/strong\u003e\u003c/h2\u003e\u003cul\u003e\u003cli id=\"0272\"\u003e\u003ccode\u003e\u003cstrong\u003eBasictText\u003c/strong\u003e\u003c/code\u003e has a new parameter called \u003ccode\u003eautosize\u003c/code\u003e which helps \u003cstrong\u003eautosize\u003c/strong\u003e the \u003ccode\u003etext\u003c/code\u003e to \u003cstrong\u003efit\u003c/strong\u003e the \u003cstrong\u003econtainer size\u003c/strong\u003e.\u003c/li\u003e\u003cli id=\"2b61\"\u003eWe can \u003cstrong\u003ecustomize\u003c/strong\u003e the \u003ccode\u003efont size\u003c/code\u003e as well as \u003ccode\u003estepSize\u003c/code\u003e 👇\u003c/li\u003e\u003c/ul\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cpre\u003e\u003cspan id=\"3f5e\"\u003e@Composable\u003cbr/\u003efun TextInputExample() {\u003cbr/\u003e    var text by remember { mutableStateOf(\u0026#34;\u0026#34;) }\u003cp\u003e    Column {\u003c/p\u003e\u003cp\u003e        Text(text = \u0026#34;Enter some text:\u0026#34;)\u003c/p\u003e\u003cp\u003e                BasicTextField(\u003cbr/\u003e            value = text,\u003cbr/\u003e            onValueChange = { text = it },\u003cbr/\u003e            modifier = Modifier,\u003cbr/\u003e            decorationBox = { innerTextField -\u0026gt;\u003cbr/\u003e                Box(\u003cbr/\u003e                    modifier = Modifier\u003cbr/\u003e                        .border(2.dp, Color.Gray, RoundedCornerShape(8.dp))\u003cbr/\u003e                ) {\u003cbr/\u003e                    innerTextField()\u003cbr/\u003e                }\u003cbr/\u003e            }\u003cbr/\u003e        )\u003c/p\u003e\u003cp\u003e        Box {\u003cbr/\u003e            BasicText(\u003cbr/\u003e                text = \u0026#34;You typed: $text\u0026#34;,\u003cbr/\u003e                maxLines = 1,\u003cbr/\u003e                autoSize = TextAutoSize.StepBased(),\u003cbr/\u003e            )\u003cbr/\u003e        }\u003cbr/\u003e    }\u003cbr/\u003e}\u003c/p\u003e\u003c/span\u003e\u003c/pre\u003e\u003cfigure\u003e\u003c/figure\u003e\u003c/div\u003e\u003cdiv\u003e\u003ch2 id=\"cde7\"\u003e\u003cstrong\u003eText overflow handling\u003c/strong\u003e\u003c/h2\u003e\u003cul\u003e\u003cli id=\"c2d0\"\u003eWe now have an option to display \u003ccode\u003e\u003cstrong\u003eellipses\u003c/strong\u003e\u003c/code\u003e at the \u003cstrong\u003estart\u003c/strong\u003e or \u003cstrong\u003emiddle\u003c/strong\u003e of a text line.\u003c/li\u003e\u003c/ul\u003e\u003cpre\u003e\u003cspan id=\"fff9\"\u003e@Composable\u003cbr/\u003eprivate fun SampleTextOverflow() {\u003cbr/\u003e    MediumArticleSamplesTheme {\u003cbr/\u003e        val text = \u0026#34;Long long text that will overflow\u0026#34;\u003cbr/\u003e        Column {\u003cbr/\u003e            //.......\u003cbr/\u003e            Column {\u003cbr/\u003e                Text(text, maxLines = 1, overflow = TextOverflow.Ellipsis)\u003cbr/\u003e                Text(text, maxLines = 1, overflow = TextOverflow.StartEllipsis)\u003cbr/\u003e                Text(text, maxLines = 1, overflow = TextOverflow.MiddleEllipsis)\u003cbr/\u003e            }\u003cbr/\u003e        }\u003cbr/\u003e    }\u003cbr/\u003e}\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv\u003e\u003ch2 id=\"9551\"\u003e\u003cstrong\u003eHTML\u003c/strong\u003e 𝗯𝘂𝗹𝗹𝗲𝘁𝗲𝗱 list 𝘀𝘂𝗽𝗽𝗼𝗿𝘁𝗲𝗱 𝗶𝗻 𝗔𝗻𝗻𝗼𝘁𝗮𝘁𝗲𝗱𝗦𝘁𝗿𝗶𝗻𝗴\u003c/h2\u003e\u003cul\u003e\u003cli id=\"e973\"\u003eWith this release, we have first-class support for \u003cstrong\u003ebulleted lists\u003c/strong\u003e in \u003ccode\u003e𝗔𝗻𝗻𝗼𝘁𝗮𝘁𝗲𝗱𝗦𝘁𝗿𝗶𝗻𝗴\u003c/code\u003e\u003c/li\u003e\u003c/ul\u003e\u003cpre\u003e\u003cspan id=\"654c\"\u003e@Composable\u003cbr/\u003eprivate fun SampleHTMLBulletedList() {\u003cbr/\u003e    MediumArticleSamplesTheme {\u003cbr/\u003e        Column {\u003cbr/\u003e            //........\u003cbr/\u003e            Text(\u003cbr/\u003e                AnnotatedString.fromHtml(\u003cbr/\u003e                    \u0026#34;\u0026#34;\u0026#34;\u003cbr/\u003e                \u0026lt;h1\u0026gt;HTML content\u0026lt;/h1\u0026gt;\u003cbr/\u003e                \u0026lt;ul\u0026gt;\u003cbr/\u003e                    \u0026lt;li\u0026gt;Item 1\u0026lt;/li\u0026gt;\u003cbr/\u003e                    \u0026lt;li\u0026gt;Item 2\u0026lt;/li\u0026gt;\u003cbr/\u003e                \u0026lt;/ul\u0026gt;\u003cbr/\u003e            \u0026#34;\u0026#34;\u0026#34;.trimIndent()\u003cbr/\u003e                ),\u003cbr/\u003e                //......\u003cbr/\u003e            )\u003cbr/\u003e        }\u003cbr/\u003e    }\u003cbr/\u003e}\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv\u003e\u003ch2 id=\"5047\"\u003eThis release is described in full in the following blog post by the Android team 👇\u003c/h2\u003e\u003c/div\u003e\u003c/div\u003e\u003c/article\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": "2025-04-27T14:51:09.357Z",
  "modifiedTime": null
}
