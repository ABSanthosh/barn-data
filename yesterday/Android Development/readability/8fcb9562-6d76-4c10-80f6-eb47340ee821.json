{
  "id": "8fcb9562-6d76-4c10-80f6-eb47340ee821",
  "title": "Now in Android #119",
  "link": "https://medium.com/androiddevelopers/now-in-android-119-7b86ad2b3e81?source=rss----95b274b437c2---4",
  "description": "",
  "author": "Meghan Mehta",
  "published": "Wed, 09 Jul 2025 17:02:38 GMT",
  "source": "https://medium.com/feed/androiddevelopers",
  "categories": [
    "now-in-android",
    "testing",
    "featured",
    "adaptive",
    "android-16"
  ],
  "byline": "Meghan Mehta",
  "length": 7298,
  "excerpt": "Welcome to Now in Android, your ongoing guide to what‚Äôs new and notable in the world of Android development. In this edition we will cover Android 16, Desktop Experiences, Adaptive Apps, Testing‚Ä¶",
  "siteName": "Android Developers",
  "favicon": "https://miro.medium.com/v2/resize:fill:1000:1000/7*GAOKVe--MXbEJmV9230oOQ.png",
  "text": "Now in Android #119Welcome to Now in Android, your ongoing guide to what‚Äôs new and notable in the world of Android development. In this edition we will cover Android 16, Desktop Experiences, Adaptive Apps, Testing Videos, AndroidX and more!Most of the content of this post is available in the form of a video or podcast, so feel free to watch or listen rather than read on. (Or do all three to help you remember! There won‚Äôt be a quiz.)Android 16 is here ü§ñAndroid 16 is released and available on supported Pixel devices, with new devices to follow. The source code is available at the Android Open Source Project.Key updates include:Enhanced camera and media APIs for pro users, with night mode scene detection, hybrid auto exposure and precise color temperature adjustments. Improved UltraHDR image support with HEIC encoding and an embedded photo picker.Apps targeting Android 16 can no longer opt-out of going edge-to-edgeChanges to how the system manages orientation, resizability, and aspect ratio restrictions.System animations for back-to-home, cross-task, and cross-activity by default. In addition, this release extends predictive back navigation to three-button navigation, meaning that users long-pressing the back button will see a glimpse of the previous screen before navigating back.Progress style notifications which lets you create progress-centric notifications that can denote states and milestones in a user journey using points and segments.RuntimeColorFilter and RuntimeXfermode, allowing you to author complex effects like Threshold, Sepia, and Hue Saturation in AGSL and apply them to draw calls.Top 3 updates for building excellent, adaptive apps at Google I/O ‚Äô25 ü§ñAt Google I/O 2025, several advancements were announced for Android, including the rollout of Android 16, a Developer Preview for enhanced Android desktop experiences, and updates for Android users across Google apps.Key announcements for developers:Adaptive apps: Build a single, adaptive application that functions across various form factors using Jetpack Compose Adaptive Libraries, Navigation 3 library, and updates to the Window Manager Library in AndroidX.window 1.5.Performance Optimization: Use the redesigned UiAutomator API for benchmarking, macrobenchmarks and App Startup Insights to improve app performance, and leverage R8 for troubleshooting and performance optimization.Enhanced Media Experiences: Use CameraX and Media3Effects for capturing high-quality video and Google Low-Light Boost for real-time camera brightness adjustment in low light. Explore new camera and media samples.Developer preview: Enhanced Android desktop experiences with connected displays üñ•Ô∏èWith the Android 16 QPR1 Beta 2 release, you can now access connected displays support on compatible Android devices. By connecting an external display to your Android device, you can transform it into a workstation. This gives users the ability to move apps beyond a single screen to unlock Android‚Äôs full productivity potential on external displays.Desktop windowing is now stable as well. We‚Äôve made improvements in the stability and performance of desktop windowing in Android 16 and added some new features:Flexible window tiling: Users can more easily arrange multiple app windows side by side or in various configurations, making it simpler to work across different applications simultaneously on a large screen.Multiple desktops: Users can set up multiple desktop sessions to match their distinct productivity requirements and switch between the desktops using keyboard shortcuts, trackpad gestures, and Overview.Enhanced app compatibility treatments: New compatibility treatments ensure that even legacy apps behave more predictably and look better on external displays by default.Multi-instance management: Users can manage multiple instances of supporting applications (for example, Chrome or, Keep) through the app header button or taskbar context menu.Desktop persistence: Android can now better maintain window sizes, positions, and states across different desktops.You can try out these features today on your connected display with the Android 16 QPR1 Beta 2 on select Pixel devices.A product manager‚Äôs guide to adapting Android apps across devices üì±In Android 16, adaptive apps are essential to provide a consistent user experience across various devices. Product managers should prioritize adaptive design for your apps to meet user expectations on foldables, tablets, Chromebooks, and other form factors.By building adaptive apps, you can improve user engagement, increase app discoverability on Google Play, and ensure accessibility for users with disabilities. You can start by checking how your app currently looks on large screens, addressing common UI issues, and incrementally optimizing your app screen by screen.VideosWe have a few new testing videos for you to check out!Android Testing StrategiesAutomated testing is crucial for scalable and efficient quality assurance as apps grow in complexity. However, the traditional testing pyramid might not be the best approach. Learn more about using a strategy that considers both the scope (test size) and the size (code executed) of different test categories: release candidate, application, feature, component, and unit tests. This helps ensure reliable results and faster execution times.Goodbye manual testing, hello automated testingAndroid app developers should embrace automated testing (unit, smoke, hermetic, screenshot) to replace time-consuming and error-prone manual testing. Learn more about how automation improves app quality, provides fast feedback, catches bugs, and prevents feature regressions, ultimately increasing developer productivity and freeing up time for critical tasks.Tools and patterns for scalable Android app testingAndroid app developers should be aware of the tools and patterns used in scalable app testing: Learn more about using screenshot tests, robolectric, device emulation, management for flaky tests, and gradle managed devices in this video.AndroidX Releases üöÄHere‚Äôs a summary of the AndroidX changes, prioritized for app developers:New PhotoPicker Library: This is a major addition, providing a straightforward way to integrate with the system‚Äôs embedded photo picker. It includes both View-based and Compose-based components, along with utilities for state management and testing. This simplifies image selection for users and improves the user experience.Lifecycle ViewModel Navigation3 Integration: This new library offers better integration between ViewModels and the Navigation3 library. The key component is ViewModelStoreNavEntryDecorator, which ensures each NavEntry has its own ViewModelStoreOwner. This helps to properly scope and manage ViewModels within your navigation graph, especially when using config changes.Emoji2 Library Update: The update to emoji2 includes updates to emoji 16.0 and uses JSpecify nullness annotations which require Kotlin developers to use specific compiler arguments to enforce correct usage: -Xjspecify-annotations=strict, -Xtype-enhancement-improvements-strict-mode.Now then‚Ä¶ üëãThat‚Äôs it for this week‚Äôs episode, with Android 16, Desktop Experiences, Adaptive Apps, Testing, AndroidX and more!Check back soon for your next update from the Android developer universe!",
  "image": "https://miro.medium.com/v2/da:true/resize:fit:1200/0*7cTmk_VzyuwZUlal",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003carticle\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cp\u003e\u003ch2 id=\"4253\" data-testid=\"storyTitle\"\u003eNow in Android #119\u003c/h2\u003e\u003c/p\u003e\u003cp id=\"e624\"\u003eWelcome to Now in Android, your ongoing guide to what‚Äôs new and notable in the world of Android development. In this edition we will cover \u003ca href=\"http://android-developers.googleblog.com/2025/06/android-16-is-here.html\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eAndroid 16\u003c/a\u003e, \u003ca href=\"http://android-developers.googleblog.com/2025/06/developer-preview-enhanced-android-desktop-experiences-connected-displays.html\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eDesktop Experiences\u003c/a\u003e, \u003ca href=\"http://android-developers.googleblog.com/2025/06/top-3-updates-for-building-excellent-adaptive-apps-google-io-25.html\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eAdaptive Apps\u003c/a\u003e, \u003ca href=\"https://www.youtube.com/watch?v=qeFWCYc7u3E\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eTesting Videos\u003c/a\u003e, \u003ca href=\"https://developer.android.com/jetpack/androidx/versions/all-channel\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eAndroidX\u003c/a\u003e and more!\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"f7a1\"\u003eMost of the content of this post is available in the form of a \u003ca href=\"https://youtu.be/fZ6HrQb2EYY\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003evideo\u003c/a\u003e or \u003ca href=\"http://nowinandroid.libsyn.com/119-android-16-testing-desktop-experiences-androidx-and-more\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003epodcast\u003c/a\u003e, so feel free to \u003ca href=\"https://youtu.be/fZ6HrQb2EYY\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ewatch\u003c/a\u003e or \u003ca href=\"http://nowinandroid.libsyn.com/119-android-16-testing-desktop-experiences-androidx-and-more\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003elisten\u003c/a\u003e rather than read on. (Or do all three to help you remember! There won‚Äôt be a quiz.)\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfigure\u003e\u003c/figure\u003e\u003ch2 id=\"d8f9\"\u003e\u003ca href=\"http://android-developers.googleblog.com/2025/06/android-16-is-here.html\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eAndroid 16 is here ü§ñ\u003c/a\u003e\u003c/h2\u003e\u003cp id=\"f9fd\"\u003eAndroid 16 is released and available on supported Pixel devices, with new devices to follow. The source code is available at the Android Open Source Project.\u003c/p\u003e\u003cp id=\"25d8\"\u003e\u003cstrong\u003eKey updates include:\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"f8ab\"\u003eEnhanced camera and media APIs for pro users, with \u003ca href=\"https://developer.android.com/about/versions/16/features#night-mode-scene-detection\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003enight mode scene detection\u003c/a\u003e, \u003ca href=\"https://developer.android.com/about/versions/16/features#hybrid-auto-exposure\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ehybrid auto exposure\u003c/a\u003e and \u003ca href=\"https://developer.android.com/about/versions/16/features#color-temperature-tint\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eprecise color temperature adjustments\u003c/a\u003e. Improved\u003ca href=\"https://developer.android.com/about/versions/16/features#ultra-hdr\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e UltraHDR image\u003c/a\u003e support with HEIC encoding and an embedded photo picker.\u003c/li\u003e\u003cli id=\"8cc1\"\u003eApps targeting Android 16 can no longer opt-out of going edge-to-edge\u003c/li\u003e\u003cli id=\"0194\"\u003eChanges to how the system manages orientation, resizability, and aspect ratio restrictions.\u003c/li\u003e\u003cli id=\"bde9\"\u003eSystem animations for back-to-home, cross-task, and cross-activity by default. In addition, this release extends predictive back navigation to \u003ca href=\"https://developer.android.com/about/versions/16/behavior-changes-all#three-button-predictive-back\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ethree-button navigation\u003c/a\u003e, meaning that users long-pressing the back button will see a glimpse of the previous screen before navigating back.\u003c/li\u003e\u003cli id=\"8735\"\u003e\u003ca href=\"https://developer.android.com/reference/android/app/Notification.ProgressStyle\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eProgress style notifications\u003c/a\u003e which lets you create progress-centric notifications that can denote states and milestones in a user journey using \u003ca href=\"https://developer.android.com/reference/android/app/Notification.ProgressStyle.Point\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003epoints\u003c/a\u003e and \u003ca href=\"https://developer.android.com/reference/android/app/Notification.ProgressStyle.Segment\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003esegments\u003c/a\u003e.\u003c/li\u003e\u003cli id=\"00aa\"\u003e\u003ca href=\"https://developer.android.com/reference/android/graphics/RuntimeColorFilter\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eRuntimeColorFilter\u003c/a\u003e and \u003ca href=\"https://developer.android.com/reference/android/graphics/RuntimeXfermode\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eRuntimeXfermode\u003c/a\u003e, allowing you to author complex effects like Threshold, Sepia, and Hue Saturation in AGSL and apply them to draw calls.\u003c/li\u003e\u003c/ul\u003e\u003cfigure\u003e\u003c/figure\u003e\u003ch2 id=\"5d21\"\u003e\u003ca href=\"http://android-developers.googleblog.com/2025/06/top-3-updates-for-building-excellent-adaptive-apps-google-io-25.html\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eTop 3 updates for building excellent, adaptive apps at Google I/O ‚Äô25 ü§ñ\u003c/a\u003e\u003c/h2\u003e\u003cp id=\"4920\"\u003eAt Google I/O 2025, several advancements were announced for Android, including the rollout of Android 16, a Developer Preview for enhanced Android desktop experiences, and updates for Android users across Google apps.\u003c/p\u003e\u003cp id=\"69b6\"\u003e\u003cstrong\u003eKey announcements for developers:\u003c/strong\u003e\u003c/p\u003e\u003col\u003e\u003cli id=\"e1dd\"\u003e\u003cstrong\u003eAdaptive apps: \u003c/strong\u003eBuild a single, adaptive application that functions across various form factors using \u003ca href=\"https://developer.android.com/jetpack/androidx/releases/compose-material3-adaptive\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eJetpack Compose Adaptive Libraries\u003c/a\u003e, \u003ca href=\"https://developer.android.com/jetpack/androidx/releases/navigation3\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eNavigation 3 library\u003c/a\u003e, and updates to the Window Manager Library in \u003ca href=\"https://developer.android.com/jetpack/androidx/releases/window#1.5.0-alpha02\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eAndroidX.window 1.5\u003c/a\u003e.\u003c/li\u003e\u003cli id=\"d8df\"\u003e\u003cstrong\u003ePerformance Optimization:\u003c/strong\u003e Use the redesigned \u003ca href=\"https://developer.android.com/training/testing/other-components/ui-automator\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eUiAutomator API\u003c/a\u003e for benchmarking, \u003ca href=\"https://developer.android.com/topic/performance/benchmarking/macrobenchmark-overview\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003emacrobenchmarks\u003c/a\u003e and App Startup Insights to improve app performance, and leverage \u003ca href=\"https://developer.android.com/build/shrink-code\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eR8\u003c/a\u003e for troubleshooting and performance optimization.\u003c/li\u003e\u003cli id=\"1fb1\"\u003e\u003cstrong\u003eEnhanced Media Experiences:\u003c/strong\u003e Use CameraX and \u003ca href=\"https://developer.android.com/reference/androidx/media3/effect/package-summary\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eMedia3Effects\u003c/a\u003e for capturing high-quality video and Google Low-Light Boost for real-time camera brightness adjustment in low light. Explore new \u003ca href=\"https://android-developers.googleblog.com/2025/05/building-delightful-android-camera-media-experiences.html\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ecamera and media samples\u003c/a\u003e.\u003c/li\u003e\u003c/ol\u003e\u003cfigure\u003e\u003c/figure\u003e\u003ch2 id=\"99b6\"\u003e\u003ca href=\"http://android-developers.googleblog.com/2025/06/developer-preview-enhanced-android-desktop-experiences-connected-displays.html\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eDeveloper preview: Enhanced Android desktop experiences with connected displays üñ•Ô∏è\u003c/a\u003e\u003c/h2\u003e\u003cp id=\"7ce0\"\u003eWith the Android 16 QPR1 Beta 2 release, you can now access connected displays support on compatible Android devices. By connecting an external display to your Android device, you can transform it into a workstation. This gives users the ability to move apps beyond a single screen to unlock Android‚Äôs full productivity potential on external displays.\u003c/p\u003e\u003cp id=\"7ca2\"\u003eDesktop windowing is now stable as well. We‚Äôve made improvements in the stability and performance of desktop windowing in Android 16 and added some \u003cstrong\u003enew features\u003c/strong\u003e:\u003c/p\u003e\u003cul\u003e\u003cli id=\"852d\"\u003e\u003cstrong\u003eFlexible window tiling:\u003c/strong\u003e Users can more easily arrange multiple app windows side by side or in various configurations, making it simpler to work across different applications simultaneously on a large screen.\u003c/li\u003e\u003cli id=\"c34a\"\u003e\u003cstrong\u003eMultiple desktops:\u003c/strong\u003e Users can set up multiple desktop sessions to match their distinct productivity requirements and switch between the desktops using keyboard shortcuts, trackpad gestures, and Overview.\u003c/li\u003e\u003cli id=\"5632\"\u003e\u003cstrong\u003eEnhanced app compatibility treatments:\u003c/strong\u003e \u003ca href=\"https://developer.android.com/guide/practices/device-compatibility-mode#desktop_windowing\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eNew compatibility treatments\u003c/a\u003e ensure that even legacy apps behave more predictably and look better on external displays by default.\u003c/li\u003e\u003cli id=\"7658\"\u003e\u003cstrong\u003eMulti-instance management:\u003c/strong\u003e Users can manage multiple instances of supporting applications (for example, Chrome or, Keep) through the app header button or taskbar context menu.\u003c/li\u003e\u003cli id=\"c1f9\"\u003e\u003cstrong\u003eDesktop persistence:\u003c/strong\u003e Android can now better maintain window sizes, positions, and states across different desktops.\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"c48c\"\u003eYou can try out these features today on your connected display with the Android 16 QPR1 Beta 2 on select Pixel devices.\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003ch2 id=\"20f9\"\u003e\u003ca href=\"http://android-developers.googleblog.com/2025/06/a-product-manager-guide-to-scaling-android-apps-across-from-factors.html\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eA product manager‚Äôs guide to adapting Android apps across devices üì±\u003c/a\u003e\u003c/h2\u003e\u003cp id=\"1850\"\u003eIn Android 16, adaptive apps are essential to provide a consistent user experience across various devices. Product managers should prioritize adaptive design for your apps to meet user expectations on foldables, tablets, Chromebooks, and other form factors.\u003c/p\u003e\u003cp id=\"3de4\"\u003eBy building adaptive apps, you can improve user engagement, increase app discoverability on Google Play, and ensure accessibility for users with disabilities. You can start by checking how your app currently looks on large screens, addressing common UI issues, and incrementally optimizing your app screen by screen.\u003c/p\u003e\u003ch2 id=\"243b\"\u003eVideos\u003c/h2\u003e\u003cp id=\"b9c5\"\u003eWe have a few new testing videos for you to check out!\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003ch2 id=\"26f8\"\u003e\u003ca href=\"https://www.youtube.com/watch?v=qeFWCYc7u3E\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eAndroid Testing Strategies\u003c/a\u003e\u003c/h2\u003e\u003cp id=\"f1f8\"\u003eAutomated testing is crucial for scalable and efficient quality assurance as apps grow in complexity. However, the traditional testing pyramid might not be the best approach. Learn more about using a strategy that considers both the scope (test size) and the size (code executed) of different test categories: release candidate, application, feature, component, and unit tests. This helps ensure reliable results and faster execution times.\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003ch2 id=\"7eba\"\u003e\u003ca href=\"https://www.youtube.com/watch?v=ei_QZj47n9A\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eGoodbye manual testing, hello automated testing\u003c/a\u003e\u003c/h2\u003e\u003cp id=\"bed7\"\u003eAndroid app developers should embrace automated testing (unit, smoke, hermetic, screenshot) to replace time-consuming and error-prone manual testing. Learn more about how automation improves app quality, provides fast feedback, catches bugs, and prevents feature regressions, ultimately increasing developer productivity and freeing up time for critical tasks.\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003ch2 id=\"3204\"\u003e\u003ca href=\"https://www.youtube.com/watch?v=9SlKPtUtv6o\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eTools and patterns for scalable Android app testing\u003c/a\u003e\u003c/h2\u003e\u003cp id=\"414d\"\u003eAndroid app developers should be aware of the tools and patterns used in scalable app testing: Learn more about using screenshot tests, robolectric, device emulation, management for flaky tests, and gradle managed devices in this video.\u003c/p\u003e\u003ch2 id=\"b9b8\"\u003e\u003ca href=\"https://developer.android.com/jetpack/androidx/versions/all-channel\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eAndroidX Releases üöÄ\u003c/a\u003e\u003c/h2\u003e\u003cp id=\"b7a7\"\u003eHere‚Äôs a summary of the AndroidX changes, prioritized for app developers:\u003c/p\u003e\u003cul\u003e\u003cli id=\"1636\"\u003e\u003cstrong\u003eNew \u003c/strong\u003e\u003cstrong\u003ePhotoPicker Library\u003c/strong\u003e\u003cstrong\u003e:\u003c/strong\u003e This is a major addition, providing a straightforward way to integrate with the system‚Äôs embedded photo picker. It includes both View-based and Compose-based components, along with utilities for state management and testing. This simplifies image selection for users and improves the user experience.\u003c/li\u003e\u003cli id=\"3340\"\u003e\u003ca href=\"https://developer.android.com/jetpack/androidx/releases/lifecycle#lifecycle-viewmodel-navigation3-1.0.0-alpha02\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eLifecycle ViewModel Navigation3 Integration\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e:\u003c/strong\u003e This new library offers better integration between ViewModels and the Navigation3 library. The key component is \u003ccode\u003eViewModelStoreNavEntryDecorator\u003c/code\u003e, which ensures each \u003ccode\u003eNavEntry\u003c/code\u003e has its own \u003ccode\u003eViewModelStoreOwner\u003c/code\u003e. This helps to properly scope and manage ViewModels within your navigation graph, especially when using config changes.\u003c/li\u003e\u003cli id=\"0831\"\u003e\u003ca href=\"https://developer.android.com/jetpack/androidx/releases/emoji2#version_16_2\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eEmoji2 Library Update\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e:\u003c/strong\u003e The update to emoji2 includes updates to emoji 16.0 and uses JSpecify nullness annotations which require Kotlin developers to use specific compiler arguments to enforce correct usage: \u003ccode\u003e-Xjspecify-annotations=strict\u003c/code\u003e, \u003ccode\u003e-Xtype-enhancement-improvements-strict-mode\u003c/code\u003e.\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"8f92\"\u003eNow then‚Ä¶ üëã\u003c/h2\u003e\u003cp id=\"7ad3\"\u003eThat‚Äôs it for this week‚Äôs episode, with \u003ca href=\"http://android-developers.googleblog.com/2025/06/android-16-is-here.html\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eAndroid 16\u003c/a\u003e, \u003ca href=\"http://android-developers.googleblog.com/2025/06/developer-preview-enhanced-android-desktop-experiences-connected-displays.html\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eDesktop Experiences\u003c/a\u003e, \u003ca href=\"http://android-developers.googleblog.com/2025/06/top-3-updates-for-building-excellent-adaptive-apps-google-io-25.html\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eAdaptive Apps\u003c/a\u003e, \u003ca href=\"https://www.youtube.com/watch?v=qeFWCYc7u3E\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eTesting\u003c/a\u003e, \u003ca href=\"https://developer.android.com/jetpack/androidx/versions/all-channel\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eAndroidX\u003c/a\u003e and more!\u003c/p\u003e\u003cp id=\"ad50\"\u003eCheck back soon for your next update from the Android developer universe!\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/article\u003e\u003c/div\u003e",
  "readingTime": "8 min read",
  "publishedTime": "2025-07-09T17:02:38.729Z",
  "modifiedTime": null
}
