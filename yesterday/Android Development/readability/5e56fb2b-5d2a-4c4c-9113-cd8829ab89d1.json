{
  "id": "5e56fb2b-5d2a-4c4c-9113-cd8829ab89d1",
  "title": "Android Weekly Issue #662",
  "link": "https://androidweekly.net/issues/issue-662/rss.xml",
  "description": "Articles \u0026 Tutorials Sponsored How Koin's Plugin Helps You Spot Kotlin App Issues Join Arnaud \u0026 Miguel for a technical webinar exploring the new Koin Plugin for IntelliJ \u0026 Android Studio. Learn how it detects dependency issues directly in your IDE, highlights potential app issues, and integrates with the Kotzilla Console for advanced debugging and root-cause analysis. Brushed Metal UI in Jetpack Compose Sina Samaki demonstrates how to create a skeuomorphic brushed metal effect in Jetpack Compose by layering radial and sweep gradients, enabling developers to design metallic UI components with customizable highlights and textures. How many threads your network client uses? Marcin Moskała analyzes thread usage in Kotlin network clients, highlighting how Ktor Client is more efficient than Retrofit and Fuel. Sponsored Genius Scan SDK: a document scanner in your app Embed a reliable document scanner with OCR in your app, enabling your customers to capture high-quality, legible documents that you can process effortlessly. Hundreds of companies and millions of users trust the Genius Scan technology. Supports Android, iOS, and cross-platform frameworks. Three Dots Loading Animation with Jetpack Compose Souvik Sarkar demonstrates creating a three-dots loading animation in Jetpack Compose by utilizing rememberInfiniteTransition for staggered animations and applying a shared Modifier to achieve bouncing and fading effects. Android Performance — Overdraw Gokul Raja T S explains overdraw in Android, how to detect it using “Debug GPU Overdraw,” and techniques to reduce unnecessary rendering for better performance. Loading Initial Data properly with MVI Maxime Michel explores best practices for loading initial data in MVI architecture, comparing ViewModel initialization with LaunchedEffect in Jetpack Compose. Using Ktor In Jetpack Compose. A Full Fledged Explanation Tomer Pacific provides a comprehensive guide on integrating Ktor into Jetpack Compose applications, covering setup, client instantiation, making network requests, and deserializing JSON responses. Kotlin Multiplatform Architecture Best Practices for Mobile Apps Ignacio Carrión outlines best practices for architecting Kotlin Multiplatform mobile applications, emphasizing a multi-module project structure and the application of Clean Architecture principles to enhance scalability and maintainability. Random Musings on the Android 16 Beta 2 Mark Murphy shares insights on Android 16 Beta 2, discussing deprecations like elegantTextHeight, new APIs for UI jank detection, and the introduction of AdvancedProtectionManager for enhanced security. A Visual Guide to TopAppBar Variants in Jetpack Compose Alex Zhukovich provides a visual guide to various TopAppBar components in Jetpack Compose’s Material 3 library, detailing their default typography, heights, and use cases to help developers choose the appropriate variant for their designs. TrustedTime API: Introducing a reliable approach to time keeping for your apps Google introduces the TrustedTime API, which provides a reliable time source independent of device settings, enhancing accuracy for functionalities like scheduling, security protocols, and event logging. Advanced Exception Handling in Kotlin Coroutines: A Guide for Android Developers Dobri Kostadinov provides an in-depth guide on advanced exception handling in Kotlin coroutines, covering topics such as exception propagation in coroutine hierarchies. Place a sponsored post Advertise your Android dev course to over 80k readers We reach out to more than 80k Android developers around the world, every week, through our email newsletter and social media channels. Advertise your Android development course! News Kotlin Multiplatform Tooling – Shifting Gears JetBrains will be deprecating support for KMP in Fleet in the next three months and will no longer be releasing a standalone IDE for KMP. Get ready for Google I/O May 20–21 The Google I/O 2025 developer conference is scheduled for May 20–21 at the Shoreline Amphitheatre in Mountain View, California. Registration is now open, allowing participants to receive updates and personalize their experience Meet the Android Studio Team: A Conversation with a Staff Developer Meet Trevor Johns, a seasoned Staff Developer Programs Engineer at Google. The Second Beta of Android 16 Google announces the release of Android 16 Beta 2, introducing enhancements for professional camera experiences, including hybrid auto-exposure modes and precise color temperature adjustments, as well as support for UltraHDR images in HEIC format. Videos \u0026 Podcasts Goodbye Fleet as the official Kotlin Multiplatform IDE Yanneck Reiß talks about the recent announcement of the KMP tooling support Fleet will mean for the future of KMP development IDE support. Create Stunning Animations for Mobile/Web with New Lottie Lab! Create Stunning Animations for Mobile/Web with New Lottie Lab! How To Land An Android Dev Role In 30 Days (Full Step-By-Step Course) Jov Mit teaches how to land an Android dev role in 30 days with this full step-by-step course The Full Guide to Supporting Edge-to-Edge On Android 15+ (Compose + XML) Philipp Lackner shows how you can deal with Android 15's edge-to-edge enforcement and make sure no critical content is overlapped by system components. 5 Minutes to Faster Edits in IntelliJ and Android Studio - Multiple Cursors Dave Leeds shows you the keyboard shortcuts that have given the biggest boost when working with code in IntelliJ IDEA and Android Studio - multiple cursors! Android API Calls for Beginners (Networking) - Ktor \u0026 JSON Daniel Atitienei about API calls, JSON objects and how you can deal with them. Custom signals for Remote Config - Release Notes Deep Dive Custom signals for Remote Config in Firebase allow you to match arbitrary signals that you define in the app with conditions server side Dependency Injection in KMP with Koin Learn what dependency injection design pattern is and why we use it. As well as how to apply it in your Kotlin Multiplatform app with Koin which is a dependency injection library. Specials Follow us on BlueSky We're there as well!",
  "author": "",
  "published": "Sun, 16 Feb 2025 09:43:06 +0000",
  "source": "https://androidweekly.net/rss.xml",
  "categories": null,
  "byline": "",
  "length": 2499,
  "excerpt": "",
  "siteName": "",
  "favicon": "",
  "text": "Join Arnaud \u0026 Miguel for a technical webinar exploring the new Koin Plugin for IntelliJ \u0026 Android Studio. Learn how it detects dependency issues directly in your IDE, highlights potential app issues, and integrates with the Kotzilla Console for advanced debugging and root-cause analysis. Sina Samaki demonstrates how to create a skeuomorphic brushed metal effect in Jetpack Compose by layering radial and sweep gradients, enabling developers to design metallic UI components with customizable highlights and textures. Embed a reliable document scanner with OCR in your app, enabling your customers to capture high-quality, legible documents that you can process effortlessly. Hundreds of companies and millions of users trust the Genius Scan technology. Supports Android, iOS, and cross-platform frameworks. Souvik Sarkar demonstrates creating a three-dots loading animation in Jetpack Compose by utilizing rememberInfiniteTransition for staggered animations and applying a shared Modifier to achieve bouncing and fading effects. Gokul Raja T S explains overdraw in Android, how to detect it using “Debug GPU Overdraw,” and techniques to reduce unnecessary rendering for better performance. Maxime Michel explores best practices for loading initial data in MVI architecture, comparing ViewModel initialization with LaunchedEffect in Jetpack Compose. Mark Murphy shares insights on Android 16 Beta 2, discussing deprecations like elegantTextHeight, new APIs for UI jank detection, and the introduction of AdvancedProtectionManager for enhanced security. Alex Zhukovich provides a visual guide to various TopAppBar components in Jetpack Compose’s Material 3 library, detailing their default typography, heights, and use cases to help developers choose the appropriate variant for their designs. The Google I/O 2025 developer conference is scheduled for May 20–21 at the Shoreline Amphitheatre in Mountain View, California. Registration is now open, allowing participants to receive updates and personalize their experience Google announces the release of Android 16 Beta 2, introducing enhancements for professional camera experiences, including hybrid auto-exposure modes and precise color temperature adjustments, as well as support for UltraHDR images in HEIC format. Learn what dependency injection design pattern is and why we use it. As well as how to apply it in your Kotlin Multiplatform app with Koin which is a dependency injection library. ]]\u003e",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://content.kotzilla.io/koin-ide-plugin-webinar?utm_source=androidweekly\u0026amp;utm_medium=newsletter\u0026amp;utm_campaign=kotzilla_platform_lead_gen_february_2025\u0026amp;utm_content=webinar_registration\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/67adc7/693c93bc751a00dce3/square_kotzilla.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003cdiv\u003e\u003cp\u003eJoin Arnaud  \u0026amp; Miguel for a technical webinar exploring the new Koin Plugin for IntelliJ \u0026amp; Android Studio. Learn how it detects dependency issues directly in your IDE, highlights potential app issues, and integrates with the Kotzilla Console for advanced debugging and root-cause analysis.\n\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp\u003eSina Samaki demonstrates how to create a skeuomorphic brushed metal effect in Jetpack Compose by layering radial and sweep gradients, enabling developers to design metallic UI components with customizable highlights and textures.\n\u003c/p\u003e\u003c/div\u003e\n\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://geniusscansdk.com/?utm_source=android_weekly\u0026amp;utm_medium=referral\u0026amp;utm_campaign=android_weekly_2025_02_16\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/67adc7/9d3c93bc751a00dcf0/square_Rendered-85w.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003cdiv\u003e\u003cp\u003eEmbed a reliable document scanner with OCR in your app, enabling your customers to capture high-quality, legible documents that you can process effortlessly. Hundreds of companies and millions of users trust the Genius Scan technology. Supports Android, iOS, and cross-platform frameworks.\n\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp\u003eSouvik Sarkar demonstrates creating a three-dots loading animation in Jetpack Compose by utilizing rememberInfiniteTransition for staggered animations and applying a shared Modifier to achieve bouncing and fading effects.\n\u003c/p\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cp\u003eGokul Raja T S explains overdraw in Android, how to detect it using “Debug GPU Overdraw,” and techniques to reduce unnecessary rendering for better performance.\n\u003c/p\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cp\u003eMaxime Michel explores best practices for loading initial data in MVI architecture, comparing ViewModel initialization with LaunchedEffect in Jetpack Compose.\n\u003c/p\u003e\u003c/div\u003e\n\n\n\u003cdiv\u003e\u003cp\u003eMark Murphy shares insights on Android 16 Beta 2, discussing deprecations like elegantTextHeight, new APIs for UI jank detection, and the introduction of AdvancedProtectionManager for enhanced security.\n\u003c/p\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cp\u003eAlex Zhukovich provides a visual guide to various TopAppBar components in Jetpack Compose’s Material 3 library, detailing their default typography, heights, and use cases to help developers choose the appropriate variant for their designs.\n\u003c/p\u003e\u003c/div\u003e\n\n\n\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://androidweekly.net/jobs/new\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/67adc7/b23c93bc751a00dcfa/square_aw.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\n\n\u003cdiv\u003e\u003cp\u003eThe Google I/O 2025 developer conference is scheduled for May 20–21 at the Shoreline Amphitheatre in Mountain View, California. Registration is now open, allowing participants to receive updates and personalize their experience\n\u003c/p\u003e\u003c/div\u003e\n\n\u003cdiv\u003e\u003cp\u003eGoogle announces the release of Android 16 Beta 2, introducing enhancements for professional camera experiences, including hybrid auto-exposure modes and precise color temperature adjustments, as well as support for UltraHDR images in HEIC format.\n\u003c/p\u003e\u003c/div\u003e\n\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://www.youtube.com/watch?v=uBtsDdlAXio\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/67b123/c73c93bc7d1c00ae1f/square_Bildschirmfoto_2025-02-16_um_10.42.31.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\n\n\n\n\n\n\u003cdiv\u003e\u003cp\u003eLearn what dependency injection design pattern is and why we use it. As well as how to apply it in your Kotlin Multiplatform app with Koin which is a dependency injection library.\n\n\u003c/p\u003e\u003c/div\u003e\n\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://androidweekly.bsky.social/\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/67adc7/ea3c93bc751a00dd08/square_square_square_Bildschirmfoto_2025-01-10_um_19.49.55.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e]]\u0026gt;\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": null,
  "modifiedTime": null
}
