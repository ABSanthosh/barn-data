{
  "id": "eafb796d-a222-44d3-9dfd-4c57d3c44953",
  "title": "Here’s how Android 15 protects your two-factor authentication codes from malicious apps",
  "link": "https://www.androidauthority.com/android-15-two-factor-authentication-codes-3492585/",
  "description": "Android 15 blocks most apps from extracting two-factor authentication codes from notifications.",
  "author": "Mishaal Rahman",
  "published": "Mon, 21 Oct 2024 22:03:54 +0000",
  "source": "https://www.androidauthority.com/feed",
  "categories": [
    "News",
    "Android 15",
    "Google"
  ],
  "byline": "Mishaal Rahman",
  "length": 5503,
  "excerpt": "Android 15 blocks malicious apps from reading sensitive notifications with two-factor authentication codes. Here's how.",
  "siteName": "Android Authority",
  "favicon": "https://www.androidauthority.com/pwa/apple-touch-icon.png",
  "text": "Mishaal Rahman / Android AuthorityTL;DR Android 15 blocks untrusted apps from reading sensitive notifications, even if they have permission to read all notifications. Before Android 15, apps with notification access were able to read all incoming notifications, even ones with OTP codes. Now, though, only certain trusted apps can read OTP codes from notifications. Your phone’s notifications panel is a treasure trove of sensitive data, as it includes not just personal messages but also security codes sent from online services you’ve enabled two-factor authentication for. That’s why many malicious apps try to trick you into granting them notification access so they can steal those two-factor authentication codes. Thankfully, the Android 15 update makes it harder for malicious apps to extract two-factor authentication codes from notifications.Android has long offered an API called Notification Listener that lets third-party apps access your notifications. Since notifications can contain sensitive data, apps can’t use the Notification Listener API unless they get your permission. You have to manually grant the app access to your notifications through the Settings app, and the only thing apps can do to assist with that process is to open the Settings page where you can grant access.Mishaal Rahman / Android AuthorityOnce an app has been granted notification access, it can read, reply to, dismiss, or control either all of your phone’s notifications or the subset of notifications that you gave it access to. It doesn’t matter if that notification includes something really sensitive like a two-factor authentication code — with the Notification Listener API, apps can read them and thus extract them.Android 15 changes things by designating notifications with two-factor authentication codes as “sensitive” and only allowing “trusted” Notification Listener services to read them. Any “untrusted” Notification Listener service that tries to read notifications with two-factor authentication codes will simply be given a message stating, “sensitive notification content hidden.”Here’s a short video demonstrating how this change affects Notification Listeners on Android 14 versus Android 15. In this video, you can see that an app that I’ve granted notification access to on a device running Android 14 can read notifications with two-factor authentication codes in them. In contrast, the same app with the same permission on a device running Android 15 cannot read notifications with two-factor authentication codes in them.Under the hood, the Android System Intelligence (ASI) app processes all notifications before they’re sent to Notification Listener services. If ASI detects that a notification has a two-factor authentication code in it, it’ll tell the system to mark it “sensitive” and block it from being sent to “untrusted” Notification Listener services. “Untrusted” Notification Listener services belong to apps that don’t hold the new RECEIVE_SENSITIVE_NOTIFICATIONS permission that Google has added in Android 15.This permission can only be granted to apps signed with the system certificate or to apps that hold certain roles. Most of the roles that are granted the RECEIVE_SENSITIVE_NOTIFICATIONS permission can only be held by system apps, but there are some that can be held by third-party apps, too, like COMPANION_DEVICE_WATCH, COMPANION_DEVICE_GLASSES, and HOME. Respectively, these roles are given to watch companion apps, smart glasses companion apps, and the default launcher. In other words, the only third-party apps that can read notifications with two-factor authentication codes in them on Android 15 are apps that connect to your smartwatch, apps that connect to your smart glasses, or your default home screen launcher app.Sample dialog for an app requesting to hold the COMPANION_DEVICE_WATCH role.Blocking third-party apps from reading notifications with two-factor authentication codes in them will hopefully stop some hacking attempts, but it’ll also break some automation and convenience tools such as “Copy SMS Code,” the free and open source app I used to demonstrate these changes. There is an easy workaround to restore the old behavior, but it’s not something I recommend. It involves turning off “Enhanced notifications” under Settings \u003e Notifications. This stops ASI from parsing notifications and marking ones with two-factor authentication codes as “sensitive,” but it also stops it from generating suggested actions or replies. Another workaround requires setting up and using ADB to manually grant the RECEIVE_SENSITIVE_NOTIFICATIONS permission using the following command:Codeadb shell cmd appops set --user 0 \u003cPACKAGE\u003e RECEIVE_SENSITIVE_NOTIFICATIONS allowHere, \u003cPACKAGE\u003e is the package name for the application you want to grant the permission to. You should only do this if you’re a power user and there’s some tool this change otherwise breaks, though.It’s great to see Android make tiny tweaks like this that improve security, but it would be nice if Google documented this change somewhere, especially because it impacts app behavior. It would also be nice if Android selectively blocked sensitive notifications from appearing on the lock screen, which is something Google was testing when I first reported on this change back in February — maybe that one will arrive in a future Android update.Got a tip? Talk to us! Email our staff at news@androidauthority.com. You can stay anonymous or get credit for the info, it's your choice.",
  "image": "https://www.androidauthority.com/wp-content/uploads/2024/10/OTP_code_in_notification_hero_image.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cpicture\u003e\u003csource sizes=\"(min-width: 64rem) 51.25rem, 80vw\" srcset=\"https://www.androidauthority.com/wp-content/uploads/2024/10/OTP_code_in_notification_hero_image.jpg.webp 1919w, https://www.androidauthority.com/wp-content/uploads/2024/10/OTP_code_in_notification_hero_image-1536w-864h.jpg.webp 1536w, https://www.androidauthority.com/wp-content/uploads/2024/10/OTP_code_in_notification_hero_image-675w-380h.jpg.webp 675w, https://www.androidauthority.com/wp-content/uploads/2024/10/OTP_code_in_notification_hero_image-64w-36h.jpg.webp 64w, https://www.androidauthority.com/wp-content/uploads/2024/10/OTP_code_in_notification_hero_image-1000w-562h.jpg.webp 1000w, https://www.androidauthority.com/wp-content/uploads/2024/10/OTP_code_in_notification_hero_image-300w-170h.jpg.webp 300w, https://www.androidauthority.com/wp-content/uploads/2024/10/OTP_code_in_notification_hero_image-1280w-720h.jpg.webp 1280w, https://www.androidauthority.com/wp-content/uploads/2024/10/OTP_code_in_notification_hero_image-840w-472h.jpg.webp 840w\" type=\"image/webp\"/\u003e\u003cimg decoding=\"async\" loading=\"eager\" sizes=\"(min-width: 64rem) 51.25rem, 80vw\" title=\"Two-factor authentication code in notification\" srcset=\"https://www.androidauthority.com/wp-content/uploads/2024/10/OTP_code_in_notification_hero_image.jpg 1919w, https://www.androidauthority.com/wp-content/uploads/2024/10/OTP_code_in_notification_hero_image-1536w-864h.jpg 1536w, https://www.androidauthority.com/wp-content/uploads/2024/10/OTP_code_in_notification_hero_image-675w-380h.jpg 675w, https://www.androidauthority.com/wp-content/uploads/2024/10/OTP_code_in_notification_hero_image-64w-36h.jpg 64w, https://www.androidauthority.com/wp-content/uploads/2024/10/OTP_code_in_notification_hero_image-1000w-562h.jpg 1000w, https://www.androidauthority.com/wp-content/uploads/2024/10/OTP_code_in_notification_hero_image-300w-170h.jpg 300w, https://www.androidauthority.com/wp-content/uploads/2024/10/OTP_code_in_notification_hero_image-1280w-720h.jpg 1280w, https://www.androidauthority.com/wp-content/uploads/2024/10/OTP_code_in_notification_hero_image-840w-472h.jpg 840w\" alt=\"Two-factor authentication code in notification\" src=\"https://www.androidauthority.com/wp-content/uploads/2024/10/OTP_code_in_notification_hero_image.jpg\"/\u003e\u003c/picture\u003e\u003cdiv\u003e\u003cp\u003eMishaal Rahman / Android Authority\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv data-container-type=\"content\"\u003e\u003cp\u003eTL;DR\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAndroid 15 blocks untrusted apps from reading sensitive notifications, even if they have permission to read all notifications.\u003c/li\u003e\n\u003cli\u003eBefore Android 15, apps with notification access were able to read all incoming notifications, even ones with OTP codes.\u003c/li\u003e\n\u003cli\u003eNow, though, only certain trusted apps can read OTP codes from notifications.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e\u003cp\u003eYour phone’s notifications panel is a treasure trove of sensitive data, as it includes not just personal messages but also security codes sent from online services you’ve enabled \u003ca href=\"https://www.androidauthority.com/what-is-two-factor-authentication-3092042/\"\u003etwo-factor authentication\u003c/a\u003e for. That’s why many malicious apps try to trick you into granting them notification access so they can steal those two-factor authentication codes. Thankfully, the \u003ca href=\"https://www.androidauthority.com/android-15-features-3401939/\"\u003eAndroid 15\u003c/a\u003e update makes it harder for malicious apps to extract two-factor authentication codes from notifications.\u003c/p\u003e\u003cp\u003eAndroid has long offered an API called Notification Listener that lets third-party apps access your notifications. Since notifications can contain sensitive data, apps can’t use the Notification Listener API unless they get your permission. You have to manually grant the app access to your notifications through the Settings app, and the only thing apps can do to assist with that process is to open the Settings page where you can grant access.\u003c/p\u003e\u003cdiv\u003e\u003cpicture\u003e\u003csource sizes=\"(min-width: 64rem) 51.25rem, 80vw\" srcset=\"https://www.androidauthority.com/wp-content/uploads/2024/10/Notification_read_reply_control_permission.png.webp 1440w, https://www.androidauthority.com/wp-content/uploads/2024/10/Notification_read_reply_control_permission-665w-1440h.png.webp 665w, https://www.androidauthority.com/wp-content/uploads/2024/10/Notification_read_reply_control_permission-498w-1080h.png.webp 498w, https://www.androidauthority.com/wp-content/uploads/2024/10/Notification_read_reply_control_permission-399w-864h.png.webp 399w, https://www.androidauthority.com/wp-content/uploads/2024/10/Notification_read_reply_control_permission-175w-380h.png.webp 175w, https://www.androidauthority.com/wp-content/uploads/2024/10/Notification_read_reply_control_permission-30w-64h.png.webp 30w, https://www.androidauthority.com/wp-content/uploads/2024/10/Notification_read_reply_control_permission-1000w-2167h.png.webp 1000w, https://www.androidauthority.com/wp-content/uploads/2024/10/Notification_read_reply_control_permission-554w-1200h.png.webp 554w\" type=\"image/webp\"/\u003e\u003cimg decoding=\"async\" loading=\"lazy\" sizes=\"(min-width: 64rem) 51.25rem, 80vw\" title=\"Notification read reply control permission\" srcset=\"https://www.androidauthority.com/wp-content/uploads/2024/10/Notification_read_reply_control_permission.png 1440w, https://www.androidauthority.com/wp-content/uploads/2024/10/Notification_read_reply_control_permission-665w-1440h.png 665w, https://www.androidauthority.com/wp-content/uploads/2024/10/Notification_read_reply_control_permission-498w-1080h.png 498w, https://www.androidauthority.com/wp-content/uploads/2024/10/Notification_read_reply_control_permission-399w-864h.png 399w, https://www.androidauthority.com/wp-content/uploads/2024/10/Notification_read_reply_control_permission-175w-380h.png 175w, https://www.androidauthority.com/wp-content/uploads/2024/10/Notification_read_reply_control_permission-30w-64h.png 30w, https://www.androidauthority.com/wp-content/uploads/2024/10/Notification_read_reply_control_permission-1000w-2167h.png 1000w, https://www.androidauthority.com/wp-content/uploads/2024/10/Notification_read_reply_control_permission-554w-1200h.png 554w\" alt=\"Notification read reply control permission\" src=\"https://www.androidauthority.com/wp-content/uploads/2024/10/Notification_read_reply_control_permission.png\"/\u003e\u003c/picture\u003e\u003cdiv\u003e\u003cp\u003eMishaal Rahman / Android Authority\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003eOnce an app has been granted notification access, it can read, reply to, dismiss, or control either all of your phone’s notifications or the subset of notifications that you gave it access to. It doesn’t matter if that notification includes something really sensitive like a two-factor authentication code — with the Notification Listener API, apps can read them and thus extract them.\u003c/p\u003e\u003cp\u003eAndroid 15 changes things by designating notifications with two-factor authentication codes as “sensitive” and only allowing “trusted” Notification Listener services to read them. Any “untrusted” Notification Listener service that tries to read notifications with two-factor authentication codes will simply be given a message stating, “sensitive notification content hidden.”\u003c/p\u003e\u003cp\u003eHere’s a short video demonstrating how this change affects Notification Listeners on Android 14 versus Android 15. In this video, you can see that an app that I’ve granted notification access to on a device running Android 14 can read notifications with two-factor authentication codes in them. In contrast, the same app with the same permission on a device running Android 15 cannot read notifications with two-factor authentication codes in them.\u003c/p\u003e\u003cp\u003eUnder the hood, the \u003ca href=\"https://www.androidauthority.com/android-system-intelligence-3325187/\"\u003eAndroid System Intelligence\u003c/a\u003e (ASI) app processes all notifications before they’re sent to Notification Listener services. If ASI detects that a notification has a two-factor authentication code in it, it’ll tell the system to mark it “sensitive” and block it from being sent to “untrusted” Notification Listener services. “Untrusted” Notification Listener services belong to apps that don’t hold the new \u003ccode\u003eRECEIVE_SENSITIVE_NOTIFICATIONS\u003c/code\u003e permission that Google has added in Android 15.\u003c/p\u003e\u003cp\u003eThis permission can only be granted to apps signed with the system certificate or to apps that hold certain roles. Most of the roles that are granted the \u003ccode\u003eRECEIVE_SENSITIVE_NOTIFICATIONS\u003c/code\u003e permission can only be held by system apps, but there are some that can be held by third-party apps, too, like \u003ccode\u003eCOMPANION_DEVICE_WATCH\u003c/code\u003e, \u003ccode\u003eCOMPANION_DEVICE_GLASSES\u003c/code\u003e, and \u003ccode\u003eHOME\u003c/code\u003e. Respectively, these roles are given to watch companion apps, smart glasses companion apps, and the default launcher. In other words, the only third-party apps that can read notifications with two-factor authentication codes in them on Android 15 are apps that connect to your smartwatch, apps that connect to your smart glasses, or your default home screen launcher app.\u003c/p\u003e\u003cdiv\u003e\u003cpicture\u003e\u003csource sizes=\"(min-width: 64rem) 51.25rem, 80vw\" srcset=\"https://www.androidauthority.com/wp-content/uploads/2024/10/companion-device-profile.jpg.webp 1050w, https://www.androidauthority.com/wp-content/uploads/2024/10/companion-device-profile-866w-1440h.jpg.webp 866w, https://www.androidauthority.com/wp-content/uploads/2024/10/companion-device-profile-649w-1080h.jpg.webp 649w, https://www.androidauthority.com/wp-content/uploads/2024/10/companion-device-profile-520w-864h.jpg.webp 520w, https://www.androidauthority.com/wp-content/uploads/2024/10/companion-device-profile-229w-380h.jpg.webp 229w, https://www.androidauthority.com/wp-content/uploads/2024/10/companion-device-profile-38w-64h.jpg.webp 38w, https://www.androidauthority.com/wp-content/uploads/2024/10/companion-device-profile-1000w-1663h.jpg.webp 1000w, https://www.androidauthority.com/wp-content/uploads/2024/10/companion-device-profile-675w-1122h.jpg.webp 675w\" type=\"image/webp\"/\u003e\u003cimg decoding=\"async\" loading=\"lazy\" sizes=\"(min-width: 64rem) 51.25rem, 80vw\" title=\"companion device profile\" srcset=\"https://www.androidauthority.com/wp-content/uploads/2024/10/companion-device-profile.jpg 1050w, https://www.androidauthority.com/wp-content/uploads/2024/10/companion-device-profile-866w-1440h.jpg 866w, https://www.androidauthority.com/wp-content/uploads/2024/10/companion-device-profile-649w-1080h.jpg 649w, https://www.androidauthority.com/wp-content/uploads/2024/10/companion-device-profile-520w-864h.jpg 520w, https://www.androidauthority.com/wp-content/uploads/2024/10/companion-device-profile-229w-380h.jpg 229w, https://www.androidauthority.com/wp-content/uploads/2024/10/companion-device-profile-38w-64h.jpg 38w, https://www.androidauthority.com/wp-content/uploads/2024/10/companion-device-profile-1000w-1663h.jpg 1000w, https://www.androidauthority.com/wp-content/uploads/2024/10/companion-device-profile-675w-1122h.jpg 675w\" alt=\"companion device profile\" src=\"https://www.androidauthority.com/wp-content/uploads/2024/10/companion-device-profile.jpg\"/\u003e\u003c/picture\u003e\u003cp\u003eSample dialog for an app requesting to hold the COMPANION_DEVICE_WATCH role.\u003c/p\u003e\u003c/div\u003e\u003cp\u003eBlocking third-party apps from reading notifications with two-factor authentication codes in them will hopefully stop some hacking attempts, but it’ll also break some automation and convenience tools such as “Copy SMS Code,” the free and open source app I used to demonstrate these changes. There is an easy workaround to restore the old behavior, but it’s not something I recommend. It involves turning off “\u003cstrong\u003eEnhanced notifications\u003c/strong\u003e” under \u003cstrong\u003eSettings \u0026gt; Notifications\u003c/strong\u003e. This stops ASI from parsing notifications and marking ones with two-factor authentication codes as “sensitive,” but it also stops it from generating suggested actions or replies. Another workaround requires setting up and using ADB to manually grant the \u003ccode\u003eRECEIVE_SENSITIVE_NOTIFICATIONS\u003c/code\u003e permission using the following command:\u003c/p\u003e\u003cdiv\u003e\u003cp\u003eCode\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003ccode\u003eadb shell cmd appops set --user 0 \u0026lt;PACKAGE\u0026gt; RECEIVE_SENSITIVE_NOTIFICATIONS allow\u003c/code\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHere, \u003ccode\u003e\u0026lt;PACKAGE\u0026gt;\u003c/code\u003e is the package name for the application you want to grant the permission to. You should only do this if you’re a power user and there’s some tool this change otherwise breaks, though.\u003c/p\u003e\u003cp\u003eIt’s great to see Android make tiny tweaks like this that improve security, but it would be nice if Google documented this change somewhere, especially because it impacts app behavior. It would also be nice if Android selectively blocked sensitive notifications from appearing on the lock screen, which is something Google was testing when I first reported on this change back in February — maybe that one will arrive in a future Android update.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eGot a tip? Talk to us!\u003c/strong\u003e Email our staff at \u003ca href=\"mailto:news@androidauthority.com\" rel=\"noopener noreferrer\" data-stringify-link=\"mailto:tips@androidauthority.com\" data-sk=\"tooltip_parent\" aria-haspopup=\"menu\"\u003enews@androidauthority.com\u003c/a\u003e. You can stay anonymous or get credit for the info, it\u0026#39;s your choice.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": "2024-10-21T22:03:54Z",
  "modifiedTime": null
}
