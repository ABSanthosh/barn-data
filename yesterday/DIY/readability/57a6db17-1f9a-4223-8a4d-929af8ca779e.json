{
  "id": "57a6db17-1f9a-4223-8a4d-929af8ca779e",
  "title": "Designing a CPU with only Memory Chips",
  "link": "https://hackaday.com/2025/07/11/designing-a-cpu-with-only-memory-chips/",
  "description": "Building a simple 8-bit computer is a great way to understand computing fundamentals, but there’s only so much you can learn by building a system around an existing processor. If …read more",
  "author": "Aaron Beckendorf",
  "published": "Fri, 11 Jul 2025 20:00:27 +0000",
  "source": "https://hackaday.com/blog/feed/",
  "categories": [
    "Retrocomputing",
    "8-bit computers",
    "8-bit CPU",
    "cpu",
    "cpu design",
    "eeprom",
    "eprom"
  ],
  "byline": "",
  "length": 2091,
  "excerpt": "Building a simple 8-bit computer is a great way to understand computing fundamentals, but there’s only so much you can learn by building a system around an existing processor. If you want to learn …",
  "siteName": "Hackaday",
  "favicon": "https://hackaday.com/wp-content/themes/hackaday-2/img/hackaday-logo_1024x1024.png?v=3",
  "text": "Skip to content Building a simple 8-bit computer is a great way to understand computing fundamentals, but there’s only so much you can learn by building a system around an existing processor. If you want to learn more, you’ll have to go further and build the CPU yourself, as [MINT] demonstrated with his EPROMINT project (video in Polish, but with English subtitles). The CPU began when [MINT] began experimenting with uses for his collection of old memory chips, and quickly realized that they could do quite a bit more than store data. After building a development board for single-chip based programmable logic, he decided to build a full CPU out of (E)EPROMs. The resulting circuit spans four large pieces of perfboard, weighs in at over half a kilogram, and took several weeks of soldering to create. The star of the system is the ALU, which runs an instruction set inspired by the Z80, but with some optimizations and added features. In particular, it has new operations for multiplication, division, bitstream operations, more advanced bit shifting, and a wide range of mathematical functions, including exponents, roots, and trigonometric functions. [MINT] documented all of this in a nicely-formatted offline booklet, available under the project’s GitHub repository. It’s currently only possible to program for the CPU using opcodes or a custom flavor of assembly, but there are plans to write a C compiler for it. Even without being able to write in a higher-level language than assembly, [MINT] was able to drive a VFD screen with the EPROMINT, which he used to display some clips from The Matrix. This provided an opportunity to demonstrate basic debugging methods, which involved dumping and analyzing the memory contents after a failed program execution. Using memory chips as programmable logic gates is an interesting hack, and we’ve seen Lisp programs written to make this easier. Of course, this isn’t the first CPU we’ve seen built without any chips intended for logic operations. Thanks to [Piotr] for the tip!",
  "image": "https://hackaday.com/wp-content/uploads/2025/07/epromint_cpu.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"page\"\u003e\n    \n\n    \u003cp\u003e\u003ca href=\"#content\"\u003eSkip to content\u003c/a\u003e\u003c/p\u003e\n\n    \u003cdiv id=\"content\"\u003e\n        \u003cmain id=\"main\" role=\"main\"\u003e\n\n        \n            \n\u003carticle itemscope=\"\" itemtype=\"http://schema.org/Article\" id=\"post-790776\"\u003e\n    \n\n    \u003cdiv itemprop=\"articleBody\"\u003e\n        \n\u003cp\u003eBuilding a simple 8-bit computer is a great way to understand computing fundamentals, but there’s only so much you can learn by building a system around an existing processor. If you want to learn more, you’ll have to go further and build the CPU yourself, as [MINT] demonstrated with his \u003ca href=\"https://www.youtube.com/watch?v=xBB1nAUvuqU\" target=\"_blank\"\u003eEPROMINT project\u003c/a\u003e (video in Polish, but with English subtitles).\u003c/p\u003e\n\u003cp\u003eThe CPU began when [MINT] began experimenting with uses for his collection of old memory chips, and quickly realized that they could do quite a bit more than store data. After building a development board for single-chip based programmable logic, he decided to build a full CPU out of (E)EPROMs. The resulting circuit spans four large pieces of perfboard, weighs in at over half a kilogram, and took several weeks of soldering to create.\u003cspan id=\"more-790776\"\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003eThe star of the system is the ALU, which runs an instruction set inspired by the Z80, but with some optimizations and added features. In particular, it has new operations for multiplication, division, bitstream operations, more advanced bit shifting, and a wide range of mathematical functions, including exponents, roots, and trigonometric functions. [MINT] documented all of this in a nicely-formatted \u003ca href=\"https://github.com/majsterkowanieinietylko/EPROMINT/blob/main/Documentation/EPROMINT%20User%20Manual.pdf\" target=\"_blank\"\u003eoffline booklet\u003c/a\u003e, available under the project’s \u003ca href=\"https://github.com/majsterkowanieinietylko/EPROMINT/tree/main\" target=\"_blank\"\u003eGitHub repository\u003c/a\u003e. It’s currently only possible to program for the CPU using opcodes or a custom flavor of assembly, but there are plans to write a C compiler for it.\u003c/p\u003e\n\u003cp\u003eEven without being able to write in a higher-level language than assembly, [MINT] was able to drive a VFD screen with the EPROMINT, which he used to display some clips from \u003ci\u003eThe Matrix\u003c/i\u003e. This provided an opportunity to demonstrate basic debugging methods, which involved dumping and analyzing the memory contents after a failed program execution.\u003c/p\u003e\n\u003cp\u003eUsing memory chips as programmable logic gates is an interesting hack, and we’ve seen Lisp programs written \u003ca href=\"https://hackaday.com/2023/10/28/using-eproms-and-eeproms-as-programmable-logic-with-lisp/\"\u003eto make this easier\u003c/a\u003e. Of course, this isn’t the first CPU we’ve seen built \u003ca href=\"https://hackaday.com/2021/12/17/implementing-a-cpu-using-555-timers-and-logic-synthesis/\"\u003ewithout any chips\u003c/a\u003e intended for logic operations.\u003c/p\u003e\n\u003cp\u003e\u003ciframe title=\"Jak działają procesory? Zbudowałem własny procesor od podstaw!\" width=\"800\" height=\"450\" src=\"https://www.youtube.com/embed/xBB1nAUvuqU?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\u003cp\u003eThanks to [Piotr] for the tip!\u003c/p\u003e\n\t            \u003c/div\u003e\n    \u003cul\u003e\n    \t\t\t\t\t\u003cli\u003e\n    \t\t\t\t\u003ca href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fhackaday.com%2F2025%2F07%2F11%2Fdesigning-a-cpu-with-only-memory-chips%2F\" target=\"_blank\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_face.png\"/\u003e \u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\t\t\u003cli\u003e\n                        \u003ca href=\"https://twitter.com/intent/tweet?text=Designing%20A%20CPU%20With%20Only%20Memory%20Chips%20via%20@hackaday\u0026amp;url=https://hackaday.com/2025/07/11/designing-a-cpu-with-only-memory-chips/\" target=\"_blank\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_twitter.png\"/\u003e\u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\t\t\u003cli\u003e\n    \t\t\t\t\u003ca href=\"https://www.linkedin.com/shareArticle?url=https%3A%2F%2Fhackaday.com%2F2025%2F07%2F11%2Fdesigning-a-cpu-with-only-memory-chips%2F\" target=\"_blank\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_in.png\"/\u003e\u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\t\t\u003cli\u003e\n                \u003ca href=\"mailto:?subject=Designing+A+CPU+With+Only+Memory+Chips | Hackaday\u0026amp;body=https%3A%2F%2Fhackaday.com%2F2025%2F07%2F11%2Fdesigning-a-cpu-with-only-memory-chips%2F\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_mail1.png\"/\u003e\u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\u003c/ul\u003e\n    \n\u003c/article\u003e\n\n            \t\n\t\n            \n\n            \n\n\n        \n        \n\n        \n        \n\n        \n        \u003c/main\u003e\n    \u003c/div\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": "2025-07-11T20:00:27Z",
  "modifiedTime": "2025-07-11T16:57:13Z"
}
