{
  "id": "66fafe8b-fb29-4781-baa4-5bebbb920259",
  "title": "C+P: Combining the Usefulness of C with the Excellence of Prolog",
  "link": "https://hackaday.com/2025/03/14/cp-combining-the-usefulness-of-c-with-the-excellence-of-prolog/",
  "description": "In a move that will absolutely not over-excite anyone, nor lead to any heated arguments, [needleful] posits that their C Plus Prolog (C+P for short) programming language is the best …read more",
  "author": "Maya Posch",
  "published": "Fri, 14 Mar 2025 23:00:12 +0000",
  "source": "https://hackaday.com/blog/feed/",
  "categories": [
    "Software Development",
    "c++",
    "prolog"
  ],
  "byline": "",
  "length": 1340,
  "excerpt": "In a move that will absolutely not over-excite anyone, nor lead to any heated arguments, [needleful] posits that their C Plus Prolog (C+P for short) programming language is the best possible langua…",
  "siteName": "Hackaday",
  "favicon": "https://hackaday.com/wp-content/themes/hackaday-2/img/hackaday-logo_1024x1024.png?v=3",
  "text": "Skip to content In a move that will absolutely not over-excite anyone, nor lead to any heated arguments, [needleful] posits that their C Plus Prolog (C+P for short) programming language is the best possible language ever. This is due to it combining the best of the only good programming language (Prolog) with the best of the only useful programming language (C). Although the resulting mash-up syntax that results may trigger Objective-C flashbacks, it’s actually valid SWI-Prolog, that is subsequently converted to C for compilation. Language flamewars aside, the motivation for C+P as explained in the project’s README was mostly the exploring of macros in a system programming language. More specifically, by implementing a language-within-a-language you can add just about any compile-time feature you want including – as demonstrated in C+P – a form of generics. Even as a way to have a bit of fun, C+P comes dangerously close to being a functional prototype. Its main flaw is probably the lack of validation and error messages, which likely leads to broken C being generated. Also mentioned are the Nim and Haxe languages which can be compiled (transpiled) to C or C++, which is somewhat of a similar idea as C+P, as well as cmacro (based on Common Lisp) and the D language.",
  "image": "https://hackaday.com/wp-content/uploads/2025/03/c_plus_prolog_hello_world.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"page\"\u003e\n    \n\n    \u003cp\u003e\u003ca href=\"#content\"\u003eSkip to content\u003c/a\u003e\u003c/p\u003e\n\n    \u003cdiv id=\"content\"\u003e\n        \u003cmain id=\"main\" role=\"main\"\u003e\n\n        \n            \n\u003carticle itemscope=\"\" itemtype=\"http://schema.org/Article\" id=\"post-767580\"\u003e\n    \n\n    \u003cdiv itemprop=\"articleBody\"\u003e\n        \u003cp\u003eIn a move that will absolutely not over-excite anyone, nor lead to any heated arguments, [needleful] posits that their \u003ca href=\"https://github.com/needleful/c_plus_prolog\" target=\"_blank\"\u003eC Plus Prolog (C+P for short) programming language\u003c/a\u003e is the best possible language ever. This is due to it combining the best of the only good programming language (Prolog) with the best of the only useful programming language (C). Although the resulting mash-up syntax that results may trigger Objective-C flashbacks, it’s actually valid \u003ca href=\"http://www.swi-prolog.org/\" target=\"_blank\"\u003eSWI-Prolog\u003c/a\u003e, that is subsequently converted to C for compilation.\u003c/p\u003e\n\u003cp\u003eLanguage flamewars aside, the motivation for C+P as explained in the project’s README was mostly the exploring of macros in a system programming language. More specifically, by implementing a language-within-a-language you can add just about any compile-time feature you want including – as demonstrated in C+P – a form of generics. Even as a way to have a bit of fun, C+P comes dangerously close to being a functional prototype. Its main flaw is probably the lack of validation and error messages, which likely leads to broken C being generated.\u003c/p\u003e\n\u003cp\u003eAlso mentioned are the \u003ca href=\"https://nim-lang.org/\" target=\"_blank\"\u003eNim\u003c/a\u003e and \u003ca href=\"https://haxe.org/\" target=\"_blank\"\u003eHaxe\u003c/a\u003e languages which can be compiled (transpiled) to C or C++, which is somewhat of a similar idea as C+P, as well as \u003ca href=\"https://github.com/eudoxia0/cmacro\" target=\"_blank\"\u003ecmacro\u003c/a\u003e (based on Common Lisp) and the D language.\u003c/p\u003e\n\t            \u003c/div\u003e\n    \u003cul\u003e\n    \t\t\t\t\t\u003cli\u003e\n    \t\t\t\t\u003ca href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fhackaday.com%2F2025%2F03%2F14%2Fcp-combining-the-usefulness-of-c-with-the-excellence-of-prolog%2F\" target=\"_blank\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_face.png\"/\u003e \u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\t\t\u003cli\u003e\n                        \u003ca href=\"https://twitter.com/intent/tweet?text=C+P:%20Combining%20The%20Usefulness%20Of%20C%20With%20The%20Excellence%20Of%20Prolog%20via%20@hackaday\u0026amp;url=https://hackaday.com/2025/03/14/cp-combining-the-usefulness-of-c-with-the-excellence-of-prolog/\" target=\"_blank\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_twitter.png\"/\u003e\u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\t\t\u003cli\u003e\n    \t\t\t\t\u003ca href=\"https://www.linkedin.com/shareArticle?url=https%3A%2F%2Fhackaday.com%2F2025%2F03%2F14%2Fcp-combining-the-usefulness-of-c-with-the-excellence-of-prolog%2F\" target=\"_blank\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_in.png\"/\u003e\u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\t\t\u003cli\u003e\n                \u003ca href=\"mailto:?subject=C%2BP%3A+Combining+The+Usefulness+Of+C+With+The+Excellence+Of+Prolog | Hackaday\u0026amp;body=https%3A%2F%2Fhackaday.com%2F2025%2F03%2F14%2Fcp-combining-the-usefulness-of-c-with-the-excellence-of-prolog%2F\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_mail1.png\"/\u003e\u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\u003c/ul\u003e\n    \n\u003c/article\u003e\n\n            \t\n\t\n            \n\n            \n\n\n        \n        \n\n        \n        \n\n        \n        \u003c/main\u003e\n    \u003c/div\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": "2025-03-14T23:00:12Z",
  "modifiedTime": "2025-03-14T19:19:25Z"
}
