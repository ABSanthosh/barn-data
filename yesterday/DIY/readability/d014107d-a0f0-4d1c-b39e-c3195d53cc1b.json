{
  "id": "d014107d-a0f0-4d1c-b39e-c3195d53cc1b",
  "title": "6 Ways to Find and Replace Text in the Linux Terminal",
  "link": "https://www.howtogeek.com/ways-to-find-and-replace-text-in-the-linux-terminal/",
  "description": "Find and replace text without leaving the Linux terminal.",
  "author": "Haroon Javed",
  "published": "Sun, 03 Nov 2024 21:30:13 GMT",
  "source": "https://www.howtogeek.com/feed/",
  "categories": [
    "Linux",
    "Linux \u0026 macOS Terminal",
    "Ubuntu"
  ],
  "byline": "Haroon Javed",
  "length": 8424,
  "excerpt": "Find and replace text without leaving the Linux terminal.",
  "siteName": "How-To Geek",
  "favicon": "https://www.howtogeek.com/public/build/images/favicon-240x240.f06f736a.png",
  "text": "Quick Links Replace Text Using awk Command Substitute Text With Vim Ex Mode Replace Set of Characters With tr Command Editing a configuration file or updating a large document by going through each line manually can take a lot of time. However, with command-line tools like sed, awk, Vim, and others, you can make the search and replace process fast and efficient. Use sed Command Want quick text replacements? Use the sed command. With sed, you can look for and modify text within files, handling everything from simple substitutions to complex text manipulations. Let's say you have a file named example.txt that contains the word \"Linux,\" and you decide to replace it with \"Windows.\" To do this, run: sed 's/Linux/Windows/g' example.txt Here, the s flag stands for substitute, and the g flag allows sed to substitute all pattern occurrences on each line. The previous command doesn't directly modify the original file; it only shows the modified output in the terminal. However, if you want to manipulate the original file directly, use the -i flag: sed -i 's/Linux/Windows/g' example.txt The -i flag makes the changes directly in the file instead of only displaying the output. Want to back up your file before making changes? Add an extension to the -i flag: sed -i.bak 's/Linux/Windows/g' example.txt This creates a backup file called example.txt.bak before making any changes. But what if you want your original file to remain unchanged? You can create a new file and save the modified output there using the redirection operator. For instance, to send the output to a separate file, use: sed 's/Linux/Windows/g' example.txt \u003e file.txt Using complex regex patterns with sed gives you control over what to replace in larger files with repetitive content. To replace multiple instances with a single command, run: sed -i 's/Linux\\|Ubuntu/Windows/g' example.txt A trick I often use with sed is switching to a different delimiter if my search or replacement strings contain forward slashes. For example, when I'm working with file paths, I like to use the @ symbol as the delimiter: sed 's@old/path@new/path@g' file.txt This makes the command easier to read and avoids the need for many escape characters. Replace Text Using awk Command Like sed, awk also performs simple to advanced text manipulation. I often use awk to handle structured data, especially with CSV files, where calculations on selected fields might be needed. Although awk is well-known for managing structured data, it's also effective for quick find-and-replace tasks. For example, to replace specific text in a file, you could use: awk '{gsub(/Windows/, \"Linux\"); print}' file.txt \u003e new_file.txt Here, the gsub function performs a global substitution, replacing every occurrence of \"Windows\" with \"Linux\" across each line in the file. Since awk doesn't modify files directly, we redirect the output to new_file.txt to capture the changes. I also use awk to clean up data exports, especially from spreadsheets, where extra formatting can complicate data processing. Many spreadsheet exports include quotes around values, which can disrupt data processing in other applications. You can remove all double quotes from the first column of a CSV file using this command: awk -F, '{gsub(/\"/, \"\", $1); print}' data.csv \u003e cleaned_data.csv Here, gsub removes every double quote from only the first column, and the output is redirected to cleaned_data.csv for further use. Substitute Text With Vim Ex Mode Want quick text transformations without opening the full editor? Try Vim (Vi Improved), a text editor with an Ex mode that allows you to perform find-and-replace operations directly from the command line. To begin, open your file with Vim: vim filename.txt Then, enter into Ex mode by pressing Esc, and then use the (:) key. This will prompt you with a colon (:) at the bottom of the terminal, indicating that you're in Ex mode. To find and replace text, use this command: :%s/macOS/Linux/g This command replaces all occurrences of \"macOS\" with \"Linux\" throughout the entire file. The % symbol specifies that the command should apply to the whole file, and the g flag at the end ensures all occurrences on each line are replaced, not just the first one. To replace only the first occurrence on each line, simply omit the g flag: :%s/macOS/Linux/ Need to replace text within a specific range of lines? Specify the line range. For instance, to replace text from line 3 to line 10: :3,10s/macOS/Linux/g One habit I follow when making file changes is to confirm each replacement. This approach allows careful, line-by-line edits. To get a prompt for each replacement, add c at the end of the command: :%s/macOS/Linux/gc Using Bash Script Sometimes, you might need to perform a series of find-and-replace operations across multiple files or directories. For these cases, using Bash scripts can automate your tasks that would take a long time to do manually. Let's consider a simple script that replaces an old string with a new string in multiple text files within the current directory: #!/bin/bashfor file in *.txt; do    sed -i 's/Windows/Linux/g' \"$file\"done To use this script, first save it to a file (e.g., bashexample.sh), then make the file executable by running: chmod +x bashexample.sh Then, execute the script with: ./bashexample.sh The for loop iterates over all text files in the current directory and uses sed to replace text within each file. You can also modify this script to handle different patterns or file types as needed. Replace Text With Python Script With Python’s advanced text-processing capabilities, you can perform find-and-replace tasks on files directly from the terminal. Python scripts are helpful when you want more complex operations, such as handling multiple files with conditional logic. First, create a new Python file. You can use any text editor, such as nano or Vim: vim textfile.py Next, add the following Python script to the file: #!/usr/bin/env pythonimport syswith open(sys.argv[1], 'r+') as f:    content = f.read().replace('Windows', 'Linux')    f.seek(0)    f.write(content)    f.truncate() After saving the file, make it executable by running: chmod +x ./testfile.py Then, run the script by passing the target file as a command-line argument: python3 ./testfile.py input.txt This script reads the content of input.txt, replaces occurrences of the old text with the new text, and saves the changes directly to the file. Replace Set of Characters With tr Command Have you ever needed to replace just a single character with another character in the entire file? If yes, then you need to try the tr command. This command is perfect for simple character replacements or deletions. For instance, I often use it to convert specific characters in a text file to uppercase or lowercase. To replace all lowercase a's and d's with uppercase A's and D's in a text file, run: tr 'a,d' 'A,D' \u003c example.txt Remember that tr works on characters rather than strings or words, so it's best suited for simple character replacements rather than more complex patterns. You can also clean up whitespace or standardize line endings by running this: cat messy_file.txt | tr '\\r' '\\n' \u003e clean_file.txt This converts Windows-style line endings (\\r\\n) to Unix-style line endings (\\n), which is helpful when working with files across different operating systems. Using perl Perl, a high-level programming language, can also be used directly in the terminal to find and replace text, making it a great alternative to sed. Its syntax is similar to sed's, but it offers more advanced features. Personally, I really liked Perl because of its particularly strong regular expression capabilities, which make it a great choice for complex find-and-replace operations. You can replace any word in a file using this command: perl -pi -e 's/Linux/Windows/g' file.txt Here, the -pi flags tell perl to edit the file in place, and the -e flag allows you to pass an expression directly. This command modifies file.txt by replacing \"Linux\" with \"Windows\" throughout the file. For simple substitutions, command-line tools like sed, awk, or perl work well. Choose a Bash or Python script if you need to perform a more complex substitution across multiple files or with additional logic.",
  "image": "https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/05/laptop-with-linux-terminal-open.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"article-body\" itemprop=\"articleBody\"\u003e\n\u003cdiv\u003e\u003ch3\u003eQuick Links\u003c/h3\u003e\u003cdiv\u003e\u003cul\u003e\u003cli\u003e \u003c/li\u003e \u003c/ul\u003e\u003cul\u003e\u003cli\u003e\u003cdiv\u003e\u003cp\u003e\u003ca href=\"#replace-text-using-awk-command\"\u003eReplace Text Using awk Command\u003c/a\u003e \u003c/p\u003e\u003c/div\u003e \u003c/li\u003e \u003c/ul\u003e\u003cul\u003e\u003cli\u003e\u003cdiv\u003e\u003cp\u003e\u003ca href=\"#substitute-text-with-vim-ex-mode\"\u003eSubstitute Text With Vim Ex Mode\u003c/a\u003e \u003c/p\u003e\u003c/div\u003e \u003c/li\u003e \u003c/ul\u003e\u003cul\u003e\u003cli\u003e \u003c/li\u003e \u003c/ul\u003e\u003cul\u003e\u003cli\u003e\u003cdiv\u003e\u003cp\u003e\u003ca href=\"#replace-set-of-characters-with-tr-command\"\u003eReplace Set of Characters With tr Command\u003c/a\u003e \u003c/p\u003e\u003c/div\u003e \u003c/li\u003e \u003c/ul\u003e\u003cul\u003e\u003cli\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/div\u003e \u003c/div\u003e\n\u003cp\u003eEditing a configuration file or updating a large document by going through each line manually can take a lot of time. However, with command-line tools like sed, awk, Vim, and others, you can make the search and replace process fast and efficient.\u003c/p\u003e\n\n\n\n\n\u003ch2 id=\"use-sed-command\"\u003e Use sed Command \u003c/h2\u003e\n\u003cp\u003eWant quick text replacements? Use the \u003ca href=\"https://www.howtogeek.com/666395/how-to-use-the-sed-command-on-linux/\" target=\"_blank\"\u003esed command\u003c/a\u003e. With sed, you can look for and modify text within files, handling everything from simple substitutions to complex \u003ca href=\"https://www.howtogeek.com/812494/bash-string-manipulation/\" target=\"_blank\"\u003etext manipulations\u003c/a\u003e.\u003c/p\u003e\n\n\n\u003cp\u003eLet\u0026#39;s say you have a file named example.txt that contains the word \u0026#34;Linux,\u0026#34; and you decide to replace it with \u0026#34;Windows.\u0026#34; To do this, run:\u003c/p\u003e\n\n\u003cpre\u003esed \u0026#39;s/Linux/Windows/g\u0026#39; example.txt\u003c/pre\u003e\n\n\u003cdiv data-img-url=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/finding-and-replacing-specific-word-from-text-file-using-sed-command.png\" data-modal-id=\"single-image-modal\" data-modal-container-id=\"single-image-modal-container\" data-img-caption=\"\u0026#34;\u0026#34;\"\u003e\u003cfigure\u003e\u003cpicture\u003e\u003csource media=\"(min-width: 1024px)\" data-srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/finding-and-replacing-specific-word-from-text-file-using-sed-command.png?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\" srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/finding-and-replacing-specific-word-from-text-file-using-sed-command.png?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 768px)\" data-srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/finding-and-replacing-specific-word-from-text-file-using-sed-command.png?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\" srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/finding-and-replacing-specific-word-from-text-file-using-sed-command.png?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 481px)\" data-srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/finding-and-replacing-specific-word-from-text-file-using-sed-command.png?q=70\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=1\" srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/finding-and-replacing-specific-word-from-text-file-using-sed-command.png?q=70\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 0px)\" data-srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/finding-and-replacing-specific-word-from-text-file-using-sed-command.png?q=70\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=1\" srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/finding-and-replacing-specific-word-from-text-file-using-sed-command.png?q=70\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=1\"/\u003e\u003cimg width=\"778\" height=\"104\" loading=\"lazy\" decoding=\"async\" alt=\"Finding and replacing specific word from text file using sed command.\" data-img-url=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/finding-and-replacing-specific-word-from-text-file-using-sed-command.png\" src=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/finding-and-replacing-specific-word-from-text-file-using-sed-command.png\"/\u003e \u003c/picture\u003e \u003c/figure\u003e \u003c/div\u003e\n\n\n\u003cp\u003eHere, the \u003cstrong\u003es\u003c/strong\u003e flag stands for substitute, and the \u003cstrong\u003eg\u003c/strong\u003e flag allows sed to substitute all pattern occurrences on each line.\u003c/p\u003e\n\n\u003cp\u003eThe previous command doesn\u0026#39;t directly modify the original file; it only shows the modified output in the terminal. However, if you want to manipulate the original file directly, use the \u003cstrong\u003e-i\u003c/strong\u003e flag:\u003c/p\u003e\n\n\u003cpre\u003esed -i \u0026#39;s/Linux/Windows/g\u0026#39; example.txt\u003c/pre\u003e\n\n\u003cp\u003eThe \u003cstrong\u003e-i\u003c/strong\u003e flag makes the changes directly in the file instead of only displaying the output.\u003c/p\u003e\n\n\u003cp\u003eWant to back up your file before making changes? Add an extension to the \u003cstrong\u003e-i\u003c/strong\u003e flag:\u003c/p\u003e\n\n\u003cpre\u003esed -i.bak \u0026#39;s/Linux/Windows/g\u0026#39; example.txt\u003c/pre\u003e\n\n\u003cp\u003eThis creates a backup file called example.txt.bak before making any changes.\u003c/p\u003e\n\n\u003cp\u003eBut what if you want your original file to remain unchanged? You can \u003ca href=\"https://www.howtogeek.com/199687/how-to-quickly-create-a-text-file-using-the-command-line-in-linux/\" target=\"_blank\"\u003ecreate a new file\u003c/a\u003e and save the modified output there using the redirection operator.\u003c/p\u003e\n\n\n\u003cp\u003eFor instance, to \u003ca href=\"https://www.howtogeek.com/299219/how-to-save-the-output-of-a-command-to-a-file-in-bash-aka-the-linux-and-macos-terminal/\" target=\"_blank\"\u003esend the output to a separate file\u003c/a\u003e, use:\u003c/p\u003e\n\n\u003cpre\u003esed \u0026#39;s/Linux/Windows/g\u0026#39; example.txt \u0026gt; file.txt\u003c/pre\u003e\n\n\u003cp\u003eUsing complex \u003ca href=\"https://www.howtogeek.com/661101/how-to-use-regular-expressions-regexes-on-linux/\" target=\"_blank\"\u003eregex patterns\u003c/a\u003e with sed gives you control over what to replace in larger files with repetitive content. To replace multiple instances with a single command, run:\u003c/p\u003e\n\n\u003cpre\u003esed -i \u0026#39;s/Linux\\|Ubuntu/Windows/g\u0026#39; example.txt\u003c/pre\u003e\n\n\u003cp\u003eA trick I often use with sed is switching to a different delimiter if my search or replacement strings contain forward slashes. For example, when I\u0026#39;m working with file paths, I like to use the @ symbol as the delimiter:\u003c/p\u003e\n\n\u003cpre\u003esed \u0026#39;s@old/path@new/path@g\u0026#39; file.txt\u003c/pre\u003e\n\n\u003cdiv data-img-url=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/changing-path-using-sed-command.png\" data-modal-id=\"single-image-modal\" data-modal-container-id=\"single-image-modal-container\" data-img-caption=\"\u0026#34;\u0026#34;\"\u003e\u003cfigure\u003e\u003cpicture\u003e\u003csource media=\"(min-width: 1024px)\" data-srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/changing-path-using-sed-command.png?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\" srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/changing-path-using-sed-command.png?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 768px)\" data-srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/changing-path-using-sed-command.png?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\" srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/changing-path-using-sed-command.png?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 481px)\" data-srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/changing-path-using-sed-command.png?q=70\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=1\" srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/changing-path-using-sed-command.png?q=70\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 0px)\" data-srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/changing-path-using-sed-command.png?q=70\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=1\" srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/changing-path-using-sed-command.png?q=70\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=1\"/\u003e\u003cimg width=\"994\" height=\"133\" loading=\"lazy\" decoding=\"async\" alt=\"Finding and replacing text that contains path using specified delimiter.\" data-img-url=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/changing-path-using-sed-command.png\" src=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/changing-path-using-sed-command.png\"/\u003e \u003c/picture\u003e \u003c/figure\u003e \u003c/div\u003e\n\n\n\u003cp\u003eThis makes the command easier to read and avoids the need for many \u003ca href=\"https://www.howtogeek.com/439199/15-special-characters-you-need-to-know-for-bash/\" target=\"_blank\"\u003eescape characters\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003ch2 id=\"replace-text-using-awk-command\"\u003e Replace Text Using awk Command \u003c/h2\u003e\n\u003cp\u003eLike sed, \u003ca href=\"https://www.howtogeek.com/562941/how-to-use-the-awk-command-on-linux/\" target=\"_blank\"\u003eawk\u003c/a\u003e also performs simple to advanced text manipulation. I often use awk to handle structured data, especially with CSV files, where calculations on selected fields might be needed.\u003c/p\u003e\n\n\u003cp\u003eAlthough awk is well-known for managing structured data, it\u0026#39;s also effective for quick find-and-replace tasks. For example, to replace specific text in a file, you could use:\u003c/p\u003e\n\n\u003cpre\u003eawk \u0026#39;{gsub(/Windows/, \u0026#34;Linux\u0026#34;); print}\u0026#39; file.txt \u0026gt; new_file.txt\u003c/pre\u003e\n\n\u003cdiv data-img-url=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-and-viewing-file-content-using-awk-command.png\" data-modal-id=\"single-image-modal\" data-modal-container-id=\"single-image-modal-container\" data-img-caption=\"\u0026#34;\u0026#34;\"\u003e\u003cfigure\u003e\u003cpicture\u003e\u003csource media=\"(min-width: 1024px)\" data-srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-and-viewing-file-content-using-awk-command.png?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\" srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-and-viewing-file-content-using-awk-command.png?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 768px)\" data-srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-and-viewing-file-content-using-awk-command.png?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\" srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-and-viewing-file-content-using-awk-command.png?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 481px)\" data-srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-and-viewing-file-content-using-awk-command.png?q=70\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=1\" srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-and-viewing-file-content-using-awk-command.png?q=70\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 0px)\" data-srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-and-viewing-file-content-using-awk-command.png?q=70\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=1\" srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-and-viewing-file-content-using-awk-command.png?q=70\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=1\"/\u003e\u003cimg width=\"952\" height=\"160\" loading=\"lazy\" decoding=\"async\" alt=\"Replacing and viewing file content using awk command.\" data-img-url=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-and-viewing-file-content-using-awk-command.png\" src=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-and-viewing-file-content-using-awk-command.png\"/\u003e \u003c/picture\u003e \u003c/figure\u003e \u003c/div\u003e\n\n\n\u003cp\u003eHere, the \u003cstrong\u003egsub\u003c/strong\u003e function performs a global substitution, replacing every occurrence of \u0026#34;Windows\u0026#34; with \u0026#34;Linux\u0026#34; across each line in the file. Since awk doesn\u0026#39;t modify files directly, we redirect the output to new_file.txt to capture the changes.\u003c/p\u003e\n\n\u003cp\u003eI also use awk to clean up data exports, especially from spreadsheets, where extra formatting can complicate data processing. Many spreadsheet exports include quotes around values, which can disrupt data processing in other applications.\u003c/p\u003e\n\n\u003cp\u003eYou can remove all double quotes from the first column of a CSV file using this command:\u003c/p\u003e\n\n\u003cpre\u003eawk -F, \u0026#39;{gsub(/\u0026#34;/, \u0026#34;\u0026#34;, $1); print}\u0026#39; data.csv \u0026gt; cleaned_data.csv\u003c/pre\u003e\n\n\u003cp\u003eHere, \u003cstrong\u003egsub\u003c/strong\u003e removes every double quote from only the first column, and the output is redirected to cleaned_data.csv for further use.\u003c/p\u003e\n\n\n\n\n\u003ch2 id=\"substitute-text-with-vim-ex-mode\"\u003e Substitute Text With Vim Ex Mode \u003c/h2\u003e\n\u003cp\u003eWant quick text transformations without opening the \u003ca href=\"https://www.howtogeek.com/trey-these-linux-text-editors/\" target=\"_blank\"\u003efull editor\u003c/a\u003e? Try \u003ca href=\"https://www.howtogeek.com/vim-tips-that-will-save-you-hours-of-editing-time/\" target=\"_blank\"\u003eVim\u003c/a\u003e (Vi Improved), a text editor with an Ex mode that allows you to perform find-and-replace operations directly from the command line.\u003c/p\u003e\n\n\u003cp\u003eTo begin, open your file with Vim:\u003c/p\u003e\n\n\u003cpre\u003evim filename.txt\u003c/pre\u003e\n\n\u003cp\u003eThen, enter into Ex mode by pressing Esc, and then use the (:) key. This will prompt you with a colon (:) at the bottom of the terminal, indicating that you\u0026#39;re in Ex mode. To find and replace text, use this command:\u003c/p\u003e\n\n\u003cpre\u003e:%s/macOS/Linux/g\u003c/pre\u003e\n\n\u003cdiv data-img-url=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-specfic-word-with-another-using-vim-ex-mode.png\" data-modal-id=\"single-image-modal\" data-modal-container-id=\"single-image-modal-container\" data-img-caption=\"\u0026#34;\u0026#34;\"\u003e\u003cfigure\u003e\u003cpicture\u003e\u003csource media=\"(min-width: 1024px)\" data-srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-specfic-word-with-another-using-vim-ex-mode.png?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\" srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-specfic-word-with-another-using-vim-ex-mode.png?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 768px)\" data-srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-specfic-word-with-another-using-vim-ex-mode.png?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\" srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-specfic-word-with-another-using-vim-ex-mode.png?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 481px)\" data-srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-specfic-word-with-another-using-vim-ex-mode.png?q=70\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=1\" srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-specfic-word-with-another-using-vim-ex-mode.png?q=70\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 0px)\" data-srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-specfic-word-with-another-using-vim-ex-mode.png?q=70\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=1\" srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-specfic-word-with-another-using-vim-ex-mode.png?q=70\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=1\"/\u003e\u003cimg width=\"755\" height=\"187\" loading=\"lazy\" decoding=\"async\" alt=\"Replacing specific string value with another using Vim Ex mode.\" data-img-url=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-specfic-word-with-another-using-vim-ex-mode.png\" src=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-specfic-word-with-another-using-vim-ex-mode.png\"/\u003e \u003c/picture\u003e \u003c/figure\u003e \u003c/div\u003e\n\n\n\n\n\u003cp\u003eThis command replaces all occurrences of \u0026#34;macOS\u0026#34; with \u0026#34;Linux\u0026#34; throughout the entire file. The % symbol specifies that the command should apply to the whole file, and the g flag at the end ensures all occurrences on each line are replaced, not just the first one.\u003c/p\u003e\n\n\u003cp\u003eTo replace only the first occurrence on each line, simply omit the \u003cstrong\u003eg\u003c/strong\u003e flag:\u003c/p\u003e\n\n\u003cpre\u003e:%s/macOS/Linux/\u003c/pre\u003e\n\n\u003cp\u003eNeed to replace text within a specific range of lines? Specify the line range. For instance, to replace text from line 3 to line 10:\u003c/p\u003e\n\n\u003cpre\u003e:3,10s/macOS/Linux/g\u003c/pre\u003e\n\n\u003cp\u003eOne habit I follow when making file changes is to confirm each replacement. This approach allows careful, line-by-line edits.\u003c/p\u003e\n\n\u003cp\u003eTo get a prompt for each replacement, add \u003cstrong\u003ec\u003c/strong\u003e at the end of the command:\u003c/p\u003e\n\n\u003cpre\u003e:%s/macOS/Linux/gc\u003c/pre\u003e\n\n\n\n\n\n\n\u003ch2 id=\"using-bash-script\"\u003e Using Bash Script \u003c/h2\u003e\n\u003cp\u003eSometimes, you might need to perform a series of find-and-replace operations across multiple files or directories. For these cases, using \u003ca href=\"https://www.howtogeek.com/808593/bash-script-examples/\" target=\"_blank\"\u003eBash scripts\u003c/a\u003e can automate your tasks that would take a long time to do manually.\u003c/p\u003e\n\n\u003cp\u003eLet\u0026#39;s consider a simple script that replaces an old string with a new string in multiple text files within the current directory:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e#!/bin/bash\u003c/span\u003e\u003cbr/\u003e\u003cspan\u003efor\u003c/span\u003e file \u003cspan\u003ein\u003c/span\u003e *.txt; \u003cspan\u003edo\u003c/span\u003e\u003cbr/\u003e    sed -i \u003cspan\u003e\u0026#39;s/Windows/Linux/g\u0026#39;\u003c/span\u003e \u003cspan\u003e\u0026#34;\u003cspan\u003e$file\u003c/span\u003e\u0026#34;\u003c/span\u003e\u003cbr/\u003e\u003cspan\u003edone\u003c/span\u003e\u003c/code\u003e \u003c/pre\u003e\n\u003cdiv data-img-url=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/creating-bash-script-file-for-iterating-over-multple-txt-files.png\" data-modal-id=\"single-image-modal\" data-modal-container-id=\"single-image-modal-container\" data-img-caption=\"\u0026#34;\u0026#34;\"\u003e\u003cfigure\u003e\u003cpicture\u003e\u003csource media=\"(min-width: 1024px)\" data-srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/creating-bash-script-file-for-iterating-over-multple-txt-files.png?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\" srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/creating-bash-script-file-for-iterating-over-multple-txt-files.png?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 768px)\" data-srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/creating-bash-script-file-for-iterating-over-multple-txt-files.png?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\" srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/creating-bash-script-file-for-iterating-over-multple-txt-files.png?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 481px)\" data-srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/creating-bash-script-file-for-iterating-over-multple-txt-files.png?q=70\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=1\" srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/creating-bash-script-file-for-iterating-over-multple-txt-files.png?q=70\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 0px)\" data-srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/creating-bash-script-file-for-iterating-over-multple-txt-files.png?q=70\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=1\" srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/creating-bash-script-file-for-iterating-over-multple-txt-files.png?q=70\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=1\"/\u003e\u003cimg width=\"754\" height=\"159\" loading=\"lazy\" decoding=\"async\" alt=\"Creating bash script file for searching and replacing text of file in terminal.\" data-img-url=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/creating-bash-script-file-for-iterating-over-multple-txt-files.png\" src=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/creating-bash-script-file-for-iterating-over-multple-txt-files.png\"/\u003e \u003c/picture\u003e \u003c/figure\u003e \u003c/div\u003e\n\n\u003cp\u003eTo use this script, first save it to a file (e.g., bashexample.sh), then \u003ca href=\"https://www.howtogeek.com/437958/how-to-use-the-chmod-command-on-linux/\" target=\"_blank\"\u003emake the file executable\u003c/a\u003e by running:\u003c/p\u003e\n\n\u003cpre\u003echmod +x bashexample.sh\u003c/pre\u003e\n\n\u003cp\u003eThen, execute the script with:\u003c/p\u003e\n\n\u003cpre\u003e./bashexample.sh\u003c/pre\u003e\n\n\n\n\n\u003cp\u003eThe \u003ca href=\"https://www.howtogeek.com/815778/bash-for-loops-examples/\" target=\"_blank\"\u003efor loop iterates\u003c/a\u003e over all text files in the current directory and uses sed to replace text within each file. You can also modify this script to handle different patterns or file types as needed.\u003c/p\u003e\n\n\u003ch3 id=\"replace-text-with-python-script\"\u003e Replace Text With Python Script \u003c/h3\u003e\n\u003cp\u003eWith \u003ca href=\"https://www.howtogeek.com/install-latest-python-version-on-ubuntu/\" target=\"_blank\"\u003ePython’s\u003c/a\u003e advanced text-processing capabilities, you can perform find-and-replace tasks on files directly from the terminal. Python scripts are helpful when you want more complex operations, such as handling multiple files with conditional logic.\u003c/p\u003e\n\n\u003cp\u003eFirst, create a new Python file. You can use any text editor, such as \u003ca href=\"https://www.howtogeek.com/42980/the-beginners-guide-to-nano-the-linux-command-line-text-editor/\" target=\"_blank\"\u003enano\u003c/a\u003e or Vim:\u003c/p\u003e\n\n\u003cpre\u003evim textfile.py\u003c/pre\u003e\n\n\u003cp\u003eNext, add the following Python script to the file:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e#!/usr/bin/env python\u003c/span\u003e\u003cbr/\u003e\u003cspan\u003eimport\u003c/span\u003e sys\u003cbr/\u003e\u003cspan\u003ewith\u003c/span\u003e \u003cspan\u003eopen\u003c/span\u003e(sys.argv[\u003cspan\u003e1\u003c/span\u003e], \u003cspan\u003e\u0026#39;r+\u0026#39;\u003c/span\u003e) \u003cspan\u003eas\u003c/span\u003e f:\u003cbr/\u003e    content = f.read().replace(\u003cspan\u003e\u0026#39;Windows\u0026#39;\u003c/span\u003e, \u003cspan\u003e\u0026#39;Linux\u0026#39;\u003c/span\u003e)\u003cbr/\u003e    \u003cspan\u003ef\u003c/span\u003e\u003cspan\u003e.seek\u003c/span\u003e(0)\u003cbr/\u003e    \u003cspan\u003ef\u003c/span\u003e\u003cspan\u003e.write\u003c/span\u003e(\u003cspan\u003econtent\u003c/span\u003e)\u003cbr/\u003e    \u003cspan\u003ef\u003c/span\u003e\u003cspan\u003e.truncate\u003c/span\u003e()\u003c/code\u003e \u003c/pre\u003e\n\u003cp\u003eAfter saving the file, make it executable by running:\u003c/p\u003e\n\n\u003cpre\u003echmod +x ./testfile.py\u003c/pre\u003e\n\n\u003cp\u003eThen, run the script by passing the target file as a command-line argument:\u003c/p\u003e\n\n\u003cpre\u003epython3 ./testfile.py input.txt\u003c/pre\u003e\n\n\n\n\n\u003cp\u003eThis script reads the content of input.txt, replaces occurrences of the old text with the new text, and saves the changes directly to the file.\u003c/p\u003e\n\n\n\n\u003ch2 id=\"replace-set-of-characters-with-tr-command\"\u003e Replace Set of Characters With tr Command \u003c/h2\u003e\n\u003cp\u003eHave you ever needed to replace just a single character with another character in the entire file? If yes, then you need to try the \u003ca href=\"https://www.howtogeek.com/886723/how-to-use-the-linux-tr-command/\" target=\"_blank\"\u003etr command\u003c/a\u003e. This command is perfect for simple character replacements or deletions.\u003c/p\u003e\n\n\u003cp\u003eFor instance, I often use it to convert specific characters in a text file to uppercase or lowercase. To replace all lowercase a\u0026#39;s and d\u0026#39;s with uppercase A\u0026#39;s and D\u0026#39;s in a text file, run:\u003c/p\u003e\n\n\u003cpre\u003etr \u0026#39;a,d\u0026#39; \u0026#39;A,D\u0026#39; \u0026lt; example.txt\u003c/pre\u003e\n\n\u003cdiv data-img-url=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-multiple-sets-of-characters-with-tr-command.png\" data-modal-id=\"single-image-modal\" data-modal-container-id=\"single-image-modal-container\" data-img-caption=\"\u0026#34;\u0026#34;\"\u003e\u003cfigure\u003e\u003cpicture\u003e\u003csource media=\"(min-width: 1024px)\" data-srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-multiple-sets-of-characters-with-tr-command.png?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\" srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-multiple-sets-of-characters-with-tr-command.png?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 768px)\" data-srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-multiple-sets-of-characters-with-tr-command.png?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\" srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-multiple-sets-of-characters-with-tr-command.png?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 481px)\" data-srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-multiple-sets-of-characters-with-tr-command.png?q=70\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=1\" srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-multiple-sets-of-characters-with-tr-command.png?q=70\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 0px)\" data-srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-multiple-sets-of-characters-with-tr-command.png?q=70\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=1\" srcset=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-multiple-sets-of-characters-with-tr-command.png?q=70\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=1\"/\u003e\u003cimg width=\"965\" height=\"129\" loading=\"lazy\" decoding=\"async\" alt=\"Replacing multiple sets of characters with tr command.\" data-img-url=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-multiple-sets-of-characters-with-tr-command.png\" src=\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2024/10/replacing-multiple-sets-of-characters-with-tr-command.png\"/\u003e \u003c/picture\u003e \u003c/figure\u003e \u003c/div\u003e\n\n\n\u003cp\u003eRemember that tr works on characters rather than strings or words, so it\u0026#39;s best suited for simple character replacements rather than more complex patterns.\u003c/p\u003e\n\n\u003cp\u003eYou can also clean up whitespace or standardize line endings by running this:\u003c/p\u003e\n\n\u003cpre\u003ecat messy_file.txt | tr \u0026#39;\\r\u0026#39; \u0026#39;\\n\u0026#39; \u0026gt; clean_file.txt\u003c/pre\u003e\n\n\u003cp\u003eThis \u003ca href=\"https://www.howtogeek.com/884769/bad-interpreter-no-such-file-or-directory-linux-error/\" target=\"_blank\"\u003econverts Windows-style line endings\u003c/a\u003e (\\r\\n) to Unix-style line endings (\\n), which is helpful when working with files across different operating systems.\u003c/p\u003e\n\n\n\n\u003ch2 id=\"using-perl\"\u003e Using perl \u003c/h2\u003e\n\u003cp\u003ePerl, a high-level programming language, can also be used directly in the terminal to find and replace text, making it a great alternative to sed. Its syntax is similar to sed\u0026#39;s, but it offers more advanced features.\u003c/p\u003e\n\n\u003cp\u003ePersonally, I really liked Perl because of its particularly strong regular expression capabilities, which make it a great choice for complex find-and-replace operations.\u003c/p\u003e\n\n\n\u003cp\u003eYou can replace any word in a file using this command:\u003c/p\u003e\n\n\u003cpre\u003eperl -pi -e \u0026#39;s/Linux/Windows/g\u0026#39; file.txt\u003c/pre\u003e\n\n\u003cp\u003eHere, the \u003cstrong\u003e-pi\u003c/strong\u003e flags tell perl to edit the file in place, and the \u003cstrong\u003e-e\u003c/strong\u003e flag allows you to pass an expression directly. This command modifies file.txt by replacing \u0026#34;Linux\u0026#34; with \u0026#34;Windows\u0026#34; throughout the file.\u003c/p\u003e\n\n\u003chr/\u003e\n\n\u003cp\u003e For simple substitutions, command-line tools like sed, awk, or perl work well. Choose a Bash or Python script if you need to perform a more complex substitution across multiple files or with additional logic.\u003c/p\u003e\n\n \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "9 min read",
  "publishedTime": "2024-11-03T21:30:13Z",
  "modifiedTime": "2024-11-03T21:30:13Z"
}
