{
  "id": "44729d44-baf2-4718-89cb-279986ef9773",
  "title": "SVG to CSS Shape Converter",
  "link": "https://css-tricks.com/svg-to-css-shape-converter/",
  "description": "Shape master Temani Afif has what might be the largest collection of CSS shapes on the planet with all the tools to generate them on the fly. There’s a mix of clever techniques he’s typically used to make those shapes, … SVG to CSS Shape Converter originally published on CSS-Tricks, which is part of the DigitalOcean family. You should get the newsletter.",
  "author": "Geoff Graham",
  "published": "Wed, 21 May 2025 15:09:29 +0000",
  "source": "https://css-tricks.com/feed/",
  "categories": [
    "Links",
    "CSS functions",
    "resource",
    "shapes"
  ],
  "byline": "Geoff Graham",
  "length": 2478,
  "excerpt": "Shape master Temani Afif has what might be the largest collection of CSS shapes on the planet with all the tools to generate them on the fly. There's a mix of",
  "siteName": "CSS-Tricks",
  "favicon": "https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/07/star.png?fit=180%2C180\u0026ssl=1",
  "text": "Shape master Temani Afif has what might be the largest collection of CSS shapes on the planet with all the tools to generate them on the fly. There’s a mix of clever techniques he’s typically used to make those shapes, many of which he’s covered here at CSS-Tricks over the years. Some of the more complex shapes were commonly clipped with the path() function. That makes a lot of sense because it literally accepts SVG path coordinates that you can draw in an app like Figma and export. But Temani has gone all-in on the newly-released shape() function which recently rolled out in both Chromium browsers and Safari. That includes a brand-new generator that converts path() shapes in shape() commands instead. So, if we had a shape that was originally created with an SVG path, like this: .shape { clip-path: path( M199.6,18.9 c-4.3-8.9-12.5-16.4-22.3-17.8 c-11.9-1.7-23.1,5.4-32.2,13.2 c-9.1,7.8-17.8,16.8-29.3,20.3 c-20.5,6.2-41.7-7.4-63.1-7.5 c38.7,27,24.8,33,15.2,43.3 c-35.5,38.2-0.1,99.4,40.6,116.2 c32.8,13.6,72.1,5.9,100.9-15 c27.4-19.9,44.3-54.9,47.4-88.6 c0.2-2.7,0.4-5.3,0.5-7.9 c204.8,38,203.9,27.8,199.6,18.9 z ); } …the generator will spit this out: .shape { clip-path: shape( from 97.54% 10.91%, curve by -10.93% -10.76% with -2.11% -5.38%/-6.13% -9.91%, curve by -15.78% 7.98% with -5.83% -1.03%/-11.32% 3.26%, curve by -14.36% 12.27% with -4.46% 4.71%/-8.72% 10.15%, curve by -30.93% -4.53% with -10.05% 3.75%/-20.44% -4.47%, curve to 7.15% 25.66% with 18.67% 15.81%/11.86% 19.43%, curve by 19.9% 70.23% with -17.4% 23.09%/-0.05% 60.08%, curve by 49.46% -9.07% with 16.08% 8.22%/35.34% 3.57%, curve by 23.23% -53.55% with 13.43% -12.03%/21.71% -33.18%, curve by 0.25% -4.77% with 0.1% -1.63%/0.2% -3.2%, curve to 97.54% 10.91% with 100.09% 22.46%/99.64% 16.29%, close ); } Pretty cool! Honestly, I’m not sure how often I’ll need to convert path() to shape(). Seems like a stopgap sorta thing where the need for it dwindles over time as shape() is used more often — and it’s not like the existing path() function is broken or deprecated… it’s just different. But still, I’m using the generator a LOT as I try to wrap my head around shape() commands. Seeing the commands in context is invaluable which makes it an excellent learning tool. Direct Link →",
  "image": "https://i0.wp.com/css-tricks.com/wp-content/uploads/2019/08/adaptive-icons.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\n  \u003cmain id=\"post-386716\"\u003e\n\n    \u003carticle\u003e\n\n      \n        \n        \u003cdiv\u003e\n\n          \n          \n\u003cp\u003eShape master Temani Afif has what might be \u003ca href=\"https://css-generators.com\" rel=\"noopener\"\u003ethe largest collection of CSS shapes\u003c/a\u003e on the planet with all the tools to generate them on the fly. There’s a mix of clever techniques he’s typically used to make those shapes, \u003ca href=\"https://css-tricks.com/author/afiftemani/\"\u003emany of which he’s covered here at CSS-Tricks over the years\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cp\u003eSome of the more complex shapes were commonly clipped with the \u003ccode\u003epath()\u003c/code\u003e function. That makes a lot of sense because it literally accepts SVG \u003ccode\u003epath\u003c/code\u003e coordinates that you can draw in an app like Figma and export.\u003c/p\u003e\n\n\n\n\u003cp\u003eBut Temani has gone all-in on the newly-released \u003ccode\u003eshape()\u003c/code\u003e function which recently rolled out in both Chromium browsers and Safari. That includes \u003ca href=\"https://css-generators.com/svg-to-css/\" rel=\"noopener\"\u003ea brand-new generator that converts \u003ccode\u003epath()\u003c/code\u003e shapes in \u003ccode\u003eshape()\u003c/code\u003e commands\u003c/a\u003e instead.\u003c/p\u003e\n\n\n\n\u003cp\u003eSo, if we had a shape that was originally created with an SVG \u003ccode\u003epath\u003c/code\u003e, like this:\u003c/p\u003e\n\n\n\n\u003cpre rel=\"CSS\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003e.shape {\n  clip-path: path(\n    M199.6,18.9\n    c-4.3-8.9-12.5-16.4-22.3-17.8\n    c-11.9-1.7-23.1,5.4-32.2,13.2\n    c-9.1,7.8-17.8,16.8-29.3,20.3\n    c-20.5,6.2-41.7-7.4-63.1-7.5\n    c38.7,27,24.8,33,15.2,43.3\n    c-35.5,38.2-0.1,99.4,40.6,116.2\n    c32.8,13.6,72.1,5.9,100.9-15\n    c27.4-19.9,44.3-54.9,47.4-88.6\n    c0.2-2.7,0.4-5.3,0.5-7.9\n    c204.8,38,203.9,27.8,199.6,18.9\n    z\n  );\n}\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003e…the generator will spit this out:\u003c/p\u003e\n\n\n\n\u003cpre rel=\"CSS\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003e.shape {\n  clip-path: shape(\n    from 97.54% 10.91%,\n    curve by -10.93% -10.76% with -2.11% -5.38%/-6.13% -9.91%,\n    curve by -15.78% 7.98% with -5.83% -1.03%/-11.32% 3.26%,\n    curve by -14.36% 12.27% with -4.46% 4.71%/-8.72% 10.15%,\n    curve by -30.93% -4.53% with -10.05% 3.75%/-20.44% -4.47%,\n    curve to 7.15% 25.66% with 18.67% 15.81%/11.86% 19.43%,\n    curve by 19.9% 70.23% with -17.4% 23.09%/-0.05% 60.08%,\n    curve by 49.46% -9.07% with 16.08% 8.22%/35.34% 3.57%,\n    curve by 23.23% -53.55% with 13.43% -12.03%/21.71% -33.18%,\n    curve by 0.25% -4.77% with 0.1% -1.63%/0.2% -3.2%,\n    curve to 97.54% 10.91% with 100.09% 22.46%/99.64% 16.29%,\n    close\n  );\n}\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003ePretty cool!\u003c/p\u003e\n\n\n\n\n\n\n\n\u003cp\u003eHonestly, I’m not sure how often I’ll need to convert \u003ccode\u003epath()\u003c/code\u003e to \u003ccode\u003eshape()\u003c/code\u003e. Seems like a stopgap sorta thing where the need for it dwindles over time as \u003ccode\u003eshape()\u003c/code\u003e is used more often — and it’s not like the existing \u003ccode\u003epath()\u003c/code\u003e function is broken or deprecated… it’s just different. But still, I’m using the generator a LOT as \u003ca href=\"https://css-tricks.com/css-shape-commands/\"\u003eI try to wrap my head around \u003ccode\u003eshape()\u003c/code\u003e commands\u003c/a\u003e. Seeing the commands in context is invaluable which makes it an excellent learning tool.\u003c/p\u003e\n\n                      \u003cp\u003e     \n                              \u003ca href=\"https://css-generators.com/svg-to-css/\"\u003e\n                  Direct Link →\n                \u003c/a\u003e\n              \n                          \u003c/p\u003e\n          \n        \u003c/div\u003e\n\n    \u003c/article\u003e\n\n  \u003c/main\u003e\n\n        \n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": "2025-05-21T09:09:29-06:00",
  "modifiedTime": "2025-05-21T09:37:40-06:00"
}
