{
  "id": "7a671e22-1912-482e-9051-2058b5ffb2da",
  "title": "State of CSS 2024 Results",
  "link": "https://css-tricks.com/state-of-css-2024-results/",
  "description": "The results from this year's survey are fairly fresh off the presses. We took a little time to sit with them and jot down some things we noticed and found interesting. State of CSS 2024 Results originally published on CSS-Tricks, which is part of the DigitalOcean family. You should get the newsletter.",
  "author": "Geoff Graham",
  "published": "Wed, 30 Oct 2024 16:43:55 +0000",
  "source": "https://css-tricks.com/feed/",
  "categories": [
    "Articles",
    "news"
  ],
  "byline": "Geoff Graham",
  "length": 9477,
  "excerpt": "The results from this year's survey are fairly fresh off the presses. We took a little time to sit with them and jot down some things we noticed and found interesting.",
  "siteName": "CSS-Tricks",
  "favicon": "https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/07/star.png?fit=180%2C180\u0026ssl=1",
  "text": "DigitalOcean provides cloud products for every stage of your journey. Get started with $200 in free credit! They’re out! Like many of you, I look forward to these coming out each year. I don’t put much stock in surveys but they can be insightful and give a snapshot of the CSS zeitgeist. There are a few little nuggets in this year’s results that I find interesting. But before I get there, you’ll want to also check out what others have already written about it. Josh Comeau digested his takeaways in a recent newsletter. Oh, I guess that’s it — at least it’s the most formal write-up I’ve seen. There’s a little summary by Ahmad Shadeed at the end of the survey that generally rounds things up. I’ll drop in more links as I find ’em. In no particular order… Demographics Josh has way more poignant thoughts on this than I do. He rightfully calls out discrepancies in gender pay and regional pay, where men are way more compensated than women (a nonsensical and frustratingly never-ending trend) and the United States boasts more $100,000 salaries than anywhere else. The countries with the highest salaries were also the most represented in survey responses, so perhaps the results are no surprise. We’re essentially looking at a snapshot of what it’s like to be a rich, white male developer in the West. Besides pay, my eye caught the Age Group demographics. As an aging front-ender, I often wonder what we all do when we finally get to retirement age. I officially dropped from the most represented age group (30-39, 42%) a few years ago into the third most represented tier (40-49, 21%). Long gone are my days being with the cool kids (20-29, 27%). And if the distribution is true to life, I’m riding fast into my sunset years and will be only slightly more represented than those getting into the profession. I don’t know if anyone else feels similarly anxious about aging in this industry — but if you’re one of the 484 folks who identify with the 50+ age group, I’d love to talk with you. Before we plow ahead, I think it’s worth calling out how relatively “new” most people are to front-end development. Wow! Forty-freaking-four percent of respondents have less than 10 years of experience. Yes, 10 years is a high threshold, but we’re still talking about a profession that popped up in recent memory. For perspective, someone developing for 10 years came to the field around 2014. That’s just when we were getting Flexbox, and several years after the big bang of CSS 3 and HTML 5. That’s just under half of developers who never had to deal with the headaches of table layouts, clearfix hacks, image sprites, spacer images, and rasterized rounded corners. Ethan Marcotte’s seminal article on “Responsive Web Design” predates these folks by a whopping four years! That’s just wild. And exciting. I’m a firm believer in the next generation of front-enders but always hope that they learn from our past mistakes and become masters at the basics. Features I’m not entirely sure what to make of this section. When there are so many CSS features, how do you determine which are most widely used? How do you pare it down to just 50 features? Like, are filter effects really the most widely used CSS feature? So many questions, but the results are always interesting nonetheless. What I find most interesting are the underused features. For example, hanging-punctuation comes in dead last in usage (1.57%) but is the feature that most developers (52%) have on their reading list. (If you need some reading material on it, Chris initially published the Almanac entry for hanging-punctuation back in 2013.) I also see Anchor Positioning at the end of the long tail with reported usage at 4.8%. That’ll go up for sure now that we have at least one supporting browser engine (Chromium) but also given all of the tutorials that have sprung up in the past few months. Yes, we’ve contributed to that noise… but it’s good noise! I think Juan published what might be the most thorough and thoughtful guide on the topic yet. I’m excited to see Cascade Layers falling smack dab in the middle of the pack at a fairly robust 18.7%. Cascade Layers are super approachable and elegantly designed that I have trouble believing anybody these days when they say that the CSS Cascade is difficult to manage. And even though @scope is currently low on the list (4.8%, same as Anchor Positioning), I’d bet the crumpled gum wrapper in my pocket that the overall sentiment of working with the Cascade will improve dramatically. We’ll still see “CSS is Awesome” memes galore, but they’ll be more like old familiar dad jokes in good time. (Aside: Did you see the proposed designs for a new CSS logo? You can vote on them as of yesterday, but earlier versions played off the “CSS is Awesome” mean quite beautifully.) Interestingly enough, viewport units come in at Number 11 with 44.2% usage… which lands them at Number 2 for most experience that developers have with CSS layout. Does that suggest that layout features are less widely used than CSS filters? Again, so many questions. Frameworks How many of you were surprised that Tailwind blew past Bootstrap as Top Dog framework in CSS Land? Nobody, right? More interesting to me is that “No CSS framework” clocks in at Number 13 out of 21 list frameworks. Sure, its 46 votes are dwarfed by the 138 for Material UI at Number 10… but the fact that we’re seeing “no framework” as a ranking option at all would have been unimaginable just three years ago. The same goes for CSS pre/post-processing. Sass (67%) and PostCSS (38%) are the power players, but “None” comes in third at 19%, ahead of Less, Stylus, and Lightning CSS. It’s a real testament to the great work the CSSWG is doing to make CSS better every day. We don’t thank the CSSWG enough — thank you, team! Y’all are heroes around these parts. CSS Usage Josh already has a good take on the fact that only 67% of folks say they test their work on mobile phones. It should be at least tied with the 99% who test on desktops, right? Right?! Who knows, maybe some responses consider things like “Responsive Design Mode” desktop features to be the equivalent of testing on real mobile devices. I find it hard to believe that only 67% of us test mobile. Oh, and The Great Divide is still alive and well if the results are true and 53% write more JavsScript than CSS in their day-to-day. Missing CSS Features This is always a fun topic to ponder. Some of the most-wanted CSS features have been lurking around 10+ years. But let’s look at the top three form this year’s survey: Mixins Conditional Logic Masonry We’re in luck team! There’s movement on all three of those fronts: A new CSS Functions and Mixins Module draft was published in late June after the CSSWG resolved to adopt the proposal back in February. (Read our notes.) The CSS Working Group (CSSWG) resolved to add an if() conditional to the CSS Values Module Level 5 specification. (Read our notes.) There are competing proposals for how to forge ahead with a CSS-y approach to masonry layouts. One is based on the CSS Grid Layout Module Level 3 draft specifcation and the other is a fresh new module dedicated to masonry. Apple has planted its flag. So has Chrome. Let the cage-match continue! Resources This is where I get to toot our own horn a bit because CSS-Tricks continues to place first among y’all when it comes to the blogs you follow for CSS happenings. I’m also stoked to see Smashing Magazine right there as well. It was fifth in 2023 and I’d like to think that rise is due to me joining the team last year. Correlation implies causation, amirite? But look at Kevin Powell and Josh in the Top 10. That’s just awesome. It speaks volumes about their teaching talents and the hard work they put into “helping people fall in love with CSS” as Kevin might say it. I was able to help Kevin with a couple of his videos last year (here’s one) and can tell you the guy cares a heckuva lot about making CSS approachable and fun. Honestly, the rankings are not what we live for. Now that I’ve been given a second wind to work on CSS-Tricks, all I want is to publish things that are valuable to your everyday work as front-enders. That’s traditionally happened as a stream of daily articles but is shifting to more tutorials and resources, whether it’s guides (we’ve published four new ones this year), taking notes on interesting developments, spotlighting good work with links, or expanding the ol’ Almanac to account for things like functions, at-rules, and pseudos (we have lots of work to do). My 2024 Pick No one asked my opinion but I’ll say it anyway: Personal blogging. I’m seeing more of us in the front-end community getting back behind the keyboards of their personal websites and I’ve never been subscribed to more RSS feeds than I am today. Some started blogging as a “worry stone” during the 2020 lockdown. Some abandoned socials when Twitter X imploded. Some got way into the IndieWeb. Webrings and guestbooks are even gaining new life. Sure, it can be tough keeping up, but what a good problem to have! Let’s make RSS king once and for all. That’s a wrap! Seriously, a huge thanks to Sacha Greif and the entire Devographics team for the commitment to putting this survey together every year. It’s always fun. And the visualizations are always to die for.",
  "image": "https://css-tricks.com/wp-json/social-image-generator/v1/image/382144",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cp\u003e\n\tDigitalOcean provides cloud products for every stage of your journey. Get started with \u003ca href=\"https://try.digitalocean.com/css-tricks/?utm_medium=content_acq\u0026amp;utm_source=css-tricks\u0026amp;utm_campaign=global_brand_ad_en\u0026amp;utm_content=conversion_prearticle_everystage\"\u003e$200 in free credit!\u003c/a\u003e\n\u003c/p\u003e\u003cdiv\u003e\n\n          \n          \n\u003cp\u003e\u003ca href=\"https://2024.stateofcss.com/en-US/\" rel=\"noopener\"\u003eThey’re out!\u003c/a\u003e Like many of you, I look forward to these coming out each year. I don’t put much stock in surveys but they can be insightful and give a snapshot of the CSS zeitgeist. There are a few little nuggets in this year’s results that I find interesting. But before I get there, you’ll want to also check out what others have already written about it.\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eJosh Comeau \u003ca href=\"https://www.joshwcomeau.com/email/2024-10-22-css-survey/\" rel=\"noopener\"\u003edigested his takeaways\u003c/a\u003e in a recent newsletter.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eOh, I guess that’s it — at least it’s the most formal write-up I’ve seen. \u003ca href=\"https://2024.stateofcss.com/en-US/conclusion/\" rel=\"noopener\"\u003eThere’s a little summary by Ahmad Shadeed\u003c/a\u003e at the end of the survey that generally rounds things up. I’ll drop in more links as I find ’em.\u003c/p\u003e\n\n\n\n\u003cp\u003eIn no particular order…\u003c/p\u003e\n\n\n\n\u003ch3 id=\"demographics\"\u003eDemographics\u003c/h3\u003e\n\n\n\u003cp\u003eJosh has way more poignant thoughts on this than I do. He rightfully calls out discrepancies in gender pay and regional pay, where men are way more compensated than women (a nonsensical and frustratingly never-ending trend) and the United States boasts more $100,000 salaries than anywhere else. The countries with the highest salaries were also the most represented in survey responses, so perhaps the results are no surprise. We’re essentially looking at a snapshot of what it’s like to be a rich, white male developer in the West.\u003c/p\u003e\n\n\n\n\u003cp\u003eBesides pay, my eye caught the Age Group demographics. As an aging front-ender, \u003ca href=\"https://geoffgraham.me/aging/\" rel=\"noopener\"\u003eI often wonder what we all do when we finally get to retirement age\u003c/a\u003e. I officially dropped from the most represented age group (30-39, 42%) a few years ago into the third most represented tier (40-49, 21%). Long gone are my days being with the cool kids (20-29, 27%).\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" fetchpriority=\"high\" decoding=\"async\" width=\"2004\" height=\"806\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/css-survey-2024-age.jpg?resize=2004%2C806\u0026amp;ssl=1\" alt=\"Bar chart with age results from the state of CSS 2024 survey.\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/css-survey-2024-age.jpg?w=2004\u0026amp;ssl=1 2004w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/css-survey-2024-age.jpg?resize=300%2C121\u0026amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/css-survey-2024-age.jpg?resize=1024%2C412\u0026amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/css-survey-2024-age.jpg?resize=768%2C309\u0026amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/css-survey-2024-age.jpg?resize=1536%2C618\u0026amp;ssl=1 1536w\" sizes=\"(min-width: 735px) 864px, 96vw\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eAnd if the distribution is true to life, I’m riding fast into my sunset years and will be only slightly more represented than those getting into the profession. I don’t know if anyone else feels similarly anxious about aging in this industry — but if you’re one of the 484 folks who identify with the 50+ age group, I’d love to talk with you.\u003c/p\u003e\n\n\n\n\u003cp\u003eBefore we plow ahead, I think it’s worth calling out how relatively “new” most people are to front-end development.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" decoding=\"async\" width=\"2018\" height=\"906\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/css-survey-2024-experience-1.png?resize=2018%2C906\u0026amp;ssl=1\" alt=\"Bar chart with years of experience from the state of CSS 2024 survey.\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/css-survey-2024-experience-1.png?w=2018\u0026amp;ssl=1 2018w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/css-survey-2024-experience-1.png?resize=300%2C135\u0026amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/css-survey-2024-experience-1.png?resize=1024%2C460\u0026amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/css-survey-2024-experience-1.png?resize=768%2C345\u0026amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/css-survey-2024-experience-1.png?resize=1536%2C690\u0026amp;ssl=1 1536w\" sizes=\"(min-width: 735px) 864px, 96vw\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eWow! Forty-freaking-four percent of respondents have less than 10 years of experience. Yes, 10 years is a high threshold, but we’re still talking about a profession that popped up in recent memory. \u003c/p\u003e\n\n\n\n\u003cp\u003eFor perspective, someone developing for 10 years came to the field around 2014. That’s just when we were getting Flexbox, and several years after the big bang of CSS 3 and HTML 5. That’s just under \u003cem\u003ehalf\u003c/em\u003e of developers who never had to deal with the headaches of table layouts, clearfix hacks, image sprites, spacer images, and rasterized rounded corners. Ethan Marcotte’s seminal article on \u003ca href=\"https://alistapart.com/article/responsive-web-design/\" rel=\"noopener\"\u003e“Responsive Web Design”\u003c/a\u003e predates these folks by a whopping four years!\u003c/p\u003e\n\n\n\n\u003cp\u003eThat’s just wild. And exciting. I’m a firm believer in \u003ca href=\"https://www.smashingmagazine.com/2024/02/frequently-heard-beginning-front-end-web-development-class/\" rel=\"noopener\"\u003ethe next generation of front-enders\u003c/a\u003e but always hope that they learn from our past mistakes and \u003ca href=\"https://geoffgraham.me/the-basics-dev/\" rel=\"noopener\"\u003ebecome masters at the basics\u003c/a\u003e.\u003c/p\u003e\n\n\n\u003ch3 id=\"features\"\u003eFeatures\u003c/h3\u003e\n\n\n\u003cp\u003eI’m not entirely sure what to make of this section. When there are so many CSS features, how do you determine which are most widely used? How do you pare it down to just 50 features? Like, are \u003ccode\u003efilter\u003c/code\u003e effects really the most widely used CSS feature? So many questions, but the results are always interesting nonetheless.\u003c/p\u003e\n\n\n\n\u003cp\u003eWhat I find most interesting are the \u003cem\u003eunderused\u003c/em\u003e features. For example, \u003ccode\u003ehanging-punctuation\u003c/code\u003e comes in dead last in usage (1.57%) but is the feature that most developers (52%) have on their \u003ca href=\"https://2024.stateofcss.com/en-US/features/#reading_list\" rel=\"noopener\"\u003ereading list\u003c/a\u003e. (If you need some reading material on it, Chris initially published \u003ca href=\"https://css-tricks.com/almanac/properties/h/hanging-punctuation/\"\u003ethe Almanac entry for \u003ccode\u003ehanging-punctuation\u003c/code\u003e\u003c/a\u003e back in 2013.)\u003c/p\u003e\n\n\n\n\u003cp\u003eI also see Anchor Positioning at the end of the long tail with reported usage at 4.8%. That’ll go up for sure now that we have at least one supporting browser engine (Chromium) but also given all of the tutorials that have sprung up in the past few months. Yes, we’ve contributed to that noise… but it’s good noise! I think Juan published what might be \u003ca href=\"https://css-tricks.com/css-anchor-positioning-guide/\"\u003ethe most thorough and thoughtful guide on the topic\u003c/a\u003e yet.\u003c/p\u003e\n\n\n\n\u003cp\u003eI’m excited to see Cascade Layers falling smack dab in the middle of the pack at a fairly robust 18.7%. Cascade Layers are super approachable and elegantly designed that I have trouble believing anybody these days when they say that the CSS Cascade is difficult to manage. And even though \u003ccode\u003e@scope\u003c/code\u003e is currently low on the list (4.8%, same as Anchor Positioning), I’d bet the crumpled gum wrapper in my pocket that the overall sentiment of working with the Cascade will improve dramatically. We’ll still see “CSS is Awesome” memes galore, but they’ll be more like old familiar dad jokes in good time.\u003c/p\u003e\n\n\n\n\u003cp\u003e(Aside: Did you see the \u003ca href=\"https://github.com/CSS-Next/css-next/issues/105#issuecomment-2445341089\" rel=\"noopener\"\u003eproposed designs for a new CSS logo\u003c/a\u003e? You can vote on them as of yesterday, but \u003ca href=\"https://css-tricks.com/searching-for-a-new-css-logo/\"\u003eearlier versions\u003c/a\u003e played off the “CSS is Awesome” mean quite beautifully.)\u003c/p\u003e\n\n\n\n\u003cp\u003eInterestingly enough, viewport units come in at Number 11 with 44.2% usage… which lands them at \u003ca href=\"https://2024.stateofcss.com/en-US/layout/\" rel=\"noopener\"\u003eNumber 2 for most experience that developers have with CSS layout\u003c/a\u003e. Does that suggest that layout features are less widely used than CSS filters? Again, so many questions.\u003c/p\u003e\n\n\n\u003ch3 id=\"frameworks\"\u003eFrameworks\u003c/h3\u003e\n\n\n\u003cp\u003eHow many of you were surprised that Tailwind blew past Bootstrap as \u003ca href=\"https://2024.stateofcss.com/en-US/tools/\" rel=\"noopener\"\u003eTop Dog framework\u003c/a\u003e in CSS Land? Nobody, right?\u003c/p\u003e\n\n\n\n\u003cp\u003eMore interesting to me is that “No CSS framework” clocks in at Number 13 out of 21 list frameworks. Sure, its 46 votes are dwarfed by the 138 for Material UI at Number 10… but the fact that we’re seeing “no framework” as a ranking option at all would have been unimaginable just three years ago.\u003c/p\u003e\n\n\n\n\u003cp\u003eThe same goes for \u003ca href=\"https://2024.stateofcss.com/en-US/tools/#pre_post_processors\" rel=\"noopener\"\u003eCSS pre/post-processing\u003c/a\u003e. Sass (67%) and PostCSS (38%) are the power players, but “None” comes in third at 19%, ahead of Less, Stylus, and Lightning CSS.\u003c/p\u003e\n\n\n\n\u003cp\u003eIt’s a real testament to the great work the CSSWG is doing to make CSS better every day. We don’t thank the CSSWG enough — thank you, team! \u003cstrong\u003eY’all are heroes around these parts.\u003c/strong\u003e\u003c/p\u003e\n\n\n\u003ch2 id=\"css-usage\"\u003eCSS Usage\u003c/h2\u003e\n\n\n\u003cp\u003eJosh already has a good take on the fact that only 67% of folks say they test their work on mobile phones. It should be \u003cem\u003eat least\u003c/em\u003e tied with the 99% who test on desktops, right? \u003cem\u003eRight?!\u003c/em\u003e Who knows, maybe some responses consider things like “Responsive Design Mode” desktop features to be the equivalent of testing on real mobile devices. I find it hard to believe that only 67% of us test mobile.\u003c/p\u003e\n\n\n\n\u003cp\u003eOh, and \u003ca href=\"https://css-tricks.com/the-great-divide/\"\u003eThe Great Divide\u003c/a\u003e is still alive and well if the results are true and 53% write more JavsScript than CSS in their day-to-day.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" loading=\"lazy\" decoding=\"async\" width=\"2014\" height=\"960\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/Screenshot-2024-10-29-at-3.02.03%E2%80%AFPM.png?resize=2014%2C960\u0026amp;ssl=1\" alt=\"\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/Screenshot-2024-10-29-at-3.02.03%E2%80%AFPM.png?w=2014\u0026amp;ssl=1 2014w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/Screenshot-2024-10-29-at-3.02.03%E2%80%AFPM.png?resize=300%2C143\u0026amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/Screenshot-2024-10-29-at-3.02.03%E2%80%AFPM.png?resize=1024%2C488\u0026amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/Screenshot-2024-10-29-at-3.02.03%E2%80%AFPM.png?resize=768%2C366\u0026amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/Screenshot-2024-10-29-at-3.02.03%E2%80%AFPM.png?resize=1536%2C732\u0026amp;ssl=1 1536w\" sizes=\"(min-width: 735px) 864px, 96vw\"/\u003e\u003c/figure\u003e\n\n\n\u003ch3 id=\"missing-css-features\"\u003eMissing CSS Features\u003c/h3\u003e\n\n\n\u003cp\u003e\u003ca href=\"https://css-tricks.com/2019-css-wishlist/\"\u003eThis is always a fun topic to ponder.\u003c/a\u003e Some of the most-wanted CSS features have been \u003ca href=\"https://css-tricks.com/the-2013-css-wishlist/\"\u003elurking around 10+ years\u003c/a\u003e. But let’s look at the top three form this year’s survey:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eMixins\u003c/li\u003e\n\n\n\n\u003cli\u003eConditional Logic\u003c/li\u003e\n\n\n\n\u003cli\u003eMasonry\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eWe’re in luck team! There’s movement on all three of those fronts:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eA new \u003ca href=\"https://drafts.csswg.org/css-mixins/\" rel=\"noopener\"\u003eCSS Functions and Mixins Module draft\u003c/a\u003e was published in late June after the \u003ca href=\"https://github.com/w3c/csswg-drafts/issues/9350#issuecomment-1939628591\" rel=\"noopener\"\u003eCSSWG resolved to adopt the proposal\u003c/a\u003e back in February. (\u003ca href=\"https://css-tricks.com/css-masonry-css-grid/\"\u003eRead our notes.\u003c/a\u003e)\u003c/li\u003e\n\n\n\n\u003cli\u003eThe CSS Working Group (CSSWG) \u003ca href=\"https://github.com/w3c/csswg-drafts/issues/10064#issuecomment-2165157958\" rel=\"noopener\"\u003eresolved to add an \u003ccode\u003eif()\u003c/code\u003e conditional\u003c/a\u003e to the CSS Values Module Level 5 specification. (Read our notes.)\u003c/li\u003e\n\n\n\n\u003cli\u003eThere are competing proposals for how to forge ahead with a CSS-y approach to masonry layouts. One is based on the \u003ca href=\"https://drafts.csswg.org/css-grid-3/\" rel=\"noopener\"\u003eCSS Grid Layout Module Level 3 draft specifcation\u003c/a\u003e and the other is \u003ca href=\"https://tabatkins.github.io/specs/css-masonry/\" rel=\"noopener\"\u003ea fresh new module dedicated to masonry\u003c/a\u003e. Apple has \u003ca href=\"https://webkit.org/blog/16026/css-masonry-syntax/\" rel=\"noopener\"\u003eplanted its flag\u003c/a\u003e. So \u003ca href=\"https://developer.chrome.com/blog/masonry-syntax\" rel=\"noopener\"\u003ehas Chrome\u003c/a\u003e. Let the cage-match continue!\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003ch3 id=\"resources\"\u003eResources\u003c/h3\u003e\n\n\n\u003cp\u003eThis is where I get to toot our own horn a bit because CSS-Tricks continues to place first among y’all when it comes to the blogs you follow for CSS happenings.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" loading=\"lazy\" decoding=\"async\" width=\"1980\" height=\"948\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/Screenshot-2024-10-29-at-3.17.40%E2%80%AFPM.png?resize=1980%2C948\u0026amp;ssl=1\" alt=\"\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/Screenshot-2024-10-29-at-3.17.40%E2%80%AFPM.png?w=1980\u0026amp;ssl=1 1980w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/Screenshot-2024-10-29-at-3.17.40%E2%80%AFPM.png?resize=300%2C144\u0026amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/Screenshot-2024-10-29-at-3.17.40%E2%80%AFPM.png?resize=1024%2C490\u0026amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/Screenshot-2024-10-29-at-3.17.40%E2%80%AFPM.png?resize=768%2C368\u0026amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/Screenshot-2024-10-29-at-3.17.40%E2%80%AFPM.png?resize=1536%2C735\u0026amp;ssl=1 1536w\" sizes=\"(min-width: 735px) 864px, 96vw\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eI’m also stoked to see Smashing Magazine right there as well. It was fifth in 2023 and I’d like to think that rise is \u003ca href=\"https://geoffgraham.me/smashing-magazine/\" rel=\"noopener\"\u003edue to me joining the team last year\u003c/a\u003e. Correlation implies causation, \u003cem\u003eamirite?\u003c/em\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003eBut look at Kevin Powell and Josh in the Top 10. That’s just awesome. It speaks volumes about their teaching talents and the hard work they put into “helping people fall in love with CSS” as Kevin might say it. I was able to help Kevin with a couple of his videos last year (here’s \u003ca href=\"https://www.youtube.com/watch?v=P4oOR4frV_4\u0026amp;feature=youtu.be\" rel=\"noopener\"\u003eone\u003c/a\u003e) and can tell you the guy cares a heckuva lot about making CSS approachable and fun.\u003c/p\u003e\n\n\n\n\u003cp\u003eHonestly, the rankings are not what we live for. Now that \u003ca href=\"https://css-tricks.com/css-chronicles-xlii/\"\u003eI’ve been given a second wind to work on CSS-Tricks\u003c/a\u003e, all I want is to publish things that are valuable to your everyday work as front-enders. That’s traditionally happened as a stream of daily articles but is shifting to more tutorials and resources, whether it’s \u003ca href=\"https://css-tricks.com/guides/\"\u003eguides\u003c/a\u003e (we’ve published \u003cem\u003efour\u003c/em\u003e new ones this year), \u003ca href=\"https://css-tricks.com/category/notes/\"\u003etaking notes\u003c/a\u003e on interesting developments, spotlighting good work \u003ca href=\"https://css-tricks.com/category/links/\"\u003ewith links\u003c/a\u003e, or \u003ca href=\"https://css-tricks.com/re-working-the-css-almanac/\"\u003eexpanding the ol’ Almanac\u003c/a\u003e to account for things like \u003ca href=\"https://css-tricks.com/almanac/functions/\"\u003efunctions\u003c/a\u003e, \u003ca href=\"https://css-tricks.com/almanac/rules/\"\u003eat-rules\u003c/a\u003e, and \u003ca href=\"https://css-tricks.com/almanac/pseudo-selectors/\"\u003epseudos\u003c/a\u003e (we have lots of work to do).\u003c/p\u003e\n\n\n\u003ch3 id=\"my-2024-pick\"\u003eMy 2024 Pick\u003c/h3\u003e\n\n\n\u003cp\u003eNo one asked my opinion but I’ll say it anyway: \u003cstrong\u003ePersonal blogging.\u003c/strong\u003e I’m seeing more of us in the front-end community getting back behind the keyboards of their personal websites and I’ve never been subscribed to more RSS feeds than I am today. Some started blogging as a \u003ca href=\"http://I\u0026#39;m seeing more of us in the front-end community getting back behind the keyboards of their own personal websites.\"\u003e“worry stone”\u003c/a\u003e during the 2020 lockdown. Some abandoned socials when  \u003cs\u003eTwitter\u003c/s\u003e X imploded. Some got way into the \u003ca href=\"https://css-tricks.com/de-mystifying-indieweb-on-a-wordpress-site/\"\u003eIndieWeb\u003c/a\u003e. \u003ca href=\"https://manuelmoreale.com/links-and-webrings\" rel=\"noopener\"\u003eWebrings \u003c/a\u003eand \u003ca href=\"https://geoffgraham.me/the-cheap-lazy-way-to-display-form-entries-on-the-front-end-of-a-wordpress-site/\" rel=\"noopener\"\u003eguestbooks\u003c/a\u003e are even gaining new life. Sure, it can be \u003ca href=\"https://manuelmoreale.com/discovering-new-blogs-is-stupid-hard\" rel=\"noopener\"\u003etough keeping up\u003c/a\u003e, but what a good problem to have! \u003ca href=\"https://daverupert.com/2018/01/welcome-to-rss-club/\" rel=\"noopener\"\u003eLet’s make RSS king once and for all.\u003c/a\u003e\u003c/p\u003e\n\n\n\u003ch3 id=\"thats-a-wrap\"\u003eThat’s a wrap!\u003c/h3\u003e\n\n\n\u003cp\u003eSeriously, a huge thanks to \u003ca href=\"https://sachagreif.com\" rel=\"noopener\"\u003eSacha Greif\u003c/a\u003e and the entire \u003ca href=\"https://www.devographics.com\" rel=\"noopener\"\u003eDevographics team\u003c/a\u003e for the commitment to putting this survey together every year. It’s always fun. And the visualizations are always to die for.\u003c/p\u003e\n\n          \n        \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "10 min read",
  "publishedTime": "2024-10-30T10:43:55-06:00",
  "modifiedTime": "2024-10-30T10:45:47-06:00"
}
