{
  "id": "7eca99d7-bfe8-458e-b49e-ea352b78c1d3",
  "title": "Enter picture-in-picture automatically when playing media",
  "link": "https://developer.chrome.com/blog/automatic-picture-in-picture-media-playback?hl=en",
  "description": "Chrome allows web apps playing media to automatically enter picture-in-picture.",
  "author": "",
  "published": "Wed, 05 Feb 2025 08:00:00 GMT",
  "source": "https://developer.chrome.com/static/blog/feed.xml",
  "categories": null,
  "byline": "GitHub",
  "length": 5271,
  "excerpt": "Chrome allows web apps playing media to automatically enter picture-in-picture.",
  "siteName": "Chrome for Developers",
  "favicon": "https://www.gstatic.com/devrel-devsite/prod/vdcd49b48a0f6579e36a0f52b513a1840db67522fa48e80a57742b4388044a7e9/chrome/images/favicon.png",
  "text": "Stay organized with collections Save and categorize content based on your preferences. Published: February 5, 2025 From Chrome 120, video conferencing web apps can automatically open a picture-in-picture window when the user switches focus from their current tab. This is useful for presenters who want to see and interact with participants in real time while presenting a document or using other tabs or windows. See Automatic picture-in-picture for video conferencing web apps for details. From Chrome 134, web apps that play audio or video can automatically enter picture-in-picture mode. This means that music and video players on the web can now seamlessly switch to a mini player window when the user switches tabs, eliminating the need for manual activation. A picture-in-picture window opened and closed automatically when Spotify user switches tabs. To support these media playback use cases, from Chrome 134 desktop web apps can automatically enter picture-in-picture, with a few restrictions to ensure a positive user experience. A web app is only eligible for automatic picture-in-picture for media playback if it meets all of the following conditions: The top frame URL is safe according to the Safe Browsing service. The media lives in the top frame. The media has been audible within the last two seconds. The media has audio focus. The media is playing. A media session action handler for the \"enterpictureinpicture\" action has been registered. The user's Media Engagement Index threshold has been exceeded, indicating that the user frequently consumes media in this web app. This applies if the user's browser setting is \"Can ask to enter picture-in-picture\". If the user explicitly allows the web app to enter picture-in-picture, this condition does not apply. Automatic picture-in-picture setting in Chrome browser site information pane. The bug 386193409 tracks the implementation of surfacing conditions to make debugging and implementation easier. Note that if another picture-in-picture window is already open, Chrome doesn't trigger automatic picture-in-picture. This rule doesn't apply if the existing picture-in-picture window was opened automatically and is about to close. When a web app meets the requirements, switching focus to another tab triggers the media session action handler callback function for the \"enterpictureinpicture\" action. This lets the web app open a picture-in-picture window without a user gesture. The user may then be presented with a permission dialog, asking if they would like to allow the site to enter picture-in-picture automatically every time, only this time, or never. User is asked whether entering picture-in-picture automatically is allowed. You can either use the Picture-in-Picture API for \u003cvideo\u003e to open a picture-in-picture window from an HTML \u003cvideo\u003e element, or the Document Picture-in-Picture API to open an always-on-top window to populate with arbitrary HTML content. The picture-in-picture window is not focused when opened and automatically closed when the page becomes visible again. The following example shows you how to play an HTML \u003cvideo\u003e element when a user clicks a button. Then, safely register a media session action handler for the \"enterpictureinpicture\" action with a callback function that opens a picture-in-picture window. This window contains the video with the Picture-in-Picture API for \u003cvideo\u003e. const video = document.querySelector(\"video\"); async function onPlayButtonClick() { // Play video. await video.play(); } try { // Request video to automatically enter picture-in-picture when eligible. navigator.mediaSession.setActionHandler(\"enterpictureinpicture\", async () =\u003e { await video.requestPictureInPicture(); }); } catch (error) { console.log(\"The enterpictureinpicture action is not yet supported.\"); } Try the VideoJS player demo which showcases the Document Picture-in-Picture API or play with the Video Media Session and Audio Media Session samples. If you have feedback or encounter any issues, you can share them at crbug.com. Resources Spec changes ChromeStatus entry Intent to Ship Chromium issue Acknowledgments Thanks to Benjamin Keen and Frank Liberato for their reviews. Except as otherwise noted, the content of this page is licensed under the Creative Commons Attribution 4.0 License, and code samples are licensed under the Apache 2.0 License. For details, see the Google Developers Site Policies. Java is a registered trademark of Oracle and/or its affiliates. Last updated 2025-02-05 UTC. [[[\"Easy to understand\",\"easyToUnderstand\",\"thumb-up\"],[\"Solved my problem\",\"solvedMyProblem\",\"thumb-up\"],[\"Other\",\"otherUp\",\"thumb-up\"]],[[\"Missing the information I need\",\"missingTheInformationINeed\",\"thumb-down\"],[\"Too complicated / too many steps\",\"tooComplicatedTooManySteps\",\"thumb-down\"],[\"Out of date\",\"outOfDate\",\"thumb-down\"],[\"Samples / code issue\",\"samplesCodeIssue\",\"thumb-down\"],[\"Other\",\"otherDown\",\"thumb-down\"]],[\"Last updated 2025-02-05 UTC.\"],[],[]]",
  "image": "https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/image/thumb.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv role=\"main\" id=\"main-content\" has-sidebar=\"\"\u003e\n          \n          \n          \n          \u003cdevsite-content\u003e\n            \n              \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003carticle\u003e\n  \n  \n  \n  \n  \n\n  \n  \n    \n  \u003cdevsite-feature-tooltip ack-key=\"AckCollectionsBookmarkTooltipDismiss\" analytics-category=\"Site-Wide Custom Events\" analytics-action-show=\"Callout Profile displayed\" analytics-action-close=\"Callout Profile dismissed\" analytics-label=\"Create Collection Callout\" dismiss-button=\"true\" id=\"devsite-collections-dropdown\" dismiss-button-text=\"Dismiss\" close-button-text=\"Got it\"\u003e\n\n    \n    \u003cdevsite-bookmark\u003e\u003c/devsite-bookmark\u003e\n\n    \u003cspan slot=\"popout-heading\"\u003e\n      \n      Stay organized with collections\n    \u003c/span\u003e\n    \u003cspan slot=\"popout-contents\"\u003e\n      \n      Save and categorize content based on your preferences.\n    \u003c/span\u003e\n  \u003c/devsite-feature-tooltip\u003e\n  \n  \n\n  \u003cdevsite-toc depth=\"2\" devsite-toc-embedded=\"\"\u003e\n  \u003c/devsite-toc\u003e\n  \n    \n  \n\n  \n\n\n\n\n\n\n\u003cdiv\u003e\n\n  \n    \n\n\n\n\n\u003cdiv translate=\"no\"\u003e\n        \n          \u003cp\u003e\u003cimg alt=\"Fran√ßois Beaufort\" src=\"https://web.dev/images/authors/beaufortfrancois.jpg\" decoding=\"async\" height=\"64\" loading=\"lazy\" width=\"64\"/\u003e\u003c/p\u003e\n      \u003c/div\u003e\n\n\u003cp\u003e\n  Published: February 5, 2025\n\u003c/p\u003e\n\n\n\u003cp\u003eFrom Chrome 120, video conferencing web apps can automatically open a picture-in-picture window when the user switches focus from their current tab. This is useful for presenters who want to see and interact with participants in real time while presenting a document or using other tabs or windows. See \u003ca href=\"https://developer.chrome.com/blog/automatic-picture-in-picture\"\u003eAutomatic picture-in-picture for video conferencing web apps\u003c/a\u003e for details.\u003c/p\u003e\n\n\u003cp\u003eFrom Chrome 134, web apps that play audio or video can automatically enter picture-in-picture mode. This means that music and video players on the web can now seamlessly switch to a mini player window when the user switches tabs, eliminating the need for manual activation.\u003c/p\u003e\n\n\u003cfigure\u003e\n  \u003cvideo autoplay=\"\" controls=\"\" loop=\"\" muted=\"\" playsinline=\"\" width=\"1280\" height=\"776\"\u003e\n    \u003csource src=\"https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/video/autopip-spotify.mp4\" type=\"video/mp4\"/\u003e\n  \u003c/video\u003e\n  \u003cfigcaption\u003eA picture-in-picture window opened and closed automatically when Spotify user switches tabs.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eTo support these media playback use cases, from Chrome 134 desktop web apps can automatically enter picture-in-picture, with a few restrictions to ensure a positive user experience. A web app is only eligible for automatic picture-in-picture for media playback if it meets all of the following conditions:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eThe top frame URL is safe according to the Safe Browsing service.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe media lives in the top frame.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe media has been audible within the last two seconds.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe media has audio focus.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe media is playing.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eA \u003ca href=\"https://www.w3.org/TR/mediasession/#ref-for-enumdef-mediasessionaction\"\u003emedia session action\u003c/a\u003e handler for the \u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026#34;enterpictureinpicture\u0026#34;\u003c/code\u003e action has been registered.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe user\u0026#39;s \u003ca href=\"https://developer.chrome.com/blog/autoplay#media_engagement_index\"\u003eMedia Engagement Index\u003c/a\u003e threshold has been exceeded, indicating that the user frequently consumes media in this web app. This applies if the user\u0026#39;s browser setting is \u0026#34;Can ask to enter picture-in-picture\u0026#34;. If the user explicitly allows the web app to enter picture-in-picture, this condition does not apply.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/image/browser-setting.jpg\" alt=\"The automatic picture-in-picture setting in the Chrome browser site information pane.\" width=\"1610\" height=\"1044\" srcset=\"https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/image/browser-setting_36.jpg 36w,https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/image/browser-setting_48.jpg 48w,https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/image/browser-setting_72.jpg 72w,https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/image/browser-setting_96.jpg 96w,https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/image/browser-setting_480.jpg 480w,https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/image/browser-setting_720.jpg 720w,https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/image/browser-setting_856.jpg 856w,https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/image/browser-setting_960.jpg 960w,https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/image/browser-setting_1440.jpg 1440w,https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/image/browser-setting_1920.jpg 1920w,https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/image/browser-setting_2880.jpg 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n  \u003cfigcaption\u003eAutomatic picture-in-picture setting in Chrome browser site information pane.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://issues.chromium.org/issues/386193409\"\u003ebug 386193409\u003c/a\u003e tracks the implementation of surfacing conditions to make debugging and implementation easier.\u003c/p\u003e\n\n\u003cp\u003eNote that if another picture-in-picture window is already open, Chrome doesn\u0026#39;t trigger automatic picture-in-picture. This rule doesn\u0026#39;t apply if the existing picture-in-picture window was opened automatically and is about to close.\u003c/p\u003e\n\n\u003cp\u003eWhen a web app meets the requirements, switching focus to another tab triggers the media session action handler callback function for the \u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026#34;enterpictureinpicture\u0026#34;\u003c/code\u003e action. This lets the web app open a picture-in-picture window without a user gesture. The user may then be presented with a permission dialog, asking if they would like to allow the site to enter picture-in-picture automatically every time, only this time, or never.\u003c/p\u003e\n\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/image/pip-window-popup.jpg\" alt=\"A permission overlay in the picture-in-picture window asking the user if they would like to allow the site to enter picture-in-picture automatically.\" width=\"1428\" height=\"872\" srcset=\"https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/image/pip-window-popup_36.jpg 36w,https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/image/pip-window-popup_48.jpg 48w,https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/image/pip-window-popup_72.jpg 72w,https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/image/pip-window-popup_96.jpg 96w,https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/image/pip-window-popup_480.jpg 480w,https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/image/pip-window-popup_720.jpg 720w,https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/image/pip-window-popup_856.jpg 856w,https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/image/pip-window-popup_960.jpg 960w,https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/image/pip-window-popup_1440.jpg 1440w,https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/image/pip-window-popup_1920.jpg 1920w,https://developer.chrome.com/static/blog/automatic-picture-in-picture-media-playback/image/pip-window-popup_2880.jpg 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n  \u003cfigcaption\u003eUser is asked whether entering picture-in-picture automatically is allowed.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eYou can either use the \u003ca href=\"https://developer.chrome.com/blog/watch-video-using-picture-in-picture\"\u003ePicture-in-Picture API for \u0026lt;video\u0026gt;\u003c/a\u003e to open a picture-in-picture window from an HTML \u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026lt;video\u0026gt;\u003c/code\u003e element, or the \u003ca href=\"https://developer.chrome.com/docs/web-platform/document-picture-in-picture\"\u003eDocument Picture-in-Picture API\u003c/a\u003e to open an always-on-top window to populate with arbitrary HTML content. The picture-in-picture window is not focused when opened and automatically closed when the page becomes visible again.\u003c/p\u003e\n\n\u003cp\u003eThe following example shows you how to play an HTML \u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026lt;video\u0026gt;\u003c/code\u003e element when a user clicks a button. Then, safely register a media session action handler for the \u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026#34;enterpictureinpicture\u0026#34;\u003c/code\u003e action with a callback function that opens a picture-in-picture window. This window contains the video with the Picture-in-Picture API for \u0026lt;video\u0026gt;.\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"JavaScript\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003econst\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003evideo\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003edocument\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003equerySelector\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;video\u0026#34;\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\n\n\u003cspan\u003easync\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003efunction\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eonPlayButtonClick\u003c/span\u003e\u003cspan\u003e()\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e// Play video.\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003eawait\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003evideo\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eplay\u003c/span\u003e\u003cspan\u003e();\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\n\u003cspan\u003etry\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e// Request video to automatically enter picture-in-picture when eligible.\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003enavigator\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003emediaSession\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003esetActionHandler\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;enterpictureinpicture\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003easync\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e()\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u0026gt;\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003eawait\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003evideo\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003erequestPictureInPicture\u003c/span\u003e\u003cspan\u003e();\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e});\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ecatch\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eerror\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003econsole\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003elog\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;The enterpictureinpicture action is not yet supported.\u0026#34;\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003cp\u003eTry the \u003ca href=\"https://document-picture-in-picture-api.glitch.me/\"\u003eVideoJS player demo\u003c/a\u003e which showcases the Document Picture-in-Picture API or play with the \u003ca href=\"https://googlechrome.github.io/samples/media-session/video.html\"\u003eVideo Media Session\u003c/a\u003e and \u003ca href=\"https://googlechrome.github.io/samples/media-session/audio.html\"\u003eAudio Media Session\u003c/a\u003e samples.\u003c/p\u003e\n\n\n\n\u003cp\u003eIf you have feedback or encounter any issues, you can share them at \u003ca href=\"https://issues.chromium.org/issues/new?noWizard=true\u0026amp;template=1942032\u0026amp;component=1456334\u0026amp;pli=1\"\u003ecrbug.com\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"resources\" data-text=\"Resources\" tabindex=\"-1\"\u003eResources\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://github.com/w3c/mediasession/pull/295\"\u003eSpec changes\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://chromestatus.com/feature/6245717716238336\"\u003eChromeStatus entry\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://groups.google.com/a/chromium.org/g/blink-dev/c/BEhYD8v4zY0/m/ZcINHmMMBAAJ\"\u003eIntent to Ship\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://issues.chromium.org/issues/368058093\"\u003eChromium issue\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"acknowledgments\" data-text=\"Acknowledgments\" tabindex=\"-1\"\u003eAcknowledgments\u003c/h2\u003e\n\n\u003cp\u003eThanks to Benjamin Keen and Frank Liberato for their reviews.\u003c/p\u003e\n\n  \n\n  \n\u003c/div\u003e\n\n  \n\n  \n    \n    \n      \n    \u003cdevsite-thumb-rating position=\"footer\"\u003e\n    \u003c/devsite-thumb-rating\u003e\n  \n       \n    \n    \n  \n\n  \n  \n\u003c/article\u003e\n\n\n\u003cdevsite-content-footer\u003e\n  \u003cp\u003eExcept as otherwise noted, the content of this page is licensed under the \u003ca href=\"https://creativecommons.org/licenses/by/4.0/\"\u003eCreative Commons Attribution 4.0 License\u003c/a\u003e, and code samples are licensed under the \u003ca href=\"https://www.apache.org/licenses/LICENSE-2.0\"\u003eApache 2.0 License\u003c/a\u003e. For details, see the \u003ca href=\"https://developers.google.com/site-policies\"\u003eGoogle Developers Site Policies\u003c/a\u003e. Java is a registered trademark of Oracle and/or its affiliates.\u003c/p\u003e\n  \u003cp\u003eLast updated 2025-02-05 UTC.\u003c/p\u003e\n\u003c/devsite-content-footer\u003e\n\n\n\u003cdevsite-notification\u003e\n\u003c/devsite-notification\u003e\n\n\n  \n\u003cp\u003e\n  \n  \n    \u003ctemplate\u003e\n      [[[\u0026#34;Easy to understand\u0026#34;,\u0026#34;easyToUnderstand\u0026#34;,\u0026#34;thumb-up\u0026#34;],[\u0026#34;Solved my problem\u0026#34;,\u0026#34;solvedMyProblem\u0026#34;,\u0026#34;thumb-up\u0026#34;],[\u0026#34;Other\u0026#34;,\u0026#34;otherUp\u0026#34;,\u0026#34;thumb-up\u0026#34;]],[[\u0026#34;Missing the information I need\u0026#34;,\u0026#34;missingTheInformationINeed\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Too complicated / too many steps\u0026#34;,\u0026#34;tooComplicatedTooManySteps\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Out of date\u0026#34;,\u0026#34;outOfDate\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Samples / code issue\u0026#34;,\u0026#34;samplesCodeIssue\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Other\u0026#34;,\u0026#34;otherDown\u0026#34;,\u0026#34;thumb-down\u0026#34;]],[\u0026#34;Last updated 2025-02-05 UTC.\u0026#34;],[],[]]\n    \u003c/template\u003e\n  \n\u003c/p\u003e\n            \n          \u003c/devsite-content\u003e\n        \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": null,
  "modifiedTime": null
}
