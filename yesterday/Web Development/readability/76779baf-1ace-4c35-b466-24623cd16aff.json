{
  "id": "76779baf-1ace-4c35-b466-24623cd16aff",
  "title": "Improved navigation and filtering in the DevTools Performance panel",
  "link": "https://developer.chrome.com/blog/devtools-navigate-and-filter?hl=en",
  "description": "DevTools Performance panel updates make it easier to navigate within and filter traces.",
  "author": "",
  "published": "Wed, 19 Mar 2025 07:00:00 GMT",
  "source": "https://developer.chrome.com/static/blog/feed.xml",
  "categories": null,
  "byline": "",
  "length": 5760,
  "excerpt": "DevTools Performance panel updates make it easier to navigate within and filter traces.",
  "siteName": "Chrome for Developers",
  "favicon": "https://www.gstatic.com/devrel-devsite/prod/v17c4f87be230ffee20589ee6dca0a2318ead9eddb228ec5c58233202ff69a933/chrome/images/favicon.png",
  "text": "Improved navigation and filtering in the DevTools Performance panel Stay organized with collections Save and categorize content based on your preferences. Published: March 19, 2025 In our continued coverage of the initiative to improve Chrome performance tooling, we're excited to announce more upgrades to how you can interact with the DevTools Performance panel. These improvements are designed to enhance your ability to navigate performance traces and reduce irrelevant noise, so you can concentrate on quickly tracking down and resolving performance issues. We've heard feedback from many users that scrolling and zooming in the Performance panel can be unintuitive. While many long-time users are used to it, many people expect a scroll gesture to, well, scroll, and not zoom in and out of the trace. A new option under the allows switching between the existing \"Classic\" scrolling and the new \"Modern\" approach. In Classic mode, scrolling (by trackpad or scroll wheel) continues to zoom in and out, while holding shift and scrolling will scroll up and down the flamechart. In the new Modern mode, these are reversed: scrolling now scrolls the flamechart, while shift and scrolling zooms in and out. Keyboard shortcuts (like using WASD to navigate the trace) will continue to work unchanged. Bidirectional overview Near the top of the Performance panel is the CPU chart, part of the timeline overview. It displays estimates of CPU usage during the trace recording, broken down by work type (for instance, orange for script execution, purple for rendering operations). This gives an overview—sometimes referred to as a minimap—of the trace, providing a high-level summary of the entire timeline even as you zoom deeper to investigate particular issues. However, it can be easy to lose your exact place in the minimap when primarily looking at the trace—and vice versa—so we've introduced new features that help tie the overview to the zoomed-in view. Now, when you hover over the overview, a corresponding vertical line appears in the flamechart, marking the same point in time in the flamechart: Similarly, hovering over entries in the flamechart will now highlight the corresponding part of the CPU chart. This is great for seeing exactly which tasks are causing those CPU spikes. Filter the trace Debugging performance issues usually involves sifting through a large amount of data. To help you focus on the most relevant information, we've improved the ability to filter out noise. Last year, we introduced the ability to add scripts in the Performance panel to the DevTools ignore list, filtering out less relevant entries in the flamechart. For example, if you're debugging the performance of a component in your page, it can be distracting if the callstack of your framework is deep enough to require you to scroll up and down the performance panel, and you often want to collapse much of that callstack to focus on the important parts. You can right-click an entry in the flamechart and select Add script to ignore list, which adds the script to the DevTools ignore list and collapses any entries from it in the flamechart. But now you can also manually edit the ignore list directly from the at the top of the Performance panel. Ignore-list regexes are shared across DevTools—so matched scripts with be skipped when debugging in the Sources panel and collapsed into single entries in the flamechart—and the list is persistent across DevTools sessions. This way you get fine-grained control over which files to ignore, and a handy place to enable and disable rules as you work. Dim 3rd-party scripts Third-party scripts are common on websites, but they can often be out of our control, or irrelevant for a particular debugging session. The new Dim 3rd parties option at the top of the Performance panel will gray out third-party script and network activity in the timeline, reducing visual clutter and allowing you to focus on first-party performance contributions. But sometimes you want even more control, like concentrating on a particular third party, or even only contributions from your own API or CDN. At the bottom of the panel in the Summary tab, is a breakdown of first and third parties that DevTools is able to find in the page. Hovering over each entity in the list will gray-out any activity that isn't from that entity. Conclusion These new features should help you better navigate the Performance panel and filter out the noise to concentrate on the parts of the trace that are important to you. Try these features out and let us know how they could be further improved or what other improvements you'd love to see. Except as otherwise noted, the content of this page is licensed under the Creative Commons Attribution 4.0 License, and code samples are licensed under the Apache 2.0 License. For details, see the Google Developers Site Policies. Java is a registered trademark of Oracle and/or its affiliates. Last updated 2025-03-19 UTC. [[[\"Easy to understand\",\"easyToUnderstand\",\"thumb-up\"],[\"Solved my problem\",\"solvedMyProblem\",\"thumb-up\"],[\"Other\",\"otherUp\",\"thumb-up\"]],[[\"Missing the information I need\",\"missingTheInformationINeed\",\"thumb-down\"],[\"Too complicated / too many steps\",\"tooComplicatedTooManySteps\",\"thumb-down\"],[\"Out of date\",\"outOfDate\",\"thumb-down\"],[\"Samples / code issue\",\"samplesCodeIssue\",\"thumb-down\"],[\"Other\",\"otherDown\",\"thumb-down\"]],[\"Last updated 2025-03-19 UTC.\"],[],[]]",
  "image": "https://developer.chrome.com/static/blog/devtools-navigate-and-filter/images/hero.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv role=\"main\" id=\"main-content\" has-sidebar=\"\"\u003e\n          \n          \n          \n          \u003cdevsite-content\u003e\n            \n              \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003carticle\u003e\n  \n  \n  \n  \n  \n\n  \n  \n    \u003ch2 tabindex=\"-1\"\u003e\n      Improved navigation and filtering in the DevTools Performance panel\n      \n  \u003cp data-nosnippet=\"\"\u003e\n    \u003cdevsite-feature-tooltip ack-key=\"AckCollectionsBookmarkTooltipDismiss\" analytics-category=\"Site-Wide Custom Events\" analytics-action-show=\"Callout Profile displayed\" analytics-action-close=\"Callout Profile dismissed\" analytics-label=\"Create Collection Callout\" dismiss-button=\"true\" id=\"devsite-collections-dropdown\" dismiss-button-text=\"Dismiss\" close-button-text=\"Got it\"\u003e\n\n    \n    \u003cdevsite-bookmark\u003e\u003c/devsite-bookmark\u003e\n\n    \u003cspan slot=\"popout-heading\"\u003e\n      \n      Stay organized with collections\n    \u003c/span\u003e\n    \u003cspan slot=\"popout-contents\"\u003e\n      \n      Save and categorize content based on your preferences.\n    \u003c/span\u003e\n  \u003c/devsite-feature-tooltip\u003e\n  \u003c/p\u003e\n  \n    \u003c/h2\u003e\n  \n  \n\n  \u003cdevsite-toc depth=\"2\" devsite-toc-embedded=\"\"\u003e\n  \u003c/devsite-toc\u003e\n  \n    \n  \n\n  \n\n\n\n\n\n\n\u003cdiv\u003e\n\n  \n    \n\n\n\n\n\u003cdiv translate=\"no\"\u003e\n        \n          \u003cp\u003e\u003cimg alt=\"Brendan Kenny\" src=\"https://web.dev/images/authors/bckenny.jpg\" decoding=\"async\" height=\"64\" loading=\"lazy\" width=\"64\"/\u003e\u003c/p\u003e\n      \u003c/div\u003e\n\n\u003cp\u003e\n  Published: March 19, 2025\n\u003c/p\u003e\n\n\n\n\n\u003cp\u003eIn our continued coverage of the \u003ca href=\"https://developer.chrome.com/blog/perf-tooling-2024\"\u003einitiative to improve Chrome performance tooling\u003c/a\u003e, we\u0026#39;re excited to announce more upgrades to how you can interact with the DevTools Performance panel. These improvements are designed to enhance your ability to navigate performance traces and reduce irrelevant noise, so you can concentrate on quickly tracking down and resolving performance issues.\u003c/p\u003e\n\n\n\n\u003cp\u003eWe\u0026#39;ve heard feedback from many users that scrolling and zooming in the Performance panel can be unintuitive. While many long-time users are used to it, many people expect a scroll gesture to, well, scroll, and not zoom in and out of the trace.\u003c/p\u003e\n\n\u003cp\u003eA new option under the  allows switching between the existing \u0026#34;Classic\u0026#34; scrolling and the new \u0026#34;Modern\u0026#34; approach.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://developer.chrome.com/static/blog/devtools-navigate-and-filter/images/shortcuts.png\" alt=\"The shortcuts options menu, containing a radio button selection between modern and classic scrolling\" width=\"461\" height=\"484\"/\u003e\u003c/p\u003e\n\n\u003cp\u003eIn Classic mode, scrolling (by trackpad or scroll wheel) continues to zoom in and out, while holding shift and scrolling will scroll up and down the flamechart.\u003c/p\u003e\n\n\u003cp\u003eIn the new Modern mode, these are reversed: scrolling now scrolls the flamechart, while shift and scrolling zooms in and out.\u003c/p\u003e\n\n\u003cp\u003eKeyboard shortcuts (like using WASD to navigate the trace) will continue to work unchanged.\u003c/p\u003e\n\n\u003ch2 id=\"bidirectional_overview\" data-text=\"Bidirectional overview\" tabindex=\"-1\"\u003eBidirectional overview\u003c/h2\u003e\n\n\u003cp\u003eNear the top of the \u003cstrong\u003ePerformance\u003c/strong\u003e panel is the \u003cstrong\u003eCPU\u003c/strong\u003e chart, part of the timeline overview. It displays estimates of CPU usage during the trace recording, broken down by work type (for instance, orange for script execution, purple for rendering operations).\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://developer.chrome.com/static/blog/devtools-navigate-and-filter/images/overview.png\" alt=\"The top of the DevTools Performance panel, visualizing CPU activity in multiple colors\" width=\"800\" height=\"118\"/\u003e\u003c/p\u003e\n\n\u003cp\u003eThis gives an overview—sometimes referred to as a minimap—of the trace, providing a high-level summary of the entire timeline even as you zoom deeper to investigate particular issues.\u003c/p\u003e\n\n\u003cp\u003eHowever, it can be easy to lose your exact place in the minimap when primarily looking at the trace—and vice versa—so we\u0026#39;ve introduced new features that help tie the overview to the zoomed-in view. Now, when you hover over the overview, a corresponding vertical line appears in the flamechart, marking the same point in time in the flamechart:\u003c/p\u003e\n\n\u003cvideo autoplay=\"\" loop=\"\" muted=\"\" playsinline=\"\" controls=\"\" width=\"800\" height=\"640\"\u003e\u003csource src=\"https://developer.chrome.com/static/blog/devtools-navigate-and-filter/images/vertical-marker.mp4\" type=\"video/mp4\"/\u003e\u003c/video\u003e\n\n\u003cp\u003eSimilarly, hovering over entries in the flamechart will now highlight the corresponding part of the \u003cstrong\u003eCPU\u003c/strong\u003e chart. This is great for seeing exactly which tasks are causing those CPU spikes.\u003c/p\u003e\n\n\u003cvideo autoplay=\"\" loop=\"\" muted=\"\" playsinline=\"\" controls=\"\" width=\"480\" height=\"480\"\u003e\u003csource src=\"https://developer.chrome.com/static/blog/devtools-navigate-and-filter/images/cpu-highlighting.mp4\" type=\"video/mp4\"/\u003e\u003c/video\u003e\n\n\u003ch2 id=\"filter_the_trace\" data-text=\"Filter the trace\" tabindex=\"-1\"\u003eFilter the trace\u003c/h2\u003e\n\n\u003cp\u003eDebugging performance issues usually involves sifting through a large amount of data. To help you focus on the most relevant information, we\u0026#39;ve improved the ability to filter out noise.\u003c/p\u003e\n\n\u003cp\u003eLast year, \u003ca href=\"https://developer.chrome.com/blog/devtools-customization#ignore-list\"\u003ewe introduced the ability to add scripts in the Performance panel to the DevTools ignore list\u003c/a\u003e, filtering out less relevant entries in the flamechart. For example, if you\u0026#39;re debugging the performance of a component in your page, it can be distracting if the callstack of your framework is deep enough to require you to scroll up and down the performance panel, and you often want to collapse much of that callstack to focus on the important parts.\u003c/p\u003e\n\n\u003cp\u003eYou can right-click an entry in the flamechart and select \u003cstrong\u003eAdd script to ignore list\u003c/strong\u003e, which adds the script to the DevTools \u003ca href=\"https://developer.chrome.com/docs/devtools/settings/ignore-list\"\u003eignore list\u003c/a\u003e and collapses any entries from it in the flamechart.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://developer.chrome.com/static/blog/devtools-navigate-and-filter/images/ignore-script.png\" alt=\"The right-click menu on an entry in the Performance panel, with the \u0026#39;Add script to ignore list\u0026#39; option highlighted\" width=\"393\" height=\"319\"/\u003e\u003c/p\u003e\n\n\u003cp\u003eBut now you can also manually edit the ignore list directly from the  at the top of the \u003cstrong\u003ePerformance\u003c/strong\u003e panel. Ignore-list regexes are shared across DevTools—so matched scripts with be skipped when debugging in the Sources panel and collapsed into single entries in the flamechart—and the list is persistent across DevTools sessions.\u003c/p\u003e\n\n\u003cp\u003eThis way you get fine-grained control over which files to ignore, and a handy place to enable and disable rules as you work.\u003c/p\u003e\n\n\u003cvideo autoplay=\"\" loop=\"\" muted=\"\" playsinline=\"\" controls=\"\" width=\"800\" height=\"800\"\u003e\u003csource src=\"https://developer.chrome.com/static/blog/devtools-navigate-and-filter/images/ignore-script.mp4\" type=\"video/mp4\"/\u003e\u003c/video\u003e\n\n\u003ch2 id=\"dim_3rd-party_scripts\" data-text=\"Dim 3rd-party scripts\" tabindex=\"-1\"\u003eDim 3rd-party scripts\u003c/h2\u003e\n\n\u003cp\u003e\nThird-party scripts are common on websites, but they can often be out of our control, or irrelevant for a particular debugging session. The new  \u003cstrong\u003eDim 3rd parties\u003c/strong\u003e option at the top of the Performance panel will gray out third-party script and network activity in the timeline, reducing visual clutter and allowing you to focus on first-party performance contributions.\u003c/p\u003e\n\n\u003cvideo autoplay=\"\" loop=\"\" muted=\"\" playsinline=\"\" controls=\"\" width=\"800\" height=\"801\"\u003e\u003csource src=\"https://developer.chrome.com/static/blog/devtools-navigate-and-filter/images/dim-third-parties.mp4\" type=\"video/mp4\"/\u003e\u003c/video\u003e\n\n\u003cp\u003eBut sometimes you want even more control, like concentrating on a particular third party, or even only contributions from your own API or CDN. At the bottom of the panel in the \u003cstrong\u003eSummary\u003c/strong\u003e tab, is a breakdown of first and third parties that DevTools is able to find in the page. Hovering over each entity in the list will gray-out any activity that isn\u0026#39;t from that entity.\u003c/p\u003e\n\n\u003ch2 id=\"conclusion\" data-text=\"Conclusion\" tabindex=\"-1\"\u003eConclusion\u003c/h2\u003e\n\n\u003cp\u003eThese new features should help you better navigate the Performance panel and filter out the noise to concentrate on the parts of the trace that are important to you. Try these features out and \u003ca href=\"https://crbug.com/329541444\"\u003elet us know\u003c/a\u003e how they could be further improved or what other improvements you\u0026#39;d love to see.\u003c/p\u003e\n\n  \n\n  \n\u003c/div\u003e\n\n  \n\n  \n    \n    \n      \n    \u003cdevsite-thumb-rating position=\"footer\"\u003e\n    \u003c/devsite-thumb-rating\u003e\n  \n       \n    \n    \n  \n\n  \n  \n\u003c/article\u003e\n\n\n\u003cdevsite-content-footer\u003e\n  \u003cp\u003eExcept as otherwise noted, the content of this page is licensed under the \u003ca href=\"https://creativecommons.org/licenses/by/4.0/\"\u003eCreative Commons Attribution 4.0 License\u003c/a\u003e, and code samples are licensed under the \u003ca href=\"https://www.apache.org/licenses/LICENSE-2.0\"\u003eApache 2.0 License\u003c/a\u003e. For details, see the \u003ca href=\"https://developers.google.com/site-policies\"\u003eGoogle Developers Site Policies\u003c/a\u003e. Java is a registered trademark of Oracle and/or its affiliates.\u003c/p\u003e\n  \u003cp\u003eLast updated 2025-03-19 UTC.\u003c/p\u003e\n\u003c/devsite-content-footer\u003e\n\n\n\u003cdevsite-notification\u003e\n\u003c/devsite-notification\u003e\n\n\n  \n\u003cp\u003e\n  \n  \n    \u003ctemplate\u003e\n      [[[\u0026#34;Easy to understand\u0026#34;,\u0026#34;easyToUnderstand\u0026#34;,\u0026#34;thumb-up\u0026#34;],[\u0026#34;Solved my problem\u0026#34;,\u0026#34;solvedMyProblem\u0026#34;,\u0026#34;thumb-up\u0026#34;],[\u0026#34;Other\u0026#34;,\u0026#34;otherUp\u0026#34;,\u0026#34;thumb-up\u0026#34;]],[[\u0026#34;Missing the information I need\u0026#34;,\u0026#34;missingTheInformationINeed\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Too complicated / too many steps\u0026#34;,\u0026#34;tooComplicatedTooManySteps\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Out of date\u0026#34;,\u0026#34;outOfDate\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Samples / code issue\u0026#34;,\u0026#34;samplesCodeIssue\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Other\u0026#34;,\u0026#34;otherDown\u0026#34;,\u0026#34;thumb-down\u0026#34;]],[\u0026#34;Last updated 2025-03-19 UTC.\u0026#34;],[],[]]\n    \u003c/template\u003e\n  \n\u003c/p\u003e\n            \n          \u003c/devsite-content\u003e\n        \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": null,
  "modifiedTime": null
}
