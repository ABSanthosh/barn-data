{
  "id": "d0a095ee-c5b3-4803-aa2c-b49c5f3201d6",
  "title": "Enabling chrome.userScripts in Chrome Extensions is changing",
  "link": "https://developer.chrome.com/blog/chrome-userscript?hl=en",
  "description": "We are making a series of changes to the chrome.userScripts API.",
  "author": "",
  "published": "Thu, 29 May 2025 07:00:00 GMT",
  "source": "https://developer.chrome.com/static/blog/feed.xml",
  "categories": null,
  "byline": "Justin Lulejian",
  "length": 5235,
  "excerpt": "We are making a series of changes to the chrome.userScripts API.",
  "siteName": "Chrome for Developers",
  "favicon": "https://www.gstatic.com/devrel-devsite/prod/vd980a342b8e3e77c07209be506f8385246f583d6eec83ceb07569bbf26f054dc/chrome/images/favicon.png",
  "text": "Skip to main content Enabling chrome.userScripts in Chrome Extensions is changing Stay organized with collections Save and categorize content based on your preferences. Published: May 29, 2025 From Chrome 138 there's a series of changes to user scripts (chrome.userScripts API) in Chrome Extensions, focusing on enhancing security and providing users with more granular control. This update addresses valuable feedback received from the developer community and their users. Previously, enabling user scripts required turning on the global Developer Mode toggle within Chrome. We've heard from you that this approach had some key limitations as it relates to security, functionality, and enterprise. Specifically, the reliance on the global Developer Mode toggle had the following issues: Security Risks: Once developer mode was enabled, new extensions which requested the userScripts permission automatically gained the ability to run user scripts, potentially without explicit user consent or awareness of the risks associated with each new extension. Functionality Overload: The Developer Mode toggle controls several other developer-oriented permissions, making it less precise for managing the specific permission to run user scripts. Enterprise Challenges: Many enterprises prefer not to enable developer mode on managed devices, which effectively prevents them from deploying or using extensions that rely on the chrome.userScripts API. To address these concerns and improve the security and usability of Chrome extensions, we are transitioning from the global Developer Mode toggle to a new per-extension Allow User Scripts toggle. This new toggle, accessible on the extension detail page from Chrome 138 (chrome://extensions/?id=\u003cyour_extension_id\u003e), lets users explicitly control the extension's ability to run user scripts on an individual extension basis. This provides more granular control and reduces potential security risks. During the transition period, versions of Chrome prior to 138 will continue to use the Developer Mode toggle, while versions at 138 or newer will use the new per-extension Allow User Scripts toggle. On the first launch of 138 and newer a one-time migration will automatically enable the new toggle for existing extensions that have been granted the userScripts permission if the Developer Mode toggle is enabled. All new extensions installed after the migration will default to the Allow User Scripts toggle being set to off. In addition, to check the availability of the User Scripts API, extensions previously had to attempt to access chrome.userScripts. This threw an error if developer mode was disabled. From Chrome 138, the behavior aligns with other APIs and the API is undefined if unavailable. Nonetheless, we'd recommend this check to determine if the API is available since it covers all Chrome versions: function isUserScriptsAvailable() { try { // Method call which throws if API permission or toggle is not enabled. chrome.userScripts.getScripts(); return true; } catch { // Not available. return false; } } Administrators who previously managed user scripts by disabling developer mode should now use the blocked_permissions policy or the Google Admin console to control extensions that use the chrome.userScripts API. We are evaluating further changes to how chrome.userScripts access can be controlled for force-installed extensions so stay tuned to administrator release notes for updates. We believe this change will provide users with more precise control over extension capabilities, leading to enhanced security and a more transparent experience. We encourage extension developers to update their documentation to reflect this change and ensure a smooth transition for their users. You can learn more about the changes and new behavior in our documentation. We appreciate the feedback from the developer community that drove this improvement and remain committed to creating a secure and user-friendly experience for all. Except as otherwise noted, the content of this page is licensed under the Creative Commons Attribution 4.0 License, and code samples are licensed under the Apache 2.0 License. For details, see the Google Developers Site Policies. Java is a registered trademark of Oracle and/or its affiliates. Last updated 2025-05-29 UTC. [[[\"Easy to understand\",\"easyToUnderstand\",\"thumb-up\"],[\"Solved my problem\",\"solvedMyProblem\",\"thumb-up\"],[\"Other\",\"otherUp\",\"thumb-up\"]],[[\"Missing the information I need\",\"missingTheInformationINeed\",\"thumb-down\"],[\"Too complicated / too many steps\",\"tooComplicatedTooManySteps\",\"thumb-down\"],[\"Out of date\",\"outOfDate\",\"thumb-down\"],[\"Samples / code issue\",\"samplesCodeIssue\",\"thumb-down\"],[\"Other\",\"otherDown\",\"thumb-down\"]],[\"Last updated 2025-05-29 UTC.\"],[],[]]",
  "image": "https://developer.chrome.com/static/blog/chrome-userscript/image/hero.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\n    \u003cdevsite-progress type=\"indeterminate\" id=\"app-progress\"\u003e\u003c/devsite-progress\u003e\n  \n    \u003ca href=\"#main-content\"\u003e\n      \n      Skip to main content\n    \u003c/a\u003e\n    \u003csection\u003e\n      \u003cdevsite-cookie-notification-bar\u003e\u003c/devsite-cookie-notification-bar\u003e\u003cdevsite-header role=\"banner\"\u003e\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\u003c/devsite-header\u003e\n      \n      \u003csection id=\"gc-wrapper\"\u003e\n        \u003cmain role=\"main\" id=\"main-content\" has-sidebar=\"\"\u003e\n          \n          \u003cdevsite-content\u003e\n            \n              \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003carticle\u003e\n  \n  \n  \n  \n  \n\n  \n  \n    \u003ch2 tabindex=\"-1\"\u003e\n      Enabling chrome.userScripts in Chrome Extensions is changing\n      \u003cp data-nosnippet=\"\"\u003e\u003cdevsite-feature-tooltip ack-key=\"AckCollectionsBookmarkTooltipDismiss\" analytics-category=\"Site-Wide Custom Events\" analytics-action-show=\"Callout Profile displayed\" analytics-action-close=\"Callout Profile dismissed\" analytics-label=\"Create Collection Callout\" dismiss-button=\"true\" id=\"devsite-collections-dropdown\" dismiss-button-text=\"Dismiss\" close-button-text=\"Got it\"\u003e\n\n    \n    \n      \u003cdevsite-bookmark\u003e\u003c/devsite-bookmark\u003e\n    \n\n    \u003cspan slot=\"popout-heading\"\u003e\n      \n      Stay organized with collections\n    \u003c/span\u003e\n    \u003cspan slot=\"popout-contents\"\u003e\n      \n      Save and categorize content based on your preferences.\n    \u003c/span\u003e\n  \u003c/devsite-feature-tooltip\u003e\u003c/p\u003e\n  \n    \u003c/h2\u003e\n  \n  \n\n  \u003cdevsite-toc depth=\"2\" devsite-toc-embedded=\"\"\u003e\n  \u003c/devsite-toc\u003e\n  \n    \n  \u003cdiv\u003e\n\n  \n    \n\n\n\n\n\n\n\u003cp\u003e\n  Published: May 29, 2025\n\u003c/p\u003e\n\n\n\u003cp\u003eFrom Chrome 138 there\u0026#39;s a series of changes to user scripts\n(\u003ccode translate=\"no\" dir=\"ltr\"\u003echrome.userScripts\u003c/code\u003e API) in Chrome Extensions, focusing on enhancing security\nand providing users with more granular control. This update addresses valuable\nfeedback received from the developer community and their users.\u003c/p\u003e\n\n\u003cp\u003ePreviously, enabling user scripts required turning on the global \u003cstrong\u003eDeveloper\nMode\u003c/strong\u003e toggle within Chrome. We\u0026#39;ve heard from you that this approach had some\nkey limitations as it relates to security, functionality, and enterprise.\u003c/p\u003e\n\n\u003cp\u003eSpecifically, the reliance on the global \u003cstrong\u003eDeveloper Mode\u003c/strong\u003e toggle had the\nfollowing issues:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eSecurity Risks:\u003c/strong\u003e Once developer mode was enabled, new extensions which\nrequested the \u003ccode translate=\"no\" dir=\"ltr\"\u003euserScripts\u003c/code\u003e permission automatically gained the ability to\nrun user scripts, potentially without explicit user consent or awareness of\nthe risks associated with each new extension.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eFunctionality Overload:\u003c/strong\u003e The \u003cstrong\u003eDeveloper Mode\u003c/strong\u003e toggle controls several\nother developer-oriented permissions, making it less precise for managing\nthe specific permission to run user scripts.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eEnterprise Challenges:\u003c/strong\u003e Many enterprises prefer not to enable developer\nmode on managed devices, which effectively prevents them from deploying or\nusing extensions that rely on the \u003ccode translate=\"no\" dir=\"ltr\"\u003echrome.userScripts\u003c/code\u003e API.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eTo address these concerns and improve the security and usability of Chrome\nextensions, we are transitioning from the global \u003cstrong\u003eDeveloper Mode\u003c/strong\u003e toggle to a\nnew per-extension \u003cstrong\u003eAllow User Scripts\u003c/strong\u003e toggle.\u003c/p\u003e\n\n\u003cp\u003eThis new toggle, accessible on the extension detail page from Chrome 138\n(\u003ccode translate=\"no\" dir=\"ltr\"\u003echrome://extensions/?id=\u0026lt;your_extension_id\u0026gt;\u003c/code\u003e), lets users explicitly control\nthe extension\u0026#39;s ability to run user scripts on an individual extension basis.\nThis provides more granular control and reduces potential security risks.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://developer.chrome.com/static/blog/chrome-userscript/image/allow.png\" alt=\"The allow user scripts dialog.\" srcset=\"https://developer.chrome.com/static/blog/chrome-userscript/image/allow_36.png 36w,https://developer.chrome.com/static/blog/chrome-userscript/image/allow_48.png 48w,https://developer.chrome.com/static/blog/chrome-userscript/image/allow_72.png 72w,https://developer.chrome.com/static/blog/chrome-userscript/image/allow_96.png 96w,https://developer.chrome.com/static/blog/chrome-userscript/image/allow_480.png 480w,https://developer.chrome.com/static/blog/chrome-userscript/image/allow_720.png 720w,https://developer.chrome.com/static/blog/chrome-userscript/image/allow_856.png 856w,https://developer.chrome.com/static/blog/chrome-userscript/image/allow_960.png 960w,https://developer.chrome.com/static/blog/chrome-userscript/image/allow_1440.png 1440w,https://developer.chrome.com/static/blog/chrome-userscript/image/allow_1920.png 1920w,https://developer.chrome.com/static/blog/chrome-userscript/image/allow_2880.png 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\u003c/p\u003e\n\n\u003cp\u003eDuring the transition period, versions of Chrome prior to 138 will continue to\nuse the \u003cstrong\u003eDeveloper Mode\u003c/strong\u003e toggle, while versions at 138 or newer will use the\nnew per-extension \u003cstrong\u003eAllow User Scripts\u003c/strong\u003e toggle. On the first launch of 138 and\nnewer a one-time migration will automatically enable the new toggle for existing\nextensions that have been granted the \u003ccode translate=\"no\" dir=\"ltr\"\u003euserScripts\u003c/code\u003e permission if the\n\u003cstrong\u003eDeveloper Mode\u003c/strong\u003e toggle is enabled. All new extensions installed after the\nmigration will default to the \u003cstrong\u003eAllow User Scripts\u003c/strong\u003e toggle being set to off.\u003c/p\u003e\n\n\u003cp\u003eIn addition, to check the availability of the User Scripts API, extensions\npreviously had to attempt to access \u003ccode translate=\"no\" dir=\"ltr\"\u003echrome.userScripts\u003c/code\u003e. This threw an error if\ndeveloper mode was disabled. From Chrome 138, the behavior aligns with other\nAPIs and the API is undefined if unavailable. Nonetheless, we\u0026#39;d recommend this\ncheck to determine if the API is available since it covers all Chrome versions:\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"JavaScript\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003efunction\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eisUserScriptsAvailable\u003c/span\u003e\u003cspan\u003e()\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003etry\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e// Method call which throws if API permission or toggle is not enabled.\u003c/span\u003e\n\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003echrome\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003euserScripts\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetScripts\u003c/span\u003e\u003cspan\u003e();\u003c/span\u003e\n\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003ereturn\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003etrue\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ecatch\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e// Not available.\u003c/span\u003e\n\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003ereturn\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003efalse\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003cp\u003eAdministrators who previously managed user scripts by disabling developer mode\nshould now use the \u003ccode translate=\"no\" dir=\"ltr\"\u003eblocked_permissions\u003c/code\u003e policy or the Google Admin console to\ncontrol extensions that use the \u003ccode translate=\"no\" dir=\"ltr\"\u003echrome.userScripts\u003c/code\u003e API. We are evaluating\nfurther changes to how \u003ccode translate=\"no\" dir=\"ltr\"\u003echrome.userScripts\u003c/code\u003e access can be controlled for\nforce-installed extensions so stay tuned to administrator \u003ca href=\"https://support.google.com/chrome/a/answer/7679408\"\u003erelease\nnotes\u003c/a\u003e for updates.\u003c/p\u003e\n\n\u003cp\u003eWe believe this change will provide users with more precise control over\nextension capabilities, leading to enhanced security and a more transparent\nexperience. We encourage extension developers to update their documentation to\nreflect this change and ensure a smooth transition for their users.\u003c/p\u003e\n\n\u003cp\u003eYou can learn more about the changes and new behavior in our\n\u003ca href=\"https://developer.chrome.com/docs/extensions/reference/api/userScripts\"\u003edocumentation\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eWe appreciate the feedback from the developer community that drove this\nimprovement and remain committed to creating a secure and user-friendly\nexperience for all.\u003c/p\u003e\n\n  \n\n  \n\u003c/div\u003e\n\n  \n    \n    \n      \n    \u003cdevsite-thumb-rating position=\"footer\"\u003e\n    \u003c/devsite-thumb-rating\u003e\n  \n       \n    \n    \n  \n\n  \n  \n\u003c/article\u003e\n\n\n\u003cdevsite-content-footer\u003e\n  \u003cp\u003eExcept as otherwise noted, the content of this page is licensed under the \u003ca href=\"https://creativecommons.org/licenses/by/4.0/\"\u003eCreative Commons Attribution 4.0 License\u003c/a\u003e, and code samples are licensed under the \u003ca href=\"https://www.apache.org/licenses/LICENSE-2.0\"\u003eApache 2.0 License\u003c/a\u003e. For details, see the \u003ca href=\"https://developers.google.com/site-policies\"\u003eGoogle Developers Site Policies\u003c/a\u003e. Java is a registered trademark of Oracle and/or its affiliates.\u003c/p\u003e\n  \u003cp\u003eLast updated 2025-05-29 UTC.\u003c/p\u003e\n\u003c/devsite-content-footer\u003e\n\n\n\u003cdevsite-notification\u003e\n\u003c/devsite-notification\u003e\n\n\n  \n\u003cp\u003e\n  \n  \n    \u003ctemplate\u003e\n      [[[\u0026#34;Easy to understand\u0026#34;,\u0026#34;easyToUnderstand\u0026#34;,\u0026#34;thumb-up\u0026#34;],[\u0026#34;Solved my problem\u0026#34;,\u0026#34;solvedMyProblem\u0026#34;,\u0026#34;thumb-up\u0026#34;],[\u0026#34;Other\u0026#34;,\u0026#34;otherUp\u0026#34;,\u0026#34;thumb-up\u0026#34;]],[[\u0026#34;Missing the information I need\u0026#34;,\u0026#34;missingTheInformationINeed\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Too complicated / too many steps\u0026#34;,\u0026#34;tooComplicatedTooManySteps\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Out of date\u0026#34;,\u0026#34;outOfDate\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Samples / code issue\u0026#34;,\u0026#34;samplesCodeIssue\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Other\u0026#34;,\u0026#34;otherDown\u0026#34;,\u0026#34;thumb-down\u0026#34;]],[\u0026#34;Last updated 2025-05-29 UTC.\u0026#34;],[],[]]\n    \u003c/template\u003e\n  \n\u003c/p\u003e\n            \n          \u003c/devsite-content\u003e\n        \u003c/main\u003e\n        \n        \n        \n        \u003cdevsite-panel\u003e\n          \n        \u003c/devsite-panel\u003e\n        \n      \u003c/section\u003e\u003c/section\u003e\n    \u003cdevsite-sitemask\u003e\u003c/devsite-sitemask\u003e\n    \u003cdevsite-snackbar\u003e\u003c/devsite-snackbar\u003e\n    \u003cdevsite-tooltip\u003e\u003c/devsite-tooltip\u003e\n    \u003cdevsite-heading-link\u003e\u003c/devsite-heading-link\u003e\n    \u003cdevsite-analytics\u003e\n      \n        \n\n      \n    \u003c/devsite-analytics\u003e\n    \n      \u003cdevsite-badger\u003e\u003c/devsite-badger\u003e\n    \n    \n    \n\n\n    \u003cdevsite-a11y-announce\u003e\u003c/devsite-a11y-announce\u003e\n  \n\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": null,
  "modifiedTime": null
}
