{
  "id": "4294438f-e684-4fa0-9bbe-dfb6308fafe6",
  "title": "This¬†Isn‚Äôt Supposed to Happen: Troubleshooting the Impossible",
  "link": "https://css-tricks.com/this-isnt-supposed-to-happen-troubleshooting-the-impossible/",
  "description": "What it looks like to troubleshoot one of those impossible issues that turns out to be something totally else you never thought of. This¬†Isn‚Äôt Supposed to Happen: Troubleshooting the Impossible originally published on CSS-Tricks, which is part of the DigitalOcean family. You should get the newsletter.",
  "author": "John Rhea",
  "published": "Wed, 14 May 2025 14:01:42 +0000",
  "source": "https://css-tricks.com/feed/",
  "categories": [
    "Articles",
    "Case Studies",
    "SVG"
  ],
  "byline": "John Rhea",
  "length": 7475,
  "excerpt": "What it looks like to troubleshoot one of those impossible issues that turns out to be something totally else you never thought of.",
  "siteName": "CSS-Tricks",
  "favicon": "https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/07/star.png?fit=180%2C180\u0026ssl=1",
  "text": "I recently rebuilt my portfolio (johnrhea.com). After days and days of troubleshooting and fixing little problems on my local laptop, I uploaded my shiny new portfolio to the server ‚Äî and triumphantly watched it not work at all‚Ä¶ The browser parses and runs JavaScript, right? Maybe Chrome will handle something a little different from Firefox, but if the same code is on two different servers it should work the same in Chrome (or Firefox) no matter which server you look at, right? Right? First, the dynamically generated stars wouldn‚Äôt appear and when you tried to play the game mode, it was just blank. No really terrible website enemies appeared, nor could they shoot any bad experience missiles at you, at least, not in the game mode, but I guess my buggy website literally sent a bad experience missile at you. Over on the page showing my work, little cars were supposed to zoom down the street, but they didn‚Äôt show up, either. Let me tell you, there was no crying or tears of any kind. I was very strong and thrilled, just thrilled, to accept the challenge of figuring out what was going on. I frantically googled things like ‚ÄúWhat could cause JavaScript to act differently on two servers?‚Äù, ‚ÄúWhy would a server change how JavaScript works?‚Äù, and ‚ÄúWhy does everyone think I‚Äôm crying when I‚Äôm clearly not?‚Äù But to no avail. There were some errors in the console, but not ones that made sense. I had an SVG element that we‚Äôll call car (because that‚Äôs what I named it). I created it in vanilla JavaScript, added it to the page, and zoomed it down the gray strip approximating a street. (It‚Äôs a space theme where you can explore planets. It‚Äôs really cool. I swear.) I was setting transforms on car using car.style.transform and it was erroring out. car.style was undefined. I went back to my code on my laptop. Executes flawlessly. No errors. To get past the initial error, I switched it from¬†car.style to using setAttribute e.g. car.setAttribute('style', 'transform: translate(100px, 200px)');. This just got me to the next error. car was erroring out on some data-* attributes I was using to hold information about the car, e.g. car.dataset.xspeed would also come back undefined when I tried to access them. This latter technology has been supported in SVG elements since 2015, yet it was not working on the server, and worked fine locally. What the Hoobastank could be happening? (Yes, I‚Äôm referencing the 1990s band and, no, they have nothing to do with the issue. I just like saying‚Ä¶ errr‚Ä¶ writing‚Ä¶ their name.) With search engines not being much help (mostly because the problem isn‚Äôt supposed to exist), I contacted my host thinking maybe some kind of server configuration was the issue. The very polite tech tried to help, checking for server errors and other simple misconfigurations, but there were no issues he could find. After reluctantly serving as my coding therapist and listening to my (tearless) bemoaning of ever starting a career in web development, he basically said they support JavaScript, but can‚Äôt really go into custom code, so best of luck. Well, thanks for nothing, person whom I will call Truckson! (That‚Äôs not his real name, but I thought ‚ÄúCarson‚Äù was too on the nose.) Next, and still without tears, I tried to explain my troubles to ChatGPT with the initial prompt: ‚ÄúWhy would JavaScript on two different web servers act differently?‚Äù It was actually kind of helpful with a bunch of answers that turned out to be very wrong. Maybe there was an inline SVG vs SVG in an img issue? That wasn‚Äôt it. Could the browser be interpreting the page as plain text instead of HTML through some misconfiguration? Nope, it was pulling down HTML, and the headers were correct. Maybe the browser is in quirks mode? It wasn‚Äôt. Could the SVG element be created incorrectly? You can‚Äôt create an SVG element in HTML using document.createElement('svg') because SVG actually has a different namespace. Instead, you have to use document.createElementNS(\"http://www.w3.org/2000/svg\", 'svg'); because SVG and HTML use similar, but very different, standards. Nope, I‚Äôd used the createElementNS function and the correct namespace. Sidenote: At several points during the chat session, ChatGPT started replies with, ‚ÄúAh, now we‚Äôre getting spicy üî•‚Äù as well as, ‚ÄúAh, this is a juicy one. üçá‚Äù (emojis included). It also used the word ‚Äúbulletproof‚Äù a few times in what felt like a tech-bro kind of way. Plus there was a ‚ÄúBOOM. üí• That‚Äôs the smoking gun right there‚Äù, as well as an ‚ÄúAhhh okay, sounds like there‚Äôs still a small gremlin in the works.‚Äù I can‚Äôt decide whether I find this awesome, annoying, horrible, or scary. Maybe all four? Next, desperate, I gave our current/future robot overlord some of my code to give it context and show it that none of these were the issue. It still harped on the misconfiguration and kept having me output things to check if the car element was an SVG element. Again, locally it was an SVG element, but on the server it came back that it wasn‚Äôt. Maybe using innerHTML to add some SVG elements to the car element garbled the car element into not being an SVG element? ChatGPT volunteered to rewrite a portion of code to fix this. I put the new code into my system. It worked locally! Then I uploaded it to the server and‚Ä¶ no dice. Same error was still happening. I wept openly. I mean‚Ä¶ I swallowed my emotions in a totally healthy and very manly way. And that‚Äôs the end of the article, no redemption, no solution, no answer. Just a broken website and the loud sobs of a man who doesn‚Äôt cry‚Ä¶ ever‚Ä¶ ‚Ä¶You still here? Okay, you‚Äôre right. You know I wouldn‚Äôt leave you hanging like that. After the non-existent sob session, I complained to ChatGPT, it again gave me some console logs including having the car element print out its namespace and that‚Äôs when the answer came to me. You see the namespace for an SVG is this: http://www.w3.org/2000/svg What it actually printed was this: https://www.w3.org/2000/svg One letter. That‚Äôs the difference. Normally you want everything to be secure, but that‚Äôs not really how namespaces work. And while the differences between these two strings is minimal, I might as well have written document.createElementNS(\"Gimme-them-SVGzers\", \"svg\");. Hey, W3C, can I be on the namespace committee? But why was it different? You‚Äôd be really mad if you read this far and it was just a typo in my code. Right? You‚Äôve invested some time into this article, and I already did the fake-out of having no answer. So, having a code typo would probably lead to riots in the streets and hoards of bad reviews. Don‚Äôt worry. The namespace was correct in my code, so where was that errant ‚Äús‚Äù coming from? I remembered turning on a feature in my host‚Äôs optimization plugin: automatically fix insecure pages. It goes through and changes insecure links to secure ones. In 99% of cases, it‚Äôs the right choice. But apparently it also changes namespace URLs in JavaScript code. I turned that feature off and suddenly I was traversing the galaxy, exploring planets with cars zooming down gray pseudo-elements, and firing lasers at really terrible websites instead of having a really terrible website. There were no tears (joyful or otherwise) nor were there celebratory and wildly embarrassing dance moves that followed. Have a similar crazy troubleshooting issue? Have you solved an impossible problem? Let me know in the comments.",
  "image": "https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/Screenshot-2025-05-01-at-8.12.35%E2%80%AFAM.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\n          \n          \n\u003cp\u003eI recently rebuilt my portfolio (\u003ca href=\"http://johnrhea.com\" rel=\"noopener\"\u003ejohnrhea.com\u003c/a\u003e). After days and days of troubleshooting and fixing little problems on my local laptop, I uploaded my shiny new portfolio to the server ‚Äî and triumphantly watched it not work at all‚Ä¶\u003c/p\u003e\n\n\n\n\u003cp\u003eThe browser parses and runs JavaScript, right? Maybe Chrome will handle something a little different from Firefox, but if the same code is on two different servers it should work the same in Chrome (or Firefox) no matter which server you look at, right? \u003cem\u003eRight?\u003c/em\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003eFirst, the dynamically generated stars wouldn‚Äôt appear and when you tried to play the game mode, it was just blank. No really terrible website enemies appeared, nor could they shoot any bad experience missiles at you, at least, not in the game mode, but I guess my buggy website literally sent a bad experience missile at you. Over on the page showing my work, little cars were supposed to zoom down the street, but they didn‚Äôt show up, either.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cvideo controls=\"\" data-breeze=\"https://css-tricks.com/wp-content/uploads/2025/05/cars.mov\" playsinline=\"\"\u003e\u003c/video\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eLet me tell you, there was no crying or tears of any kind. I was very strong and thrilled, just thrilled, to accept the challenge of figuring out what was going on. I frantically googled things like ‚ÄúWhat could cause JavaScript to act differently on two servers?‚Äù, ‚ÄúWhy would a server change how JavaScript works?‚Äù, and ‚ÄúWhy does everyone think I‚Äôm crying when I‚Äôm clearly not?‚Äù But to no avail.\u003c/p\u003e\n\n\n\n\u003cp\u003eThere were some errors in the console, but not ones that made sense. I had an SVG element that we‚Äôll call \u003ccode\u003ecar\u003c/code\u003e (because that‚Äôs what I named it). I created it in vanilla JavaScript, added it to the page, and zoomed it down the gray strip approximating a street. (It‚Äôs a space theme where you can explore planets. It‚Äôs really cool. I swear.) I was setting transforms on \u003ccode\u003ecar\u003c/code\u003e using \u003ccode\u003ecar.style.transform\u003c/code\u003e and it was erroring out. \u003ccode\u003ecar.style\u003c/code\u003e was undefined.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg loading=\"lazy\" data-recalc-dims=\"1\" fetchpriority=\"high\" decoding=\"async\" width=\"993\" height=\"211\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/error.png?resize=993%2C211\u0026amp;ssl=1\" alt=\"Uncaught TypeError: Cannot set properties of undefined.\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/error.png?w=993\u0026amp;ssl=1 993w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/error.png?resize=300%2C64\u0026amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/05/error.png?resize=768%2C163\u0026amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eI went back to my code on my laptop. Executes flawlessly. No errors.\u003c/p\u003e\n\n\n\n\u003cp\u003eTo get past the initial error, I switched it from¬†\u003ccode\u003ecar.style\u003c/code\u003e to using \u003ccode\u003esetAttribute\u003c/code\u003e e.g. \u003ccode\u003ecar.setAttribute(\u0026#39;style\u0026#39;, \u0026#39;transform: translate(100px, 200px)\u0026#39;);\u003c/code\u003e. This just got me to the next error. \u003ccode\u003ecar\u003c/code\u003e was erroring out on some \u003ccode\u003edata-*\u003c/code\u003e attributes I was using to hold information about the \u003ccode\u003ecar\u003c/code\u003e, e.g. \u003ccode\u003ecar.dataset.xspeed\u003c/code\u003e would also come back undefined when I tried to access them. This latter technology has been supported in SVG elements since 2015, yet it was not working on the server, and worked fine locally. What the Hoobastank could be happening? (Yes, I‚Äôm referencing the 1990s band and, no, they have nothing to do with the issue. I just like saying‚Ä¶ errr‚Ä¶ writing‚Ä¶ their name.)\u003c/p\u003e\n\n\n\n\u003cp\u003eWith search engines not being much help (mostly because the problem isn‚Äôt supposed to exist), I contacted my host thinking maybe some kind of server configuration was the issue. The very polite tech tried to help, checking for server errors and other simple misconfigurations, but there were no issues he could find. After reluctantly serving as my coding therapist and listening to my (tearless) bemoaning of ever starting a career in web development, he basically said they support JavaScript, but can‚Äôt really go into custom code, so best of luck. Well, thanks for nothing, person whom I will call Truckson! (That‚Äôs not his real name, but I thought ‚ÄúCarson‚Äù was too on the nose.)\u003c/p\u003e\n\n\n\n\u003cp\u003eNext, and still without tears, I tried to explain my troubles to ChatGPT with the initial prompt: ‚ÄúWhy would JavaScript on two different web servers act differently?‚Äù It was actually kind of helpful with a bunch of answers that turned out to be very wrong.\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eMaybe there was an inline SVG vs SVG in an \u003ccode\u003eimg\u003c/code\u003e issue? That wasn‚Äôt it.\u003c/li\u003e\n\n\n\n\u003cli\u003eCould the browser be interpreting the page as plain text instead of HTML through some misconfiguration? Nope, it was pulling down HTML, and the headers were correct.\u003c/li\u003e\n\n\n\n\u003cli\u003eMaybe the browser is in quirks mode? It wasn‚Äôt.\u003c/li\u003e\n\n\n\n\u003cli\u003eCould the SVG element be created incorrectly? You can‚Äôt create an SVG element in HTML using \u003ccode\u003edocument.createElement(\u0026#39;svg\u0026#39;)\u003c/code\u003e because SVG actually has a different namespace. Instead, you have to use \u003ccode\u003edocument.createElementNS(\u0026#34;http://www.w3.org/2000/svg\u0026#34;, \u0026#39;svg\u0026#39;);\u003c/code\u003e because SVG and HTML use similar, but very different, standards. Nope, I‚Äôd used the \u003ccode\u003ecreateElementNS\u003c/code\u003e function and the correct namespace.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eSidenote:\u003c/strong\u003e At several points during the chat session, ChatGPT started replies with, ‚ÄúAh, now we‚Äôre getting spicy üî•‚Äù as well as, ‚ÄúAh, this is a juicy one. üçá‚Äù (emojis included). It also used the word ‚Äúbulletproof‚Äù a few times in what felt like a tech-bro kind of way. Plus there was a ‚ÄúBOOM. üí• That‚Äôs the smoking gun right there‚Äù, as well as an ‚ÄúAhhh okay, sounds like there‚Äôs still a small gremlin in the works.‚Äù I can‚Äôt decide whether I find this awesome, annoying, horrible, or scary. Maybe all four?\u003c/p\u003e\n\n\n\n\u003cp\u003eNext, desperate, I gave our current/future robot overlord some of my code to give it context and show it that none of these were the issue. It still harped on the misconfiguration and kept having me output things to check if the car element was an SVG element. Again, locally it was an SVG element, but on the server it came back that it wasn‚Äôt.\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eMaybe using \u003ccode\u003einnerHTML\u003c/code\u003e to add some SVG elements to the car element garbled the \u003ccode\u003ecar\u003c/code\u003e element into not being an SVG element? ChatGPT volunteered to rewrite a portion of code to fix this. I put the new code into my system. It worked locally! Then I uploaded it to the server and‚Ä¶ no dice. Same error was still happening.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eI wept openly. I mean‚Ä¶ I swallowed my emotions in a totally healthy and very manly way. And that‚Äôs the end of the article, no redemption, no solution, no answer. Just a broken website and the loud sobs of a man who doesn‚Äôt cry‚Ä¶ ever‚Ä¶\u003c/p\u003e\n\n\n\n\u003cp\u003e‚Ä¶You still here?\u003c/p\u003e\n\n\n\n\u003cp\u003eOkay, you‚Äôre right. You know I wouldn‚Äôt leave you hanging like that. After the non-existent sob session, I complained to ChatGPT, it again gave me some console logs including having the \u003ccode\u003ecar\u003c/code\u003e element print out its namespace and that‚Äôs when the answer came to me. You see the namespace for an SVG is this:\u003c/p\u003e\n\n\n\n\u003cpre rel=\"HTML\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003ehttp://www.w3.org/2000/svg\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eWhat it actually printed was this:\u003c/p\u003e\n\n\n\n\u003cpre rel=\"HTML\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003ehttps://www.w3.org/2000/svg\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eOne letter. That‚Äôs the difference.\u003c/p\u003e\n\n\n\n\u003cp\u003eNormally you want everything to be secure, but that‚Äôs not really how namespaces work. And while the differences between these two strings is minimal, I might as well have written \u003ccode\u003edocument.createElementNS(\u0026#34;Gimme-them-SVGzers\u0026#34;, \u0026#34;svg\u0026#34;);\u003c/code\u003e. \u003cem\u003eHey, W3C, can I be on the namespace committee?\u003c/em\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003eBut why was it different? You‚Äôd be really mad if you read this far and it was just a typo in my code. Right?\u003c/p\u003e\n\n\n\n\u003cp\u003eYou‚Äôve invested some time into this article, and I already did the fake-out of having no answer. So, having a code typo would probably lead to riots in the streets and hoards of bad reviews.\u003c/p\u003e\n\n\n\n\u003cp\u003eDon‚Äôt worry. The namespace was correct in my code, so where was that errant ‚Äús‚Äù coming from?\u003c/p\u003e\n\n\n\n\u003cp\u003eI remembered turning on a feature in my host‚Äôs optimization plugin: automatically fix insecure pages. It goes through and changes insecure links to secure ones. In 99% of cases, it‚Äôs the right choice. But apparently it also changes namespace URLs in JavaScript code.\u003c/p\u003e\n\n\n\n\u003cp\u003eI turned that feature off and suddenly I was traversing the galaxy, exploring planets with cars zooming down gray pseudo-elements, and firing lasers at really terrible websites instead of having a really terrible website. There were no tears (joyful or otherwise) nor were there celebratory and wildly embarrassing dance moves that followed.\u003c/p\u003e\n\n\n\n\u003cp\u003eHave a similar crazy troubleshooting issue? Have you solved an impossible problem? Let me know in the comments.\u003c/p\u003e\n\n          \n        \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "8 min read",
  "publishedTime": "2025-05-14T08:01:42-06:00",
  "modifiedTime": "2025-05-14T08:01:44-06:00"
}
