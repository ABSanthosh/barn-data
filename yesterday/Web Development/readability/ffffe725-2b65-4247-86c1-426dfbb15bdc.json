{
  "id": "ffffe725-2b65-4247-86c1-426dfbb15bdc",
  "title": "Chrome 137 beta",
  "link": "https://developer.chrome.com/blog/chrome-137-beta?hl=en",
  "description": "Discover what's coming to Chrome with the latest beta.",
  "author": "",
  "published": "Thu, 01 May 2025 07:00:00 GMT",
  "source": "https://developer.chrome.com/static/blog/feed.xml",
  "categories": null,
  "byline": "",
  "length": 12360,
  "excerpt": "Discover what's coming to Chrome with the latest beta.",
  "siteName": "Chrome for Developers",
  "favicon": "https://www.gstatic.com/devrel-devsite/prod/va15d3cf2bbb0f0b76bff872a3310df731db3118331ec014ebef7ea080350285b/chrome/images/favicon.png",
  "text": "Published: May 1, 2025 Unless otherwise noted, the following changes apply to the newest Chrome beta channel release for Android, ChromeOS, Linux, macOS, and Windows. Learn more about the features listed here through the provided links or from the list on ChromeStatus.com. Chrome 130 is beta as of 30 April, 2025. You can download the latest on Google.com for desktop or on Google Play Store on Android. CSS and UI This release adds seven new CSS and UI features. The if() function The CSS if() function provides a concise way to express conditional values. It accepts a series of condition-value pairs, delimited by semicolons. The function evaluates each condition sequentially and returns the value associated with the first true condition. If none of the conditions evaluate to true, the function returns an empty token stream. This lets you express complex conditional logic in a simple and concise way. Example: div { color: var(--color); background-color: if(style(--color: white): black; else: white); } .dark { --color: black; } .light { --color: white; } \u003cdiv class=\"dark\"\u003edark\u003c/div\u003e \u003cdiv class=\"light\"\u003elight\u003c/div\u003e The reading-flow and reading-order properties The reading-flow CSS property controls the order in which elements in a flex, grid, or block layout are exposed to accessibility tools and focused using tab keyboard focus navigation. It takes one of the following keyword values: normal flex-visual flex-flow grid-rows grid-columns grid-order source-order The reading-order CSS property lets you manually-override the order within a reading flow container. It is an integer with default value of 0. To learn more read Use CSS reading-flow for logical sequential focus navigation and try out some examples of reading flow. offset-path: shape() The shape() function is already supported in clip-path, and allows responsive clipping. Enabling it also for offset-path closes a small gap where the same kind of shape can be used for that property. Support transform attribute on SVGSVGElement This feature enables the application of transformation properties—such as scaling, rotation, translation, and skewing—directly to the \u003csvg\u003e root element using its transform attribute. This enhancement lets you manipulate the entire SVG coordinate system or its contents as a whole, providing greater flexibility in creating dynamic, responsive, and interactive vector graphics. By supporting this attribute, the SVG element can be transformed without requiring additional wrapper elements or complex CSS workarounds, streamlining the process of building scalable and animated web graphics. Allow \u003cuse\u003e to reference an external document's root element by omitting the fragment. In this feature, we are streamlining the SVG \u003cuse\u003e element by loosening referencing requirements. Currently, you need to explicitly reference fragments within the SVG document. If no fragment ID is given, \u003cuse\u003e won't be able to resolve the target and nothing will be rendered or referred. With this feature, omitting fragments or just giving the external SVG file name will automatically reference the root element, eliminating the need for you to alter the referenced document just to assign an ID to the root. This enhancement simplifies this manual editing process and improves efficiency. System accent color for accent-color property expanded to Windows and ChromeOS This lets you use the operating system's accent color for form elements. By using the accent-color CSS property, you can ensure that form elements such as checkboxes, radio buttons, and progress bars automatically adopt the accent color defined by the user's operating system. This has been supported on macOS since 2021, and is now supported on Windows and ChromeOS. view-transition-name: match-element The match-element value for the view-transition property generates a unique ID based on the element's identity and remains the same for this element. This is used in Single Page App cases where the element is being moved around and you want to animate it with a view transition. Web APIs Align error type thrown for 'payment' WebAuthn credential creation Corrects the error type thrown during WebAuthn credential creation for payment credentials. Due to a historic specification mismatch, creating a payment credential in a cross-origin iframe without a user activation would throw a SecurityError instead of a NotAllowedError, which is what is thrown for non-payment credentials. This is a breaking change. Code that previously detected the type of error thrown (for example, e instanceof SecurityError) would be affected. Code that just generally handles errors during credential creation (for example, catch (e)) will continue to function correctly. Blob URL Partitioning: Fetching/Navigation As a continuation of Storage Partitioning, this implements partitioning of Blob URL access by Storage Key (top-level site, frame origin, and the has-cross-site-ancestor boolean), with the exception of top-level navigations which will remain partitioned only by frame origin. This change can be temporarily reverted by setting the PartitionedBlobURLUsage policy. The policy will be deprecated when the other storage partitioning related enterprise policies are deprecated. Call stacks in crash reports from unresponsive web pages This feature captures the JavaScript call stack when a web page becomes unresponsive due to JavaScript code running an infinite loop or other very long computation. This helps developers to identify the cause of the unresponsiveness and fix it more easily. The JavaScript call stack is included in the crash reporting API when the reason is unresponsive. Canvas Floating Point Color Types Introduces the ability to use floating point pixel formats (as opposed to 8-bit fixed point) with CanvasRenderingContext2D, OffscreenCanvasRenderingContext2D, and ImageData. This is necessary for high precision applications (for example, medical visualization), high dynamic range content, and linear working color spaces. Disallow non-trustworthy plaintext HTTP prerendering Currently prerender is permitted over HTTP and HTTPS, while prefetch only works over HTTPS. Restrict prerender to be consistent with prefetch. Document-Isolation-Policy Document-Isolation-Policy lets a document enable crossOriginIsolation for itself, without having to deploy COOP or COEP, and regardless of the crossOriginIsolation status of the page. The policy is backed by process isolation. Additionally, the document non-CORS cross-origin subresources will either be loaded without credentials or will need to have a CORP header. Learn more in Document Isolation Policy: Enable powerful web features with ease. Ed25519 in Web Cryptography This feature adds support for Curve25519 algorithms in the Web Cryptography API, namely the signature algorithm Ed25519 IP address logging and reporting Chrome Enterprise is enhancing security monitoring and incident response capabilities by collecting and reporting local and remote IP addresses and sending those IP addresses to the Security Investigation Logs (SIT). In addition, Chrome Enterprise will allow admins to optionally send the IP addresses to 1P and 3P SIEM providers using the Chrome Enterprise Reporting connector. This will be available for Chrome Enterprise Core customers. JavaScript Promise Integration JavaScript Promise Integration (JSPI) is an API that lets WebAssembly applications integrate with JavaScript Promises. It allows a WebAssembly program to act as the generator of a Promise, and it allows the WebAssembly program to interact with Promise-bearing APIs. In particular, when an application uses JSPI to call a Promise-bearing (JavaScript) API, the WebAssembly code is suspended; and the original caller to the WebAssembly program is given a Promise that will be fulfilled when the WebAssembly program finally completes. Language Detector API The Language Detector API is a JavaScript API that identifies the language of a provided string. This API is backed by an underlying model that is fine-tuned to perform language detection tasks. Given a string, the Language Detector API returns an ordered list of the detected languages, along with a confidence score for each result. Optionally, developers can pass in a list of expected input languages when creating a Language Detector instance to help optimize for use cases where detection is expected to be performed on certain languages. Restrict float attributes and arguments on SVGMatrix, SVGRect, and SVGPoint When setting float attributes or arguments on SVGMatrix, SVGRect and SVGPoint, you now can't set them as Infinity or Nan. A JavaScript exception is thrown if you attempt to set it, as defined in the SVG specification. Selection API getComposedRanges and direction This feature ships two new API methods for the Selection API: Selection.direction which returns the selection's direction as either \"none\", \"forward\" or \"backward\" Selection.getComposedRanges() which returns a list of 0 or 1 \"composed\" StaticRange A \"composed\" StaticRange is allowed to cross shadow boundaries, which normal Ranges cannot. For example: const range = getSelection().getComposedRanges({ shadowRoots: [root] }); If the selection crosses a shadow root boundary that isn't provided in the shadowRoots list, then the endpoints of the StaticRange will be \"rescoped\" to be outside that tree. This makes sure we don't expose unknown shadow trees. Web app scope extensions Adds a scope_extensions web app manifest field that lets web apps extend their scope to other origins. Example: { \"name\": \"Example\", \"display\": \"standalone\", \"start_url\": \"/index.html\", \"scope_extensions\": [ {\"type\" : \"type\", \"origin\" : \"https://example.com\"} ] } This allows sites that control multiple subdomains and top level domains to be presented as a single web app. Requires listed origins to confirm association with the web app using a .well-known/web-app-origin-association configuration file. { \"https://sample-app.com/\": { \"scope\": \"/\" } } WebAssembly Branch Hints Improves the performance of compiled WebAssembly code by informing the engine that a particular branch instruction is very likely to take a specific path. This allows the engine to make better decisions for code layout (improving instruction cache hits) and register allocation. WebGPU: GPUTextureView for externalTexture binding A GPUTextureView is now allowed to be used for an externalTexture binding when creating a GPUBindGroup. WebGPU: copyBufferToBuffer overload The GPUCommandEncoder copyBufferToBuffer() method now includes a simpler way to copy entire buffers using a new overload with optional offsets and size parameters. New origin trials In Chrome 137 you can opt into the following new origin trials. Full frame rate render blocking attribute Adds a new render blocking token full-frame-rate to the blocking attributes. When the renderer is blocked with the full-frame-rate token, the renderer will work at a lower frame rate so as to reserve more resources for loading. Pause media playback on not-rendered iframes Adds a \"media-playback-while-not-rendered\" permission policy to allow embedder websites to pause media playback of embedded iframes which aren't rendered—that is, have their \"display\" property set to \"none\". This should allow developers to build more user-friendly experiences and to also improve the performance by letting the browser handle the playback of content that is not visible to users. Rewriter API The Rewriter API transforms and rephrases input text in requested ways, backed by an on-device AI language model. Developers may use this API to remove redundancies within a text in order to fit into a word limit, rephrase messages to suit the intended audience or to be more constructive if a message is found to use toxic language, rephrasing a post or article to use simpler words and concepts and more. Writer API The Writer API can be used for writing new material given a writing task prompt, backed by an on-device AI language model. Developers will be able to use this API to generate textual explanations of structured data, composing a post about a product based on reviews or product description, expanding on pro and con lists into full views and more.",
  "image": "https://developer.chrome.com/static/blog/chrome-137-beta/image/thumbnail.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\n  \n    \n\n\n\n\n\u003cdiv translate=\"no\"\u003e\n        \n          \u003cp\u003e\u003cimg alt=\"Rachel Andrew\" src=\"https://web.dev/images/authors/rachelandrew.jpg\" decoding=\"async\" height=\"64\" loading=\"lazy\" width=\"64\"/\u003e\u003c/p\u003e\n      \u003c/div\u003e\n\n\u003cp\u003e\n  Published: May 1, 2025\n\u003c/p\u003e\n\n\n\u003cp\u003eUnless otherwise noted, the following changes apply to the newest Chrome beta\nchannel release for Android, ChromeOS, Linux, macOS, and Windows. Learn more\nabout the features listed here through the provided links or from the list on\nChromeStatus.com. Chrome 130 is beta as of 30 April, 2025. You can download the\nlatest on \u003ca href=\"https://www.google.com/chrome/beta/\"\u003eGoogle.com\u003c/a\u003e for desktop or on\nGoogle Play Store on Android.\u003c/p\u003e\n\n\u003ch2 id=\"css_and_ui\" data-text=\"CSS and UI\" tabindex=\"-1\"\u003eCSS and UI\u003c/h2\u003e\n\n\u003cp\u003eThis release adds seven new CSS and UI features.\u003c/p\u003e\n\n\u003ch3 id=\"the_if_function\" data-text=\"The if() function\" tabindex=\"-1\"\u003eThe \u003ccode translate=\"no\" dir=\"ltr\"\u003eif()\u003c/code\u003e function\u003c/h3\u003e\n\n\u003cp\u003eThe CSS \u003ccode translate=\"no\" dir=\"ltr\"\u003eif()\u003c/code\u003e function provides a concise way to express conditional values. It\naccepts a series of condition-value pairs, delimited by semicolons. The function\nevaluates each condition sequentially and returns the value associated with the\nfirst true condition. If none of the conditions evaluate to true, the function\nreturns an empty token stream. This lets you express complex conditional logic\nin a simple and concise way. Example:\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"CSS\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003ediv\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e      \u003c/span\u003e\u003cspan\u003ecolor\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003evar\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e--color\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\n\u003cspan\u003e      \u003c/span\u003e\u003cspan\u003ebackground-color\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eif\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003estyle\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e--color\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ewhite\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eblack\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eelse\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ewhite\u003c/span\u003e\u003cspan\u003e);\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003edark\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e      \u003c/span\u003e\u003cspan\u003e--color\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eblack\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003elight\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e      \u003c/span\u003e\u003cspan\u003e--color\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003ewhite\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"HTML\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026lt;div class=\u0026#34;dark\u0026#34;\u0026gt;dark\u0026lt;/div\u0026gt;\n\u0026lt;div class=\u0026#34;light\u0026#34;\u0026gt;light\u0026lt;/div\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003ch3 id=\"the_reading-flow_and_reading-order_properties\" data-text=\"The reading-flow and reading-order properties\" tabindex=\"-1\"\u003eThe \u003ccode translate=\"no\" dir=\"ltr\"\u003ereading-flow\u003c/code\u003e and \u003ccode translate=\"no\" dir=\"ltr\"\u003ereading-order\u003c/code\u003e properties\u003c/h3\u003e\n\n\u003cp\u003eThe \u003ccode translate=\"no\" dir=\"ltr\"\u003ereading-flow\u003c/code\u003e CSS property controls the order in which elements in a flex,\ngrid, or block layout are exposed to accessibility tools and focused using tab\nkeyboard focus navigation. It takes one of the following keyword values:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003enormal\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003eflex-visual\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003eflex-flow\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003egrid-rows\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003egrid-columns\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003egrid-order\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003esource-order\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe \u003ccode translate=\"no\" dir=\"ltr\"\u003ereading-order\u003c/code\u003e CSS property lets you manually-override the order within a\nreading flow container. It is an integer with default value of 0.\u003c/p\u003e\n\n\u003cp\u003eTo learn more read \u003ca href=\"https://developer.chrome.com/blog/reading-flow\"\u003eUse CSS reading-flow for logical sequential focus\nnavigation\u003c/a\u003e and try out some \u003ca href=\"https://chrome.dev/reading-flow-examples/\"\u003eexamples of reading\nflow\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3 id=\"offset-path_shape\" data-text=\"offset-path: shape()\" tabindex=\"-1\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003eoffset-path: shape()\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eThe \u003ccode translate=\"no\" dir=\"ltr\"\u003eshape()\u003c/code\u003e function is already supported in \u003ccode translate=\"no\" dir=\"ltr\"\u003eclip-path\u003c/code\u003e, and allows\nresponsive clipping. Enabling it also for \u003ccode translate=\"no\" dir=\"ltr\"\u003eoffset-path\u003c/code\u003e closes a small gap where\nthe same kind of shape can be used for that property.\u003c/p\u003e\n\n\u003ch3 id=\"support_transform_attribute_on_svgsvgelement\" data-text=\"Support transform attribute on SVGSVGElement\" tabindex=\"-1\"\u003eSupport transform attribute on \u003ccode translate=\"no\" dir=\"ltr\"\u003eSVGSVGElement\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eThis feature enables the application of transformation properties—such as\nscaling, rotation, translation, and skewing—directly to the \u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026lt;svg\u0026gt;\u003c/code\u003e root element\nusing its transform attribute. This enhancement lets you manipulate the entire\nSVG coordinate system or its contents as a whole, providing greater flexibility\nin creating dynamic, responsive, and interactive vector graphics. By supporting\nthis attribute, the SVG element can be transformed without requiring additional\nwrapper elements or complex CSS workarounds, streamlining the process of\nbuilding scalable and animated web graphics.\u003c/p\u003e\n\n\u003ch3 id=\"allow_use_to_reference_an_external_documents_root_element_by_omitting_the_fragment\" data-text=\"Allow \u0026lt;use\u0026gt; to reference an external document\u0026#39;s root element by omitting the fragment.\" tabindex=\"-1\"\u003eAllow \u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026lt;use\u0026gt;\u003c/code\u003e to reference an external document\u0026#39;s root element by omitting the fragment.\u003c/h3\u003e\n\n\u003cp\u003eIn this feature, we are streamlining the SVG \u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026lt;use\u0026gt;\u003c/code\u003e element by loosening\nreferencing requirements. Currently, you need to explicitly reference fragments\nwithin the SVG document. If no fragment ID is given, \u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026lt;use\u0026gt;\u003c/code\u003e won\u0026#39;t be able to\nresolve the target and nothing will be rendered or referred.\u003c/p\u003e\n\n\u003cp\u003eWith this feature, omitting fragments or just giving the external SVG file name\nwill automatically reference the root element, eliminating the need for you to\nalter the referenced document just to assign an ID to the root. This enhancement\nsimplifies this manual editing process and improves efficiency.\u003c/p\u003e\n\n\u003ch3 id=\"system_accent_color_for_accent-color_property_expanded_to_windows_and_chromeos\" data-text=\"System accent color for accent-color property expanded to Windows and ChromeOS\" tabindex=\"-1\"\u003eSystem accent color for \u003ccode translate=\"no\" dir=\"ltr\"\u003eaccent-color\u003c/code\u003e property expanded to Windows and ChromeOS\u003c/h3\u003e\n\n\u003cp\u003eThis lets you use the operating system\u0026#39;s accent color for form elements. By\nusing the \u003ccode translate=\"no\" dir=\"ltr\"\u003eaccent-color\u003c/code\u003e CSS property, you can ensure that form elements such as\ncheckboxes, radio buttons, and progress bars automatically adopt the accent\ncolor defined by the user\u0026#39;s operating system. This has been supported on macOS\nsince 2021, and is now supported on Windows and ChromeOS.\u003c/p\u003e\n\n\u003ch3 id=\"view-transition-name_match-element\" data-text=\"view-transition-name: match-element\" tabindex=\"-1\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003eview-transition-name: match-element\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eThe \u003ccode translate=\"no\" dir=\"ltr\"\u003ematch-element\u003c/code\u003e value for the \u003ccode translate=\"no\" dir=\"ltr\"\u003eview-transition\u003c/code\u003e property generates a unique\nID based on the element\u0026#39;s identity and remains the same for this element. This\nis used in Single Page App cases where the element is being moved around and you\nwant to animate it with a view transition.\u003c/p\u003e\n\n\u003ch2 id=\"web_apis\" data-text=\"Web APIs\" tabindex=\"-1\"\u003eWeb APIs\u003c/h2\u003e\n\n\u003ch3 id=\"align_error_type_thrown_for_payment_webauthn_credential_creation\" data-text=\"Align error type thrown for \u0026#39;payment\u0026#39; WebAuthn credential creation\" tabindex=\"-1\"\u003eAlign error type thrown for \u0026#39;payment\u0026#39; WebAuthn credential creation\u003c/h3\u003e\n\n\u003cp\u003eCorrects the error type thrown during WebAuthn credential creation for \u003ccode translate=\"no\" dir=\"ltr\"\u003epayment\u003c/code\u003e\ncredentials. Due to a historic specification mismatch, creating a \u003ccode translate=\"no\" dir=\"ltr\"\u003epayment\u003c/code\u003e\ncredential in a cross-origin iframe without a user activation would throw a\n\u003ccode translate=\"no\" dir=\"ltr\"\u003eSecurityError\u003c/code\u003e instead of a \u003ccode translate=\"no\" dir=\"ltr\"\u003eNotAllowedError\u003c/code\u003e, which is what is thrown for\nnon-payment credentials. This is a breaking change. Code that previously\ndetected the type of error thrown (for example, \u003ccode translate=\"no\" dir=\"ltr\"\u003ee instanceof SecurityError\u003c/code\u003e)\nwould be affected. Code that just generally handles errors during credential\ncreation (for example, \u003ccode translate=\"no\" dir=\"ltr\"\u003ecatch (e)\u003c/code\u003e) will continue to function correctly.\u003c/p\u003e\n\n\u003ch3 id=\"blob_url_partitioning_fetchingnavigation\" data-text=\"Blob URL Partitioning: Fetching/Navigation\" tabindex=\"-1\"\u003eBlob URL Partitioning: Fetching/Navigation\u003c/h3\u003e\n\n\u003cp\u003eAs a continuation of Storage Partitioning, this implements partitioning of Blob\nURL access by Storage Key (top-level site, frame origin, and the\n\u003ccode translate=\"no\" dir=\"ltr\"\u003ehas-cross-site-ancestor\u003c/code\u003e boolean), with the exception of top-level navigations\nwhich will remain partitioned only by frame origin.\u003c/p\u003e\n\n\u003cp\u003eThis change can be temporarily reverted by setting the \u003ccode translate=\"no\" dir=\"ltr\"\u003ePartitionedBlobURLUsage\u003c/code\u003e\npolicy. The policy will be deprecated when the other storage partitioning\nrelated enterprise policies are deprecated.\u003c/p\u003e\n\n\u003ch3 id=\"call_stacks_in_crash_reports_from_unresponsive_web_pages\" data-text=\"Call stacks in crash reports from unresponsive web pages\" tabindex=\"-1\"\u003eCall stacks in crash reports from unresponsive web pages\u003c/h3\u003e\n\n\u003cp\u003eThis feature captures the JavaScript call stack when a web page becomes\nunresponsive due to JavaScript code running an infinite loop or other very long\ncomputation. This helps developers to identify the cause of the unresponsiveness\nand fix it more easily. The JavaScript call stack is included in the crash\nreporting API when the reason is unresponsive.\u003c/p\u003e\n\n\u003ch3 id=\"canvas_floating_point_color_types\" data-text=\"Canvas Floating Point Color Types\" tabindex=\"-1\"\u003eCanvas Floating Point Color Types\u003c/h3\u003e\n\n\u003cp\u003eIntroduces the ability to use floating point pixel formats (as opposed to 8-bit\nfixed point) with \u003ccode translate=\"no\" dir=\"ltr\"\u003eCanvasRenderingContext2D\u003c/code\u003e,\n\u003ccode translate=\"no\" dir=\"ltr\"\u003eOffscreenCanvasRenderingContext2D\u003c/code\u003e, and \u003ccode translate=\"no\" dir=\"ltr\"\u003eImageData\u003c/code\u003e. This is necessary for high\nprecision applications (for example, medical visualization), high dynamic range\ncontent, and linear working color spaces.\u003c/p\u003e\n\n\u003ch3 id=\"disallow_non-trustworthy_plaintext_http_prerendering\" data-text=\"Disallow non-trustworthy plaintext HTTP prerendering\" tabindex=\"-1\"\u003eDisallow non-trustworthy plaintext HTTP prerendering\u003c/h3\u003e\n\n\u003cp\u003eCurrently prerender is permitted over HTTP and HTTPS, while prefetch only works\nover HTTPS. Restrict prerender to be consistent with prefetch.\u003c/p\u003e\n\n\u003ch3 id=\"document-isolation-policy\" data-text=\"Document-Isolation-Policy\" tabindex=\"-1\"\u003eDocument-Isolation-Policy\u003c/h3\u003e\n\n\u003cp\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003eDocument-Isolation-Policy\u003c/code\u003e lets a document enable \u003ccode translate=\"no\" dir=\"ltr\"\u003ecrossOriginIsolation\u003c/code\u003e for\nitself, without having to deploy COOP or COEP, and regardless of the\n\u003ccode translate=\"no\" dir=\"ltr\"\u003ecrossOriginIsolation\u003c/code\u003e status of the page. The policy is backed by process\nisolation. Additionally, the document non-CORS cross-origin subresources will\neither be loaded without credentials or will need to have a CORP header.\u003c/p\u003e\n\n\u003cp\u003eLearn more in \u003ca href=\"https://developer.chrome.com/blog/document-isolation-policy\"\u003eDocument Isolation Policy: Enable powerful web features with\nease\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3 id=\"ed25519_in_web_cryptography\" data-text=\"Ed25519 in Web Cryptography\" tabindex=\"-1\"\u003eEd25519 in Web Cryptography\u003c/h3\u003e\n\n\u003cp\u003eThis feature adds support for Curve25519 algorithms in the Web Cryptography API,\nnamely the signature algorithm Ed25519\u003c/p\u003e\n\n\u003ch3 id=\"ip_address_logging_and_reporting\" data-text=\"IP address logging and reporting\" tabindex=\"-1\"\u003eIP address logging and reporting\u003c/h3\u003e\n\n\u003cp\u003eChrome Enterprise is enhancing security monitoring and incident response\ncapabilities by collecting and reporting local and remote IP addresses and\nsending those IP addresses to the Security Investigation Logs (SIT). In\naddition, Chrome Enterprise will allow admins to optionally send the IP\naddresses to 1P and 3P SIEM providers using the Chrome Enterprise Reporting\nconnector. This will be available for Chrome Enterprise Core customers.\u003c/p\u003e\n\n\u003ch3 id=\"javascript_promise_integration\" data-text=\"JavaScript Promise Integration\" tabindex=\"-1\"\u003eJavaScript Promise Integration\u003c/h3\u003e\n\n\u003cp\u003e\u003ca href=\"https://v8.dev/blog/jspi\"\u003eJavaScript Promise Integration\u003c/a\u003e (JSPI) is an API that\nlets WebAssembly applications integrate with JavaScript Promises. It allows a\nWebAssembly program to act as the generator of a Promise, and it allows the\nWebAssembly program to interact with Promise-bearing APIs. In particular, when\nan application uses JSPI to call a Promise-bearing (JavaScript) API, the\nWebAssembly code is suspended; and the original caller to the WebAssembly\nprogram is given a Promise that will be fulfilled when the WebAssembly program\nfinally completes.\u003c/p\u003e\n\n\u003ch3 id=\"language_detector_api\" data-text=\"Language Detector API\" tabindex=\"-1\"\u003eLanguage Detector API\u003c/h3\u003e\n\n\u003cp\u003eThe\n\u003ca href=\"https://developer.chrome.com/docs/ai/language-detection\"\u003eLanguage Detector API\u003c/a\u003e\nis a JavaScript API that identifies the language of a\nprovided string. This API is backed by an underlying model that is fine-tuned to\nperform language detection tasks.\u003c/p\u003e\n\n\u003cp\u003eGiven a string, the Language Detector API returns an ordered list of the\ndetected languages, along with a confidence score for each result.\u003c/p\u003e\n\n\u003cp\u003eOptionally, developers can pass in a list of expected input languages when\ncreating a Language Detector instance to help optimize for use cases where\ndetection is expected to be performed on certain languages.\u003c/p\u003e\n\n\u003ch3 id=\"restrict_float_attributes_and_arguments_on_svgmatrix_svgrect_and_svgpoint\" data-text=\"Restrict float attributes and arguments on SVGMatrix, SVGRect, and SVGPoint\" tabindex=\"-1\"\u003eRestrict float attributes and arguments on \u003ccode translate=\"no\" dir=\"ltr\"\u003eSVGMatrix\u003c/code\u003e, \u003ccode translate=\"no\" dir=\"ltr\"\u003eSVGRect\u003c/code\u003e, and \u003ccode translate=\"no\" dir=\"ltr\"\u003eSVGPoint\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eWhen setting float attributes or arguments on \u003ccode translate=\"no\" dir=\"ltr\"\u003eSVGMatrix\u003c/code\u003e, \u003ccode translate=\"no\" dir=\"ltr\"\u003eSVGRect\u003c/code\u003e and\n\u003ccode translate=\"no\" dir=\"ltr\"\u003eSVGPoint\u003c/code\u003e, you now can\u0026#39;t set them as \u003ccode translate=\"no\" dir=\"ltr\"\u003eInfinity\u003c/code\u003e or \u003ccode translate=\"no\" dir=\"ltr\"\u003eNan\u003c/code\u003e. A JavaScript exception is\nthrown if you attempt to set it, as defined in the SVG specification.\u003c/p\u003e\n\n\u003ch3 id=\"selection_api_getcomposedranges_and_direction\" data-text=\"Selection API getComposedRanges and direction\" tabindex=\"-1\"\u003eSelection API \u003ccode translate=\"no\" dir=\"ltr\"\u003egetComposedRanges\u003c/code\u003e and \u003ccode translate=\"no\" dir=\"ltr\"\u003edirection\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eThis feature ships two new API methods for the Selection API:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003eSelection.direction\u003c/code\u003e which returns the selection\u0026#39;s direction as either\n\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026#34;none\u0026#34;\u003c/code\u003e, \u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026#34;forward\u0026#34;\u003c/code\u003e or \u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026#34;backward\u0026#34;\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003eSelection.getComposedRanges()\u003c/code\u003e which returns a list of 0 or 1 \u0026#34;composed\u0026#34;\n\u003ccode translate=\"no\" dir=\"ltr\"\u003eStaticRange\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eA \u0026#34;composed\u0026#34; \u003ccode translate=\"no\" dir=\"ltr\"\u003eStaticRange\u003c/code\u003e is allowed to cross shadow boundaries, which normal\nRanges cannot.\u003c/p\u003e\n\n\u003cp\u003eFor example:\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"JavaScript\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003econst\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003erange\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003egetSelection\u003c/span\u003e\u003cspan\u003e().\u003c/span\u003e\u003cspan\u003egetComposedRanges\u003c/span\u003e\u003cspan\u003e({\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eshadowRoots\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e[\u003c/span\u003e\u003cspan\u003eroot\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003cp\u003eIf the selection crosses a shadow root boundary that isn\u0026#39;t provided in the\n\u003ccode translate=\"no\" dir=\"ltr\"\u003eshadowRoots\u003c/code\u003e list, then the endpoints of the \u003ccode translate=\"no\" dir=\"ltr\"\u003eStaticRange\u003c/code\u003e will be \u0026#34;rescoped\u0026#34; to be\noutside that tree. This makes sure we don\u0026#39;t expose unknown shadow trees.\u003c/p\u003e\n\n\u003ch3 id=\"web_app_scope_extensions\" data-text=\"Web app scope extensions\" tabindex=\"-1\"\u003eWeb app scope extensions\u003c/h3\u003e\n\n\u003cp\u003eAdds a \u003ccode translate=\"no\" dir=\"ltr\"\u003escope_extensions\u003c/code\u003e web app manifest field that lets web apps extend their\nscope to other origins.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"JavaScript\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#34;Example\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026#34;display\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#34;standalone\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026#34;start_url\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#34;/index.html\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026#34;scope_extensions\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e[\u003c/span\u003e\n\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\u003cspan\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#34;origin\u0026#34;\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#34;https://example.com\u0026#34;\u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003cp\u003eThis allows sites that control multiple subdomains and top level domains to be\npresented as a single web app.\u003c/p\u003e\n\n\u003cp\u003eRequires listed origins to confirm association with the web app using a\n\u003ccode translate=\"no\" dir=\"ltr\"\u003e.well-known/web-app-origin-association\u003c/code\u003e configuration file.\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"JavaScript\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e\u0026#34;https://sample-app.com/\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e    \u003c/span\u003e\u003cspan\u003e\u0026#34;scope\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#34;/\u0026#34;\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003ch3 id=\"webassembly_branch_hints\" data-text=\"WebAssembly Branch Hints\" tabindex=\"-1\"\u003eWebAssembly Branch Hints\u003c/h3\u003e\n\n\u003cp\u003eImproves the performance of compiled WebAssembly code by informing the engine\nthat a particular branch instruction is very likely to take a specific path.\nThis allows the engine to make better decisions for code layout (improving\ninstruction cache hits) and register allocation.\u003c/p\u003e\n\n\u003ch3 id=\"webgpu_gputextureview_for_externaltexture_binding\" data-text=\"WebGPU: GPUTextureView for externalTexture binding\" tabindex=\"-1\"\u003eWebGPU: \u003ccode translate=\"no\" dir=\"ltr\"\u003eGPUTextureView\u003c/code\u003e for \u003ccode translate=\"no\" dir=\"ltr\"\u003eexternalTexture\u003c/code\u003e binding\u003c/h3\u003e\n\n\u003cp\u003eA \u003ccode translate=\"no\" dir=\"ltr\"\u003eGPUTextureView\u003c/code\u003e is now allowed to be used for an \u003ccode translate=\"no\" dir=\"ltr\"\u003eexternalTexture\u003c/code\u003e binding\nwhen creating a \u003ccode translate=\"no\" dir=\"ltr\"\u003eGPUBindGroup\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch3 id=\"webgpu_copybuffertobuffer_overload\" data-text=\"WebGPU: copyBufferToBuffer overload\" tabindex=\"-1\"\u003eWebGPU: \u003ccode translate=\"no\" dir=\"ltr\"\u003ecopyBufferToBuffer\u003c/code\u003e overload\u003c/h3\u003e\n\n\u003cp\u003eThe \u003ccode translate=\"no\" dir=\"ltr\"\u003eGPUCommandEncoder\u003c/code\u003e \u003ccode translate=\"no\" dir=\"ltr\"\u003ecopyBufferToBuffer()\u003c/code\u003e method now includes a simpler way\nto copy entire buffers using a new overload with optional offsets and size\nparameters.\u003c/p\u003e\n\n\u003ch2 id=\"new_origin_trials\" data-text=\"New origin trials\" tabindex=\"-1\"\u003eNew origin trials\u003c/h2\u003e\n\n\u003cp\u003eIn Chrome 137 you can opt into the following new \u003ca href=\"https://developer.chrome.com/docs/web-platform/origin-trials\"\u003eorigin\ntrials\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3 id=\"full_frame_rate_render_blocking_attribute\" data-text=\"Full frame rate render blocking attribute\" tabindex=\"-1\"\u003eFull frame rate render blocking attribute\u003c/h3\u003e\n\n\u003cp\u003eAdds a new render blocking token full-frame-rate to the blocking attributes.\nWhen the renderer is blocked with the full-frame-rate token, the renderer will\nwork at a lower frame rate so as to reserve more resources for loading.\u003c/p\u003e\n\n\u003ch3 id=\"pause_media_playback_on_not-rendered_iframes\" data-text=\"Pause media playback on not-rendered iframes\" tabindex=\"-1\"\u003ePause media playback on not-rendered iframes\u003c/h3\u003e\n\n\u003cp\u003eAdds a \u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026#34;media-playback-while-not-rendered\u0026#34;\u003c/code\u003e permission policy to allow embedder\nwebsites to pause media playback of embedded iframes which aren\u0026#39;t rendered—that\nis, have their \u0026#34;display\u0026#34; property set to \u0026#34;none\u0026#34;. This should allow developers to\nbuild more user-friendly experiences and to also improve the performance by\nletting the browser handle the playback of content that is not visible to users.\u003c/p\u003e\n\n\u003ch3 id=\"rewriter_api\" data-text=\"Rewriter API\" tabindex=\"-1\"\u003eRewriter API\u003c/h3\u003e\n\n\u003cp\u003eThe Rewriter API transforms and rephrases input text in requested ways, backed\nby an on-device AI language model. Developers may use this API to remove\nredundancies within a text in order to fit into a word limit, rephrase messages\nto suit the intended audience or to be more constructive if a message is found\nto use toxic language, rephrasing a post or article to use simpler words and\nconcepts and more.\u003c/p\u003e\n\n\u003ch3 id=\"writer_api\" data-text=\"Writer API\" tabindex=\"-1\"\u003eWriter API\u003c/h3\u003e\n\n\u003cp\u003eThe Writer API can be used for writing new material given a writing task prompt,\nbacked by an on-device AI language model. Developers will be able to use this\nAPI to generate textual explanations of structured data, composing a post about\na product based on reviews or product description, expanding on pro and con\nlists into full views and more.\u003c/p\u003e\n\n  \n\n  \n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "14 min read",
  "publishedTime": null,
  "modifiedTime": null
}
