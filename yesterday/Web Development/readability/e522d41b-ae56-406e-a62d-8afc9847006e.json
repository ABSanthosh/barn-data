{
  "id": "e522d41b-ae56-406e-a62d-8afc9847006e",
  "title": "Findings from the customizable select request for developer feedback form",
  "link": "https://developer.chrome.com/blog/rfc-customizable-select-findings?hl=en",
  "description": "Thank you for the time you shared with us, providing feedback, reviewing details and helping shape standards.",
  "author": "",
  "published": "Mon, 16 Dec 2024 08:00:00 GMT",
  "source": "https://developer.chrome.com/static/blog/feed.xml",
  "categories": null,
  "byline": "",
  "length": 7227,
  "excerpt": "Thank you for the time you shared with us, providing feedback, reviewing details and helping shape standards.",
  "siteName": "Chrome for Developers",
  "favicon": "https://www.gstatic.com/devrel-devsite/prod/vec94db9b1329e6c4d1d9b6b24ba16ad6c02043dcd66ba9c6a8f3d8fa0af3eec7/chrome/images/favicon.png",
  "text": "Stay organized with collections Save and categorize content based on your preferences. Published: December 16, 2024 In September we asked for your feedback on the experimental customizable select feature. The feedback you shared included use cases (for example, design systems, combo boxes), thoughts on the API's entry mode, and feedback on base styles. Concerns included accessibility, browser compatibility, the need for search functionality, and the desire for multi-select support. It looks like you are eager to use the API in production, but have some reservations and specific feature requests. All of this information has been used by Chrome engineers and managers to make informed decisions about the feature. This post shares the key takeaways from each of the questions in the customizable select survey. What would you build with this new API? There was a variety of use cases shared, in general they included: Building design system components: create select components for their design systems, ensuring consistency and customizability across their projects. Creating various types of selectors: things like language selectors, country selectors, user permission selectors, and more. Enhancing existing select elements: enhance existing select elements with features like images, SVGs, and richer styling. Replacing custom select implementations: replace custom-built select components with a standardized, native solution. Building combo boxes and custom pickers: more complex features like combo boxes, custom pickers for phone numbers, time zones, currencies, and other data types. Improving form UIs: improve forms by creating more visually appealing and functional select elements. These responses highlight the versatility of the new API and its potential to improve the user experience and development efficiency for a wide range of web applications. Do you plan to use this API in production once it reaches Baseline widely available? 95% of you said \"yes.\" Have you tried the new API? If so, were you able to build what you wanted with it? 30% of you said \"yes.\" What are your thoughts on the entry mode for customizable select (appearance: base-select on the \u003cselect\u003e element and ::picker(select)) Feedback on this entry mode is mixed: Some find the approach acceptable, reasonable, or even better than the current situation. They see it as a \"logical\" or \"fine\" way to progressively enhance the \u003cselect\u003e element. Others express confusion or find the syntax awkward. The use of two properties (appearance: base-select and ::picker(select)) is seen as redundant or unnecessary. Concerns are raised about the naming (base-select might be misleading) and potential confusion for newcomers unfamiliar with the underlying concepts. A few respondents suggest alternative approaches, such as using a single property or selector, or avoiding the appearance property altogether. Overall, while some respondents are comfortable with the current entry mode, others find it confusing or suggest improvements for clarity and simplicity. This feedback highlights the importance of clear documentation and examples to guide developers in using the new API effectively. Do you have any feedback on the existing base (user agent) styles for customizable select? Some respondents find the styles acceptable or good, while others have specific criticisms or suggestions. Some of the feedback points include: The checkmark icon is not pretty or could be simpler. There is not enough space for a checkmark next to items. The base styles look cramped, with the focus ring cut off and no gap between the checked icon and text. The styles could be closer to the OS platform style or a \u003cdialog\u003e element. The default arrow should point down and flip to the top when open. A reset may be needed to remove base user-agent styles. There was a variety of feedback, questions, and concerns about the new customizable select API. Some of the key themes include: Accessibility: Several respondents raised concerns about accessibility, particularly with screen readers and keyboard navigation. Multi-select and combo boxes: There's a strong desire for multi-select functionality and combo box support. Search functionality: The ability to search within the select options is a requested feature. Styling and browser compatibility: Concerns were raised about styling options, browser compatibility, and the need for CSS resets. Implementation details: Questions were asked about specific implementation details like focus lock, rendering behavior, and custom children. General feedback: Some respondents shared general feedback, such as the desire for a simpler API entry mode and the ability to render outside the browser chrome. Overall, the feedback highlights the need for improved accessibility, additional features like multi-select and search, and clear guidance on styling and browser compatibility. Is there any other feedback you would like to add? Key themes from the thoughts and suggestions of respondents include: Desire for multi-select and combo box functionality: Multiple respondents specifically request the addition of multi-select and combo box capabilities. Importance of accessibility: Some respondents emphasize the need for continued focus on accessibility features. Positive feedback and feature requests: Some express excitement about the API and offer suggestions like a search option or the ability to detect support using @supports. Specific use cases: A few respondents mention specific use cases they'd like to see supported, such as rendering outside the browser chrome or allowing custom values within the \u003cselect\u003e element. General comments: Some offer general praise or express the desire for consistent appearance across browsers. Overall, this feedback reinforces the demand for multi-select and combo box features, highlights the importance of accessibility, and provides additional insights into potential use cases and areas for improvement. We thank everyone again, and hope this community feedback summary finds implementers and developers well, aiding in a better customizable select experience for users and developers alike. Except as otherwise noted, the content of this page is licensed under the Creative Commons Attribution 4.0 License, and code samples are licensed under the Apache 2.0 License. For details, see the Google Developers Site Policies. Java is a registered trademark of Oracle and/or its affiliates. Last updated 2024-12-16 UTC. [[[\"Easy to understand\",\"easyToUnderstand\",\"thumb-up\"],[\"Solved my problem\",\"solvedMyProblem\",\"thumb-up\"],[\"Other\",\"otherUp\",\"thumb-up\"]],[[\"Missing the information I need\",\"missingTheInformationINeed\",\"thumb-down\"],[\"Too complicated / too many steps\",\"tooComplicatedTooManySteps\",\"thumb-down\"],[\"Out of date\",\"outOfDate\",\"thumb-down\"],[\"Samples / code issue\",\"samplesCodeIssue\",\"thumb-down\"],[\"Other\",\"otherDown\",\"thumb-down\"]],[\"Last updated 2024-12-16 UTC.\"],[],[]]",
  "image": "https://developer.chrome.com/static/blog/rfc-customizable-select-findings/image/select-thumb.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\n    \u003cdevsite-progress type=\"indeterminate\" id=\"app-progress\"\u003e\u003c/devsite-progress\u003e\n  \n    \u003csection\u003e\n      \u003cdevsite-cookie-notification-bar\u003e\u003c/devsite-cookie-notification-bar\u003e\u003cdevsite-header role=\"banner\"\u003e\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\u003c/devsite-header\u003e\n      \n      \u003csection id=\"gc-wrapper\"\u003e\n        \u003cmain role=\"main\" has-sidebar=\"\"\u003e\n          \n          \n          \n          \n          \u003cdevsite-content\u003e\n            \n              \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003carticle\u003e\n  \n  \n  \n  \n  \n\n  \n  \n    \n  \u003cdevsite-feature-tooltip ack-key=\"AckCollectionsBookmarkTooltipDismiss\" analytics-category=\"Site-Wide Custom Events\" analytics-action-show=\"Callout Profile displayed\" analytics-action-close=\"Callout Profile dismissed\" analytics-label=\"Create Collection Callout\" dismiss-button=\"true\" id=\"devsite-collections-dropdown\" dismiss-button-text=\"Dismiss\" close-button-text=\"Got it\"\u003e\n\n    \n    \u003cdevsite-bookmark\u003e\u003c/devsite-bookmark\u003e\n\n    \u003cspan slot=\"popout-heading\"\u003e\n      \n      Stay organized with collections\n    \u003c/span\u003e\n    \u003cspan slot=\"popout-contents\"\u003e\n      \n      Save and categorize content based on your preferences.\n    \u003c/span\u003e\n  \u003c/devsite-feature-tooltip\u003e\n  \n  \n\n  \u003cdevsite-toc depth=\"2\" devsite-toc-embedded=\"\"\u003e\n  \u003c/devsite-toc\u003e\n  \n    \n  \n\n  \n\n\n\n\n\n\n\u003cdiv\u003e\n\n  \n    \n\n\n\n\n\u003cdiv translate=\"no\"\u003e\n        \n          \u003cp\u003e\u003cimg alt=\"Adam Argyle\" src=\"https://web.dev/images/authors/adamargyle.jpg\" decoding=\"async\" height=\"64\" loading=\"lazy\" width=\"64\"/\u003e\u003c/p\u003e\n      \u003c/div\u003e\n\n\u003cp\u003e\n  Published: December 16, 2024\n\u003c/p\u003e\n\n\n\u003cp\u003eIn September we asked for your feedback on the experimental customizable select feature. The feedback you shared included use cases (for example, design systems, combo boxes), thoughts on the API\u0026#39;s entry mode, and feedback on base styles. Concerns included accessibility, browser compatibility, the need for search functionality, and the desire for multi-select support. It looks like you are eager to use the API in production, but have some reservations and specific feature requests. \u003c/p\u003e\n\n\u003cp\u003eAll of this information has been used by Chrome engineers and managers to make informed decisions about the feature. This post shares the key takeaways from each of the questions in \u003ca href=\"https://developer.chrome.com/blog/rfc-customizable-select\"\u003ethe customizable select survey\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"what_would_you_build_with_this_new_api\" data-text=\"What would you build with this new API?\" tabindex=\"-1\"\u003eWhat would you build with this new API?\u003c/h2\u003e\n\n\u003cp\u003eThere was a variety of use cases shared, in general they included:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eBuilding design system components\u003c/strong\u003e: create select components for their design systems, ensuring consistency and customizability across their projects.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eCreating various types of selectors\u003c/strong\u003e: things like language selectors, country selectors, user permission selectors, and more.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eEnhancing existing select elements\u003c/strong\u003e: enhance existing select elements with features like images, SVGs, and richer styling.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eReplacing custom select implementations\u003c/strong\u003e: replace custom-built select components with a standardized, native solution.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eBuilding combo boxes and custom pickers\u003c/strong\u003e: more complex features like combo boxes, custom pickers for phone numbers, time zones, currencies, and other data types.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eImproving form UIs\u003c/strong\u003e: improve forms by creating more visually appealing and functional select elements.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThese responses highlight the versatility of the new API and its potential to improve the user experience and development efficiency for a wide range of web applications.\u003c/p\u003e\n\n\u003ch2 id=\"do_you_plan_to_use_this_api_in_production_once_it_reaches_baseline_widely_available\" data-text=\"Do you plan to use this API in production once it reaches Baseline widely available?\" tabindex=\"-1\"\u003eDo you plan to use this API in production once it reaches Baseline widely available?\u003c/h2\u003e\n\n\u003cfigure\u003e\n  \u003cimg width=\"1200\" height=\"742\" src=\"https://developer.chrome.com/static/blog/rfc-customizable-select-findings/image/plan-to-use.png\" loading=\"lazy\" alt=\"\" srcset=\"https://developer.chrome.com/static/blog/rfc-customizable-select-findings/image/plan-to-use_36.png 36w,https://developer.chrome.com/static/blog/rfc-customizable-select-findings/image/plan-to-use_48.png 48w,https://developer.chrome.com/static/blog/rfc-customizable-select-findings/image/plan-to-use_72.png 72w,https://developer.chrome.com/static/blog/rfc-customizable-select-findings/image/plan-to-use_96.png 96w,https://developer.chrome.com/static/blog/rfc-customizable-select-findings/image/plan-to-use_480.png 480w,https://developer.chrome.com/static/blog/rfc-customizable-select-findings/image/plan-to-use_720.png 720w,https://developer.chrome.com/static/blog/rfc-customizable-select-findings/image/plan-to-use_856.png 856w,https://developer.chrome.com/static/blog/rfc-customizable-select-findings/image/plan-to-use_960.png 960w,https://developer.chrome.com/static/blog/rfc-customizable-select-findings/image/plan-to-use_1440.png 1440w,https://developer.chrome.com/static/blog/rfc-customizable-select-findings/image/plan-to-use_1920.png 1920w,https://developer.chrome.com/static/blog/rfc-customizable-select-findings/image/plan-to-use_2880.png 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n  \u003cfigcaption\u003e95% of you said \u0026#34;yes.\u0026#34;\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003ch2 id=\"have_you_tried_the_new_api_if_so_were_you_able_to_build_what_you_wanted_with_it\" data-text=\"Have you tried the new API? If so, were you able to build what you wanted with it?\" tabindex=\"-1\"\u003eHave you tried the new API? If so, were you able to build what you wanted with it?\u003c/h2\u003e\n\n\u003cfigure\u003e\n  \u003cimg width=\"1200\" height=\"742\" src=\"https://developer.chrome.com/static/blog/rfc-customizable-select-findings/image/tried-to-use.png\" loading=\"lazy\" alt=\"\" srcset=\"https://developer.chrome.com/static/blog/rfc-customizable-select-findings/image/tried-to-use_36.png 36w,https://developer.chrome.com/static/blog/rfc-customizable-select-findings/image/tried-to-use_48.png 48w,https://developer.chrome.com/static/blog/rfc-customizable-select-findings/image/tried-to-use_72.png 72w,https://developer.chrome.com/static/blog/rfc-customizable-select-findings/image/tried-to-use_96.png 96w,https://developer.chrome.com/static/blog/rfc-customizable-select-findings/image/tried-to-use_480.png 480w,https://developer.chrome.com/static/blog/rfc-customizable-select-findings/image/tried-to-use_720.png 720w,https://developer.chrome.com/static/blog/rfc-customizable-select-findings/image/tried-to-use_856.png 856w,https://developer.chrome.com/static/blog/rfc-customizable-select-findings/image/tried-to-use_960.png 960w,https://developer.chrome.com/static/blog/rfc-customizable-select-findings/image/tried-to-use_1440.png 1440w,https://developer.chrome.com/static/blog/rfc-customizable-select-findings/image/tried-to-use_1920.png 1920w,https://developer.chrome.com/static/blog/rfc-customizable-select-findings/image/tried-to-use_2880.png 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n  \u003cfigcaption\u003e30% of you said \u0026#34;yes.\u0026#34;\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003ch2 id=\"what_are_your_thoughts_on_the_entry_mode_for_customizable_select_appearance_base-select_on_the_select_element_and_pickerselect\" data-text=\"What are your thoughts on the entry mode for customizable select (appearance: base-select on the \u0026lt;select\u0026gt; element and ::picker(select))\" tabindex=\"-1\"\u003eWhat are your thoughts on the entry mode for customizable select (\u003ccode translate=\"no\" dir=\"ltr\"\u003eappearance: base-select\u003c/code\u003e on the \u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026lt;select\u0026gt;\u003c/code\u003e element and \u003ccode translate=\"no\" dir=\"ltr\"\u003e::picker(select)\u003c/code\u003e)\u003c/h2\u003e\n\n\u003cp\u003eFeedback on this entry mode is mixed:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eSome find the approach acceptable, reasonable, or even better than the current situation. They see it as a \u0026#34;logical\u0026#34; or \u0026#34;fine\u0026#34; way to progressively enhance the \u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026lt;select\u0026gt;\u003c/code\u003e element.\u003c/li\u003e\n\u003cli\u003eOthers express confusion or find the syntax awkward. The use of two properties (\u003ccode translate=\"no\" dir=\"ltr\"\u003eappearance: base-select\u003c/code\u003e and \u003ccode translate=\"no\" dir=\"ltr\"\u003e::picker(select)\u003c/code\u003e) is seen as redundant or unnecessary. Concerns are raised about the naming (\u003ccode translate=\"no\" dir=\"ltr\"\u003ebase-select\u003c/code\u003e might be misleading) and potential confusion for newcomers unfamiliar with the underlying concepts.\u003c/li\u003e\n\u003cli\u003eA few respondents suggest alternative approaches, such as using a single property or selector, or avoiding the \u003ccode translate=\"no\" dir=\"ltr\"\u003eappearance\u003c/code\u003e property altogether.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eOverall, while some respondents are comfortable with the current entry mode, others find it confusing or suggest improvements for clarity and simplicity. This feedback highlights the importance of clear documentation and examples to guide developers in using the new API effectively.\u003c/p\u003e\n\n\u003ch2 id=\"do_you_have_any_feedback_on_the_existing_base_user_agent_styles_for_customizable_select\" data-text=\"Do you have any feedback on the existing base (user agent) styles for customizable select?\" tabindex=\"-1\"\u003eDo you have any feedback on the existing base (user agent) styles for customizable select?\u003c/h2\u003e\n\n\u003cp\u003eSome respondents find the styles acceptable or good, while others have specific criticisms or suggestions. Some of the feedback points include:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe checkmark icon is not pretty or could be simpler.\u003c/li\u003e\n\u003cli\u003eThere is not enough space for a checkmark next to items.\u003c/li\u003e\n\u003cli\u003eThe base styles look cramped, with the focus ring cut off and no gap between the checked icon and text.\u003c/li\u003e\n\u003cli\u003eThe styles could be closer to the OS platform style or a \u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026lt;dialog\u0026gt;\u003c/code\u003e element.\u003c/li\u003e\n\u003cli\u003eThe default arrow should point down and flip to the top when open.\u003c/li\u003e\n\u003cli\u003eA reset may be needed to remove base user-agent styles.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eThere was a variety of feedback, questions, and concerns about the new customizable select API. Some of the key themes include:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eAccessibility\u003c/strong\u003e: Several respondents raised concerns about accessibility, particularly with screen readers and keyboard navigation.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eMulti-select and combo boxes\u003c/strong\u003e: There\u0026#39;s a strong desire for multi-select functionality and combo box support.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSearch functionality\u003c/strong\u003e: The ability to search within the select options is a requested feature.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eStyling and browser compatibility\u003c/strong\u003e: Concerns were raised about styling options, browser compatibility, and the need for CSS resets.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eImplementation details\u003c/strong\u003e: Questions were asked about specific implementation details like focus lock, rendering behavior, and custom children.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eGeneral feedback\u003c/strong\u003e: Some respondents shared general feedback, such as the desire for a simpler API entry mode and the ability to render outside the browser chrome.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eOverall, the feedback highlights the need for improved accessibility, additional features like multi-select and search, and clear guidance on styling and browser compatibility.\u003c/p\u003e\n\n\u003ch2 id=\"is_there_any_other_feedback_you_would_like_to_add\" data-text=\"Is there any other feedback you would like to add?\" tabindex=\"-1\"\u003eIs there any other feedback you would like to add?\u003c/h2\u003e\n\n\u003cp\u003eKey themes from the thoughts and suggestions of respondents include:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eDesire for multi-select and combo box functionality\u003c/strong\u003e: Multiple respondents specifically request the addition of multi-select and combo box capabilities.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eImportance of accessibility\u003c/strong\u003e: Some respondents emphasize the need for continued focus on accessibility features.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePositive feedback and feature requests\u003c/strong\u003e: Some express excitement about the API and offer suggestions like a search option or the ability to detect support using \u003ccode translate=\"no\" dir=\"ltr\"\u003e@supports\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSpecific use cases\u003c/strong\u003e: A few respondents mention specific use cases they\u0026#39;d like to see supported, such as rendering outside the browser chrome or allowing custom values within the \u003ccode translate=\"no\" dir=\"ltr\"\u003e\u0026lt;select\u0026gt;\u003c/code\u003e element.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eGeneral comments\u003c/strong\u003e: Some offer general praise or express the desire for consistent appearance across browsers.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eOverall, this feedback reinforces the demand for multi-select and combo box features, highlights the importance of accessibility, and provides additional insights into potential use cases and areas for improvement.\u003c/p\u003e\n\n\u003cp\u003eWe thank everyone again, and hope this community feedback summary finds implementers and developers well, aiding in a better customizable select experience for users and developers alike.\u003c/p\u003e\n\n  \n\n  \n\u003c/div\u003e\n\n  \n\n  \n    \n    \n      \n    \u003cdevsite-thumb-rating position=\"footer\"\u003e\n    \u003c/devsite-thumb-rating\u003e\n  \n       \n    \n    \n  \n\n  \n  \n\u003c/article\u003e\n\n\n\u003cdevsite-content-footer\u003e\n  \u003cp\u003eExcept as otherwise noted, the content of this page is licensed under the \u003ca href=\"https://creativecommons.org/licenses/by/4.0/\"\u003eCreative Commons Attribution 4.0 License\u003c/a\u003e, and code samples are licensed under the \u003ca href=\"https://www.apache.org/licenses/LICENSE-2.0\"\u003eApache 2.0 License\u003c/a\u003e. For details, see the \u003ca href=\"https://developers.google.com/site-policies\"\u003eGoogle Developers Site Policies\u003c/a\u003e. Java is a registered trademark of Oracle and/or its affiliates.\u003c/p\u003e\n  \u003cp\u003eLast updated 2024-12-16 UTC.\u003c/p\u003e\n\u003c/devsite-content-footer\u003e\n\n\n\u003cdevsite-notification\u003e\n\u003c/devsite-notification\u003e\n\n\n  \n\u003cp\u003e\n  \n  \n    \u003ctemplate\u003e\n      [[[\u0026#34;Easy to understand\u0026#34;,\u0026#34;easyToUnderstand\u0026#34;,\u0026#34;thumb-up\u0026#34;],[\u0026#34;Solved my problem\u0026#34;,\u0026#34;solvedMyProblem\u0026#34;,\u0026#34;thumb-up\u0026#34;],[\u0026#34;Other\u0026#34;,\u0026#34;otherUp\u0026#34;,\u0026#34;thumb-up\u0026#34;]],[[\u0026#34;Missing the information I need\u0026#34;,\u0026#34;missingTheInformationINeed\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Too complicated / too many steps\u0026#34;,\u0026#34;tooComplicatedTooManySteps\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Out of date\u0026#34;,\u0026#34;outOfDate\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Samples / code issue\u0026#34;,\u0026#34;samplesCodeIssue\u0026#34;,\u0026#34;thumb-down\u0026#34;],[\u0026#34;Other\u0026#34;,\u0026#34;otherDown\u0026#34;,\u0026#34;thumb-down\u0026#34;]],[\u0026#34;Last updated 2024-12-16 UTC.\u0026#34;],[],[]]\n    \u003c/template\u003e\n  \n\u003c/p\u003e\n            \n          \u003c/devsite-content\u003e\n        \u003c/main\u003e\n        \n        \n        \n        \u003cdevsite-panel\u003e\u003c/devsite-panel\u003e\n        \n      \u003c/section\u003e\u003c/section\u003e\n    \u003cdevsite-sitemask\u003e\u003c/devsite-sitemask\u003e\n    \u003cdevsite-snackbar\u003e\u003c/devsite-snackbar\u003e\n    \u003cdevsite-tooltip\u003e\u003c/devsite-tooltip\u003e\n    \u003cdevsite-heading-link\u003e\u003c/devsite-heading-link\u003e\n    \u003cdevsite-analytics\u003e\n      \n        \n\n      \n    \u003c/devsite-analytics\u003e\n    \n      \u003cdevsite-badger\u003e\u003c/devsite-badger\u003e\n    \n    \n    \n    \u003cdevsite-a11y-announce\u003e\u003c/devsite-a11y-announce\u003e\n  \n\u003c/div\u003e",
  "readingTime": "8 min read",
  "publishedTime": null,
  "modifiedTime": null
}
