{
  "id": "50c4a22d-a2c8-4307-9bae-e4b2ff6b6715",
  "title": "KelpUI",
  "link": "https://css-tricks.com/kelpui/",
  "description": "KelpUI is new library that Chris Ferdinandi is developing, designed to leverage newer CSS features and Web Components. I've enjoyed following Chris as he's published an ongoing series of articles detailing his thought process behind the library, getting deep into his approach. You really get a clear picture of his strategy and I love it. KelpUI originally published on CSS-Tricks, which is part of the DigitalOcean family. You should get the newsletter.",
  "author": "Geoff Graham",
  "published": "Thu, 26 Jun 2025 16:42:32 +0000",
  "source": "https://css-tricks.com/feed/",
  "categories": [
    "Links",
    "framework"
  ],
  "byline": "Geoff Graham",
  "length": 2148,
  "excerpt": "KelpUI is new library that Chris Ferdinandi is developing, designed to leverage newer CSS features and Web Components. I've enjoyed following Chris as he's published an ongoing series of articles detailing his thought process behind the library, getting deep into his approach. You really get a clear picture of his strategy and I love it.",
  "siteName": "CSS-Tricks",
  "favicon": "https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/07/star.png?fit=180%2C180\u0026ssl=1",
  "text": "KelpUI is new library that Chris Ferdinandi is developing, designed to leverage newer CSS features and Web Components. I’ve enjoyed following Chris as he’s published an ongoing series of articles detailing his thought process behind the library, getting deep into his approach. You really get a clear picture of his strategy and I love it. He outlined his principles up front in a post back in April: I’m imagining a system that includes… Base styles for all of the common HTML elements. Loads of utility classes for nudging and tweaking things. Group classes for styling more complex UI elements without a million little classes. Easy customization with CSS variables. Web Components to progressively add interactivity to functional HTML. All of the Web Component HTML lives in the light DOM, so its easy to style and reason about. I’m imagining something that can be loaded directly from a CDN, downloaded locally, or imported if you want to roll your own build. And that’s what I’ve seen so far. The Cascade is openly embraced and logically structured with Cascade Layers. Plenty of utility classes are included, with extra care put into how they are named. Selectors are kept simple and specificity is nice and low, where needed. Layouts are flexible with good constraints. Color palettes are accessible and sport semantic naming. Chris has even put a ton of thought into how KelpUI is licensed. KelpUI is still evolving, and that’s part of the beauty of looking at it now and following Chris’s blog as he openly chronicles his approach. There’s always going to be some opinionated directions in a library like this, but I love that the guiding philosophy is so clear and is being used as a yardstick to drive decisions. As I write this, Chris is openly questioning the way he optimizes the library, demonstrating the tensions between things like performance and a good developer experience. Looks like it’ll be a good system, but even more than that, it’s a wonderful learning journey that’s worth following. Direct Link →",
  "image": "https://i0.wp.com/css-tricks.com/wp-content/uploads/2025/06/kelpui.webp",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\n          \n          \n\u003cp\u003e\u003ca href=\"https://kelpui.com\" rel=\"noopener\"\u003eKelpUI\u003c/a\u003e is new library that \u003ca href=\"https://gomakethings.com\" rel=\"noopener\"\u003eChris Ferdinandi\u003c/a\u003e is developing, designed to leverage newer CSS features and Web Components. I’ve enjoyed following Chris as he’s published an ongoing series of articles detailing his thought process behind the library, getting deep into his approach. You really get a clear picture of his strategy and I love it.\u003c/p\u003e\n\n\n\n\u003cp\u003eHe outlined his principles up front in a post back in April:\u003c/p\u003e\n\n\n\n\u003cblockquote\u003e\n\u003cp\u003eI’m imagining a system that includes…\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eBase styles for all of the common HTML elements.\u003c/li\u003e\n\n\n\n\u003cli\u003eLoads of utility classes for nudging and tweaking things.\u003c/li\u003e\n\n\n\n\u003cli\u003eGroup classes for styling more complex UI elements \u003cem\u003ewithout\u003c/em\u003e a million little classes.\u003c/li\u003e\n\n\n\n\u003cli\u003eEasy customization with CSS variables.\u003c/li\u003e\n\n\n\n\u003cli\u003eWeb Components to progressively add interactivity to functional HTML.\u003c/li\u003e\n\n\n\n\u003cli\u003eAll of the Web Component HTML lives in the light DOM, so its easy to style and reason about.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eI’m imagining something that can be loaded directly from a CDN, downloaded locally, or imported if you want to roll your own build.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\n\n\u003cp\u003eAnd that’s what I’ve seen so far. The Cascade is openly embraced and \u003ca href=\"https://gomakethings.com/the-css-layer-at-rule/\" rel=\"noopener\"\u003elogically structured with Cascade Layers\u003c/a\u003e. Plenty of \u003ca href=\"https://gomakethings.com/naming-conventions-for-css-classes/\" rel=\"noopener\"\u003eutility classes are included\u003c/a\u003e, with extra care put into how they are named. \u003ca href=\"https://gomakethings.com/reducing-css-complexity-with-the-is-pseudo-class/\" rel=\"noopener\"\u003eSelectors are kept simple\u003c/a\u003e and \u003ca href=\"https://gomakethings.com/is-vs.-where/\" rel=\"noopener\"\u003especificity is nice and low\u003c/a\u003e, where needed. \u003ca href=\"https://gomakethings.com/modern-layouts-with-css/\" rel=\"noopener\"\u003eLayouts are flexible\u003c/a\u003e with \u003ca href=\"https://gomakethings.com/4-common-layouts-made-easy-with-modern-css/\" rel=\"noopener\"\u003egood constraints\u003c/a\u003e. Color palettes are \u003ca href=\"https://gomakethings.com/how-to-create-an-accessible-color-palette/\" rel=\"noopener\"\u003eaccessible\u003c/a\u003e and sport \u003ca href=\"https://gomakethings.com/creating-a-semantic-color-palette/\" rel=\"noopener\"\u003esemantic naming\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cp\u003eChris has even put a ton of thought into \u003ca href=\"https://gomakethings.com/the-kelp-commons-license/\" rel=\"noopener\"\u003ehow KelpUI is licensed\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cp\u003eKelpUI is still evolving, and that’s part of the beauty of looking at it now and following Chris’s blog as he openly chronicles his approach. There’s always going to be some opinionated directions in a library like this, but I love that the guiding philosophy is so clear and is being used as a yardstick to drive decisions. As I write this, Chris is \u003ca href=\"https://gomakethings.com/modular-css-redux/\" rel=\"noopener\"\u003eopenly questioning the way he optimizes the library\u003c/a\u003e, demonstrating the tensions between things like performance and a good developer experience.\u003c/p\u003e\n\n\n\n\u003cp\u003eLooks like it’ll be a good system, but even more than that, it’s a wonderful learning journey that’s worth following.\u003c/p\u003e\n\n                      \u003cp\u003e     \n                              \u003ca href=\"https://kelpui.com\"\u003e\n                  Direct Link →\n                \u003c/a\u003e\n              \n                          \u003c/p\u003e\n          \n        \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": "2025-06-26T10:42:32-06:00",
  "modifiedTime": "2025-06-26T10:45:12-06:00"
}
