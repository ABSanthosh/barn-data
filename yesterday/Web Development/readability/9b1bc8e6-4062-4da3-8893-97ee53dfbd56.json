{
  "id": "9b1bc8e6-4062-4da3-8893-97ee53dfbd56",
  "title": "Tooltip Best Practices",
  "link": "https://css-tricks.com/tooltip-best-practices/",
  "description": "What are tooltips, exactly? There's two kinds and the one you use has implications on the user experience, as Zell illustrates in this explainer on best practices. Tooltip Best Practices originally published on CSS-Tricks, which is part of the DigitalOcean family. You should get the newsletter.",
  "author": "Zell Liew",
  "published": "Tue, 29 Oct 2024 14:01:18 +0000",
  "source": "https://css-tricks.com/feed/",
  "categories": [
    "Articles",
    "dialog",
    "popover",
    "semantics"
  ],
  "byline": "Zell Liew",
  "length": 6233,
  "excerpt": "What are tooltips, exactly? There's two kinds and the one you use has implications on the user experience, as Zell illustrates in this explainer on best practices.",
  "siteName": "CSS-Tricks",
  "favicon": "https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/07/star.png?fit=180%2C180\u0026ssl=1",
  "text": "DigitalOcean provides cloud products for every stage of your journey. Get started with $200 in free credit! In this article, I try to summarize the best practices mentioned by various accessibility experts and their work (like this, this, and this) into a single article that’s easy to read, understand, and apply. Let’s begin. What are tooltips? Tooltips are used to provide simple text hints for UI controls. Think of them as tips for tools. They’re basically little bubbles of text content that pop up when you hover over an unnamed control (like the bell icon in Stripe). The “Notifications” text that pops up when you hover over Stripe’s bell icon is a tooltip. If you prefer more of a formal definition, Sarah Highley provides us with a pretty good one: A “tooltip” is a non-modal (or non-blocking) overlay containing text-only content that provides supplemental information about an existing UI control. It is hidden by default, and becomes available on hover or focus of the control it describes. She further goes on to say: That definition could even be narrowed down even further by saying tooltips must provide only descriptive text. This narrowed definition is basically (in my experience) how every accessibility expert defines tooltips: A tooltip is a popover. Tooltips must not contain interactive content. Heydon Pickering takes things even further, saying: If you’re thinking of adding interactive content (even an ok button), you should be using dialog instead. In his words: You’re thinking of dialogs. Use a dialog. Two kinds of tooltips Tooltips are basically only used for two things: Labeling an icon Providing a contextual description of an icon Heydon separates these cleanly into two categories, “Primary Label” and “Auxiliary description” in his Inclusive Components article on tooltips and toggletips). Labeling If your tooltip is used to label an icon — using only one or two words — you should use the aria-labelledby attribute to properly label it since it is attached to nothing else on the page that would help identify it. \u003cbutton aria-labelledby=\"notifications\"\u003e ... \u003c/button\u003e \u003cdiv role=\"tooltip\" id=\"notifications\"\u003eNotifications\u003c/div\u003e You could provide contextual information, like stating the number of notifications, by giving a space-separated list of ids to aria-labelledby. \u003cbutton aria-labelledby=\"notifications-count notifications-label\"\u003e \u003c!-- bell icon here --\u003e \u003cspan id=\"notifications-count\"\u003e3\u003c/span\u003e \u003c/button\u003e \u003cdiv role=\"tooltip\" id=\"notifications-label\"\u003eNotifications\u003c/div\u003e Providing contextual description If your tooltip provides a contextual description of the icon, you should use aria-describedby. But, when you do this, you also need to provide an accessible name for the icon. In this case, Heydon recommends including the label as the text content of the button. This label would be hidden visually from sighted users but read for screen readers. Then, you can add aria-describedby to include the auxiliary description. \u003cbutton class=\"notifications\" aria-describedby=\"notifications-desc\"\u003e \u003c!-- icon for bell here --\u003e \u003cspan id=\"notifications-count\"\u003e3\u003c/span\u003e \u003cspan class=\"visually-hidden\"\u003eNotifications\u003c/span\u003e \u003c/button\u003e \u003cdiv role=\"tooltip\" id=\"notifications-desc\"\u003eView and manage notifications settings\u003c/div\u003e Here, screen readers would say “3 notifications” first, followed by “view and manage notifications settings” after a brief pause. Additional tooltip dos and don’ts Here are a couple of additional points you should be aware of: Do: Use aria-labellebdy or aria-describedby attributes depending on the type of tooltip you’re building. Use the tooltip role even if it doesn’t do much in screen readers today, because it may extend accessibility support for some software. Open tooltips on mouseover or focus, and close them on mouseout or blur. Allow a mouse user to move their mouse over the tooltip content without dismissing the tooltip. Allow a keyboard user to close the tooltip on the Escape button, per WCAG Success Criterion 1.4.13. Don’t: Don’t use the title attribute. Much has been said about this so I shall not repeat them. Don’t use the aria-haspopup attribute with the tooltip role because aria-haspopup signifies interactive content while tooltip should contain non-interactive content. Don’t include essential content inside tooltips because some screen readers may ignore aria-labelledby or aria-describedby. (It’s rare, but possible.) Tooltip limitations and alternatives Tooltips are inaccessible to most touch devices because: users cannot hover over a button on a touch device, and users cannot focus on a button on a touch device. The best alternative is not to use tooltips, and instead, find a way to include the label or descriptive text in the design. If the “tooltip” contains a lot of content — including interactive content — you may want to display that information with a Toggletip (or just use a \u003cdialog\u003e element). Heydon explains toggletips nicely and concisely: Toggletips exist to reveal information balloons. Often they take the form of little “i” icons. These informational icons should be wrapped within a \u003cbutton\u003e element. When opened, screen readers can announce the text contained in it through a live region with the status role. \u003cspan class=\"tooltip-container\"\u003e \u003cbutton type=\"button\" aria-label=\"more info\"\u003ei\u003c/button\u003e \u003cspan role=\"status\"\u003eThis clarifies whatever needs clarifying\u003c/span\u003e \u003c/span\u003e Speaking anymore about toggletips detracts this article from tooltips so I’ll point you to Heydon’s “Tooltips and Toggletips” article if you’re interested in chasing this short rabbit hole. That’s all you need to know about tooltips and their current best practices! Further reading Clarifying the Relationship Between Popovers and Dialogs (Zell Liew) Tooltips and Toggletips (Inclusive Components) Tooltips in the time of WCAG 2.1 (Sarah Higley) Short note on aria-label, aria-labelledby, and aria-describedby (Léonie Watson) Some Hands-On with the HTML Dialog Element (Chris Coyier)",
  "image": "https://css-tricks.com/wp-json/social-image-generator/v1/image/382082",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cp\u003e\n\tDigitalOcean provides cloud products for every stage of your journey. Get started with \u003ca href=\"https://try.digitalocean.com/css-tricks/?utm_medium=content_acq\u0026amp;utm_source=css-tricks\u0026amp;utm_campaign=global_brand_ad_en\u0026amp;utm_content=conversion_prearticle_everystage\"\u003e$200 in free credit!\u003c/a\u003e\n\u003c/p\u003e\u003cdiv\u003e\n\n          \n          \n\u003cp\u003eIn this article, I try to summarize the best practices mentioned by various accessibility experts and their work (like \u003ca href=\"https://inclusive-components.design/tooltips-toggletips/\" rel=\"noopener\"\u003ethis\u003c/a\u003e, \u003ca href=\"https://sarahmhigley.com/writing/tooltips-in-wcag-21/\" rel=\"noopener\"\u003ethis\u003c/a\u003e, and \u003ca href=\"https://www.tpgi.com/simple-standalone-toggletip-widget-pattern/\" rel=\"noopener\"\u003ethis\u003c/a\u003e) into a single article that’s easy to read, understand, and apply.\u003c/p\u003e\n\n\n\n\u003cp\u003eLet’s begin.\u003c/p\u003e\n\n\n\n\u003ch3 id=\"what-are-tooltips-\"\u003eWhat are tooltips?\u003c/h3\u003e\n\n\n\u003cp\u003eTooltips are used to provide simple text hints for UI controls. Think of them as tips for tools. They’re basically little bubbles of text content that pop up when you hover over an unnamed control (like the bell icon in Stripe).\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" fetchpriority=\"high\" decoding=\"async\" width=\"1005\" height=\"420\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/tooltip.png?resize=1005%2C420\u0026amp;ssl=1\" alt=\"Hovering on top of a bell icon in Stripe\u0026#39;s navigation. Clicking the icon triggers a notification displayed underneath it.\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/tooltip.png?w=1005\u0026amp;ssl=1 1005w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/tooltip.png?resize=300%2C125\u0026amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/tooltip.png?resize=768%2C321\u0026amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\"/\u003e\u003cfigcaption\u003eThe “Notifications” text that pops up when you hover over Stripe’s bell icon is a tooltip.\u003c/figcaption\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eIf you prefer more of a formal definition, Sarah Highley provides us with a pretty good one:\u003c/p\u003e\n\n\n\n\u003cblockquote\u003e\n\u003cp\u003eA “tooltip” is a non-\u003ca href=\"https://www.w3.org/WAI/ARIA/apg/patterns/dialog-modal/\" rel=\"noopener\"\u003emodal\u003c/a\u003e (or non-blocking) overlay containing text-only content that provides supplemental information about an existing UI control. It is hidden by default, and becomes available on hover or focus of the control it describes.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\n\n\u003cp\u003eShe further goes on to say:\u003c/p\u003e\n\n\n\n\u003cblockquote\u003e\n\u003cp\u003eThat definition could even be narrowed down even further by saying tooltips must provide only descriptive text.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eThis narrowed definition is basically\u003c/strong\u003e (in my experience) \u003cstrong\u003ehow every accessibility expert defines tooltips:\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://css-tricks.com/clarifying-the-relationship-between-popovers-and-dialogs/\"\u003eA tooltip is a popover.\u003c/a\u003e\u003c/li\u003e\n\n\n\n\u003cli\u003eTooltips must not contain interactive content.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eHeydon Pickering takes things even further, saying: If you’re thinking of adding interactive content (even an \u003ccode\u003eok\u003c/code\u003e button), you should be using \u003ccode\u003edialog\u003c/code\u003e instead.\u003c/p\u003e\n\n\n\n\u003cp\u003eIn \u003ca href=\"https://heydonworks.com/article/your-tooltips-are-bogus#:~:text=You\u0026#39;re%20thinking%20of%20dialogs.%20Use%20a%20dialog.\" rel=\"noopener\"\u003ehis\u003c/a\u003e words:\u003c/p\u003e\n\n\n\n\u003cblockquote\u003e\n\u003cp\u003eYou’re thinking of dialogs. Use a dialog.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\n\u003ch3 id=\"two-kinds-of-tooltips\"\u003eTwo kinds of tooltips\u003c/h3\u003e\n\n\n\u003cp\u003eTooltips are basically only used for two things:\u003c/p\u003e\n\n\n\n\u003col\u003e\n\u003cli\u003eLabeling an icon\u003c/li\u003e\n\n\n\n\u003cli\u003eProviding a contextual description of an icon\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\n\u003cp\u003eHeydon separates these cleanly into two categories, “Primary Label” and “Auxiliary description” in his \u003ca href=\"(https://inclusive-components.design/tooltips-toggletips/\"\u003eInclusive Components article on tooltips and toggletips\u003c/a\u003e).\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" decoding=\"async\" width=\"707\" height=\"324\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/two-kinds.png?resize=707%2C324\u0026amp;ssl=1\" alt=\"Two examples of a bell icon with content displayed beneath them, one as a primary label and one as an auxiliary description.\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/two-kinds.png?w=707\u0026amp;ssl=1 707w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/two-kinds.png?resize=300%2C137\u0026amp;ssl=1 300w\" sizes=\"(min-width: 735px) 864px, 96vw\"/\u003e\u003c/figure\u003e\n\n\n\u003ch4 id=\"labelling\"\u003eLabeling\u003c/h4\u003e\n\n\n\u003cp\u003eIf your tooltip is used to label an icon — using only one or two words — you should use the \u003ca href=\"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA16\" rel=\"noopener\"\u003e\u003ccode\u003earia-labelledby\u003c/code\u003e\u003c/a\u003e attribute to properly label it since it is attached to nothing else on the page that would help identify it.\u003c/p\u003e\n\n\n\n\u003cpre rel=\"HTML\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003e\u0026lt;button aria-labelledby=\u0026#34;notifications\u0026#34;\u0026gt; ... \u0026lt;/button\u0026gt;\n\u0026lt;div role=\u0026#34;tooltip\u0026#34; id=\u0026#34;notifications\u0026#34;\u0026gt;Notifications\u0026lt;/div\u0026gt; \u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eYou could provide contextual information, like stating the number of notifications, by giving a space-separated list of \u003ccode\u003eid\u003c/code\u003es to \u003ccode\u003earia-labelledby\u003c/code\u003e.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" loading=\"lazy\" decoding=\"async\" width=\"719\" height=\"242\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/label-with-context.png?resize=719%2C242\u0026amp;ssl=1\" alt=\"Bell icon with a badge indicating three notifications and a tooltip displayed to the right.\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/label-with-context.png?w=719\u0026amp;ssl=1 719w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/label-with-context.png?resize=300%2C101\u0026amp;ssl=1 300w\" sizes=\"(min-width: 735px) 864px, 96vw\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cpre rel=\"HTML\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003e\u0026lt;button aria-labelledby=\u0026#34;notifications-count notifications-label\u0026#34;\u0026gt;  \n  \u0026lt;!-- bell icon here --\u0026gt; \n  \u0026lt;span id=\u0026#34;notifications-count\u0026#34;\u0026gt;3\u0026lt;/span\u0026gt;\n\u0026lt;/button\u0026gt;  \n\n\u0026lt;div role=\u0026#34;tooltip\u0026#34; id=\u0026#34;notifications-label\u0026#34;\u0026gt;Notifications\u0026lt;/div\u0026gt;\u003c/code\u003e\u003c/pre\u003e\n\n\n\u003ch4 id=\"providing-contextual-description\"\u003eProviding contextual description\u003c/h4\u003e\n\n\n\u003cp\u003eIf your tooltip provides a contextual description of the icon, you should use \u003ccode\u003earia-describedby\u003c/code\u003e. But, when you do this, you also need to provide an accessible name for the icon.\u003c/p\u003e\n\n\n\n\u003cp\u003eIn this case, Heydon recommends including the label as the text content of the button. This label would be hidden visually from sighted users but read for screen readers.\u003c/p\u003e\n\n\n\n\u003cp\u003eThen, you can add \u003ca href=\"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA1\" rel=\"noopener\"\u003e\u003ccode\u003earia-describedby\u003c/code\u003e\u003c/a\u003e to include the auxiliary description.\u003c/p\u003e\n\n\n\n\u003cpre rel=\"HTML\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003e\u0026lt;button class=\u0026#34;notifications\u0026#34; aria-describedby=\u0026#34;notifications-desc\u0026#34;\u0026gt;  \n  \u0026lt;!-- icon for bell here --\u0026gt; \n  \u0026lt;span id=\u0026#34;notifications-count\u0026#34;\u0026gt;3\u0026lt;/span\u0026gt; \n  \u0026lt;span class=\u0026#34;visually-hidden\u0026#34;\u0026gt;Notifications\u0026lt;/span\u0026gt;\n\u0026lt;/button\u0026gt;  \n\n\u0026lt;div role=\u0026#34;tooltip\u0026#34; id=\u0026#34;notifications-desc\u0026#34;\u0026gt;View and manage notifications settings\u0026lt;/div\u0026gt; \u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eHere, screen readers would say “3 notifications” first, followed by “view and manage notifications settings” after a brief pause.\u003c/p\u003e\n\n\n\u003ch3 id=\"additional-tooltip-dos-and-don-ts\"\u003eAdditional tooltip dos and don’ts\u003c/h3\u003e\n\n\n\u003cp\u003eHere are a couple of additional points you should be aware of:\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eDo:\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eUse \u003ccode\u003earia-labellebdy\u003c/code\u003e or \u003ccode\u003earia-describedby\u003c/code\u003e attributes depending on the type of tooltip you’re building.\u003c/li\u003e\n\n\n\n\u003cli\u003eUse the \u003ccode\u003etooltip\u003c/code\u003e role even if it \u003ca href=\"https://sarahmhigley.com/writing/tooltips-in-wcag-21/#best-practices-summary\" rel=\"noopener\"\u003edoesn’t do much in screen readers today\u003c/a\u003e, because it may \u003ca href=\"https://www.tpgi.com/short-note-on-aria-label-aria-labelledby-and-aria-describedby/\" rel=\"noopener\"\u003eextend accessibility support\u003c/a\u003e for some software.\u003c/li\u003e\n\n\n\n\u003cli\u003eOpen tooltips on \u003ccode\u003emouseover\u003c/code\u003e or \u003ccode\u003efocus\u003c/code\u003e, and close them on \u003ccode\u003emouseout\u003c/code\u003e or \u003ccode\u003eblur\u003c/code\u003e.\u003c/li\u003e\n\n\n\n\u003cli\u003eAllow a mouse user to \u003ca href=\"https://sarahmhigley.com/writing/tooltips-in-wcag-21#:~:text=Allow%20a%20mouse%20user%20to%20move%20their%20mouse%20over%20the%20tooltip%20content%20without%20dismissing%20the%20tooltip\" rel=\"noopener\"\u003emove their mouse over the tooltip content\u003c/a\u003e without dismissing the tooltip.\u003c/li\u003e\n\n\n\n\u003cli\u003eAllow a keyboard user to close the tooltip on the \u003ccode\u003eEscape\u003c/code\u003e button, per \u003ca href=\"https://www.w3.org/TR/WCAG22/#content-on-hover-or-focus\" rel=\"noopener\"\u003eWCAG Success Criterion 1.4.13\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eDon’t:\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eDon’t use the \u003ccode\u003etitle\u003c/code\u003e attribute. \u003ca href=\"https://www.tpgi.com/using-the-html-title-attribute-updated/\" rel=\"noopener\"\u003eMuch has been said about this\u003c/a\u003e so I shall not repeat them.\u003c/li\u003e\n\n\n\n\u003cli\u003eDon’t use the \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-haspopup\" rel=\"noopener\"\u003e\u003ccode\u003earia-haspopup\u003c/code\u003e\u003c/a\u003e attribute with the \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tooltip_role\" rel=\"noopener\"\u003e\u003ccode\u003etooltip\u003c/code\u003e\u003c/a\u003e role because \u003ccode\u003earia-haspopup\u003c/code\u003e signifies interactive content while \u003ccode\u003etooltip\u003c/code\u003e should contain non-interactive content.\u003c/li\u003e\n\n\n\n\u003cli\u003eDon’t include essential content inside tooltips because some screen readers may ignore \u003ccode\u003earia-labelledby\u003c/code\u003e or \u003ccode\u003earia-describedby\u003c/code\u003e. (\u003ca href=\"https://a11ysupport.io/tests/tech__aria__aria-labelledby-one-ref\" rel=\"noopener\"\u003eIt’s rare, but possible.\u003c/a\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003ch3 id=\"tooltip-limitations-and-alternatives\"\u003eTooltip limitations and alternatives\u003c/h3\u003e\n\n\n\u003cp\u003eTooltips are inaccessible to most touch devices because:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eusers cannot hover over a button on a touch device, and\u003c/li\u003e\n\n\n\n\u003cli\u003eusers cannot focus on a button on a touch device.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eThe best alternative is not to use tooltips, and instead, find a way to include the label or descriptive text in the design.\u003c/p\u003e\n\n\n\n\u003cp\u003eIf the “tooltip” contains a lot of content — including interactive content — you may want to display that information with a Toggletip (or just use a \u003ca href=\"https://css-tricks.com/some-hands-on-with-the-html-dialog-element/\"\u003e\u003ccode\u003e\u0026lt;dialog\u0026gt;\u003c/code\u003e element\u003c/a\u003e).\u003c/p\u003e\n\n\n\n\u003cp\u003eHeydon \u003ca href=\"https://inclusive-components.design/tooltips-toggletips#:~:text=toggletips%20exist%20to%20reveal%20information%20balloons,%20and%20serve%20no%20other%20purpose\" rel=\"noopener\"\u003eexplains toggletips\u003c/a\u003e nicely and concisely:\u003c/p\u003e\n\n\n\n\u003cblockquote\u003e\n\u003cp\u003eToggletips exist to reveal information balloons. Often they take the form of little “i” icons.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" loading=\"lazy\" decoding=\"async\" width=\"693\" height=\"141\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/toggletip.png?resize=693%2C141\u0026amp;ssl=1\" alt=\"Information icon with a message displayed to its right as a notification.\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/toggletip.png?w=693\u0026amp;ssl=1 693w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/10/toggletip.png?resize=300%2C61\u0026amp;ssl=1 300w\" sizes=\"(min-width: 735px) 864px, 96vw\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eThese informational icons should be wrapped within a \u003ccode\u003e\u0026lt;button\u0026gt;\u003c/code\u003e element. When opened, screen readers can announce the text contained in it through a \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions\" rel=\"noopener\"\u003elive region\u003c/a\u003e with the \u003ca href=\"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA22\" rel=\"noopener\"\u003e\u003ccode\u003estatus\u003c/code\u003e\u003c/a\u003e role.\u003c/p\u003e\n\n\n\n\u003cpre rel=\"HTML\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003e\u0026lt;span class=\u0026#34;tooltip-container\u0026#34;\u0026gt; \n  \u0026lt;button type=\u0026#34;button\u0026#34; aria-label=\u0026#34;more info\u0026#34;\u0026gt;i\u0026lt;/button\u0026gt; \n  \u0026lt;span role=\u0026#34;status\u0026#34;\u0026gt;This clarifies whatever needs clarifying\u0026lt;/span\u0026gt;\n\u0026lt;/span\u0026gt;\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eSpeaking anymore about toggletips detracts this article from tooltips so I’ll point you to Heydon’s \u003ca href=\"https://inclusive-components.design/tooltips-toggletips/\" rel=\"noopener\"\u003e“Tooltips and Toggletips”\u003c/a\u003e article if you’re interested in chasing this short rabbit hole.\u003c/p\u003e\n\n\n\n\u003cp\u003eThat’s all you need to know about tooltips and their current best practices!\u003c/p\u003e\n\n\n\u003ch3 id=\"further-reading\"\u003eFurther reading\u003c/h3\u003e\n\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://css-tricks.com/clarifying-the-relationship-between-popovers-and-dialogs/\"\u003eClarifying the Relationship Between Popovers and Dialogs\u003c/a\u003e (Zell Liew)\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003ca href=\"https://inclusive-components.design/tooltips-toggletips/\" rel=\"noopener\"\u003eTooltips and Toggletips\u003c/a\u003e (Inclusive Components)\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003ca href=\"https://sarahmhigley.com/writing/tooltips-in-wcag-21/#best-practices-summary\" rel=\"noopener\"\u003eTooltips in the time of WCAG 2.1\u003c/a\u003e (Sarah Higley)\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003ca href=\"https://www.tpgi.com/short-note-on-aria-label-aria-labelledby-and-aria-describedby/\" rel=\"noopener\"\u003eShort note on \u003ccode\u003earia-label\u003c/code\u003e, \u003ccode\u003earia-labelledby\u003c/code\u003e, and \u003ccode\u003earia-describedby\u003c/code\u003e\u003c/a\u003e (Léonie Watson)\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003ca href=\"https://css-tricks.com/some-hands-on-with-the-html-dialog-element/\"\u003eSome Hands-On with the HTML Dialog Element\u003c/a\u003e (Chris Coyier)\u003c/li\u003e\n\u003c/ul\u003e\n\n          \n        \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": "2024-10-29T08:01:18-06:00",
  "modifiedTime": "2024-10-29T08:09:25-06:00"
}
