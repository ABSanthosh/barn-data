{
  "id": "cf695fd4-cb34-4dc5-9226-417fa10f18fc",
  "title": "Anchor Positioning Just Don’t Care About Source Order",
  "link": "https://css-tricks.com/anchor-positioning-just-dont-care-about-source-order/",
  "description": "The fact that anchor positioning eschews HTML source order is so CSS-y because it's another separation of concerns between content and presentation. Anchor Positioning Just Don’t Care About Source Order originally published on CSS-Tricks, which is part of the DigitalOcean family. You should get the newsletter.",
  "author": "Geoff Graham",
  "published": "Mon, 28 Apr 2025 12:43:01 +0000",
  "source": "https://css-tricks.com/feed/",
  "categories": [
    "Articles",
    "anchor positioning"
  ],
  "byline": "Geoff Graham",
  "length": 3344,
  "excerpt": "The fact that anchor positioning eschews HTML source order is so CSS-y because it's another separation of concerns between content and presentation.",
  "siteName": "CSS-Tricks",
  "favicon": "https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/07/star.png?fit=180%2C180\u0026ssl=1",
  "text": "Ten divs walk into a bar: \u003cdiv\u003e1\u003c/div\u003e \u003cdiv\u003e2\u003c/div\u003e \u003cdiv\u003e3\u003c/div\u003e \u003cdiv\u003e4\u003c/div\u003e \u003cdiv\u003e5\u003c/div\u003e \u003cdiv\u003e6\u003c/div\u003e \u003cdiv\u003e7\u003c/div\u003e \u003cdiv\u003e8\u003c/div\u003e \u003cdiv\u003e9\u003c/div\u003e \u003cdiv\u003e10\u003c/div\u003e There’s not enough chairs for them to all sit at the bar, so you need the tenth div to sit on the lap of one of the other divs, say the second one. We can visually cover the second div with the tenth div but have to make sure they are sitting next to each other in the HTML as well. The order matters. \u003cdiv\u003e1\u003c/div\u003e \u003cdiv\u003e2\u003c/div\u003e \u003cdiv\u003e10\u003c/div\u003e\u003c!-- Sitting next to Div #2--\u003e \u003cdiv\u003e3\u003c/div\u003e \u003cdiv\u003e4\u003c/div\u003e \u003cdiv\u003e5\u003c/div\u003e \u003cdiv\u003e6\u003c/div\u003e \u003cdiv\u003e7\u003c/div\u003e \u003cdiv\u003e8\u003c/div\u003e \u003cdiv\u003e9\u003c/div\u003e The tenth div needs to sit on the second div’s lap rather than next to it. So, perhaps we redefine the relationship between them and make this a parent-child sorta thing. \u003cdiv\u003e1\u003c/div\u003e \u003cdiv class=\"parent\"\u003e 2 \u003cdiv class=\"child\"\u003e10\u003c/div\u003e\u003c!-- Sitting in Div #2's lap--\u003e \u003c/div\u003e \u003cdiv\u003e3\u003c/div\u003e \u003cdiv\u003e4\u003c/div\u003e \u003cdiv\u003e5\u003c/div\u003e \u003cdiv\u003e6\u003c/div\u003e \u003cdiv\u003e7\u003c/div\u003e \u003cdiv\u003e8\u003c/div\u003e \u003cdiv\u003e9\u003c/div\u003e Now we can do a little tricky positioning dance to contain the tenth div inside the second div in the CSS: .parent { position: relative; /* Contains Div #10 */ } .child { position: absolute; } We can inset the child’s position so it is pinned to the parent’s top-left edge: .child { position: absolute; inset-block-start: 0; inset-inline-start: 0; } And we can set the child’s width to 100% of the parent’s size so that it is fully covering the parent’s lap and completely obscuring it. .child { position: absolute; inset-block-start: 0; inset-inline-start: 0; width: 100%; } Cool, it works! Anchor positioning simplifies this process a heckuva lot because it just doesn’t care where the tenth div is in the HTML. Instead, we can work with our initial markup containing 10 individuals exactly as they entered the bar. You’re going to want to follow along in the latest version of Chrome since anchor positioning is only supported there by default at the time I’m writing this. \u003cdiv\u003e1\u003c/div\u003e \u003cdiv class=\"parent\"\u003e2\u003c/div\u003e \u003cdiv\u003e3\u003c/div\u003e \u003cdiv\u003e4\u003c/div\u003e \u003cdiv\u003e5\u003c/div\u003e \u003cdiv\u003e6\u003c/div\u003e \u003cdiv\u003e7\u003c/div\u003e \u003cdiv\u003e8\u003c/div\u003e \u003cdiv\u003e9\u003c/div\u003e \u003cdiv class=\"child\"\u003e10\u003c/div\u003e Instead, we define the second div as an anchor element using the anchor-name property. I’m going to continue using the .parent and .child classes to keep things clear. .parent { anchor-name: --anchor; /* this can be any name formatted as a dashed ident */ } Then we connect the child to the parent by way of the position-anchor property: .child { position-anchor: --anchor; /* has to match the `anchor-name` */ } The last thing we have to do is position the child so that it covers the parent’s lap. We have the position-area property that allows us to center the element over the parent: .child { position-anchor: --anchor; position-area: center; } If we want to completely cover the parent’s lap, we can set the child’s size to match that of the parent using the anchor-size() function: .child { position-anchor: --anchor; position-area: center; width: anchor-size(width); } No punchline — just one of the things that makes anchor positioning something I’m so excited about. The fact that it eschews HTML source order is so CSS-y because it’s another separation of concerns between content and presentation.",
  "image": "https://i0.wp.com/css-tricks.com/wp-content/uploads/2024/12/Yet-Another-Anchor-Positioning-Quirk.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\n          \n          \n\u003cp\u003eTen divs walk into a bar:\u003c/p\u003e\n\n\n\n\u003cpre rel=\"HTML\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003e\u0026lt;div\u0026gt;1\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;2\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;3\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;4\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;5\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;6\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;7\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;8\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;9\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;10\u0026lt;/div\u0026gt;\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eThere’s not enough chairs for them to all sit at the bar, so you need the tenth div to sit on the lap of one of the other divs, say the second one. We can visually cover the second div with the tenth div but have to make sure they are sitting next to each other in the HTML as well. The order matters.\u003c/p\u003e\n\n\n\n\u003cpre rel=\"HTML\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003e\u0026lt;div\u0026gt;1\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;2\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;10\u0026lt;/div\u0026gt;\u0026lt;!-- Sitting next to Div #2--\u0026gt;\n\u0026lt;div\u0026gt;3\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;4\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;5\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;6\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;7\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;8\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;9\u0026lt;/div\u0026gt;\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eThe tenth div needs to sit on the second div’s lap rather than next to it. So, perhaps we redefine the relationship between them and make this a parent-child sorta thing.\u003c/p\u003e\n\n\n\n\u003cpre rel=\"HTML\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003e\u0026lt;div\u0026gt;1\u0026lt;/div\u0026gt;\n\u0026lt;div class=\u0026#34;parent\u0026#34;\u0026gt;\n  2\n  \u0026lt;div class=\u0026#34;child\u0026#34;\u0026gt;10\u0026lt;/div\u0026gt;\u0026lt;!-- Sitting in Div #2\u0026#39;s lap--\u0026gt;\n\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;3\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;4\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;5\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;6\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;7\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;8\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;9\u0026lt;/div\u0026gt;\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eNow we can do a little tricky positioning dance to contain the tenth div inside the second div in the CSS:\u003c/p\u003e\n\n\n\n\u003cpre rel=\"CSS\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003e.parent {\n  position: relative; /* Contains Div #10 */\n}\n\n.child {\n  position: absolute;\n}\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eWe can inset the child’s position so it is pinned to the parent’s top-left edge:\u003c/p\u003e\n\n\n\n\u003cpre rel=\"CSS\" data-line=\"3,4\"\u003e\u003ccode markup=\"tt\"\u003e.child {\n  position: absolute;\n  inset-block-start: 0;\n  inset-inline-start: 0;\n}\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eAnd we can set the child’s width to 100% of the parent’s size so that it is fully covering the parent’s lap and completely obscuring it.\u003c/p\u003e\n\n\n\n\u003cpre rel=\"CSS\" data-line=\"5\"\u003e\u003ccode markup=\"tt\"\u003e.child {\n  position: absolute;\n  inset-block-start: 0;\n  inset-inline-start: 0;\n  width: 100%;\n}\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eCool, it works!\u003c/p\u003e\n\n\n\n\n\n\n\n\u003cp\u003eAnchor positioning simplifies this process a heckuva lot because it just doesn’t care where the tenth div is in the HTML. Instead, we can work with our initial markup containing 10 in\u003cem\u003ediv\u003c/em\u003eiduals exactly as they entered the bar. You’re going to want to follow along in the latest version of Chrome since anchor positioning is only supported there by default at the time I’m writing this.\u003c/p\u003e\n\n\n\n\u003cpre rel=\"HTML\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003e\u0026lt;div\u0026gt;1\u0026lt;/div\u0026gt;\n\u0026lt;div class=\u0026#34;parent\u0026#34;\u0026gt;2\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;3\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;4\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;5\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;6\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;7\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;8\u0026lt;/div\u0026gt;\n\u0026lt;div\u0026gt;9\u0026lt;/div\u0026gt;\n\u0026lt;div class=\u0026#34;child\u0026#34;\u0026gt;10\u0026lt;/div\u0026gt;\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eInstead, we define the second div as an \u003cstrong\u003eanchor\u003c/strong\u003e element using the \u003ccode\u003e\u003ca href=\"https://css-tricks.com/almanac/properties/a/anchor-name/\"\u003eanchor-name\u003c/a\u003e\u003c/code\u003e property. I’m going to continue using the \u003ccode\u003e.parent\u003c/code\u003e and \u003ccode\u003e.child\u003c/code\u003e classes to keep things clear.\u003c/p\u003e\n\n\n\n\u003cpre rel=\"CSS\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003e.parent {\n  anchor-name: --anchor; /* this can be any name formatted as a dashed ident */\n}\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eThen we connect the child to the parent by way of the \u003ccode\u003e\u003ca href=\"https://css-tricks.com/almanac/properties/p/position-anchor/\"\u003eposition-anchor\u003c/a\u003e\u003c/code\u003e property:\u003c/p\u003e\n\n\n\n\u003cpre rel=\"CSS\" data-line=\"\"\u003e\u003ccode markup=\"tt\"\u003e.child {\n  position-anchor: --anchor; /* has to match the `anchor-name` */\n}\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eThe last thing we have to do is position the child so that it covers the parent’s lap. We have the \u003ccode\u003e\u003ca href=\"https://css-tricks.com/almanac/properties/p/position-area/\"\u003eposition-area\u003c/a\u003e\u003c/code\u003e property that allows us to center the element over the parent:\u003c/p\u003e\n\n\n\n\u003cpre rel=\"CSS\" data-line=\"3\"\u003e\u003ccode markup=\"tt\"\u003e.child {\n  position-anchor: --anchor;\n  position-area: center;\n}\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eIf we want to completely cover the parent’s lap, we can set the child’s size to match that of the parent using the \u003ccode\u003e\u003ca href=\"https://css-tricks.com/almanac/functions/a/anchor-size/\"\u003eanchor-size()\u003c/a\u003e\u003c/code\u003e function:\u003c/p\u003e\n\n\n\n\u003cpre rel=\"CSS\" data-line=\"4\"\u003e\u003ccode markup=\"tt\"\u003e.child {\n  position-anchor: --anchor;\n  position-area: center;\n  width: anchor-size(width);\n}\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\n\n\n\n\u003cp\u003eNo punchline — just one of the things that makes anchor positioning something I’m so excited about. The fact that it eschews HTML source order is so CSS-y because it’s another separation of concerns between content and presentation.\u003c/p\u003e\n\n          \n        \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": "2025-04-28T06:43:01-06:00",
  "modifiedTime": "2025-04-28T06:43:03-06:00"
}
