{
  "id": "92368472-0b87-4149-b17a-630304c271bd",
  "title": "CodeSOD: Off Color",
  "link": "https://thedailywtf.com/articles/off-color",
  "description": "Carolyn inherited a somewhat old project that had been initiated by a \"rockstar\" developer, and then passed to developer after developer over the years. They burned through rockstars faster than Spinal Tap goes through drummers. The result is gems like this: private void init(){ ResourceHelper rh = new ResourceHelper(); for ( int i = 0; i \u003c 12; i++) { months[i] = rh.getResource(\"calendar.\"+monthkeys[i]+\".long\"); months_s[i] = rh.getResource(\"calendar.\"+monthkeys[i]+\".short\"); } StaticData data = SomeService.current().getStaticData(); this.bankHolidayList = data.getBankHolidayList(); colors.put(\"#dddddd\", \"#dddddd\"); colors.put(\"#cccccc\", \"#cccccc\"); colors.put(\"#e6e6e6\", \"#e6e6e6\"); colors.put(\"#ff0000\", \"#ffcccc\"); colors.put(\"#ffff00\", \"#ffffcc\"); colors.put(\"#00ff00\", \"#ccffcc\"); colors.put(\"#5050ff\", \"#ccccff\"); colors.put(\"#aa0000\", \"#ff9999\"); colors.put(\"#ff8000\", \"#ffcc99\"); colors.put(\"#99ff99\", \"#ccffcc\"); colors.put(\"#ffcc99\", \"#ffffcc\"); colors.put(\"#ff9966\", \"#ffcc99\"); colors.put(\"#00c040\", \"#99cc99\"); colors.put(\"#aadddd\", \"#ccffff\"); colors.put(\"#e0e040\", \"#ffff99\"); colors.put(\"#6699ff\", \"#99ccff\"); } There are plenty of things in this function that raise concerns- whatever is going on with the ResourceHelper and the monthkeys array, for example. But let's just breeze past that into that colors lookup table, because boy oh boy. There's the obvious issue of using server-side code to manage colors instead of CSS, which is bad, sure. But this translation table which converts some colors (presumably already used in the display?) to some other colors (presumably to replace the display colors) is downright mystifying. How did this happen? Why did this happen? What happens when we attempt to apply a color not in the lookup table? I want to say more mean things about this, but the more I stare at the original colors and what they get translated to, I think this lookup table is trying to tell me I should… … … lighten up. [Advertisement] Keep the plebs out of prod. Restrict NuGet feed privileges with ProGet. Learn more.",
  "author": "Remy Porter",
  "published": "Tue, 08 Jul 2025 06:30:00 GMT",
  "source": "http://syndication.thedailywtf.com/TheDailyWtf",
  "categories": [
    "CodeSOD"
  ],
  "byline": "Remy Porter",
  "length": 2348,
  "excerpt": "Carolyn inherited a somewhat old project that had been initiated by a \"rockstar\" developer, and then passed to developer after developer over the years. They burned through rockstars faster than Spinal Tap goes through drummers. The result is gems like this: private void init(){ ResourceHelper rh = new ResourceHelper(); for ( int i = 0; i \u003c 12; i++) { months[i] = rh.getResource(\"calendar.\"+monthkeys[i]+\".long\"); months_s[i] = rh.getResource(\"calendar.\"+monthkeys[i]+\".short\"); } StaticData data = SomeService.current().getStaticData(); this.bankHolidayList = data.getBankHolidayList(); colors.put(\"#dddddd\", \"#dddddd\"); colors.put(\"#cccccc\", \"#cccccc\"); colors.put(\"#e6e6e6\", \"#e6e6e6\"); colors.put(\"#ff0000\", \"#ffcccc\"); colors.put(\"#ffff00\", \"#ffffcc\"); colors.put(\"#00ff00\", \"#ccffcc\"); colors.put(\"#5050ff\", \"#ccccff\"); colors.put(\"#aa0000\", \"#ff9999\"); colors.put(\"#ff8000\", \"#ffcc99\"); colors.put(\"#99ff99\", \"#ccffcc\"); colors.put(\"#ffcc99\", \"#ffffcc\"); colors.put(\"#ff9966\", \"#ffcc99\"); colors.put(\"#00c040\", \"#99cc99\"); colors.put(\"#aadddd\", \"#ccffff\"); colors.put(\"#e0e040\", \"#ffff99\"); colors.put(\"#6699ff\", \"#99ccff\"); }",
  "siteName": "The Daily WTF",
  "favicon": "",
  "text": "by in CodeSOD on 2025-07-08 Edit Remy PorterComputers were a mistake, which is why I'm trying to shoot them into space. Editor-in-Chief for TDWTF. Carolyn inherited a somewhat old project that had been initiated by a \"rockstar\" developer, and then passed to developer after developer over the years. They burned through rockstars faster than Spinal Tap goes through drummers. The result is gems like this: private void init(){ ResourceHelper rh = new ResourceHelper(); for ( int i = 0; i \u003c 12; i++) { months[i] = rh.getResource(\"calendar.\"+monthkeys[i]+\".long\"); months_s[i] = rh.getResource(\"calendar.\"+monthkeys[i]+\".short\"); } StaticData data = SomeService.current().getStaticData(); this.bankHolidayList = data.getBankHolidayList(); colors.put(\"#dddddd\", \"#dddddd\"); colors.put(\"#cccccc\", \"#cccccc\"); colors.put(\"#e6e6e6\", \"#e6e6e6\"); colors.put(\"#ff0000\", \"#ffcccc\"); colors.put(\"#ffff00\", \"#ffffcc\"); colors.put(\"#00ff00\", \"#ccffcc\"); colors.put(\"#5050ff\", \"#ccccff\"); colors.put(\"#aa0000\", \"#ff9999\"); colors.put(\"#ff8000\", \"#ffcc99\"); colors.put(\"#99ff99\", \"#ccffcc\"); colors.put(\"#ffcc99\", \"#ffffcc\"); colors.put(\"#ff9966\", \"#ffcc99\"); colors.put(\"#00c040\", \"#99cc99\"); colors.put(\"#aadddd\", \"#ccffff\"); colors.put(\"#e0e040\", \"#ffff99\"); colors.put(\"#6699ff\", \"#99ccff\"); } There are plenty of things in this function that raise concerns- whatever is going on with the ResourceHelper and the monthkeys array, for example. But let's just breeze past that into that colors lookup table, because boy oh boy. There's the obvious issue of using server-side code to manage colors instead of CSS, which is bad, sure. But this translation table which converts some colors (presumably already used in the display?) to some other colors (presumably to replace the display colors) is downright mystifying. How did this happen? Why did this happen? What happens when we attempt to apply a color not in the lookup table? I want to say more mean things about this, but the more I stare at the original colors and what they get translated to, I think this lookup table is trying to tell me I should… … … lighten up. [Advertisement] Keep the plebs out of prod. Restrict NuGet feed privileges with ProGet. Learn more.",
  "image": "https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv itemscope=\"\" itemtype=\"http://schema.org/Article\" id=\"article-page\"\u003e\n\n        \n        \u003cp\u003e\u003cspan\u003eby \n            in \u003ca itemprop=\"articleSection\" href=\"https://thedailywtf.com/series/code-sod\"\u003eCodeSOD\u003c/a\u003e\n            on \u003cspan itemprop=\"datePublished\" content=\"2025-07-08\"\u003e2025-07-08\u003c/span\u003e\n            \u003ca href=\"https://thedailywtf.com/admin/article/edit/10956\" rel=\"nofollow\"\u003eEdit\u003c/a\u003e\n        \u003c/span\u003e\u003c/p\u003e\n        \u003cdiv itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\"\u003e\n            \u003cp\u003e\u003cimg itemprop=\"image\" src=\"https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg\"/\u003e\n            \u003ca itemprop=\"name\" href=\"https://thedailywtf.com/authors/remy-porter\"\u003eRemy Porter\u003c/a\u003e\u003c/p\u003e\u003cp itemprop=\"description\"\u003eComputers were a mistake, which is why I\u0026#39;m trying to shoot them into space. Editor-in-Chief for TDWTF.\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv itemprop=\"articleBody\"\u003e\n            \u003cp\u003e\u003cstrong\u003eCarolyn\u003c/strong\u003e inherited a somewhat old project that had been initiated by a \u0026#34;rockstar\u0026#34; developer, and then passed to developer after developer over the years. They burned through rockstars faster than Spinal Tap goes through drummers. The result is gems like this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eprivate \u003cspan\u003evoid\u003c/span\u003e \u003cspan\u003einit\u003c/span\u003e(\u003cspan\u003e\u003c/span\u003e){\n\t\u003cspan\u003eResourceHelper\u003c/span\u003e rh = \u003cspan\u003enew\u003c/span\u003e \u003cspan\u003eResourceHelper\u003c/span\u003e();\n\t\u003cspan\u003efor\u003c/span\u003e ( int i = \u003cspan\u003e0\u003c/span\u003e; i \u0026lt; \u003cspan\u003e12\u003c/span\u003e; i++) {\n\t\tmonths[i] = rh.\u003cspan\u003egetResource\u003c/span\u003e(\u003cspan\u003e\u0026#34;calendar.\u0026#34;\u003c/span\u003e+monthkeys[i]+\u003cspan\u003e\u0026#34;.long\u0026#34;\u003c/span\u003e);\n\t\tmonths_s[i] = rh.\u003cspan\u003egetResource\u003c/span\u003e(\u003cspan\u003e\u0026#34;calendar.\u0026#34;\u003c/span\u003e+monthkeys[i]+\u003cspan\u003e\u0026#34;.short\u0026#34;\u003c/span\u003e);\n\t}\n\t\u003cspan\u003eStaticData\u003c/span\u003e data = \u003cspan\u003eSomeService\u003c/span\u003e.\u003cspan\u003ecurrent\u003c/span\u003e().\u003cspan\u003egetStaticData\u003c/span\u003e();\n\t\u003cspan\u003ethis\u003c/span\u003e.\u003cspan\u003ebankHolidayList\u003c/span\u003e = data.\u003cspan\u003egetBankHolidayList\u003c/span\u003e();\n\tcolors.\u003cspan\u003eput\u003c/span\u003e(\u003cspan\u003e\u0026#34;#dddddd\u0026#34;\u003c/span\u003e, \u003cspan\u003e\u0026#34;#dddddd\u0026#34;\u003c/span\u003e);\n\tcolors.\u003cspan\u003eput\u003c/span\u003e(\u003cspan\u003e\u0026#34;#cccccc\u0026#34;\u003c/span\u003e, \u003cspan\u003e\u0026#34;#cccccc\u0026#34;\u003c/span\u003e);\n\tcolors.\u003cspan\u003eput\u003c/span\u003e(\u003cspan\u003e\u0026#34;#e6e6e6\u0026#34;\u003c/span\u003e, \u003cspan\u003e\u0026#34;#e6e6e6\u0026#34;\u003c/span\u003e);\n\tcolors.\u003cspan\u003eput\u003c/span\u003e(\u003cspan\u003e\u0026#34;#ff0000\u0026#34;\u003c/span\u003e, \u003cspan\u003e\u0026#34;#ffcccc\u0026#34;\u003c/span\u003e);\n\tcolors.\u003cspan\u003eput\u003c/span\u003e(\u003cspan\u003e\u0026#34;#ffff00\u0026#34;\u003c/span\u003e, \u003cspan\u003e\u0026#34;#ffffcc\u0026#34;\u003c/span\u003e);\n\tcolors.\u003cspan\u003eput\u003c/span\u003e(\u003cspan\u003e\u0026#34;#00ff00\u0026#34;\u003c/span\u003e, \u003cspan\u003e\u0026#34;#ccffcc\u0026#34;\u003c/span\u003e);\n\tcolors.\u003cspan\u003eput\u003c/span\u003e(\u003cspan\u003e\u0026#34;#5050ff\u0026#34;\u003c/span\u003e, \u003cspan\u003e\u0026#34;#ccccff\u0026#34;\u003c/span\u003e);\n\tcolors.\u003cspan\u003eput\u003c/span\u003e(\u003cspan\u003e\u0026#34;#aa0000\u0026#34;\u003c/span\u003e, \u003cspan\u003e\u0026#34;#ff9999\u0026#34;\u003c/span\u003e);\n\tcolors.\u003cspan\u003eput\u003c/span\u003e(\u003cspan\u003e\u0026#34;#ff8000\u0026#34;\u003c/span\u003e, \u003cspan\u003e\u0026#34;#ffcc99\u0026#34;\u003c/span\u003e);\n\tcolors.\u003cspan\u003eput\u003c/span\u003e(\u003cspan\u003e\u0026#34;#99ff99\u0026#34;\u003c/span\u003e, \u003cspan\u003e\u0026#34;#ccffcc\u0026#34;\u003c/span\u003e);\n\tcolors.\u003cspan\u003eput\u003c/span\u003e(\u003cspan\u003e\u0026#34;#ffcc99\u0026#34;\u003c/span\u003e, \u003cspan\u003e\u0026#34;#ffffcc\u0026#34;\u003c/span\u003e);\n\tcolors.\u003cspan\u003eput\u003c/span\u003e(\u003cspan\u003e\u0026#34;#ff9966\u0026#34;\u003c/span\u003e, \u003cspan\u003e\u0026#34;#ffcc99\u0026#34;\u003c/span\u003e);\n\tcolors.\u003cspan\u003eput\u003c/span\u003e(\u003cspan\u003e\u0026#34;#00c040\u0026#34;\u003c/span\u003e, \u003cspan\u003e\u0026#34;#99cc99\u0026#34;\u003c/span\u003e);\n\tcolors.\u003cspan\u003eput\u003c/span\u003e(\u003cspan\u003e\u0026#34;#aadddd\u0026#34;\u003c/span\u003e, \u003cspan\u003e\u0026#34;#ccffff\u0026#34;\u003c/span\u003e);\n\tcolors.\u003cspan\u003eput\u003c/span\u003e(\u003cspan\u003e\u0026#34;#e0e040\u0026#34;\u003c/span\u003e, \u003cspan\u003e\u0026#34;#ffff99\u0026#34;\u003c/span\u003e);\n\tcolors.\u003cspan\u003eput\u003c/span\u003e(\u003cspan\u003e\u0026#34;#6699ff\u0026#34;\u003c/span\u003e, \u003cspan\u003e\u0026#34;#99ccff\u0026#34;\u003c/span\u003e);\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThere are plenty of things in this function that raise concerns- whatever is going on with the \u003ccode\u003eResourceHelper\u003c/code\u003e and the \u003ccode\u003emonthkeys\u003c/code\u003e array, for example. But let\u0026#39;s just breeze past that into that \u003ccode\u003ecolors\u003c/code\u003e lookup table, because boy oh boy.\u003c/p\u003e\n\u003cp\u003eThere\u0026#39;s the obvious issue of using server-side code to manage colors instead of CSS, which is bad, sure. But this translation table which converts some colors (presumably already used in the display?) to some \u003cem\u003eother\u003c/em\u003e colors (presumably to replace the display colors) is \u003cem\u003edownright mystifying\u003c/em\u003e. How did this happen? \u003cem\u003eWhy\u003c/em\u003e did this happen? What happens when we attempt to apply a color not in the lookup table?\u003c/p\u003e\n\u003cp\u003eI want to say more mean things about this, but the more I stare at the original colors and what they get translated to, I think this lookup table is trying to tell me I should…\u003c/p\u003e\n\u003cp\u003e…\u003cbr/\u003e\n…\u003c/p\u003e\n\u003cp\u003elighten up.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://thedailywtf.com/images/inedo/proget-icon.png\"/\u003e [Advertisement] \n\tKeep the plebs out of prod. Restrict NuGet feed privileges with ProGet. \u003ca href=\"https://inedo.com/proget/private-nuget-server?utm_source=tdwtf\u0026amp;utm_medium=footer\u0026amp;utm_content=PlebsFooter\u0026amp;utm_campaign=Cyclops2020\"\u003eLearn more.\u003c/a\u003e\n\u003c/p\u003e\n\n\n        \u003c/div\u003e\n\n        \n    \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": "2025-07-08T06:30:00Z",
  "modifiedTime": null
}
