{
  "id": "2fad7d2e-f677-4416-9866-790c5b67466f",
  "title": "CodeSOD: And Config",
  "link": "https://thedailywtf.com/articles/and-config",
  "description": "It's not unusual to store format templates in your application configuration files. I'd argue it's probably a good and wise thing to do. But Phillip inherited a C# application from a developer woh \"abandoned\" it, and there were some choices in there. \u003cappSettings\u003e \u003cadd key=\"xxxurl\" value=\"[http://{1}:7777/pls/xxx/p_pristjek?i_type=MK3000{0}i_ean={3}{0}i_style=http://{2}/Content/{0}i_red=http://{2}/start.aspx/]http://{1}:7777/pls/xxx/p_pristjek?i_type=MK3000{0}i_ean={3}{0}i_style=http://{2}/Content/{0}i_red=http://{2}/start.aspx\"/\u003e appSettings\u003e Okay, I understand that this field contains URLs, but I don't understand much else about what's going on here. It's unreadable, but also, it has some URLs grouped inside of a [] pair, but others which aren't, and why oh why does the {0} sigil keep showing up so much? Maybe it'll make more sense after we fill in the template? var url = string.Format(xxxUrl, \"\u0026\", xxxIp, srvUrl, productCode); Oh. It's an \"\u0026\". Because we're constructing a URL query string, which also seems to contain URLs, which I suspect is going to have some escaping issues, but it's for a query string. At first, I was wondering why they did this, but then I realized: they were avoiding escape characters. By making the ampersand a formatting parameter, they could avoid the need to write \u0026 everywhere. Which… I guess this is a solution? Not a good solution, but… a solution. I still don't know why the same URL is stored twice in the string, once surrounded by square brackets and once not, and I don't think I want to know. Only bad things can result from knowing that. [Advertisement] Plan Your .NET 9 Migration with ConfidenceYour journey to .NET 9 is more than just one decision.Avoid migration migraines with the advice in this free guide. Download Free Guide Now!",
  "author": "Remy Porter",
  "published": "Wed, 02 Jul 2025 06:30:00 GMT",
  "source": "http://syndication.thedailywtf.com/TheDailyWtf",
  "categories": [
    "CodeSOD"
  ],
  "byline": "Remy Porter",
  "length": 2068,
  "excerpt": "It's not unusual to store format templates in your application configuration files. I'd argue it's probably a good and wise thing to do. But Phillip inherited a C# application from a developer woh \"abandoned\" it, and there were some choices in there. \u003cappSettings\u003e \u003cadd key=\"xxxurl\" value=\"[http://{1}:7777/pls/xxx/p_pristjek?i_type=MK3000{0}i_ean={3}{0}i_style=http://{2}/Content/{0}i_red=http://{2}/start.aspx/]http://{1}:7777/pls/xxx/p_pristjek?i_type=MK3000{0}i_ean={3}{0}i_style=http://{2}/Content/{0}i_red=http://{2}/start.aspx\"/\u003e \u003c/appSettings\u003e",
  "siteName": "The Daily WTF",
  "favicon": "",
  "text": "by in CodeSOD on 2025-07-02 Edit Remy PorterComputers were a mistake, which is why I'm trying to shoot them into space. Editor-in-Chief for TDWTF. It's not unusual to store format templates in your application configuration files. I'd argue it's probably a good and wise thing to do. But Phillip inherited a C# application from a developer woh \"abandoned\" it, and there were some choices in there. \u003cappSettings\u003e \u003cadd key=\"xxxurl\" value=\"[http://{1}:7777/pls/xxx/p_pristjek?i_type=MK3000{0}i_ean={3}{0}i_style=http://{2}/Content/{0}i_red=http://{2}/start.aspx/]http://{1}:7777/pls/xxx/p_pristjek?i_type=MK3000{0}i_ean={3}{0}i_style=http://{2}/Content/{0}i_red=http://{2}/start.aspx\"/\u003e \u003c/appSettings\u003e Okay, I understand that this field contains URLs, but I don't understand much else about what's going on here. It's unreadable, but also, it has some URLs grouped inside of a [] pair, but others which aren't, and why oh why does the {0} sigil keep showing up so much? Maybe it'll make more sense after we fill in the template? var url = string.Format(xxxUrl, \"\u0026\", xxxIp, srvUrl, productCode); Oh. It's an \"\u0026\". Because we're constructing a URL query string, which also seems to contain URLs, which I suspect is going to have some escaping issues, but it's for a query string. At first, I was wondering why they did this, but then I realized: they were avoiding escape characters. By making the ampersand a formatting parameter, they could avoid the need to write \u0026amp; everywhere. Which… I guess this is a solution? Not a good solution, but… a solution. I still don't know why the same URL is stored twice in the string, once surrounded by square brackets and once not, and I don't think I want to know. Only bad things can result from knowing that. [Advertisement] Plan Your .NET 9 Migration with ConfidenceYour journey to .NET 9 is more than just one decision.Avoid migration migraines with the advice in this free guide. Download Free Guide Now!",
  "image": "https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv itemscope=\"\" itemtype=\"http://schema.org/Article\" id=\"article-page\"\u003e\n\n        \n        \u003cp\u003e\u003cspan\u003eby \n            in \u003ca itemprop=\"articleSection\" href=\"https://thedailywtf.com/series/code-sod\"\u003eCodeSOD\u003c/a\u003e\n            on \u003cspan itemprop=\"datePublished\" content=\"2025-07-02\"\u003e2025-07-02\u003c/span\u003e\n            \u003ca href=\"https://thedailywtf.com/admin/article/edit/10951\" rel=\"nofollow\"\u003eEdit\u003c/a\u003e\n        \u003c/span\u003e\u003c/p\u003e\n        \u003cdiv itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\"\u003e\n            \u003cp\u003e\u003cimg itemprop=\"image\" src=\"https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg\"/\u003e\n            \u003ca itemprop=\"name\" href=\"https://thedailywtf.com/authors/remy-porter\"\u003eRemy Porter\u003c/a\u003e\u003c/p\u003e\u003cp itemprop=\"description\"\u003eComputers were a mistake, which is why I\u0026#39;m trying to shoot them into space. Editor-in-Chief for TDWTF.\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv itemprop=\"articleBody\"\u003e\n            \u003cp\u003eIt\u0026#39;s not unusual to store format templates in your application configuration files. I\u0026#39;d argue it\u0026#39;s probably a good and wise thing to do. But \u003cstrong\u003ePhillip\u003c/strong\u003e inherited a C# application from a developer woh \u0026#34;abandoned\u0026#34; it, and there were some choices in there.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e\u0026lt;\u003cspan\u003eappSettings\u003c/span\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan\u003e\u0026lt;\u003cspan\u003eadd\u003c/span\u003e \u003cspan\u003ekey\u003c/span\u003e=\u003cspan\u003e\u0026#34;xxxurl\u0026#34;\u003c/span\u003e \u003cspan\u003evalue\u003c/span\u003e=\u003cspan\u003e\u0026#34;[http://{1}:7777/pls/xxx/p_pristjek?i_type=MK3000{0}i_ean={3}{0}i_style=http://{2}/Content/{0}i_red=http://{2}/start.aspx/]http://{1}:7777/pls/xxx/p_pristjek?i_type=MK3000{0}i_ean={3}{0}i_style=http://{2}/Content/{0}i_red=http://{2}/start.aspx\u0026#34;\u003c/span\u003e/\u0026gt;\u003c/span\u003e\n\u003cspan\u003e\u0026lt;/\u003cspan\u003eappSettings\u003c/span\u003e\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eOkay, I understand that this field contains URLs, but I don\u0026#39;t understand much else about what\u0026#39;s going on here. It\u0026#39;s unreadable, but also, it has some URLs grouped inside of a \u003ccode\u003e[]\u003c/code\u003e pair, but others which aren\u0026#39;t, and why oh \u003cem\u003ewhy\u003c/em\u003e does the \u003ccode\u003e{0}\u003c/code\u003e sigil keep showing up so much?\u003c/p\u003e\n\u003cp\u003eMaybe it\u0026#39;ll make more sense after we fill in the template?\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u003cspan\u003evar\u003c/span\u003e url = \u003cspan\u003estring\u003c/span\u003e.Format(xxxUrl, \u003cspan\u003e\u0026#34;\u0026amp;\u0026#34;\u003c/span\u003e, xxxIp, srvUrl, productCode);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eOh. It\u0026#39;s an \u0026#34;\u0026amp;\u0026#34;. Because we\u0026#39;re constructing a URL query string, which also seems to contain URLs, which I suspect is going to have some escaping issues, but it\u0026#39;s for a query string.\u003c/p\u003e\n\u003cp\u003eAt first, I was wondering \u003cem\u003ewhy\u003c/em\u003e they did this, but then I realized: they were avoiding escape characters. By making the ampersand a formatting parameter, they could avoid the need to write \u003ccode\u003e\u0026amp;amp;\u003c/code\u003e everywhere. Which… I guess this is a solution?\u003c/p\u003e\n\u003cp\u003eNot a \u003cem\u003egood\u003c/em\u003e solution, but… a solution.\u003c/p\u003e\n\u003cp\u003eI still don\u0026#39;t know why the same URL is stored twice in the string, once surrounded by square brackets and once not, and I don\u0026#39;t think I \u003cem\u003ewant\u003c/em\u003e to know. Only bad things can result from knowing that.\u003c/p\u003e\n\u003cp\u003e\n\t[Advertisement] \u003cb\u003ePlan Your .NET 9 Migration with Confidence\u003c/b\u003e\u003cbr/\u003eYour journey to .NET 9 is more than just one decision.Avoid migration migraines with the advice in this free guide. \u003cb\u003e\u003ca href=\"https://inedo.com/support/whitepapers/dotnet-guide?utm_campaign=dotnet\u0026amp;utm_source=tdwtf-footer\"\u003eDownload Free Guide Now!\u003c/a\u003e\u003c/b\u003e\n\u003c/p\u003e\n\n        \u003c/div\u003e\n\n        \n    \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": "2025-07-02T06:30:00Z",
  "modifiedTime": null
}
