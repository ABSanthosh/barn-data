{
  "id": "c1e349bc-d44d-4f42-8233-3e0143361f8f",
  "title": "CodeSOD: A Highly Paid Field",
  "link": "https://thedailywtf.com/articles/a-highly-paid-field",
  "description": "In ancient times, Rob's employer didn't have its own computer; it rented time on a mid-range computer and ran all its jobs using batch processing in COBOL. And in those ancient times, these stone tools were just fine. But computing got more and more important, and the costs for renting time kept going up and up, so they eventually bought their own AS/400. And that meant someone needed to migrate all of their COBOL to RPG. And management knew what you do for those kinds of conversions: higher a Highly Paid Consultant. On one hand, the results weren't great. On the other, the code is still in use, though has been through many updates and modernizations and migrations in that time. Still, the HPC's effects can be felt, like this block, which hasn't been touched since she was last here: // CHECK FOR VALID FIELD IF FIELD1 \u003c\u003e *BLANKS AND FIELD1 \u003c '1' AND FIELD1 \u003e '5'; BadField1 = *ON; LEAVESR; ENDIF; This is a validation check on a field (anonymized by Rob), but the key thing I want you to note is that what the field stores are numbers, but it stores those numbers as text- note the quotes. And the greater-than/less-than operators will do lexical comparisons on text, which means '21' \u003c '5' is true. The goal of this comparison was to require the values to be between 1 and 5. But that's not what it's enforcing. The only good(?) news is that this field also isn't used. There's one screen where users can set the value, but no one has- it's currently blank everywhere- and nothing else in the system references the value. Which raises the question of why it's there at all. But those kinds of questions are par for the course for the HPC. When they migrated a bunch of reports and the users compared the results with the original versions, the results didn't balance. The HPC's explanation? \"The users are changing the data to make me look bad.\" [Advertisement] BuildMaster allows you to create a self-service release management platform that allows different teams to manage their applications. Explore how!",
  "author": "Remy Porter",
  "published": "Mon, 30 Jun 2025 06:30:00 GMT",
  "source": "http://syndication.thedailywtf.com/TheDailyWtf",
  "categories": [
    "CodeSOD"
  ],
  "byline": "Remy Porter",
  "length": 2294,
  "excerpt": "In ancient times, Rob's employer didn't have its own computer; it rented time on a mid-range computer and ran all its jobs using batch processing in COBOL. And in those ancient times, these stone tools were just fine. But computing got more and more important, and the costs for renting time kept going up and up, so they eventually bought their own AS/400. And that meant someone needed to migrate all of their COBOL to RPG. And management knew what you do for those kinds of conversions: higher a Highly Paid Consultant.",
  "siteName": "The Daily WTF",
  "favicon": "",
  "text": "by in CodeSOD on 2025-06-30 Edit Remy PorterComputers were a mistake, which is why I'm trying to shoot them into space. Editor-in-Chief for TDWTF. In ancient times, Rob's employer didn't have its own computer; it rented time on a mid-range computer and ran all its jobs using batch processing in COBOL. And in those ancient times, these stone tools were just fine. But computing got more and more important, and the costs for renting time kept going up and up, so they eventually bought their own AS/400. And that meant someone needed to migrate all of their COBOL to RPG. And management knew what you do for those kinds of conversions: higher a Highly Paid Consultant. On one hand, the results weren't great. On the other, the code is still in use, though has been through many updates and modernizations and migrations in that time. Still, the HPC's effects can be felt, like this block, which hasn't been touched since she was last here: // CHECK FOR VALID FIELD IF FIELD1 \u003c\u003e *BLANKS AND FIELD1 \u003c '1' AND FIELD1 \u003e '5'; BadField1 = *ON; LEAVESR; ENDIF; This is a validation check on a field (anonymized by Rob), but the key thing I want you to note is that what the field stores are numbers, but it stores those numbers as text- note the quotes. And the greater-than/less-than operators will do lexical comparisons on text, which means '21' \u003c '5' is true. The goal of this comparison was to require the values to be between 1 and 5. But that's not what it's enforcing. The only good(?) news is that this field also isn't used. There's one screen where users can set the value, but no one has- it's currently blank everywhere- and nothing else in the system references the value. Which raises the question of why it's there at all. But those kinds of questions are par for the course for the HPC. When they migrated a bunch of reports and the users compared the results with the original versions, the results didn't balance. The HPC's explanation? \"The users are changing the data to make me look bad.\" [Advertisement] BuildMaster allows you to create a self-service release management platform that allows different teams to manage their applications. Explore how!",
  "image": "https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv itemscope=\"\" itemtype=\"http://schema.org/Article\" id=\"article-page\"\u003e\n\n        \n        \u003cp\u003e\u003cspan\u003eby \n            in \u003ca itemprop=\"articleSection\" href=\"https://thedailywtf.com/series/code-sod\"\u003eCodeSOD\u003c/a\u003e\n            on \u003cspan itemprop=\"datePublished\" content=\"2025-06-30\"\u003e2025-06-30\u003c/span\u003e\n            \u003ca href=\"https://thedailywtf.com/admin/article/edit/10949\" rel=\"nofollow\"\u003eEdit\u003c/a\u003e\n        \u003c/span\u003e\u003c/p\u003e\n        \u003cdiv itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\"\u003e\n            \u003cp\u003e\u003cimg itemprop=\"image\" src=\"https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg\"/\u003e\n            \u003ca itemprop=\"name\" href=\"https://thedailywtf.com/authors/remy-porter\"\u003eRemy Porter\u003c/a\u003e\u003c/p\u003e\u003cp itemprop=\"description\"\u003eComputers were a mistake, which is why I\u0026#39;m trying to shoot them into space. Editor-in-Chief for TDWTF.\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv itemprop=\"articleBody\"\u003e\n            \u003cp\u003eIn ancient times, \u003cstrong\u003eRob\u003c/strong\u003e\u0026#39;s employer didn\u0026#39;t have its own computer; it rented time on a mid-range computer and ran all its jobs using batch processing in COBOL. And in those ancient times, these stone tools were just fine.\u003c/p\u003e\n\u003cp\u003eBut computing got more and more important, and the costs for renting time kept going up and up, so they eventually bought their own AS/400. And that meant someone needed to migrate all of their COBOL to RPG. And management knew what you do for those kinds of conversions: higher a Highly Paid Consultant.\u003c/p\u003e\n\u003cp\u003eOn one hand, the results weren\u0026#39;t great. On the other, \u003cem\u003ethe code is still in use\u003c/em\u003e, though has been through many updates and modernizations and migrations in that time. Still, the HPC\u0026#39;s effects can be felt, like this block, which hasn\u0026#39;t been touched since she was last here:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e// CHECK FOR VALID FIELD\nIF FIELD1 \u0026lt;\u0026gt; *BLANKS AND FIELD1 \u0026lt; \u0026#39;1\u0026#39; AND FIELD1 \u0026gt; \u0026#39;5\u0026#39;;\n    BadField1 = *ON;\n    LEAVESR;\nENDIF;     \n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis is a validation check on a field (anonymized by Rob), but the key thing I want you to note is that what the field stores are numbers, but it stores those numbers \u003cem\u003eas text\u003c/em\u003e- note the quotes. And the greater-than/less-than operators will do lexical comparisons on text, which means \u003ccode\u003e\u0026#39;21\u0026#39; \u0026lt; \u0026#39;5\u0026#39;\u003c/code\u003e is true.\u003c/p\u003e\n\u003cp\u003eThe \u003cem\u003egoal\u003c/em\u003e of this comparison was to require the values to be between 1 and 5. But that\u0026#39;s not what it\u0026#39;s enforcing. The only good(?) news is that this field \u003cem\u003ealso isn\u0026#39;t used\u003c/em\u003e. There\u0026#39;s one screen where users can set the value, but no one \u003cem\u003ehas\u003c/em\u003e- it\u0026#39;s currently blank everywhere- and nothing else in the system references the value. Which raises the question of why it\u0026#39;s \u003cem\u003ethere\u003c/em\u003e at all.\u003c/p\u003e\n\u003cp\u003eBut those kinds of questions are par for the course for the HPC. When they migrated a bunch of reports and the users compared the results with the original versions, the results didn\u0026#39;t balance. The HPC\u0026#39;s explanation? \u0026#34;The users are changing the data to make me look bad.\u0026#34;\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://thedailywtf.com/images/inedo/buildmaster-icon.png\"/\u003e [Advertisement] \n\t\u003ca href=\"https://inedo.com/BuildMaster?utm_source=tdwtf\u0026amp;utm_medium=footerad\u0026amp;utm_term=2018\u0026amp;utm_content=Self_Service\u0026amp;utm_campaign=Buildmaster_Footer\"\u003eBuildMaster\u003c/a\u003e allows you to create a self-service release management platform that allows different teams to manage their applications. \u003ca href=\"https://inedo.com/BuildMaster/download?utm_source=tdwtf\u0026amp;utm_medium=footerad\u0026amp;utm_term=2018\u0026amp;utm_content=Self_Service\u0026amp;utm_campaign=Buildmaster_Footer\"\u003eExplore how!\u003c/a\u003e \n\u003c/p\u003e\n\n\n        \u003c/div\u003e\n\n        \n    \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": "2025-06-30T06:30:00Z",
  "modifiedTime": null
}
