{
  "id": "5e78f731-3f0c-4199-9864-ebae4fde1f3a",
  "title": "CodeSOD: A Real POS Report",
  "link": "https://thedailywtf.com/articles/a-real-pos-report",
  "description": "Eddie's company hired a Highly Paid Consultant to help them retool their systems for a major upgrade. Of course, the HPC needed more and more time, and the project ran later and later and ended up wildly over budget, so the HPC had to be released, and Eddie inherited the code. What followed was a massive crunch to try and hit absolutely hard delivery dates. Management didn't want their team \"rewriting\" the expensive code they'd already paid for, they just wanted \"quick fixes\" to get it live. Obviously, the HPC's code must be better than theirs, right? After release, a problem appeared in one of their sales related reports. The point-of-sale report was meant to deliver a report about which items were available at any given retail outlet, in addition to sales figures. Because their business dealt in a high volume of seasonal items, every quarter the list of items was expected to change regularly. The users weren't seeing the new items appear in the report. This didn't make very much sense- it was a report. The data was in the database. The report was driven by a view, also in the database, which clearly was returning the correct values? So the bug must be in the code which generated the report… If POSItemDesc = \"Large Sign\" Then grdResults.Columns.FromKey(\"FColumn12\").Header.Caption = \"Large Sign\" End If If POSItemDesc = \"Small Sign\" Then grdResults.Columns.FromKey(\"FColumn12\").Header.Caption = \"Small Sign\" End If If POSItemDesc = \"2x2 Hanging Sign\" Then grdResults.Columns.FromKey(\"FColumn12\").Header.Caption = \"2x2 Hanging Sign\" End If If POSItemDesc = \"1x1 Sign\" Then grdResults.Columns.FromKey(\"FColumn12\").Header.Caption = \"1x1 Sign\" End If '.........Snipping more of these........ If POSItemDesc = \"Light Thief\" Then grdResults.Columns.FromKey(\"FColumn12\").Header.Caption = \"Light Thief\" End If If POSItemDesc = \"Door Strike\" Then grdResults.Columns.FromKey(\"FColumn12\").Header.Caption = \"Door Strike\" End If First, it's worth noting that inside of the results grid display item, the HPC named the field FColumn12, which is such a wonderfully self documenting name, I'm surprised we aren't all using that everywhere. But the more obvious problem is that the list of possible items is hard-coded into the report; items which don't fit one of these if statements don't get displayed. At no point, did the person writing this see the pattern of \"I check if a field equals a string, and then set another field equal to that string,\" and say, \"maybe there's a better way?\" At no point, in the testing process, did anyone try this report with a new item? It was easy enough for Eddie to change the name of the column in the results grid, and replace all this code with a simpler: grdResults.Columns.FromKey(\"POSItem\").Header.Caption = POSItemDesc, which also had the benefit of actually working, but we're all left puzzling over why this happened in the first place. It's not like the HPC was getting paid per line of code. Right? Right? Of course not- no HPC would willingly be paid based on any metric that has an objective standard, even if the metric is dumb. [Advertisement] ProGet’s got you covered with security and access controls on your NuGet feeds. Learn more.",
  "author": "Remy Porter",
  "published": "Mon, 09 Jun 2025 06:30:00 GMT",
  "source": "http://syndication.thedailywtf.com/TheDailyWtf",
  "categories": [
    "CodeSOD"
  ],
  "byline": "Remy Porter",
  "length": 3502,
  "excerpt": "Eddie's company hired a Highly Paid Consultant to help them retool their systems for a major upgrade. Of course, the HPC needed more and more time, and the project ran later and later and ended up wildly over budget, so the HPC had to be released, and Eddie inherited the code. What followed was a massive crunch to try and hit absolutely hard delivery dates. Management didn't want their team \"rewriting\" the expensive code they'd already paid for, they just wanted \"quick fixes\" to get it live. Obviously, the HPC's code must be better than theirs, right?",
  "siteName": "The Daily WTF",
  "favicon": "",
  "text": "by in CodeSOD on 2025-06-09 Edit Remy PorterComputers were a mistake, which is why I'm trying to shoot them into space. Editor-in-Chief for TDWTF. Eddie's company hired a Highly Paid Consultant to help them retool their systems for a major upgrade. Of course, the HPC needed more and more time, and the project ran later and later and ended up wildly over budget, so the HPC had to be released, and Eddie inherited the code. What followed was a massive crunch to try and hit absolutely hard delivery dates. Management didn't want their team \"rewriting\" the expensive code they'd already paid for, they just wanted \"quick fixes\" to get it live. Obviously, the HPC's code must be better than theirs, right? After release, a problem appeared in one of their sales related reports. The point-of-sale report was meant to deliver a report about which items were available at any given retail outlet, in addition to sales figures. Because their business dealt in a high volume of seasonal items, every quarter the list of items was expected to change regularly. The users weren't seeing the new items appear in the report. This didn't make very much sense- it was a report. The data was in the database. The report was driven by a view, also in the database, which clearly was returning the correct values? So the bug must be in the code which generated the report… If POSItemDesc = \"Large Sign\" Then grdResults.Columns.FromKey(\"FColumn12\").Header.Caption = \"Large Sign\" End If If POSItemDesc = \"Small Sign\" Then grdResults.Columns.FromKey(\"FColumn12\").Header.Caption = \"Small Sign\" End If If POSItemDesc = \"2x2 Hanging Sign\" Then grdResults.Columns.FromKey(\"FColumn12\").Header.Caption = \"2x2 Hanging Sign\" End If If POSItemDesc = \"1x1 Sign\" Then grdResults.Columns.FromKey(\"FColumn12\").Header.Caption = \"1x1 Sign\" End If '.........Snipping more of these........ If POSItemDesc = \"Light Thief\" Then grdResults.Columns.FromKey(\"FColumn12\").Header.Caption = \"Light Thief\" End If If POSItemDesc = \"Door Strike\" Then grdResults.Columns.FromKey(\"FColumn12\").Header.Caption = \"Door Strike\" End If First, it's worth noting that inside of the results grid display item, the HPC named the field FColumn12, which is such a wonderfully self documenting name, I'm surprised we aren't all using that everywhere. But the more obvious problem is that the list of possible items is hard-coded into the report; items which don't fit one of these if statements don't get displayed. At no point, did the person writing this see the pattern of \"I check if a field equals a string, and then set another field equal to that string,\" and say, \"maybe there's a better way?\" At no point, in the testing process, did anyone try this report with a new item? It was easy enough for Eddie to change the name of the column in the results grid, and replace all this code with a simpler: grdResults.Columns.FromKey(\"POSItem\").Header.Caption = POSItemDesc, which also had the benefit of actually working, but we're all left puzzling over why this happened in the first place. It's not like the HPC was getting paid per line of code. Right? Right? Of course not- no HPC would willingly be paid based on any metric that has an objective standard, even if the metric is dumb. [Advertisement] ProGet’s got you covered with security and access controls on your NuGet feeds. Learn more.",
  "image": "https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv itemscope=\"\" itemtype=\"http://schema.org/Article\" id=\"article-page\"\u003e\n\n        \n        \u003cp\u003e\u003cspan\u003eby \n            in \u003ca itemprop=\"articleSection\" href=\"https://thedailywtf.com/series/code-sod\"\u003eCodeSOD\u003c/a\u003e\n            on \u003cspan itemprop=\"datePublished\" content=\"2025-06-09\"\u003e2025-06-09\u003c/span\u003e\n            \u003ca href=\"https://thedailywtf.com/admin/article/edit/10932\" rel=\"nofollow\"\u003eEdit\u003c/a\u003e\n        \u003c/span\u003e\u003c/p\u003e\n        \u003cdiv itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\"\u003e\n            \u003cp\u003e\u003cimg itemprop=\"image\" src=\"https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg\"/\u003e\n            \u003ca itemprop=\"name\" href=\"https://thedailywtf.com/authors/remy-porter\"\u003eRemy Porter\u003c/a\u003e\u003c/p\u003e\u003cp itemprop=\"description\"\u003eComputers were a mistake, which is why I\u0026#39;m trying to shoot them into space. Editor-in-Chief for TDWTF.\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv itemprop=\"articleBody\"\u003e\n            \u003cp\u003e\u003cstrong\u003eEddie\u003c/strong\u003e\u0026#39;s company hired a Highly Paid Consultant to help them retool their systems for a major upgrade. Of course, the HPC needed more and more time, and the project ran later and later and ended up wildly over budget, so the HPC had to be released, and Eddie inherited the code.\u003c/p\u003e\n\u003cp\u003eWhat followed was a massive crunch to try and hit absolutely hard delivery dates. Management didn\u0026#39;t want their team \u0026#34;rewriting\u0026#34; the expensive code they\u0026#39;d already paid for, they just wanted \u0026#34;quick fixes\u0026#34; to get it live. Obviously, the HPC\u0026#39;s code must be better than theirs, right?\u003c/p\u003e\n\u003cp\u003eAfter release, a problem appeared in one of their sales related reports. The point-of-sale report was meant to deliver a report about which items were available at any given retail outlet, in addition to sales figures. Because their business dealt in a high volume of seasonal items, every quarter the list of items was expected to change regularly.\u003c/p\u003e\n\u003cp\u003eThe users weren\u0026#39;t seeing the new items appear in the report. This didn\u0026#39;t make very much sense- it was a \u003cem\u003ereport\u003c/em\u003e. The data was in the database. The report was driven by a view, also in the database, which clearly was returning the correct values? So the bug must be in the code which generated the report…\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u003cspan\u003eIf\u003c/span\u003e POSItemDesc = \u003cspan\u003e\u0026#34;Large Sign\u0026#34;\u003c/span\u003e \u003cspan\u003eThen\u003c/span\u003e\n        grdResults.Columns.FromKey(\u003cspan\u003e\u0026#34;FColumn12\u0026#34;\u003c/span\u003e).Header.Caption = \u003cspan\u003e\u0026#34;Large Sign\u0026#34;\u003c/span\u003e\n\u003cspan\u003eEnd\u003c/span\u003e \u003cspan\u003eIf\u003c/span\u003e\n\u003cspan\u003eIf\u003c/span\u003e POSItemDesc = \u003cspan\u003e\u0026#34;Small Sign\u0026#34;\u003c/span\u003e \u003cspan\u003eThen\u003c/span\u003e\n        grdResults.Columns.FromKey(\u003cspan\u003e\u0026#34;FColumn12\u0026#34;\u003c/span\u003e).Header.Caption = \u003cspan\u003e\u0026#34;Small Sign\u0026#34;\u003c/span\u003e\n\u003cspan\u003eEnd\u003c/span\u003e \u003cspan\u003eIf\u003c/span\u003e\n\u003cspan\u003eIf\u003c/span\u003e POSItemDesc = \u003cspan\u003e\u0026#34;2x2 Hanging Sign\u0026#34;\u003c/span\u003e \u003cspan\u003eThen\u003c/span\u003e\n        grdResults.Columns.FromKey(\u003cspan\u003e\u0026#34;FColumn12\u0026#34;\u003c/span\u003e).Header.Caption = \u003cspan\u003e\u0026#34;2x2 Hanging Sign\u0026#34;\u003c/span\u003e\n\u003cspan\u003eEnd\u003c/span\u003e \u003cspan\u003eIf\u003c/span\u003e\n\u003cspan\u003eIf\u003c/span\u003e POSItemDesc = \u003cspan\u003e\u0026#34;1x1 Sign\u0026#34;\u003c/span\u003e \u003cspan\u003eThen\u003c/span\u003e\n        grdResults.Columns.FromKey(\u003cspan\u003e\u0026#34;FColumn12\u0026#34;\u003c/span\u003e).Header.Caption = \u003cspan\u003e\u0026#34;1x1 Sign\u0026#34;\u003c/span\u003e\n\u003cspan\u003eEnd\u003c/span\u003e \u003cspan\u003eIf\u003c/span\u003e\n\u003cspan\u003e\u0026#39;.........Snipping more of these........\u003c/span\u003e\n\u003cspan\u003eIf\u003c/span\u003e POSItemDesc = \u003cspan\u003e\u0026#34;Light Thief\u0026#34;\u003c/span\u003e \u003cspan\u003eThen\u003c/span\u003e\n        grdResults.Columns.FromKey(\u003cspan\u003e\u0026#34;FColumn12\u0026#34;\u003c/span\u003e).Header.Caption = \u003cspan\u003e\u0026#34;Light Thief\u0026#34;\u003c/span\u003e\n\u003cspan\u003eEnd\u003c/span\u003e \u003cspan\u003eIf\u003c/span\u003e\n\u003cspan\u003eIf\u003c/span\u003e POSItemDesc = \u003cspan\u003e\u0026#34;Door Strike\u0026#34;\u003c/span\u003e \u003cspan\u003eThen\u003c/span\u003e\n        grdResults.Columns.FromKey(\u003cspan\u003e\u0026#34;FColumn12\u0026#34;\u003c/span\u003e).Header.Caption = \u003cspan\u003e\u0026#34;Door Strike\u0026#34;\u003c/span\u003e\n\u003cspan\u003eEnd\u003c/span\u003e \u003cspan\u003eIf\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eFirst, it\u0026#39;s worth noting that inside of the results grid display item, the HPC named the field \u003ccode\u003eFColumn12\u003c/code\u003e, which is such a wonderfully self documenting name, I\u0026#39;m surprised we aren\u0026#39;t all using that everywhere. But the more obvious problem is that the list of possible items is hard-coded into the report; items which don\u0026#39;t fit one of these \u003ccode\u003eif\u003c/code\u003e statements don\u0026#39;t get displayed.\u003c/p\u003e\n\u003cp\u003eAt no point, did the person writing this see the pattern of \u0026#34;I check if a field equals a string, and then set another field equal to that string,\u0026#34; and say, \u0026#34;maybe there\u0026#39;s a better way?\u0026#34; At no point, in the testing process, did anyone try this report with a new item?\u003c/p\u003e\n\u003cp\u003eIt was easy enough for Eddie to change the name of the column in the results grid, and replace all this code with a simpler: \u003ccode\u003egrdResults.Columns.FromKey(\u0026#34;POSItem\u0026#34;).Header.Caption = POSItemDesc\u003c/code\u003e, which also had the benefit of \u003cem\u003eactually working\u003c/em\u003e, but we\u0026#39;re all left puzzling over why this happened in the first place. It\u0026#39;s not like the HPC was getting paid per line of code. Right? \u003cem\u003eRight\u003c/em\u003e?\u003c/p\u003e\n\u003cp\u003eOf course not- no HPC would willingly be paid based on any metric that has an objective standard, even if the metric is dumb.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://thedailywtf.com/images/inedo/proget-icon.png\"/\u003e [Advertisement] \n\tProGet’s got you covered with security and access controls on your NuGet feeds. \u003ca href=\"https://inedo.com/proget/private-nuget-server?utm_source=tdwtf\u0026amp;utm_medium=footer\u0026amp;utm_content=GotYouCoveredFooter\u0026amp;utm_campaign=Cyclops2020\"\u003eLearn more.\u003c/a\u003e\n\u003c/p\u003e\n\n\n        \u003c/div\u003e\n\n        \n    \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": "2025-06-09T06:30:00Z",
  "modifiedTime": null
}
