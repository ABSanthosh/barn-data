{
  "id": "df1ebab4-6433-44a9-af47-2a2edc8f7380",
  "title": "CodeSOD: Find the First Function to Cut",
  "link": "https://thedailywtf.com/articles/find-the-first-function-to-cut",
  "description": "Sebastian is now maintaining a huge framework which, in his words, \"could easily be reduced in size by 50%\", especially because many of the methods in it are reinvented wheels that are already provided by .NET and specifically LINQ. For example, if you want the first item in a collection, LINQ lets you call First() or FirstOrDefault() on any collection. The latter option makes handling empty collections easier. But someone decided to reinvent that wheel, and like so many reinvented wheels, it's worse. public static LoggingRule FindFirst (this IEnumerable rules, Funcbool\u003e predicate) { foreach (LoggingRule rule in rules) { return rule; } return null; } This function takes a list of logging rules and a function to filter the logging rules, starts a for loop to iterate over the list, and then simply returns the first element in the list, thus exiting the for loop. If the loop doesn't contain any elements, we return null. From the signature, I'd expect this function to do filtering, but it clearly doesn't. It just returns the first element, period. And again, there's already a built-in function for that. I don't know why this is exists, but I especially dislike that it's so misleading. There's only one positive to say about this: if you did want to reduce the size of the framework by 50%, it's easy to see where I'd start. [Advertisement] BuildMaster allows you to create a self-service release management platform that allows different teams to manage their applications. Explore how!",
  "author": "Remy Porter",
  "published": "Wed, 30 Apr 2025 06:30:00 GMT",
  "source": "http://syndication.thedailywtf.com/TheDailyWtf",
  "categories": [
    "CodeSOD"
  ],
  "byline": "Remy Porter",
  "length": 1829,
  "excerpt": "Sebastian is now maintaining a huge framework which, in his words, \"could easily be reduced in size by 50%\", especially because many of the methods in it are reinvented wheels that are already provided by .NET and specifically LINQ. For example, if you want the first item in a collection, LINQ lets you call First() or FirstOrDefault() on any collection. The latter option makes handling empty collections easier. But someone decided to reinvent that wheel, and like so many reinvented wheels, it's worse.",
  "siteName": "The Daily WTF",
  "favicon": "",
  "text": "by in CodeSOD on 2025-04-30 Edit Remy PorterComputers were a mistake, which is why I'm trying to shoot them into space. Editor-in-Chief for TDWTF. Sebastian is now maintaining a huge framework which, in his words, \"could easily be reduced in size by 50%\", especially because many of the methods in it are reinvented wheels that are already provided by .NET and specifically LINQ. For example, if you want the first item in a collection, LINQ lets you call First() or FirstOrDefault() on any collection. The latter option makes handling empty collections easier. But someone decided to reinvent that wheel, and like so many reinvented wheels, it's worse. public static LoggingRule FindFirst (this IEnumerable\u003cLoggingRule\u003e rules, Func\u003cLoggingRule, bool\u003e predicate) { foreach (LoggingRule rule in rules) { return rule; } return null; } This function takes a list of logging rules and a function to filter the logging rules, starts a for loop to iterate over the list, and then simply returns the first element in the list, thus exiting the for loop. If the loop doesn't contain any elements, we return null. From the signature, I'd expect this function to do filtering, but it clearly doesn't. It just returns the first element, period. And again, there's already a built-in function for that. I don't know why this is exists, but I especially dislike that it's so misleading. There's only one positive to say about this: if you did want to reduce the size of the framework by 50%, it's easy to see where I'd start. [Advertisement] BuildMaster allows you to create a self-service release management platform that allows different teams to manage their applications. Explore how!",
  "image": "https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv itemscope=\"\" itemtype=\"http://schema.org/Article\" id=\"article-page\"\u003e\n\n        \n        \u003cp\u003e\u003cspan\u003eby \n            in \u003ca itemprop=\"articleSection\" href=\"https://thedailywtf.com/series/code-sod\"\u003eCodeSOD\u003c/a\u003e\n            on \u003cspan itemprop=\"datePublished\" content=\"2025-04-30\"\u003e2025-04-30\u003c/span\u003e\n            \u003ca href=\"https://thedailywtf.com/admin/article/edit/10903\" rel=\"nofollow\"\u003eEdit\u003c/a\u003e\n        \u003c/span\u003e\u003c/p\u003e\n        \u003cdiv itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\"\u003e\n            \u003cp\u003e\u003cimg itemprop=\"image\" src=\"https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg\"/\u003e\n            \u003ca itemprop=\"name\" href=\"https://thedailywtf.com/authors/remy-porter\"\u003eRemy Porter\u003c/a\u003e\u003c/p\u003e\u003cp itemprop=\"description\"\u003eComputers were a mistake, which is why I\u0026#39;m trying to shoot them into space. Editor-in-Chief for TDWTF.\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv itemprop=\"articleBody\"\u003e\n            \u003cp\u003e\u003cstrong\u003eSebastian\u003c/strong\u003e is now maintaining a huge framework which, in his words, \u0026#34;could easily be reduced in size by 50%\u0026#34;, especially because many of the methods in it are reinvented wheels that are already provided by .NET and specifically LINQ.\u003c/p\u003e\n\u003cp\u003eFor example, if you want the first item in a collection, LINQ lets you call \u003ccode\u003eFirst()\u003c/code\u003e or \u003ccode\u003eFirstOrDefault()\u003c/code\u003e on any collection. The latter option makes handling empty collections easier. But someone decided to reinvent that wheel, and like so many reinvented wheels, it\u0026#39;s worse.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003estatic\u003c/span\u003e LoggingRule \u003cspan\u003eFindFirst\u003c/span\u003e (\u003cspan\u003e\u003cspan\u003ethis\u003c/span\u003e IEnumerable\u0026lt;LoggingRule\u0026gt; rules, Func\u0026lt;LoggingRule, \u003cspan\u003ebool\u003c/span\u003e\u0026gt; predicate\u003c/span\u003e)\u003c/span\u003e\n{\n        \u003cspan\u003eforeach\u003c/span\u003e (LoggingRule rule \u003cspan\u003ein\u003c/span\u003e rules) {\n                \u003cspan\u003ereturn\u003c/span\u003e rule;\n        }\n        \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis function takes a list of logging rules and a function to filter the logging rules, starts a for loop to iterate over the list, and then simply returns the first element in the list, thus exiting the for loop. If the loop doesn\u0026#39;t contain any elements, we return \u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eFrom the signature, I\u0026#39;d expect this function to do filtering, but it clearly doesn\u0026#39;t. It just returns the first element, period. And again, there\u0026#39;s already a built-in function for that. I don\u0026#39;t know why this is exists, but I especially dislike that it\u0026#39;s so misleading.\u003c/p\u003e\n\u003cp\u003eThere\u0026#39;s only one positive to say about this: if you did want to reduce the size of the framework by 50%, it\u0026#39;s easy to see where I\u0026#39;d start.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://thedailywtf.com/images/inedo/buildmaster-icon.png\"/\u003e [Advertisement] \n\t\u003ca href=\"https://inedo.com/BuildMaster?utm_source=tdwtf\u0026amp;utm_medium=footerad\u0026amp;utm_term=2018\u0026amp;utm_content=Self_Service\u0026amp;utm_campaign=Buildmaster_Footer\"\u003eBuildMaster\u003c/a\u003e allows you to create a self-service release management platform that allows different teams to manage their applications. \u003ca href=\"https://inedo.com/BuildMaster/download?utm_source=tdwtf\u0026amp;utm_medium=footerad\u0026amp;utm_term=2018\u0026amp;utm_content=Self_Service\u0026amp;utm_campaign=Buildmaster_Footer\"\u003eExplore how!\u003c/a\u003e \n\u003c/p\u003e\n\n\n        \u003c/div\u003e\n\n        \n    \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": "2025-04-30T06:30:00Z",
  "modifiedTime": null
}
