{
  "id": "a484713c-ec2a-464e-8045-db99ecc6d848",
  "title": "CodeSOD: Recursive Search",
  "link": "https://thedailywtf.com/articles/recursive-search",
  "description": "Sometimes, there's code so bad you simply know it's unused and never called. Bernard sends us one such method, in Java: /** * Finds a GroupEntity by group number. * * @param group the group number. * @return the GroupEntity object. */ public static GroupEntity find(String group) { return GroupEntity.find(group); } This is a static method on the GroupEntity class called find, which calls a static method on the GroupEntity class called find, which calls a static method on the GroupEntity class called find and it goes on and on my friend. Clearly, this is a mistake. Bernard didn't supply much more context, so perhaps the String was supposed to be turned into some other type, and there's an overload which would break the recursion. Regardless, there was an antediluvian ticket on the backlog requesting that the feature to allow finding groups via a search input that no one had yet worked on. I'm sure they'll get around to it, once the first call finishes. .comment { border: none; } [Advertisement] Plan Your .NET 9 Migration with ConfidenceYour journey to .NET 9 is more than just one decision.Avoid migration migraines with the advice in this free guide. Download Free Guide Now!",
  "author": "Remy Porter",
  "published": "Tue, 19 Nov 2024 06:30:00 GMT",
  "source": "http://syndication.thedailywtf.com/TheDailyWtf",
  "categories": [
    "CodeSOD"
  ],
  "byline": "Remy Porter",
  "length": 1476,
  "excerpt": "Sometimes, there's code so bad you simply know it's unused and never called. Bernard sends us one such method, in Java: /** * Finds a \u003ccode\u003eGroupEntity\u003c/code\u003e by group number. * * @param group the group number. * @return the \u003ccode\u003eGroupEntity\u003c/code\u003e object. */ public static GroupEntity find(String group) { return GroupEntity.find(group); }",
  "siteName": "The Daily WTF",
  "favicon": "",
  "text": "by in CodeSOD on 2024-11-19 Edit Remy PorterComputers were a mistake, which is why I'm trying to shoot them into space. Editor-in-Chief for TDWTF. Sometimes, there's code so bad you simply know it's unused and never called. Bernard sends us one such method, in Java: /** * Finds a \u003ccode\u003eGroupEntity\u003c/code\u003e by group number. * * @param group the group number. * @return the \u003ccode\u003eGroupEntity\u003c/code\u003e object. */ public static GroupEntity find(String group) { return GroupEntity.find(group); } This is a static method on the GroupEntity class called find, which calls a static method on the GroupEntity class called find, which calls a static method on the GroupEntity class called find and it goes on and on my friend. Clearly, this is a mistake. Bernard didn't supply much more context, so perhaps the String was supposed to be turned into some other type, and there's an overload which would break the recursion. Regardless, there was an antediluvian ticket on the backlog requesting that the feature to allow finding groups via a search input that no one had yet worked on. I'm sure they'll get around to it, once the first call finishes. [Advertisement] Plan Your .NET 9 Migration with ConfidenceYour journey to .NET 9 is more than just one decision.Avoid migration migraines with the advice in this free guide. Download Free Guide Now!",
  "image": "https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv itemscope=\"\" itemtype=\"http://schema.org/Article\" id=\"article-page\"\u003e\n\n        \n        \u003cp\u003e\u003cspan\u003eby \n            in \u003ca itemprop=\"articleSection\" href=\"https://thedailywtf.com/series/code-sod\"\u003eCodeSOD\u003c/a\u003e\n            on \u003cspan itemprop=\"datePublished\" content=\"2024-11-19\"\u003e2024-11-19\u003c/span\u003e\n            \u003ca href=\"https://thedailywtf.com/admin/article/edit/10784\" rel=\"nofollow\"\u003eEdit\u003c/a\u003e\n        \u003c/span\u003e\u003c/p\u003e\n        \u003cdiv itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\"\u003e\n            \u003cp\u003e\u003cimg itemprop=\"image\" src=\"https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg\"/\u003e\n            \u003ca itemprop=\"name\" href=\"https://thedailywtf.com/authors/remy-porter\"\u003eRemy Porter\u003c/a\u003e\u003c/p\u003e\u003cp itemprop=\"description\"\u003eComputers were a mistake, which is why I\u0026#39;m trying to shoot them into space. Editor-in-Chief for TDWTF.\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv itemprop=\"articleBody\"\u003e\n            \u003cp\u003eSometimes, there\u0026#39;s code so bad you simply know it\u0026#39;s unused and never called. \u003cstrong\u003eBernard\u003c/strong\u003e sends us one such method, in Java:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e  \u003cspan\u003e/**\n   * Finds a \u0026lt;code\u0026gt;GroupEntity\u0026lt;/code\u0026gt; by group number.\n   *\n   * \u003cspan\u003e@param\u003c/span\u003e  group the group number.\n   * \u003cspan\u003e@return\u003c/span\u003e the \u0026lt;code\u0026gt;GroupEntity\u0026lt;/code\u0026gt; object.\n   */\u003c/span\u003e\n  \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003estatic\u003c/span\u003e GroupEntity \u003cspan\u003efind\u003c/span\u003e\u003cspan\u003e(String group)\u003c/span\u003e {\n    \u003cspan\u003ereturn\u003c/span\u003e GroupEntity.find(group);\n  }\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis is a static method on the \u003ccode\u003eGroupEntity\u003c/code\u003e class called \u003ccode\u003efind\u003c/code\u003e, which calls a static method on the \u003ccode\u003eGroupEntity\u003c/code\u003e class called \u003ccode\u003efind\u003c/code\u003e, which calls a static method on the \u003ccode\u003eGroupEntity\u003c/code\u003e class called \u003ccode\u003efind\u003c/code\u003e and it goes on and on my friend.\u003c/p\u003e\n\u003cp\u003eClearly, this is a mistake. Bernard didn\u0026#39;t supply much more context, so perhaps the \u003ccode\u003eString\u003c/code\u003e was supposed to be turned into some other type, and there\u0026#39;s an overload which would break the recursion. Regardless, there was an antediluvian ticket on the backlog requesting that the feature to allow finding groups via a search input that no one had yet worked on.\u003c/p\u003e\n\u003cp\u003eI\u0026#39;m sure they\u0026#39;ll get around to it, once the first call finishes.\u003c/p\u003e\n\n\u003cp\u003e\n\t[Advertisement] \u003cb\u003ePlan Your .NET 9 Migration with Confidence\u003c/b\u003e\u003cbr/\u003eYour journey to .NET 9 is more than just one decision.Avoid migration migraines with the advice in this free guide. \u003cb\u003e\u003ca href=\"https://inedo.com/support/whitepapers/dotnet-guide?utm_campaign=dotnet\u0026amp;utm_source=tdwtf-footer\"\u003eDownload Free Guide Now!\u003c/a\u003e\u003c/b\u003e\n\u003c/p\u003e\n\n        \u003c/div\u003e\n\n        \n    \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": "2024-11-19T06:30:00Z",
  "modifiedTime": null
}
