{
  "id": "4c44f3ff-94ed-4bc8-b191-d491c19779fd",
  "title": "CodeSOD: Finally, a Null",
  "link": "https://thedailywtf.com/articles/finally-a-null",
  "description": "Eric writes: Yes, we actually do have code reviews and testing practices. A version of this code was tested successfully prior to this version being merged in, somehow. Well, that's ominous. Let's look at the code. public static SqsClient create() { try { SqsClient sqsClient = SqsClient.builder() ... .build(); return sqsClient; } catch (Exception e) { log.error(\"SQS - exception creating sqs client\", e); } finally { // Uncomment this to test the sqs in a test environment // return SqsClient.builder(). ... .build(); return null; } } Eric found this when he discovered that the application wasn't sending messages to their queue. According to the logs, there were messages to send, they just weren't being sent. Eric made the mistake of looking for log messages around sending messages, when instead he should have been looking at module startup, where the error message above appeared. This code attempts to create a connection, and if it fails for any reason, it logs an error and returns null. With a delightful \"comment this out\" for running in the test environment, which, please, god no. Don't do configuration management by commenting out lines of code. Honestly, that's the worst thing in this code, to me. In any case, the calling code \"properly\" handled nulls by just disabling sending to the queue silently, which made this harder to debug than it needed to be. .comment { border: none; } [Advertisement] BuildMaster allows you to create a self-service release management platform that allows different teams to manage their applications. Explore how!",
  "author": "Remy Porter",
  "published": "Wed, 12 Feb 2025 06:30:00 GMT",
  "source": "http://syndication.thedailywtf.com/TheDailyWtf",
  "categories": [
    "CodeSOD"
  ],
  "byline": "Remy Porter",
  "length": 1866,
  "excerpt": "Eric writes: Yes, we actually do have code reviews and testing practices. A version of this code was tested successfully prior to this version being merged in, somehow.",
  "siteName": "The Daily WTF",
  "favicon": "",
  "text": "by in CodeSOD on 2025-02-12 Edit Remy PorterComputers were a mistake, which is why I'm trying to shoot them into space. Editor-in-Chief for TDWTF. Eric writes: Yes, we actually do have code reviews and testing practices. A version of this code was tested successfully prior to this version being merged in, somehow. Well, that's ominous. Let's look at the code. public static SqsClient create() { try { SqsClient sqsClient = SqsClient.builder() ... .build(); return sqsClient; } catch (Exception e) { log.error(\"SQS - exception creating sqs client\", e); } finally { // Uncomment this to test the sqs in a test environment // return SqsClient.builder(). ... .build(); return null; } } Eric found this when he discovered that the application wasn't sending messages to their queue. According to the logs, there were messages to send, they just weren't being sent. Eric made the mistake of looking for log messages around sending messages, when instead he should have been looking at module startup, where the error message above appeared. This code attempts to create a connection, and if it fails for any reason, it logs an error and returns null. With a delightful \"comment this out\" for running in the test environment, which, please, god no. Don't do configuration management by commenting out lines of code. Honestly, that's the worst thing in this code, to me. In any case, the calling code \"properly\" handled nulls by just disabling sending to the queue silently, which made this harder to debug than it needed to be. [Advertisement] BuildMaster allows you to create a self-service release management platform that allows different teams to manage their applications. Explore how!",
  "image": "https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv itemscope=\"\" itemtype=\"http://schema.org/Article\" id=\"article-page\"\u003e\n\n        \n        \u003cp\u003e\u003cspan\u003eby \n            in \u003ca itemprop=\"articleSection\" href=\"https://thedailywtf.com/series/code-sod\"\u003eCodeSOD\u003c/a\u003e\n            on \u003cspan itemprop=\"datePublished\" content=\"2025-02-12\"\u003e2025-02-12\u003c/span\u003e\n            \u003ca href=\"https://thedailywtf.com/admin/article/edit/10847\" rel=\"nofollow\"\u003eEdit\u003c/a\u003e\n        \u003c/span\u003e\u003c/p\u003e\n        \u003cdiv itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\"\u003e\n            \u003cp\u003e\u003cimg itemprop=\"image\" src=\"https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg\"/\u003e\n            \u003ca itemprop=\"name\" href=\"https://thedailywtf.com/authors/remy-porter\"\u003eRemy Porter\u003c/a\u003e\u003c/p\u003e\u003cp itemprop=\"description\"\u003eComputers were a mistake, which is why I\u0026#39;m trying to shoot them into space. Editor-in-Chief for TDWTF.\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv itemprop=\"articleBody\"\u003e\n            \u003cp\u003e\u003cstrong\u003eEric\u003c/strong\u003e writes:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eYes, we actually do have code reviews and testing practices. A version of this code was tested successfully prior to this version being merged in, somehow.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eWell, that\u0026#39;s ominous. Let\u0026#39;s look at the code.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003estatic\u003c/span\u003e SqsClient \u003cspan\u003ecreate\u003c/span\u003e\u003cspan\u003e()\u003c/span\u003e\n{\n    \u003cspan\u003etry\u003c/span\u003e {\n        \u003cspan\u003eSqsClient\u003c/span\u003e \u003cspan\u003esqsClient\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e SqsClient.builder() ... .build();\n        \u003cspan\u003ereturn\u003c/span\u003e sqsClient;\n    } \u003cspan\u003ecatch\u003c/span\u003e (Exception e) {\n        log.error(\u003cspan\u003e\u0026#34;SQS - exception creating sqs client\u0026#34;\u003c/span\u003e, e);\n    } \u003cspan\u003efinally\u003c/span\u003e {\n        \u003cspan\u003e// Uncomment this to test the sqs in a test environment\u003c/span\u003e\n        \u003cspan\u003e// return SqsClient.builder(). ... .build();\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e;\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eEric found this when he discovered that the application wasn\u0026#39;t sending messages to their queue. According to the logs, there were messages to send, they just weren\u0026#39;t being sent.\u003c/p\u003e\n\u003cp\u003eEric made the mistake of looking for log messages around \u003cem\u003esending\u003c/em\u003e messages, when instead he should have been looking at module startup, where the error message above appeared.\u003c/p\u003e\n\u003cp\u003eThis code attempts to create a connection, and if it fails for any reason, it logs an error and returns null. With a delightful \u0026#34;comment this out\u0026#34; for running in the test environment, which, please, god no. Don\u0026#39;t do configuration management by commenting out lines of code. Honestly, that\u0026#39;s the worst thing in this code, to me.\u003c/p\u003e\n\u003cp\u003eIn any case, the calling code \u0026#34;properly\u0026#34; handled nulls by just disabling sending to the queue silently, which made this harder to debug than it needed to be.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://thedailywtf.com/images/inedo/buildmaster-icon.png\"/\u003e [Advertisement] \n\t\u003ca href=\"https://inedo.com/BuildMaster?utm_source=tdwtf\u0026amp;utm_medium=footerad\u0026amp;utm_term=2018\u0026amp;utm_content=Self_Service\u0026amp;utm_campaign=Buildmaster_Footer\"\u003eBuildMaster\u003c/a\u003e allows you to create a self-service release management platform that allows different teams to manage their applications. \u003ca href=\"https://inedo.com/BuildMaster/download?utm_source=tdwtf\u0026amp;utm_medium=footerad\u0026amp;utm_term=2018\u0026amp;utm_content=Self_Service\u0026amp;utm_campaign=Buildmaster_Footer\"\u003eExplore how!\u003c/a\u003e \n\u003c/p\u003e\n\n\n        \u003c/div\u003e\n\n        \n    \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": "2025-02-12T06:30:00Z",
  "modifiedTime": null
}
