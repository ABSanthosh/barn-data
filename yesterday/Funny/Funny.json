[
  {
    "id": "6fe0c2dc-aeff-44fd-9f5e-3d966b87dff5",
    "title": "Modern",
    "link": "https://xkcd.com/3089/",
    "description": "",
    "author": "",
    "published": "Wed, 14 May 2025 04:00:00 -0000",
    "image": "https://imgs.xkcd.com/comics/modern.png",
    "source": "https://xkcd.com/rss.xml",
    "categories": null
  },
  {
    "id": "42db3848-8363-4276-ac64-6f948c3aba1a",
    "title": "Deposition",
    "link": "https://xkcd.com/3088/",
    "description": "",
    "author": "",
    "published": "Mon, 12 May 2025 04:00:00 -0000",
    "image": "https://imgs.xkcd.com/comics/deposition.png",
    "source": "https://xkcd.com/rss.xml",
    "categories": null
  },
  {
    "id": "04aaf6e0-78e1-420b-add1-cdb552db933b",
    "title": "What The Duck?",
    "link": "https://awkwardfamilyphotos.com/2025/duck-nightmare/",
    "description": "“My mom thought it would be sweet to hire this living hell of a duck to my 3rd birthday party. This photo was taken seconds before I started screaming and crying in terror.” (submitted by Elisabeth) The post What The Duck? appeared first on AwkwardFamilyPhotos.com.",
    "author": "Team Awkward",
    "published": "Thu, 03 Apr 2025 19:06:26 +0000",
    "image": "https://s3.awkwardfamilyphotos.com/wp-content/uploads/2025/04/03120623/inbound712178304268553129-819x1024.jpg",
    "source": "https://awkwardfamilyphotos.com/feed/",
    "categories": [
      "Birthdays",
      "Misc"
    ]
  },
  {
    "id": "3ba194dc-20d8-4dcd-95d9-c1db1a0e7a6f",
    "title": "The Replacement Plan",
    "link": "https://awkwardfamilyphotos.com/2025/replacement",
    "description": "“We had a professional family photo done for my parents Mother’s \u0026 Father’s Day but right after we gave it to them, my brother got a divorce. My dad decided to cut my ex-sister in law out of the photo and replace her with someone else. Then he hung it on the wall like this... The post The Replacement Plan appeared first on AwkwardFamilyPhotos.com.",
    "author": "Team Awkward",
    "published": "Sat, 22 Feb 2025 00:00:30 +0000",
    "image": "https://s3.awkwardfamilyphotos.com/wp-content/uploads/2025/02/21160026/IMG_1495-772x1024.jpeg",
    "source": "https://awkwardfamilyphotos.com/feed/",
    "categories": [
      "Family Portrait",
      "Misc"
    ]
  },
  {
    "id": "d06d48d0-a362-4126-9e81-14a0a179eee7",
    "title": "5 of the Most Important Poops in History",
    "link": "https://www.cracked.com/article_45031_5-of-the-most-important-poops-in-history.html?newsletter-cat=science-history",
    "description": "By Jesse Published: January 09th, 2025",
    "author": "",
    "published": "Thu, 09 Jan 2025 08:00:00 -0800",
    "image": "",
    "source": "http://feeds.feedburner.com/CrackedRSS",
    "categories": null
  },
  {
    "id": "9bdf2887-b026-4cf7-93b7-c59845872bdc",
    "title": "Deleted Scenes From ‘The Blues Brothers’ Were Rescued by the FBI",
    "link": "https://www.cracked.com/article_45033_deleted-scenes-from-the-blues-brothers-were-rescued-by-the-fbi.html?newsletter-cat=movies-tv",
    "description": "By JM McNab Published: January 09th, 2025",
    "author": "",
    "published": "Thu, 09 Jan 2025 06:40:00 -0800",
    "image": "",
    "source": "http://feeds.feedburner.com/CrackedRSS",
    "categories": null
  },
  {
    "id": "cb15f41a-f5e3-4144-964d-315112443835",
    "title": "Comic for 2021.12.21",
    "link": "http://explosm.net/comics/6060/",
    "description": "New Cyanide and Happiness Comic",
    "author": "",
    "published": "Tue, 21 Dec 2021 00:00:00 -0600",
    "image": "",
    "source": "http://feeds.feedburner.com/Explosm",
    "categories": [
      "Comics"
    ]
  },
  {
    "id": "e52e1a32-ba09-4d7e-b1ff-664592bd4cd6",
    "title": "Comic for 2021.12.20",
    "link": "http://explosm.net/comics/6059/",
    "description": "New Cyanide and Happiness Comic",
    "author": "",
    "published": "Mon, 20 Dec 2021 00:00:00 -0600",
    "image": "",
    "source": "http://feeds.feedburner.com/Explosm",
    "categories": [
      "Comics"
    ]
  },
  {
    "id": "675c1960-4d07-4801-9487-8d41c211f00c",
    "title": "20-year homeowner comes up with the most creative ways to get back at longtime nightmare neighbor: 'Neighbor dishes [it] out, receives it paid back with interest'",
    "link": "https://cheezburger.com/40558597/20-year-homeowner-comes-up-with-the-most-creative-ways-to-get-back-at-longtime-nightmare-neighbor",
    "description": "Having a great a neighbor is the best! It's comforting knowing there is someone living next to you that you know cares at least a little about you. It's even better when you befriend that neighbor, because then you know the caring goes even further. So if anything goes wrong, there is someone right next door that you can turn to for help. Or, if they do become your friend, there is someone right next door that you can reach out to if you just wanna hang out or need someone to talk to. Everyone wants a good neighbor. Unfortunately, that doesn't seem to always be the case. Even if you have lived next to someone for two decades, that doesn't mean you will eventually befriend them. They can always be your nightmare. And that seems to be the case with this woman who has been at her place for over 20 years…",
    "author": "Elna McHilderson",
    "published": "Wed, 14 May 2025 15:00:00 -0700",
    "image": "",
    "source": "http://feeds.feedburner.com/failblog",
    "categories": [
      "homeowner costs",
      "real estate agent",
      "karens",
      "buying land",
      "hoa",
      "hoa stories",
      "hoa fees",
      "new homebuyer",
      "how to handle your hoa",
      "new homeowner",
      "hoa scandal",
      "HOA board member",
      "homeowner",
      "homeownership",
      "house hunting",
      "helpful",
      "new homeowners",
      "community drama",
      "owning a home",
      "buying a house",
      "reddit karen",
      "what goes around comes around",
      "entitled people karma",
      "homebuyer",
      "real estate",
      "pay back",
      "How To",
      "karens in the wild",
      "hoa drama",
      "justice served",
      "entitled",
      "karen karma",
      "new homebuyers",
      "r-entitled",
      "Reddit",
      "official hoa",
      "owning a house",
      "karen story",
      "new home",
      "karma",
      "karen",
      "housing market",
      "entitled people",
      "buying a new home",
      "hoa members"
    ]
  },
  {
    "id": "b49c4a90-8fa4-4529-b9e1-4907c155226f",
    "title": "'[He] kept calling the shop manager a clown to his face': 20+ Employees whose poor decisions led them to get fired",
    "link": "https://cheezburger.com/40577541/he-kept-calling-the-shop-manager-a-clown-to-his-face-20-employees-whose-poor-decisions-led-them-to",
    "description": "Not everyone deserves to get fired, but some people make it impossible for their bosses to keep them around. Firing an employee is often the worst-case scenario for an employer. They'd rather have that person quit if possible, so sometimes employees receive numerous warnings or get put on a performance improvement plan. These things should clue the employee into the fact that their employer is not happy about how things are going, and that they should start seeking new work ASAP. But for some employees, getting fired is the only way to make them realize just how badly they're really doing at their job. Up next, read about this 16-year-old who quit his job after his parents spent years giving away his money to his younger siblings: \"My parents are bad with money and they spoil my younger siblings.\"",
    "author": "Remy Millisky",
    "published": "Wed, 14 May 2025 14:00:00 -0700",
    "image": "",
    "source": "http://feeds.feedburner.com/failblog",
    "categories": [
      "terrible coworkers",
      "getting fired",
      "firing story",
      "firing",
      "employee",
      "fired",
      "work stories",
      "toxic-workplace",
      "fired story",
      "coworkers",
      "working",
      "fired on spot",
      "employees",
      "coworker",
      "got fired"
    ]
  },
  {
    "id": "9f6e0926-7d39-4e11-8fca-0e487893b6d3",
    "title": "25 Hissterically Hilarious Cat Memes to Boost Hooman Moods",
    "link": "https://cheezburger.com/40524037/25-hissterically-hilarious-cat-memes-to-boost-hooman-moods",
    "description": "Cats are the ultimate mood boosters. It's like humans' mood is an astronaut, and cats are a spaceship that flies it up, up and away, so high it's in space now. That's how high of a mood a cat can help you get. Cats boost the moods of anyone, even if they don't know it. Some people don't think much of cats (preposterous, we know) - but cats can help them as well. See, cats do not discriminate between any random people to devout crazy cat ladies. Cats love everyone, and they have a lot of love to give.Now, we're also aware that not everyone has a cat next to them. It must mostly be these people who do not think much of cats (how can they? we're not sure how it's legal), but they still have access to cat mood boosting if they have an internet connection. If you want to help them be helped by cats, just send them these hissterically hilarious cat memes. Once they see the cats in the memes, they'll know.",
    "author": "Ayala Sorotsky",
    "published": "Wed, 14 May 2025 12:00:00 -0700",
    "image": "",
    "source": "http://feeds.feedburner.com/icanhascheezburger",
    "categories": [
      "funny cat memes",
      "hilarious",
      "funny memes",
      "Memes",
      "funny cats",
      "hilarious memes",
      "Cats",
      "hilarious cats",
      "funny",
      "cat memes"
    ]
  },
  {
    "id": "004348f6-2977-4578-9e97-cf6f2a26352d",
    "title": "'This cat truly has 0 interest in me': Feline pawrent opens up about her expensive Maine Coon not liking her even after raising them for 13 years from kitten to beautiful bratty baby",
    "link": "https://cheezburger.com/40518661/this-cat-truly-has-0-interest-in-me-feline-pawrent-opens-up-about-her-expensive-maine-coon-not",
    "description": "Cats are fickle creatures. One second, they love you, and the next second, they wouldn't touch you with a 30-foot feather toy. Some cats love everyone, some only love their owners, and apparently, some love everyone except their owners. No one knows why (unless one of you out there is fluent in cat and not telling us), but we do know that once a cat makes up their mind, it's pawsitively challenging to change it. Especially Maine Coons, who are not only meowgically majestic, but also known for being purrfectly opinionated.That's why we feeline for the pawrent in the post below. She claims that even after raising her Maine Coon for 13 years, the cat still doesn't like her. In fact, the cat always chooses another roommate or friend to bond with and purractically ignores her hooman mom. We've had aloof cats before, but never to this level before. Scroll down to read the full thread below and give your cats a big hug for us today (if they'll even let you).",
    "author": "Blake Seidel",
    "published": "Wed, 14 May 2025 08:00:00 -0700",
    "image": "",
    "source": "http://feeds.feedburner.com/icanhascheezburger",
    "categories": [
      "maine coon",
      "kitten",
      "cat owners",
      "feline",
      "cat parents",
      "pawrents",
      "expensive",
      "Cats",
      "animals"
    ]
  },
  {
    "id": "bbe17b0a-ae9f-44c7-97dd-5b1b0adcd5c1",
    "title": "Parts Per MIllion",
    "link": "https://www.penny-arcade.com/news/post/2025/05/14/parts-per-million",
    "description": "Whether something is a review or review bombing is purely rhetorical; the color of the dress is based on a bunch of stuff you believed before the thing in question ever happened. It's essentially a kind of intellectual pose, an inoculation against new information, the implementation of a kind of mental hygiene. At some level I think that dogmas exist to control the biological costs of cognition, but we don't have to trek all the way out there. It's not any more complex than this: people we don't like will sometimes be correct. Because we live in a world largely made of information now, we can curate ourselves utterly out of any functional mode of self-correction. It hasn't made us any smarter, and when we become aware of just how thoroughly we have invested ourselves in illusion it falls on you like a guillotine.",
    "author": "",
    "published": "Wed, 14 May 2025 19:29:00 +0000",
    "image": "",
    "source": "https://www.penny-arcade.com/feed",
    "categories": null
  },
  {
    "id": "2aef46fa-b458-453f-a892-2e3248248802",
    "title": "Parts Per MIllion",
    "link": "https://www.penny-arcade.com/comic/2025/05/14/parts-per-million",
    "description": "New Comic: Parts Per MIllion",
    "author": "",
    "published": "Wed, 14 May 2025 07:01:00 +0000",
    "image": "",
    "source": "https://www.penny-arcade.com/feed",
    "categories": null
  },
  {
    "id": "024ace47-b5e8-4e6f-9f6c-bc6fdf88721f",
    "title": "Sunday Secrets",
    "link": "https://postsecret.com/2025/05/11/sunday-secrets-555/",
    "description": "The post Sunday Secrets appeared first on PostSecret.",
    "author": "Frank",
    "published": "Sun, 11 May 2025 00:04:00 +0000",
    "image": "https://i0.wp.com/postsecret.com/wp-content/uploads/2025/05/seventy-1.jpg?resize=526%2C331\u0026ssl=1",
    "source": "https://postsecret.com/feed/?alt=rss",
    "categories": [
      "Uncategorized"
    ]
  },
  {
    "id": "125d1f55-9f4a-4bf3-bcf0-7075e46adf45",
    "title": "Mother’s Day Secrets",
    "link": "https://postsecret.com/2025/05/11/mothers-day-secrets-6/",
    "description": "The post Mother’s Day Secrets appeared first on PostSecret.",
    "author": "Frank",
    "published": "Sun, 11 May 2025 00:03:00 +0000",
    "image": "https://i0.wp.com/postsecret.com/wp-content/uploads/2018/05/1mmom.jpg?resize=593%2C477\u0026ssl=1",
    "source": "https://postsecret.com/feed/?alt=rss",
    "categories": [
      "Uncategorized"
    ]
  },
  {
    "id": "e95a1d48-46ad-4195-a096-fcc409a8438f",
    "title": "01/15/21 PHD comic: 'NEW BOOK! Out of Your Mind!'",
    "link": "http://www.phdcomics.com/comics.php?f=2051",
    "description": "Piled Higher \u0026 Deeper by Jorge Cham www.phdcomics.com title: \"NEW BOOK! Out of Your Mind!\" - originally published 1/15/2021 For the latest news in PHD Comics, CLICK HERE!",
    "author": "",
    "published": "Mon, 31 Jan 2022 11:24:26 -0800",
    "image": "http://www.phdcomics.com/comics/archive/phd011525s.gif",
    "source": "http://phdcomics.com/gradfeed.php",
    "categories": null
  },
  {
    "id": "ff73a9f0-5f18-450f-945e-e2ceab02db17",
    "title": "08/31/23 PHD comic: 'New Book! Oliver's Great Big Universe!'",
    "link": "http://www.phdcomics.com/comics.php?f=2050",
    "description": "Piled Higher \u0026 Deeper by Jorge Cham www.phdcomics.com title: \"New Book! Oliver's Great Big Universe!\" - originally published 8/31/2023 For the latest news in PHD Comics, CLICK HERE!",
    "author": "",
    "published": "Tue, 14 Dec 2021 11:53:03 -0800",
    "image": "http://www.phdcomics.com/comics/archive/phd083123s.gif",
    "source": "http://phdcomics.com/gradfeed.php",
    "categories": null
  },
  {
    "id": "4e328ba0-67e4-47cc-b9cb-5198b76f2eb8",
    "title": "Books to distract, engage and love.",
    "link": "https://thebloggess.com/2025/05/09/books-to-distract-engage-and-love/",
    "description": "This month’s new book releases held a few of my absolute favorites for the year, which made it quite hard to winnow them down to just two for my book club picks. A good problem to have though. This month we’re sending Fantastic Strangelings When the Tides Held the Moon by Venessa Vida Kelley. It’sContinue reading \"Books to distract, engage and love.\"",
    "author": "thebloggess",
    "published": "Fri, 09 May 2025 19:48:11 +0000",
    "image": "",
    "source": "https://thebloggess.com/feed/",
    "categories": [
      "Random Crap"
    ]
  },
  {
    "id": "43ee56ef-0668-474e-8835-29d0918ec49a",
    "title": "Facebook marketplace is lightly terrifying.",
    "link": "https://thebloggess.com/2025/05/01/facebook-marketplace-is-lightly-terrifying/",
    "description": "We’re moving to a smaller place and so I’ve been selling some things on Facebook marketplace, and I started with just normal descriptions but then I got bored and everything I’m posting now is ridiculous but I figure if I’m going to write ad copy it’s going to be entertaining, even if it’s just toContinue reading \"Facebook marketplace is lightly terrifying.\"",
    "author": "thebloggess",
    "published": "Thu, 01 May 2025 22:23:46 +0000",
    "image": "",
    "source": "https://thebloggess.com/feed/",
    "categories": [
      "Random Crap"
    ]
  },
  {
    "id": "cff6a168-d274-4474-ac3b-727c55451076",
    "title": "Saturday Morning Breakfast Cereal - Darwinning",
    "link": "https://www.smbc-comics.com/comic/darwinning",
    "description": "Click here to go see the bonus panel!Hovertext:Later, the darwinian eats the creationist and uses the calories to protect his offspring.Today's News:",
    "author": "Zach Weinersmith",
    "published": "Wed, 14 May 2025 13:32:37 -0400",
    "image": "https://www.smbc-comics.com/comics/1747244089-20250514.webp",
    "source": "https://www.smbc-comics.com/comic/rss",
    "categories": null
  },
  {
    "id": "e2e8560f-d283-4386-a267-d9263259a7de",
    "title": "Saturday Morning Breakfast Cereal - Cup",
    "link": "https://www.smbc-comics.com/comic/cup",
    "description": "Click here to go see the bonus panel!Hovertext:More of the relatable humor you've come to appreciate from SMBC.Today's News:",
    "author": "Zach Weinersmith",
    "published": "Tue, 13 May 2025 12:03:00 -0400",
    "image": "https://www.smbc-comics.com/comics/1747152201-20250513.webp",
    "source": "https://www.smbc-comics.com/comic/rss",
    "categories": null
  },
  {
    "id": "16e4b896-8c95-4af6-9a10-20cc80d40588",
    "title": "Karaoke",
    "link": "http://theoatmeal.com/comics/karaoke?no_popup=1",
    "description": "This is my last resortView on my website",
    "author": "Matthew Inman",
    "published": "2025-05-06T15:06:15+01:00",
    "image": "https://s3.amazonaws.com/theoatmeal-img/thumbnails/karaoke_big.png",
    "source": "http://feeds.feedburner.com/oatmealfeed",
    "categories": null
  },
  {
    "id": "470587b8-4789-4c0b-8720-65b207993296",
    "title": "Smoke detector",
    "link": "http://theoatmeal.com/comics/smoke_detector?no_popup=1",
    "description": "A comic about a smoke detectorView on my website",
    "author": "Matthew Inman",
    "published": "2025-04-30T16:51:31+01:00",
    "image": "https://s3.amazonaws.com/theoatmeal-img/thumbnails/smoke_detector_big.png",
    "source": "http://feeds.feedburner.com/oatmealfeed",
    "categories": null
  },
  {
    "id": "fb582582-d8b8-42c5-8e60-6aa5e3bbc1c2",
    "title": "CodeSOD: itouhhh…",
    "link": "https://thedailywtf.com/articles/itouhhh",
    "description": "Frequently in programming, we can make a tradeoff: use less (or more) CPU in exchange for using more (or less) memory. Lookup tables are a great example: use a big pile of memory to turn complicated calculations into O(1) operations. So, for example, implementing itoa, the C library function for turning an integer into a character array (aka, a string), you could maybe make it more efficient using a lookup table. I say \"maybe\", because Helen inherited some C code that, well, even if it were more efficient, it doesn't help because it's wrong. Let's start with the lookup table: char an[1000][3] = { {'0','0','0'},{'0','0','1'},{'0','0','2'},{'0','0','3'},{'0','0','4'},{'0','0','5'},{'0','0','6'},{'0','0','7'},{'0','0','8'},{'0','0','9'}, {'0','1','0'},{'0','1','1'},{'0','1','2'},{'0','1','3'},{'0','1','4'},{'0','1','5'},{'0','1','6'},{'0','1','7'},{'0','1','8'},{'0','1','9'}, … I'm abbreviating the lookup table for now. This lookup table is meant to be use to convert every number from 0…999 into a string representation. Let's take a look at how it's used. int ll = f-\u003ecfg.len_len; long dl = f-\u003edata_len; // Prepare length if ( NULL == dst ) { dst_len = f-\u003edata_len + ll + 1 ; dst = (char*) malloc ( dst_len ); } else //if( dst_len \u003c ll + dl ) if( dst_len \u003c (unsigned) (ll + dl) ) { // TO DOO - error should be processed break; } long i2; switch ( f-\u003ecfg.len_fmt) { case ASCII_FORM: { if ( ll \u003c 2 ) { dst[0]=an[dl][2]; } else if ( ll \u003c 3 ) { dst[0]=an[dl][1]; dst[1]=an[dl][2]; } else if ( ll \u003c 4 ) { dst[0]=an[dl][0]; dst[1]=an[dl][1]; dst[2]=an[dl][2]; } else if ( ll \u003c 5 ) { i2 = dl / 1000; dst[0]=an[i2][2]; i2 = dl % 1000; dst[3]=an[i2][2]; dst[2]=an[i2][1]; dst[1]=an[i2][0]; } else if ( ll \u003c 6 ) { i2 = dl / 1000; dst[0]=an[i2][1]; dst[1]=an[i2][2]; i2 = dl % 1000; dst[4]=an[i2][2]; dst[3]=an[i2][1]; dst[2]=an[i2][0]; } else { // General case for ( int k = ll ; k \u003e 0 ; k-- ) { dst[k-1] ='0' + dl % 10; dl/=10; } } dst[dl]=0; break; } } Okay, we start with some reasonable bounds checking. I have no idea what to make of a struct member called len_len- the length of the length? I'm lacking some context here. Then we get into the switch statement. For all values less than 4 digits, everything makes sense, more or less. I'm not sure what the point of using a 2D array for you lookup table is if you're also copying one character at a time, but for such a small number of copies I'm sure it's fine. But then we get into the len_lens longer than 3, and we start dividing by 1000 so that our lookup table continues to work. Which, again, I guess is fine, but I'm still left wondering why we're doing this, why this specific chain of optimizations is what we need to do. And frankly, why we couldn't just use itoa or a similar library function which already does this and is probably more optimized than anything I'm going to write. When we have an output longer than 5 characters, we just use a naive for-loop and some modulus as our \"general\" case. So no, I don't like this code. It reeks of premature optimization, and it also has the vibe of someone starting to optimize without fully understanding the problem they were optimizing, and trying to change course midstream without changing their solution. But there's a punchline to all of this. Because, you see, I skipped most of the lookup table. Would you like to see how it ends? Of course you do: {'9','8','0'},{'9','8','1'},{'9','8','2'},{'9','8','3'},{'9','8','4'},{'9','8','5'},{'9','8','6'},{'9','8','7'},{'9','8','8'},{'9','8','9'} }; The lookup table doesn't work for values from 990 to 999. There are just no entries there. All this effort to optimize converting integers to text and we end up here: with a function that doesn't work for 1% of the possible values it could receive. And, given that the result is an out-of-bounds array access, it fails with everyone's favorite problem: undefined behavior. Usually it'll segfault, but who knows! Maybe it returns whatever bytes it finds? Maybe it sends the nasal demons after you. The compiler is allowed to do anything. [Advertisement] ProGet’s got you covered with security and access controls on your NuGet feeds. Learn more.",
    "author": "Remy Porter",
    "published": "Wed, 14 May 2025 06:30:00 GMT",
    "image": "https://thedailywtf.com/images/inedo/proget-icon.png",
    "source": "http://syndication.thedailywtf.com/TheDailyWtf",
    "categories": [
      "CodeSOD"
    ]
  },
  {
    "id": "48d8d79a-047e-449b-ae9e-f6b0eec9a3a4",
    "title": "CodeSOD: Exactly a Date",
    "link": "https://thedailywtf.com/articles/exactly-a-date",
    "description": "Alexandar sends us some C# date handling code. The best thing one can say is that they didn't reinvent any wheels, but that might be worse, because they used the existing wheels to drive right off a cliff. try { var date = DateTime.ParseExact(member.PubDate.ToString(), \"M/d/yyyy h:mm:ss tt\", null); objCustomResult.PublishedDate = date; } catch (Exception datEx) { } member.PubDate is a Nullable. So its ToString will return one of two things. If there is a value there, it'll return the DateTimes value. If it's null, it'll just return an empty string. Attempting to parse the empty string will throw an exception, which we helpfully swallow, do nothing about, and leave objCustomResult.PublishedDate in whatever state it was in- I'm going to guess null, but I have no idea. Part of this WTF is that they break the advantages of using nullable types- the entire point is to be able to handle null values without having to worry about exceptions getting tossed around. But that's just a small part. The real WTF is taking a DateTime value, turning it into a string, only to parse it back out. But because this is in .NET, it's more subtle than just the generation of useless strings, because member.PubDate.ToString()'s return value may change depending on your culture info settings. Which sure, this is almost certainly server-side code running on a single server with a well known locale configured. So this probably won't ever blow up on them, but it's 100% the kind of thing everyone thinks is fine until the day it's not. The punchline is that ToString allows you to specify the format you want the date formatted in, which means they could have written this: var date = DateTime.ParseExact(member.PubDate.ToString(\"M/d/yyyy h:mm:ss tt\"), \"M/d/yyyy h:mm:ss tt\", null); But if they did that, I suppose that would have possibly tickled their little grey cells and made them realize how stupid this entire block of code was? [Advertisement] Utilize BuildMaster to release your software with confidence, at the pace your business demands. Download today!",
    "author": "Remy Porter",
    "published": "Tue, 13 May 2025 06:30:00 GMT",
    "image": "https://thedailywtf.com/images/inedo/buildmaster-icon.png",
    "source": "http://syndication.thedailywtf.com/TheDailyWtf",
    "categories": [
      "CodeSOD"
    ]
  },
  {
    "id": "a909d1f8-8a2a-478a-b5b2-f9e99407716d",
    "title": "Judges Claim Pizza Deliveries Sent To Their Homes Meant To Intimidate",
    "link": "https://theonion.com/judges-claim-pizza-deliveries-sent-to-their-homes-meant-to-intimidate/",
    "description": "Federal judges, some of whom are overseeing cases involving the Trump administration, are sounding the alarm over unsolicited deliveries of pizzas to their homes, which they view as a tactic of intimidation against them. What do you think? The post Judges Claim Pizza Deliveries Sent To Their Homes Meant To Intimidate appeared first on The Onion.",
    "author": "The Onion Staff",
    "published": "Wed, 14 May 2025 19:45:24 +0000",
    "image": "https://theonion.com/wp-content/uploads/2025/02/Face-Asian.jpg?w=200",
    "source": "https://www.theonion.com/rss",
    "categories": [
      "American Voices",
      "Food",
      "Law",
      "Vol 61: Issue 20"
    ]
  },
  {
    "id": "f37092bb-645d-4ae5-beb8-b710c6303a28",
    "title": "Bill Belichick Fairly Sure He Clapping for Correct Beauty Pageant Contestant",
    "link": "https://theonion.com/bill-belichick-fairly-sure-he-clapping-for-correct-beauty-pageant-contestant/",
    "description": "The post Bill Belichick Fairly Sure He Clapping for Correct Beauty Pageant Contestant appeared first on The Onion.",
    "author": "The Onion Staff",
    "published": "Wed, 14 May 2025 14:52:49 +0000",
    "image": "",
    "source": "https://www.theonion.com/rss",
    "categories": [
      "Sports",
      "Bill Belichick",
      "News In Photos",
      "Vol 61: Issue 20"
    ]
  }
]
