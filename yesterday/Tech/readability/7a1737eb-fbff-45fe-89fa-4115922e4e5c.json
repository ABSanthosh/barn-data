{
  "id": "7a1737eb-fbff-45fe-89fa-4115922e4e5c",
  "title": "Does GitHub Copilot Improve Code Quality?",
  "link": "https://developers.slashdot.org/story/24/11/23/1855203/does-github-copilot-improve-code-quality?utm_source=rss1.0mainlinkanon\u0026utm_medium=feed",
  "description": "Microsoft-owned GitHub published a blog post asking \"Does GitHub Copilot improve code quality? Here's what the data says.\" Its first paragraph includes statistics from past studies — that GitHub Copilot has helped developers code up to 55% faster, leaving 88% of developers feeling more \"in the flow\" and 85% feeling more confident in their code. But does it improve code quality? [W]e recruited 202 [Python] developers with at least five years of experience. Half were randomly assigned GitHub Copilot access and the other half were instructed not to use any AI tools... We then evaluated the code with unit tests and with an expert review conducted by developers. Our findings overall show that code authored with GitHub Copilot has increased functionality and improved readability, is of better quality, and receives higher approval rates... Developers with GitHub Copilot access had a 56% greater likelihood of passing all 10 unit tests in the study, indicating that GitHub Copilot helps developers write more functional code by a wide margin. In blind reviews, code written with GitHub Copilot had significantly fewer code readability errors, allowing developers to write 13.6% more lines of code, on average, without encountering readability problems. Readability improved by 3.62%, reliability by 2.94%, maintainability by 2.47%, and conciseness by 4.16%. All numbers were statistically significant... Developers were 5% more likely to approve code written with GitHub Copilot, meaning that such code is ready to be merged sooner, speeding up the time to fix bugs or deploy new features. \"While GitHub's reports have been positive, a few others haven't,\" reports Visual Studio magazine: For example, a recent study from Uplevel Data Labs said, \"Developers with Copilot access saw a significantly higher bug rate while their issue throughput remained consistent.\" And earlier this year a \"Coding on Copilot\" whitepaper from GitClear said, \"We find disconcerting trends for maintainability. Code churn — the percentage of lines that are reverted or updated less than two weeks after being authored — is projected to double in 2024 compared to its 2021, pre-AI baseline. We further find that the percentage of 'added code' and 'copy/pasted code' is increasing in proportion to 'updated,' 'deleted,' and 'moved 'code. In this regard, AI-generated code resembles an itinerant contributor, prone to violate the DRY-ness [don't repeat yourself] of the repos visited.\" Read more of this story at Slashdot.",
  "author": "EditorDavid",
  "published": "2024-11-23T23:34:00+00:00",
  "source": "http://rss.slashdot.org/Slashdot/slashdotMain",
  "categories": [
    "programming"
  ],
  "byline": "",
  "length": 2480,
  "excerpt": "Microsoft-owned GitHub published a blog post asking \"Does GitHub Copilot improve code quality? Here's what the data says.\" Its first paragraph includes statistics from past studies — that GitHub Copilot has helped developers code up to 55% faster, leaving 88% of developers feeling more \"in t...",
  "siteName": "",
  "favicon": "",
  "text": "Microsoft-owned GitHub published a blog post asking \"Does GitHub Copilot improve code quality? Here's what the data says.\" Its first paragraph includes statistics from past studies — that GitHub Copilot has helped developers code up to 55% faster, leaving 88% of developers feeling more \"in the flow\" and 85% feeling more confident in their code. But does it improve code quality? [W]e recruited 202 [Python] developers with at least five years of experience. Half were randomly assigned GitHub Copilot access and the other half were instructed not to use any AI tools... We then evaluated the code with unit tests and with an expert review conducted by developers. Our findings overall show that code authored with GitHub Copilot has increased functionality and improved readability, is of better quality, and receives higher approval rates... Developers with GitHub Copilot access had a 56% greater likelihood of passing all 10 unit tests in the study, indicating that GitHub Copilot helps developers write more functional code by a wide margin. In blind reviews, code written with GitHub Copilot had significantly fewer code readability errors, allowing developers to write 13.6% more lines of code, on average, without encountering readability problems. Readability improved by 3.62%, reliability by 2.94%, maintainability by 2.47%, and conciseness by 4.16%. All numbers were statistically significant... Developers were 5% more likely to approve code written with GitHub Copilot, meaning that such code is ready to be merged sooner, speeding up the time to fix bugs or deploy new features. \"While GitHub's reports have been positive, a few others haven't,\" reports Visual Studio magazine: For example, a recent study from Uplevel Data Labs said, \"Developers with Copilot access saw a significantly higher bug rate while their issue throughput remained consistent.\" And earlier this year a \"Coding on Copilot\" whitepaper from GitClear said, \"We find disconcerting trends for maintainability. Code churn — the percentage of lines that are reverted or updated less than two weeks after being authored — is projected to double in 2024 compared to its 2021, pre-AI baseline. We further find that the percentage of 'added code' and 'copy/pasted code' is increasing in proportion to 'updated,' 'deleted,' and 'moved 'code. In this regard, AI-generated code resembles an itinerant contributor, prone to violate the DRY-ness [don't repeat yourself] of the repos visited.\"",
  "image": "https://a.fsdn.com/sd/topics/programming_64.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"fhbody-175528771\"\u003e\u003cp\u003e\n\t\t\t\n\t\t \t\n\t\t\t\tMicrosoft-owned GitHub published a blog post asking \u0026#34;\u003ca href=\"https://github.blog/news-insights/research/does-github-copilot-improve-code-quality-heres-what-the-data-says/\"\u003eDoes GitHub Copilot improve code quality\u003c/a\u003e? Here\u0026#39;s what the data says.\u0026#34;\u003c/p\u003e\u003cp\u003e \n\nIts first paragraph includes statistics from past studies — that GitHub Copilot has helped developers code \u003ca href=\"https://github.blog/news-insights/research/research-quantifying-github-copilots-impact-on-developer-productivity-and-happiness/\"\u003eup to 55% faster\u003c/a\u003e, leaving 88% of developers \u003ca href=\"https://github.blog/news-insights/research/research-quantifying-github-copilots-impact-on-code-quality/\"\u003efeeling more \u0026#34;in the flow\u003c/a\u003e\u0026#34; and 85% feeling more confident in their code.\u003c/p\u003e\u003cp\u003e \nBut does it improve code quality?\n\u003ci\u003e\n[W]e recruited 202 [Python] developers with at least five years of experience. Half were randomly assigned GitHub Copilot access and the other half were instructed not to use any AI tools... We then evaluated the code with unit tests and with an expert review conducted by developers. \u003cp\u003e \nOur findings overall show that code authored with GitHub Copilot has increased functionality and improved readability, is of better quality, and receives higher approval rates... Developers with GitHub Copilot access had a 56% greater likelihood of passing all 10 unit tests in the study, indicating that GitHub Copilot helps developers write more functional code by a wide margin.  In blind reviews, code written with GitHub Copilot had significantly fewer code readability errors, allowing developers to write 13.6% more lines of code, on average, without encountering readability problems.  Readability improved by 3.62%, reliability by 2.94%, maintainability by 2.47%, and conciseness by 4.16%. All numbers were statistically significant...  Developers were 5% more likely to approve code written with GitHub Copilot, meaning that such code is ready to be merged sooner, speeding up the time to fix bugs or deploy new features.\u003c/p\u003e\u003c/i\u003e \u003cbr/\u003e\n\n\u0026#34;While GitHub\u0026#39;s reports have been positive, a few others haven\u0026#39;t,\u0026#34; \u003ca href=\"https://visualstudiomagazine.com/Articles/2024/11/22/Article_0GitHub-Copilot-Research-Claims-Code-Quality-Gains-in-Addition-to-Productivity.aspx\"\u003ereports Visual Studio magazine\u003c/a\u003e:\n\n\u003ci\u003eFor example, \u003ca href=\"https://visualstudiomagazine.com/Articles/2024/09/17/Another-Report-Weighs-In-on-GitHub-Copilot-Dev-Productivity.aspx\"\u003ea recent study\u003c/a\u003e from Uplevel Data Labs said, \u0026#34;Developers with Copilot access saw a significantly higher bug rate while their issue throughput remained consistent.\u0026#34;\u003cp\u003e \nAnd earlier this year a \u0026#34;Coding on Copilot\u0026#34; \u003ca href=\"https://visualstudiomagazine.com/Articles/2024/01/25/copilot-research.aspx\"\u003ewhitepaper from GitClear\u003c/a\u003e said, \u0026#34;We find disconcerting trends for maintainability. Code churn — the percentage of lines that are reverted or updated less than two weeks after being authored — is projected to double in 2024 compared to its 2021, pre-AI baseline. We further find that the percentage of \u0026#39;added code\u0026#39; and \u0026#39;copy/pasted code\u0026#39; is increasing in proportion to \u0026#39;updated,\u0026#39; \u0026#39;deleted,\u0026#39; and \u0026#39;moved \u0026#39;code. In this regard, AI-generated code resembles an itinerant contributor, prone to violate the DRY-ness [don\u0026#39;t repeat yourself] of the repos visited.\u0026#34;\u003c/p\u003e\u003c/i\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": null,
  "modifiedTime": null
}
