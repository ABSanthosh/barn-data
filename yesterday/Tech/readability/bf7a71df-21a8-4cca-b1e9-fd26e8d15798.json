{
  "id": "bf7a71df-21a8-4cca-b1e9-fd26e8d15798",
  "title": "Arnis: Generate cities in Minecraft from OpenStreetMap",
  "link": "https://github.com/louis-e/arnis",
  "description": "Comments",
  "author": "",
  "published": "Tue, 31 Dec 2024 20:47:12 +0000",
  "source": "https://news.ycombinator.com/rss",
  "categories": null,
  "byline": "louis-e",
  "length": 8226,
  "excerpt": "Generate any location from the real world in Minecraft Java Edition with a high level of detail. - louis-e/arnis",
  "siteName": "GitHub",
  "favicon": "https://github.com/fluidicon.png",
  "text": "This open source project written in Rust generates any chosen location from the real world in Minecraft Java Edition with a high level of detail. üñ•Ô∏è Example By leveraging geospatial data from OpenStreetMap and utilizing the powerful capabilities of Rust, Arnis provides an efficient and robust solution for creating complex and accurate Minecraft worlds that reflect real-world geography and architecture. Arnis is designed to handle large-scale data and generate rich, immersive environments that bring real-world cities, landmarks, and natural features into the Minecraft universe. Whether you're looking to replicate your hometown, explore urban environments, or simply build something unique and realistic, Arnis generates your vision. ‚å®Ô∏è Usage Download the latest release or compile the project on your own. Choose your area in Arnis using the rectangle tool and select your Minecraft world - then simply click on 'Start Generation'! The world will always be generated starting from the coordinates 0 0 0. If you choose to select an own world, make sure to generate a new flat world in advance in Minecraft. Alternatively you can also run Arnis the old fashioned way in the command line. arnis.exe --path=\"C:/YOUR_PATH/.minecraft/saves/worldname\" --bbox=\"min_lng,min_lat,max_lng,max_lat\" The --bbox parameter specifies the bounding box coordinates in the format: min_lng,min_lat,max_lng,max_lat. Use --path to specify the location of the Minecraft world. Use http://bboxfinder.com/ to draw a rectangle of your wanted area. Then copy the four box coordinates as shown below and use them as the input for the --bbox parameter. Try starting with a small area since large areas take a lot of computing power and time to process. Note: This might not be working right now since the console gets suppressed. #99 üíæ How it works The raw data obtained from the API (see FAQ) includes each element (buildings, walls, fountains, farmlands, etc.) with its respective corner coordinates (nodes) and descriptive tags. When you run Arnis, the following steps are performed automatically to generate a Minecraft world: Processing Pipeline Fetching Data from the Overpass API: The script retrieves geospatial data for the desired bounding box from the Overpass API. Parsing Raw Data: The raw data is parsed to extract essential information like nodes, ways, and relations. Nodes are converted into Minecraft coordinates, and relations are handled similarly to ways, ensuring all relevant elements are processed correctly. Relations and ways cluster several nodes into one specific object. Prioritizing and Sorting Elements: The elements (nodes, ways, relations) are sorted by priority to establish a layering system, which ensures that certain types of elements (e.g., entrances and buildings) are generated in the correct order to avoid conflicts and overlapping structures. Generating Minecraft World: The Minecraft world is generated using a series of element processors (generate_buildings, generate_highways, generate_landuse, etc.) that interpret the tags and nodes of each element to place the appropriate blocks in the Minecraft world. These processors handle the logic for creating 3D structures, roads, natural formations, and more, as specified by the processed data. Generating Ground Layer: A ground layer is generated based on the provided scale factors to provide a base for the entire Minecraft world. This step ensures all areas have an appropriate foundation (e.g., grass and dirt layers). Saving the Minecraft World: All the modified chunks are saved back to the Minecraft region files. ‚ùì FAQ Wasn't this written in Python before? Yes! Arnis was initially developed in Python, which benefited from Python's open-source friendliness and ease of readability. This is why we strive for clear, well-documented code in the Rust port of this project to find the right balance. I decided to port the project to Rust to learn more about the language and push the algorithm's performance further. We were nearing the limits of optimization in Python, and Rust's capabilities allow for even better performance and efficiency. The old Python implementation is still available in the python-legacy branch. Where does the data come from? The geographic data is sourced from OpenStreetMap (OSM)1, a free, collaborative mapping project that serves as an open-source alternative to commercial mapping services. The data is accessed via the Overpass API, which queries OSM's database. How does the Minecraft world generation work? The script uses the fastnbt cargo package to interact with Minecraft's world format. This library allows Arnis to manipulate Minecraft region files, enabling the generation of real-world locations. Where does the name come from? The project is named after the smallest city in Germany, Arnis2. The city's small size made it an ideal test case for developing and debugging the algorithm efficiently. üìù ToDo and Known Bugs Feel free to choose an item from the To-Do or Known Bugs list, or bring your own idea to the table. Bug reports shall be raised as a Github issue. Contributions are highly welcome and appreciated! Mapping real coordinates to Minecraft coordinates (#29) Rotate maps (#97) Evaluate and implement elevation (#66) Fix Github Action Workflow for releasing Linux \u0026 MacOS Binary Evaluate and implement faster region saving Automatic new world creation instead of using an existing world Implement house roof types Refactor bridges implementation Refactor railway implementation Better code documentation Refactor fountain structure implementation Add interior to buildings Memory optimization Design and implement a GUI Fix faulty empty chunks (owengage/fastnbt#120) (workaround found) Setup fork of https://github.com/aaronr/bboxfinder.com for easy bbox picking üèÜ Open Source Key objectives of this project Modularity: Ensure that all components (e.g., data fetching, processing, and world generation) are cleanly separated into distinct modules for better maintainability and scalability. Performance Optimization: Utilize Rust‚Äôs memory safety and concurrency features to optimize the performance of the world generation process. Comprehensive Documentation: Detailed in-code documentation for a clear structure and logic. User-Friendly Experience: Focus on making the project easy to use for end users. Cross-Platform Support: Ensure the project runs smoothly on Windows, macOS, and Linux. How to contribute This project is open source and welcomes contributions from everyone! Whether you're interested in fixing bugs, improving performance, adding new features, or enhancing documentation, your input is valuable. Simply fork the repository, make your changes, and submit a pull request. We encourage discussions and suggestions to ensure the project remains modular, optimized, and easy to use for the community. You can use the parameter --debug to get a more detailed output of the processed values, which can be helpful for debugging and development. Contributions of all levels are appreciated, and your efforts help improve this tool for everyone. Build and run it using: cargo run --release -- --path=\"C:/YOUR_PATH/.minecraft/saves/worldname\" --bbox=\"min_lng,min_lat,max_lng,max_lat\" For the GUI: cargo run --release After your pull request was merged, I will take care of regularly creating update releases which will include your changes. Contributors: This section is dedicated to recognizing and celebrating the outstanding contributions of individuals who have significantly enhanced this project. Your work and dedication are deeply appreciated! louis-e scd31 vfosnar ‚≠ê Star History ¬©Ô∏è License Information This project is licensed under the GNU General Public License v3.0 (GPL-3.0).3 Copyright (c) 2022-2025 Louis Erbkamm (louis-e) https://en.wikipedia.org/wiki/OpenStreetMap ‚Ü© https://en.wikipedia.org/wiki/Arnis,_Germany ‚Ü© This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. For the full license text, see the LICENSE file. ‚Ü©",
  "image": "https://repository-images.githubusercontent.com/535010087/eb4bef9b-429b-424f-a274-2b61e121b743",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv data-hpc=\"true\"\u003e\u003carticle itemprop=\"text\"\u003e\u003cp dir=\"auto\"\u003e\n  \u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/louis-e/arnis/blob/main/gitassets/logo.png?raw=true\"\u003e\u003cimg width=\"456\" height=\"125\" src=\"https://github.com/louis-e/arnis/raw/main/gitassets/logo.png?raw=true\"/\u003e\u003c/a\u003e\n\u003c/p\u003e\n\n\u003cp dir=\"auto\"\u003eThis open source project written in Rust generates any chosen location from the real world in Minecraft Java Edition with a high level of detail.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eüñ•Ô∏è Example\u003c/h2\u003e\u003ca id=\"user-content-desktop_computer-example\" aria-label=\"Permalink: :desktop_computer: Example\" href=\"#desktop_computer-example\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/louis-e/arnis/blob/main/gitassets/mc.gif?raw=true\"\u003e\u003cimg src=\"https://github.com/louis-e/arnis/raw/main/gitassets/mc.gif?raw=true\" alt=\"Minecraft Preview\" data-animated-image=\"\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eBy leveraging geospatial data from OpenStreetMap and utilizing the powerful capabilities of Rust, Arnis provides an efficient and robust solution for creating complex and accurate Minecraft worlds that reflect real-world geography and architecture.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eArnis is designed to handle large-scale data and generate rich, immersive environments that bring real-world cities, landmarks, and natural features into the Minecraft universe. Whether you\u0026#39;re looking to replicate your hometown, explore urban environments, or simply build something unique and realistic, Arnis generates your vision.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003e‚å®Ô∏è Usage\u003c/h2\u003e\u003ca id=\"user-content-keyboard-usage\" aria-label=\"Permalink: :keyboard: Usage\" href=\"#keyboard-usage\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/louis-e/arnis/blob/main/gitassets/gui.png?raw=true\"\u003e\u003cimg width=\"60%\" src=\"https://github.com/louis-e/arnis/raw/main/gitassets/gui.png?raw=true\"/\u003e\u003c/a\u003e\u003cbr/\u003e\nDownload the \u003ca href=\"https://github.com/louis-e/arnis/releases/\"\u003elatest release\u003c/a\u003e or \u003ca href=\"#trophy-open-source\"\u003ecompile\u003c/a\u003e the project on your own.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eChoose your area in Arnis using the rectangle tool and select your Minecraft world - then simply click on \u0026#39;Start Generation\u0026#39;!\nThe world will always be generated starting from the coordinates 0 0 0.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eIf you choose to select an own world, make sure to generate a new flat world in advance in Minecraft.\u003c/p\u003e\n\u003cdetails\u003e\n\u003csummary\u003eAlternatively you can also run Arnis the old fashioned way in the command line.\u003c/summary\u003e\n\u003cp dir=\"auto\"\u003e\u003ccode\u003earnis.exe --path=\u0026#34;C:/YOUR_PATH/.minecraft/saves/worldname\u0026#34; --bbox=\u0026#34;min_lng,min_lat,max_lng,max_lat\u0026#34;\u003c/code\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eThe --bbox parameter specifies the bounding box coordinates in the format: min_lng,min_lat,max_lng,max_lat. Use --path to specify the location of the Minecraft world.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/louis-e/arnis/blob/main/gitassets/bbox-finder.png?raw=true\"\u003e\u003cimg width=\"60%\" src=\"https://github.com/louis-e/arnis/raw/main/gitassets/bbox-finder.png?raw=true\"/\u003e\u003c/a\u003e\u003cbr/\u003e\nUse \u003ca href=\"http://bboxfinder.com/\" rel=\"nofollow\"\u003ehttp://bboxfinder.com/\u003c/a\u003e to draw a rectangle of your wanted area. Then copy the four box coordinates as shown below and use them as the input for the --bbox parameter. Try starting with a small area since large areas take a lot of computing power and time to process.\u003cbr/\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ci\u003eNote: This might not be working right now since the console gets suppressed. \u003ca data-error-text=\"Failed to load title\" data-id=\"2762422686\" data-permission-text=\"Title is private\" data-url=\"https://github.com/louis-e/arnis/issues/99\" data-hovercard-type=\"issue\" data-hovercard-url=\"/louis-e/arnis/issues/99/hovercard\" href=\"https://github.com/louis-e/arnis/issues/99\"\u003e#99\u003c/a\u003e\u003c/i\u003e\u003c/p\u003e\n\u003c/details\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eüíæ How it works\u003c/h2\u003e\u003ca id=\"user-content-floppy_disk-how-it-works\" aria-label=\"Permalink: :floppy_disk: How it works\" href=\"#floppy_disk-how-it-works\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/louis-e/arnis/blob/main/gitassets/cli.gif?raw=true\"\u003e\u003cimg src=\"https://github.com/louis-e/arnis/raw/main/gitassets/cli.gif?raw=true\" alt=\"CLI Generation\" data-animated-image=\"\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eThe raw data obtained from the API \u003cem\u003e\u003ca href=\"#question-faq\"\u003e(see FAQ)\u003c/a\u003e\u003c/em\u003e includes each element (buildings, walls, fountains, farmlands, etc.) with its respective corner coordinates (nodes) and descriptive tags. When you run Arnis, the following steps are performed automatically to generate a Minecraft world:\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch4 tabindex=\"-1\" dir=\"auto\"\u003eProcessing Pipeline\u003c/h4\u003e\u003ca id=\"user-content-processing-pipeline\" aria-label=\"Permalink: Processing Pipeline\" href=\"#processing-pipeline\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003col dir=\"auto\"\u003e\n\u003cli\u003e\u003cstrong\u003eFetching Data from the Overpass API:\u003c/strong\u003e The script retrieves geospatial data for the desired bounding box from the Overpass API.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eParsing Raw Data:\u003c/strong\u003e The raw data is parsed to extract essential information like nodes, ways, and relations. Nodes are converted into Minecraft coordinates, and relations are handled similarly to ways, ensuring all relevant elements are processed correctly. Relations and ways cluster several nodes into one specific object.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePrioritizing and Sorting Elements:\u003c/strong\u003e The elements (nodes, ways, relations) are sorted by priority to establish a layering system, which ensures that certain types of elements (e.g., entrances and buildings) are generated in the correct order to avoid conflicts and overlapping structures.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eGenerating Minecraft World:\u003c/strong\u003e The Minecraft world is generated using a series of element processors (generate_buildings, generate_highways, generate_landuse, etc.) that interpret the tags and nodes of each element to place the appropriate blocks in the Minecraft world. These processors handle the logic for creating 3D structures, roads, natural formations, and more, as specified by the processed data.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eGenerating Ground Layer:\u003c/strong\u003e A ground layer is generated based on the provided scale factors to provide a base for the entire Minecraft world. This step ensures all areas have an appropriate foundation (e.g., grass and dirt layers).\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSaving the Minecraft World:\u003c/strong\u003e All the modified chunks are saved back to the Minecraft region files.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003e‚ùì FAQ\u003c/h2\u003e\u003ca id=\"user-content-question-faq\" aria-label=\"Permalink: :question: FAQ\" href=\"#question-faq\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003e\u003cem\u003eWasn\u0026#39;t this written in Python before?\u003c/em\u003e\u003cbr/\u003e\nYes! Arnis was initially developed in Python, which benefited from Python\u0026#39;s open-source friendliness and ease of readability. This is why we strive for clear, well-documented code in the Rust port of this project to find the right balance. I decided to port the project to Rust to learn more about the language and push the algorithm\u0026#39;s performance further. We were nearing the limits of optimization in Python, and Rust\u0026#39;s capabilities allow for even better performance and efficiency. The old Python implementation is still available in the python-legacy branch.\u003c/li\u003e\n\u003cli\u003e\u003cem\u003eWhere does the data come from?\u003c/em\u003e\u003cbr/\u003e\nThe geographic data is sourced from OpenStreetMap (OSM)\u003csup\u003e\u003ca href=\"#user-content-fn-1-490a32cb79039dddbec0ce2ba5a0250f\" id=\"user-content-fnref-1-490a32cb79039dddbec0ce2ba5a0250f\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\"\u003e1\u003c/a\u003e\u003c/sup\u003e, a free, collaborative mapping project that serves as an open-source alternative to commercial mapping services. The data is accessed via the Overpass API, which queries OSM\u0026#39;s database.\u003c/li\u003e\n\u003cli\u003e\u003cem\u003eHow does the Minecraft world generation work?\u003c/em\u003e\u003cbr/\u003e\nThe script uses the \u003ca href=\"https://github.com/owengage/fastnbt\"\u003efastnbt\u003c/a\u003e cargo package to interact with Minecraft\u0026#39;s world format. This library allows Arnis to manipulate Minecraft region files, enabling the generation of real-world locations.\u003c/li\u003e\n\u003cli\u003e\u003cem\u003eWhere does the name come from?\u003c/em\u003e\u003cbr/\u003e\nThe project is named after the smallest city in Germany, Arnis\u003csup\u003e\u003ca href=\"#user-content-fn-2-490a32cb79039dddbec0ce2ba5a0250f\" id=\"user-content-fnref-2-490a32cb79039dddbec0ce2ba5a0250f\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\"\u003e2\u003c/a\u003e\u003c/sup\u003e. The city\u0026#39;s small size made it an ideal test case for developing and debugging the algorithm efficiently.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eüìù ToDo and Known Bugs\u003c/h2\u003e\u003ca id=\"user-content-memo-todo-and-known-bugs\" aria-label=\"Permalink: :memo: ToDo and Known Bugs\" href=\"#memo-todo-and-known-bugs\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eFeel free to choose an item from the To-Do or Known Bugs list, or bring your own idea to the table. Bug reports shall be raised as a Github issue. Contributions are highly welcome and appreciated!\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e Mapping real coordinates to Minecraft coordinates (\u003ca data-error-text=\"Failed to load title\" data-id=\"2276630492\" data-permission-text=\"Title is private\" data-url=\"https://github.com/louis-e/arnis/issues/29\" data-hovercard-type=\"issue\" data-hovercard-url=\"/louis-e/arnis/issues/29/hovercard\" href=\"https://github.com/louis-e/arnis/issues/29\"\u003e#29\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003e Rotate maps (\u003ca data-error-text=\"Failed to load title\" data-id=\"2762253710\" data-permission-text=\"Title is private\" data-url=\"https://github.com/louis-e/arnis/issues/97\" data-hovercard-type=\"issue\" data-hovercard-url=\"/louis-e/arnis/issues/97/hovercard\" href=\"https://github.com/louis-e/arnis/issues/97\"\u003e#97\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003e Evaluate and implement elevation (\u003ca data-error-text=\"Failed to load title\" data-id=\"2540480972\" data-permission-text=\"Title is private\" data-url=\"https://github.com/louis-e/arnis/issues/66\" data-hovercard-type=\"issue\" data-hovercard-url=\"/louis-e/arnis/issues/66/hovercard\" href=\"https://github.com/louis-e/arnis/issues/66\"\u003e#66\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003e Fix Github Action Workflow for releasing Linux \u0026amp; MacOS Binary\u003c/li\u003e\n\u003cli\u003e Evaluate and implement faster region saving\u003c/li\u003e\n\u003cli\u003e Automatic new world creation instead of using an existing world\u003c/li\u003e\n\u003cli\u003e Implement house roof types\u003c/li\u003e\n\u003cli\u003e Refactor bridges implementation\u003c/li\u003e\n\u003cli\u003e Refactor railway implementation\u003c/li\u003e\n\u003cli\u003e Better code documentation\u003c/li\u003e\n\u003cli\u003e Refactor fountain structure implementation\u003c/li\u003e\n\u003cli\u003e Add interior to buildings\u003c/li\u003e\n\u003cli\u003e Memory optimization\u003c/li\u003e\n\u003cli\u003e Design and implement a GUI\u003c/li\u003e\n\u003cli\u003e Fix faulty empty chunks (\u003ca data-error-text=\"Failed to load title\" data-id=\"2490089253\" data-permission-text=\"Title is private\" data-url=\"https://github.com/owengage/fastnbt/issues/120\" data-hovercard-type=\"issue\" data-hovercard-url=\"/owengage/fastnbt/issues/120/hovercard\" href=\"https://github.com/owengage/fastnbt/issues/120\"\u003eowengage/fastnbt#120\u003c/a\u003e) (workaround found)\u003c/li\u003e\n\u003cli\u003e Setup fork of \u003ca href=\"https://github.com/aaronr/bboxfinder.com\"\u003ehttps://github.com/aaronr/bboxfinder.com\u003c/a\u003e for easy bbox picking\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eüèÜ Open Source\u003c/h2\u003e\u003ca id=\"user-content-trophy-open-source\" aria-label=\"Permalink: :trophy: Open Source\" href=\"#trophy-open-source\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch4 tabindex=\"-1\" dir=\"auto\"\u003eKey objectives of this project\u003c/h4\u003e\u003ca id=\"user-content-key-objectives-of-this-project\" aria-label=\"Permalink: Key objectives of this project\" href=\"#key-objectives-of-this-project\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003e\u003cstrong\u003eModularity\u003c/strong\u003e: Ensure that all components (e.g., data fetching, processing, and world generation) are cleanly separated into distinct modules for better maintainability and scalability.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePerformance Optimization\u003c/strong\u003e: Utilize Rust‚Äôs memory safety and concurrency features to optimize the performance of the world generation process.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eComprehensive Documentation\u003c/strong\u003e: Detailed in-code documentation for a clear structure and logic.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eUser-Friendly Experience\u003c/strong\u003e: Focus on making the project easy to use for end users.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eCross-Platform Support\u003c/strong\u003e: Ensure the project runs smoothly on Windows, macOS, and Linux.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch4 tabindex=\"-1\" dir=\"auto\"\u003eHow to contribute\u003c/h4\u003e\u003ca id=\"user-content-how-to-contribute\" aria-label=\"Permalink: How to contribute\" href=\"#how-to-contribute\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eThis project is open source and welcomes contributions from everyone! Whether you\u0026#39;re interested in fixing bugs, improving performance, adding new features, or enhancing documentation, your input is valuable. Simply fork the repository, make your changes, and submit a pull request. We encourage discussions and suggestions to ensure the project remains modular, optimized, and easy to use for the community. You can use the parameter --debug to get a more detailed output of the processed values, which can be helpful for debugging and development. Contributions of all levels are appreciated, and your efforts help improve this tool for everyone.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eBuild and run it using: \u003ccode\u003ecargo run --release -- --path=\u0026#34;C:/YOUR_PATH/.minecraft/saves/worldname\u0026#34; --bbox=\u0026#34;min_lng,min_lat,max_lng,max_lat\u0026#34;\u003c/code\u003e\u003cbr/\u003e\nFor the GUI: \u003ccode\u003ecargo run --release\u003c/code\u003e\u003cbr/\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eAfter your pull request was merged, I will take care of regularly creating update releases which will include your changes.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch4 tabindex=\"-1\" dir=\"auto\"\u003eContributors:\u003c/h4\u003e\u003ca id=\"user-content-contributors\" aria-label=\"Permalink: Contributors:\" href=\"#contributors\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eThis section is dedicated to recognizing and celebrating the outstanding contributions of individuals who have significantly enhanced this project. Your work and dedication are deeply appreciated!\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003elouis-e\u003c/li\u003e\n\u003cli\u003escd31\u003c/li\u003e\n\u003cli\u003evfosnar\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003e‚≠ê Star History\u003c/h2\u003e\u003ca id=\"user-content-star-star-history\" aria-label=\"Permalink: :star: Star History\" href=\"#star-star-history\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ca href=\"https://star-history.com/#louis-e/arnis\u0026amp;Date\" rel=\"nofollow\"\u003e\n \u003cthemed-picture data-catalyst-inline=\"true\"\u003e\u003cpicture\u003e\n   \u003csource media=\"(prefers-color-scheme: dark)\" srcset=\"https://camo.githubusercontent.com/c2318d7ea305c26e852cd7bf91f6f7e5961f72938768d4eb4cbe09a06accc884/68747470733a2f2f6170692e737461722d686973746f72792e636f6d2f7376673f7265706f733d6c6f7569732d652f61726e69732644617465267468656d653d6461726b\" data-canonical-src=\"https://api.star-history.com/svg?repos=louis-e/arnis\u0026amp;Date\u0026amp;theme=dark\"/\u003e\n   \u003csource media=\"(prefers-color-scheme: light)\" srcset=\"https://camo.githubusercontent.com/b3b679b7cd0e757d805e3410571db4e0622b03bbb48fffe49143a7edb23cc1fe/68747470733a2f2f6170692e737461722d686973746f72792e636f6d2f7376673f7265706f733d6c6f7569732d652f61726e6973264461746526747970653d44617465\" data-canonical-src=\"https://api.star-history.com/svg?repos=louis-e/arnis\u0026amp;Date\u0026amp;type=Date\"/\u003e\n   \u003cimg alt=\"Star History Chart\" src=\"https://camo.githubusercontent.com/b3b679b7cd0e757d805e3410571db4e0622b03bbb48fffe49143a7edb23cc1fe/68747470733a2f2f6170692e737461722d686973746f72792e636f6d2f7376673f7265706f733d6c6f7569732d652f61726e6973264461746526747970653d44617465\" data-canonical-src=\"https://api.star-history.com/svg?repos=louis-e/arnis\u0026amp;Date\u0026amp;type=Date\"/\u003e\n \u003c/picture\u003e\u003c/themed-picture\u003e\n\u003c/a\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003e¬©Ô∏è License Information\u003c/h2\u003e\u003ca id=\"user-content-copyright-license-information\" aria-label=\"Permalink: :copyright: License Information\" href=\"#copyright-license-information\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eThis project is licensed under the GNU General Public License v3.0 (GPL-3.0).\u003csup\u003e\u003ca href=\"#user-content-fn-3-490a32cb79039dddbec0ce2ba5a0250f\" id=\"user-content-fnref-3-490a32cb79039dddbec0ce2ba5a0250f\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\"\u003e3\u003c/a\u003e\u003c/sup\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eCopyright (c) 2022-2025 Louis Erbkamm (louis-e)\u003c/p\u003e\n\u003csection data-footnotes=\"\"\u003e\n\u003col dir=\"auto\"\u003e\n\u003cli id=\"user-content-fn-1-490a32cb79039dddbec0ce2ba5a0250f\"\u003e\n\u003cp dir=\"auto\"\u003e\u003ca href=\"https://en.wikipedia.org/wiki/OpenStreetMap\"\u003ehttps://en.wikipedia.org/wiki/OpenStreetMap\u003c/a\u003e \u003ca href=\"#user-content-fnref-1-490a32cb79039dddbec0ce2ba5a0250f\" data-footnote-backref=\"\" aria-label=\"Back to reference 1\"\u003e‚Ü©\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"user-content-fn-2-490a32cb79039dddbec0ce2ba5a0250f\"\u003e\n\u003cp dir=\"auto\"\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Arnis,_Germany\"\u003ehttps://en.wikipedia.org/wiki/Arnis,_Germany\u003c/a\u003e \u003ca href=\"#user-content-fnref-2-490a32cb79039dddbec0ce2ba5a0250f\" data-footnote-backref=\"\" aria-label=\"Back to reference 2\"\u003e‚Ü©\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"user-content-fn-3-490a32cb79039dddbec0ce2ba5a0250f\"\u003e\n\u003cp dir=\"auto\"\u003eThis program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\nFor the full license text, see the LICENSE file. \u003ca href=\"#user-content-fnref-3-490a32cb79039dddbec0ce2ba5a0250f\" data-footnote-backref=\"\" aria-label=\"Back to reference 3\"\u003e‚Ü©\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/section\u003e\n\u003c/article\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "9 min read",
  "publishedTime": null,
  "modifiedTime": null
}
