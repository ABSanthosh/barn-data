{
  "id": "4c69bc3d-54a7-49e0-ad35-cdc57394aa30",
  "title": "Openhaystack: Build 'AirTags' ‚Äì track Bluetooth devices via Apple's network",
  "link": "https://github.com/seemoo-lab/openhaystack",
  "description": "Comments",
  "author": "",
  "published": "Mon, 27 Jan 2025 00:11:27 +0000",
  "source": "https://news.ycombinator.com/rss",
  "categories": null,
  "byline": "seemoo-lab",
  "length": 9663,
  "excerpt": "Build your own 'AirTags' üè∑ today! Framework for tracking personal Bluetooth devices via Apple's massive Find My network. - seemoo-lab/openhaystack",
  "siteName": "GitHub",
  "favicon": "https://github.com/fluidicon.png",
  "text": "OpenHaystack OpenHaystack is a framework for tracking personal Bluetooth devices via Apple's massive Find My network. Use it to create your own tracking tags that you can append to physical objects (keyrings, backpacks, ...) or integrate it into other Bluetooth-capable devices such as notebooks. Table of contents What is OpenHaystack? History Disclaimer How to use OpenHaystack? System requirements Installation Usage How does Apple's Find My network work? Pairing Losing Finding Searching How to track other Bluetooth devices? OpenHaystack Mobile Authors References License What is OpenHaystack? OpenHaystack is an application that allows you to create your own accessories that are tracked by Apple's Find My network. All you need is a Mac and a BBC micro:bit or any other Bluetooth-capable device. By using the app, you can track your accessories anywhere on earth without cellular coverage. Nearby iPhones will discover your accessories and upload their location to Apple's servers when they have a network connection. History OpenHaystack is the result of reverse-engineering and security analysis work of Apple's Find My network (or offline finding). We at the Secure Mobile Networking Lab of TU Darmstadt started analyzing offline finding after its initial announcement in June 2019. We identified how Apple devices can be found by iPhones devices, even when they are offline through this work. The whole system is a clever combination of Bluetooth advertisements, public-key cryptography, and a central database of encrypted location reports. We disclosed a specification of the closed parts of offline finding and conducted a comprehensive security and privacy analysis. We found two distinct vulnerabilities. The most severe one, which allowed a malicious application to access location data, has meanwhile been fixed by Apple (CVE-2020-9986). For more information about the security analysis, please read our paper. Since its release, we received quite a bit of press and media coverage. Disclaimer OpenHaystack is experimental software. The code is untested and incomplete. For example, OpenHaystack accessories using our firmware broadcast a fixed public key and, therefore, are trackable by other devices in proximity (this might change in a future release). OpenHaystack is not affiliated with or endorsed by Apple Inc. How to use OpenHaystack? OpenHaystack consists of two components. First, we provide a macOS application that can display the last reported location of your personal Bluetooth devices. Second, the firmware image enables Bluetooth devices to broadcast beacons that make them discoverable by iPhones. System requirements OpenHaystack requires macOS 11 (Big Sur). Installation The OpenHaystack application requires a custom plugin for Apple Mail. It is used to download location reports from Apple's servers via a private API (technical explanation: the plugin inherits Apple Mail's entitlements required to use this API). Therefore, the installation procedure is slightly different and requires you to temporarily disable Gatekeeper. Our plugin does not access any other private data such as emails (see source code). Download a precompiled binary release from our GitHub page. Alternative: build the application from source via Xcode. Open OpenHaystack. This will ask you to install the Mail plugin in ~/Library/Mail/Bundle. Open a terminal and run sudo spctl --master-disable, which will disable Gatekeeper and allow our Apple Mail plugin to run. Open Apple Mail. Go to Preferences ‚Üí General ‚Üí Manage Plug-Ins... and activate the checkbox next to OpenHaystackMail.mailbundle. If the Manage Plug-Ins... button does not appear. Run this command in terminal sudo defaults write \"/Library/Preferences/com.apple.mail\" EnableBundles 1 Allow access and restart Mail. Open a terminal and enter sudo spctl --master-enable, which will enable Gatekeeper again. Usage Adding a new accessory. To create a new accessory, you just need to enter a name for it and optionally select a suitable icon and a color. The app then generates a new key pair that is used to encrypt and decrypt the location reports. The private key is stored in your Mac's keychain. Deploy to device. Connect a supported device via USB to your Mac and hit the Deploy button next to the accessory's name and choose the corresponding. Instead of using OpenHaystack's integrated deployment, you may also copy the public key used for advertising (right click on accessory) and deploy it manually. Display devices' locations. It can take up to 30 minutes until you will see the first location report on the map on the right side. The map will always show all your items' most recent locations. You can click on every item to check when the last update was received. By clicking the reload button, you can update the location reports. How does Apple's Find My network work? We briefly explain Apple's offline finding system (aka Find My network). Please refer to our PETS paper and Apple's accessory specification for more details. We provide a schematic overview (from our paper) and explain how we integrate the different steps in OpenHaystack below. Pairing (1) To use Apple's Find My network, we generate a public-private key pair on an elliptic curve (P-224). The private key remains on the Mac securely stored in the keychain, and the public key is deployed on the accessory, e.g., an attached micro:bit. Losing (2) In short, the accessories broadcast the public key as Bluetooth Low Energy (BLE) advertisements (see firmware). Nearby iPhones will not be able to distinguish our accessories from a genuine Apple device or certified accessory. Finding (3) When a nearby iPhone receives a BLE advertisement, the iPhone fetches its current location via GPS, encrypts it using public key from the advertisement, and uploads the encrypted report to Apple's server. All iPhones on iOS 13 or newer do this by default. OpenHaystack is not involved in this step. Searching (4) Apple does not know which encrypted locations belong to which Apple account or device. Therefore, every Apple user can download any location report as long as they know the corresponding public key. This is not a security issue: all reports are end-to-end encrypted and cannot be decrypted unless one knows the corresponding private key (stored in the keychain). We leverage this feature to download the reports from Apple that have been created for our OpenHaystack accessories. We use our private keys to decrypt the location reports and show the most recent one on the map. Apple protects their database against arbitrary access by requiring an authenticated Apple user to download location reports. We use our Apple Mail plugin, which runs with elevated privileges, to access the required authentication information. The OpenHaystack app communicates with the plugin while downloading reports. This is why you need to keep Mail open while using OpenHaystack. How to track other Bluetooth devices? In principle, any Bluetooth device can be turned into an OpenHaystack accessory that is trackable via Apple's Find My network. Currently, we provide a convenient deployment method of our OpenHaystack firmwares for a small number of embedded devices (see table below). We also support Linux devices via our generic HCI script. Feel free to port OpenHaystack to other devices that support Bluetooth Low Energy based on the source code of our firmware and the specification in our paper. Please share your results with us! Platform Tested on Deploy via app Comment Nordic nRF51 BBC micro:bit v1 ‚úì Only supports nRF51822 at this time (see issue #6). Espressif ESP32 SP32-WROOM, ESP32-WROVER ‚úì Deployment can take up to 3 minutes. Requires Python 3. Thanks @fhessel. Linux HCI Raspberry Pi 4 w/ Raspbian Should support any Linux machine. OpenHaystack Mobile OpenHaystack Mobile is a complete reimplementation of the OpenHaystack macOS application for smartphones. The app provides the same functionality to create and track accessories and aims to increase the usability, especially for new users. In contrast to the macOS application, the location reports cannot be fetched directly on the smartphone, so the app requires a proxy server hosted on Mac hardware to access the Find My network. The proxy server can be accessed over a network by multiple users simultaneously. To connect to your proxy server set the correct URL in: openhaystack-mobile/lib/findMy/reports_fetcher.dart OpenHaystack Mobile is built with the cross-platform Flutter framework and currently runs on Android and iOS. More information about the app and usage instructions can be found in the openhaystack-mobile folder of this repository. Authors Alexander Heinrich (@Sn0wfreezeDev, email) Milan Stute (@schmittner, email, web) References Alexander Heinrich, Milan Stute, Tim Kornhuber, Matthias Hollick. Who Can Find My Devices? Security and Privacy of Apple's Crowd-Sourced Bluetooth Location Tracking System. Proceedings on Privacy Enhancing Technologies (PoPETs), 2021. doi:10.2478/popets-2021-0045 üìÑ Paper üìÑ Preprint. Alexander Heinrich, Milan Stute, and Matthias Hollick. DEMO: OpenHaystack: A Framework for Tracking Personal Bluetooth Devices via Apple‚Äôs Massive Find My Network. 14th ACM Conference on Security and Privacy in Wireless and Mobile (WiSec ‚Äô21), 2021. Tim Kornhuber. Analysis of Apple's Crowd-Sourced Location Tracking System. Technical University of Darmstadt, Master's thesis, 2020. Apple Inc. Find My Network Accessory Specification ‚Äì Developer Preview ‚Äì Release R3. 2020. üìÑ Download. License OpenHaystack is licensed under the GNU Affero General Public License v3.0.",
  "image": "https://opengraph.githubassets.com/5cb7b399145941cc4d44541a9fbab603ac4d84ab41a2e39354aa64e10fff8ed1/seemoo-lab/openhaystack",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv data-hpc=\"true\"\u003e\u003carticle itemprop=\"text\"\u003e\u003cdiv dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003e\u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/seemoo-lab/openhaystack/blob/main/Resources/Icon/OpenHaystackIcon.png\"\u003e\u003cimg src=\"https://github.com/seemoo-lab/openhaystack/raw/main/Resources/Icon/OpenHaystackIcon.png\" alt=\"OpenHaystack application icon\" height=\"42\" width=\"42\"/\u003e\u003c/a\u003e OpenHaystack\u003c/h2\u003e\u003ca id=\"user-content--openhaystack\" aria-label=\"Permalink:  OpenHaystack\" href=\"#-openhaystack\"\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003eOpenHaystack is a framework for tracking personal Bluetooth devices via Apple\u0026#39;s massive Find My network. Use it to create your own tracking \u003cem\u003etags\u003c/em\u003e that you can append to physical objects (keyrings, backpacks, ...) or integrate it into other Bluetooth-capable devices such as notebooks.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/seemoo-lab/openhaystack/blob/main/Resources/OpenHaystack-Screenshot.png\"\u003e\u003cimg src=\"https://github.com/seemoo-lab/openhaystack/raw/main/Resources/OpenHaystack-Screenshot.png\" alt=\"Screenshot of the app\" width=\"701\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eTable of contents\u003c/h2\u003e\u003ca id=\"user-content-table-of-contents\" aria-label=\"Permalink: Table of contents\" href=\"#table-of-contents\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003e\u003ca href=\"#what-is-openhaystack\"\u003eWhat is \u003cem\u003eOpenHaystack\u003c/em\u003e?\u003c/a\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003e\u003ca href=\"#history\"\u003eHistory\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#disclaimer\"\u003eDisclaimer\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#how-to-use-openhaystack\"\u003eHow to use \u003cem\u003eOpenHaystack\u003c/em\u003e?\u003c/a\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003e\u003ca href=\"#system-requirements\"\u003eSystem requirements\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#installation\"\u003eInstallation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#usage\"\u003eUsage\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#how-does-apples-find-my-network-work\"\u003eHow does Apple\u0026#39;s Find My network work?\u003c/a\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003e\u003ca href=\"#pairing-1\"\u003ePairing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#losing-2\"\u003eLosing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#finding-3\"\u003eFinding\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#searching-4\"\u003eSearching\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#how-to-track-other-bluetooth-devices\"\u003eHow to track other Bluetooth devices?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#openhaystack-mobile\"\u003eOpenHaystack Mobile\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#authors\"\u003eAuthors\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#references\"\u003eReferences\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#license\"\u003eLicense\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eWhat is \u003cem\u003eOpenHaystack\u003c/em\u003e?\u003c/h2\u003e\u003ca id=\"user-content-what-is-openhaystack\" aria-label=\"Permalink: What is OpenHaystack?\" href=\"#what-is-openhaystack\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eOpenHaystack is an application that allows you to create your own accessories that are tracked by Apple\u0026#39;s \u003ca href=\"#how-does-apples-find-my-network-work\"\u003eFind My network\u003c/a\u003e. All you need is a Mac and a \u003ca href=\"https://microbit.org/\" rel=\"nofollow\"\u003eBBC micro:bit\u003c/a\u003e or any \u003ca href=\"#how-to-track-other-bluetooth-devices\"\u003eother Bluetooth-capable device\u003c/a\u003e.\nBy using the app, you can track your accessories anywhere on earth without cellular coverage. Nearby iPhones will discover your accessories and upload their location to Apple\u0026#39;s servers when they have a network connection.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003eHistory\u003c/h3\u003e\u003ca id=\"user-content-history\" aria-label=\"Permalink: History\" href=\"#history\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eOpenHaystack is the result of reverse-engineering and security analysis work of Apple\u0026#39;s \u003cem\u003eFind My network\u003c/em\u003e (or \u003cem\u003eoffline finding\u003c/em\u003e). We at the \u003ca href=\"https://seemoo.de\" rel=\"nofollow\"\u003eSecure Mobile Networking Lab\u003c/a\u003e of TU Darmstadt started analyzing offline finding after its initial announcement in June 2019. We identified how Apple devices can be found by iPhones devices, even when they are offline through this work. The whole system is a clever combination of Bluetooth advertisements, public-key cryptography, and a central database of encrypted location reports. We disclosed a specification of the closed parts of offline finding and conducted a comprehensive security and privacy analysis.\nWe found two distinct vulnerabilities. The most severe one, which allowed a malicious application to access location data, has meanwhile been fixed by Apple (\u003ca href=\"https://support.apple.com/en-us/HT211849\" rel=\"nofollow\"\u003eCVE-2020-9986\u003c/a\u003e).\nFor more information about the security analysis, please read \u003ca href=\"#references\"\u003eour paper\u003c/a\u003e.\nSince its release, we received quite a bit of \u003ca href=\"https://owlink.org/press/\" rel=\"nofollow\"\u003epress and media coverage\u003c/a\u003e.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003eDisclaimer\u003c/h3\u003e\u003ca id=\"user-content-disclaimer\" aria-label=\"Permalink: Disclaimer\" href=\"#disclaimer\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eOpenHaystack is experimental software. The code is untested and incomplete. For example, OpenHaystack accessories using our \u003ca href=\"https://github.com/seemoo-lab/openhaystack/blob/main/Firmware\"\u003efirmware\u003c/a\u003e broadcast a fixed public key and, therefore, are trackable by other devices in proximity (this might change in a future release). OpenHaystack is not affiliated with or endorsed by Apple Inc.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eHow to use \u003cem\u003eOpenHaystack\u003c/em\u003e?\u003c/h2\u003e\u003ca id=\"user-content-how-to-use-openhaystack\" aria-label=\"Permalink: How to use OpenHaystack?\" href=\"#how-to-use-openhaystack\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eOpenHaystack consists of two components. First, we provide a \u003ca href=\"https://github.com/seemoo-lab/openhaystack/blob/main/OpenHaystack\"\u003emacOS application\u003c/a\u003e that can display the last reported location of your personal Bluetooth devices. Second, the \u003ca href=\"https://github.com/seemoo-lab/openhaystack/blob/main/Firmware\"\u003efirmware image\u003c/a\u003e enables Bluetooth devices to broadcast beacons that make them discoverable by iPhones.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003eSystem requirements\u003c/h3\u003e\u003ca id=\"user-content-system-requirements\" aria-label=\"Permalink: System requirements\" href=\"#system-requirements\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eOpenHaystack requires macOS 11 (Big Sur).\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003eInstallation\u003c/h3\u003e\u003ca id=\"user-content-installation\" aria-label=\"Permalink: Installation\" href=\"#installation\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eThe OpenHaystack application requires a custom plugin for Apple Mail. It is used to download location reports from Apple\u0026#39;s servers via a private API (technical explanation: the plugin inherits Apple Mail\u0026#39;s entitlements required to use this API).\nTherefore, the installation procedure is slightly different and requires you to temporarily disable \u003ca href=\"https://support.apple.com/guide/security/gatekeeper-and-runtime-protection-sec5599b66df/1/web/1\" rel=\"nofollow\"\u003eGatekeeper\u003c/a\u003e.\nOur plugin does not access any other private data such as emails (see \u003ca href=\"https://github.com/seemoo-lab/openhaystack/blob/main/OpenHaystack/OpenHaystackMail\"\u003esource code\u003c/a\u003e).\u003c/p\u003e\n\u003col dir=\"auto\"\u003e\n\u003cli\u003eDownload a precompiled binary release from our \u003ca href=\"https://github.com/seemoo-lab/openhaystack/releases\"\u003eGitHub page\u003c/a\u003e.\u003cbr/\u003e\n\u003cem\u003eAlternative:\u003c/em\u003e build the application from source via Xcode.\u003c/li\u003e\n\u003cli\u003eOpen OpenHaystack. This will ask you to install the Mail plugin in \u003ccode\u003e~/Library/Mail/Bundle\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eOpen a terminal and run \u003ccode\u003esudo spctl --master-disable\u003c/code\u003e, which will disable Gatekeeper and allow our Apple Mail plugin to run.\u003c/li\u003e\n\u003cli\u003eOpen Apple Mail. Go to \u003cem\u003ePreferences\u003c/em\u003e ‚Üí \u003cem\u003eGeneral\u003c/em\u003e ‚Üí \u003cem\u003eManage Plug-Ins...\u003c/em\u003e and activate the checkbox next to \u003cem\u003eOpenHaystackMail.mailbundle\u003c/em\u003e.\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eIf the \u003cem\u003eManage Plug-Ins...\u003c/em\u003e button does not appear. Run this command in terminal \u003ccode\u003esudo defaults write \u0026#34;/Library/Preferences/com.apple.mail\u0026#34; EnableBundles 1\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAllow access and restart Mail.\u003c/li\u003e\n\u003cli\u003eOpen a terminal and enter \u003ccode\u003esudo spctl --master-enable\u003c/code\u003e, which will enable Gatekeeper again.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003eUsage\u003c/h3\u003e\u003ca id=\"user-content-usage\" aria-label=\"Permalink: Usage\" href=\"#usage\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003cstrong\u003eAdding a new accessory.\u003c/strong\u003e\nTo create a new accessory, you just need to enter a name for it and optionally select a suitable icon and a color. The app then generates a new key pair that is used to encrypt and decrypt the location reports. The private key is stored in your Mac\u0026#39;s keychain.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003cstrong\u003eDeploy to device.\u003c/strong\u003e\nConnect a \u003ca href=\"#how-to-track-other-bluetooth-devices\"\u003esupported device\u003c/a\u003e via USB to your Mac and hit the \u003cem\u003eDeploy\u003c/em\u003e button next to the accessory\u0026#39;s name and choose the corresponding.\nInstead of using OpenHaystack\u0026#39;s integrated deployment, you may also copy the public key used for advertising (right click on accessory) and deploy it manually.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003cstrong\u003eDisplay devices\u0026#39; locations.\u003c/strong\u003e\nIt can take up to 30 minutes until you will see the first location report on the map on the right side. The map will always show all your items\u0026#39; most recent locations. You can click on every item to check when the last update was received.\nBy clicking the reload button, you can update the location reports.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eHow does Apple\u0026#39;s Find My network work?\u003c/h2\u003e\u003ca id=\"user-content-how-does-apples-find-my-network-work\" aria-label=\"Permalink: How does Apple\u0026#39;s Find My network work?\" href=\"#how-does-apples-find-my-network-work\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eWe briefly explain Apple\u0026#39;s offline finding system (aka \u003ca href=\"https://developer.apple.com/find-my/\" rel=\"nofollow\"\u003e\u003cem\u003eFind My network\u003c/em\u003e\u003c/a\u003e). Please refer to our \u003ca href=\"#references\"\u003ePETS paper and Apple\u0026#39;s accessory specification\u003c/a\u003e for more details. We provide a schematic overview (from our paper) and explain how we integrate the different steps in OpenHaystack below.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/seemoo-lab/openhaystack/blob/main/Resources/FindMyOverview.png\"\u003e\u003cimg src=\"https://github.com/seemoo-lab/openhaystack/raw/main/Resources/FindMyOverview.png\" alt=\"Find My Overview\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003ePairing (1)\u003c/h3\u003e\u003ca id=\"user-content-pairing-1\" aria-label=\"Permalink: Pairing (1)\" href=\"#pairing-1\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eTo use Apple\u0026#39;s Find My network, we generate a public-private key pair on an elliptic curve (P-224). The private key remains on the Mac securely stored in the keychain, and the public key is deployed on the accessory, e.g., an attached micro:bit.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003eLosing (2)\u003c/h3\u003e\u003ca id=\"user-content-losing-2\" aria-label=\"Permalink: Losing (2)\" href=\"#losing-2\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eIn short, the accessories broadcast the public key as Bluetooth Low Energy (BLE) advertisements (see \u003ca href=\"https://github.com/seemoo-lab/openhaystack/blob/main/Firmware\"\u003efirmware\u003c/a\u003e).\nNearby iPhones will not be able to distinguish our accessories from a genuine Apple device or certified accessory.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003eFinding (3)\u003c/h3\u003e\u003ca id=\"user-content-finding-3\" aria-label=\"Permalink: Finding (3)\" href=\"#finding-3\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eWhen a nearby iPhone receives a BLE advertisement, the iPhone fetches its current location via GPS, encrypts it using public key from the advertisement, and uploads the encrypted report to Apple\u0026#39;s server.\nAll iPhones on iOS 13 or newer do this by default. OpenHaystack is not involved in this step.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003eSearching (4)\u003c/h3\u003e\u003ca id=\"user-content-searching-4\" aria-label=\"Permalink: Searching (4)\" href=\"#searching-4\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eApple does not know which encrypted locations belong to which Apple account or device. Therefore, every Apple user can download any location report as long as they know the corresponding public key. This is not a security issue: all reports are end-to-end encrypted and cannot be decrypted unless one knows the corresponding private key (stored in the keychain). We leverage this feature to download the reports from Apple that have been created for our OpenHaystack accessories. We use our private keys to decrypt the location reports and show the most recent one on the map.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eApple protects their database against arbitrary access by requiring an authenticated Apple user to download location reports.\nWe use our Apple Mail plugin, which runs with elevated privileges, to access the required authentication information. The OpenHaystack app communicates with the plugin while downloading reports. This is why you need to keep Mail open while using OpenHaystack.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eHow to track other Bluetooth devices?\u003c/h2\u003e\u003ca id=\"user-content-how-to-track-other-bluetooth-devices\" aria-label=\"Permalink: How to track other Bluetooth devices?\" href=\"#how-to-track-other-bluetooth-devices\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eIn principle, any Bluetooth device can be turned into an OpenHaystack accessory that is trackable via Apple\u0026#39;s Find My network.\nCurrently, we provide a convenient deployment method of our OpenHaystack firmwares for a small number of embedded devices (see table below). We also support Linux devices via our generic HCI script.\nFeel free to port OpenHaystack to other devices that support Bluetooth Low Energy based on the \u003ca href=\"https://github.com/seemoo-lab/openhaystack/blob/main/Firmware\"\u003esource code of our firmware\u003c/a\u003e and the specification in \u003ca href=\"#references\"\u003eour paper\u003c/a\u003e. Please share your results with us!\u003c/p\u003e\n\u003cmarkdown-accessiblity-table\u003e\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003ePlatform\u003c/th\u003e\n\u003cth\u003eTested on\u003c/th\u003e\n\u003cth\u003eDeploy via app\u003c/th\u003e\n\u003cth\u003eComment\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://github.com/seemoo-lab/openhaystack/blob/main/Firmware/Microbit_v1\"\u003eNordic nRF51\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eBBC micro:bit v1\u003c/td\u003e\n\u003ctd\u003e‚úì\u003c/td\u003e\n\u003ctd\u003eOnly supports nRF51822 at this time (see issue #6).\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://github.com/seemoo-lab/openhaystack/blob/main/Firmware/ESP32\"\u003eEspressif ESP32\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eSP32-WROOM, ESP32-WROVER\u003c/td\u003e\n\u003ctd\u003e‚úì\u003c/td\u003e\n\u003ctd\u003eDeployment can take up to 3 minutes. Requires Python 3. Thanks \u003cstrong\u003e@fhessel\u003c/strong\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://github.com/seemoo-lab/openhaystack/blob/main/Firmware/Linux_HCI\"\u003eLinux HCI\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eRaspberry Pi 4 w/ Raspbian\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003eShould support any Linux machine.\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\u003c/markdown-accessiblity-table\u003e\n\u003cp dir=\"auto\"\u003e\u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/seemoo-lab/openhaystack/blob/main/Resources/Setup.jpg\"\u003e\u003cimg src=\"https://github.com/seemoo-lab/openhaystack/raw/main/Resources/Setup.jpg\" alt=\"Setup\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eOpenHaystack Mobile\u003c/h2\u003e\u003ca id=\"user-content-openhaystack-mobile\" aria-label=\"Permalink: OpenHaystack Mobile\" href=\"#openhaystack-mobile\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eOpenHaystack Mobile is a complete reimplementation of the OpenHaystack macOS application for smartphones. The app provides the same functionality to create and track accessories and aims to increase the usability, especially for new users. In contrast to the macOS application, the location reports cannot be fetched directly on the smartphone, so the app requires a proxy server hosted on Mac hardware to access the Find My network. The proxy server can be accessed over a network by multiple users simultaneously.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eTo connect to your proxy server set the correct URL in: openhaystack-mobile/lib/findMy/reports_fetcher.dart\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/seemoo-lab/openhaystack/blob/main/Resources/mobile-map-view.png\"\u003e\u003cimg width=\"300\" src=\"https://github.com/seemoo-lab/openhaystack/raw/main/Resources/mobile-map-view.png\"/\u003e\u003c/a\u003e \u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/seemoo-lab/openhaystack/blob/main/Resources/mobile-accessory-history.png\"\u003e\u003cimg width=\"300\" src=\"https://github.com/seemoo-lab/openhaystack/raw/main/Resources/mobile-accessory-history.png\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eOpenHaystack Mobile is built with the cross-platform \u003ca href=\"https://flutter.dev/\" rel=\"nofollow\"\u003eFlutter framework\u003c/a\u003e and currently runs on Android and iOS. More information about the app and usage instructions can be found in the \u003ca href=\"https://github.com/seemoo-lab/openhaystack/blob/main/openhaystack-mobile\"\u003eopenhaystack-mobile\u003c/a\u003e folder of this repository.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eAuthors\u003c/h2\u003e\u003ca id=\"user-content-authors\" aria-label=\"Permalink: Authors\" href=\"#authors\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003e\u003cstrong\u003eAlexander Heinrich\u003c/strong\u003e (\u003ca href=\"https://github.com/Sn0wfreezeDev\"\u003e@Sn0wfreezeDev\u003c/a\u003e, \u003ca href=\"mailto:aheinrich@seemoo.tu-darmstadt.de\"\u003eemail\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eMilan Stute\u003c/strong\u003e (\u003ca href=\"https://github.com/schmittner\"\u003e@schmittner\u003c/a\u003e, \u003ca href=\"mailto:mstute@seemoo.tu-darmstadt.de\"\u003eemail\u003c/a\u003e, \u003ca href=\"https://seemoo.de/mstute\" rel=\"nofollow\"\u003eweb\u003c/a\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eReferences\u003c/h2\u003e\u003ca id=\"user-content-references\" aria-label=\"Permalink: References\" href=\"#references\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eAlexander Heinrich, Milan Stute, Tim Kornhuber, Matthias Hollick. \u003cstrong\u003eWho Can \u003cem\u003eFind My\u003c/em\u003e Devices? Security and Privacy of Apple\u0026#39;s Crowd-Sourced Bluetooth Location Tracking System.\u003c/strong\u003e \u003cem\u003eProceedings on Privacy Enhancing Technologies (PoPETs)\u003c/em\u003e, 2021. \u003ca href=\"https://doi.org/10.2478/popets-2021-0045\" rel=\"nofollow\"\u003edoi:10.2478/popets-2021-0045\u003c/a\u003e \u003ca href=\"https://www.petsymposium.org/2021/files/papers/issue3/popets-2021-0045.pdf\" rel=\"nofollow\"\u003eüìÑ Paper\u003c/a\u003e \u003ca href=\"https://arxiv.org/abs/2103.02282\" rel=\"nofollow\"\u003eüìÑ Preprint\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eAlexander Heinrich, Milan Stute, and Matthias Hollick. \u003cstrong\u003eDEMO: OpenHaystack: A Framework for Tracking Personal Bluetooth Devices via Apple‚Äôs Massive Find My Network.\u003c/strong\u003e \u003cem\u003e14th ACM Conference on Security and Privacy in Wireless and Mobile (WiSec ‚Äô21)\u003c/em\u003e, 2021.\u003c/li\u003e\n\u003cli\u003eTim Kornhuber. \u003cstrong\u003eAnalysis of Apple\u0026#39;s Crowd-Sourced Location Tracking System.\u003c/strong\u003e \u003cem\u003eTechnical University of Darmstadt\u003c/em\u003e, Master\u0026#39;s thesis, 2020.\u003c/li\u003e\n\u003cli\u003eApple Inc. \u003cstrong\u003eFind My Network Accessory Specification ‚Äì Developer Preview ‚Äì Release R3.\u003c/strong\u003e 2020. \u003ca href=\"https://developer.apple.com/find-my/\" rel=\"nofollow\"\u003eüìÑ Download\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eLicense\u003c/h2\u003e\u003ca id=\"user-content-license\" aria-label=\"Permalink: License\" href=\"#license\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eOpenHaystack is licensed under the \u003ca href=\"https://github.com/seemoo-lab/openhaystack/blob/main/LICENSE\"\u003e\u003cstrong\u003eGNU Affero General Public License v3.0\u003c/strong\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003c/article\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "11 min read",
  "publishedTime": null,
  "modifiedTime": null
}
