{
  "id": "2c7cb191-9074-4d17-b8a7-989c173ecfbc",
  "title": "Apple's Swift Coding Language Is Working On Android Support",
  "link": "https://apple.slashdot.org/story/25/06/26/2133212/apples-swift-coding-language-is-working-on-android-support?utm_source=rss1.0mainlinkanon\u0026utm_medium=feed",
  "description": "Apple's Swift programming language is expanding official support to Android through a new \"Android Working Group\" which will improve compatibility, integration, and tooling. \"As it stands today, Android apps are generally coded in Kotlin, but Apple is looking to provide its Swift coding language as an alternative,\" notes 9to5Google. \"Apple first launched its coding language back in 2014 with its own platforms in mind, but currently also supports Windows and Linux officially.\" From the report: A few of the key pillars the Working Group will look to accomplish include: - Improve and maintain Android support for the official Swift distribution, eliminating the need for out-of-tree or downstream patches - Recommend enhancements to core Swift packages such as Foundation and Dispatch to work better with Android idioms - Work with the Platform Steering Group to officially define platform support levels generally, and then work towards achieving official support of a particular level for Android - Determine the range of supported Android API levels and architectures for Swift integration - Develop continuous integration for the Swift project that includes Android testing in pull request checks. - Identify and recommend best practices for bridging between Swift and Android's Java SDK and packaging Swift libraries with Android apps - Develop support for debugging Swift applications on Android - Advise and assist with adding support for Android to various community Swift packages Read more of this story at Slashdot.",
  "author": "BeauHD",
  "published": "2025-06-27T00:20:00+00:00",
  "source": "http://rss.slashdot.org/Slashdot/slashdotMain",
  "categories": [
    "android"
  ],
  "byline": "",
  "length": 1496,
  "excerpt": "Apple's Swift programming language is expanding official support to Android through a new \"Android Working Group\" which will improve compatibility, integration, and tooling. \"As it stands today, Android apps are generally coded in Kotlin, but Apple is looking to provide its Swift coding language as ...",
  "siteName": "",
  "favicon": "",
  "text": "Apple's Swift programming language is expanding official support to Android through a new \"Android Working Group\" which will improve compatibility, integration, and tooling. \"As it stands today, Android apps are generally coded in Kotlin, but Apple is looking to provide its Swift coding language as an alternative,\" notes 9to5Google. \"Apple first launched its coding language back in 2014 with its own platforms in mind, but currently also supports Windows and Linux officially.\" From the report: A few of the key pillars the Working Group will look to accomplish include: - Improve and maintain Android support for the official Swift distribution, eliminating the need for out-of-tree or downstream patches - Recommend enhancements to core Swift packages such as Foundation and Dispatch to work better with Android idioms - Work with the Platform Steering Group to officially define platform support levels generally, and then work towards achieving official support of a particular level for Android - Determine the range of supported Android API levels and architectures for Swift integration - Develop continuous integration for the Swift project that includes Android testing in pull request checks. - Identify and recommend best practices for bridging between Swift and Android's Java SDK and packaging Swift libraries with Android apps - Develop support for debugging Swift applications on Android - Advise and assist with adding support for Android to various community Swift packages",
  "image": "https://a.fsdn.com/sd/topics/android_64.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"fhbody-178197084\"\u003e\n\t\n\t\t\n\t\n\n\t\n\t\t\n\t\t\u003cp\u003e\n\t\t\t\n\t\t \t\n\t\t\t\tApple\u0026#39;s Swift programming language is \u003ca href=\"https://9to5google.com/2025/06/26/swift-coding-language-android-support/\"\u003eexpanding official support to Android\u003c/a\u003e through a new \u0026#34;\u003ca href=\"https://forums.swift.org/t/announcing-the-android-workgroup/80666\"\u003eAndroid Working Group\u003c/a\u003e\u0026#34; which will improve compatibility, integration, and tooling. \u0026#34;As it stands today, Android apps are generally coded in Kotlin, but Apple is looking to provide its Swift coding language as an alternative,\u0026#34; notes 9to5Google. \u0026#34;Apple first launched its coding language back in 2014 with its own platforms in mind, but currently also supports Windows and Linux officially.\u0026#34; From the report: \u003ci\u003e A few of the key pillars the Working Group will look to accomplish include:\n\u003cp\u003e \n- Improve and maintain Android support for the official Swift distribution, eliminating the need for out-of-tree or downstream patches\u003cbr/\u003e\n- Recommend enhancements to core Swift packages such as Foundation and Dispatch to work better with Android idioms\u003cbr/\u003e\n- Work with the Platform Steering Group to officially define platform support levels generally, and then work towards achieving official support of a particular level for Android\u003cbr/\u003e\n- Determine the range of supported Android API levels and architectures for Swift integration\u003cbr/\u003e\n- Develop continuous integration for the Swift project that includes Android testing in pull request checks.\u003cbr/\u003e\n- Identify and recommend best practices for bridging between Swift and Android\u0026#39;s Java SDK and packaging Swift libraries with Android apps\u003cbr/\u003e\n- Develop support for debugging Swift applications on Android\u003cbr/\u003e\n- Advise and assist with adding support for Android to various community Swift packages \u003c/p\u003e\u003c/i\u003e\u003cbr/\u003e\n\t\t \t\n\t\t\u003c/p\u003e\n\n\t\t\n\n\t\t\n\n\t\t\n\t\t\t\n\t\t\n\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": null,
  "modifiedTime": null
}
