{
  "id": "a8f2ff4f-dc03-4ef9-be65-3ae8cb82a3f5",
  "title": "'Landrun': Lightweight Linux Sandboxing With Landlock, No Root Required",
  "link": "https://linux.slashdot.org/story/25/04/05/217212/landrun-lightweight-linux-sandboxing-with-landlock-no-root-required?utm_source=rss1.0mainlinkanon\u0026utm_medium=feed",
  "description": "Over on Reddit's \"selfhosted\" subreddit for alternatives to popular services, long-time Slashdot reader Zoup described a pain point: - Landlock is a Linux Security Module (LSM) that lets unprivileged processes restrict themselves. - It's been in the kernel since 5.13, but the API is awkward to use directly. - It always annoyed the hell out of me to run random binaries from the internet without any real control over what they can access. So they've rolled their own solution, according to Thursday's submission to Slashdot: I just released Landrun, a Go-based CLI tool that wraps Linux Landlock (5.13+) to sandbox any process without root, containers, or seccomp. Think firejail, but minimal and kernel-native. Supports fine-grained file access (ro/rw/exec) and TCP port restrictions (6.7+). No daemons, no YAML, just flags. Example (where --rox allows read-only access with execution to specified path): # landrun --rox /usr touch /tmp/filetouch: cannot touch '/tmp/file': Permission denied# landrun --rox /usr --rw /tmp touch /tmp/file# It's MIT-licensed, easy to audit, and now supports systemd services. Read more of this story at Slashdot.",
  "author": "EditorDavid",
  "published": "2025-04-05T21:34:00+00:00",
  "source": "http://rss.slashdot.org/Slashdot/slashdotMain",
  "categories": [
    "opensource"
  ],
  "byline": "",
  "length": 1122,
  "excerpt": "Over on Reddit's \"selfhosted\" subreddit for alternatives to popular services, long-time Slashdot reader Zoup described a pain point: - Landlock is a Linux Security Module (LSM) that lets unprivileged processes restrict themselves. - It's been in the kernel since 5.13, but the API is awkward to u...",
  "siteName": "",
  "favicon": "",
  "text": "Over on Reddit's \"selfhosted\" subreddit for alternatives to popular services, long-time Slashdot reader Zoup described a pain point: - Landlock is a Linux Security Module (LSM) that lets unprivileged processes restrict themselves. - It's been in the kernel since 5.13, but the API is awkward to use directly. - It always annoyed the hell out of me to run random binaries from the internet without any real control over what they can access. So they've rolled their own solution, according to Thursday's submission to Slashdot: I just released Landrun, a Go-based CLI tool that wraps Linux Landlock (5.13+) to sandbox any process without root, containers, or seccomp. Think firejail, but minimal and kernel-native. Supports fine-grained file access (ro/rw/exec) and TCP port restrictions (6.7+). No daemons, no YAML, just flags. Example (where --rox allows read-only access with execution to specified path): # landrun --rox /usr touch /tmp/filetouch: cannot touch '/tmp/file': Permission denied# landrun --rox /usr --rw /tmp touch /tmp/file# It's MIT-licensed, easy to audit, and now supports systemd services.",
  "image": "https://a.fsdn.com/sd/topics/opensource_64.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"fhbody-176937437\"\u003e\u003cp\u003e\n\t\t\t\n\t\t \t\n\t\t\t\tOver on Reddit\u0026#39;s \u0026#34;selfhosted\u0026#34; subreddit for alternatives to popular services, long-time Slashdot reader \u003ca href=\"https://www.slashdot.org/~Zoup\"\u003eZoup\u003c/a\u003e described \u003ca href=\"https://www.reddit.com/r/selfhosted/comments/1jh8pnd/i_built_a_cli_tool_to_sandbox_linux_processes/\"\u003ea pain point\u003c/a\u003e:\u003c/p\u003e\u003cp\u003e \n\n\u003cem\u003e- Landlock is a Linux Security Module (LSM) that lets unprivileged processes restrict themselves.\u003cp\u003e \n\n- It\u0026#39;s been in the kernel since 5.13, but the API is awkward to use directly.\u003c/p\u003e\u003cp\u003e \n\n- It always annoyed the hell out of me to run random binaries from the internet without any real control over what they can access.\u003c/p\u003e\u003c/em\u003e\u003c/p\u003e\u003cp\u003e \n\nSo they\u0026#39;ve rolled their own solution, according to Thursday\u0026#39;s \u003ca href=\"https://slashdot.org/submission/17334889/landrun-lightweight-linux-sandboxing-with-landlock-no-root-required\"\u003esubmission to Slashdot\u003c/a\u003e:\n\n\n\u003ci\u003eI just \u003ca href=\"https://github.com/zouuup/landrun\"\u003ereleased Landrun\u003c/a\u003e, a Go-based CLI tool that wraps Linux Landlock (5.13+) to sandbox any process without root, containers, or seccomp. Think firejail, but minimal and kernel-native. Supports fine-grained file access (ro/rw/exec) and TCP port restrictions (6.7+). No daemons, no YAML, just flags.\u003cp\u003e\n\nExample (where \u003cem\u003e--rox\u003c/em\u003e allows read-only access with execution to specified path):\u003c/p\u003e\u003ctt\u003e \u003cbr/\u003e# landrun --rox /usr touch /tmp/file\u003cbr/\u003etouch: cannot touch \u0026#39;/tmp/file\u0026#39;: Permission denied\u003cbr/\u003e# landrun --rox /usr --rw /tmp touch /tmp/file\u003cbr/\u003e#\u003c/tt\u003e\n\nIt\u0026#39;s MIT-licensed, easy to audit, and now supports systemd services.\u003c/i\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": null,
  "modifiedTime": null
}
