{
  "id": "1d90b6eb-0a10-41e0-bb39-6d9f8cb301d7",
  "title": "SwiftUI Picker With Optional Selection",
  "link": "https://useyourloaf.com/blog/swiftui-picker-with-optional-selection/",
  "description": "How do you create a SwiftUI picker that works with optional selection so that not picking a value is possible? SwiftUI Picker A SwiftUI picker expects a binding to a selection. For example, suppose I have a project model that is Identifiable: struct Project: Identifiable { let id = UUID() var name: String ... } To pick a single project from a store of projects: struct ProjectPicker: View { @Binding var project: Project.ID @Environment(ProjectStore.self) private var store var body: some View { Picker(selection: $project) { ForEach(store.projects) { project in Text(project.name) } } label: { Text(\"Project\") } } } The ForEach automatically applies a tag to each Text view using the id of the project. Selecting an item in the picker sets the pickers binding to the identifier of the item. Here’s how that looks when part of a Form to create an item in a project: Optional Selection Sometimes I need a picker to work with an optional binding. Either because I don’t yet have a selection or because not selecting an item is also a valid choice: struct ProjectPicker: View { @Binding var project: Project.ID? ... } Apple provides an example on how to make this work in the documentation for the tag modifier. We need to manually tag each of the picker views with an optional identifier matching the optional type of the picker selection. The tag modifier has a parameter to indicate you want to make it optional: Text(project.name) .tag(project.id, includeOptional: true) Since the includeOptional parameter defaults to true it’s enough to tag the views: Text(project.name) .tag(project.id) Finally, we can also include a None option for when no project is selected. Note we need to cast nil as an optional project ID: Text(\"None\") .tag(nil as Project.ID?) The full project picker with optional selection: struct ProjectPicker: View { @Binding var project: Project.ID? @Environment(ProjectStore.self) private var store var body: some View { Picker(selection: $project) { Text(\"None\") .tag(nil as Project.ID?) ForEach(store.projects) { project in Text(project.name) .tag(project.id) } } label: { Text(\"Project\") } } } SwiftUI Picker With Optional Selection was originally posted 12 May 2025 on useyourloaf.com. WWDC25 Sale! Save 20% off Modern Auto Layout",
  "author": "",
  "published": "Mon, 12 May 2025 11:02:38 +0100",
  "source": "https://useyourloaf.com/blog/rss.xml",
  "categories": null,
  "byline": "",
  "length": 2257,
  "excerpt": "Creating a SwiftUI picker that works with optional selection.",
  "siteName": "Use Your Loaf - iOS Development News \u0026 Tips",
  "favicon": "https://useyourloaf.com/apple-touch-icon.png",
  "text": "How do you create a SwiftUI picker that works with optional selection so that not picking a value is possible? SwiftUI Picker A SwiftUI picker expects a binding to a selection. For example, suppose I have a project model that is Identifiable: struct Project: Identifiable { let id = UUID() var name: String ... } To pick a single project from a store of projects: struct ProjectPicker: View { @Binding var project: Project.ID @Environment(ProjectStore.self) private var store var body: some View { Picker(selection: $project) { ForEach(store.projects) { project in Text(project.name) } } label: { Text(\"Project\") } } } The ForEach automatically applies a tag to each Text view using the id of the project. Selecting an item in the picker sets the pickers binding to the identifier of the item. Here’s how that looks when part of a Form to create an item in a project: Optional Selection Sometimes I need a picker to work with an optional binding. Either because I don’t yet have a selection or because not selecting an item is also a valid choice: struct ProjectPicker: View { @Binding var project: Project.ID? ... } Apple provides an example on how to make this work in the documentation for the tag modifier. We need to manually tag each of the picker views with an optional identifier matching the optional type of the picker selection. The tag modifier has a parameter to indicate you want to make it optional: Text(project.name) .tag(project.id, includeOptional: true) Since the includeOptional parameter defaults to true it’s enough to tag the views: Text(project.name) .tag(project.id) Finally, we can also include a None option for when no project is selected. Note we need to cast nil as an optional project ID: Text(\"None\") .tag(nil as Project.ID?) The full project picker with optional selection: struct ProjectPicker: View { @Binding var project: Project.ID? @Environment(ProjectStore.self) private var store var body: some View { Picker(selection: $project) { Text(\"None\") .tag(nil as Project.ID?) ForEach(store.projects) { project in Text(project.name) .tag(project.id) } } label: { Text(\"Project\") } } }",
  "image": "https://useyourloaf.com/blog/swiftui-picker-with-optional-selection/cover.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\u003cp\u003eHow do you create a SwiftUI picker that works with optional selection so that not picking a value is possible?\u003c/p\u003e\n\u003ch3 id=\"swiftui-picker\"\u003eSwiftUI Picker\u003c/h3\u003e\n\u003cp\u003eA SwiftUI picker expects a binding to a selection. For example, suppose I have a project model that is \u003ccode\u003eIdentifiable\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode data-lang=\"swift\"\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003estruct\u003c/span\u003e \u003cspan\u003eProject\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eIdentifiable\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003elet\u003c/span\u003e \u003cspan\u003eid\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eUUID\u003c/span\u003e\u003cspan\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003evar\u003c/span\u003e \u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTo pick a single project from a store of projects:\u003c/p\u003e\n\u003cdiv\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode data-lang=\"swift\"\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003estruct\u003c/span\u003e \u003cspan\u003eProjectPicker\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eView\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003e@\u003c/span\u003e\u003cspan\u003eBinding\u003c/span\u003e \u003cspan\u003evar\u003c/span\u003e \u003cspan\u003eproject\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eProject\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eID\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003e@\u003c/span\u003e\u003cspan\u003eEnvironment\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eProjectStore\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eself\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003evar\u003c/span\u003e \u003cspan\u003estore\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003evar\u003c/span\u003e \u003cspan\u003ebody\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003esome\u003c/span\u003e \u003cspan\u003eView\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e    \u003cspan\u003ePicker\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eselection\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e$\u003c/span\u003e\u003cspan\u003eproject\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e      \u003cspan\u003eForEach\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003estore\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eprojects\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e \u003cspan\u003eproject\u003c/span\u003e \u003cspan\u003ein\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e        \u003cspan\u003eText\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eproject\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e      \u003cspan\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e    \u003cspan\u003e}\u003c/span\u003e \u003cspan\u003elabel\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e      \u003cspan\u003eText\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;Project\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e    \u003cspan\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe \u003ccode\u003eForEach\u003c/code\u003e automatically applies a tag to each Text view using the \u003ccode\u003eid\u003c/code\u003e of the project. Selecting an item in the picker sets the pickers binding to the identifier of the item. Here’s how that looks when part of a \u003ccode\u003eForm\u003c/code\u003e to create an item in a project:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://useyourloaf.com/blog/swiftui-picker-with-optional-selection/001.png\" alt=\"Project picker with three items named one, two, three. Two is selected\" width=\"350\" height=\"284\" srcset=\"https://useyourloaf.com/blog/swiftui-picker-with-optional-selection/001@2x.png 2x\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"optional-selection\"\u003eOptional Selection\u003c/h3\u003e\n\u003cp\u003eSometimes I need a picker to work with an optional binding. Either because I don’t yet have a selection or because not selecting an item is also a valid choice:\u003c/p\u003e\n\u003cdiv\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode data-lang=\"swift\"\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003estruct\u003c/span\u003e \u003cspan\u003eProjectPicker\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eView\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003e@\u003c/span\u003e\u003cspan\u003eBinding\u003c/span\u003e \u003cspan\u003evar\u003c/span\u003e \u003cspan\u003eproject\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eProject\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eID\u003c/span\u003e\u003cspan\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eApple provides an example on how to make this work in the documentation for the \u003ca href=\"https://developer.apple.com/documentation/swiftui/view/tag(_:includeoptional:)\"\u003etag modifier\u003c/a\u003e. We need to manually tag each of the picker views with an optional identifier matching the optional type of the picker selection. The \u003ccode\u003etag\u003c/code\u003e modifier has a parameter to indicate you want to make it optional:\u003c/p\u003e\n\u003cdiv\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode data-lang=\"swift\"\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003eText\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eproject\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etag\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eproject\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eid\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003eincludeOptional\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003etrue\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSince the \u003ccode\u003eincludeOptional\u003c/code\u003e parameter defaults to \u003ccode\u003etrue\u003c/code\u003e it’s enough to tag the views:\u003c/p\u003e\n\u003cdiv\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode data-lang=\"swift\"\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003eText\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eproject\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etag\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eproject\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eid\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eFinally, we can also include a \u003ccode\u003eNone\u003c/code\u003e option for when no project is selected. Note we need to cast \u003ccode\u003enil\u003c/code\u003e as an optional project ID:\u003c/p\u003e\n\u003cdiv\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode data-lang=\"swift\"\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003eText\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;None\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etag\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003enil\u003c/span\u003e \u003cspan\u003eas\u003c/span\u003e \u003cspan\u003eProject\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eID\u003c/span\u003e\u003cspan\u003e?)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe full project picker with optional selection:\u003c/p\u003e\n\u003cdiv\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode data-lang=\"swift\"\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003estruct\u003c/span\u003e \u003cspan\u003eProjectPicker\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eView\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003e@\u003c/span\u003e\u003cspan\u003eBinding\u003c/span\u003e \u003cspan\u003evar\u003c/span\u003e \u003cspan\u003eproject\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eProject\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eID\u003c/span\u003e\u003cspan\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003e@\u003c/span\u003e\u003cspan\u003eEnvironment\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eProjectStore\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eself\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003evar\u003c/span\u003e \u003cspan\u003estore\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003evar\u003c/span\u003e \u003cspan\u003ebody\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003esome\u003c/span\u003e \u003cspan\u003eView\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e    \u003cspan\u003ePicker\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eselection\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e$\u003c/span\u003e\u003cspan\u003eproject\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e      \u003cspan\u003eText\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;None\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e        \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etag\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003enil\u003c/span\u003e \u003cspan\u003eas\u003c/span\u003e \u003cspan\u003eProject\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eID\u003c/span\u003e\u003cspan\u003e?)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e      \u003cspan\u003eForEach\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003estore\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eprojects\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e \u003cspan\u003eproject\u003c/span\u003e \u003cspan\u003ein\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e        \u003cspan\u003eText\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eproject\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e          \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etag\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eproject\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eid\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e      \u003cspan\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e    \u003cspan\u003e}\u003c/span\u003e \u003cspan\u003elabel\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e      \u003cspan\u003eText\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;Project\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e    \u003cspan\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e  \u003cspan\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://useyourloaf.com/blog/swiftui-picker-with-optional-selection/002.png\" alt=\"Picker with four options, none (selected), one, two, three\" width=\"350\" height=\"284\" srcset=\"https://useyourloaf.com/blog/swiftui-picker-with-optional-selection/002@2x.png 2x\"/\u003e\u003c/p\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": "2025-05-12T11:02:38+01:00",
  "modifiedTime": "2025-05-12T16:52:53+01:00"
}
