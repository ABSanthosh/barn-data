{
  "id": "429696fb-1ebe-470c-8128-26762eb77ad2",
  "title": "Swift 6 suitable notification observers in iOS",
  "link": "https://augmentedcode.io/2024/11/18/swift-6-friendlier-notification-observers/",
  "description": "The author discusses challenges managing side projects, specifically updating SignalPath to Swift 6. They encountered errors related to multiple notification observations but resolved them by shifting to publishers, avoiding sendable closure issues. Although the new approach risks background thread notifications, the compiler is satisfied with the adjustments made to the code.",
  "author": "Toomas Vahter",
  "published": "Mon, 18 Nov 2024 16:00:00 +0000",
  "source": "https://augmentedcode.io/feed/",
  "categories": [
    "iOS",
    "Swift"
  ],
  "byline": "",
  "length": 4611,
  "excerpt": "The author discusses challenges managing side projects, specifically updating SignalPath to Swift 6. They encountered errors related to multiple notification observations but resolved them by shift…",
  "siteName": "Augmented Code",
  "favicon": "https://augmentedcode.io/wp-content/uploads/2017/11/site-icon.png?w=192",
  "text": "I have a couple of side projects going on, although it is always a challenge to find time of them. One of them, SignalPath, is what I created back in 2015. Currently, I have been spending some time to bump the Swift version to 6 which brought a quite a list of errors. In many places I had code what dealt with observing multiple notifications, but of course Swift 6 was not happy about it. This file contains hidden or bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters let handler: (Notification) -\u003e Void = { [weak self] notification in self?.keyboardInfo = Info(notification: notification) } let names: [Notification.Name] = [ UIResponder.keyboardWillShowNotification, UIResponder.keyboardWillHideNotification, UIResponder.keyboardWillChangeFrameNotification ] observers = names.map({ name -\u003e NSObjectProtocol in return NotificationCenter.default.addObserver(forName: name, object: nil, queue: .main, using: handler) // Converting non-sendable function value to '@Sendable (Notification) -\u003e Void' may introduce data races }) After moving all of the notification observing to publishers instead, I can ignore the whole sendable closure problem all together. This file contains hidden or bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters Publishers.Merge3( NotificationCenter.default.publisher(for: UIResponder.keyboardWillShowNotification), NotificationCenter.default.publisher(for: UIResponder.keyboardWillHideNotification), NotificationCenter.default.publisher(for: UIResponder.keyboardWillChangeFrameNotification) ) .map(Info.init) .assignWeakly(to: \\.keyboardInfo, on: self) .store(in: \u0026notificationCancellables) Great, compiler is happy again although this code could cause trouble if any of the notifications are posted from a background thread. But since this is not a case here, I went for skipping .receive(on: DispatchQueue.main). Assign weakly is a custom operator and the implementation looks like this: This file contains hidden or bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters public extension Publisher where Self.Failure == Never { func assignWeakly\u003cRoot\u003e(to keyPath: ReferenceWritableKeyPath\u003cRoot, Self.Output\u003e, on object: Root) -\u003e AnyCancellable where Root: AnyObject { return sink { [weak object] value in object?[keyPath: keyPath] = value } } } If this was helpful, please let me know on Mastodon@toomasvahter or Twitter @toomasvahter. Feel free to subscribe to RSS feed. Thank you for reading. Tags iOS, Swift",
  "image": "https://augmentedcode.io/wp-content/uploads/2017/11/site-icon.png?w=200",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"site-content\" role=\"main\"\u003e\n\n\t\n\u003carticle id=\"post-3806\"\u003e\n\n\t\n\n\n\t\u003cdiv\u003e\n\n\t\t\t\n\u003cp\u003eI have a couple of side projects going on, although it is always a challenge to find time of them. One of them, SignalPath, is what I created back in 2015. Currently, I have been spending some time to bump the Swift version to 6 which brought a quite a list of errors. In many places I had code what dealt with observing multiple notifications, but of course Swift 6 was not happy about it.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cdiv itemprop=\"text\" tabindex=\"0\" role=\"region\" aria-label=\"Observer.swift content, created by laevandus on 07:30PM on November 17, 2024.\" id=\"gist134198224\" translate=\"no\" data-color-mode=\"light\" data-light-theme=\"light\"\u003e\n\n  \u003ctemplate\u003e\n  \u003cdiv data-view-component=\"true\"\u003e\n  \n    \u003cp\u003e\u003cspan\u003e\n      This file contains hidden or bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters.\n      \u003ca href=\"https://github.co/hiddenchars\" target=\"_blank\"\u003eLearn more about bidirectional Unicode characters\u003c/a\u003e\n    \u003c/span\u003e\u003c/p\u003e\n\u003c/div\u003e\u003c/template\u003e\n\u003ctemplate\u003e\n  \u003cspan aria-label=\"This line has hidden Unicode characters\" data-view-component=\"true\"\u003e\n    \n\u003c/span\u003e\u003c/template\u003e\n\n  \u003ctable data-hpc=\"\" data-tab-size=\"8\" data-paste-markdown-skip=\"\" data-tagsearch-path=\"Observer.swift\"\u003e\n        \u003ctbody\u003e\u003ctr\u003e\n          \u003ctd id=\"file-observer-swift-L1\" data-line-number=\"1\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-observer-swift-LC1\"\u003elet handler: (Notification) -\u0026gt; Void = { [weak self] notification in\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-observer-swift-L2\" data-line-number=\"2\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-observer-swift-LC2\"\u003e  self?.keyboardInfo = Info(notification: notification)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-observer-swift-L3\" data-line-number=\"3\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-observer-swift-LC3\"\u003e}\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-observer-swift-L4\" data-line-number=\"4\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-observer-swift-LC4\"\u003elet names: [Notification.Name] = [\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-observer-swift-L5\" data-line-number=\"5\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-observer-swift-LC5\"\u003e  UIResponder.keyboardWillShowNotification,\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-observer-swift-L6\" data-line-number=\"6\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-observer-swift-LC6\"\u003e  UIResponder.keyboardWillHideNotification,\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-observer-swift-L7\" data-line-number=\"7\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-observer-swift-LC7\"\u003e  UIResponder.keyboardWillChangeFrameNotification\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-observer-swift-L8\" data-line-number=\"8\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-observer-swift-LC8\"\u003e]\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-observer-swift-L9\" data-line-number=\"9\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-observer-swift-LC9\"\u003eobservers = names.map({ name -\u0026gt; NSObjectProtocol in\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-observer-swift-L10\" data-line-number=\"10\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-observer-swift-LC10\"\u003e  return NotificationCenter.default.addObserver(forName: name,\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-observer-swift-L11\" data-line-number=\"11\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-observer-swift-LC11\"\u003e                                                 object: nil,\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-observer-swift-L12\" data-line-number=\"12\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-observer-swift-LC12\"\u003e                                                  queue: .main,\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-observer-swift-L13\" data-line-number=\"13\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-observer-swift-LC13\"\u003e                                                  using: handler)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-observer-swift-L14\" data-line-number=\"14\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-observer-swift-LC14\"\u003e  // Converting non-sendable function value to \u0026#39;@Sendable (Notification) -\u0026gt; Void\u0026#39; may introduce data races\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-observer-swift-L15\" data-line-number=\"15\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-observer-swift-LC15\"\u003e})\u003c/td\u003e\n        \u003c/tr\u003e\n  \u003c/tbody\u003e\u003c/table\u003e\n\u003c/div\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eAfter moving all of the notification observing to publishers instead, I can ignore the whole sendable closure problem all together.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cdiv itemprop=\"text\" tabindex=\"0\" role=\"region\" aria-label=\"Observer.swift content, created by laevandus on 07:34PM on November 17, 2024.\" id=\"gist134198289\" translate=\"no\" data-color-mode=\"light\" data-light-theme=\"light\"\u003e\n\n  \u003ctemplate\u003e\n  \u003cdiv data-view-component=\"true\"\u003e\n  \n    \u003cp\u003e\u003cspan\u003e\n      This file contains hidden or bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters.\n      \u003ca href=\"https://github.co/hiddenchars\" target=\"_blank\"\u003eLearn more about bidirectional Unicode characters\u003c/a\u003e\n    \u003c/span\u003e\u003c/p\u003e\n\u003c/div\u003e\u003c/template\u003e\n\u003ctemplate\u003e\n  \u003cspan aria-label=\"This line has hidden Unicode characters\" data-view-component=\"true\"\u003e\n    \n\u003c/span\u003e\u003c/template\u003e\n\n  \u003ctable data-hpc=\"\" data-tab-size=\"8\" data-paste-markdown-skip=\"\" data-tagsearch-path=\"Observer.swift\"\u003e\n        \u003ctbody\u003e\u003ctr\u003e\n          \u003ctd id=\"file-observer-swift-L1\" data-line-number=\"1\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-observer-swift-LC1\"\u003e\u003cspan\u003ePublishers\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eMerge3\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-observer-swift-L2\" data-line-number=\"2\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-observer-swift-LC2\"\u003e  \u003cspan\u003eNotificationCenter\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003edefault\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003epublisher\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003efor\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eUIResponder\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003ekeyboardWillShowNotification\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-observer-swift-L3\" data-line-number=\"3\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-observer-swift-LC3\"\u003e  \u003cspan\u003eNotificationCenter\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003edefault\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003epublisher\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003efor\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eUIResponder\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003ekeyboardWillHideNotification\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-observer-swift-L4\" data-line-number=\"4\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-observer-swift-LC4\"\u003e  \u003cspan\u003eNotificationCenter\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003edefault\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003epublisher\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003efor\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eUIResponder\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003ekeyboardWillChangeFrameNotification\u003cspan\u003e)\u003c/span\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-observer-swift-L5\" data-line-number=\"5\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-observer-swift-LC5\"\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-observer-swift-L6\" data-line-number=\"6\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-observer-swift-LC6\"\u003e  \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003emap\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eInfo\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003einit\u003cspan\u003e)\u003c/span\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-observer-swift-L7\" data-line-number=\"7\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-observer-swift-LC7\"\u003e  \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eassignWeakly\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eto\u003cspan\u003e:\u003c/span\u003e \\\u003cspan\u003e.\u003c/span\u003ekeyboardInfo\u003cspan\u003e,\u003c/span\u003e on\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eself\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-observer-swift-L8\" data-line-number=\"8\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-observer-swift-LC8\"\u003e  \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003estore\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ein\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026amp;\u003c/span\u003enotificationCancellables\u003cspan\u003e)\u003c/span\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n  \u003c/tbody\u003e\u003c/table\u003e\n\u003c/div\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eGreat, compiler is happy again although this code could cause trouble if any of the notifications are posted from a background thread. But since this is not a case here, I went for skipping \u003ccode\u003e.receive(on: DispatchQueue.main)\u003c/code\u003e. Assign weakly is a custom operator and the implementation looks like this:\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cdiv itemprop=\"text\" tabindex=\"0\" role=\"region\" aria-label=\"Combine+Weak.swift content, created by laevandus on 08:01PM on November 17, 2024.\" id=\"gist134198676\" translate=\"no\" data-color-mode=\"light\" data-light-theme=\"light\"\u003e\n\n  \u003ctemplate\u003e\n  \u003cdiv data-view-component=\"true\"\u003e\n  \n    \u003cp\u003e\u003cspan\u003e\n      This file contains hidden or bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters.\n      \u003ca href=\"https://github.co/hiddenchars\" target=\"_blank\"\u003eLearn more about bidirectional Unicode characters\u003c/a\u003e\n    \u003c/span\u003e\u003c/p\u003e\n\u003c/div\u003e\u003c/template\u003e\n\u003ctemplate\u003e\n  \u003cspan aria-label=\"This line has hidden Unicode characters\" data-view-component=\"true\"\u003e\n    \n\u003c/span\u003e\u003c/template\u003e\n\n  \u003ctable data-hpc=\"\" data-tab-size=\"8\" data-paste-markdown-skip=\"\" data-tagsearch-path=\"Combine+Weak.swift\"\u003e\n        \u003ctbody\u003e\u003ctr\u003e\n          \u003ctd id=\"file-combine-weak-swift-L1\" data-line-number=\"1\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-combine-weak-swift-LC1\"\u003e\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eextension\u003c/span\u003e \u003cspan\u003ePublisher\u003c/span\u003e \u003cspan\u003ewhere\u003c/span\u003e Self\u003cspan\u003e.\u003c/span\u003eFailure \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003eNever\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-combine-weak-swift-L2\" data-line-number=\"2\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-combine-weak-swift-LC2\"\u003e    \u003cspan\u003efunc\u003c/span\u003e assignWeakly\u003cspan\u003e\u0026lt;\u003c/span\u003eRoot\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eto keyPath\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eReferenceWritableKeyPath\u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eRoot\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003eSelf\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eOutput\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e on object\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eRoot\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e-\u0026gt;\u003c/span\u003e \u003cspan\u003eAnyCancellable\u003c/span\u003e \u003cspan\u003ewhere\u003c/span\u003e Root\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eAnyObject\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-combine-weak-swift-L3\" data-line-number=\"3\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-combine-weak-swift-LC3\"\u003e        \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003esink\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003eweak object\u003cspan\u003e]\u003c/span\u003e value \u003cspan\u003ein\u003c/span\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-combine-weak-swift-L4\" data-line-number=\"4\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-combine-weak-swift-LC4\"\u003e            \u003cspan\u003eobject\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e?\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e[\u003c/span\u003ekeyPath\u003cspan\u003e:\u003c/span\u003e keyPath\u003cspan\u003e]\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e value\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-combine-weak-swift-L5\" data-line-number=\"5\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-combine-weak-swift-LC5\"\u003e        \u003cspan\u003e}\u003c/span\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-combine-weak-swift-L6\" data-line-number=\"6\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-combine-weak-swift-LC6\"\u003e    \u003cspan\u003e}\u003c/span\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-combine-weak-swift-L7\" data-line-number=\"7\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-combine-weak-swift-LC7\"\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n  \u003c/tbody\u003e\u003c/table\u003e\n\u003c/div\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eIf this was helpful, please let me know on \u003ca href=\"https://mastodon.social/@toomasvahter\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eMastodon@toomasvahter\u003c/a\u003e or \u003ca rel=\"noreferrer noopener\" href=\"https://twitter.com/toomasvahter\" target=\"_blank\"\u003eTwitter @toomasvahter\u003c/a\u003e. Feel free to subscribe to \u003ca rel=\"noreferrer noopener\" aria-label=\"RSS feed (opens in a new tab)\" href=\"https://augmentedcode.io/blog/feed/\" target=\"_blank\"\u003eRSS feed\u003c/a\u003e. Thank you for reading.\u003c/p\u003e\n\n\n\n\n\n\n\n\n\n\t\t\u003c/div\u003e\n\n\t\u003cdiv\u003e\n\n\t\t\t\u003cul\u003e\n\n\t\t\t\t\t\t\t\t\t\u003cli\u003e\n\t\t\t\t\t\t\u003cspan\u003e\n\t\t\t\t\t\t\t\u003cspan\u003e\n\t\t\t\t\t\t\t\tTags\t\t\t\t\t\t\t\u003c/span\u003e\n\t\t\t\t\t\t\t\t\t\t\t\t\t\u003c/span\u003e\n\t\t\t\t\t\t\u003cspan\u003e\n\t\t\t\t\t\t\t\u003ca href=\"https://augmentedcode.io/tag/ios/\" rel=\"tag\"\u003eiOS\u003c/a\u003e, \u003ca href=\"https://augmentedcode.io/tag/swift/\" rel=\"tag\"\u003eSwift\u003c/a\u003e\t\t\t\t\t\t\u003c/span\u003e\n\t\t\t\t\t\u003c/li\u003e\n\t\t\t\t\t\n\t\t\t\u003c/ul\u003e\n\n\t\t\u003c/div\u003e\n\n\t\n\t\n\n\t\n\u003c/article\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": "2024-11-18T16:00:00Z",
  "modifiedTime": "2024-11-17T20:05:53Z"
}
