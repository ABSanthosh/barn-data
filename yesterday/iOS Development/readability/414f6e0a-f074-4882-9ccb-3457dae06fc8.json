{
  "id": "414f6e0a-f074-4882-9ccb-3457dae06fc8",
  "title": "Adding Icon Composer icons to Xcode",
  "link": "https://useyourloaf.com/blog/adding-icon-composer-icons-to-xcode/",
  "description": "How do you use Icon Composer to add App Icons to an Xcode project? Icon Composer Xcode 26 adds a new Icon Composer tool to build icons for the new Liquid Glass design system. I recommend the Apple Article: Creating your app icon using Icon Composer and the WWDC videos linked below to learn how to best use Icon Composer. The basic idea is that you use your preferred design tool (Photoshop, Sketch, Pixelmator, etc.) to design your icon’s foreground layers. You then export these as fully opaque SVG layers to import into Icon Composer. Using Icon Composer, you add the background, adjust size and positions of the layers, set opacity, color/gradients, shadows, and glass effects. Xcode uses the single .icon file to generate all the icon variants it needs for all supported platforms. Adding Icons to an Xcode Project The step that left me confused when watching the WWDC video was how to add the icons to an Xcode project. You no longer need to add default, dark, and tinted variants of the app icon to the asset catalog in the app bundle. What you need to do is drag the Icon Composer .icon file into the project navigator sidebar of the Xcode project: Once you add the .icon file to the project you no longer need the external file. You can open and edit the icon file in Icon Composer directly from Xcode: I would prefer that we could avoid this two step process. Maybe Apple will add an Icon Composer template to Xcode so we can create a new icon file directly in the project (FB18297643). One final step, in your app target settings, make sure the App Icon Set Name matches the name of the Icon Composer icon file name (without the .icon extension): What About Alternate App Icons? One thing that is missing is support for alternate app icons. I expected to be able to add alternate app icons to the project using Icon Composer. Unfortunately, using the name of the .icon file doesn’t work when setting the alternate icon name: UIApplication.shared.setAlternateIconName(iconName) You need to export and manually add the image files to the asset catalog which reduces the usefulness of Icon Composer (FB18233873). Learn More Apple Human Interface Guidelines: App Icons Apple Design Resources WWDC25 Say hello to the new look of app icons WWDC25 Create icons with Icon Composer Apple Article: Creating your app icon using Icon Composer Adding Icon Composer icons to Xcode was originally posted 23 Jun 2025 on useyourloaf.com. Want this direct to your inbox? Sign up and get my free WWDC viewing guide PDF.",
  "author": "",
  "published": "Mon, 23 Jun 2025 10:32:36 +0100",
  "source": "https://useyourloaf.com/blog/rss.xml",
  "categories": null,
  "byline": "",
  "length": 2345,
  "excerpt": "How do you use Icon Composer to add App Icons to an Xcode project?",
  "siteName": "Use Your Loaf - iOS Development News \u0026 Tips",
  "favicon": "https://useyourloaf.com/apple-touch-icon.png",
  "text": "How do you use Icon Composer to add App Icons to an Xcode project? Icon Composer Xcode 26 adds a new Icon Composer tool to build icons for the new Liquid Glass design system. I recommend the Apple Article: Creating your app icon using Icon Composer and the WWDC videos linked below to learn how to best use Icon Composer. The basic idea is that you use your preferred design tool (Photoshop, Sketch, Pixelmator, etc.) to design your icon’s foreground layers. You then export these as fully opaque SVG layers to import into Icon Composer. Using Icon Composer, you add the background, adjust size and positions of the layers, set opacity, color/gradients, shadows, and glass effects. Xcode uses the single .icon file to generate all the icon variants it needs for all supported platforms. Adding Icons to an Xcode Project The step that left me confused when watching the WWDC video was how to add the icons to an Xcode project. You no longer need to add default, dark, and tinted variants of the app icon to the asset catalog in the app bundle. What you need to do is drag the Icon Composer .icon file into the project navigator sidebar of the Xcode project: Once you add the .icon file to the project you no longer need the external file. You can open and edit the icon file in Icon Composer directly from Xcode: I would prefer that we could avoid this two step process. Maybe Apple will add an Icon Composer template to Xcode so we can create a new icon file directly in the project (FB18297643). One final step, in your app target settings, make sure the App Icon Set Name matches the name of the Icon Composer icon file name (without the .icon extension): What About Alternate App Icons? One thing that is missing is support for alternate app icons. I expected to be able to add alternate app icons to the project using Icon Composer. Unfortunately, using the name of the .icon file doesn’t work when setting the alternate icon name: UIApplication.shared.setAlternateIconName(iconName) You need to export and manually add the image files to the asset catalog which reduces the usefulness of Icon Composer (FB18233873). Learn More Apple Human Interface Guidelines: App Icons Apple Design Resources WWDC25 Say hello to the new look of app icons WWDC25 Create icons with Icon Composer Apple Article: Creating your app icon using Icon Composer",
  "image": "https://useyourloaf.com/assets/images/banner.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\u003cp\u003eHow do you use Icon Composer to add App Icons to an Xcode project?\u003c/p\u003e\n\u003ch3 id=\"icon-composer\"\u003eIcon Composer\u003c/h3\u003e\n\u003cp\u003eXcode 26 adds a new Icon Composer tool to build icons for the new Liquid Glass design system. I recommend the \u003ca href=\"https://developer.apple.com/documentation/Xcode/creating-your-app-icon-using-icon-composer\"\u003eApple Article: Creating your app icon using Icon Composer\u003c/a\u003e and the WWDC videos linked below to learn how to best use Icon Composer.\u003c/p\u003e\n\u003cp\u003eThe basic idea is that you use your preferred design tool (Photoshop, Sketch, Pixelmator, etc.) to design your icon’s foreground layers. You then export these as fully opaque SVG layers to import into Icon Composer.\u003c/p\u003e\n\u003cp\u003eUsing Icon Composer, you add the background, adjust size and positions of the layers, set opacity, color/gradients, shadows, and glass effects. Xcode uses the single .icon file to generate all the icon variants it needs for all supported platforms.\u003c/p\u003e\n\u003ch3 id=\"adding-icons-to-an-xcode-project\"\u003eAdding Icons to an Xcode Project\u003c/h3\u003e\n\u003cp\u003eThe step that left me confused when watching the \u003ca href=\"https://developer.apple.com/videos/play/wwdc2025/361?time=796\"\u003eWWDC video\u003c/a\u003e was how to add the icons to an Xcode project.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eYou no longer need to add default, dark, and tinted variants of the app icon to the asset catalog in the app bundle\u003c/strong\u003e. What you need to do is drag the Icon Composer .icon file into the project navigator sidebar of the Xcode project:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://useyourloaf.com/blog/adding-icon-composer-icons-to-xcode/001.png\" alt=\"Adding an AppIcon icon file to the Xcode project navigator\" width=\"290\" height=\"280\" srcset=\"https://useyourloaf.com/blog/adding-icon-composer-icons-to-xcode/001@2x.png 2x\"/\u003e\u003c/p\u003e\n\u003cp\u003eOnce you add the .icon file to the project you no longer need the external file. You can open and edit the icon file in Icon Composer directly from Xcode:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://useyourloaf.com/blog/adding-icon-composer-icons-to-xcode/002.png\" alt=\"Xcode project showing icon preview and button to open with icon composer\" width=\"630\" height=\"547\" srcset=\"https://useyourloaf.com/blog/adding-icon-composer-icons-to-xcode/002@2x.png 2x\"/\u003e\u003c/p\u003e\n\u003cp\u003eI would prefer that we could avoid this two step process. Maybe Apple will add an Icon Composer template to Xcode so we can create a new icon file directly in the project (FB18297643).\u003c/p\u003e\n\u003cp\u003eOne final step, in your app target settings, \u003cstrong\u003emake sure the App Icon Set Name matches the name of the Icon Composer icon file name (without the .icon extension)\u003c/strong\u003e:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://useyourloaf.com/blog/adding-icon-composer-icons-to-xcode/003.png\" alt=\"App target setting primary app icon set name with value AppIcon\" width=\"375\" height=\"150\" srcset=\"https://useyourloaf.com/blog/adding-icon-composer-icons-to-xcode/003@2x.png 2x\"/\u003e\u003c/p\u003e\n\u003ch3 id=\"what-about-alternate-app-icons\"\u003eWhat About Alternate App Icons?\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003eOne thing that is missing is support for alternate app icons.\u003c/strong\u003e I expected to be able to add alternate app icons to the project using Icon Composer. Unfortunately, using the name of the .icon file doesn’t work when setting the alternate icon name:\u003c/p\u003e\n\u003cdiv\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode data-lang=\"swift\"\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003eUIApplication\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eshared\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003esetAlternateIconName\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eiconName\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eYou need to export and manually add the image files to the asset catalog which reduces the usefulness of Icon Composer (FB18233873).\u003c/p\u003e\n\u003ch3 id=\"learn-more\"\u003eLearn More\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.apple.com/design/human-interface-guidelines/app-icons\"\u003eApple Human Interface Guidelines: App Icons\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.apple.com/design/resources/\"\u003eApple Design Resources\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.apple.com/videos/play/wwdc2025/220\"\u003eWWDC25 Say hello to the new look of app icons\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.apple.com/videos/play/wwdc2025/361\"\u003eWWDC25 Create icons with Icon Composer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.apple.com/documentation/Xcode/creating-your-app-icon-using-icon-composer\"\u003eApple Article: Creating your app icon using Icon Composer\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": "2025-06-23T10:32:36+01:00",
  "modifiedTime": "2025-06-23T16:49:51+01:00"
}
