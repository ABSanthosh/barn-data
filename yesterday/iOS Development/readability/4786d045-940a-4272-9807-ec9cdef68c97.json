{
  "id": "4786d045-940a-4272-9807-ec9cdef68c97",
  "title": "Lights, Camera, Action Button",
  "link": "https://fabisevi.ch/2025/02/28/lights-camera-action-button/",
  "description": "The iPhone 15 Pro launched with a marquee feature, the Action Button. The Action Button set out to replace the mute switch, which had existed since the first iPhone was released back in 2007. The Action Button is a software-powered button, replacing what previously was a hardware switch that would toggle your phone‚Äôs silent mode on or off. The appeal of the Action Button was that now you could decide what the side button should do for you. If you wanted it to be a mute switch, no problem, the Action Button can still be one. But if you want to use it to toggle your flashlight, launch the camera, or turn on Do Not Disturb mode, these alternatives and more are now possible. The unspoken downside has always been that it‚Äôs hard to decide what the Action Button should do, if it can only do one thing.",
  "author": "Joe Fabisevich",
  "published": "Fri, 28 Feb 2025 00:00:00 GMT",
  "source": "https://www.fabisevi.ch/feed.xml",
  "categories": null,
  "byline": "",
  "length": 7268,
  "excerpt": "The iPhone 15 Pro launched with a marquee feature, the Action Button. The Action Button set out to replace the mute switch, which had existed since the first iPhone was released back in 2007. The Action Button is a software-powered button, replacing what previously was a hardware switch that would toggle your phone‚Äôs silent mode on or off. The appeal of the Action Button was that now you could decide what the side button should do for you. If you wanted it to be a mute switch, no problem, the Action Button can still be one. But if you want to use it to toggle your flashlight, launch the camera, or turn on Do Not Disturb mode, these alternatives and more are now possible. The unspoken downside has always been that it‚Äôs hard to decide what the Action Button should do, if it can only do one thing.",
  "siteName": "",
  "favicon": "https://fabisevi.ch/icons/icon-512x512.png?v=b60b950dc439294a707fb76cdaca4274",
  "text": "The iPhone 15 Pro launched with a marquee feature, the Action Button. The Action Button set out to replace the mute switch, which had existed since the first iPhone was released back in 2007. The Action Button is a software-powered button, replacing what previously was a hardware switch that would toggle your phone‚Äôs silent mode on or off. The appeal of the Action Button was that now you could decide what the side button should do for you. If you wanted it to be a mute switch, no problem, the Action Button can still be one. But if you want to use it to toggle your flashlight, launch the camera, or turn on Do Not Disturb mode, these alternatives and more are now possible. The unspoken downside has always been that it‚Äôs hard to decide what the Action Button should do, if it can only do one thing. There are ways to set up the Action Button to show a menu of actions, but that makes the Action Button less convenient. You can use hacks like Federico Viticci's MultiButton, which made it possible to assign separate tap and double-tap actions to your Action Button. These workflows and many others were built off of the Action Button‚Äôs ability to run a Shortcut, but none of them ever stuck for me. While you may get a more powerful Action Button, you also get a more complicated one ‚Äî trading off flexibility for fiddliness. Then after 18 months with the iPhone 15 Pro, I had a breakthrough. This idea came to me in a dream (literally, not metaphorically), and last month I discovered a way to use the Action Button that is useful across apps, without tying myself to one action for the Action Button. Our First App-Specific Action My most common use case for the Action Button has always been to save links from my clipboard to Plinky, the link-saving app I make. You may be thinking, ‚ÄúPlinky has a share extension which lets you save links from any app, so why do you need the Action Button to save links from the clipboard?‚Äù Because the app I send and receive links from most, Messages, surprisingly does not have a share button. Before mapping the Action Button to a ‚ÄúSave Link to Plinky‚Äù Shortcut, whenever a friend sends a link to me over iMessage I would have to go through multiple steps to save a link. Copy the link into my clipboard, open Plinky, and save the link manually. This was tedious, especially if I wanted to save multiple links, so I decided to take advantage of Plinky‚Äôs built-in Shortcuts support to create a one-tap action, letting me save links from anywhere. At the same time, this action is mostly useful to me in Messages ‚Äî it's not as important when I'm in an app like Safari or Slack. This meant we were back to where we started: there's this really useful action mapped to my Action Button, but I don't need it all the time. That got me thinking, why can't I create one dedicated action per app, which I can use to build a more flexible Action Button? An iOS 18.2 Interlude iOS 18.2 brought a very important change to Shortcuts, one that made the technique I‚Äôm about to share possible. There is a new Get Current App Shortcut block, which unsurprisingly, will tell you what app you currently have open. Once I was able to figure out the current app, it became possible to conditionally run actions based on the current app. Action Mode Now that we have all of the necessary pieces, we can build out our custom App-Specific Action Button workflow. (I‚Äôve called mine Action Mode.) Let‚Äôs walk through this image step by step, to see what‚Äôs happening here. It‚Äôs a bit long, but I promise it‚Äôs not scary. We set our Shortcut to receive input from the Share Sheet. This allows us to run this Shortcut from an assortment of locations. If there is no input, I‚Äôve chosen to fallback to the Get Clipboard function. We create a bunch of if blocks, one per app. This will allow us to run a different action based on the result of Current App. You‚Äôll notice there are no else blocks, we‚Äôll get to that in a little bit. When Current App is equal to an app we‚Äôve chosen to have a Custom Action, we now run said Custom Action. That Custom Action can be anything, it doesn‚Äôt even have to be related to the current app we‚Äôre in. (As you see in the example when the Current App is Messages.) You can create as many Custom Actions for as many apps as you‚Äôd like, the only limit is your imagination. At the end of the list we have a Fallback Action block. This is an optional action to run if press the Action Button outside of an app with a Custom Action. I‚Äôve mapped it to adding a Reminder to my Groceries list, an action I take often. Note: The way we know to enter the fallback action block is a bit unconventional, and is predicated on the hasRunAction variable. Instead of having infinitely nested else blocks for every Current App check, we populate the hasRunAction variable whenever we run a Custom Action. This is slightly more error prone because we can forget to populate the hasRunAction variable, but leaves our Shortcut significantly more manageable and flexible. Long Live Apps The great thing about this system is that it‚Äôs easy to get started, and easy to add new apps to your workflow the more ideas you come up with over time. I started off with a handful of apps, but now it‚Äôs grown to over a dozen. A few examples for how I‚Äôm using my App-Specific Action Button: Plinky: Open my Reading List App Store: Open the App Updates tab - Via URL scheme: itms-apps://apps.apple.com/updates Castro: Toggle the sleep timer (so I can listen to a podcast while falling asleep) ChatGPT: Start a new ChatGPT Voice conversation Craft: Open my Plinky Roadmap doc Fantastical: Switch to my Personal Calendar Set GitHub: Open the repo of Boutique (my most popular open source project) Ivory \u0026 Mona: Generate a screenshot of the Mastodon post in my clipboard Messages: Save the a link from my clipboard to Plinky MyWater: Log 12 ounces of water Photos: Open the Favorites album Safari: Open Reader Mode Slack: Switch to my Red Panda Club Slack - Via URL scheme Things: Open my Today list These are just my workflows, but the possibilities for configuring your Action Button are personal and limitless. If you need a template to start with, here is the Action Button Sample Shortcut I created, identical to the screenshot above. Now all that‚Äôs left to do is to assign our Action Mode Shortcut to the Action Button, which we can do in the iOS system Settings. And viola, that‚Äôs the App-Specific Action Button system ‚Äî some would call it a Shortcut ‚Äî to a better workflow.Joe Fabisevich is an indie developer creating software at Red Panda Club Inc. while writing about design, development, and building a company. Formerly an iOS developer working on societal issues @Twitter. These days I don't tweet, but I do post on Threads.Like my writing? You can keep up with it in your favorite RSS reader, or get posts emailed in newsletter form. I promise to never spam you or send you anything other than my posts, it's just a way for you to read my writing wherever's most comfortable for you.If you'd like to know more, wanna talk, or need some advice, feel free to sign up for office hours, I'm very friendly. üôÇ",
  "image": "https://fabisevi.ch/static/pic-f5999ef8dd476bfbf9d65ddbace7e387.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003carticle\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cp\u003eThe iPhone 15 Pro launched with a marquee feature, the Action Button. The Action Button set out to replace the mute switch, which had existed since the first iPhone was released back in 2007. The Action Button is a software-powered button, replacing what previously was a hardware switch that would toggle your phone‚Äôs silent mode on or off.\u003c/p\u003e\n\u003cp\u003eThe appeal of the Action Button was that now you could decide what the side button should do for you. If you wanted it to be a mute switch, no problem, the Action Button can still be one. But if you want to use it to toggle your flashlight, launch the camera, or turn on Do Not Disturb mode, these alternatives and more are now possible. The unspoken downside has always been that it‚Äôs hard to decide what the Action Button should do, if it can only do one thing.\u003c/p\u003e\n\n\u003cp\u003eThere are ways to set up the Action Button to show a menu of actions, but that makes the Action Button less convenient. You can use hacks like Federico Viticci\u0026#39;s \u003ca href=\"https://www.macstories.net/ios/introducing-multibutton-assign-two-shortcuts-to-the-same-action-button-press-on-iphone-15-pro/\"\u003eMultiButton\u003c/a\u003e, which made it possible to assign separate tap and double-tap actions to your Action Button.\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\n      \u003ca href=\"https://fabisevi.ch/static/ba668be0d7696b359dbcd74da833d227/c1b63/action-button.png\" target=\"_blank\" rel=\"noopener\"\u003e\n    \u003cspan\u003e\u003c/span\u003e\n  \u003cpicture\u003e\n          \u003csource srcset=\"https://fabisevi.ch/static/ba668be0d7696b359dbcd74da833d227/fc615/action-button.avif 243w,\nhttps://fabisevi.ch/static/ba668be0d7696b359dbcd74da833d227/b3175/action-button.avif 485w,\nhttps://fabisevi.ch/static/ba668be0d7696b359dbcd74da833d227/006d3/action-button.avif 970w,\nhttps://fabisevi.ch/static/ba668be0d7696b359dbcd74da833d227/07e28/action-button.avif 1200w\" sizes=\"(max-width: 970px) 100vw, 970px\" type=\"image/avif\"/\u003e\u003csource srcset=\"https://fabisevi.ch/static/ba668be0d7696b359dbcd74da833d227/0e3e2/action-button.webp 243w,\nhttps://fabisevi.ch/static/ba668be0d7696b359dbcd74da833d227/749af/action-button.webp 485w,\nhttps://fabisevi.ch/static/ba668be0d7696b359dbcd74da833d227/dbca2/action-button.webp 970w,\nhttps://fabisevi.ch/static/ba668be0d7696b359dbcd74da833d227/92f8c/action-button.webp 1200w\" sizes=\"(max-width: 970px) 100vw, 970px\" type=\"image/webp\"/\u003e\n          \u003csource srcset=\"https://fabisevi.ch/static/ba668be0d7696b359dbcd74da833d227/8aea6/action-button.png 243w,\nhttps://fabisevi.ch/static/ba668be0d7696b359dbcd74da833d227/44c61/action-button.png 485w,\nhttps://fabisevi.ch/static/ba668be0d7696b359dbcd74da833d227/587b0/action-button.png 970w,\nhttps://fabisevi.ch/static/ba668be0d7696b359dbcd74da833d227/c1b63/action-button.png 1200w\" sizes=\"(max-width: 970px) 100vw, 970px\" type=\"image/png\"/\u003e\n          \u003cimg src=\"https://fabisevi.ch/static/ba668be0d7696b359dbcd74da833d227/587b0/action-button.png\" alt=\"Two iPhones side by side. The first is highlighting an Action Button, the second shows the available actions\" title=\"Two iPhones side by side. The first is highlighting an Action Button, the second shows the available actions\" loading=\"lazy\" decoding=\"async\"/\u003e\n        \u003c/picture\u003e\n  \u003c/a\u003e\n    \u003c/span\u003e\u003c/p\u003e\n\u003cp\u003eThese workflows and many others were built off of the Action Button‚Äôs ability to run a Shortcut, but none of them ever stuck for me. While you may get a more powerful Action Button, you also get a more complicated one ‚Äî trading off flexibility for fiddliness.\u003c/p\u003e\n\u003cp\u003eThen after 18 months with the iPhone 15 Pro, I had a breakthrough. This idea came to me in a dream (literally, not metaphorically), and \u003ca href=\"https://www.threads.net/@mergesort/post/DDsGO3BvZKh\"\u003elast month\u003c/a\u003e I discovered a way to use the Action Button that is useful across apps, without tying myself to one action for the Action Button.\u003c/p\u003e\n\u003ch3 id=\"our-first-app-specific-action\"\u003e\u003ca href=\"#our-first-app-specific-action\" aria-label=\"our first app specific action permalink\"\u003e\u003c/a\u003eOur First App-Specific Action\u003c/h3\u003e\n\u003cp\u003eMy most common use case for the Action Button has always been to save links from my clipboard to \u003ca href=\"https://plinky.app\"\u003ePlinky\u003c/a\u003e, the \u003ca href=\"https://plinky.app/download\"\u003elink-saving app\u003c/a\u003e I make. You may be thinking, ‚ÄúPlinky has a share extension which lets you save links from any app, so why do you need the Action Button to save links from the clipboard?‚Äù Because the app I send and receive links from most, Messages, surprisingly does not have a share button.\u003c/p\u003e\n\u003cp\u003eBefore mapping the Action Button to a ‚ÄúSave Link to Plinky‚Äù Shortcut, whenever a friend sends a link to me over iMessage I would have to go through multiple steps to save a link. Copy the link into my clipboard, open Plinky, and save the link manually. This was tedious, especially if I wanted to save multiple links, so I decided to take advantage of Plinky‚Äôs built-in Shortcuts support to create a one-tap action, letting me save links from anywhere.\u003c/p\u003e\n\u003cp\u003eAt the same time, this action is \u003cem\u003emostly\u003c/em\u003e useful to me in Messages ‚Äî it\u0026#39;s not as important when I\u0026#39;m in an app like Safari or Slack. This meant we were back to where we started: there\u0026#39;s this really useful action mapped to my Action Button, but I don\u0026#39;t need it all the time. That got me thinking, why can\u0026#39;t I create one dedicated action per app, which I can use to build a more flexible Action Button?\u003c/p\u003e\n\u003ch3 id=\"an-ios-182-interlude\"\u003e\u003ca href=\"#an-ios-182-interlude\" aria-label=\"an ios 182 interlude permalink\"\u003e\u003c/a\u003eAn iOS 18.2 Interlude\u003c/h3\u003e\n\u003cp\u003eiOS 18.2 brought a very important change to Shortcuts, one that made the technique I‚Äôm about to share possible. There is a new \u003cem\u003eGet Current App\u003c/em\u003e Shortcut block, which unsurprisingly, will tell you what app you currently have open. Once I was able to figure out the current app, it became possible to conditionally run actions based on the current app.\u003c/p\u003e\n\u003ch3 id=\"action-mode\"\u003e\u003ca href=\"#action-mode\" aria-label=\"action mode permalink\"\u003e\u003c/a\u003eAction Mode\u003c/h3\u003e\n\u003cp\u003eNow that we have all of the necessary pieces, we can build out our custom App-Specific Action Button workflow. (I‚Äôve called mine Action Mode.)\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\n      \u003ca href=\"https://fabisevi.ch/static/c617b981da20dd43c1146fe81f4a9a3b/ecbea/action-mode-shortcut.png\" target=\"_blank\" rel=\"noopener\"\u003e\n    \u003cspan\u003e\u003c/span\u003e\n  \u003cpicture\u003e\n          \u003csource srcset=\"https://fabisevi.ch/static/c617b981da20dd43c1146fe81f4a9a3b/fc615/action-mode-shortcut.avif 243w,\nhttps://fabisevi.ch/static/c617b981da20dd43c1146fe81f4a9a3b/b3175/action-mode-shortcut.avif 485w,\nhttps://fabisevi.ch/static/c617b981da20dd43c1146fe81f4a9a3b/006d3/action-mode-shortcut.avif 970w,\nhttps://fabisevi.ch/static/c617b981da20dd43c1146fe81f4a9a3b/b52ec/action-mode-shortcut.avif 1455w,\nhttps://fabisevi.ch/static/c617b981da20dd43c1146fe81f4a9a3b/44c94/action-mode-shortcut.avif 1940w,\nhttps://fabisevi.ch/static/c617b981da20dd43c1146fe81f4a9a3b/24da0/action-mode-shortcut.avif 3179w\" sizes=\"(max-width: 970px) 100vw, 970px\" type=\"image/avif\"/\u003e\u003csource srcset=\"https://fabisevi.ch/static/c617b981da20dd43c1146fe81f4a9a3b/0e3e2/action-mode-shortcut.webp 243w,\nhttps://fabisevi.ch/static/c617b981da20dd43c1146fe81f4a9a3b/749af/action-mode-shortcut.webp 485w,\nhttps://fabisevi.ch/static/c617b981da20dd43c1146fe81f4a9a3b/dbca2/action-mode-shortcut.webp 970w,\nhttps://fabisevi.ch/static/c617b981da20dd43c1146fe81f4a9a3b/bda17/action-mode-shortcut.webp 1455w,\nhttps://fabisevi.ch/static/c617b981da20dd43c1146fe81f4a9a3b/0dc73/action-mode-shortcut.webp 1940w,\nhttps://fabisevi.ch/static/c617b981da20dd43c1146fe81f4a9a3b/86ff0/action-mode-shortcut.webp 3179w\" sizes=\"(max-width: 970px) 100vw, 970px\" type=\"image/webp\"/\u003e\n          \u003csource srcset=\"https://fabisevi.ch/static/c617b981da20dd43c1146fe81f4a9a3b/8aea6/action-mode-shortcut.png 243w,\nhttps://fabisevi.ch/static/c617b981da20dd43c1146fe81f4a9a3b/44c61/action-mode-shortcut.png 485w,\nhttps://fabisevi.ch/static/c617b981da20dd43c1146fe81f4a9a3b/587b0/action-mode-shortcut.png 970w,\nhttps://fabisevi.ch/static/c617b981da20dd43c1146fe81f4a9a3b/5b795/action-mode-shortcut.png 1455w,\nhttps://fabisevi.ch/static/c617b981da20dd43c1146fe81f4a9a3b/94cea/action-mode-shortcut.png 1940w,\nhttps://fabisevi.ch/static/c617b981da20dd43c1146fe81f4a9a3b/ecbea/action-mode-shortcut.png 3179w\" sizes=\"(max-width: 970px) 100vw, 970px\" type=\"image/png\"/\u003e\n          \u003cimg src=\"https://fabisevi.ch/static/c617b981da20dd43c1146fe81f4a9a3b/587b0/action-mode-shortcut.png\" alt=\"Shortcut Sample.jpeg\" title=\"Shortcut Sample.jpeg\" loading=\"lazy\" decoding=\"async\"/\u003e\n        \u003c/picture\u003e\n  \u003c/a\u003e\n    \u003c/span\u003e\u003c/p\u003e\n\u003cp\u003eLet‚Äôs walk through this image step by step, to see what‚Äôs happening here. It‚Äôs a bit long, but I promise it‚Äôs not scary.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe set our Shortcut to receive input from the Share Sheet. This allows us to run this Shortcut from an assortment of locations. If there is no input, I‚Äôve chosen to fallback to the Get Clipboard function.\u003c/li\u003e\n\u003cli\u003eWe create a bunch of if blocks, one per app. This will allow us to run a different action based on the result of Current App. You‚Äôll notice there are no else blocks, we‚Äôll get to that in a little bit.\u003c/li\u003e\n\u003cli\u003eWhen Current App is equal to an app we‚Äôve chosen to have a Custom Action, we now run said Custom Action. That Custom Action can be anything, it doesn‚Äôt even have to be related to the current app we‚Äôre in. (As you see in the example when the Current App is Messages.)\u003c/li\u003e\n\u003cli\u003eYou can create as many Custom Actions for as many apps as you‚Äôd like, the only limit is your imagination.\u003c/li\u003e\n\u003cli\u003eAt the end of the list we have a Fallback Action block. This is an optional action to run if press the Action Button outside of an app with a Custom Action. I‚Äôve mapped it to adding a Reminder to my Groceries list, an action I take often.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eNote: The way we know to enter the fallback action block is a bit unconventional, and is predicated on the \u003ccode\u003ehasRunAction\u003c/code\u003e variable. Instead of having infinitely nested else blocks for every Current App check, we populate the \u003ccode\u003ehasRunAction\u003c/code\u003e variable whenever we run a Custom Action. This is slightly more error prone because we can forget to populate the \u003ccode\u003ehasRunAction\u003c/code\u003e variable, but leaves our Shortcut significantly more manageable and flexible.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003chr/\u003e\n\u003ch3 id=\"long-live-apps\"\u003e\u003ca href=\"#long-live-apps\" aria-label=\"long live apps permalink\"\u003e\u003c/a\u003eLong Live Apps\u003c/h3\u003e\n\u003cp\u003eThe great thing about this system is that it‚Äôs easy to get started, and easy to add new apps to your workflow the more ideas you come up with over time. I started off with a handful of apps, but now it‚Äôs grown to over a dozen.\u003c/p\u003e\n\u003cp\u003eA few examples for how I‚Äôm using my App-Specific Action Button:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePlinky: Open my Reading List\u003c/li\u003e\n\u003cli\u003eApp Store: Open the App Updates tab\n- Via URL scheme: itms-apps://apps.apple.com/updates\u003c/li\u003e\n\u003cli\u003eCastro: Toggle the sleep timer (so I can listen to a podcast while falling asleep)\u003c/li\u003e\n\u003cli\u003eChatGPT: Start a new ChatGPT Voice conversation\u003c/li\u003e\n\u003cli\u003eCraft: Open my Plinky Roadmap doc\u003c/li\u003e\n\u003cli\u003eFantastical: Switch to my Personal Calendar Set\u003c/li\u003e\n\u003cli\u003eGitHub: Open the repo of Boutique (my most popular open source project)\u003c/li\u003e\n\u003cli\u003eIvory \u0026amp; Mona: Generate a screenshot of the Mastodon post in my clipboard\u003c/li\u003e\n\u003cli\u003eMessages: Save the a link from my clipboard to Plinky\u003c/li\u003e\n\u003cli\u003eMyWater: Log 12 ounces of water\u003c/li\u003e\n\u003cli\u003ePhotos: Open the Favorites album\u003c/li\u003e\n\u003cli\u003eSafari: Open Reader Mode\u003c/li\u003e\n\u003cli\u003eSlack: Switch to my Red Panda Club Slack\n- Via URL scheme\u003c/li\u003e\n\u003cli\u003eThings: Open my Today list\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThese are just my workflows, but the possibilities for configuring your Action Button are personal and limitless. If you need a template to start with, \u003ca href=\"https://www.icloud.com/shortcuts/972a3b95a42d45d1bdbfd574cec1b68c\"\u003ehere is the Action Button\u003c/a\u003e Sample Shortcut I created, identical to the screenshot above.\u003c/p\u003e\n\u003cp\u003eNow all that‚Äôs left to do is to assign our Action Mode Shortcut to the Action Button, which we can do in the iOS system Settings. And viola, that‚Äôs the App-Specific Action Button system ‚Äî some would call it \u003cem\u003ea Shortcut ‚Äî\u003c/em\u003e to a better workflow.\u003c/p\u003e\u003c/div\u003e\u003cp\u003eJoe Fabisevich is an indie developer creating software at \u003ca href=\"https://redpanda.club\"\u003eRed Panda Club Inc.\u003c/a\u003e while writing about design, development, and building a company. Formerly an iOS developer working on societal issues \u003ca href=\"https://threads.net/mergesort\"\u003e@Twitter\u003c/a\u003e. These days I don\u0026#39;t tweet, but I do post on \u003ca href=\"https://threads.net/mergesort\"\u003eThreads\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eLike my writing? You can keep up with it in your favorite \u003ca href=\"https://fabisevi.ch/feed.xml\"\u003eRSS\u003c/a\u003e reader, or get posts \u003ca href=\"https://mailchi.mp/3237be1819ae/fabisevich-blog-posts\"\u003eemailed\u003c/a\u003e in newsletter form. I promise to never spam you or send you anything other than my posts, it\u0026#39;s just a way for you to read my writing wherever\u0026#39;s most comfortable for you.\u003c/p\u003e\u003cp\u003eIf you\u0026#39;d like to know more, wanna talk, or need some advice, feel free to sign up for \u003ca href=\"https://cal.com/mergesort/office-hours\"\u003eoffice hours\u003c/a\u003e, I\u0026#39;m very friendly. üôÇ\u003c/p\u003e\u003c/div\u003e\u003c/article\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "8 min read",
  "publishedTime": null,
  "modifiedTime": null
}
