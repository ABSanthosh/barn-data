{
  "id": "2a0962f6-5b0c-4e9e-bc26-77dfa7b93c11",
  "title": "Why Computer Scientists Need Magic 8 Ball-Like Oracles",
  "link": "https://www.wired.com/story/why-computer-scientists-need-magic-8-ball-like-oracles/",
  "description": "Hypothetical devices that can quickly and accurately answer questions have become a powerful tool in computational complexity theory.",
  "author": "Ben Brubaker",
  "published": "Sun, 02 Feb 2025 13:00:00 +0000",
  "source": "https://www.wired.com/feed/category/science/latest/rss",
  "categories": [
    "Science",
    "Science / Physics and Math",
    "Answer Me"
  ],
  "byline": "Ben Brubaker",
  "length": 5690,
  "excerpt": "Hypothetical devices that can quickly and accurately answer questions have become a powerful tool in computational complexity theory.",
  "siteName": "WIRED",
  "favicon": "",
  "text": "The original version of this story appeared in Quanta Magazine.Pose a question to a Magic 8 Ball, and it’ll answer yes, no, or something annoyingly indecisive. We think of it as a kid’s toy, but theoretical computer scientists employ a similar tool. They often imagine they can consult hypothetical devices called oracles that can instantly, and correctly, answer specific questions. These fanciful thought experiments have inspired new algorithms and helped researchers map the landscape of computation.The researchers who invoke oracles work in a subfield of computer science called computational complexity theory. They’re concerned with the inherent difficulty of problems such as determining whether a number is prime or finding the shortest path between two points in a network. Some problems are easy to solve, others seem much harder but have solutions that are easy to check, while still others are easy for quantum computers but seemingly hard for ordinary ones.Complexity theorists want to understand whether these apparent differences in difficulty are fundamental. Is there something intrinsically hard about certain problems, or are we just not clever enough to come up with a good solution? Researchers address such questions by sorting problems into “complexity classes”—all the easy problems go in one class, for example, and all the easy-to-check problems go in another—and proving theorems about the relationships between those classes.Unfortunately, mapping the landscape of computational difficulty has turned out to be, well, difficult. So in the mid-1970s, some researchers began to study what would happen if the rules of computation were different. That’s where oracles come in.Like Magic 8 Balls, oracles are devices that immediately answer yes-or-no questions without revealing anything about their inner workings. Unlike Magic 8 Balls, they always say either yes or no, and they’re always correct—an advantage of being fictional. In addition, any given oracle will only answer a specific type of question, such as “Is this number prime?”What makes these fictional devices useful for understanding the real world? In brief, they can reveal hidden connections between different complexity classes.Take the two most famous complexity classes. There’s the class of problems that are easy to solve, which researchers call “P,” and the class of problems that are easy to check, which researchers call “NP.” Are all easy-to-check problems also easy to solve? If so, that would mean that NP would equal P, and all encryption would be easy to crack (among other consequences). Complexity theorists suspect that NP does not equal P, but they can’t prove it, even though they’ve been trying to pin down the relationship between the two classes for over 50 years.Oracles have helped them better understand what they’re working with. Researchers have invented oracles that answer questions that help solve many different problems. In a world where every computer had a hotline to one of these oracles, all easy-to-check problems would also be easy to solve, and P would equal NP. But other, less helpful oracles have the opposite effect. In a world populated by these oracles, P and NP would be provably different.Researchers have used this knowledge to get a better grasp on the P versus NP problem. The first attempts at determining the relationship between P and NP used an elegant trick called diagonalization that had been essential for other major results in computer science. But researchers soon realized that any proof based on diagonalization would also apply to any world where every computer can consult the same oracle. This spelled doom, as oracles change the answer to the P versus NP question. If researchers could use diagonalization to prove that P and NP are different in the real world, the same proof would imply that P and NP are different in an oracle-infused world where they’re clearly equivalent. That means any diagonalization-based solution to the P versus NP problem would be self-contradictory. Researchers concluded that they’d need new techniques to make progress.Oracles have also been helpful in the study of quantum computing. In the 1980s and 1990s, researchers discovered ways to harness quantum physics to rapidly solve certain problems that seemed hard for ordinary “classical” computers. But did these problems just seem hard, or were they truly hard? Proving it one way or another would require radically new mathematical techniques.Because of this, researchers have studied how quantum computers fare on problems involving oracles. These efforts can provide indirect evidence that quantum computers really are more powerful than classical ones, and they can help researchers explore qualitatively new tasks where quantum computers might excel. Sometimes, they can even have practical applications. In 1994, the applied mathematician Peter Shor was inspired by a recent oracle result to develop a fast quantum algorithm for factoring large numbers—a task whose apparent difficulty underlies the cryptographic systems that keep our online data secure. Shor’s discovery kicked off a race to build powerful quantum computers that continues to this day.It’s hard to predict the future of complexity theory, but not every question about the trajectory of the field is equally hard to answer. Will researchers continue to consult oracles? Signs point to yes.Original story reprinted with permission from Quanta Magazine, an editorially independent publication of the Simons Foundation whose mission is to enhance public understanding of science by covering research developments and trends in mathematics and the physical and life sciences.",
  "image": "https://media.wired.com/photos/6790ca2eb75e22ca9b830e5c/191:100/w_1280,c_limit/Oracle_Lede_Final_1620.mp4",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv data-testid=\"ArticlePageChunks\"\u003e\u003cdiv data-journey-hook=\"client-content\" data-testid=\"BodyWrapper\"\u003e\u003cp\u003e\u003cem\u003e\u003cspan\u003eThe original version\u003c/span\u003e of\u003c/em\u003e \u003ca href=\"https://www.quantamagazine.org/why-computer-scientists-consult-oracles-20250103/\"\u003e\u003cem\u003ethis story\u003c/em\u003e\u003c/a\u003e \u003cem\u003eappeared in \u003ca href=\"https://www.quantamagazine.org\"\u003eQuanta Magazine\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\u003cp\u003ePose a question to a Magic 8 Ball, and it’ll answer yes, no, or something annoyingly indecisive. We think of it as a kid’s toy, but theoretical computer scientists employ a similar tool. They often imagine they can consult hypothetical devices called oracles that can instantly, and correctly, answer specific questions. These fanciful thought experiments have inspired new algorithms and helped researchers map the landscape of computation.\u003c/p\u003e\u003cp\u003eThe researchers who invoke oracles work in a subfield of computer science called computational complexity theory. They’re concerned with the inherent difficulty of problems such as determining whether a number is prime or finding the shortest path between two points in a network. Some problems are easy to solve, others seem much harder but have solutions that are easy to check, while still others are easy for \u003ca href=\"https://www.quantamagazine.org/tag/quantum-computing/\"\u003equantum computers\u003c/a\u003e but seemingly hard for ordinary ones.\u003c/p\u003e\u003cp\u003eComplexity theorists want to understand whether these apparent differences in difficulty are fundamental. Is there something intrinsically hard about certain problems, or are we just not clever enough to come up with a good solution? Researchers address such questions by sorting problems into “\u003ca href=\"https://www.quantamagazine.org/a-short-guide-to-hard-problems-20180716/\"\u003ecomplexity classes\u003c/a\u003e”—all the easy problems go in one class, for example, and all the easy-to-check problems go in another—and proving theorems about the relationships between those classes.\u003c/p\u003e\u003cp\u003eUnfortunately, mapping the landscape of computational difficulty has turned out to be, well, difficult. So in the mid-1970s, some researchers began to study what would happen if the rules of computation were different. That’s where oracles come in.\u003c/p\u003e\u003cp\u003eLike Magic 8 Balls, oracles are devices that immediately answer yes-or-no questions without revealing anything about their inner workings. Unlike Magic 8 Balls, they always say either yes or no, and they’re always correct—an advantage of being fictional. In addition, any given oracle will only answer a specific type of question, such as “Is this number prime?”\u003c/p\u003e\u003cp\u003eWhat makes these fictional devices useful for understanding the real world? In brief, they can reveal hidden connections between different complexity classes.\u003c/p\u003e\u003cp\u003eTake the two most famous complexity classes. There’s the class of problems that are easy to solve, which researchers call “P,” and the class of problems that are easy to check, which researchers call “NP.” Are all easy-to-check problems also easy to solve? If so, that would mean that NP would equal P, and all encryption would be \u003ca href=\"https://www.quantamagazine.org/researchers-identify-master-problem-underlying-all-cryptography-20220406/\"\u003eeasy to crack\u003c/a\u003e (among other consequences). Complexity theorists suspect that NP does not equal P, but they can’t prove it, even though they’ve been trying to pin down the relationship between the two classes for \u003ca href=\"https://www.quantamagazine.org/complexity-theorys-50-year-journey-to-the-limits-of-knowledge-20230817/\"\u003eover 50 years\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eOracles have helped them better understand what they’re working with. Researchers have invented oracles that answer questions that help solve many different problems. In a world where every computer had a hotline to one of these oracles, all easy-to-check problems would also be easy to solve, and P would equal NP. But other, less helpful oracles have the opposite effect. In a world populated by these oracles, P and NP would be provably different.\u003c/p\u003e\u003c/div\u003e\u003cdiv data-journey-hook=\"client-content\" data-testid=\"BodyWrapper\"\u003e\u003cp\u003eResearchers have used this knowledge to get a better grasp on the P versus NP problem. The first attempts at determining the relationship between P and NP used an elegant trick called \u003ca href=\"https://www.quantamagazine.org/alan-turing-and-the-power-of-negative-thinking-20230905/\"\u003ediagonalization\u003c/a\u003e that had been essential for other major results in computer science. But researchers soon \u003ca data-offer-url=\"https://epubs.siam.org/doi/10.1137/0204037\" data-event-click=\"{\u0026#34;element\u0026#34;:\u0026#34;ExternalLink\u0026#34;,\u0026#34;outgoingURL\u0026#34;:\u0026#34;https://epubs.siam.org/doi/10.1137/0204037\u0026#34;}\" href=\"https://epubs.siam.org/doi/10.1137/0204037\" rel=\"nofollow noopener\" target=\"_blank\"\u003erealized\u003c/a\u003e that any proof based on diagonalization would also apply to any world where every computer can consult the same oracle. This spelled doom, as oracles change the answer to the P versus NP question. If researchers could use diagonalization to prove that P and NP are different in the real world, the same proof would imply that P and NP are different in an oracle-infused world where they’re clearly equivalent. That means any diagonalization-based solution to the P versus NP problem would be self-contradictory. Researchers concluded that they’d need new techniques to make progress.\u003c/p\u003e\u003cp\u003eOracles have also been helpful in the study of quantum computing. In the 1980s and 1990s, researchers discovered ways to harness quantum physics to rapidly solve certain problems that seemed hard for ordinary “classical” computers. But did these problems just seem hard, or were they truly hard? Proving it one way or another would require radically new mathematical techniques.\u003c/p\u003e\u003cp\u003eBecause of this, researchers have studied how quantum computers fare on problems involving oracles. These efforts can provide \u003ca href=\"https://www.quantamagazine.org/finally-a-problem-that-only-quantum-computers-will-ever-be-able-to-solve-20180621/\"\u003eindirect evidence\u003c/a\u003e that quantum computers really are more powerful than classical ones, and they can help researchers explore \u003ca href=\"https://www.quantamagazine.org/quantum-algorithms-conquer-a-new-kind-of-problem-20220711/\"\u003equalitatively new tasks\u003c/a\u003e where quantum computers might excel. Sometimes, they can even have practical applications. In 1994, the applied mathematician Peter Shor was inspired by a \u003ca data-offer-url=\"https://ieeexplore.ieee.org/document/365701\" data-event-click=\"{\u0026#34;element\u0026#34;:\u0026#34;ExternalLink\u0026#34;,\u0026#34;outgoingURL\u0026#34;:\u0026#34;https://ieeexplore.ieee.org/document/365701\u0026#34;}\" href=\"https://ieeexplore.ieee.org/document/365701\" rel=\"nofollow noopener\" target=\"_blank\"\u003erecent oracle result\u003c/a\u003e to develop a fast quantum algorithm for \u003ca href=\"https://www.quantamagazine.org/thirty-years-later-a-speed-boost-for-quantum-factoring-20231017/\"\u003efactoring large numbers\u003c/a\u003e—a task whose apparent difficulty underlies the cryptographic systems that keep our online data secure. Shor’s discovery kicked off a race to build powerful quantum computers that continues to this day.\u003c/p\u003e\u003cp\u003eIt’s hard to predict the future of complexity theory, but not every question about the trajectory of the field is equally hard to answer. Will researchers continue to consult oracles? Signs point to yes.\u003c/p\u003e\u003chr/\u003e\u003cp\u003e\u003ca href=\"https://www.quantamagazine.org/why-computer-scientists-consult-oracles-20250103/\"\u003e\u003cem\u003eOriginal story\u003c/em\u003e\u003c/a\u003e \u003cem\u003ereprinted with permission from \u003ca href=\"https://www.quantamagazine.org\"\u003eQuanta Magazine\u003c/a\u003e\u003c/em\u003e, \u003cem\u003ean editorially independent publication of the\u003c/em\u003e \u003ca href=\"https://www.simonsfoundation.org\"\u003e\u003cem\u003eSimons Foundation\u003c/em\u003e\u003c/a\u003e \u003cem\u003ewhose mission is to enhance public understanding of science by covering research developments and trends in mathematics and the physical and life sciences.\u003c/em\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": "2025-02-02T08:00:00-05:00",
  "modifiedTime": "2025-02-02T13:00:00Z"
}
