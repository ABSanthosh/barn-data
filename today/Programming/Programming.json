[
  {
    "id": "bf2740c3-e09e-4979-b740-894d6208fab3",
    "title": "Machine Learning in Content Moderation at Etsy",
    "link": "https://www.etsy.com/codeascraft/machine-learning-in-content-moderation-at-etsy?utm_source=OpenGraph\u0026utm_medium=PageTools\u0026utm_campaign=Share",
    "description": "At Etsy, we’re focused on elevating the best of our marketplace to help creative entrepreneurs grow their businesses. We continue to invest in making Etsy a safe and trusted place to shop, so sellers’ extraordinary items can shine. Today, there are more than 100 million unique items available for sale on our marketplace, and our vibrant global community is made up of over 90 million active buyers and 7 million active sellers, the majority of whom are women and sole owners of their creative businesses. To support this growing community, our Trust \u0026 Safety team of Product, Engineering, Data, and Operations experts are dedicated to keeping Etsy's marketplace safe by enforcing our policies and removing potentially violating or infringing items at scale For that, we make use of community reporting and automated controls for removing this potentially violating content. In order to continue to scale and enhance our detections through innovative products and technologies, we also leverage state-of-the-art Machine Learning solutions which we have already used to identify and remove over 100,000 violations during the past year on our marketplace. In this article, we are going to describe one of our systems to detect policy violations that utilizes supervised learning, a family of algorithms that uses data to train their models to recognize patterns and predict outcomes. Datasets In Machine Learning, data is one of the variables we have the most control over. Extracting data and building trustworthy datasets is a crucial step in any learning problem. In Trust \u0026 Safety, we are determined to keep our marketplace and users safe by identifying violations to our policies. For that, we log and annotate potential violations that enable us to collect datasets reliably. In our approach, these are translated into positives, these were indeed violations, and negatives, these were found not to be offending for a given policy. The latter are also known as hard negatives as they are close to our positives and can help us to better learn how to partition these two sets. In addition, we also add easy or soft negatives by adding random items to our datasets. This allows us to give further general examples to our models for listings that do not violate any policy, which is the majority in our marketplace and improve generalizability. The number of easy negatives to add is a hyper-parameter to tune, more will mean higher training time and fewer positive representations. For each training example, we extract multimodal signals, both textual and imagery from our listings. Then, we split our datasets by time using progressive evaluation, to mimic our production usecase and learn to adapt to recent behavior. These are split into training, used to train our models and learn patterns, validation to fine tune our training hyper-parameters such as learning rate and to evaluate over-fitting, and test to report our metrics in an unbiased manner. Model Architecture After usual transformations and extraction of a set of offline features from our datasets, we are all set to start training our Machine Learning model. The goal is to predict whether a given listing violates any of our predefined set of policies, or in contrast, it doesn’t violate any of them. For that, we added a neutral class that depicts the no violation class, where the majority of our listings fall into. This is a typical design pattern for these types of problems. Our model architecture includes a text encoder and an image encoder to learn representations (aka embeddings) for each modality. Our text encoder currently employs a BERT-based architecture to extract context-full representations of our text inputs. In addition, to alleviate compute time, we leverage ALBERT, a lighter BERT with 90% fewer parameters as the transformer blocks share them. Our initial lightweight representation used an in-house model trained for Search usecases. This allowed us to quickly start iterating and learning from this problem. Our image encoder currently employs EfficientNet, a very efficient and accurate Convolutional Neural Network (CNN). Our initial lightweight representation used an in-house model for category classification using CNNs. We are experimenting with transformer-based architectures, similar to our text encoders, with vision transformers but its performance has not been significantly improved. Inspired by EmbraceNet, our architecture then further learns more constrained representations for both text and image embeddings separately, before they are concatenated to form a unique multimodal representation. This is then sent to a final softmax activation that maps logits to probabilities for our internal use. In addition, in order to address the imbalanced nature of this problem, we leverage focal loss that penalizes more hard misclassified examples. Figure 1 shows our model architecture with late concatenation of our text and image encoders and final output probabilities on an example. Model Architecture. Image is obtained from @charlesdeluvio on Unsplash Model Evaluation First, we experimented and iterated by training our model offline. To evaluate its performance, we established certain benchmarks, based on the business goal of minimizing the impact of any well-intentioned sellers while successfully detecting any offending listings in the platform. This results in a typical evaluation trade-off between precision and recall, precision being the fraction of correct predictions over all predictions made, and recall being the fraction of correct predictions over the actual true values. However, we faced the challenge that recall is not possible to compute, as it’s not feasible to manually review the millions and millions of new listings per day so we had to settle for a proxy for recall from what has been annotated. Once we had a viable candidate to test in production, we deployed our model as an endpoint and built a service to perform pre-processing and post-processing steps before and after the call to our endpoint that can be called via an API. Then, we ran an A/B test to measure its performance in production using a canary release approach, slowly rolling out our new detection system to a small percentage of traffic that we keep increasing while we validate an increase in our metrics and no unexpected computation overload. Afterwards, we iterated and every time we had a promising offline candidate, named challenger, that improved our offline performance metrics, we A/B tested it with respect to our current model, named champion. We designed guidelines for model promotion to increase our metrics and our policy coverage. Now, we monitor and observe our model predictions and trigger re-training when our performance degrades. Results Our supervised learning system has been continually learning as we train frequently, run experiments with new datasets and model architectures, A/B test them and deploy them in production. We have added violations as additional classes to our model. As a result, we have identified and removed more than 100,000 violations using these methodologies, in addition to other tools and services that continue to detect and remove violations. This is one of our approaches to identify potentially offending content among others such as explicitly using the policy information and leverage the latest in Large Language Models (LLMs) and Generative AI. Stay tuned! \"To infinity and beyond!\" –Buzz Lightyear, Toy Story",
    "author": "David Azcona",
    "published": "Tue, 6 Aug 2024 07:15:03 -0400",
    "image": "https://i.etsystatic.com/inv/68753a/6158554996/inv_fullxfull.6158554996_9u5voz5s.jpg?version=0",
    "source": "https://codeascraft.com/feed/atom/",
    "categories": null
  },
  {
    "id": "6d4adacc-91e8-408c-8d94-22692ec16e7e",
    "title": "Enhancing Cloud Usage Forecasting, Monitoring \u0026 Optimizing",
    "link": "https://www.etsy.com/codeascraft/enhancing-cloud-usage-forecasting-monitoring--optimizing?utm_source=OpenGraph\u0026utm_medium=PageTools\u0026utm_campaign=Share",
    "description": "In 2020, Etsy concluded its migration from an on-premise data center to the Google Cloud Platform (GCP). During this transition, a dedicated team of program managers ensured the migration's success. Post-migration, this team evolved into the Etsy FinOps team, dedicated to maximizing the organization's cloud value by fostering collaborations within and outside the organization, particularly with our Cloud Providers. Positioned within the Engineering organization under the Chief Architect, the FinOps team operates independently of any one Engineering org or function and optimizes globally rather than locally. This positioning, combined with Etsy's robust engineering culture focused on efficiency and craftsmanship, has fostered what we believe is a mature and successful FinOps practice at Etsy. Forecast Methodology A critical aspect of our FinOps approach is a strong forecasting methodology. A reliable forecast establishes an expected spending baseline against which we track actual spending, enabling us to identify deviations. We classify costs into distinct buckets: Core Infrastructure: Includes the costs of infrastructure and services essential for operating the Etsy.com website. Machine Learning \u0026 Product Enablement: Encompasses costs related to services supporting machine learning initiatives like search, recommendations, and advertisements. Data Enablement: Encompasses costs related to shared platforms for data collection, data processing and workflow orchestration. Dev: Encompasses non-production resources. The FinOps forecasting model relies on a trailing Cost Per Visit (CPV) metric. While CPV provides valuable insights into changes, it's not without limitations: A meaningful portion of web traffic to Etsy involves non-human activity, like web crawlers that’s not accounted for in CPV. Some services have weaker correlations to user visits. Dev, data, and ML training costs lack direct correlations to visits and are susceptible to short-term spikes during POCs, experiments or big data workflows. A/B tests for new features can lead to short-term CPV increases, potentially resulting in long-term CPV changes upon successful feature launches. Periodically, we run regression tests to validate if CPV should drive our forecasts. In addition to visits we have looked into headcount, GMV(Gross Merchandise Value) and revenue as independent variables. Thus far, visits have consistently exhibited the highest correlation to costs. Monitoring and Readouts We monitor costs using internal tools built on BigQuery and Looker. Customized dashboards for all of our Engineering teams display cost trends, CPV, and breakdowns by labels and workflows. Additionally, we've set up alerts to identify sudden spikes or gradual week-over-week/month-over-month growth. Collaboration with the Finance department occurs weekly to compare actual costs against forecasts, identifying discrepancies for timely corrections. Furthermore, the FinOps team conducts recurring meetings with major cost owners and monthly readouts for Engineering and Product leadership to review forecasted figures and manage cost variances. While we track costs at the organization/cost center level, we don't charge costs back to the teams. This both lowers our overhead and more importantly, provides flexibility to make tradeoffs that enable Engineering velocity. Cost Increase Detection \u0026 Mitigation Maintaining a healthy CPV involves swiftly identifying and mitigating cost increases, to achieve this we: Analysis: Gather information on the increase's source, whether from specific cloud products, workflows, or usage pattern changes (ie variance in resource utilization). Collaboration: Engage relevant teams, sharing insights and seeking additional context. Validation: Validate cost increases from product launches or internal changes, securing buy-in from leadership if needed. Mitigation: Unexpected increases undergo joint troubleshooting, where we outline and assign action items to owners, until issues are resolved. Communication: Inform our finance partners about recent cost trends and their incorporation into the expected spend forecast post-confirmation or resolution with teams and engineering leadership. Cost Optimization Initiatives Another side of maintaining a healthy CPV involves cost optimization, offsetting increases from product launches. Ideas for cost-saving come as a result of collaboration between FinOps and engineering teams, with the Architecture team validating and implementing efficiency improvements. Notably we focus on the engineering or business impact of the cost optimization rather than solely on savings, recognizing that inefficiencies often signal larger problems. Based on effort vs. value evaluations, some ideas are added to backlogs, while major initiatives warrant dedicated squads.Below is a breakout of some of the major wins we have had in the last year or so. GCS Storage Optimization - In 2023 we stood up a squad focused on optimizing Etsy’s use of GCS, as it has been one of the largest growth areas for us over the past few years. The squad delivered a number of improvements including improved monitoring of usage, automation features for Data engineers, implementation of TTLs that match data access patterns/business needs and the adoption of Intelligent tiering. Due to these efforts, Etsy’s GCS usage is now less than it was 2 years ago. Compute Optimization - Migrated over 90% of Etsy infrastructure that is serving traffic to the latest and greatest CPU platform. This improved our serving latency while reducing cost. Increased Automation for model deployment - In an effort to improve the developer experience, our machine learning enablement team developed a tool to automate the compute configurations for new models being deployed, which also ended up saving us money. Network Compression - Enabling network compression between our high throughput services both improved the latency profile and drastically reduced the networking cost. What's Next While our core infrastructure spend is well understood, our focus is on improving visibility into our Machine Learning platform's spend. As these systems are shared across teams, dissecting costs tied to individual product launches is challenging. Enhanced visibility will help us refine our ROI analysis of product experiments and pinpoint future areas of opportunity for optimization.",
    "author": "Anthony Tambasco",
    "published": "Mon, 17 Jun 2024 09:58:16 -0400",
    "image": "",
    "source": "https://codeascraft.com/feed/atom/",
    "categories": null
  },
  {
    "id": "80b73c7a-a744-451d-8ae0-c8cef119a4f6",
    "title": "Efficient Visual Representation Learning And Evaluation",
    "link": "https://www.etsy.com/codeascraft/efficient-visual-representation-learning-and-evaluation?utm_source=OpenGraph\u0026utm_medium=PageTools\u0026utm_campaign=Share",
    "description": "Etsy features a diverse marketplace of unique handmade and vintage items. It’s a visually diverse marketplace as well, and computer vision has become increasingly important to Etsy as a way of enhancing our users’ shopping experience. We’ve developed applications like visual search and visually similar recommendations that can offer buyers an additional path to find what they’re looking for, powered by machine learning models that encode images as vector representations. Figure 1. Visual representations power applications such as visual search and visually similar recommendations Learning expressive representations through deep neural networks, and being able to leverage them in downstream tasks at scale, is a costly technical challenge. The infrastructure required to train and serve large models is expensive, as is the iterative process that refines them and optimizes their performance. The solution is often to train deep learning architectures offline and use the pre-computed pretrained visual representations in downstream tasks served online. (We wrote about this in a previous blog post on personalization from real-time sequences and diversity of representations.) In any application where a query image representation is inferred online, it's important that you have low latency, memory-aware models. Efficiency becomes paramount to the success of these models in the product. We can think about efficiency in deep learning along multiple axes: efficiency in model architecture, model training, evaluation and serving. Model Architecture The EfficientNet family of models features a convolutional neural network architecture. It uniformly optimizes for network width, depth, and resolution using a fixed set of coefficients. By allowing practitioners to start from a limited resource budget and scale up for better accuracy as more resources are available, EfficientNet provides a great starting point for visual representations. We began our trials with EfficientNetB0, the smallest size model in the EfficientNet family. We saw good performance and low latency with this model, but the industry and research community have touted Vision Transformers (ViT) as having better representations. We decided to give that a try. Transformers lack the spatial inductive biases of CNN, but they outperform CNN when trained on large enough datasets and may be more robust to domain shifts. ViT decomposes the image into a sequence of patches (16X16 for example) and applies a transformer architecture to incorporate more global information. However, due to the massive number of parameters and compute-heavy attention mechanism, ViT-based architectures can be many times slower to train and inference than lightweight Convolutional Networks. Despite the challenges, more efficient ViT architectures have recently begun to emerge, featuring clever pooling, layer dropping, efficient normalization, and efficient attention or hybrid CNN-transformer designs. We employ the EfficientFormer-l3 to take advantage of these ViT improvements. The EfficientFormer architecture achieves efficiency through downsampling multiple blocks and employing attention only in the last stage. This derived image representation mechanism differs from the standard vision transformer, where embeddings are extracted from the first token of the output. Instead, we extract the attention from the last block for the eight heads and perform average pooling over the sequence. In Figure 2 we illustrate these different attention weights with heat maps overlaid on an image, showing how each of the eight heads learns to focus on a different salient part. Figure 2. Probing the EfficientFormer-l3 pre-trained visual representations through attention heat maps. Model Training Fine-Tuning With our pre-trained backbones in place, we can gain further efficiencies via fine tuning. For the EfficientNetB0 CNN, that means replacing the final convolutional layer and attaching a d-dimensional embedding layer followed by m classification heads, where m is the number of tasks. The embedding head consists of a new convolutional layer with the desired final representation dimension, followed by a batch normalization layer, a swish activation and a global average pooling layer to aggregate the convolutional output into a single vector per example. To train EfficientNetB0, new attached layers are trained from scratch for one epoch with the backbone layers frozen, to avoid excessive computation and overfitting. We then unfreeze 75 layers from the top of the backbone and finetune for nine additional epochs, for efficient learning. At inference time we remove the classification head and extract the output of the pooling layer as the final representation. To fine-tune the EfficientFormer ViT we stick with the pretraining resolution of 224X224, since using sequences longer than the recommended 384X384 in ViT leads to larger training budgets. To extract the embedding we average pool the last hidden state. Then classification heads are added as with the CNN, with batch normalization being swapped for layer normalization. Multitask Learning In a previous blog post we described how we built a multitask learning framework to generate visual representations for Etsy's search-by-image experience. The training architecture is shown in Figure 3. Figure 3. A multitask training architecture for visual representations. The dataset sampler combines examples from an arbitrary number of datasets corresponding to respective classification heads. The embedding is extracted before the classification heads. Multitask learning is an efficiency inducer. Representations encode commonalities, and they perform well in diverse downstream tasks when those are learned using common attributes as multiple supervision signals. A representation learned in single-task classification to the item’s taxonomy, for example, will be unable to capture visual attributes: colors, shapes, materials. We employ four classification tasks: a top-level taxonomy task with 15 top-level categories of the Etsy taxonomy tree as labels; a fine-grained taxonomy task, with 1000 fine-grained leaf node item categories as labels; a primary color task; and a fine-grained taxonomy task (review photos), where each example is a buyer-uploaded review photo of a purchased item with 100 labels sampled from fine-grained leaf node item categories. We are able to train both EfficientNetB0 and EfficientFormer-l3 on standard 16GB GPUs (we used two P100 GPUs). For comparison, a full sized ViT requires a larger 40GB RAM GPU such as an A100, which can increase training costs significantly. We provide detailed hyperparameter information for fine-tuning either backbone in our article. Evaluating Visual Representations We define and implement an evaluation scheme for visual representations to track and guide model training, on three nearest neighbor retrieval tasks. After each training epoch, a callback is invoked to compute and log the recall for each retrieval task. Each retrieval dataset is split into two smaller datasets: “queries” and “candidates.” The candidates dataset is used to construct a brute-force nearest neighbor index, and the queries dataset is used to look up the index. The index is constructed on the fly after each epoch to accommodate for embeddings changing between training epochs. Each lookup yields K nearest neighbors. We compute Recall@5 and @10 using both historical implicit user interactions (such as “visually-similar ad clicks”) and ground truth datasets of product photos taken from the same listing (“intra-item”). The recall callbacks can also be used for early stopping of training to enhance efficiency. The intra-item retrieval evaluation dataset consists of groups of seller-uploaded images of the same item. The query and candidate examples are randomly selected seller-uploaded images of an item. A candidate image is considered a positive example if it is associated with the same item as the query. In the “intra-item with reviews” dataset, the query image is a randomly selected buyer-uploaded review image of an item, with seller-uploaded images providing candidate examples. The dataset of visually similar ad clicks associates seller-uploaded primary images with primary images of items that have been clicked in the visually similar surface on mobile. Here, a candidate image is considered a positive example for some query image if a user viewing the query image has clicked it. Each evaluation dataset contains 15,000 records for building the index and 5,000 query images for the retrieval phase. We also leverage generative AI for an experimental new evaluation scheme. From ample, multilingual historical text query logs, we build a new retrieval dataset that bridges the semantic gap between text-based queries and clicked image candidates. Text-to-image generative stable diffusion makes the information retrieval process language-agnostic, since an image is worth a thousand (multilingual) words. A stable diffusion model generates high-quality images which become image queries. The candidates are images from clicked items corresponding to the source text query in the logs. One caveat is that the dataset is biased toward the search-by-text production system that produced the logs; only a search-by-image-from-text system would produce truly relevant evaluation logs. The source-candidate image pairs form the new retrieval evaluation dataset which is then used within a retrieval callback. Of course, users entering the same text query may have very different ideas in mind of, say, the garment they’re looking for. So for each query we generate several images: formally, a random sample of length 𝑛 from the posterior distribution over all possible images that can be generated from the seed text query. We pre-condition our generation on a uniform “fashion style.” In a real-world scenario, both the text-to-image query generation and the image query inference for retrieval happen in real time, which means efficient backbones are necessary. We randomly select one of the 𝑛 generated images to replace the text query with an image query in the evaluation dataset. This is a hybrid evaluation method: the error inherent in the text-to-image diffusion model generation is encapsulated in the visually similar recommendation error rate. Future work may include prompt engineering to improve the text query prompt itself, which as input by the user can be short and lacking in detail. Large memory requirements and high inference latency are challenges in using text-to-image generative models at scale. We employ an open source fast stable diffusion model through token merging and float 16 inference. Compared to the standard stable diffusion implementation available at the time we built the system, this method speeds up inference by 50% with a 5x reduction in memory consumption, though results depend on the underlying patched model. We can generate 500 images per hour with one T4 GPU (no parallelism) using the patched stable diffusion pipeline. With parallelism we can achieve further speedup. Figure 4 shows that for the English text query “black bohemian maxi dress with orange floral pattern” the efficient stable diffusion pipeline generates five image query candidates. The generated images include pleasant variations with some detail loss. Interestingly, mostly the facial details of the fashion model are affected, while the garment pattern remains clear. In some cases degradation might prohibit display, but efficient generative technology is being perfected at a fast pace, and prompt engineering helps the generative process as well. Figure 4. Text-to-image generation using a generative diffusion model, from equivalent queries in English and French Efficient Inference and Downstream Tasks Especially when it comes to latency-sensitive applications like visually similar recommendations and search, efficient inference is paramount: otherwise, we risk loss of impressions and a poor user experience. We can think of inference along two axes: online inference of the image query and efficient retrieval of top-k most similar items via approximate nearest neighbors. The dimension of the learned visual representation impacts the efficient retrieval design as well, and the smaller 256d derived from the EfficientNetB0 presents an advantage. EfficientNet B0 is hard to beat in terms of accuracy-to-latency trade-offs for online inference, with ~5M parameters and around 1.7ms latency on iPhone 12. The EfficientFormer-l3 has ~30M parameters and gets around 2.7ms latency on iPhone 12 with higher accuracy (while for example MobileViT-XS scores around 7ms with a third of accuracy; very large ViT are not considered since latencies are prohibitive). In offline evaluation, the EfficientFormer-l3-derived embedding achieves around +5% lift in the Intra-L Recall@5 evaluation, a +17% in Intra-R Recall@5, and a +1.8% in Visually Similar Ad clicks Recall@5. We performed A/B testing on the EfficientNetB0 multitask variant across visual applications at Etsy with good results. Additionally, the EfficientFormer-l3 visual representations led to a +0.65% lift in CTR, and a similar lift in purchase rate in a first visually-similar-ads experiment when compared to the production variant of EfficientNetB0. When included in sponsored search downstream rankers, the visual representations led to a +1.26% lift in post-click purchase rate. Including the efficient visual representation in Ads Information Retrieval (AIR), an embedding-based retrieval method used to retrieve similar item ad recommendations caused an increase in click-recall@100 of 8%. And when we used these representations to compute image similarity and included them directly in the last-pass ranking function, we saw a +6.25% lift in clicks. The first use of EfficientNetB0 visual embeddings was in visually similar ad recommendations on mobile. This led to a +1.92% increase in ad return-on-spend on iOS and a +1.18% increase in post-click purchase rate on Android. The same efficient embedding model backed the first search-by-image shopping experience at Etsy. Users search using photos taken with their mobile phone’s camera and the query image embedding is inferred efficiently online, which we discussed in a previous blog post. Learning visual representations is of paramount importance in visually rich e-commerce and online fashion recommendations. Learning them efficiently is a challenging goal made possible by advances in the field of efficient deep learning in computer vision. If you'd like a more in-depth discussion of this work, please see our full accepted paper to the #fashionXrecsys workshop at the Recsys 2023 conference.",
    "author": "Eden Dolev",
    "published": "Fri, 7 Jun 2024 13:23:02 -0400",
    "image": "https://i.etsystatic.com/inv/e81dea/6003603188/inv_fullxfull.6003603188_fgpr44tc.jpg?version=0",
    "source": "https://codeascraft.com/feed/atom/",
    "categories": null
  },
  {
    "id": "ae892cb8-4ed2-446a-aa05-85da4cc44218",
    "title": "Macramé: Untangling the Knot on the Etsy Android Listing Screen",
    "link": "https://www.etsy.com/codeascraft/macrame-untangling-the-knot-on-the-android-listing-screen?utm_source=OpenGraph\u0026utm_medium=PageTools\u0026utm_campaign=Share",
    "description": "Easily the most important and complex screen in the Buy on Etsy Android app is the listing screen, where all key information about an item for sale in the Etsy marketplace is displayed to buyers. Far from just a title and description, a price and a few images, over the years the listing screen has come to aggregate ratings and reviews, seller and shipping and stock information, and gained a variety of personalization and recommendation features. As information-rich as it is, as central as it is to the buying experience, for product teams the listing screen is an irresistible place to test out new methods and approaches. In just the last three years, apps teams have run nearly 200 experiments on it, often with multiple teams building and running experiments in parallel. Eventually, with such a high velocity of experiment and code change, the listing screen started showing signs of stress. Its architecture was inconsistent and not meant to support a codebase expanding so much and so rapidly in size and complexity. Given the relative autonomy of Etsy app development teams, there ended up being a lot of reinventing the wheel, lots of incompatible patterns getting layered atop one another; in short the code resembled a giant plate of spaghetti. The main listing Fragment file alone had over 4000 lines of code in it! Code that isn’t built for testability doesn’t test well, and test coverage for the listing screen was low. VERY low. Our legacy architecture made it hard for developers to add tests for business logic, and the tests that did get written were complex and brittle, and often caused continuous integration failures for seemingly unrelated changes. Developers would skip tests when it seemed too costly to write and maintain them, those skipped tests made the codebase harder for new developers to onboard into or work with confidently, and the result was a vicious circle that would lead to even less test coverage. Introducing Macramé We decided that our new architecture for the listing screen, which we’ve named Macramé, would be based on immutable data propagated through a reactive UI. Reactive frameworks are widely deployed and well understood, and we could see a number of ways that reactivity would help us untangle the spaghetti. We chose to emulate architectures like Spotify’s Mobius, molded to fit the shape of Etsy’s codebase and its business requirements. At the core of the architecture is an immutable State object that represents our data model. State for the listing screen is passed to the UI as a single data object via a StateFlow instance; each time a piece of the data model changes the UI re-renders. Updates to State can be made either from a background thread or from the main UI thread, and using StateFlow ensures that all updates reach the main UI thread. When the data model for a screen is large, as it is for the listing screen, updating the UI from a single object makes things much simpler to test and reason about than if multiple separate models are making changes independently. And that simplicity lets us streamline the rest of the architecture. When changes are made to the State, the monolithic data model gets transformed into a list of smaller models that represent what will actually be shown to the user, in vertical order on the screen. The code below shows an example of state held in the Buy Box section of the screen, along with its smaller Title sub-component. data class BuyBox( val title: Title, val price: Price, val saleEndingSoonBadge: SaleEndingSoonBadge, val unitPricing: UnitPricing, val vatTaxDescription: VatTaxDescription, val transparentPricing: TransparentPricing, val firstVariation: Variation, val secondVariation: Variation, val klarnaInfo: KlarnaInfo, val freeShipping: FreeShipping, val estimatedDelivery: EstimatedDelivery, val quantity: Quantity, val personalization: Personalization, val expressCheckout: ExpressCheckout, val cartButton: CartButton, val termsAndConditions: TermsAndConditions, val ineligibleShipping: IneligibleShipping, val lottieNudge: LottieNudge, val listingSignalColumns: ListingSignalColumns, val shopBanner: ShopBanner, ) data class Title( val text: String, val textInAlternateLanguage: String? = null, val isExpanded: Boolean = false, ) : ListingUiModel() In our older architecture, the screen was based on a single scrollable View. All data was bound and rendered during the View's initial layout pass, which created a noticeable pause the first time the screen was loaded. In the new screen, a RecyclerView is backed by a ListAdapter, which allows for asynchronous diffs of the data changes, avoiding the need to rebind portions of the screen that aren't receiving updates. Each of the vertical elements on the screen (title, image gallery, price, etc.) is represented by its own ViewHolder, which binds whichever of the smaller data models the element relies on. In this code, the BuyBox is transformed into a vertical list of ListingUiModels to display in the RecyclerView. fun BuyBox.toUiModels(): List { return listOf( price, title, shopBanner, listingSignalColumns, unitPricing, vatTaxDescription, transparentPricing, klarnaInfo, estimatedDelivery, firstVariation, secondVariation, quantity, personalization, ineligibleShipping, cartButton, expressCheckout, termsAndConditions, lottieNudge, ) } An Event dispatching system handles user actions, which are represented by a sealed Event class. The use of sealed classes for Events, coupled with Kotlin \"when\" statements mapping Events to Handlers, provides compile-time safety to ensure all of the pieces are in place to handle the Event properly. These Events are fed to a single Dispatcher queue, which is responsible for routing Events to the Handlers that are registered to receive them. Handlers perform a variety of tasks: starting asynchronous network calls, dispatching more Events, dispatching SideEffects, or updating State. We want to make it easy to reason about what Handlers are doing, so our architecture promotes keeping their scope of responsibility as small as possible. Simple Handlers are simple to write tests for, which leads to better test coverage and improved developer confidence. In the example below, a click handler on the listing title sets a State property that tells the UI to display an expanded title: class TitleClickedHandler constructor() { fun handle(state: ListingViewState.Listing): ListingEventResult.StateChange { val buyBox = state.buyBox return ListingEventResult.StateChange( state = state.copy( buyBox = buyBox.copy( title = title.copy(isExpanded = true) ) ) ) } } SideEffects are a special type of Event used to represent, typically, one-time operations that need to interact with the UI but aren’t considered pure business logic: showing dialogs, logging events, performing navigation or showing Snackbar messages. SideEffects end up being routed to the Fragment to be handled. Take the scenario of a user clicking on a listing's Add to Cart button. The Handler for that Event might: dispatch a SideEffect to log the button click start an asynchronous network call to update the user’s cart update the State to show a loading indicator while the cart update finishes While the network call is running on a background thread, the Dispatcher is free to handle other Events that may be in the queue. When the network call completes in the background, a new Event will be dispatched with either a success or failure result. A different Handler is then responsible for handling both the success and failure Events. This diagram illustrates the flow of Events, SideEffects, and State through the architecture: Figure 1. A flow chart illustrating system components (blue boxes) and how events and state changes (yellow boxes) flow between them. Results The rewrite process took five months, with as many as five Android developers working on the project at once. One challenge we faced along the way was keeping the new listing screen up to date with all of the experiments being run on the old listing screen while development was in progress. The team also had to create a suite of tests that could comprehensively cover the diversity of listings available on Etsy, to ensure that we didn’t forget any features or break any. With the rewrite complete, the team ran an A/B experiment against the existing listing screen to test both performance and user behavior between the two versions. Though the new listing screen felt qualitatively quicker than the old listing screen, we wanted to understand how users would react to subtle changes in the new experience. We instrumented both the old and the new listing screens to measure performance changes from the refactor. The new screen performed even better than expected. Time to First Content was decreased by 18%, going from 1585 ms down to 1298 ms. This speedup resulted in the average number of listings viewed by buyers increasing 2.4%, add to carts increasing 0.43%, searches increasing by 2%, and buyer review photo views increasing by 3.3%. On the developer side, unit test coverage increased from single digit percentages to a whopping 76% code coverage of business logic classes. This significantly validates our decision to put nearly all business logic into Handler classes, each responsible for handling just a single Event at a time. We built a robust collection of tools for generating testing States in a variety of common configurations, so writing unit tests for the Handlers is as simple as generating an input event and validating that the correct State and SideEffects are produced. Creating any new architecture involves making tradeoffs, and this project was no exception. Macramé is under active development, and we have a few pieces of feedback on our agenda to be addressed: There is some amount of boilerplate still needed to correctly wire up a new Event and Handler, and we'd like to make that go away. The ability of Handlers to dispatch their own Events sometimes makes debugging complex Handler interactions more difficult than previous formulations of the same business logic. On a relatively simple screen, the architecture can feel like overkill. Adding new features correctly to the listing screen is now the easy thing to do. The dual benefit of increasing business metrics while also increasing developer productivity and satisfaction has resulted in the Android team expanding the usage of Macramé to two more of the key screens in the app (Cart and Shop), both of which completely rewrote their UI using Jetpack Compose: but those are topics for future Code as Craft posts.",
    "author": "John Kalmi",
    "published": "Mon, 18 Mar 2024 12:19:15 -0400",
    "image": "https://i.etsystatic.com/inv/044fad/5843012537/inv_fullxfull.5843012537_l4a37ye8.jpg?version=0",
    "source": "https://codeascraft.com/feed/atom/",
    "categories": null
  },
  {
    "id": "a4085a86-e72b-4f25-b70e-6f7e94ef1f3c",
    "title": "How We Built The Deals Tab in Swift UI",
    "link": "https://www.etsy.com/codeascraft/how-we-built-the-deals-tab-in-swift-ui?utm_source=OpenGraph\u0026utm_medium=PageTools\u0026utm_campaign=Share",
    "description": "Balancing Engineering Ambition with Product Realism Introduction In July of 2023, Etsy’s App Updates team, responsible for the Updates feed in Etsy’s mobile apps, set off with an ambitious goal: to revamp the Updates tab to become Deals, a home for a shopper’s coupons and sales, in time for Cyber Week 2023. The Updates tab had been around for years, and in the course of its evolution ended up serving multiple purposes. It was a hub for updates about a user’s favorite shops and listings, but it was also increasingly a place to start new shopping journeys. Not all updates were created equal. The most acted-upon updates in the tab were coupons offered for abandoned cart items, which shoppers loved. We spotted an opportunity to clarify intentions for our users: by refactoring favorite-based updates into the Favorites tab, and (more boldly), by recentering Updates and transforming it into a hub for a buyer’s deals. Technical Opportunity While investigating the best way to move forward with the Deals implementation, iOS engineers on the team advocated for developing a new tab from the ground up. Although it meant greater initial design and architecture effort, an entirely new tab built on modern patterns would let us avoid relying on Objective C, as well as internal frameworks like SDL (server-driven layout), which is present in many legacy Etsy app screens and comes with a variety of scalability and performance issues, and is in the process of being phased out. At the same time, we needed a shippable product by October. Black Friday and Cyber Week loomed on the horizon in November, and it would be a missed opportunity, for us and for our users, not to have the Deals tab ready to go. Our ambition to use modern, not yet road-tested technologies would have to balance with realism about the needs of the product, and we were conscious of maintaining that balance throughout the course of development. In comes Swift UI and Tuist! Two new frameworks were front of mind when starting this project: Swift UI and Tuist. Swift UI provides a clear, declarative framework for UI development, and makes it easy for engineers to break down views into small, reusable components. Maybe Swift UI’s biggest benefit is its built-in view previews: in tandem with componentization, it becomes a very straightforward process to build a view out of smaller pieces and preview at every step of the way. Our team had experimented with Swift UI in the past, but with scopes limited to small views, such as headers. Confident as we were about the framework, we expected that building out a whole screen in Swift UI would present us some initial hurdles to overcome. In fact, one hurdle presented itself right away. In a decade-old codebase, not everything is optimized for use with newer technologies. The build times we saw for our Swift UI previews, which were almost long enough to negate the framework’s other benefits, testified to that fact. This is where Tuist comes in. Our App Enablement team, which has been hard at work over the past few years modernizing the Etsy codebase, has adopted Tuist as a way of taming the monolith making it modular. Any engineer at Etsy can declare a Tuist module in their project and start working on it, importing parts of the larger codebase only as they need them. (For more on Etsy’s usage of Tuist, check out this article by Mike Simons from the App Enablement team.) Moving our work for the Deals tab into a Swift-based Tuist module gave us what it took to make a preview-driven development process practical: our previews build nearly instantly, and so long as we’re only making changes in our framework the app recompiles with very little delay. Figure 1. A view of a goal end state of a modular Etsy codebase, with a first layer of core modules (in blue), and a second layer of client-facing modules that combine to build the Etsy app. Our architecture The Deals tab comprises a number of modules for any given Etsy user, including a Deals Just for You module with abandoned cart coupons, and a module that shows a user their favorite listings that are on sale. Since the screen is just a list of modules, the API returns them as an array of typed items with the following structure: { \"type\": \"\", \"\": { ... } } Assigning each module a type enables us to parse it correctly on the client, and moves us away from the anonymous component-based API models we had used in the past. Many models are still used across modules, however. These include, but are not limited to, buttons, headers and footers, and listing cards. To parse a new module, we either have to build a new component if it doesn't exist yet, or reuse one that does. Adding a footer to a module, for example, can be as simple as: // Model { \"type\": \"my_module\", \"my_module\": { \"target_listing\": { }\", \"recommended_listings\": [ ], \"footer\": { } // Add footer here } } // View var body: some View { VStack { ListingView(listing: targetListing) ListingCarouselView(listings: recommendedListings) MyFooterView(footer: footer) // Add footer here } } We also used Decodable implementations for our API parsing, leading to faster, clearer code and an easier way to handle optionals. With Etsy’s internal APIv3 framework built on top of Apple’s Decodable protocol, it is very straightforward to define a model and decide what is and isn’t optional, and let the container handle the rest. For example, if the footer was optional, but the target and recommended listings are required, decoding would look like this: init(from decoder: Decoder) throws { let container = try decoder.containerV3(keyedBy: CodingKeys.self) // These will throw if they aren't included in the response self.targetListing = try container.requireV3(forKey: .targetListing) self.recommendedListings = try container.requireV3(forKey: .recommendedListings) // Footer is optional self.footer = container.decodeV3(forKey: .footer) } As for laying out the view on the screen, we used a Swift UI List to make the most of the under-the-hood cell reuse that List uses. Figure 2. On the left-hand side, a diagram of how the DealsUI view is embedded in the Etsy app. On the right-hand side, a diagram of how the DeasUI framework takes the API response and renders a list of module views with individual components. Previews, previews, more previews If we were going to maintain a good development pace, we needed to figure out a clean way to use Swift previews. Previewing a small component, like a header that takes a string, is simple enough: just initialize the header view with the header string. For more complex views, though, it gets cumbersome to build a mock API response every time you need to preview. This complexity is only amplified when previewing an entire Deals module. To streamline the process, we decided to add a Previews enum to our more complex models. A good example of this is in the Deals Just for You coupon cards. These cards display an image or an array of images, a few lines of custom text (depending on the coupon type), and a button. Our previews enum for this API model looks like this: // In an extension to DealsForYouCard enum Previews { static var shopCouponThreeImage: ResponseModels.DealsForYouCard { let titleText = \"IrvingtonWoodworksStudio\" let images = [...] // Three images let button = ResponseModels.Button( buttonText: \"10% off shop\", action: .init(...) ) return ResponseModels.DealsForYouCard( button: button, saleBadge: \"20% off\", titleText: titleText, subtitleText: \"Favorited shop\", action: .init(...), images: images ) } static var listingCoupon: ResponseModels.DealsForYouCard { ... } } Then, previewing a variety of coupon cards, it’s as straightforward as: #Preview { DealsForYouCardView(coupon: .Previews.listingCoupon) } #Preview { DealsForYouCardView(coupon: .Previews.shopCouponThreeImage) } The other perk of this architecture is that it makes it very easy to nest previews, for example when previewing an entire module. To build preview data for the Deals for You module, we can use our coupon examples this way: // In an extension to DealsForYouModule enum Previews { static var mockModule: ResponseModels.DealsForYouModule { let items: [ResponseModels.DealsForYouCard] = [.Previews.listingCoupon, .Previews.shopCouponThreeImage, .Previews.shopCouponTwoImage] let header = ResponseModels.DealsForYouHeader(title: \"Deals just for you\") return .init(header: header, items: items) } } These enums are brief, clear, and easy to understand; they allow us to lean into the benefits of modularity. This architecture, along with our Decodable models, also enabled us to clear a roadblock that used to occur when our team had to wait for API support before we could build new modules. For example, both the Similar Items on Sale and Extra Special Deals modules in the Deals tab were built via previews, and were ready approximately two weeks before the corresponding API work was complete, helping us meet deadlines and not have to wait for a new App Store release. By taking full advantage of Swift UI's modularity and previewability, not only were we able to prove out a set of new technologies, we also exceeded product expectations by significantly beating our deadlines even with the initial overhead of adopting the framework. Challenges: UIKit interoperability Particularly when it came to tasks like navigation and favoriting, interfacing between our module and the Etsy codebase could pose challenges. An assumption that we had as engineers going into this project was that the code to open a listing page, for example, would just be readily available to use; this was not the case, however. Most navigation code within the Etsy codebase is handled by an Objective C class called EtsyScreenController. While in the normal target, it’s as straightforward as calling a function to open a listing page, that functionality was not available to us in our Deals module. One option would have been to build our own navigation logic using Swift UI Navigation stacks; we weren’t trying to reinvent the wheel, however. To balance product deadlines and keep things as simple as possible, we decided not to be dogmatic, and to handle navigation outside of our framework. We did this by building a custom @Environment struct, called DealsAction, which passes off responsibility for navigation back to the main target, and uses the new Swift callAsFunction() feature so we can treat this struct like a function in our views. We have a concept of a DealsAction type in our API response, which enables us to match an action with an actionable part of the screen. For example, a button response has an action that will be executed when a user taps the button. The DealsAction handler takes that action, and uses our existing UIKit code to perform it. The Deals tab is wrapped in a UIHostingController in the main Etsy target, so when setting up the Swift UI view, we also set the DealsAction environment object using a custom view modifier: let dealsView = DealsView() .handleDealsAction { [weak self] in self?.handleAction(action: $0) } ... func handleDealsAction(action: DealsAction) { // UIKit code to execute action } Then, when we need to perform an action from a Swift UI view, the action handler is present at any layer within the view hierarchy within the Deals tab. Performing the action is as simple as: @Environment(\\.handleDealsAction) var handleDealsAction: DealsAction ... MyButton(title: buttonText, fillWidth: false) { handleDealsAction(model.button?.action) } We reused this pattern for other existing functionality that was only available in the main target. For example, we built an environment object for favoriting listings, or for following a shop, and for logging performance metrics. This pattern allows us to include environment objects as needed, and it simplifies adding action handling to any view. Instead of rebuilding this functionality in our Tuist module in pure Swift, which could have taken multiple sprints, we struck a balance between modernization and the need to meet product deadlines. Challenges: Listing Cards The listing card view is a common component used across multiple screens within the Etsy app. This component was originally written in Objective-C and throughout the years has been enhanced to support multiple configurations and layouts, and to be available for A/B testing. It also has built-in functionality like favoriting, which engineers shouldn't have to reimplement each time they want to present a listing card. Figure 3. A diagram of how listing card views are conventionally built in UIKit, using configuration options and the analytics framework to combine various UIKit subviews. It's been our practice to reuse this same single component and make small modifications to support changes in the UI, as per product or experimentation requirements. This means that many functionalities, such as favoriting, long-press menus, and image manipulation, are heavily coupled with this single component, many parts of which are still written in Objective C. Early in the process of developing the new tab, we decided to scope out a way of supporting conventional listing card designs—ones that matched existing cards elsewhere in the app—without having to rebuild the entire card component in Swift UI. We knew a rebuild would eventually be necessary, since we expected to have to support listing cards that differed significantly from the standard designs, but the scope of such a rebuild was a known unknown. To balance our deadlines, we decided to push this more ambitious goal until we knew we had product bandwidth. Since the listing card view is heavily coupled with old parts of the codebase, however, it wasn’t as simple as just typing import ListingCard and flying along. We faced two challenges: first, the API model for a listing card couldn’t be imported into our module, and second the view couldn’t be imported for simple use in a UIViewRepresentable wrapper. To address these, we deferred responsibility back up to the UIKit view controller. Our models for a listing card component look something like this: struct ListingCard { public let listingCardWrapper: ListingCardWrapper let listingCard: TypedListingCard } The model is parsed in two ways: as a wrapper, where it is parsed as an untyped dictionary that will eventually be used to initialize our legacy listing card model, and as a TypedListingCard, which is used only within the Deals tab module. Figure 4. A diagram of how a UIKit listing card builder is passed from the main target to the Deals framework for rendering listing cards. To build the listing card view, we pass in a view builder to the SwiftUI DealsView initializer in the hosting controller code. Here, we are in the full Etsy app codebase, meaning that we have access to the legacy listing card code. When we need to build a listing card, we use this view builder as follows: var body: some View { LazyVGrid(...) { ForEach(listings) { listing in cardViewBuilder(listing) // Returns a UIViewRepresentable } } } There was some initial overhead involved in getting these cards set up, but it was worth it to guarantee that engineering unknowns in a Swift UI rewrite wouldn’t block us and compromise our deadlines. Once built, the support for legacy cards enabled us to reuse them easily wherever they were needed. In fact, legacy support was one of the things that helped us move faster than we expected, and it became possible to stretch ourselves and build at least some listing cards in the Deals tab entirely in Swift UI. This meant that writing the wrapper ultimately gave us the space we needed to avoid having to rely solely on the wrapper! Conclusion After just three months of engineering work, the Deals tab was built and ready to go, even beating product deadlines. While it took some engineering effort to overcome initial hurdles, as well as the switch in context from working in UIKit in the main target to working in Swift UI in our own framework, once we had solutions to those challenges and could really take advantage of the new architecture, we saw a very substantial increase in our engineering velocity. Instead of taking multiple sprints to build, new modules could take just one sprint or less; front-end work was decoupled from API work using Previews, which meant we no longer had to wait for mock responses or even API support at all; and maybe most important, it was fun to use Swift UI’s clear and straightforward declarative UI building, and see our changes in real time! From a product perspective, the Deals tab was a great success: buyers converted their sessions more frequently, and we saw an increase in visits to the Etsy app. The tab was rolled out to all users in mid October, and has seen significant engagement, particularly during Black Friday and Cyber Monday. By being bold and by diving confidently into new frameworks that we expected to see benefits from, we improved engineer experience and not just met but beat our product deadlines. More teams at Etsy are using Swift UI and Tuist in their product work now, thanks to the success of our undertaking, sometimes using our patterns to work through hurdles, sometimes creating their own. We expect to see more of this kind of modernization start to make its way into the codebase. As we iterate on the Deals tab over the next year, and make it even easier for buyers to find the deals that mean the most to them, we look forward to continuing to work in the same spirit. Special thanks to Vangeli Ontiveros for the diagrams in this article, and a huge shoutout to the whole App Deals team for their hard work on this project!",
    "author": "Pierre Rodgers",
    "published": "Tue, 5 Mar 2024 17:22:54 -0500",
    "image": "https://i.etsystatic.com/inv/cab771/5865916855/inv_fullxfull.5865916855_49mug0jy.jpg?version=0",
    "source": "https://codeascraft.com/feed/atom/",
    "categories": null
  },
  {
    "id": "1d5b9d27-091d-41cb-84c1-21cc41f7783c",
    "title": "Behind the Scenes - A Glimpse to Tax Calculations",
    "link": "https://www.etsy.com/codeascraft/behind-the-scenes---a-glimpse-to-tax-calculations?utm_source=OpenGraph\u0026utm_medium=PageTools\u0026utm_campaign=Share",
    "description": "In the past, sellers were responsible for managing and fulfilling their own tax obligations. However, more and more jurisdictions are now requiring marketplaces such as Etsy to collect the tax from buyers and remit the tax to the relevant authorities. Etsy now plays an active role in collecting tax from buyers and remitting it all over the world. In this post, I will walk you through our tax calculation infrastructure and how we adapted to the ongoing increase in traffic and business needs over the years. The tax calculation workflow We determine tax whenever a buyer adds an item to their Etsy shopping cart. The tax determination is based on buyer and seller location and product category, and a set of tax rules and mappings. To handle the details of these calculations we partner with Vertex, and issue a call to their tax engine via the Quotation Request API to get the right amount to show in our buyer's cart. Vertex ensures accurate and efficient tax management and continuously updates the tax rules and rates for jurisdictions around the world. The two main API calls we use are Quotation Request and DistributeTaxRequest SOAP calls. When the buyer proceeds to payment, an order is created, and we call back to Vertex with a DistributeTaxRequest sending the order information and tax details. We sync information with Vertex through the order fulfillment lifecycle. To keep things up to date in case an order is canceled or a refund needs to be issued later on, we inform the details of the cancellation and refunds to the tax engine via DistributeTaxRequest. This ensures that when Vertex generates tax reports for us they will be based on a complete record of all the relevant transactions. Etsy collects the tax from the buyers and remits that tax to the taxing authority, when required. Generate tax details for reporting and audit purpose Vertex comes with a variety of report formats out of the box, and gives us tools to define our own. When Etsy calls the Distribute Tax API, Vertex saves the information we pass to it as raw metadata in its tax journal database. A daily cron job in Vertex then moves this data to the transaction detail table, populating it with tax info. When reports and audit data are generated, we download these reports and import to Etsy’s bigdata and the workflow completes. Mapping the Etsy taxonomy to tax categories Etsy maintains product categories to help our buyers find exactly the items they're looking for. To determine whether transactions are taxed or exempt it's not enough to know item prices and buyer locations: we have to map our product categories to Vertex's rule drivers. That was an effort involving not just engineering but also our tax and analytics teams, and with the wide range of Etsy taxonomy categories it was no small task. Handling increased API traffic Coping with the continuous increase in traffic and maintaining the best checkout experience without delays has been a challenge all the time. Out of the different upgrades we did, the most important ones were to switch to multiple instances for vertex calls and shadowing. Multiple Instance upgrade In our initial integration, we were using the same vertex instance for Quotation and Distribute calls. And the same instance was responsible for generating the reports. This report generation started to affect our checkout experience. Reports are generally used by our tax team and they run them on a regular basis. But on top of that, we also run daily reports to feed the data captured by Vertex back into our own system for analytics purposes. We solved this by routing the quotation calls to one instance and then distributing them to the other. This helped in maintaining a clear separation of functionalities, and avoided interference between the two processes. We had to align the configurations between the instances as well. Splitting up the quotation and distribution calls opened up the door to horizontal scaling, now we can add as many instances of each type and load balance the requests between instances. Eg: When a request type lists multiple instances, we load balance between the instances by using the cart_id for quotations and receipt_ids for distributes I.e. cart_id % quotation_instance_count Shadow logging Shadow logging the requests helped us to simulate the stress on Vertex and monitor the checkout experience. We used this technique multiple times in the past. Whenever we had situations like, for example, adding five hundred thousand more listings whose taxes would be passed through the Vertex engine, we were concerned that the increase in traffic might impact buyer experience. To ensure it wouldn't, we tested for a period of time by slowly ramping shadow requests to Vertex: \"Shadow requests\" are test requests that we send to Vertex from orders, but without applying the calculated tax details to buyers' carts. This will simulate the load on vertex and we can monitor the cart checkout experience. Once we have done shadowing and seen how well Vertex handled the increased traffic, we are confident that releasing the features ensures it would not have any performance implications. Conclusion Given the volume of increasing traffic and the data involved, we will have to keep improving our design to support those. We've also had to address analytics, reporting, configuration sync and many more in designing the system, but we'll leave that story for next time.",
    "author": "Nancy Arnold",
    "published": "Wed, 3 Jan 2024 11:12:58 -0500",
    "image": "https://i.etsystatic.com/inv/b7e136/5660475277/inv_fullxfull.5660475277_6aqobaes.jpg?version=0",
    "source": "https://codeascraft.com/feed/atom/",
    "categories": null
  },
  {
    "id": "a9fcd8a5-e68c-4adc-9450-88fef5edb399",
    "title": "The AR Measuring Box: Etsy's answer to Big Tape Measure",
    "link": "https://www.etsy.com/codeascraft/the-ar-measuring-box-etsys-answer-to-big-tape-measure?utm_source=OpenGraph\u0026utm_medium=PageTools\u0026utm_campaign=Share",
    "description": "A little while ago, Etsy introduced a new feature in its iOS app that could place Etsy sellers' artwork on a user's wall using Apple's Augmented Reality (AR) tools. It let them visualize how a piece would look in their space, and even gave them an idea of its size options. When we launched the feature as a beta, it was only available in \"wall art\"-related categories, and after the initial rollout we were eager to expand it to work with more categories. What differentiates Etsy is the nature of our sellers’ unique items. Our sellers create offerings that can be personalized in numbers of ways, and they often hand-make orders based on demand. Taking the same approach we did with wall art and attempting to show 3D models of millions of Etsy items – many of which could be further customized – would be a huge undertaking. Nevertheless, with inspiration from Etsy's Guiding Principles, we decided to dig deeper into the feature. What could we improve in the way it worked behind the scenes? What about it would make for a compelling extension into the rest of our vast marketplace? We took steps to improve how we parse seller-provided data, and we used this data with Apple’s AR technology to make it easy for Etsy users to understand the size and scale of an object they might want to buy. We decided we could make tape measures obsolete (or at least not quite as essential) for our home-decor shoppers by building an AR tool to let them visualize–conveniently, accurately, and with minimal effort–how an item would fit in their space. Improving dimension parsing In our original post on the wall art experience, we mentioned the complexity involved in doing things like inferring an item's dimensions from text in its description. Etsy allows sellers to add data about dimensions in a structured way when they create a listing, but that wasn't always the case, and some sellers still provide those details in places like the description or the item's title. The solution was to create a regex-based parser in the iOS App that would glean dimensions (width and height) by sifting through a small number of free-form fields–title, description, customization information, overview–looking for specific patterns. We were satisfied being able to catch most of the formats in which our sellers reported dimensions, handling variable positions of values and units (3 in x 5 in vs 3 x 5 in), different long and short names of units, special unit characters (‘, “), and so on, in all the different languages that Etsy supports. Migrating our parsing functionality to the API backend was a first step towards making the AR measuring tool platform-independent, so we could bring it to our Android App as well. It would also be a help in development, since we could iterate improvements to our regex patterns faster outside the app release schedule. And we’d get more consistent dimensions because we'd be able to cache the results instead of having to parse them live on the client at each visit. We knew that an extended AR experience would need to reliably show our users size options for items that had them, so we prioritized the effort to parse out dimensions from variations in listings. We sanitized free-form text input fields that might contain dimensions—inputs like title or description—so that we could catch a wider range of formats. (Several different characters can be used to write quotation marks, used as shorthand for inches and feet, and we needed to handle special characters for new lines, fraction ligatures like ½ or ¼, etc.) Our regex pattern was split and updated so it could detect: Measurement units in plural forms (inches, feet, etc.); Incorrect spellings (e.g. \"foots\"); Localization of measurement units in the languages spoken by Etsy’s users (\"meters\", \"metros\", and \"mètres\" in English, Spanish, and French, respectively); Other formats in which dimensions are captured by sellers like dimensions with unit conversions in parentheses (e.g. 12 in x 12 in (30 cm x 30 cm)) or with complex measurements in the imperial system (3’6”). Making our dimension parsing more robust and bringing it server-side had several ancillary benefits. We were able to maintain the functionality of our iOS app while removing a lot of client-side code, even in Etsy’s App Clip, where size is a matter of utmost importance. And though regex processing isn’t that processor-intensive, the view feature performed better once we implemented server-side caching of parsed dimensions. We figured we could even take the parsing offline (rather than parsing every listing on every visit) by running a backfill process to store dimensions in our database and deliver them to the App along with item details. We found, thanks to decoupling our parser work from the App release cycle, that we were able to test hypotheses faster and iterate at a quicker pace. So we could proceed to some improvements that would have been quite resource-intensive if we had tried to implement them on the native app side. Sellers often provide dimensions in inconsistent units, for instance, or they might add the same data multiple times in different fields, when there are variations in properties like material or color. We worked out ways to de-duplicate this data during parsing, to minimize the number of size options we show users. (Though where we find dimensions that are specifically associated with variations, we make sure to retain them, since those will more directly correlate with offering prices.) And we made it possible to prioritize structured dimension data, where sellers have captured it in dedicated fields, as a more reliable source of truth than free-form parsing. Measuring in 3D The box With this new and improved dimension data coming to us from the server, we had to figure out the right way to present it in 3D in iOS. The display needed to be intuitive, so our users would know more or less at a glance what the tool was and how to interact with it. Ultimately, we decided to present a rectangular prism-type object scaled to the parsed dimensions we have for a given listing. Apple's SceneKit framework – specifically its SCNBox class – is what creates this box, which of course we style with the Etsy Orange look. So that users understand the box's purpose, we make sure to display the length on each side. We use SceneKit's SCNNode class to create the pills displaying our measurements. Users drag or tap the measuring box to move it around, and it can rotate on all axes – all made possible by having a different animation for each type of rotation using SCNActions. Rotation is a must-have feature: when we place the measuring box in a user's space, we may not always be able to get the orientation correct. We might, as in the illustration below, place a side table vertically on the floor instead of horizontally. Our users would have a poor experience of the measuring tool if they couldn't adjust for that. (Note that you may see some blinking yellow dots when you try out the AR experience: these are called feature points, and they're useful for debugging, to give us an idea of what surfaces are successfully being detected.) Environment occlusion In addition to ensuring the box would be scaled correctly, we wanted it to \"sit\" as realistically as possible in the real world, so we built in scene occlusion. When a user places the measuring box in a room with other furniture, scene occlusion lets it interact with real-life objects as if the box were actually there. Users get valuable information this way about how an item will fit in their space. Will that end table go between the wall and couch? Will it be tall enough to be visible from behind the couch? (As demonstrated below, the table will indeed be tall enough.) Environment occlusion became a possibility with LiDAR, a method of determining depth using laser light. Although LiDAR has been around for a few decades, used to map everything from archeological sites to agricultural fields, Apple only included LiDAR scanners in iPhones and iPads beginning in 2020, with the 4th-generation iPad Pro and the iPhone 12 Pro. An iPhone’s LiDAR scanner retrieves depth information from the area it scans and converts it into a series of vertices which connect to form a mesh (or a surface). To add occlusion to our SpriteKit-backed AR feature, we convert the mesh into a 3D object and place it (invisibly to the user) in the environment shown on their phone. As the LiDAR scanner measures more of the environment, we have more meshes to convert into objects and place in 3D. The video below shows an AR session where for debugging purposes we assign a random color to the detected mesh objects. Each different colored outline shown over a real-world object represents a different mesh. Notice how, as we scan more of the room, the device adds more mesh objects as it continues drawing out the environment. The user's device uses these mesh objects to know when and how to occlude the measuring box. Essentially, these mesh objects help determine where the measuring box is relative to all the real-world items and surfaces it should respect. Taking advantage of occlusion gives our users an especially realistic AR experience. In the side-by-side comparison below, the video on the left shows how mesh objects found in the environment determine what part of the measuring box will be hidden as the camera moves in front of the desk. The video on the right shows the exact same thing, but with the mesh objects hidden. Mesh objects are visible Mesh objects are hidden Closing thoughts This project took a 2D concept, our Wall View experience, and literally extended it into 3-dimensional space using Apple’s newest AR tools. And though the preparatory work we did improving our dimension parser may not be anything to look at, without the consistency and accuracy of that parsed information this newly realistic and interactive tool would not have been possible. Nearly a million Etsy items now have real-size AR functionality added to them, viewed by tens of thousands of Etsy users every week. As our marketplace evolves and devices become more powerful, working on features like this only increases our appetite for more and brings us closer to providing our users with a marketplace that lets them make the most informed decision about their purchases effortlessly. Special shoutout to Jacob Van Order and Siri McClean as well as the rest of our team for their work on this.",
    "author": "Pedro Michel",
    "published": "Mon, 18 Sep 2023 16:11:58 -0400",
    "image": "https://i.etsystatic.com/inv/1e68db/5342416361/inv_fullxfull.5342416361_dh5zp24h.jpg?version=0",
    "source": "https://codeascraft.com/feed/atom/",
    "categories": null
  },
  {
    "id": "606305c5-0206-4d7c-9be0-40d1f515a80c",
    "title": "The So-fine Real-time ML Paradigm",
    "link": "https://www.etsy.com/codeascraft/the-so-fine-real-time-ml-paradigm?utm_source=OpenGraph\u0026utm_medium=PageTools\u0026utm_campaign=Share",
    "description": "Introduction Each year, Etsy hosts an event known as “CodeMosaic” - an internal hackathon in which Etsy admin propose and build bold advances quickly in our technology across a number of different themes. People across Etsy source ideas, organize into teams, and then have 2-3 days to build innovative proofs-of-concept that might deliver big wins for Etsy’s buyers and sellers, or improve internal engineering systems and workflows. Besides being a ton of fun, CodeMosaic is a time for engineers to pilot novel ideas. Our team’s project this year was extremely ambitious - we wanted to build a system for stateful machine learning (ML) model training and online machine learning. While our ML pipelines are no stranger to streaming data, we currently don’t have any models that learn in an online context - that is, that can have their weights updated in near-real time. Stateful training updates an already-trained ML model artifact incrementally, sparing the cost of retraining models from scratch. Online learning updates model weights in production rather than via batch processes. Combined, the two approaches can be extremely powerful. A study conducted by Grubhub in 2021 reported that a shift to stateful online learning saw up to a 45x reduction in costs with a 20% increase in metrics, and I’m all about saving money to make money. Day 1 - Planning Of course, building such a complex system would be no easy task. The ML pipelines we use to generate training data from user actions require a number of offline, scheduled batch jobs. As a result it takes quite a while, 40 hours at a minimum, for user actions to be reflected in a model’s weights. To make this project a success over the course of three days, we needed to scope our work tightly across three streams: Real-time training data - the task here was to circumvent the batch jobs responsible for our current training data and get attributions (user actions) right from the source. A service to consume the data stream and learn incrementally - today, we heavily leverage TensorFlow for model training. We needed to be able to load a model's weights into memory, read data from a stream, update that model, and incrementally push it out to be served online. Evaluation - we'd have to make a case for our approach by validating its performance benefits over our current batch processes. No matter how much we limited the scope it wasn't going to be easy, but we broke into three subteams reflecting each track of work and began moving towards implementation. Day 2 - Implementation The real-time training data team began by looking far upstream of the batch jobs that compute training data - at Etsy’s Beacon Main Kafka stream, which contains bot-filtered events. By using Kafka SQL and some real-time calls to our streaming feature platform, Rivulet, we figured we could put together a realistic approach to solving this part of the problem. Of course, as with all hackathon ideas it was easier said than done. Much of our feature data uses the binary avro data format for serialization, and finding the proper schema for deserializing and joining this data was troublesome. The team spent most of the second day munging the data in an attempt to join all the proper sources across platforms. And though we weren't able to write the output to a new topic, the team actually did manage to join multiple data sources in a way that generated real-time training data! Meanwhile the team focusing on building the consumer service to actually learn from the model faced a different kind of challenge: decision making. What type of model were we going to use? Knowing we weren’t going to be able to use the actual training data stream yet - how would we mock it? Where and how often should we push new model artifacts out? After significant discussion, we decided to try using an Ad Ranking model as we had an Ads ML engineer in our group and the Ads models take a long time to train - meaning we could squeeze a lot of benefit out of them by implementing continuous training. The engineers in the group began to structure code that pulled an older Ads model into memory and made incremental updates to the weights to satisfy the second requirement. That meant that all we had left to handle was the most challenging task - evaluation. None of this architecture would mean anything if a model that was trained online performed worse than the model retrained daily in batch. Evaluating a model with more training training periods is also more difficult, as each period we’d need to run the model on some held-out data in order to get an accurate reading without data leakage. Instead of performing an extremely laborious and time-intensive evaluation for continuous training like the one outlined above, we chose to have a bit more fun with it. After all, it was a hackathon! What if we made it a competition? Pick a single high-performing Etsy ad and see which surfaced it first, our continuously trained model or the boring old batch-trained one? We figured if we could get a continuously trained model to recommend a high-performing ad sooner, we’d have done the job! So we set about searching for a high-performing Etsy ad and training data that would allow us to validate our work. Of course, by the time we were even deciding on an appropriate advertised listing, it was the end of day two, and it was pretty clear the idea wasn’t going to play out before it was time for presentations. But still a fun thought, right? Presentation takeaways and impact Day 3 gives you a small window for tidying up work and slides, followed by team presentations. At this point, we loosely had these three things: Training data from much earlier in our batch processing pipelines A Kafka consumer that could almost update a TensorFlow model incrementally A few click attributions and data for a specific listing In the hackathon spirit, we phoned it in and pivoted towards focusing on the theoretical of what we’d been able to achieve! The 1st important potential area of impact was cost savings. We estimated that removing the daily “cold-start” training and replacing it with continuous training would save about $212K annually in Google Cloud costs for the 4 models in ads alone. This is a huge potential win - especially when coupled with the likely metrics gains coming from more reactive models. After all, if we were able to get events to models 40 hours earlier, who knows how much better our ranking could get! Future directions and conclusion Like many hackathon projects, there's no shortage of hurdles getting this work into a production state. Aside from the infrastructure required to actually architect a continuous-training pipeline, we’d need a significant number of high-quality checks and balances to ensure that updating models in real-time didn’t lead to sudden degradations in performance. The amount of development, number of parties involved, and the breadth of expertise to get this into production would surely be extensive. However, as ML continues to mature, we should be able to enable more complex architectures with less overhead.",
    "author": "Kyle Gallatin",
    "published": "Tue, 5 Sep 2023 15:55:41 -0400",
    "image": "https://i.etsystatic.com/inv/d8a51b/5272462297/inv_fullxfull.5272462297_1e6jr1i2.jpg?version=0",
    "source": "https://codeascraft.com/feed/atom/",
    "categories": null
  },
  {
    "id": "5f5ef8bc-ac3d-4cb1-bf77-e83e99cb70a6",
    "title": "Leveraging Real-Time User Actions to Personalize Etsy Ads",
    "link": "https://www.etsy.com/codeascraft/leveraging-real-time-user-actions-to-personalize-etsy-ads?utm_source=OpenGraph\u0026utm_medium=PageTools\u0026utm_campaign=Share",
    "description": "Introduction Personalization is vital to connect our unique marketplace to the right buyer at the right time. Etsy has recently introduced a novel, general approach to personalizing ML models based on encoding and learning from short-term (one-hour) sequences of user actions through a reusable three-component deep learning module, the adSformer Diversifiable Personalization Module (ADPM). We describe in detail our method in our recent paper, with an emphasis on personalizing the CTR (clickthrough rate) and PCCVR (post-click conversion rate) ranking models we use in Etsy Ads. Here, we'd like to present a brief overview. Etsy offers its sellers the opportunity to place sponsored listings as a supplement to the organic results returned by Etsy search. For sellers and buyers alike, it’s important that those sponsored listings be as relevant to the user’s intent as possible. As Figure 1 suggests, when it comes to search, a “jacket” isn't always just any jacket: Figure 1: Ad results for the query jacket for a user who has recently interacted with mens leather jackets. In the top row, the results without personalized ranking; in the bottom row, the results with session personalization. For ads to be relevant, they need to be personalized. If we define a “session” as a one-hour shopping window, and make a histogram of the total number of listings viewed across a sample of sessions (Fig. 2), we see that a power law distribution emerges. The vast majority of users interact with only a small number of listings before leaving their sessions. Figure 2: A histogram of listing views in a user session. Most users see fewer than ten listings in a one-hour shopping window. Understood simply in terms of listing views, it might seem that session personalization would be an insurmountable challenge. To overcome this challenge we leverage a rich stream of user actions surrounding those views and communicating intent, for example: search queries, item favorites, views, add-to-carts, and purchases. Our rankers can optimize the shopping experience in the moment by utilizing streaming features being made available within seconds of these user actions. Consider a hypothetical sequence of lamps viewed by a buyer within the last hour. Figure 3: An example of a user session with the sequence of items viewed over time. 70s orange lamp ---\u003e retro table lamp --\u003e vintage mushroom lampNot only is the buyer looking within a particular set of lamps (orange, mushroom-shaped), but they arrived at these lamps through a sequence of query refinements. The search content itself contains information about the visual and textual similarities between the listings, and the order in which the queries occur adds another dimension of information. The content and the sequence of events can be used together to infer what is driving the user’s current interest in lamps. adSformer Diversifiable Personalization Module The adSformer Diversifiable Personalization Module (ADPM), illustrated on the left hand side of Figure 4, is Etsy's solution for using temporal and content signals for session personalization. A dynamic representation of the user is generated from a sequence of the user's most recent streamed actions. The input sequence contains item IDs, queries issued and categories viewed. We consider the item IDs, queries, and categories as “entities” that have recent interactions within the session. For each of these entities we consider different types of actions within a user session–views, recent cart-adds, favorites, and purchases–and we encode each type of entity/action pair separately. This lets us capture fine-grained information about the user's interests in their current session. Figure 4: On the left, a stack representing the ADPM architecture. The right part of the figure is a blown-out illustration of the adSformer Encoder component.Through ablation studies we found that ADPM’s three components work together symbiotically to outperform experiments where each component is considered independently. Furthermore, in deployed applications, the diversity of learned signals improves robustness to input distribution shifts. It also leads to more relevant personalized results, because we understand the user from multiple perspectives. Here is how the three components operate: Component One: The adSformer Encoder The adSformer encoder component uses one or more custom adSformer blocks illustrated in the right panel of Figure 4. This component learns a deep, expressive representation of the one-hour input sequence. The adSformer block modifies the standard transformer block in the attention literature by adding a final global max pooling layer. The pooling layer downsamples the block’s outputs by extracting the most salient signals from the sequence representation instead of outputting the fully concatenated standard transformer output. Formally, for a user, for a one-hour sequence S of viewed item IDs, the adSformer encoder is defined as the output of a stack of layers g(x), where x is the output of each previous layer and o1 is the component’s output. The first layer is an embedding of item and position. Component Two: Pretrained Representations. Component two employs pretrained embeddings of item IDs that users have interacted with together with average pooling to encode the one-hour sequence of user actions. Depending on downstream performance and availability, we choose from multimodal (AIR) representations and visual representations. Thus component two encodes rich image, text and multimodal signals from all the items in the sequence. The advantage of leveraging pretrained item embeddings is that these rich representations are learned efficiently offline using complex deep learning architectures that would not be feasible online in real time. Formally, for a given one-hour sequence of m1hr item IDs pretrained d-dimensional embedding vectors e, we compute a sequence representation as Component Three: Representations Learned \"On the Fly\" The third component of ADPM introduces representations learned for each sequence from scratch in its own vector space as part of the downstream models. This component learns lightweight representations for many different sequences for which we do not have pretrained representations available, for example sequences of favorited shop ids. Formally, for z one-hour sequences of entities acted upon S we learn embeddings for each entity and sequence to obtain the component’s output o3 as The intermediary outputs of the three components are concatenated to form the final ADPM output, the dynamic user representation u. This user representation is then concatenated to the input vector in various rankers or recommenders we want to real-time personalize. Formally, for one-hour variable length sequences of user actions S, and ADPM’s components outputs o From a software perspective, the module is implemented as a Tensorflow Keras module which can easily be employed in downstream models through a simple import statement. Pretrained Representation Learning The second component of the ADPM includes pretrained representations. We rely on several pretrained representations: image embeddings, text embeddings, and multimodal item representations. Visual Representations In Etsy Ads, we employ image signals across a variety of tasks, such as visually similar candidate generation, search by image, as inputs for learning other pretrained representations, and in the ADPM's second component. To effectively leverage the rich signal encoded in Etsy Ads images we train image embeddings in a multitask classification learning paradigm. By using multiple classification heads, such as taxonomy, color, and material, our representations are able to capture more diverse information about the image. So far we have derived great benefit from our multitask visual embeddings, trained using a lightweight EfficientNetB0 architecture, and weights pretrained on ImageNet as backbone. We replaced the final layer with a 256-dimensional convolutional block, which becomes the output embedding. We apply image random rotation, translation, zoom, and a color contrast transformation to augment the dataset during training. We are currently in the process of updating the backbone architectures to efficient vision transformers to further improve the quality of the image representations and the benefits derived in downstream applications, including the ADPM. Ads Information Retrieval Representations Ads Information Retrieval (AIR) item representations encode an item ID through a metric learning approach, which aims to learn a distance function or similarity metric between two items. Standard approaches to metric learning include siamese networks, contrastive loss, and triplet loss. However, we found more interpretable results using a sampled in-batch softmax loss. This method treats each batch as a classification problem pairing all the items in a batch that were co-clicked. A pseudo-two-tower architecture is used to encode the source items and candidate items towers which share all trainable weights across both towers. Each item tower captures and encodes information about an item’s title, image, primary color, attributes, category, etc. This information diversity is key to our personalization outcomes. By leveraging a variety of data sources, the system can identify patterns and insights that would be missed by a more limited set of inputs. ADPM-Personalized Sponsored Search ADPM’s effectiveness and generality is demonstrated in the way we use it to personalize the CTR prediction model in EtsyAds’ Sponsored Search. The ADPM encodes reverse-chronological sequences of recent user actions (in the sliding one-hour window we've discussed), anywhere on Etsy, for both logged-in and logged-out users. We concatenate ADPM’s output, the dynamic user representation, to the rest of the wide input vector in the CTR model. To fully leverage this even wider input vector, a deep and cross (DCN) interaction module is included in the overall CTR architecture. If we remove the DCN module, the CTR’s model ROC-AUC drops by 1.17%. The architecture of the ADPM-personalized CTR prediction model employed by EtsyAds in sponsored search is given in Figure 5. (We also employ the ADPM to personalize the PCCVR model with a similar architecture, which naturally led to ensembling the two models in a multitask architecture, a topic beyond the scope of this blog post.) Figure 5: An example of how the ADPM is used in a downstream ranking modelThe ADPM-personalized CTR and PCCVR models outperformed the CTR and PCCVR non-personalized production baselines by +2.66% and +2.42%, respectively, in offline Area Under the Receiver Operating Characteristic Curve (ROC-AUC). Following the robust online gains in A/B tests, we deployed the ADPM-personalized sponsored search system to 100% of traffic. Conclusion The adSformer diversifiable personalization module (ADPM) is a scalable, general approach to model personalization from short-term sequences of recent user actions. Its use in sponsored search to personalize our ranking and bidding models is a milestone for EtsyAds, and is delivering greater relevance in sponsored placements for the millions of buyers and sellers that Etsy's marketplace brings together. If you would like more details about ADPM, please see our paper.",
    "author": "Alaa Awad",
    "published": "Fri, 14 Jul 2023 15:54:41 -0400",
    "image": "https://i.etsystatic.com/inv/89d8d6/5048078712/inv_fullxfull.5048078712_he5407ld.jpg?version=0",
    "source": "https://codeascraft.com/feed/atom/",
    "categories": null
  },
  {
    "id": "c4a9f704-3545-4b44-95bc-a54615eeecd6",
    "title": "The Problem with Timeseries Data in Machine Learning Feature Systems",
    "link": "https://www.etsy.com/codeascraft/the-problem-with-timeseries-data-in-machine-learning-feature-systems?utm_source=OpenGraph\u0026utm_medium=PageTools\u0026utm_campaign=Share",
    "description": "Introduction The Feature Systems team at Etsy is responsible for the platform and services through which machine learning (ML) practitioners create, manage and consume feature data for their machine learning models. We recently made new real-time features available through our streaming feature platform, Rivulet, where we return things like “most recent add-to-carts.” While timeseries data itself wasn’t new to our system, these newer features from our streaming feature service would be the first timeseries inputs to be supplied to our ML models themselves to inform search, ads, and recommendations use cases. Not too long after we made these features available to users for ML model training, we received a message from Harshal, an ML practitioner on Recommendations, warning us of \"major problems\" lying in wait. Figure 1. A user message alerting us to the possibility of \"major problems for downstream ML models\" in our use of the timestamp datatype. Harshal told us our choice to export real-time features using a timestamp datatype was going to cause problems in downstream models. The training data that comes from our offline feature store uses the binary Avro file format, which has a logical type called timestamp we used to store these features, with an annotation specifying that they should be at the millisecond precision. The problem, we were being informed, is that this Avro logical type would be interpreted differently in different frameworks. Pandas, NumPy, and Spark would read our timestamps, served with millisecond precision, as datetime objects with nanosecond precision - creating the possibility of a training/serving skew. In order to prevent mismatches, and the risk they posed of silent failures in production, the recommendation was that we avoid the timestamp type entirely and serve our features as a more basic numeric data type, such as Longs. Getting to the root of the issue We started the way software engineers usually do, attempting to break down the problem and get to root causes. Before changing data types, we wanted to understand if the misinterpretation of the precision of the timestamp was an issue with Python, Spark, or even a misuse of the Avro timestamp annotation that we were using to specify the millisecond precision. We were hesitant to alter the data type of the feature without an in-depth investigation. After all, timestamp and datetime objects are typically passed around between systems precisely to resolve inconsistencies and improve communication. We started by attempting to put together a diagram of all the different ways that timestamp features were represented across our systems. The result was a diagram like this: Figure 2. A diagram of all the objects/interpretations of timestamp features across our systems. Though the user only ever sees microseconds, between system domains we see a diversity of representations. While it was clear Spark and other frameworks weren’t respecting the timestamp annotation that specified millisecond precision, we began to realize that that problem was actually a symptom of a larger issue for our ML practitioners. Timestamp features can take a number of different forms before finally being passed into a model. In itself this isn't really surprising. Every type is language-specific in one way or another - the diagram would look similar if we were going to be serializing integers in Scala and deserializing integers in Python. However, the overall disparity between objects is much greater for complex datetime objects than it is for basic data types. There is simply more room for interpretation with datetime objects, and less certainty about how they translate across system boundaries, and for our use case in training ML models uncertainty was exactly what we did not want. As we dug deeper into the question, it started to become clear that we weren’t trying to resolve a specific bug or issue, but reduce the amount of toil for ML practitioners who would be consuming timestamp features long-term. While the ISO-8061 format is massively helpful for sharing datetime and timestamp objects across different systems, it’s less helpful when all you’re looking for is an integer representation at a specific precision. Since these timestamps were features of a machine learning model, we didn’t need all the complexity that datetime objects and timestamp types offered across systems. The use case for this information was to be fed as an integer of a specific precision into an ML model, and nothing more. Storing timestamps as logical types increased cognitive overhead for ML practitioners and introduced additional risk that training with the wrong precision could degrade model quality during inference. Takeaways This small request bubbled into a much larger discussion during one of our organization’s architecture working group meetings. Although folks were initially hesitant to change the type of these features, by the end of the meeting there was a broad consensus that it would be desirable to represent datetime features in our system as a primitive numeric type (unix timestamps with millisecond precision) to promote consistency between model training and inference. Given the wide range of training contexts that all of our features are used in, we decided it was a good idea to promote consistency between training and inference by standardizing on primitive types more generally. Members of the Feature Systems team also expressed a desire to improve documentation around how features are transformed end-to-end throughout the current system to make things easier for customers in the future. We designed our ML features with abstraction and interoperability in mind, as software engineers do. It’s not that ML isn’t a software engineering practice, but that it’s a domain in which the specific needs of ML software didn’t match our mental model of best practices for the system. Although ML has been around for some time, the rapidly-changing nature of the space means the nuance of many ML-specific guidelines are still ill-defined. I imagine this small cross-section of difficulty applying software practices to ML practices will be the first of many as ML continues its trajectory through software systems of all shapes and sizes.",
    "author": "Kyle Gallatin",
    "published": "Fri, 23 Jun 2023 16:30:41 -0400",
    "image": "https://i.etsystatic.com/inv/8b03b2/5028042330/inv_fullxfull.5028042330_7o47f3m8.jpg?version=0",
    "source": "https://codeascraft.com/feed/atom/",
    "categories": null
  },
  {
    "id": "ea62abd5-4305-4286-96ce-622340a0a159",
    "title": "From Image Classification to Multitask Modeling: Building Etsy’s Search by Image Feature",
    "link": "https://www.etsy.com/codeascraft/from-image-classification-to-multitask-modeling-building-etsys-search-by-image-feature?utm_source=OpenGraph\u0026utm_medium=PageTools\u0026utm_campaign=Share",
    "description": "Etsy announced the arrival of a powerful new image-based discovery tool on Etsy’s mobile apps. The ability to search by image gives buyers the opportunity to search the Etsy marketplace using their own photos as a reference. Tap the camera icon in the search bar to take a picture, and in a fraction of a second we’ll surface visually similar results from our inventory of nearly 100 million listings. Searching by image is being rapidly adopted throughout the e-commerce industry, and nowhere does it make more sense than on Etsy, where the uniqueness of our sellers’ creations can’t always be expressed easily with words. In this post we’ll give you a look at the machine-learning architecture behind our search by image feature and the work we did to evolve it. Overview In order to search a dataset of images using another image as the query, we first need to convert all those images into a searchable representation. Such a representation is called an embedding, which is a dense vector existing in some relatively low n-dimensional shared space. Once we have the embedding of our query image, and given the precomputed embeddings for our dataset of listing images, we can use any geometric distance metric to look up the closest set of listings to our query. This type of search algorithm is often referred to as a nearest-neighbor search. Figure 1. A plot that shows embeddings from a random sample of a thousand Etsy images. The embeddings have been reduced to three dimensions so that they can be plotted. In this embedding space, bags and purses are embedded near each other. Separate clusters form around craft supply images on the left and home goods images on the right. At a high level, the visual retrieval system works by using a machine learning model to convert every listing’s image into an embedding. The embeddings are then indexed into an approximate nearest-neighbor (ANN) system which scores a query image for similarity against Etsy's image embeddings in a matter of milliseconds. Multitask Vision Model To convert images to embeddings we use a convolutional neural network (CNN) that has been trained on Etsy data. We can break our approach into three components: the model architecture, the learning objective, and the dataset. Model Architecture Training the entire CNN from scratch can be costly. It is also unnecessary as the early layers of a pretrained CNN can be shared and reused across new model tasks. We leveraged a pre-trained model and applied transfer learning to fine-tune it on Etsy data. Our approach was to download pre-trained weights into the model and replace the “head” of the model with one for our specific task. During training, we then “freeze” most of the pre-trained weights, and only optimize those for the new classification head as well as for the last few layers of the CNN. The particular pre-trained model we used is called EfficientNet: a family of CNNs that have been tuned in terms of width, depth, and resolution, all to achieve optimal tradeoffs between accuracy and efficiency. Learning Objective A proven approach to learning useful embeddings is to train a model on a classification task as a proxy. Then, at prediction time, extracting the penultimate layer just before the classification head produces an embedding instead of a classification probability. Our first attempt at learning image embeddings was to train a model to categorize product images. Not surprisingly, our tests showed that these embeddings were particularly useful in surfacing listings from the same taxonomy. Often though the results were not “visually cohesive”: items were surfaced that didn't match well with the query image in color, material or pattern. To mitigate this problem we switched to a deep metric learning approach utilizing triplet loss. In this approach, the model is trained on triplets of examples where each triplet consists of an anchor, a positive example, and a negative example. After generating an embedding for each of the three examples, the triplet loss function tries to push the anchor and positive examples closer together, while pushing the negative example farther away. In our case, we used pairs of images from the same item as the anchor and positive examples, and an image from a different listing as the negative example. With these triplet embeddings, tests showed that our listings were now visually cohesive, displaying similar colors and patterns. Figure 2. The top row shows a query image. Middle row is a sample of nearest neighbors from image classification learned embeddings. Bottom row is a sample of nearest neighbors from triplet embeddings. The triplet embeddings show improved color and pattern consistency over image classification. But these embeddings lacked categorical accuracy compared to the classification approach. And the training metrics for the triplet approach offered less observability, which made it harder for us to assess the model's learning progress than with classification. Figure 3. While triplet metrics mostly revolve around the change in distances between the anchor and positive/negative examples, classification provides accuracy metrics that can be a proxy for how well the model fares in the task’s specific domain, and are simpler to reason about Taxonomy is not something we can tolerate our model being sloppy about. Since classification had already proven its ability to retrieve items of the same type, we decided to see if a multitask classification approach could be made to produce visually consistent results. Instead of having a single classification head on top of the pre-trained model, we attach separate heads for multiple categorization tasks: Item category (e.g. accessories, home \u0026 living), fine-grained item category (belt buckles, dining chairs), primary color, and other item attributes. Loss and training/evaluation metrics are then computed for each task individually while the embedding weights are shared across all of them. One challenge we faced in implementing this approach was that some optional seller input attributes, such as item color and material, can be sparse. The more tasks we added, the harder it was for us to sample training data equally across classes. To overcome this limitation we implemented a data sampler that reads from entirely disjoint datasets, one for each task, and each with its own unique set of labels. At training time, the sampler combines an equal number of examples from each dataset into every minibatch. All examples then pass through the model, but loss from each classification head is calculated only for examples from the head’s corresponding source dataset. Figure 4. Multitask learning architecture Returning to the classification paradigm meant that we could once again rely on accuracy metrics as a proxy for gauging and comparing models’ understanding of the domain of each task. This greatly simplifies the process of iterating and improving the model. Dataset The embeddings produced by multitask classification were now encapsulating more information about the visual attributes we added tasks for. This meant that when we searched using an embedding of some Etsy listing image, our results were both categorically and visually cohesive. However, when we talk about search by image, we're not expecting users to search from Etsy listing photos - the whole point of this is that the user is holding a camera. Photos uploaded by sellers are typically high quality, have professional lighting, and are taken over a white or premeditated background. But photos from a user's phone might be blurry, or poorly lit, or on a diversity of backgrounds that distract from the object the user is searching for. Deep learning is a powerful and useful tool, but training deep learning models is highly susceptible to biases in the data distribution, and training on seller-provided product images was biasing us away from user photos. Fortunately, Etsy allows users to post reviews of items they’ve purchased, and those reviews can have photos attached: photos taken by buyers, often with their phone cameras, very much like the images we expect to see used when searching by image. So we plugged in an additional classification task using the dataset of review photos, expanding the distribution of images our model learns about in training. And indeed with this new component in place we saw significant improvement in the model’s ability to surface visually relevant results. Figure 5. Multitask learning architecture with the added review photos dataset and classification head Inference Pipeline and Serving Our inference pipeline is an orchestrated ensemble of data processing jobs that turns the entire Etsy inventory of nearly 100M active listings into a searchable framework. We construct an approximate nearest neighbor (ANN) index using an inverted file (IVF) algorithm. The IVF algorithm divides the embedding space into clusters of listings. Later, at query time, we only look at the nearest subset of clusters to the query embedding, which greatly reduces search latency while only marginally impairing accuracy. Figure 6. DAG tasks to generate ANN index While the listing images are indexed in batch offline, the query photo is taken by users on the fly, so we have to infer those in real time - and fast. Due to the size of CNN models, it can take a long time to inference on a CPU. To overcome this hurdle we partnered with Etsy’s ML platform team to bring the first use case of real-time GPU inferencing at Etsy. Figure 7. Request flow We hope this feature gives even more of our buyers a new way to find exactly what they’re looking for on Etsy. So, the next time you come across something you love, snap a photo and search by image on Etsy! Acknowledgements This project started as part of CodeMosaic, Etsy’s annual “hackathon” week, where engineers can practice new skills and drive projects not necessarily related to their day-to-day work. We’re proud that we were able to take a proof-of-concept hackathon project, and turn it into a production feature to help make the millions of unique and special items on Etsy more discoverable for buyers. In particular, we’d like to thank the App Core Experience team for taking a chance and prioritizing this project. We could not have done it without the buy-in of leadership and help from our engineering enablement teams. More on this in our next article!",
    "author": "Eden Dolev",
    "published": "Fri, 26 May 2023 16:32:49 -0400",
    "image": "https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExNWQ5NWVlODU5NmJlMDQxMDMzMzQ4ZDgyMjFiY2E1NmEyYTkzMDIxYiZlcD12MV9pbnRlcm5hbF9naWZzX2dpZklkJmN0PWc/6i6SqygPXg8iWfq8Q6/giphy.gif",
    "source": "https://codeascraft.com/feed/atom/",
    "categories": null
  },
  {
    "id": "54c75eff-bac9-4fd4-843a-a22ce6c37272",
    "title": "How We Built a Multi-Task Canonical Ranker for Recommendations at Etsy",
    "link": "https://www.etsy.com/codeascraft/how-we-built-a-multi-task-canonical-ranker-for-recommendations-at-etsy?utm_source=OpenGraph\u0026utm_medium=PageTools\u0026utm_campaign=Share",
    "description": "There are more than 100 million unique listings on Etsy, so we provide buyers recommendations to help them find that one special item that stands out to them. Recommendations are ubiquitous across Etsy, tailored for different stages of a user's shopping mission. We call each recommendation set a module, and there are hundreds of them both on the web and on mobile apps. These help users find trending items, pick up shopping from where they left off, or discover new content and interests based on their prior activity. Modules in an enterprise-scale recommendation system usually work in two phases: candidate set selection and candidate set ranking. In the candidate set selection phase, the objective is to retrieve a small set of relevant items out of the entire inventory, as quickly as possible. The second phase then ranks the items in the candidate set using a more sophisticated machine learning model, typically with an emphasis on the user's current shopping mission, and decides on the best few items to offer as recommendations. We call these models rankers and that's the focus of this post. Figure 1. Two recommendation modules sharing the same item page. The \"more from this shop\" module recommends similar items from the shop the user is currently looking at; \"you may also like\" finds relevant items from across Etsy shops. Rankers score candidate items for relevance based on both contextual attributes, such as the user's recent purchases and most clicked categories, as well as item attributes, such as an item's title and taxonomy. (In machine learning we refer to such attributes as features.) Rankers are optimized against a specific user engagement metric–clickthrough rate, for example, or conversion rate–and trained on users' interactions with the recommendation module, which is known as implicit feedback. Etsy has historically powered its recommendation modules on a one-to-one basis: one ranker for each module, trained exclusively on data collected from that module. This approach made it easy to recommend relevant items for different business purposes, but as we got into the hundreds of modules it became burdensome. On the engineering side, the cost of maintaining and iterating on so many rankers, running hundreds of daily pipelines in the process, is prohibitive. And as it becomes harder to iterate, we could lose opportunities to incorporate new features and best practices in our rankers. Without a solution, eventually the quality of our recommendations could degrade and actually do harm to the user experience. To address this potential problem, we pivoted to what we call canonical rankers. As with single-purpose rankers, these are models optimized for a particular user-engagement metric, but the intention is to train them so that they can power multiple modules. We expect these rankers to perform at least on par with module-specific rankers, while at the same time being more efficient computationally, and less costly to train and maintain. A Canonical Frequency Ranker We want Etsy to be not just an occasional stop for our users but a go-to destination, and that means paying attention to what will inspire future shopping missions after a user is finished with their current one. Our first canonical ranker was focused on visit frequency. We wanted to be able to identify latent user interests and surface recommendations that could expose a user to the breadth of inventory on Etsy at moments that might impact a decision to return to the site: for example, showing them complementary items right after their purchase, to suggest a new shopping journey ahead. Data and goal of the model Compared to metrics like conversion rate, revisit frequency is difficult to optimize for: there are no direct and immediate signals within a given visit session to indicate that a buyer is likely to return. There are, however, a multitude of ways for an Etsy user to interact with one of our items: they can click it, favorite it, add it to a collection or to a shopping cart, and of course they can purchase it. Of all of these, data analysis suggests that favoriting is most closely related to a user's intention to come back to the site, so we decided that our ranker would optimize on favorite rate as the best available surrogate for revisit frequency. Favoriting doesn't always follow the same pattern as purchasing, though. And we needed to be wary of the possibility that favorites-based recommendations, not being closely enough related to what a user wanted to buy in their current session, might create a distraction and could actually jeopardize sales. It would be important for us to keep an eye on purchase rate as we developed our frequency ranker. We also had to find appropriate modules to provide training data for the new ranker. There are a lot of them, on both mobile and web, and they appear in a lot of different user contexts. Most mobile app users are signed in, for example, while a large proportion of desktop users aren't. Interaction patterns are different for different modules: some users land on an item page via external search, or from a Google ad, and they tend to look for specific items, whereas habitual mobile app users are more exploratory. It was important for us that the few modules we trained the frequency ranker on should be as representative as possible of the data generated by these many different modules occurring on many different pages and platforms. We wanted to be confident that our ranker would really be canonical, and able to generalize from its training set to power a much wider range of modules. Model structure The requirement that our ranker should optimize for favorites, while at the same time not reducing purchase rate, naturally lent itself to a multi-task learning framework. For a given item we want to predict both the probability of the item being favorited and that of it being purchased. The two scores are then combined to produce the final ranking score. This sort of framework is not directly supported by the tree-based models that have been powering Etsy's recommendations in the past. However, neural models have many advantages over tree-based models and one of them is their ability to handle multi-task architectures. So it was a natural call to build our frequency ranker on a neural model. Favoriting and purchasing are obviously not completely unrelated tasks, so it is reasonable to assume that they share some common factors. This assumption suggests a shared-bottom structure, as illustrated on the right in the figure below: what the tasks have in common is expressed in shared layers at the bottom of the network, and they diverge into separate layers towards the top. A challenge that arises is to balance the two tasks. Both favorites and purchases are positive events, so sample weights can be assigned in both the loss function computation and the final score step. We devoted a lot of manual effort to finding the optimal weights for each task, and this structure became our first milestone. The simple shared-bottom structure proved to be an efficient benchmark model. To improve the model's performance, we moved forward with adding an expert layer following the Multi-gate Mixture Model of Experts (MMOE) framework proposed by Zhao et al. In this framework, favorites and purchases have more flexibility to learn different representations from the embeddings, which leads to more relevant recommendations with little extra computation cost. Figure 2. Model input and structure. The table on the left illustrates how training data is formatted, with samples from multiple modules concatenated and passed in to the ranker. On the right, a workflow that describes the multi-task model structure. A module name is appended on each layer. Building a canonical ranker In addition to using data from multiple modules, we also took training data and model structure into account when developing the canonical ranker. We did offline tests of how a naive multi-task model performed on eight different modules, where the training data was extracted from only a subset of them. Performance varied a lot, and on several modules we could not achieve parity against the existing production ranker. As expected, modules that were not included in the training data had the worst performance. We also observed that adding features or implementing an architectural change often led to opposite results on different modules. We took several steps to address these problems: We added a feature, module_name, representing which module each sample comes from. Given how much patterns can vary across different modules, we believe this is a critical feature, and we manually stack it in each layer of the neural net. It’s possible that the module_name passed to the ranker during inference is not one that it saw during training. (Remember that we only train the model on data from a subset of modules.) We account for this by randomly sampling 10% of the training data and replacing the module_name feature with a dummy name, which we can use in inference to cover that training gap when it occurs. User segments distribution and user behaviors vary a lot across modules, so it’s important to keep a balance of training data across different user segments. We account for this during training data sampling. We assign different weights to different interaction types, (e.g., impressions, clicks, favorites, and purchases), and the weights may vary depending on module. The intuition is that the correlation between interactions may be different across modules. For example, click may show the same pattern as favorite on module X, but a different pattern on module Y. To help ensure that the canonical ranker can perform well on all modules, we carefully tune the weights to achieve a balance. Launching experiments After several iterations, including pruning features to meet latency requirements and standardizing the front-end code that powers recommendation modules, in Q2 of 2022 we launched the first milestone ranker on an item page module and a homepage module. We observed as much as a 12.5% improvement on module-based favorite NDCG and significant improvements on the Etsy-wide favorite rate. And though our main concern was simply to not negatively impact purchases, we were pleased to observe significant improvements on purchase metrics as well as other engagement metrics. We also launched experiments to test our ranker on a few other modules, whose data are not used during training, and have observed that our ranker outperformed the module-specific rankers in production. These observations suggest that the model is in fact a successful canonical ranker. In Q3, we launched our second milestone model, which proved to be better than the first one and improved engagement even further. As of now, the ranker is powering multiple modules on both web and app, and we anticipate that it will be applied in more places. For machine learning at Etsy, the frequency ranker marks a paradigm shift in how we build recommendations. From the buyer's perspective, not only does the ranker provide more personalized recommendations, but employing the same ranker across multiple modules and platforms also helps guarantee a more consistent user experience. Moving forward, we’ll continue iterating on this ranker to improve our target metrics, making the ranker more contextual and testing other novel model architectures. Acknowledgements Thanks Davis Kim and Litao Xu for engineering support of the work and Murium Iqbal for internal review of this post. Special thanks to folks in recs-platform, feature-system, ml-platform and search-ranking.",
    "author": "Yuqing Pan",
    "published": "Tue, 18 Apr 2023 17:44:34 -0400",
    "image": "https://i.etsystatic.com/inv/ae5899/4818190250/inv_fullxfull.4818190250_m2ev3akd.jpg?version=0",
    "source": "https://codeascraft.com/feed/atom/",
    "categories": null
  },
  {
    "id": "e76e975f-6d99-4eff-b059-0bdde645e70c",
    "title": "Barista: Enabling Greater Flexibility in Machine Learning Model Deployment",
    "link": "https://www.etsy.com/codeascraft/barista-enabling-greater-flexibility-in-machine-learning-model-deployment?utm_source=OpenGraph\u0026utm_medium=PageTools\u0026utm_campaign=Share",
    "description": "Machine learning (ML) model deployment is one of the most common topics of discussion in the industry. That’s because deployment represents a meeting of two related but dramatically different domains, ML practice and software development. ML work is experimental: practitioners iterate on model features and parameters, and tune various aspects of their models to achieve a desired performance. The work demands flexibility and a readiness to change. But when they’re deployed, models become software: they become subject to the rigorous engineering constraints that govern the workings of production systems. The process can frequently be slow and awkward, and the interfaces through which we turn models into deployed software are something we devote a lot of attention to, looking for ways to save time and reduce risk. At Etsy, we’ve been developing ML deployment tools since 2017. Barista, the ML Model Serving team’s flagship product, manages lifecycles for all types of models - from Recommendations and Vision to Ads and Search. The Barista interface has evolved dramatically alongside the significant evolution in the scope and range of our ML practice. In this post we’ll walk you through the story of where we started with this interface, where we ended up, and where we intend to keep going. Arc 1: Managing Deployed Model Configs as Code Like many companies deploying ML models to production, Etsy’s ML platform team uses Kubernetes to help scale and orchestrate our services. At its core, Barista itself is a Python+Flask-based application that utilizes the Kubernetes Python API to create all the Kubernetes objects necessary for a scalable ML deployment (Deployment, Service, Ingress, Horizontal Pod Autoscaler, etc.). Barista takes a model deployment configuration specified by users and performs CRUD operations on model deployments in our Kubernetes cluster. The Barista UI in 2020In the initial version of Barista, the configurations for these deployments were managed as code, via a simple, table-based, read-only UI. Tight coupling of configuration with code is typically frowned upon, but on the scale of our 2017-era ML practice it made a lot of sense. Submitting config changes to the Barista codebase as PRs, which required review and approval, made it easy for us to oversee and audit those changes. It was no real inconvenience for us to require our relatively small corps of ML practitioners to be capable of adding valid configurations to the codebase, especially if it meant we always knew the who, what, and when of any action that affected production. Our old Python file where infrastructure configurations for model deployments were storedUpdating configurations in this tightly coupled system required rebuilding and deploying the entire Barista codebase. That process took 20-30 minutes to complete, and it could be further blocked by unrelated code errors or by issues in the build pipeline itself. As ML efforts at Etsy began to ramp up and our team grew, we found ourselves working with an increasing number of model configurations, hundreds of them ultimately, defined in a single large Python file thousands of lines long. With more ML practitioners making more frequent changes, a build process that had been merely time-consuming was becoming a bottleneck. And that meant we were starting to lose the advantage in visibility that had justified the configuration-as-code model for us in the first place. Arc 2: Decoupling Configs with a Database By 2021, we knew we had to make changes. Working with Kubernetes was becoming particularly worrisome. We had no safe way to quickly change Kubernetes settings on models in production. Small changes like raising the minimum replicas or CPU requests of a single deployment required users to push Barista code, seek PR approval, then merge and push that code to production. Even though in an emergency ML platform team members could use tools like kubectl or the Google Cloud Console to directly edit deployment manifests, that didn't make for a scalable or secure practice. And in general, supporting our change process was costing us significant developer hours. So we decoupled. We designed a simple CRUD workflow backed by a CloudSQL database that would allow users to make instantaneous changes through a Barista-provided CLI. Early architecture diagrams from the design docThe new system gave us a huge boost in productivity. ML practitioners no longer had to change configs in code, or develop in our codebases at all. They could perform simple CRUD operations against our API that were DB-backed and reflected by the deployments in our cluster. By appropriately storing both the live configuration of models and an audit log of operations performed against production model settings, we maintained the auditability we had in the PR review process and unblocked our ML practitioners to deploy and manage models faster. We designed the CLI to be simple to use, but it still required a certain degree of developer setup and acumen that was inconvenient for many of our ML practitioners. Even simple CLIs have their quirks, and they can be intimidating to people who don't routinely work on the command line. Increasingly the platform team was being called on to help with understanding and running CLI commands and fixing bash issues. It began to look as if we'd traded one support burden for another, and might see our productivity gains start to erode Arc 3: A UI Built Mostly by Non-UI People We’d always had an API, and now we had a database backing that API. And we had the command line: but what we needed, if we wanted wide adoption of our platform across an increasing user base, was a product. A purpose-built, user-friendly Web interface atop our API would let ML practitioners manage their model deployments directly from the browser, making CLI support unnecessary, and could compound the hours we'd saved moving to the CRUD workflow. So, in the summer of 2021 we started building it. The vaunted Barista web appNow this is certainly not the most aesthetic web app ever built – none of us on the ML platform team are front-end developers. What it is, though, is a fairly robust and complete tool for managing ML deployments on Kubernetes. We've given our users the ability to update anything to do with their models, from application settings to model artifacts to Kubernetes settings like CPU resources or replicas. The UI provides useful integrations to the Google Kubernetes Engine (GKE) console to render information about Pods in a deployment, and even integrates with the API of our cost tool so practitioners can understand the cost of serving their models live in production. In 2017, Barista was an HTML table and Python config file. Now, in 2023, it’s fully functioning web interface that integrates with multiple internal and third-party APIs to render useful information about models, and gives users complete and immediate control over their model deployments. Small changes that might have taken hours can happen in seconds now, unblocking users and reducing the toll of unnecessary workflows. Arc 4: Security and Cost The Barista UI made it so much easier to serve models at Etsy that it helped drive up the rate of experimentation and the number of live models. Suddenly, over the course of a few months, Barista was seeing hundreds of models both in production and on dev servers. And while we were thrilled about the product’s success, it also raised some concerns: specifically, that the simplicity and user-friendliness of the process might lead to spikes in cloud cost and an increase in misconfigurations. Serving a model on Barista accrues cost from Google Cloud, Etsy’s cloud computing service partner. This cost can range anywhere from a few hundred to thousands of dollars per month, depending on the model. While the costs were justified in production, in the development system we were seeing high daily CPU costs with relatively low usage of the environment, which was something that needed a remedy. Unfortunately, by default the Kubernetes Horizontal Pod Autoscaler, which we were using to manage our replicas, doesn't let you scale down below 1. With the increased flow of models through Barista, it became harder for ML practitioners to remember to remove resources when they were no longer needed–and unless a deployment was completely deleted and recreated, we were going to keep incurring costs for it. To mitigate the issue we added the Kube Downscaler to our development cluster. This allowed us to scale deployment replicas to zero both off-hours and on the weekends, saving us about $4k per week. We still had deployments sitting around unused on weekdays, though, so we decided to build Kube Downscaler functionality directly into Barista. This is a safety feature that pauses model deployments: by automatically scaling models in development to zero replicas after three hours, or on user demand. We're now seeing savings of up to 82% in dev cost during periods of inactivity. And we've avoided the runaway cost scenario (where models are not scaled down after test), which could have resulted in annualized costs in excess of $500k. How to use the Barista UIFrom a certain angle, this has mostly been an article about how it took us three years to write a pretty standard web app. The app isn’t the point, though. The story is really about paying attention to the needs of our ML users and to the scale of their work within Etsy, and above all about resisting premature optimization. Over the years we’ve moved from meeting the basic technical requirements of an ML platform to building a complete product for it. But we never aimed at a product, not till it became necessary, and so we were able to avoid getting ahead of ourselves. The goals of the ML platform team have broadened now that Barista is where it is. We continue to try to enable faster experimentation and easier deployment. The consensus of our ML practitioners is that they have the tools they need, but that our greatest area of opportunity is to improve in the cohesiveness of our suite of services - most importantly, automation. And that’s where we’re investing now: in tooling to provide optimal infrastructure settings for model deployments, for instance, so we can reduce tuning time in serving them and further minimize our cloud costs. Our ML practice continues to grow, both in number of models and team size, and our platform is going to have to continue to grow to keep up with them.",
    "author": "Kyle Gallatin",
    "published": "Fri, 14 Apr 2023 17:15:18 -0400",
    "image": "https://i.etsystatic.com/inv/543df8/4815862808/inv_fullxfull.4815862808_1k0b6rzj.jpg?version=0",
    "source": "https://codeascraft.com/feed/atom/",
    "categories": null
  },
  {
    "id": "ec5fa032-f39f-4ab7-ba26-a9d20898dfa0",
    "title": "Docs-as-code at Etsy",
    "link": "https://www.etsy.com/codeascraft/code-as-craft-blog-post-docs-as-code-at-etsy?utm_source=OpenGraph\u0026utm_medium=PageTools\u0026utm_campaign=Share",
    "description": "The question of documentation—not just formats and standards, but the tools and processes that can make documenting code a normal and repeatable part of development workflows—has been a live one in the software industry for a long time. The docs-as-code approach has emerged as a way of integrating documentation into development on the principle that the same sets of tools and procedures should be used for both. This might mean, for instance, versioning documentation the same way code is versioned, formatting it using plain-text markup like Markdown or reStructuredText, and employing automation tools to build and deploy documentation. At Etsy, we've developed an internal tool called Docsbuilder to implement our own docs-as-code approach. It's our primary tool for maintaining and discovering software documentation at Etsy, and in this post we'll give you an overview of it. What is Docs-as-code? Docs-as-code aims to manage software documentation with the same level of rigor and attention typically brought to managing software source code. The goal of the methodology is to make the work of authoring, versioning, reviewing and publishing documentation smoother, more efficient, more repeatable and reliable. The main principles of docs-as-code are: Documentation is a first-class citizen in the software development process As such, it should be versioned and stored in source control repositories such as Git Documentation should be written in plain-text formats like Markdown, to support versioning and collaboration Documentation should be reviewed and tested before being published The documentation workflow should be automated where possible to improve the reliability and user experience of publishing sites Fundamentally, docs-as-code encourages an approach that balances documentation writing with coding. Developers who tag and release documentation the same way they do source code, with the same tools and procedures, will tend to be more organized and structured about handling their documentation. And the documentation itself becomes easier to audit for quality, and to update and maintain. Docs-as-code at Etsy Etsy's Docsbuilder tool is a collection of bin scripts, pipelines and processes that let developers create and maintain software documentation. Docsbuilder is Markdown-based; we use Docusaurus, a Facebook-created tool for generating project documentation websites, to convert Markdown files to HTML. Each project team at Etsy owns its own Docsbuilder repository, a mix of Markdown files, configurations and NPM dependencies, and we use a secure GitOps-based workflow to review and merge changes to these repositories. To simplify the process of creating new sites, we developed a \"docsbuilder-create\" bin script. The script checks to make sure a supplied site name is valid and unique, then it bootstraps a Docusaurus site and installs all necessary Etsy-specific plugins. Once the site is created, users can push documentation to their Git branch and open a pull request. To validate and test the PR, we use Google Cloud Build to clone a preconfigured Node.js container, which builds the entire documentation website and runs some integration tests to make sure the site is working properly. When the tests are completed and the PR is approved, we merge the code into the main branch of the repository and another Cloud Build job then builds and deploys the site to production. To make it easier for users within Etsy to find documentation, we developed a docs search engine that scans and indexes all Docsbuilder sites and all available pages. To simplify navigation, a React component displays a list of all important and frequently used sites on the homepage of our documentation hub. In total, we currently host about 6.2k pages on 150 Docsbuilder project sites. What’s Next Discoverability and ease of use are important factors in making documentation more available, and that’s an area where we’re aiming to improve. Better links between doc sites and related topics will surface documentation better, as will improvements to the docs search engine. With the same idea in mind, we want to focus on creating more organized and navigable documentation pages. And there’s no reason not to make the content itself more engaging: we’re looking into adding more support for screenshots and other imagery, and integrating with React plugins to draw diagrams (e.g. flowcharts) and other visuals that can illustrate key concepts and ideas.",
    "author": "Afshin Mehrabani",
    "published": "Thu, 13 Apr 2023 16:55:35 -0400",
    "image": "https://i.etsystatic.com/inv/11b710/4863965913/inv_fullxfull.4863965913_qx478xgc.jpg?version=0",
    "source": "https://codeascraft.com/feed/atom/",
    "categories": null
  },
  {
    "id": "8442ad8e-9b22-433f-863b-f2efa2ea212c",
    "title": "Scaling Etsy Payments with Vitess: Part 3 – Reducing Cutover Risk",
    "link": "https://www.etsy.com/codeascraft/scaling-etsy-payments-with-vitess-part-3--reducing-cutover-risk?utm_source=OpenGraph\u0026utm_medium=PageTools\u0026utm_campaign=Share",
    "description": "Between Dec 2020 and May 2022, the Etsy Payments Platform, Database Reliability Engineering and Data Access Platform teams moved 23 tables, totaling over 40 billion rows, from four unsharded payments databases into a single sharded environment managed by Vitess. While Vitess was already managing our database infrastructure, this was our first usage of vindexes for sharding our data. This is part 3 in our series on Sharding Payments with Vitess. In the first post, we focused on challenges in the application and data model. In part two, we discussed the challenges of cutting over a crucial high traffic system, and in this final post we will discuss different classes of errors that might crop up when cutting over traffic from an unsharded keyspace to a sharded keyspace. As an engineer on Etsy’s Data Access Platform team, my role bridges the gap between product engineering and infrastructure. My team builds and maintains Etsy’s in-house ORM, and we are experts in both software engineering and the database software that our code relies on. Myself and members of my team have upstreamed over 30 patches to Vitess main. We also maintain an internal fork of Vitess, containing a handful of patches necessary to adapt Vitess to the specifics of our infrastructure. In our sharding project, my role was to ensure that the queries our ORM generates would be compatible with vindexes and to ensure that we configured Vitess correctly to preserve all of the data guarantees that our application expects. Cutover risks Vitess does an excellent job of abstracting the concept of sharding. At a high level, Vitess allows your application to interact with a sharded keyspace much the same as it would with an unsharded one. However, in our experience sharding with Vitess, we found a few classes of errors in which things could break in new ways after cutting over to the sharded keyspace. Below, we will discuss these classes of errors and how to reduce the risk of encountering them. Transaction mode errors When sharding data with Vitess, your choice of transaction_mode is important, to the extent that you care about atomicity. The transaction_mode setting is a VTGate flag. The default value is multi, which allows for transactions to span multiple shards. The documentation notes that “partial commits are possible” when using multi. In particular, when a transaction fails in multi mode, writes may still be persisted on one or more shards. Thus, the usual atomicity guarantees of database transactions change significantly: typically when transactions fail, we expect no writes to be persisted. Using Vitess’s twopc (two-phase commit) transaction mode solves this atomicity problem, but as Vitess documentation notes, “2PC is an experimental feature and is likely not robust enough to be considered production-ready.” “Transaction commit is much slower when using 2PC,\" say the docs. \"The authors of Vitess recommend that you design your VSchema so that cross-shard updates (and 2PC) are not required.” As such, we did not seriously consider using it. Given the shortcomings of the multi and twopc transaction modes, we opted for single transaction mode instead. With single mode, all of the usual transactional guarantees are maintained, but if you attempt to query more than one shard within a database transaction, the transaction will fail with an error. We decided that the semantics of single as compared with multi would be easier to communicate to product developers who are not database experts, less surprising, and provide more useful guarantees. Using the single transaction mode is not all fun and games, however. There are times when it can seem to get in the way. For instance, a single UPDATE statement which touches records on multiple shards will fail in single mode, even if the UPDATE statement is run with autocommit. While this is understandable, sometimes it is useful to have an escape hatch. Vitess provides one, with an API for changing the transaction mode per connection at runtime via SET transaction_mode=? statements. Your choice of transaction mode is not very important when using Vitess with an unsharded keyspace – since there is only a single database, it would be impossible for a transaction to span multiple databases. In other words, all queries will satisfy the single transaction mode in an unsharded keyspace. But when using Vitess with a sharded keyspace, the choice of transaction mode becomes relevant, and your transactions could start failing if they issue queries to multiple shards. To minimize our chances of getting a flood of transaction mode errors at our cutover, we exhaustively audited all of the callsites in our codebase that used database transactions. We logged the SQL statements that were executed and pored over them manually to determine which shards they would be routed to. Luckily, our codebase uses transactions relatively infrequently, since we can get by with autocommit in most cases. Still it was a painstaking process. In the end, our hard work paid off: we did not observe any transaction mode-related errors at our production cutover. Reverse VReplication breaking Pre-cutover, VReplication copies data from the original unsharded keyspace to the new sharded keyspace, to keep the data in sync. Post-cutover, VReplication switches directions: it copies data back from the new sharded keyspace to the original unsharded keyspace. We’ll refer to this as reverse VReplication. This ensures that if the cutover needs to be reversed, the original keyspace is kept in sync with any writes that were sent to the sharded keyspace. If reverse VReplication breaks, a reversal of the cutover may not be possible. Reverse VReplication broke several times in our development environment due to enforcement of MySQL unique keys. In an unsharded keyspace, a unique key in your MySQL schema enforces global uniqueness. In a sharded keyspace, unique keys can only enforce per-shard uniqueness. It is perfectly possible for two shards to share the same unique key for a given row. When reverse VReplication attempts to write such rows back to the unsharded database, one of those writes will fail, and reverse VReplication will grind to a halt. This form of broken VReplication can be fixed in one of two ways: Delete the row corresponding to the write that succeeded in the unsharded keyspace. This will allow the subsequent row to reverse vreplicate without violating the unique-key constraint. Skip the problematic row by manually updating the Pos column in Vitess’s internal _vt.vreplication table. It was important to us that reverse VReplication be rock solid for our production cutover. We didn’t want to be in a situation where we would be unable to reverse the cutover in the event of an unexpected problem. Thus, before our production cutover, we created alerts that would page us if reverse VReplication broke. Furthermore, we had a runbook that we would use to fix any issues with reverse VReplication. In the end, reverse VReplication never broke in production. The reason it broke in our development environment, it turned out, was due to a workflow specific to that environment. As an aside, we later discovered that Vitess does in fact provide a mechanism for enforcing global uniqueness on a column in a sharded keyspace. Scatter queries In a sharded keyspace, if you forget to include the sharding key (or another vindexed column) in your query’s WHERE clause, Vitess will default to sending the query to all shards. This is known as a scatter query. Unfortunately, it can be easy to overlook adding the sharding key to one or more of your queries before the cutover, especially if you have a large codebase with many types of queries. The situation might only become obvious to you after cutover to the sharded cluster. If you start seeing a much higher than expected volume of queries post-cutover, scatter queries are likely the cause. See part 2 in this series of posts for an example of how we were impacted by scatter queries in one cutover attempt. Having scatter queries throw a wrench in one of our earlier cutover attempts got us thinking about how we could identify them more easily. Vitess provides several tools that can show its execution plan for a given query, including whether or not it will scatter: vtexplain, EXPLAIN FORMAT=vitess …, and EXPLAIN FORMAT=vtexplain. At the time of our earlier cutover, we had not been in the habit of regularly analyzing our queries with these tools. We used them before the next cutover attempt, though, and made sure all the accidental scatter queries got fixed. Useful as Vitess query analysis is, there is always some chance an accidental scatter query will slip through and surprise you during a production cutover. Scatter queries have a multiplicative impact: they are executed on every shard in your keyspace, and at a high enough volume can push the aggregate query volume in your sharded keyspace to be several times what you would see in an unsharded one. If query volume is sufficient to overwhelm all shards after the cutover, accidental scatter queries can result in a total keyspace outage. It seemed to us it would limit the problem if Vitess had a feature to prevent scatter queries by default. Instead of potentially taking down the entire sharded keyspace in a surge of query traffic, with a no-scatter default only accidental scatter queries would fail. At our request, PlanetScale later implemented a feature to prevent scatter queries. The feature is enabled by starting VTGate with the --no_scatter flag. Scatter queries are still allowed if a comment directive is included in the query: /*vt+ ALLOW_SCATTER */. While this feature was not yet available during our earlier cutover attempts, we have since incorporated it into our Vitess configuration. Incompatible queries Some types of SQL queries that work on unsharded keyspaces are incompatible with sharded keyspaces. Those queries can start failing after cutover. We ran into a handful of them when we tested queries in our development environment. One such class of queries were scatter queries with a GROUP BY on a VARCHAR column. As an example, consider a table in a sharded keyspace with the following schema: CREATE TABLE `users` ( `user_id` int(10) unsigned NOT NULL, `username` varchar(32) NOT NULL, `status` varchar(32) NOT NULL, PRIMARY KEY (`user_id`) ) Assume the users table has a primary vindex on the column user_id and no additional vindexes. On such a table in a sharded keyspace, the following query will be a scatter query: SELECT status, COUNT(*) FROM users GROUP BY status; This query failed with an error on our version of Vitess: ERROR 2013 (HY000): Lost connection to MySQL server during query. After diving into Vitess’s code to determine the cause of the error, we came up with a workaround: we could CAST the VARCHAR column to a BINARY string: \u003e SELECT CAST(status AS BINARY) AS status, COUNT(*) FROM users GROUP BY status; +----------+----------+ | status | count(*) | +----------+----------+ | active | 10 | | inactive | 2 | +----------+----------+ We occasionally ran into edge cases like this where Vitess’s query planner did not support specific query constructs. But Vitess is constantly improving its SQL compatibility – in fact, this specific bug was fixed in later versions of Vitess. In our development environment, we exhaustively tested all queries generated by our application for compatibility with the new sharded keyspace. Thanks to this careful testing, we managed to identify and fix all incompatible queries before the production cutover. Conclusion There are several classes of errors that might only start appearing after the cutover from an unsharded keyspace to a sharded keyspace. This makes cutover a risky process. Although cutovers can generally be easily reversed, so long as reverse VReplication doesn’t break, the impact of even a short disruption can be large, depending on the importance of the data being migrated. Through careful testing before cutover, you can reduce your exposure to these classes of errors and guarantee yourself a much more peaceful cutover. This is part 3 in our series on Sharding Payments with Vitess. Check out part 1 to read about the challenges of migrating our data models and part 2 to read about the challenges of cutting over a crucial high-traffic system.",
    "author": "David Leibovic",
    "published": "Wed, 22 Feb 2023 18:03:53 -0500",
    "image": "https://i.etsystatic.com/inv/150562/4703164173/inv_fullxfull.4703164173_qlantdls.jpg?version=0",
    "source": "https://codeascraft.com/feed/atom/",
    "categories": null
  },
  {
    "id": "8c29e46c-a5d0-4cad-9075-107ed136f11a",
    "title": "Scaling Etsy Payments with Vitess: Part 2 – The “Seamless” Migration",
    "link": "https://www.etsy.com/codeascraft/scaling-etsy-payments-with-vitess-part-2--the-seamless-migration?utm_source=OpenGraph\u0026utm_medium=PageTools\u0026utm_campaign=Share",
    "description": "Between Dec 2020 and May 2022, the Etsy Payments Platform, Database Reliability Engineering and Data Access Platform teams moved 23 tables, totaling over 40 billion rows, from four unsharded payments databases into a single sharded environment managed by Vitess. While Vitess was already managing our database infrastructure, this was our first usage of vindexes for sharding our data. This is part 2 of our series on Sharding Payments with Vitess. In the first post, we focused on making application data models available for sharding. In this part, we’ll discuss what it takes to cut over a crucial high traffic system, and part 3 will go into detail about reducing the risks that emerge during the cutover. Migrating Data Once we had chosen a sharding method, our payments data had to be redistributed to forty new shards, the data verified as complete, reads and writes switched over from existing production databases, and any additional secret sauce applied. Considering this was only the payments path for all of Etsy.com, the pressure was on to get it right. The only way to make things work would be to test, and test again. And while some of that could be done on an ad-hoc basis by individual engineers, to reorganize a system as critical as payments there is no substitute for a production-like environment. So we created a staging infrastructure where we could operationally test Vitess's internal tooling against snapshots of our production MySQL data, make whatever mistakes we needed to make, and then rebuild the environment, as often as necessary. Staging was as real as we could make it: we had a clone of the production dataset, replicas and all, and were equipped with a full destination set of forty Vitess shards. Redistributing the data in this playground, seeing how the process behaved, throwing it all away and doing it again (and again), we built confidence that we could safely wrangle the running production infrastructure. We discovered, and documented, barriers and unknowns that had to be adjusted for (trying to shard on a nullable column, for instance). We learned to use VDiff to confirm data consistency and verify performance of the tooling, we learned to run test queries through Vitess proper, checking behavior and estimating workload, and we discovered various secondary indexing methods and processes (using CreateLookupVindex and ExternalizeVindex) to overcome some of these barriers. One of the key things we found out about was making the read/write switch. Vitess's VReplication feature is the star performer here. Via the MoveTables workflow, VReplication sets up streams that replicate all writes in whichever direction you're currently operating. If you're writing to the source side, VReplication has streams to replicate those writes into the sharded destination hosts, properly distributing them to the correct shard. When you switch writes with Vitess, those VReplication streams are also reversed, now writing from the destination shards to the source database(s). Knowing we had this as an option was a significant confidence booster. If the first switch wasn't perfect, we could switch back and try again: both sides would stay consistent and in sync. Nothing would get lost in between. Top: The MoveTables workflow has VReplication setup to move existing data to the new destination shards and to propagate new writes. Bottom: After SwitchWrites the Vreplication stream reverses to the source database, keeping the origin data in sync with new writes to the sharded setup.Cutting Over Production VReplication paved most of the road for us to cut over production, but we did have our share of “whoa, I didn’t expect that” moments. As powerful as the Vitess workflow system is, it does have some limitations when attempting to move a substantial dataset, and that requires finding additional solutions for the same problem. We were traversing new ground here for Etsy, so even as we pushed onward with the migration we were still learning how to operate within Vitess. In one phase of the project we switched traffic and within a couple of minutes saw a massive 40x jump in query volume (from ~5k/second to ~200k/second) on the same workload. What is going on here? After some quick investigation we found that a query gathering data formerly colocated on a monolithic database now required that data from some portion of the new shard set. The problem was, Vitess didn’t know exactly which of our forty shards that data existed on, since it was being requested via a column that was not part of the sharding column. An explosion: This massive increase in query volume surprised us initially. A dive into what was generating this volume quickly revealed scatter queries were at the root of it.Enter the story's second superhero: CreateLookupVindex. While we switched traffic back and headed to our staging environment to come up with a solution, we quickly realized the 40x increase was due to Vitess using a scatter gather process, sending queries to all shards in an effort to see which of them had pieces of the data. Besides those scatter queries being inefficient, they were also bombarding the databases with requests that returned empty result sets. To combat this, we created Secondary Vindexes to tell Vitess where the data was located using a different column than the Primary Vindex. These additional Vindexes allowed the VTGates to use a lookup table to identify the shards housing the relevant data and make sure they were the only ones receiving queries. A solution: Application of Lookup Vindexes quelled the rampant scatter queries immediately, returning query volume to manageable levels.Knowing there were additional datasets that would behave similarly, we were able to find those callsites and query patterns early, and apply those Secondary Vindexes while the MoveTables workflow was in progress. This prevented the same overwhelming traffic pattern from recurring and kept the final transitions from being disruptively resource-intensive. (For more information on the scatter traffic pattern, part 3 of this series has additional details.) As we grew more comfortable with our command of the migration process, we decided that since Vitess supported multiple workflows per keyspace, we could get both the MoveTables and the Secondary Vindexes deployed simultaneously. However, there's a caveat: due to the way Secondary Vindexes are maintained by VReplication streams, the Vindexes cannot be externalized (made available to the system) until after the switching of writes is complete. These indexes work by inserting rows into a lookup table as writes are made to the owner table, keeping the lookup table current. While the MoveTables is in motion, the Secondary Vindex is doing its job inserting while the data is being sharded via the vReplication streams. And there's the rub: if you externalize the Vindex before writes are switched, there aren’t any writes being made to the destination shards, and you are going to miss all of those lookup records coming from the vReplication stream. Taking all this into account, we performed the switch writes, externalized the two Secondary Vindexes we were creating, and found the machines we were running on couldn’t handle the query load effectively. No problem: we'd switch the writes back to the source database. Oops! We just broke our fancy new Vindexes because CreateLookupVindex was no longer running! While it wasn’t the end of the world, it did mean we had to remove those Secondary Vindexes, remove all of their artifacts from the sharded dataset (drop the lookup tables), then rebuild them a second time. During the small window this work created we raised the specs for the destination cluster, then did the dance again. Switch writes, externalize the Vindexes, and roll forward. This time, happily, roll forward is exactly what things did. Conclusion Thanks to extensive testing on a full production copy in our staging environment, Vitess tooling being as powerful and performing as well as we expected, and meticulous precursor work on the data models, we encountered no disruption, no downtime, and no impact to normal operation throughout the course of these migrations. While there was tolerance for the idea of some disruption, the most important thing to our team was that our processes should run transparently. Completing this monumental project on a highly sensitive path without anyone noticing (inside Etsy or out) was very satisfying. This is part 2 in our series on Sharding Payments with Vitess. Check out part 1 to read about the challenges of migrating our data models, and part 3 to read about reducing cutover risks.",
    "author": "Keith Wells",
    "published": "Wed, 22 Feb 2023 18:03:36 -0500",
    "image": "https://i.etsystatic.com/inv/87e944/4703418713/inv_fullxfull.4703418713_7ugfp8iu.jpg?version=0",
    "source": "https://codeascraft.com/feed/atom/",
    "categories": null
  },
  {
    "id": "deb24462-d57c-4dad-9333-e6b4f261e115",
    "title": "Scaling Etsy Payments with Vitess: Part 1 – The Data Model",
    "link": "https://www.etsy.com/codeascraft/scaling-etsy-payments-with-vitess-part-1--the-data-model?utm_source=OpenGraph\u0026utm_medium=PageTools\u0026utm_campaign=Share",
    "description": "At the end of 2020, Etsy’s Payments databases were in urgent need of scaling. Specifically, two of our databases were no longer vertically scalable — they were using the highest resource tier offered on the Google Cloud platform. These databases were crucial to our day-to-day payment processing, so it was a high-risk situation: spikes in traffic could have led to performance issues or even loss of transactions. Our sellers depend on our payments system to get paid for their hard work, making this reliability effort even more critical. A stable and scalable payments platform provides the best possible experience for our sellers. Between Dec 2020 and May 2022, the Etsy Payments Platform, Database Reliability Engineering and Data Access Platform teams moved 23 tables, totaling over 40 billion rows, from four unsharded payments databases into a single sharded environment managed by Vitess. While Vitess was already managing our database infrastructure, this was our first usage of vindexes for sharding our data. We did this work in two phases. First we migrated our seller ledger infrastructure, a contained domain that determines seller bills and payouts. For the second phase, we worked to reduce load on our primary payments database, which houses transaction data, payment data and much more. This database has been around for over a decade and hosted nearly 90 tables before the migration. To cut down the scope of the project we strategically chose to migrate just a subset of tables with the highest query volume, adding in others related to those high-volume tables as needed. In the end, even operating on just that subset, we were able to reduce load by 60%, giving us room to scale for many years down the road. Throughout this project, we encountered challenges across the stack. This is the first in a series of posts in which we’ll share how we approached those challenges, both in application and infrastructure. Here we’ll be focusing on making application data models available for sharding. In part 2, we’ll discuss what it takes to cut over a crucial high-traffic system, and part 3 will go into detail about reducing the risks that emerge during the cutover. An Ideal Sharding Model: Migrating the Ledger A data model’s shape impacts how easy it is to shard, and its resiliency when sharded. Data models that are ideal for sharding are shallow, with a single root entity that all other entities reference via foreign key. For example, here is a generic data model for a system with Users, and some data directly related to Users: This type of data model allows all tables in the domain to share a shardifier (in this example, user_id), meaning that related records are colocated. Even with Vitess handling them, cross-shard operations can be inefficient and difficult to reason about; colocated data makes it possible for operations to take place on a single shard. Colocation can also reduce how many shards a given request depends on, mitigating user impacts from a shard going down or having performance issues. Etsy's payments ledger, our first sharding migration, was close to this ideal shape. Each Etsy shop has a ledger of payments activity, and all entities in this domain could be related to a single root Ledger entity. The business rule that maintains one ledger to a shop means that ledger_id and shop_id would both be good candidates for a shardifier. Both would keep all shop-related data on a single shard, isolating shard outages to a minimal number of shops. We went with shop_id because it's already in use as a shardifier elsewhere at Etsy, and we wanted to stay consistent. It also future-proofs us in case we ever want to allow a shop to have multiple ledgers. This \"ideal\" model may have been conceptually simple, but migrating it was no small task. We needed to add a shop_id column to tables and to modify constraints such as primary keys, unique keys, and other indexes, all while the database was resource-constrained. Then we had to backfill values to billions of existing rows, while–again–the database was resource-constrained. (We came up with a real-time tunable script that could backfill at up to 60x faster using INSERT … ON DUPLICATE KEY UPDATE statements.) And when we had our new shardifier in place there were hundreds of existing queries to update with it, so Vitess would know how to route to the appropriate shard, and hundreds of tests whose test fixture data had to be updated. Non-ideal Models: Sharding Payments For our second phase of work, which would reduce load on our primary payments database, the data model was less straightforward. The tables we were migrating have grown and evolved over a decade-plus of changing requirements, new features, changes in technology and tight deadlines. As such, the data model was not a simple hierarchy that could lend itself to a standard Etsy sharding scheme. Here’s a simplified diagram of the payments model: Each purchase can relate to multiple shops or other entities. Payments and PaymentAdjustments are related to multiple types of transactions, CreditCardTransactions and PayPalTransations. Payments are also related to many ShopPayments with different shop_ids, so sharding on that familiar Etsy key would spread data related to a single payment across many shards. PaymentAdjustments meanwhile are related to Payment by payment_id, and to the two transaction types by reference_id (which maps to payment_adjustment_id). This is a much more complex case than the Ledger model, and to handle it we considered two approaches, described below. As with any technical decision, there were tradeoffs to be negotiated. To evaluate our options, we spiked out changes, diagrammed existing and possible data models, and dug into production to understand how existing queries were using the data. Option 1: Remodel the core The first approach we considered was to modify the structure of our data model with sharding in mind. The simplified diagram below illustrates the approach: We’ve renamed our existing “Payment” models “Purchase,” to better reflect what they represent in the system. We’ve created a new entity called Payment that groups together all entities related to any kind of payment that happens on Etsy. With this model we move closer to an “ideal” sharding model, where all records related to a single payment live on the same shard. We can shard everything by payment_id and enable colocation of all these related entities, with the attendant benefits of resilience and predictability that we've already noted. Introducing a consequential change to an important data model is costly. It would require sweeping changes to core application models and business logic and engineers would have to learn the new model. Etsy Payments is a large and complex codebase, and integrating it with this a new built-to-shard model would lead to a scope of work well beyond our goal of scaling the database. Option 2: Find shardifiers where they live The second approach was to shard smaller hierarchies using primary and foreign keys already in our data model, as illustrated below: Here we’ve sharded sub-hierarchies in the data together, using reference_id as a polymorphic shardifier in the transaction model so we can collocate transactions with their related Payment or PaymentAdjustment entities. (The downside of this approach is that PaymentAdjustments are also related to Payments, and those two models will not be colocated.) Considering how urgent it was that we move to a scalable infrastructure, and the importance of keeping Etsy Payments reliable in the meantime, this more modest approach is the one we opted for. As discussed above, most of the effort in the Ledger phase of the project went towards adding columns, modifying primary keys to existing data tables, backfilling data, and modifying queries to add a new shardifier. In contrast, taking established primary and foreign keys as shardifiers whenever possible would cut out nearly all of that effort from the Payments work, giving us a much shorter timeline to completion while still achieving horizontal scalability. Without having to manage the transition to a new data model, we could focus on scaling with Vitess. As it happens, Vitess has re-sharding features that give us flexibility to change our shard design in future, if we see the need; sharding on the basis of the legacy payments model was not a once-and-forever decision. Vitess can even overcome some of the limitations of our \"non-ideal\" data model using features such as secondary indexes: lookup tables that Vitess maintains to allow shard targeting even when the shardifier is not in a query. This was part 1 of our series on Sharding Payments with Vitess. We'll have a lot more to say about our real-world experience of working with Vitess in part 2 and part 3 of this series. Please join us for those discussions.",
    "author": "River Rainne",
    "published": "Wed, 22 Feb 2023 18:03:00 -0500",
    "image": "https://i.etsystatic.com/inv/cfdc57/4702757685/inv_fullxfull.4702757685_7cws3al5.jpg?version=0",
    "source": "https://codeascraft.com/feed/atom/",
    "categories": null
  },
  {
    "id": "d30d341c-aac1-459a-ad43-31ed39453f05",
    "title": "Adding Zonal Resiliency to Etsy’s Kafka Cluster: Part 2",
    "link": "https://www.etsy.com/codeascraft/leveraging-zonal-resiliency-to-improve-updates-for-etsys-kafka-cluster-part-2?utm_source=OpenGraph\u0026utm_medium=PageTools\u0026utm_campaign=Share",
    "description": "The first time I performed a live upgrade of Etsy's Kafka brokers, it felt exciting. There was a bit of an illicit thrill in taking down a whole production system and watching how all the indicators would react. The second time I did the upgrade, I was mostly just bored. There’s only so much excitement to be had staring at graphs and looking at patterns you've already become familiar with. Platform upgrades made for a tedious workday, not to mention a full one. I work on what Etsy calls an “Enablement” team -- we spend a lot of time thinking about how to make working with streaming data a delightful experience for other engineers at Etsy. So it was somewhat ironic that we would spend an entire day staring at graphs during this change, a developer experience we would not want for the end users of our team’s products. We hosted our Kafka brokers in the cloud on Google's managed Kubernetes. The brokers were deployed in the cluster as a StatefulSet, and we applied changes to them using the RollingUpdate strategy. The whole upgrade sequence for a broker went like this: Kubernetes sends a SIGTERM signal to a broker-pod-n The Kafka process shuts down cleanly, and Kubernetes deletes the broker-pod Kubernetes starts a new broker-pod with any changes applied The Kafka process starts on the new broker-pod, which begins recovering by (a) rebuilding its indexes, and (b) catching up on any replication lag Once recovered, a configured readiness probe marks the new broker as Ready, signaling Kubernetes to take down broker-pod-(n-1). Kafka is an important part of Etsy's data ecosystem, and broker upgrades have to happen with no downtime. Topics in our Kafka cluster are configured to have three replicas each to provide us with redundancy. At least two of them have to be available for Kafka to consider the topic “online.” We could see to it that these replicas were distributed evenly across the cluster in terms of data volume, but there were no other guarantees around where replicas for a topic would live. If we took down two brokers at once, we'd have no way to be sure we weren't violating Kafka's two-replica-minimum rule. To ensure availability for the cluster, we had to roll out changes one broker at a time, waiting for recovery between each restart. Each broker took about nine minutes to recover. With 48 Kafka brokers in our cluster, that meant seven hours of mostly waiting. Entering the Multizone In the fall of 2021, Andrey Polyakov led an exciting project that changed the design of our Kafka cluster to make it resilient to a full zonal outage. Where Kafka had formerly been deployed completely in Google’s us-central1-a region, we now distributed the brokers across three zones, ensuring that an outage in any one region would not make the entire cluster unavailable. In order to ensure zonal resilience, we had to move to a predictable distribution of replicas across the cluster. If a replica for a topic was on a broker located in zone A, we could be sure the second replica was on a broker in zone C with the third replica in zone F. Figure 1: Distribution of replicas for a topic are now spread across three GCP zones. Taking down only brokers in Zone A is guaranteed to leave topic partitions in Zone C and Zone F available. This new multizone Kafka architecture wiped out the one-broker-at-a-time limitation on our upgrade process. We could now take down every single broker in the same zone simultaneously without affecting availability, meaning we could upgrade as many as twelve brokers at once. We just needed to find a way to restart the correct brokers. Kubernetes natively provides a means to take down multiple pods in a StatefulSet at once, using the partitioned rolling updates rollout strategy. However, that requires pods to come down in sequential order by pod number, but our multizonal architecture placed every third broker in the same zone. We could have reassigned partitions across brokers, but that would have been a lengthy and manual process, so we opted instead to write some custom logic to control the updates. Figure 2. Limitations of Kubernetes sequential ordering in a multizone architecture: we can concurrently update pods 11 and 10, for example, but not pods 11 and 8. We changed the RolloutPolicy on the StatefulSet Kubernetes object for Kafka to OnDelete. This means that once an update is applied to a StatefulSet, Kubernetes will not automatically start rolling out changes to the pods, but will expect users to explicitly delete the pods to roll out their changes. The main loop of our program essentially finds some pods in a zone that haven’t been updated and updates them. It waits until the cluster has recovered, and then moves on to the next batch. Figure 3. Polling for pods that still need updates. We didn’t want to have to run something like this from our local machines (what if someone has a flakey internet connection?), so we decided to dockerize the process and run it as a Kubernetes batch job. We set up a small make target to deploy the upgrade script, with logic that would prevent engineers from accidently deploying two versions of it at once. Performance Improvements Figure 4. Visualization of broker upgrades We tested our logic out in production, and with a parallelism of three we were able to finish upgrades in a little over two hours. In theory we could go further and restart all the Kafka brokers in a zone en masse, but we have shied away from that. Part of broker recovery involves catching up with replication lag: i.e., reading data from the brokers that have been continuing to serve traffic. A restart of an entire zone would mean increased load on all the remaining brokers in the cluster as they saw their number of client connections jump -- we would find ourselves essentially simulating a full zonal outage every time we updated. It’s pretty easy just to look at the reduced duration of our upgrades and call this project a success -- we went from spending seven hours rolling out changes to about two. And in terms of our total investment of time—time coding the new process vs. time saved on upgrades—I suspect by now, eight months in, we’ve probably about broken even. But my personal favorite way to measure the success of this project is centered around toil -- and every upgrade I’ve performed these last eight months has been quick, peaceful, and over by lunchtime.",
    "author": "Kamya Shethia",
    "published": "Thu, 9 Feb 2023 12:06:19 -0500",
    "image": "https://i.etsystatic.com/inv/968b23/4603526702/inv_fullxfull.4603526702_fjilhkw5.jpg?version=0",
    "source": "https://codeascraft.com/feed/atom/",
    "categories": null
  },
  {
    "id": "d3705970-c6ee-410f-a840-0e4f422530f7",
    "title": "Adding Zonal Resiliency to Etsy’s Kafka Cluster: Part 1",
    "link": "https://www.etsy.com/codeascraft/adding-zonal-resiliency-to-etsys-kafka-cluster-part-1?utm_source=OpenGraph\u0026utm_medium=PageTools\u0026utm_campaign=Share",
    "description": "In 2018, with its decision to choose Google Cloud Platform as its provider, Etsy began a long project of migration to the cloud. This wasn't just a question of moving out of our data center. Things like on-demand capacity scaling and multi-zone/region resilience don't just magically happen once you’re \"in the cloud.\" To get the full benefits, we undertook a major redesign to host our Kafka brokers (and clients) on Google’s managed Kubernetes (GKE). Fast forward a few years: we now have many more Kafka clients with streaming applications that power critical user-facing features, like search indexing. Our initial architecture, which saved on cost by operating (mostly) in a single availability zone, was beginning to look shaky. The consequences of a Kafka outage had grown, for example resulting in stale search results. This would have a negative impact on our buyers and sellers alike, and would mean a direct revenue loss to Etsy. We decided it was time to reevaluate. With some research and thinking, and a good bit of experimentation, we put together a plan to make our Kafka cluster resilient to zonal failures. For such an important production service, the migration had to be accomplished with zero downtime in production. This post will discuss how we accomplished that feat, and where we're looking to optimize costs following a successful rollout. Single-Zone Kafka Inter-zone network costs in Google Cloud can add up surprisingly quickly, even exceeding the costs of VMs and storage. Mindful of this, our original design operated the Kafka cluster in one zone only, as illustrated below: Figure 1. An illustration of our original single-zone architecture. The Kafka cluster operates entirely within zone “a”. Only a few critically important components, such as Zookeeper in this example, run in multiple zones.Those with keen eyes might have noticed the Persistent Disks drawn across a zone boundary. This is to indicate that we’re using Google’s Regional PDs, replicated to zones “a” and “b”. (Regular PDs, by contrast, are zonal resources, and can only be accessed from a GCE instance in the same zone.) Even though we weren’t willing to pay the network costs for operating Kafka in multiple zones at the time, we wanted at least some capability to handle Google Cloud zonal outages. The worst-case scenario in the design above is a “zone-a” outage taking down the entire Kafka cluster. Until the cluster came back up, consumers would be dealing with delayed data, and afterward they'd have to spend time processing the backlog. More concerning is that with the cluster unavailable producers would have nowhere to send their data. Our primary producer, Franz, has an in-memory buffer and unlimited retries as a hedge against the problem, but producer memory buffers aren't unlimited. In the event of a sustained zone outage our runbook documented a plan to have a team member manually relocate the Kafka brokers to zone-b, where disks and historical data have been safely stored. A quick response would be critical to prevent data loss, which might be a lot to ask of a possibly sleepy human. Multizone Kafka As Kafka's importance to the business grew–and even though the single-zone architecture hadn’t suffered an outage yet–so did our discomfort with the limitations of manual zone evacuation. So we worked out a design that would give the Kafka cluster zonal resilience: Figure 2. A multizone design for Kafka on GKE. Notice that persistent disks are no longer drawn across zone boundaries.The most crucial change is that our Kafka brokers are now running in three different zones. The GKE cluster was already regional, so we applied Kubernetes Pod Topology Spread Constraints with topologyKey: topology.kubernetes.io/zone to ensure an even distribution across zones. Less apparent is the fact that topic partition replicas also need to be evenly distributed. We achieve this by setting Kafka’s broker.rack configuration based on the zone where a broker is running. This way, in the event of an outage of any one zone, two out of three partition replicas are still available. With this physical data layout, we no longer need persistent disks to be regional, since Kafka is providing inter-zone replication for us. Zero-Downtime Migration Satisfied with the design, we still had the challenge of applying the changes to our production Kafka cluster without data loss, downtime, or negative impact to client applications. The first task was to move broker Pods to their correct zones. Simply applying the Topology Constraints alone resulted in Pods stuck in “Pending” state when they were recreated with the new configs. The problem was that the disks and PVCs for the pods are zonal resources that can only be accessed locally (and even regional disks are limited to just two zones). So we had to move the disks first, then the Pods could follow. One way to accomplish the move is by actually deleting and recreating the disks. Since we have a replication factor of three on all our topics, this is safe if we do it one disk at a time, and Kafka will re-replicate the missing data onto the blank disk. Testing showed, however, that completing the procedure for all brokers would take an unacceptably long time, on the order of weeks. Instead, we took advantage of Google’s disk snapshotting feature. Automated with some scripting, the main loop performs roughly the following steps: Create a “base” snapshot of the Kafka broker disk, while the broker is still up and running Halt the broker: kubectl delete statefulset --cascade=orphan kubectl delete pod Create the “final” snapshot of the same Kafka broker disk, referencing the base snapshot Create a brand new disk from the final snapshot, in the correct zone Delete the original disk Recreate the StatefulSet, which recreates the Pod and starts up the broker Wait until the cluster health returns to normal (under replicated partitions is zero) Repeat for each broker. The two-step base/final snapshot process is just an optimisation. The second snapshot is much faster than the first, which minimizes broker downtime, and also reduces the time for partition replication to catch up afterwards. Now that we’ve got brokers running in the correct zone location, what about partitions? Kafka doesn’t provide automatic partition relocation, and the broker.rack configuration only applies to newly created partitions. So this was a do-it-yourself situation, which at high level involved: Generating a list of topic-partitions needing relocation, based on the requirement that replicas need to be distributed evenly across all zones. After some scripting, this list contained 90% of the cluster’s partitions. Generating a new partition assignment plan in JSON form. Kafka provides some CLI tools for the job, but we used the SiftScience/kafka-assigner tool instead (with a few of the open PRs applied). This allowed us to minimize the amount of data movement, saving time and reducing load on the cluster. Applying partition assignments using the official “kafka-reassign-partitions” CLI tool. To prevent overwhelming the cluster, we throttled the data migration, going in small batches rather than all at once (we had something like 10k partitions to move), and grouping migrations by class of topic, large, small, or empty (with the empty ones probably available for deletion). It was delicate work that took days of manual effort and babysitting to complete, but the result was a completely successful, zero-downtime partition migration. Post Migration In 2021, a company-wide initiative to test and understand zonal resilience in a large number of Etsy's systems, led by Jeremy Tinley, gave us a perfect opportunity to put our multizone Kafka design through its paces. We performed our testing in production, like many other teams (staging environments not being 100% representative), and brought down an entire zone, a third of the Kafka cluster. As leader election and partition replicas became unavailable, client requests automatically switched to still-available brokers, and any impact turned out to be minimal and temporary. Some napkin math at the time of redesign led us to believe that we would see only minimal cost increases from our multizone setup. In particular, eliminating regional disks (the most expensive Google Cloud SKU in our single-zone design) in favor of Kafka replication would halve our significant storage expense. By current measurements, though, we've ended up with a roughly 20% increase in cost since migration, largely due to higher-than-anticipated inter-zone network costs. We expected some increase, of course: we wanted an increase, since the whole point of the new architecture is to make data available across zones. Ideally, we would only be traversing zone boundaries for replication, but in practice that ideal is hard to achieve. Kafka's follower fetching feature has helped us make progress on this front. By default, consumers read from the leader replica of a partition, where records are directly produced: but if you're willing to accept some replication latency (well within our application SLOs), follower fetching lets you consume data from same-zone replica partitions, eliminating extra hops across boundaries. The feature is enabled by specifying the client.rack configuration to consumers, and the RackAwareReplicaSelector class for the broker-side replica.selector.class config. This isn’t the only source of inter-zone traffic however, many of our client applications are not pure consumers but also produce data themselves, and when their data is written back to the Kafka cluster across zones. (We also have some consumers in different Google Cloud projects outside our team's control that we haven't been able to update yet.) Arguably, increased network costs are worth it to be insured against catastrophic zone failures. (Certainly there are some possibly sleepy humans who are glad they won't be called upon to manually evacuate a bad zone.) We think that with continued work we can bring our costs more in line with initial expectations. But even as things stand, the benefits of automatic and fast tolerance to zone outages are significant, and we'll pay for them happily.",
    "author": "Andrey Polyakov",
    "published": "Tue, 31 Jan 2023 15:36:33 -0500",
    "image": "https://i.etsystatic.com/inv/02187e/4628438279/inv_fullxfull.4628438279_l9w0ngdm.jpg?version=0",
    "source": "https://codeascraft.com/feed/atom/",
    "categories": null
  },
  {
    "id": "cdaec696-ebb3-4450-a5f0-02fab5d75b42",
    "title": "Improving Support for Deep Learning in Etsy's ML Platform",
    "link": "https://www.etsy.com/codeascraft/improving-support-for-deep-learning-in-etsy39s-ml-platform?utm_source=OpenGraph\u0026utm_medium=PageTools\u0026utm_campaign=Share",
    "description": "Introduction As new machine learning (ML) techniques continue to advance and provide the promise of better performance, platform teams everywhere are trying to adapt to support increasingly complex models. While many models served at Etsy still use \"classic\" model architectures (such as gradient-boosted trees), there has been a large shift and preference for deep learning techniques. The decision for the Search Ranking (SR) team to use deep learning in particular necessitated advances in ML Platform capabilities. In this post, we’ll go over the workload-tuning and observability capabilities we created to combat the challenges serving deep learning ranking at scale within Etsy. Serving Search Ranking Use Cases Ranking use cases tend to be trickier to serve at low latency and low cost relative to other ML use cases. In practice, this is due to the number of features, bursty nature of the requests, and strict latency cutoffs. For just one search request, we first fetch around 1000 candidate listings to be returned to the user. We then go to our feature store and get around 300 features for each of them, send that data to our machine learning services to score each of those, and then rank them and return them back to the user – all before 250ms has elapsed (with the majority before 75ms). At scale, this can lead to bursty cpu-bound workloads that are very costly. These serving challenges were not new to the squad. In fact, existing tree-based ranking models often had high timeout rates despite being overprovisioned. However, as the modelers pushed the boundaries with new model complexity and computationally expensive feature transforms, we needed to take a deeper look at addressing and mitigating these issues. Tooling for Early Latency Feedback Previously, to test a model’s production latency at Etsy we needed to onboard the model onto all feature services and orchestration systems, which had a high development overhead. This meant that models were often only tested right before launch, which led to unexpected surprises and headaches. This situation is exactly what occurred in the first iteration of Search Ranking’s new deep learning model and happened too late in the model development cycle. With the challenges of this launch attempt came the opportunity to create better tooling to diagnose these issues earlier in the model development lifecycle. Thus we created Caliper, a tool to automatically test model latency early in the model development lifecycle. With Caliper, as soon as a model artifact is trained, it can be load tested with training data and profiled with TensorBoard automatically. Users input their data, select their desired RPS and batch size, and specify what model should be used. After five minutes, they can see latency distributions in a web UI, any errors their model had, and a profile of the slow tensorflow operations in their model. This tool streamlines a previous process where users would manually search and optimize slow transformations using ad hoc scripts and infrastructure setup. Most model performance issues are caused by slow tensorflow transforms, which this tool has highlighted early in the process. Caliper isolated the performance testing of just the inference component itself, allowing users to more quickly test inference-specific tuning parameters rather than spinning up the whole system. One key parameter we uncovered was batch size of the requests. In previous ranking models, we kept the batch size small for parallelizability. However, increasing the batch from five to 25 did not increase the latency substantially on the server side (which is measurable with Caliper), but greatly decreased the overhead of requests being prepared by the orchestration layer. Investing in Observability Triaging latency at a systems level After closing the gaps of transformation-caused latency and tuning the batch size, we were able to launch. However, we were not yet out of the woods, and were still seeing client side timeouts on requests to our ML services. Since each \"request\" to our system was actually a batch of 25 candidate to score, a single failed request meant multiple prediction failures. Even though requests were timing out at 250ms, the model was actually making predictions quickly (~50ms) - which means somewhere in our system there was an extra 200ms of overhead! Relying solely on prometheus histogram metrics for our client, proxy, and TF Serving container did not help us narrow in on the overhead as the buckets were too broad and data too aggregated to be helpful. Luckily, Etsy had been increasing adoption of distributed tracing and the service proxy Envoy which led to a much-needed increase in observability. With distributed tracing, we were able to see more granular samples of latency across components on an individual request level rather than just knowing our p99 (99th percentile) was somewhere in the 100ms to 250ms range. In addition, Envoy access logs allowed us to get a breakdown of where in the process that latency was occurring. As it turns out, as much as 200ms was spent in transmitting the features from the client to the proxy, before it even got to the model. Cutting down on payload size With our new observability tooling, we learned up to 80% of the overall request time was spent sending features to our proxy. While the “features transmission” time was not linear with the payload size on a request-level, the fact that this search ranking model struggled from this issue when our ads ranking model did not make the problem seem workload-related. We knew this model was slightly slower and had ~20x as large payload with many more features. The protobuf payload for the search ranking’s deep learning model was just under 1MB, already down from an average of about 4MB from our existing json payload for the decision tree model, so we thought we were already doing better with regards to payload size and were surprised this could be a bottleneck. Our friends on the search orchestration team pushed onwards in the investigation and eventually tried using compression with grpc yielding much smaller payloads that were roughly 25% the size. This change decreased search model’s error rates by 68% and reduced p99 (99th percentile) latency by around 50ms. Future Now that we are in the world of deep learning for search ranking, we can only expect the features to increase and the model to become more complex. We are continuing to work with search orchestration to further decrease payload size and transport overhead through “shared features” format (sending contextual data only one time for the whole batch rather than repeating it per listing). We are partnering with our feature systems team to explore ways to compress our feature payloads such as feature mapping as our names can get very long. In parallel, we are also improving Caliper and our automated infrastructure tuning processes to make these tough-to-diagnose performance issues even smoother and self-service for users with complex and high scale models. Special thanks everyone who contributed to this work, including but not limited to Rob Miles, Harshita Meena, Derrick Kondo, Hassan Shamji, Chris Long, Arijeet Mitra, Ahmad Ragab, Tim Korn, Dennis Olvany, Karl Kamden, Julie Chien, and Mert Sanver. Thanks to all our awesome search ranking team for being patient and pushing our craft forward, including Lucia Yu, Congzhe Su, Cung Tran, Robert Forgione, Lei Hu, and Xiaoting Zhao.",
    "author": "Sallie Walecka",
    "published": "Thu, 26 Jan 2023 09:21:11 -0500",
    "image": "https://i.etsystatic.com/inv/25783c/4608808587/inv_fullxfull.4608808587_5ksu1z8a.jpg?version=0",
    "source": "https://codeascraft.com/feed/atom/",
    "categories": null
  },
  {
    "id": "1a24df2f-5aca-4429-be30-3b6a04c4265e",
    "title": "I Fight For The Users",
    "link": "https://blog.codinghorror.com/i-fight-for-the-users/",
    "description": "If you haven't been able to keep up with my blistering pace of one blog post per year, I don't blame you. There's a lot going on right now. It's a busy time. But let's pause and take a moment",
    "author": "Jeff Atwood",
    "published": "Thu, 30 Nov 2023 20:11:05 GMT",
    "image": "https://blog.codinghorror.com/content/images/2023/11/image.png",
    "source": "https://feeds.feedburner.com/codinghorror",
    "categories": null
  },
  {
    "id": "01a07b9b-8151-4198-bfb5-04e7dfd7cb18",
    "title": "The 2030 Self-Driving Car Bet",
    "link": "https://blog.codinghorror.com/the-2030-self-driving-car-bet/",
    "description": "It's my honor to announce that John Carmack and I have initiated a friendly bet of $10,000* to the 501(c)(3) charity of the winner’s choice:By January 1st, 2030, completely autonomous self-driving cars meeting SAE J3016 level 5 will be commercially available for",
    "author": "Jeff Atwood",
    "published": "Fri, 04 Mar 2022 18:53:32 GMT",
    "image": "https://blog.codinghorror.com/content/images/2022/03/image.png",
    "source": "https://feeds.feedburner.com/codinghorror",
    "categories": null
  },
  {
    "id": "6033e877-11c5-4a99-b1bb-c707e579a447",
    "title": "Updating The Single Most Influential Book of the BASIC Era",
    "link": "https://blog.codinghorror.com/updating-the-single-most-influential-book-of-the-basic-era/",
    "description": "In a way, these two books are responsible for my entire professional career.With early computers, you didn't boot up to a fancy schmancy desktop, or a screen full of apps you could easily poke and prod with your finger. No, those computers booted up to the command",
    "author": "Jeff Atwood",
    "published": "Fri, 31 Dec 2021 23:49:00 GMT",
    "image": "https://blog.codinghorror.com/content/images/2022/01/image.png",
    "source": "https://feeds.feedburner.com/codinghorror",
    "categories": null
  },
  {
    "id": "364c9bd7-24b8-4bce-80c2-76309d8e9fd7",
    "title": "Building a PC, Part IX: Downsizing",
    "link": "https://blog.codinghorror.com/building-a-pc-part-ix-downsizing/",
    "description": "Hard to believe that I've had the same PC case since 2011, and my last serious upgrade was in 2015. I guess that's yet another sign that the PC is over, because PC upgrades have gotten really boring. It took 5 years for me to muster",
    "author": "Jeff Atwood",
    "published": "Sun, 19 Apr 2020 23:56:03 GMT",
    "image": "https://blog.codinghorror.com/content/images/2020/04/dan-a4-sfx-v2-build-pc-side.jpg",
    "source": "https://feeds.feedburner.com/codinghorror",
    "categories": null
  },
  {
    "id": "a2195f14-8eb0-43db-8856-451c4b101955",
    "title": "The Rise of the Electric Scooter",
    "link": "https://blog.codinghorror.com/the-rise-of-the-electric-scooter/",
    "description": "In an electric car, the (enormous) battery is a major part of the price. If electric car prices are decreasing, battery costs must be decreasing, because it's not like the cost of fabricating rubber, aluminum, glass, and steel into car shapes can decline that much, right? On an",
    "author": "Jeff Atwood",
    "published": "Thu, 12 Sep 2019 07:24:32 GMT",
    "image": "https://blog.codinghorror.com/content/images/2019/09/ev-battery-costs.png",
    "source": "https://feeds.feedburner.com/codinghorror",
    "categories": null
  },
  {
    "id": "f9dcabb3-de42-4de2-82a4-c1541ecd460d",
    "title": "Electric Geek Transportation Systems",
    "link": "https://blog.codinghorror.com/electric-geek-transportation-systems/",
    "description": "I've never thought of myself as a \"car person\". The last new car I bought (and in fact, now that I think about it, the first new car I ever bought) was the quirky 1998 Ford Contour SVT. Since then we bought a VW station wagon",
    "author": "Jeff Atwood",
    "published": "Tue, 20 Aug 2019 11:35:16 GMT",
    "image": "https://blog.codinghorror.com/content/images/2019/08/a-team-van.jpg",
    "source": "https://feeds.feedburner.com/codinghorror",
    "categories": null
  },
  {
    "id": "896afae2-0715-4ea1-9713-785d87b5df85",
    "title": "An Exercise Program for the Fat Web",
    "link": "https://blog.codinghorror.com/an-exercise-program-for-the-fat-web/",
    "description": "When I wrote about App-pocalypse Now in 2014, I implied the future still belonged to the web. And it does. But it's also true that the web has changed a lot in the last 10 years, much less the last 20 or 30. Websites have gotten a lot",
    "author": "Jeff Atwood",
    "published": "Thu, 30 May 2019 11:04:52 GMT",
    "image": "https://blog.codinghorror.com/content/images/2017/05/fat-city-apple-ii.png",
    "source": "https://feeds.feedburner.com/codinghorror",
    "categories": null
  },
  {
    "id": "a438dbb5-078e-41b7-85c0-6146d6c23145",
    "title": "The Cloud Is Just Someone Else's Computer",
    "link": "https://blog.codinghorror.com/the-cloud-is-just-someone-elses-computer/",
    "description": "When we started Discourse in 2013, our server requirements were high: 1GB RAM modern, fast dual core CPU speedy solid state drive with 20+ GB I'm not talking about a cheapo shared cpanel server, either, I mean a dedicated virtual private server with those specifications. We were OK",
    "author": "Jeff Atwood",
    "published": "Sun, 17 Feb 2019 02:15:26 GMT",
    "image": "https://blog.codinghorror.com/content/images/2019/02/there-is-no-cloud.png",
    "source": "https://feeds.feedburner.com/codinghorror",
    "categories": null
  },
  {
    "id": "fd96198f-9afb-461f-976a-ddeff7ae03a5",
    "title": "What does Stack Overflow want to be when it grows up?",
    "link": "https://blog.codinghorror.com/what-does-stack-overflow-want-to-be-when-it-grows-up/",
    "description": "I sometimes get asked by regular people in the actual real world what it is that I do for a living, and here's my 15 second answer: We built a sort of Wikipedia website for computer programmers to post questions and answers. It's called Stack Overflow",
    "author": "Jeff Atwood",
    "published": "Mon, 22 Oct 2018 10:52:32 GMT",
    "image": "https://blog.codinghorror.com/content/images/2018/10/bragging.png",
    "source": "https://feeds.feedburner.com/codinghorror",
    "categories": null
  },
  {
    "id": "313e725d-af74-4f7e-969a-cee692857f24",
    "title": "There is no longer any such thing as Computer Security",
    "link": "https://blog.codinghorror.com/there-is-no-longer-any-such-thing-as-computer-security/",
    "description": "Remember \"cybersecurity\"? Mysterious hooded computer guys doing mysterious hooded computer guy .. things! Who knows what kind of naughty digital mischief they might be up to? Unfortunately, we now live in a world where this kind of digital mischief is literally rewriting the world's history. For proof",
    "author": "Jeff Atwood",
    "published": "Fri, 21 Sep 2018 09:50:53 GMT",
    "image": "https://blog.codinghorror.com/content/images/2018/09/its-cybersecurity-yay.jpg",
    "source": "https://feeds.feedburner.com/codinghorror",
    "categories": null
  },
  {
    "id": "f41a4a6a-9941-4d2f-95ab-9e1fa035cc2d",
    "title": "To Serve Man, with Software",
    "link": "https://blog.codinghorror.com/to-serve-man-with-software/",
    "description": "I didn't choose to be a programmer. Somehow, it seemed, the computers chose me. For a long time, that was fine, that was enough; that was all I needed. But along the way I never felt that being a programmer was this unambiguously great-for-everyone career field with zero",
    "author": "Jeff Atwood",
    "published": "Sun, 31 Dec 2017 02:01:52 GMT",
    "image": "https://blog.codinghorror.com/content/images/2017/12/software-is-eating-the-world-marc-andreessen.jpg",
    "source": "https://feeds.feedburner.com/codinghorror",
    "categories": null
  },
  {
    "id": "2bd7af5c-0554-43fa-afa7-e711b6a921b6",
    "title": "The Existential Terror of Battle Royale",
    "link": "https://blog.codinghorror.com/the-existential-terror-of-battle-royale/",
    "description": "It's been a while since I wrote a blog post, I guess in general, but also a blog post about video games. Video games are probably the single thing most attributable to my career as a programmer, and everything else I've done professionally after that. I",
    "author": "Jeff Atwood",
    "published": "Sun, 05 Nov 2017 10:02:53 GMT",
    "image": "https://blog.codinghorror.com/content/images/2017/11/pubg-steam-stats-nov-2017.png",
    "source": "https://feeds.feedburner.com/codinghorror",
    "categories": null
  },
  {
    "id": "fcebc776-38c5-4c23-a1ed-0a6150fc9c49",
    "title": "Hacker, Hack Thyself",
    "link": "https://blog.codinghorror.com/hacker-hack-thyself/",
    "description": "We've read so many sad stories about communities that were fatally compromised or destroyed due to security exploits. We took that lesson to heart when we founded the Discourse project; we endeavor to build open source software that is secure and safe for communities by default, even if",
    "author": "Jeff Atwood",
    "published": "Fri, 02 Jun 2017 08:11:16 GMT",
    "image": "https://blog.codinghorror.com/content/images/2017/06/discourse-download-all.png",
    "source": "https://feeds.feedburner.com/codinghorror",
    "categories": null
  },
  {
    "id": "99e30723-d6e1-4573-ac5b-1cfef0237709",
    "title": "Thunderbolting Your Video Card",
    "link": "https://blog.codinghorror.com/thunderbolting-your-video-card/",
    "description": "When I wrote about The Golden Age of x86 Gaming, I implied that, in the future, it might be an interesting, albeit expensive, idea to upgrade your video card via an external Thunderbolt 3 enclosure. I'm here to report that the future is now. Yes, that's",
    "author": "Jeff Atwood",
    "published": "Fri, 24 Mar 2017 09:08:37 GMT",
    "image": "https://blog.codinghorror.com/content/images/2017/03/skull-canyon-nuc-with-razer-core.jpg",
    "source": "https://feeds.feedburner.com/codinghorror",
    "categories": null
  },
  {
    "id": "d76d2f1a-71e8-4ee3-8c81-220ebf8a2cd8",
    "title": "Password Rules Are Bullshit",
    "link": "https://blog.codinghorror.com/password-rules-are-bullshit/",
    "description": "Of the many, many, many bad things about passwords, you know what the worst is? Password rules. If we don't solve the password problem for users in my lifetime I am gonna haunt you from beyond the grave as a ghost pic.twitter.com/Tf9EnwgoZv— Jeff Atwood",
    "author": "Jeff Atwood",
    "published": "Fri, 10 Mar 2017 11:16:26 GMT",
    "image": "https://blog.codinghorror.com/content/images/2017/03/password_strength.png",
    "source": "https://feeds.feedburner.com/codinghorror",
    "categories": null
  },
  {
    "id": "b7806574-9bb3-4ec2-8312-f879608a0790",
    "title": "S27:E8 - Learning AI (Matt Eland)",
    "link": "https://www.codenewbie.org/podcast/learning-ai",
    "description": "Meet Matt Eland, AI Specialist at Leading EDJE. Matt shares what sparked his passion for AI years ago, why he’s made the decision to go back to school for his master's degree and how he aims to continue spreading his expertise with the community. Show Links Partner with Dev \u0026 CodeNewbie! (sponsor) Matt on Data Science Central Ohio .NET Developer Group Matt's Twitter Matt's GitHub Matt's LinkedIn",
    "author": "CodeNewbie",
    "published": "Wed, 22 May 2024 03:00:00 -0400",
    "image": "https://dts.podtrac.com/redirect.mp3/traffic.megaphone.fm/FOR8835558149.mp3?updated=1716333932",
    "source": "http://feeds.codenewbie.org/cnpodcast.xml",
    "categories": [
      "Podcast"
    ]
  },
  {
    "id": "ff20526a-85ff-41be-8727-8a433c98fcfa",
    "title": "S27:E7 - Tech and Art (Chris Immel)",
    "link": "https://www.codenewbie.org/podcast/tech-and-art",
    "description": "Meet Chris Immel, AI Engineer and Digital Artist at Luminifera Projects. Chris shares how he works to create a symbiosis between software development and art and why he remains optimistic when it comes to the AI revolution. Show Links Partner with Dev \u0026 CodeNewbie! (sponsor) Chris' Instagram Chris' Website Chris' GitHub Chris' LinkedIn",
    "author": "CodeNewbie",
    "published": "Wed, 15 May 2024 03:00:00 -0400",
    "image": "https://dts.podtrac.com/redirect.mp3/traffic.megaphone.fm/FOR3677516133.mp3?updated=1715705940",
    "source": "http://feeds.codenewbie.org/cnpodcast.xml",
    "categories": [
      "Podcast"
    ]
  },
  {
    "id": "3c01802e-cc78-4c0b-bfd5-7a04faeed0ee",
    "title": "S27:E6 - The Crossover of Health, Technology and Art (Daniel Bourke)",
    "link": "https://www.codenewbie.org/podcast/the-crossover-of-health-technology-and-art",
    "description": "Meet Daniel Bourke, Founder of mrdbourke Studios and Founder of Nutrify. Daniel shares his experiences trying to learn to code four different times before it finally stuck, how he’s combining his passions for health, technology and art and the time he built his own machine learning roadmap. Show Links Partner with Dev \u0026 CodeNewbie! (sponsor) Daniel's LinkedIn Daniel's Website ML Courses Nutrify Daniel's Twitter Daniel's LinkedIn",
    "author": "CodeNewbie",
    "published": "Wed, 08 May 2024 03:00:00 -0400",
    "image": "https://dts.podtrac.com/redirect.mp3/traffic.megaphone.fm/FOR9571529871.mp3?updated=1715101802",
    "source": "http://feeds.codenewbie.org/cnpodcast.xml",
    "categories": [
      "Podcast"
    ]
  },
  {
    "id": "45216cb0-4fb0-48c2-a078-f666e39050e6",
    "title": "S27:E5 - Navigating the AI Evolution (Chelsea Kaufman)",
    "link": "https://www.codenewbie.org/podcast/navigating-the-ai-evolution",
    "description": "Meet Chelsea Kaufman, Founder and CEO of LEARN Academy Chelsea shares why her background in theater set her up perfectly to found LEARN Academy, an AI native coding bootcamp, how she’s seen the bootcamp landscape evolve over the years and what role she believes AI will play in the future of software development. Show Links Partner with Dev \u0026 CodeNewbie! (sponsor) AI-Native Developers program LEARN Academy Website LEARN Academy Twitter",
    "author": "CodeNewbie",
    "published": "Wed, 01 May 2024 03:00:00 -0400",
    "image": "https://dts.podtrac.com/redirect.mp3/traffic.megaphone.fm/FOR9876558216.mp3?updated=1714495904",
    "source": "http://feeds.codenewbie.org/cnpodcast.xml",
    "categories": [
      "Podcast"
    ]
  },
  {
    "id": "cb1d3c1f-45f1-4306-9052-bfa29a74858a",
    "title": "S27:E4 - Living the Dream with AI (Rob Frelow)",
    "link": "https://www.codenewbie.org/podcast/living-the-dream-with-ai",
    "description": "Meet Rob Frelow, Co-founder \u0026 Chief AI Officer at The Storygraph. Rob shares how a trip in his friend’s Tesla led him to enroll in his first AI course, how he broke into AI later in his career and his experience truly living the dream waking up each morning excited to dive into AI and his work at Storygraph. Show Links Partner with Dev \u0026 CodeNewbie! (sponsor) Fast.ai Course Reddit ChatGPT Large Language Models The StoryGraph Rob's Twitter",
    "author": "CodeNewbie",
    "published": "Wed, 03 Apr 2024 03:00:00 -0400",
    "image": "https://dts.podtrac.com/redirect.mp3/traffic.megaphone.fm/FOR3067290502.mp3?updated=1712077869",
    "source": "http://feeds.codenewbie.org/cnpodcast.xml",
    "categories": [
      "Podcast"
    ]
  },
  {
    "id": "10e948ea-c868-42a1-ac0b-249f3c42835b",
    "title": "S27:E3 - Helping You Build Machine Learning Products (Pau Labarta Bajo)",
    "link": "https://www.codenewbie.org/podcast/helping-you-build-machine-learning-products",
    "description": "Meet Pau Bajo, Machine Learning Engineer and Educator at Real-World Machine Learning. Pau talks to Saron about transitioning from working daily in Excel to Python, why data is everything, and what skills early developers need to foster if they want a career in machine learning. Show Links Partner with Dev \u0026 CodeNewbie! (sponsor) Machine Learning Python Pau's GitHub Pau's Instagram Pau's Twitter",
    "author": "CodeNewbie",
    "published": "Wed, 27 Mar 2024 03:00:00 -0400",
    "image": "https://dts.podtrac.com/redirect.mp3/traffic.megaphone.fm/FOR4175258393.mp3?updated=1711466652",
    "source": "http://feeds.codenewbie.org/cnpodcast.xml",
    "categories": [
      "Podcast"
    ]
  },
  {
    "id": "fdd368f9-d2e5-4ea4-bd16-027d8c9f8070",
    "title": "S27:E2 - The Journey from Sound Engineer to Software Engineer (Alejandro Aspinwall)",
    "link": "https://www.codenewbie.org/podcast/the-journey-from-sound-engineer-to-software-engineer",
    "description": "In this week’s episode, we explore the journey of Alejandro Aspinwall, a Frontend Engineer at Amazon. You’ll hear how Alejandro began his career deeply immersed in the world of music and what led him to transition to the world of tech. He emphasizes the importance of adaptability in his career shift and provides insights into how coding bootcamps played a pivotal role in his development. Additionally, Alejandro explores the impact of artificial intelligence in his work, particularly discussing how AI tools have become an integral part of his coding toolkit. His experiences offer valuable perspectives on the practical use of AI in software engineering, and his story sheds light on the evolving nature of tech careers and the increasing role of AI in the industry. Show Links Partner with Dev \u0026 CodeNewbie! (sponsor) VS Code NPM Prisma GraphQL Cody Sourcegraph Stable Diffusion Claude Poe AWS Whisper FreeCodeCamp Coursera Udemy JavaScript C# Unity Unity DevOps Sound Engineering API Frontend Engineer Stack Overflow ChatGPT Open AI",
    "author": "CodeNewbie",
    "published": "Wed, 20 Mar 2024 03:00:00 -0400",
    "image": "https://dts.podtrac.com/redirect.mp3/traffic.megaphone.fm/FOR7500259015.mp3?updated=1710875504",
    "source": "http://feeds.codenewbie.org/cnpodcast.xml",
    "categories": [
      "Podcast"
    ]
  },
  {
    "id": "06a2e682-0fce-46d1-83bf-24de28c83b62",
    "title": "S27:E1 - Nurturing Relationships for AI Excellence (Shawn Charles)",
    "link": "https://www.codenewbie.org/podcast/nurturing-relationships-for-ai-excellence",
    "description": "Meet Shawn Charles, Developer Advocate \u0026 Community Manager at The Hunt. Shawn shares with Saron how he got into tech solely by building and maintaining websites for local businesses, what inspired him to level up by enrolling in a bootcamp, and his advice on those who might feel overwhelmed in identifying their career path in this new world revolving around AI. Show Links Partner with Dev \u0026 CodeNewbie! (sponsor) Resilient Coders AWS Services Udemy Shawn's GitHub Shawn's Twitter",
    "author": "CodeNewbie",
    "published": "Wed, 13 Mar 2024 03:00:00 -0400",
    "image": "https://dts.podtrac.com/redirect.mp3/traffic.megaphone.fm/FOR9714330025.mp3?updated=1710346884",
    "source": "http://feeds.codenewbie.org/cnpodcast.xml",
    "categories": [
      "Podcast"
    ]
  },
  {
    "id": "2f528a69-d7d5-4081-8b31-1d22d329266e",
    "title": "S26:E8 - Being Open to the Unexpected (Katherine Evans)",
    "link": "https://www.codenewbie.org/podcast/being-open-to-the-unexpected",
    "description": "Meet Katherine Evans, Lead Engineering Instructor at Actualize Coding Bootcamp and Senior Software Engineer at Neon One. Katherine walks us through her journey from bootcamp student to bootcamp teacher, sharing tips for recent grads looking to land their first role. Saron and Katherine also talk about whether Katherine thinks it’s still worth learning to code given the economic climate and what she would tell others who might be interested in learning to code. Show Links Partner with Dev \u0026 CodeNewbie! (sponsor) Actualize Coding Bootcamp Podium Education CAD PHP Katherine's GitHub Katherine's Website Katherine's Instagram",
    "author": "CodeNewbie",
    "published": "Wed, 20 Dec 2023 03:00:00 -0500",
    "image": "https://dts.podtrac.com/redirect.mp3/traffic.megaphone.fm/FOR7869532554.mp3?updated=1703012556",
    "source": "http://feeds.codenewbie.org/cnpodcast.xml",
    "categories": [
      "Podcast"
    ]
  },
  {
    "id": "bb2f2d4b-918a-4d76-bd57-ede60fb615c5",
    "title": "S26:E7 - Thoughts on Degrees and Bootcamps (Johnny Proano)",
    "link": "https://www.codenewbie.org/podcast/thoughts-on-degrees-and-bootcamps",
    "description": "Saron speaks with Johnny Proano, Associate Software Engineer at Hilton Grand Vacations. Initially drawn to code while building his personal DJ website, Johnny took the full leap with the support of his family. Johnny discusses his initial belief that a degree was necessary to become a software engineer and his decision to attend a coding bootcamp instead. He reflects on the differences between the bootcamp and college experience and shares his job search process after graduation. Show Links Partner with Dev \u0026 CodeNewbie! (sponsor) SQL Ruby Johnny's GitHub Johnny's Instagram Jonny's Website",
    "author": "CodeNewbie",
    "published": "Wed, 13 Dec 2023 03:00:00 -0500",
    "image": "https://dts.podtrac.com/redirect.mp3/traffic.megaphone.fm/FOR5458136114.mp3?updated=1702407147",
    "source": "http://feeds.codenewbie.org/cnpodcast.xml",
    "categories": [
      "Podcast"
    ]
  },
  {
    "id": "00109b3b-a5e8-44cb-9160-d49eeb216880",
    "title": "S26:E6 - Embracing Rest for Productivity (Ronesha Dennis)",
    "link": "https://www.codenewbie.org/podcast/embracing-rest-for-productivity",
    "description": "Saron chats with Ronesha Dennis, Founder and Lead Engineer at Bergeron-Woodley. Ronesha talks about growing up and how tech played a role in her childhood (her first website was a fan site for Lil Bow Wow). She talks about how she ended up in another career for 5 years until she sat down and thought about things she liked doing as a child without being paid for doing those things. This led her to want to get into tech. She decided to leave her job, move back with her parents, and do an 8-week program on Ruby on Rails. She then did a fellowship with Code for Progress. After graduating, she landed a job as a consultant then advanced to an Engineer, a Senior Engineer, and finally to managing other Engineers. She has authored coding books and she has her company building applications for nonprofits and other small businesses. Ronesha speaks on the mental health break she took after making the switch to tech and how important it is to give yourself space and time to take breaks after a career transition. Show Links Partner with Dev \u0026 CodeNewbie! (sponsor) Python, the Relatable Way Coding with Cornell Ruby on Rails Ronesha's GitHub Ronesha's Instagram Ronesha's Twitter",
    "author": "CodeNewbie",
    "published": "Wed, 06 Dec 2023 03:00:00 -0500",
    "image": "https://dts.podtrac.com/redirect.mp3/traffic.megaphone.fm/FOR7477482635.mp3?updated=1701803317",
    "source": "http://feeds.codenewbie.org/cnpodcast.xml",
    "categories": [
      "Podcast"
    ]
  },
  {
    "id": "4d9d093a-64dc-4a1d-899c-779bff2a1f3e",
    "title": "S26:E5 - Exploring the Path from Medicine to a Tech Career (Shona Chan)",
    "link": "https://www.codenewbie.org/podcast/exploring-the-path-from-medicine-to-a-tech-career",
    "description": "Saron speaks with Shona Chan this week about her experience navigating the world of software following a successful career as a doctor in the field of Anaesthesia. Shona shares her experience working in the medical field for 10 years until she decided she wanted to pivot into tech. Shona talks about how she made the decision to go to a bootcamp to learn to code and how she got her first job in tech. Finally, she talks about transferable skills from her medical career to her newfound tech career and reiterates how there are so many skills career transitioners can take from one career to another. Show Links Partner with Dev \u0026 CodeNewbie! (sponsor) JavaScript CSS Shona's GitHub Shona's Twitter",
    "author": "CodeNewbie",
    "published": "Wed, 29 Nov 2023 03:00:00 -0500",
    "image": "https://dts.podtrac.com/redirect.mp3/traffic.megaphone.fm/FOR6280605877.mp3?updated=1701200493",
    "source": "http://feeds.codenewbie.org/cnpodcast.xml",
    "categories": [
      "Podcast"
    ]
  },
  {
    "id": "74b36d08-31cc-4d91-94f8-05113b9799eb",
    "title": "S26:E4 - The Ins and Outs of LinkedIn (Laura Thorson)",
    "link": "https://www.codenewbie.org/podcast/the-ins-and-outs-of-linkedin",
    "description": "Saron chats with Laura Thorson, Program Manager at GitHub. Laura talks about how she was always interested in singing, dancing and music growing up which led her to UCLA on a scholarship to play the oboe. She tells us about her experience at UCLA and her decision to go to a coding bootcamp after graduation as opposed to searching for a job with her English Lit degree. Laura then describes the jobs she landed after bootcamp at Salesforce, Twitter, Meta and now GitHub and how LinkedIn played a huge role in helping her land these opportunities. Show Links Partner with Dev \u0026 CodeNewbie! (sponsor) STK AdTech Laura's GitHub Laura's Twitter",
    "author": "CodeNewbie",
    "published": "Wed, 22 Nov 2023 03:00:00 -0500",
    "image": "https://dts.podtrac.com/redirect.mp3/traffic.megaphone.fm/FOR4074988381.mp3?updated=1700586555",
    "source": "http://feeds.codenewbie.org/cnpodcast.xml",
    "categories": [
      "Podcast"
    ]
  },
  {
    "id": "e14b4d1a-f836-41fb-a96a-54b9ad2ad643",
    "title": "S26:E3 - Learning to Code with a Full-Time Job (Beau Carnes)",
    "link": "https://www.codenewbie.org/podcast/learning-to-code-with-a-full-time-job",
    "description": "In this week’s episode, Saron chats with Beau Carnes, Director of Technology Education at freeCodeCamp. Beau shares insights into his career trajectory, which began in television and digital media production. After gaining initial experience in this industry, he transitioned to work in education as a teacher. Beau speaks on his experiences within both these professions and speaks on his decision to venture into technology, establishing himself as a proficient software developer. During this conversation, Beau shares his reasoning for getting three degrees, finding the motivation to learn to code while balancing the demands of a full-time job, and sending out cold emails for his first job in tech. Show Links Partner with Dev \u0026 CodeNewbie! (sponsor) FAANG Beau's GitHub Beau's Twitter FreeCodeCamp JavaScript",
    "author": "CodeNewbie",
    "published": "Wed, 15 Nov 2023 03:00:00 -0500",
    "image": "https://dts.podtrac.com/redirect.mp3/traffic.megaphone.fm/FOR4761645880.mp3?updated=1700001484",
    "source": "http://feeds.codenewbie.org/cnpodcast.xml",
    "categories": [
      "Podcast"
    ]
  },
  {
    "id": "24527a1b-f71b-402c-9664-8357747788af",
    "title": "S26:E2 - Freelancing While Homeschooling (Sarah Greer)",
    "link": "https://www.codenewbie.org/podcast/freelancing-while-homeschooling",
    "description": "In this episode, Saron chats with Lead Web Developer, Sarah Greer. Sarah talks about her coding journey and how she juggled her passion for coding through freelancing while homeschooling her children. Sarah talks about why it was so important to her to learn to code and to have a career outside of having the title of “mom”. She also shares her experience going from freelancing to working full-time and the reasoning behind the switch. Show Links Partner with Dev \u0026 CodeNewbie! (sponsor) CSS HTML JavaScript",
    "author": "CodeNewbie",
    "published": "Wed, 08 Nov 2023 03:00:00 -0500",
    "image": "https://dts.podtrac.com/redirect.mp3/traffic.megaphone.fm/FOR5484617676.mp3?updated=1699381365",
    "source": "http://feeds.codenewbie.org/cnpodcast.xml",
    "categories": [
      "Podcast"
    ]
  },
  {
    "id": "ce164bdc-8715-4026-bfac-8bb7a93fb713",
    "title": "S26:E1 - Make Your Accomplishments Visible (Camille Eddy)",
    "link": "https://www.codenewbie.org/podcast/make-your-accomplishments-visible",
    "description": "This week, Saron talks with Camille Eddy, Technical Product Manager. Camille talks about her life growing up as a Pastor’s child, how she started and grew her business, and when she first found her passion for tech. Camille also shares her experience overcoming a fear of public speaking, and why it enabled her not only to travel the world but also land internships at companies like Google X, NVIDIA, and HP Labs all before graduating. Saron also talks to Camille about when she was asked to introduce President Obama. Camille concludes with principles she would lead with if she was a career transitioner looking to start her career in tech today. Show Links Partner with Dev \u0026 CodeNewbie! (sponsor) Project Manager Product Manager Robotics Engineering Artificial Intelligence Camille's GitHub Camille's Instagram Camille's Twitter",
    "author": "CodeNewbie",
    "published": "Wed, 01 Nov 2023 03:00:00 -0400",
    "image": "https://dts.podtrac.com/redirect.mp3/traffic.megaphone.fm/FOR3784431928.mp3?updated=1698686241",
    "source": "http://feeds.codenewbie.org/cnpodcast.xml",
    "categories": [
      "Podcast"
    ]
  },
  {
    "id": "2fbb71b6-ffad-4c09-88ff-8fd2a5bf9a38",
    "title": "S25:E8 - Empowering Developers of All Abilities (Judith Lung)",
    "link": "https://www.codenewbie.org/podcast/empowering-developers-of-all-abilities",
    "description": "Saron chats with Judith Lung, Software Engineer at LinkedIn. Judith shares how she found herself in tech after initially getting her masters in Clinical Rehabilitation and Mental Health Counseling. Judith talks about her experience learning to code as someone who is blind and the changes she aims to make in the tech space to aid in the progression of tech accessibility. Show Links Partner with Dev \u0026 CodeNewbie! (sponsor) Judith's GitHub Judith's LinkedIn edX Edge freeCodeCamp Assistive Technology Department of Rehabilitation IDE Screen Reader",
    "author": "CodeNewbie",
    "published": "Wed, 04 Oct 2023 03:00:00 -0400",
    "image": "https://dts.podtrac.com/redirect.mp3/traffic.megaphone.fm/FOR6007673858.mp3?updated=1696349647",
    "source": "http://feeds.codenewbie.org/cnpodcast.xml",
    "categories": [
      "Podcast"
    ]
  },
  {
    "id": "48c26e50-e31c-407e-b61b-71d5ca0f9117",
    "title": "S25:E7 - Overcoming Fears and Pursuing Passions (Stefi Rosca)",
    "link": "https://www.codenewbie.org/podcast/overcoming-fears-and-pursuing-passions",
    "description": "Saron chats with Stefi Rosca, Frontend Engineer at Typeform. Stefi talks about their path to breaking into tech in their later twenties after having a fulfilling career in marketing. They also talk about the communities they joined to help motivate and encourage them along the way and how they leveled up in the tech space. Show Links Partner with Dev \u0026 CodeNewbie! (sponsor) Stefi's Website Stefi's GitHub Stefi's LinkedIn Stefi's X Account The Recurse Center Codebar freeCodeCamp C",
    "author": "CodeNewbie",
    "published": "Wed, 27 Sep 2023 03:00:00 -0400",
    "image": "https://dts.podtrac.com/redirect.mp3/traffic.megaphone.fm/FOR2952429192.mp3?updated=1695765491",
    "source": "http://feeds.codenewbie.org/cnpodcast.xml",
    "categories": [
      "Podcast"
    ]
  },
  {
    "id": "edcd73c5-49ab-42fd-9ab7-003bc6ad3f58",
    "title": "S25:E6 - Big Tech: What They Say vs. What They Mean (Rachel Lee Nabors)",
    "link": "https://www.codenewbie.org/podcast/big-tech-what-they-say-vs-what-they-mean",
    "description": "Saron sits down with Rachel Nabors again. They talk about what Rachel has been up to since they were last on the show in 2017, the inside scoop of Big Tech, and Rachel’s experience working for organizations such as Meta, Amazon, and Microsoft. You’ll also hear why Rachel has decided their next chapter will be at a startup and what they are hoping for in their future. Show Links Partner with Dev \u0026 CodeNewbie! (sponsor) See Rachel at React Brussels (Oct 13) See Rachel at React JS Day, Verona (Oct 27) See Rachel at City JS Berlin (Nov 3) See Rachel at React Summit NYC (Nov 13 - 15) Animation at Work Wiggly Goose Club Rachel's 2017 CodeNewbie Episode Rachel's 2014 CodeNewbie Episode Rachel's Instagram Rachel's Twitter Rachel's GitHub Rachel's Website Web Animations API React",
    "author": "CodeNewbie",
    "published": "Wed, 20 Sep 2023 03:00:00 -0400",
    "image": "https://dts.podtrac.com/redirect.mp3/traffic.megaphone.fm/FOR1205447594.mp3?updated=1695142044",
    "source": "http://feeds.codenewbie.org/cnpodcast.xml",
    "categories": [
      "Podcast"
    ]
  },
  {
    "id": "d80c16ca-0e1a-41ef-b816-560b1a2de885",
    "title": "S25:E5 - Mastering Leadership (Brian Jenney)",
    "link": "https://www.codenewbie.org/podcast/mastering-leadership",
    "description": "In this episode, Saron sits down with Brian Jenney, Senior Software Engineering Manager at Clorox. Saron talks to Brian about his struggles with addiction, how he changed his life and turned a new leaf with coding and sobriety, and how his go-getter personality has served him well and continues to play a role in his current success. They also talk about what being a leader looks like and the ways in which you can become a leader regardless of the challenges life throws at you. Show Links Partner with Dev \u0026 CodeNewbie! (sponsor) GitHub YouTube LinkedIn X Instagram AngularJS C# JS Code Coach",
    "author": "CodeNewbie",
    "published": "Wed, 13 Sep 2023 03:00:00 -0400",
    "image": "https://dts.podtrac.com/redirect.mp3/traffic.megaphone.fm/FOR4361653292.mp3?updated=1694546848",
    "source": "http://feeds.codenewbie.org/cnpodcast.xml",
    "categories": [
      "Podcast"
    ]
  },
  {
    "id": "b8b62b60-c6e4-4c72-9dfa-9394a81a9458",
    "title": "The Two Reacts",
    "link": "https://overreacted.io/the-two-reacts/",
    "description": "UI = f(data)(state)",
    "author": "",
    "published": "Thu, 04 Jan 2024 00:00:00 GMT",
    "image": "",
    "source": "https://overreacted.io/rss.xml",
    "categories": null
  },
  {
    "id": "bbf8a283-dbec-4c58-a1e2-5f65a6b53eda",
    "title": "A Chain Reaction",
    "link": "https://overreacted.io/a-chain-reaction/",
    "description": "The limits of my language mean the limits of my world.",
    "author": "",
    "published": "Mon, 11 Dec 2023 00:00:00 GMT",
    "image": "",
    "source": "https://overreacted.io/rss.xml",
    "categories": null
  },
  {
    "id": "8b753be7-dd06-417c-8f42-fe7792b16bed",
    "title": "npm audit: Broken by Design",
    "link": "https://overreacted.io/npm-audit-broken-by-design/",
    "description": "Found 99 vulnerabilities (84 moderately irrelevant, 15 highly irrelevant)",
    "author": "",
    "published": "Wed, 07 Jul 2021 00:00:00 GMT",
    "image": "",
    "source": "https://overreacted.io/rss.xml",
    "categories": null
  },
  {
    "id": "c5672708-ba13-45fe-b346-35747d76ace8",
    "title": "Before You memo()",
    "link": "https://overreacted.io/before-you-memo/",
    "description": "Rendering optimizations that come naturally.",
    "author": "",
    "published": "Tue, 23 Feb 2021 00:00:00 GMT",
    "image": "",
    "source": "https://overreacted.io/rss.xml",
    "categories": null
  },
  {
    "id": "cce1df04-b762-4bd1-9023-f11579162264",
    "title": "The WET Codebase",
    "link": "https://overreacted.io/the-wet-codebase/",
    "description": "Come waste your time with me.",
    "author": "",
    "published": "Mon, 13 Jul 2020 00:00:00 GMT",
    "image": "",
    "source": "https://overreacted.io/rss.xml",
    "categories": null
  },
  {
    "id": "3cf5bb80-62b4-4f3b-a098-24c4d06915c5",
    "title": "Goodbye, Clean Code",
    "link": "https://overreacted.io/goodbye-clean-code/",
    "description": "Let clean code guide you. Then let it go.",
    "author": "",
    "published": "Sat, 11 Jan 2020 00:00:00 GMT",
    "image": "",
    "source": "https://overreacted.io/rss.xml",
    "categories": null
  },
  {
    "id": "66398add-9c4d-4b8e-9f73-e67226cef530",
    "title": "My Decade in Review",
    "link": "https://overreacted.io/my-decade-in-review/",
    "description": "A personal reflection.",
    "author": "",
    "published": "Wed, 01 Jan 2020 00:00:00 GMT",
    "image": "",
    "source": "https://overreacted.io/rss.xml",
    "categories": null
  },
  {
    "id": "d9324317-b388-4f85-80cc-00f156469433",
    "title": "What Are the React Team Principles?",
    "link": "https://overreacted.io/what-are-the-react-team-principles/",
    "description": "UI Before API.",
    "author": "",
    "published": "Wed, 25 Dec 2019 00:00:00 GMT",
    "image": "",
    "source": "https://overreacted.io/rss.xml",
    "categories": null
  },
  {
    "id": "8af0fc5e-f233-4978-a4e9-f448f4545fc1",
    "title": "On let vs const",
    "link": "https://overreacted.io/on-let-vs-const/",
    "description": "So which one should I use?",
    "author": "",
    "published": "Sun, 22 Dec 2019 00:00:00 GMT",
    "image": "",
    "source": "https://overreacted.io/rss.xml",
    "categories": null
  },
  {
    "id": "eb17391a-7a0b-4a98-a93c-310dbb9593b5",
    "title": "What Is JavaScript Made Of?",
    "link": "https://overreacted.io/what-is-javascript-made-of/",
    "description": "Getting a closure on JavaScript.",
    "author": "",
    "published": "Fri, 20 Dec 2019 00:00:00 GMT",
    "image": "",
    "source": "https://overreacted.io/rss.xml",
    "categories": null
  },
  {
    "id": "297310ba-d726-4939-a524-8cb06960f327",
    "title": "How Does the Development Mode Work?",
    "link": "https://overreacted.io/how-does-the-development-mode-work/",
    "description": "Dead code elimination by convention.",
    "author": "",
    "published": "Sun, 04 Aug 2019 00:00:00 GMT",
    "image": "",
    "source": "https://overreacted.io/rss.xml",
    "categories": null
  },
  {
    "id": "ef44d1c2-f5e8-46ee-880a-d970537e3c4d",
    "title": "Algebraic Effects for the Rest of Us",
    "link": "https://overreacted.io/algebraic-effects-for-the-rest-of-us/",
    "description": "They’re not burritos.",
    "author": "",
    "published": "Sun, 21 Jul 2019 00:00:00 GMT",
    "image": "",
    "source": "https://overreacted.io/rss.xml",
    "categories": null
  },
  {
    "id": "d2b2518f-f579-4da2-b0d4-ebc34d517f92",
    "title": "Preparing for a Tech Talk, Part 3: Content",
    "link": "https://overreacted.io/preparing-for-tech-talk-part-3-content/",
    "description": "Turning an idea into a talk.",
    "author": "",
    "published": "Wed, 10 Jul 2019 00:00:00 GMT",
    "image": "",
    "source": "https://overreacted.io/rss.xml",
    "categories": null
  },
  {
    "id": "242ec2ad-d70b-4830-a630-d8b7a0367e9f",
    "title": "Name It, and They Will Come",
    "link": "https://overreacted.io/name-it-and-they-will-come/",
    "description": "A change starts with a story.",
    "author": "",
    "published": "Mon, 25 Mar 2019 00:00:00 GMT",
    "image": "",
    "source": "https://overreacted.io/rss.xml",
    "categories": null
  },
  {
    "id": "b53fc209-645b-483a-bbb4-0455ce348051",
    "title": "Writing Resilient Components",
    "link": "https://overreacted.io/writing-resilient-components/",
    "description": "Four principles to set you on the right path.",
    "author": "",
    "published": "Sat, 16 Mar 2019 00:00:00 GMT",
    "image": "",
    "source": "https://overreacted.io/rss.xml",
    "categories": null
  },
  {
    "id": "58e02424-46af-4d3d-ac51-cb88ef8c2696",
    "title": "A Complete Guide to useEffect",
    "link": "https://overreacted.io/a-complete-guide-to-useeffect/",
    "description": "Effects are a part of your data flow.",
    "author": "",
    "published": "Sat, 09 Mar 2019 00:00:00 GMT",
    "image": "",
    "source": "https://overreacted.io/rss.xml",
    "categories": null
  },
  {
    "id": "4b37cfef-7c1f-4498-9a1f-d56ea3020156",
    "title": "How Are Function Components Different from Classes?",
    "link": "https://overreacted.io/how-are-function-components-different-from-classes/",
    "description": "They’re a whole different Pokémon.",
    "author": "",
    "published": "Sun, 03 Mar 2019 00:00:00 GMT",
    "image": "",
    "source": "https://overreacted.io/rss.xml",
    "categories": null
  },
  {
    "id": "fcd9d13c-8905-4a4b-afd2-62af06bbf7e2",
    "title": "Coping with Feedback",
    "link": "https://overreacted.io/coping-with-feedback/",
    "description": "Sometimes I can’t fall asleep.",
    "author": "",
    "published": "Sat, 02 Mar 2019 00:00:00 GMT",
    "image": "",
    "source": "https://overreacted.io/rss.xml",
    "categories": null
  },
  {
    "id": "a74a5b53-a650-4139-b5ad-62ae404e18d7",
    "title": "Fix Like No One’s Watching",
    "link": "https://overreacted.io/fix-like-no-ones-watching/",
    "description": "The other kind of technical debt.",
    "author": "",
    "published": "Fri, 15 Feb 2019 00:00:00 GMT",
    "image": "",
    "source": "https://overreacted.io/rss.xml",
    "categories": null
  },
  {
    "id": "7ce6ba6b-a106-490d-aeb4-6b7ec3934605",
    "title": "Making setInterval Declarative with React Hooks",
    "link": "https://overreacted.io/making-setinterval-declarative-with-react-hooks/",
    "description": "How I learned to stop worrying and love refs.",
    "author": "",
    "published": "Mon, 04 Feb 2019 00:00:00 GMT",
    "image": "",
    "source": "https://overreacted.io/rss.xml",
    "categories": null
  },
  {
    "id": "5d88b48d-7190-450f-a0a6-cd5de6be2f9f",
    "title": "Prioritization is the Ultimate Skill",
    "link": "http://www.developertea.com",
    "description": "Learn to prioritize, and everything else falls into place. This is clarity through perspective and purpose.📮 Ask a QuestionIf you enjoyed this episode and would like me to discuss a question that you have on the show, drop it over at: developertea.com.📮 Join the DiscordIf you want to be a part of a supportive community of engineers (non-engineers welcome!) working to improve their lives and careers, join us on the Developer Tea Discord community by visiting https://developertea.com/discord today!🧡 Leave a ReviewIf you're enjoying the show and want to support the content head over to iTunes and leave a review! It helps other developers discover the show and keep us focused on what matters to you.",
    "author": "Jonathan Cutrell",
    "published": "Fri, 4 Oct 2024 07:00:00 +0000",
    "image": "https://dts.podtrac.com/redirect.mp3/cdn.simplecast.com/audio/c44db111-b60d-436e-ab63-38c7c3402406/episodes/23ce2f83-0c8f-469b-a420-573226332dc7/audio/8bfba3a3-43f2-42f5-8d9e-b1e6dfe17aa0/default_tc.mp3?aid=rss_feed\u0026feed=dLRotFGk",
    "source": "https://feeds.simplecast.com/dLRotFGk",
    "categories": null
  },
  {
    "id": "16ec0936-3d01-4010-8bce-77e86c91f8ad",
    "title": "Career Growth Comes From Finding Low Hanging Fruit in the Gaps",
    "link": "http://www.developertea.com",
    "description": "Your career growth will be directly correlated to your ability to solve critical unsolved problems in the gaps of your organization's problems. Focus on finding the problems that have a high chance of success for you specifically - the low hanging fruit.📮 Ask a QuestionIf you enjoyed this episode and would like me to discuss a question that you have on the show, drop it over at: developertea.com.📮 Join the DiscordIf you want to be a part of a supportive community of engineers (non-engineers welcome!) working to improve their lives and careers, join us on the Developer Tea Discord community by visiting https://developertea.com/discord today!🧡 Leave a ReviewIf you're enjoying the show and want to support the content head over to iTunes and leave a review! It helps other developers discover the show and keep us focused on what matters to you.",
    "author": "Jonathan Cutrell",
    "published": "Thu, 19 Sep 2024 07:00:00 +0000",
    "image": "https://dts.podtrac.com/redirect.mp3/cdn.simplecast.com/audio/c44db111-b60d-436e-ab63-38c7c3402406/episodes/bc6954de-fbf4-449c-8597-0188cadd17bc/audio/fe8b96bc-c49e-4498-aaee-a96e5330e7b3/default_tc.mp3?aid=rss_feed\u0026feed=dLRotFGk",
    "source": "https://feeds.simplecast.com/dLRotFGk",
    "categories": null
  },
  {
    "id": "140f891e-6974-4267-abd5-3daf6e4aeb9e",
    "title": "How Culture Might Eat Your Values For Breakfast",
    "link": "http://www.developertea.com",
    "description": "In this episode we discuss the delineation between culture and values. What you allow is just as important as what you value.🙏 Today's Episode is Brought To you by: UnblockedYour developers know how to write code. What they’re missing is the context to know what code to write. Unblocked gives engineering teams the answers they need to get their jobs done – without having to wait on or interrupt their teammates. Get started for free at getunblocked.com.📮 Ask a QuestionIf you enjoyed this episode and would like me to discuss a question that you have on the show, drop it over at: developertea.com.📮 Join the DiscordIf you want to be a part of a supportive community of engineers (non-engineers welcome!) working to improve their lives and careers, join us on the Developer Tea Discord community by visiting https://developertea.com/discord today!🧡 Leave a ReviewIf you're enjoying the show and want to support the content head over to iTunes and leave a review! It helps other developers discover the show and keep us focused on what matters to you.",
    "author": "Jonathan Cutrell",
    "published": "Thu, 5 Sep 2024 07:00:00 +0000",
    "image": "https://dts.podtrac.com/redirect.mp3/cdn.simplecast.com/audio/c44db111-b60d-436e-ab63-38c7c3402406/episodes/cb50239e-57e1-470e-94b8-30e03d7f8020/audio/5032fdf1-07c1-4019-b766-9f5b9361ad36/default_tc.mp3?aid=rss_feed\u0026feed=dLRotFGk",
    "source": "https://feeds.simplecast.com/dLRotFGk",
    "categories": null
  },
  {
    "id": "278d0c4d-496f-44da-abfd-f07127d4d1cf",
    "title": "The Tricky Parts of Merit Cycles",
    "link": "http://www.developertea.com",
    "description": "The blunt reality: Merit cycles are not how you build your earning power or career. They are a function of company culture and HR, and generally speaking are disconnected from your biggest opportunities for growth.So, where should you focus? That's what we talk about in today's episode.🙏 Today's Episode is Brought To you by: UnblockedYour developers know how to write code. What they’re missing is the context to know what code to write. Unblocked gives engineering teams the answers they need to get their jobs done – without having to wait on or interrupt their teammates. Get started for free at getunblocked.com.📮 Ask a QuestionIf you enjoyed this episode and would like me to discuss a question that you have on the show, drop it over at: developertea.com.📮 Join the DiscordIf you want to be a part of a supportive community of engineers (non-engineers welcome!) working to improve their lives and careers, join us on the Developer Tea Discord community by visiting https://developertea.com/discord today!🧡 Leave a ReviewIf you're enjoying the show and want to support the content head over to iTunes and leave a review! It helps other developers discover the show and keep us focused on what matters to you.",
    "author": "Jonathan Cutrell",
    "published": "Thu, 29 Aug 2024 07:00:00 +0000",
    "image": "https://dts.podtrac.com/redirect.mp3/cdn.simplecast.com/audio/c44db111-b60d-436e-ab63-38c7c3402406/episodes/22be4ecf-9f14-406f-aa7b-9a4d868b2645/audio/ddf539c0-2feb-4444-b06d-d693134e96f8/default_tc.mp3?aid=rss_feed\u0026feed=dLRotFGk",
    "source": "https://feeds.simplecast.com/dLRotFGk",
    "categories": null
  },
  {
    "id": "aeceaeb7-0c40-4da8-8934-fb565c8082fe",
    "title": "Limiting Factors - The Hidden Focus That Matters the Most",
    "link": "http://www.developertea.com",
    "description": "In today's episode we discuss focus, again. This time, through the lens of a few mental models that help us decide what is actually the right thing to focus on. You'll learn the real enemy of focus (note: it's not just distraction).🙏 Today's Episode is Brought To you by: UnblockedYour developers know how to write code. What they’re missing is the context to know what code to write. Unblocked gives engineering teams the answers they need to get their jobs done – without having to wait on or interrupt their teammates. Get started for free at getunblocked.com.📮 Ask a QuestionIf you enjoyed this episode and would like me to discuss a question that you have on the show, drop it over at: developertea.com.📮 Join the DiscordIf you want to be a part of a supportive community of engineers (non-engineers welcome!) working to improve their lives and careers, join us on the Developer Tea Discord community by visiting https://developertea.com/discord today!🧡 Leave a ReviewIf you're enjoying the show and want to support the content head over to iTunes and leave a review! It helps other developers discover the show and keep us focused on what matters to you.",
    "author": "Jonathan Cutrell",
    "published": "Thu, 22 Aug 2024 07:00:00 +0000",
    "image": "https://dts.podtrac.com/redirect.mp3/cdn.simplecast.com/audio/c44db111-b60d-436e-ab63-38c7c3402406/episodes/aa13777c-8703-4c2e-beda-15ced0279d37/audio/b704ee1c-d69b-4b3a-b1b5-80222b3539ef/default_tc.mp3?aid=rss_feed\u0026feed=dLRotFGk",
    "source": "https://feeds.simplecast.com/dLRotFGk",
    "categories": null
  },
  {
    "id": "fec8de98-b059-4da7-8527-291e91ebdcae",
    "title": "Improve Your Chances In Your Engineering Job Search Using the Scientific Method with Brian Pulliam",
    "link": "http://www.developertea.com",
    "description": "I'm joined today by Brian Pulliam. I've personally engaged Brian as a career coach. In this discussion we'll talk a bit about coaching, and about how you can set yourself up to become a much better candidate in your job search as an engineering leader.Values Exercise Live:Jonathan and Brian perform a live exercise, transforming company core values into interview questions.Discussing the importance of aligning your experiences with the values that a company holds.\"I'm going to do this live right now with you, actually. I think it'll be a cool exercise...\"Advanced Interview Techniques:How to handle unexpected questions by paraphrasing.Preparing for common interview questions derived from company values.\"You should convert every single one of those core values into a question that starts with tell me about a time when you demonstrated X.\"Finding a Way to Succeed:The importance of creative problem solving in leadership.Examples of finding efficient solutions to technical problems without writing code.\"With zero lines of code...the ops team just reconfigured a job to run more often.\"Effective Storytelling in Interviews:How to use stories to demonstrate competencies and cultural fit.The role of storytelling in making a lasting impression on interviewers.\"Stories move the world...people write $50 million dollar checks to startup founders based on stories.\"Building a Culture of Excellence:Strategies for fostering a high-performance team environment.Reflections on leadership and creating positive workplace dynamics.\"We provide stable, fast, low friction developer experiences for all engineering teams at Zillow.\"🙏 Today's Episode is Brought To you by: UnblockedYour developers know how to write code. What they’re missing is the context to know what code to write. Unblocked gives engineering teams the answers they need to get their jobs done – without having to wait on or interrupt their teammates. Get started for free at getunblocked.com.📮 Ask a QuestionIf you enjoyed this episode and would like me to discuss a question that you have on the show, drop it over at: developertea.com.📮 Join the DiscordIf you want to be a part of a supportive community of engineers (non-engineers welcome!) working to improve their lives and careers, join us on the Developer Tea Discord community by visiting https://developertea.com/discord today!🧡 Leave a ReviewIf you're enjoying the show and want to support the content head over to iTunes and leave a review! It helps other developers discover the show and keep us focused on what matters to you.",
    "author": "Jonathan Cutrell",
    "published": "Wed, 14 Aug 2024 07:00:00 +0000",
    "image": "https://dts.podtrac.com/redirect.mp3/cdn.simplecast.com/audio/c44db111-b60d-436e-ab63-38c7c3402406/episodes/847a2af9-b4e4-4e5e-a0d6-7a586da46666/audio/06878e77-f4f8-4305-b44e-0dd7f37a1234/default_tc.mp3?aid=rss_feed\u0026feed=dLRotFGk",
    "source": "https://feeds.simplecast.com/dLRotFGk",
    "categories": null
  },
  {
    "id": "40577780-0ced-48f2-b4c1-41d55bdfddce",
    "title": "Improve Your Chances In Your Engineering Job Search Using the Scientific Method with Brian Pulliam",
    "link": "http://www.developertea.com",
    "description": "I'm joined today by Brian Pulliam. I've personally engaged Brian as a career coach. In this discussion we'll talk a bit about coaching, and about how you can set yourself up to become a much better candidate in your job search as an engineering leader.Introduction to Career Coaching:What is a career coach and how they differ from a manager or mentor.Brian Pulliam shares his journey from tech to becoming an athletics coach.\"I was in tech for about 26 years...being an athletics coach with my wife...I sought out my own career coach.\"The Value of Career Coaching:How a career coach can provide objective, unfiltered feedback.The benefits of having an advocate without conflicts of interest.\"As a career coach, you know, I'm self-employed...no conflict of interest, maybe with your own boss.\"Strategies for Career Growth:The importance of optimizing your career path like you would optimize code.Using career coaching to navigate sticky situations and grow professionally.\"We optimize for memory, right? We optimize for CPU...coaches can help you learn how to optimize.\"Interview Tactics and Mindset:The value of authenticity in interviews and presenting your true self.Why technical proficiency isn't the only factor in landing a job.How asking the right questions can set you apart from other candidates.\"The person who starts writing code right away...is almost certainly not perceived as a senior developer.\"Preparing for Market Fluctuations:Understanding the cyclical nature of the tech job market.How to prepare for job changes even when you’re happily employed.The analogy of tech hiring seasons and being ready for winter.\"Tech has hiring seasons...the challenge with the hiring seasons in tech...they are of indeterminate length.\"Building a Resilient Career:Insights into maintaining career readiness and job security.The importance of continual learning and adapting to market demands.\"Test your ability to get a new job when you don't need a new job...the power you have when you go into an interview and you are happily employed.\"Real-life Examples and Lessons:Brian’s personal experiences with layoffs and career transitions.Practical advice on leveraging your network and resources.\"My very first job out of school...I got laid off very unexpectedly...26 years between layoffs.\"Preparing for Interview Questions:How to handle unexpected questions by paraphrasing.Preparing for common interview questions derived from company values.\"You should convert every single one of those core values into a question that starts with tell me about a time when you demonstrated X.\"🙏 Today's Episode is Brought To you by: UnblockedYour developers know how to write code. What they’re missing is the context to know what code to write. Unblocked gives engineering teams the answers they need to get their jobs done – without having to wait on or interrupt their teammates. Get started for free at getunblocked.com.📮 Ask a QuestionIf you enjoyed this episode and would like me to discuss a question that you have on the show, drop it over at: developertea.com.📮 Join the DiscordIf you want to be a part of a supportive community of engineers (non-engineers welcome!) working to improve their lives and careers, join us on the Developer Tea Discord community by visiting https://developertea.com/discord today!🧡 Leave a ReviewIf you're enjoying the show and want to support the content head over to iTunes and leave a review! It helps other developers discover the show and keep us focused on what matters to you.",
    "author": "Jonathan Cutrell",
    "published": "Thu, 8 Aug 2024 07:00:00 +0000",
    "image": "https://dts.podtrac.com/redirect.mp3/cdn.simplecast.com/audio/c44db111-b60d-436e-ab63-38c7c3402406/episodes/c96d39df-a8c7-4935-aba7-63967965ad03/audio/78a9de60-19a9-4a86-9467-b5345fb6dd18/default_tc.mp3?aid=rss_feed\u0026feed=dLRotFGk",
    "source": "https://feeds.simplecast.com/dLRotFGk",
    "categories": null
  },
  {
    "id": "671ae2ec-a2d8-47ec-8ba9-a58fbf12d53f",
    "title": "Focus On Outcomes By Resetting Your Base",
    "link": "http://www.developertea.com",
    "description": "In this episode we talk about the concept of \"resetting your base\" - moving in a direction you don't necessarily want to go in order to achieve better outcomes in the long run.🙏 Today's Episode is Brought To you by: UnblockedYour developers know how to write code. What they’re missing is the context to know what code to write. Unblocked gives engineering teams the answers they need to get their jobs done – without having to wait on or interrupt their teammates. Get started for free at getunblocked.com.📮 Ask a QuestionIf you enjoyed this episode and would like me to discuss a question that you have on the show, drop it over at: developertea.com.📮 Join the DiscordIf you want to be a part of a supportive community of engineers (non-engineers welcome!) working to improve their lives and careers, join us on the Developer Tea Discord community by visiting https://developertea.com/discord today!🧡 Leave a ReviewIf you're enjoying the show and want to support the content head over to iTunes and leave a review! It helps other developers discover the show and keep us focused on what matters to you.",
    "author": "Jonathan Cutrell",
    "published": "Fri, 2 Aug 2024 07:00:00 +0000",
    "image": "https://dts.podtrac.com/redirect.mp3/cdn.simplecast.com/audio/c44db111-b60d-436e-ab63-38c7c3402406/episodes/dff56130-ac11-45b3-aedf-98744612043a/audio/442b2131-dcc5-4e97-8a12-dd0e947c8e47/default_tc.mp3?aid=rss_feed\u0026feed=dLRotFGk",
    "source": "https://feeds.simplecast.com/dLRotFGk",
    "categories": null
  },
  {
    "id": "00fdca74-5b7d-4ef5-96e9-0bc154be119c",
    "title": "Portraying Confidence in the Face of the Unknown",
    "link": "http://www.developertea.com",
    "description": "In today's episode we discuss how you might build your confidence without being disingenuous. This isn't a lesson in psychology or tricks - it's about building true confidence in what you do (and importantly, don't) know.🙏 Today's Episode is Brought To you by: UnblockedYour developers know how to write code. What they’re missing is the context to know what code to write. Unblocked gives engineering teams the answers they need to get their jobs done – without having to wait on or interrupt their teammates. Get started for free at getunblocked.com.📮 Ask a QuestionIf you enjoyed this episode and would like me to discuss a question that you have on the show, drop it over at: developertea.com.📮 Join the DiscordIf you want to be a part of a supportive community of engineers (non-engineers welcome!) working to improve their lives and careers, join us on the Developer Tea Discord community by visiting https://developertea.com/discord today!🧡 Leave a ReviewIf you're enjoying the show and want to support the content head over to iTunes and leave a review! It helps other developers discover the show and keep us focused on what matters to you.",
    "author": "Jonathan Cutrell",
    "published": "Wed, 24 Jul 2024 07:00:00 +0000",
    "image": "https://dts.podtrac.com/redirect.mp3/cdn.simplecast.com/audio/c44db111-b60d-436e-ab63-38c7c3402406/episodes/501718f3-3d30-4b95-834d-4d3b125ebe3c/audio/7a55b722-02ef-41f7-80e5-1b873ef961b7/default_tc.mp3?aid=rss_feed\u0026feed=dLRotFGk",
    "source": "https://feeds.simplecast.com/dLRotFGk",
    "categories": null
  },
  {
    "id": "e1bdbad7-e9f2-4403-878f-e7ffdb0ef065",
    "title": "Now, Next, Later, Never - A Simple Daily Framework for Managing Information and Prioritization",
    "link": "http://www.developertea.com",
    "description": "In today's episode, we'll discuss an absolutely simple structure for prioritization and information flow in your daily work. The flow relies on a basic text editor - that's it!🙏 Today's Episode is Brought To you by: UnblockedYour developers know how to write code. What they’re missing is the context to know what code to write. Unblocked gives engineering teams the answers they need to get their jobs done – without having to wait on or interrupt their teammates. Get started for free at getunblocked.com.📮 Ask a QuestionIf you enjoyed this episode and would like me to discuss a question that you have on the show, drop it over at: developertea.com.📮 Join the DiscordIf you want to be a part of a supportive community of engineers (non-engineers welcome!) working to improve their lives and careers, join us on the Developer Tea Discord community by visiting https://developertea.com/discord today!🧡 Leave a ReviewIf you're enjoying the show and want to support the content head over to iTunes and leave a review! It helps other developers discover the show and keep us focused on what matters to you.",
    "author": "Jonathan Cutrell",
    "published": "Wed, 17 Jul 2024 07:00:00 +0000",
    "image": "https://dts.podtrac.com/redirect.mp3/cdn.simplecast.com/audio/c44db111-b60d-436e-ab63-38c7c3402406/episodes/52397a0d-c471-4b79-88f1-36ff9343de84/audio/ffa0ea99-dd91-4b46-9346-6c77877560a9/default_tc.mp3?aid=rss_feed\u0026feed=dLRotFGk",
    "source": "https://feeds.simplecast.com/dLRotFGk",
    "categories": null
  },
  {
    "id": "8394be4a-d2f0-4402-9143-58b50ac396f9",
    "title": "Bias to Action As A Skill",
    "link": "http://www.developertea.com",
    "description": "You have seen \"bias to action\" on job requirements, but what does this really mean? Is it something that can be learned? Make sure you know the difference between this skill and a more automatic cognitive bias.📮 Ask a QuestionIf you enjoyed this episode and would like me to discuss a question that you have on the show, drop it over at: developertea.com.📮 Join the DiscordIf you want to be a part of a supportive community of engineers (non-engineers welcome!) working to improve their lives and careers, join us on the Developer Tea Discord community by visiting https://developertea.com/discord today!🧡 Leave a ReviewIf you're enjoying the show and want to support the content head over to iTunes and leave a review! It helps other developers discover the show and keep us focused on what matters to you.",
    "author": "Jonathan Cutrell",
    "published": "Fri, 5 Jul 2024 07:00:00 +0000",
    "image": "https://dts.podtrac.com/redirect.mp3/cdn.simplecast.com/audio/c44db111-b60d-436e-ab63-38c7c3402406/episodes/feefd63d-a148-4d8a-80b7-c6e7ae1b53ae/audio/d29bd95d-8997-4e38-af38-ddae743a569e/default_tc.mp3?aid=rss_feed\u0026feed=dLRotFGk",
    "source": "https://feeds.simplecast.com/dLRotFGk",
    "categories": null
  },
  {
    "id": "d0284150-57f4-4ede-aabd-a5c111ab63be",
    "title": "Managing Using Core Indicators of Team Outcomes",
    "link": "http://www.developertea.com",
    "description": "In this episode, we use the Start / Stop / Continue framework in a new way. As leaders, we should always know what outcome indicators a given discussion is based on. In this episode, we discuss the three core outcome indicators for managers to pay close attention to.📮 Ask a QuestionIf you enjoyed this episode and would like me to discuss a question that you have on the show, drop it over at: developertea.com.📮 Join the DiscordIf you want to be a part of a supportive community of engineers (non-engineers welcome!) working to improve their lives and careers, join us on the Developer Tea Discord community by visiting https://developertea.com/discord today!🧡 Leave a ReviewIf you're enjoying the show and want to support the content head over to iTunes and leave a review! It helps other developers discover the show and keep us focused on what matters to you.",
    "author": "Jonathan Cutrell",
    "published": "Mon, 3 Jun 2024 07:00:00 +0000",
    "image": "https://dts.podtrac.com/redirect.mp3/cdn.simplecast.com/audio/c44db111-b60d-436e-ab63-38c7c3402406/episodes/619f4a1c-93ae-416b-858a-99e4dfbd40bd/audio/62ac370f-0072-4eda-8472-4b7adb1baad3/default_tc.mp3?aid=rss_feed\u0026feed=dLRotFGk",
    "source": "https://feeds.simplecast.com/dLRotFGk",
    "categories": null
  },
  {
    "id": "4663102b-bda8-480e-bcd0-c44eedcb76a3",
    "title": "Inverted Thinking As a Strategy To Combat Bias",
    "link": "http://www.developertea.com",
    "description": "In today's episode, we talk about inversion and inverted thinking. This is a mental model inspired by considering the \"negative space\" instead of the space occupied by the thing you are seeking. For example, if you are trying to avoid failure, you might intuitively seek a \"successful strategy\" instead of looking at the reasons it may fail directly. Inversion will help you avoid these traps.📮 Ask a QuestionIf you enjoyed this episode and would like me to discuss a question that you have on the show, drop it over at: developertea.com.📮 Join the DiscordIf you want to be a part of a supportive community of engineers (non-engineers welcome!) working to improve their lives and careers, join us on the Developer Tea Discord community by visiting https://developertea.com/discord today!🧡 Leave a ReviewIf you're enjoying the show and want to support the content head over to iTunes and leave a review! It helps other developers discover the show and keep us focused on what matters to you.",
    "author": "Jonathan Cutrell",
    "published": "Wed, 15 May 2024 07:00:00 +0000",
    "image": "https://dts.podtrac.com/redirect.mp3/cdn.simplecast.com/audio/c44db111-b60d-436e-ab63-38c7c3402406/episodes/3b0353ee-c642-4f56-9e45-6854b1ee034d/audio/6c62e567-adff-4479-a2d8-25e07d453ddb/default_tc.mp3?aid=rss_feed\u0026feed=dLRotFGk",
    "source": "https://feeds.simplecast.com/dLRotFGk",
    "categories": null
  },
  {
    "id": "d08b2a90-92e9-4e0d-8b49-35e0306073a9",
    "title": "Talking To Yourself for Better One-On-Ones",
    "link": "http://www.developertea.com",
    "description": "In today's episode we discuss a preparation step for your next one-on-one. Don't just wing it - do your homework... and talk to yourself a little bit.📮 Ask a QuestionIf you enjoyed this episode and would like me to discuss a question that you have on the show, drop it over at: developertea.com.📮 Join the DiscordIf you want to be a part of a supportive community of engineers (non-engineers welcome!) working to improve their lives and careers, join us on the Developer Tea Discord community by visiting https://developertea.com/discord today!🧡 Leave a ReviewIf you're enjoying the show and want to support the content head over to iTunes and leave a review! It helps other developers discover the show and keep us focused on what matters to you.",
    "author": "Jonathan Cutrell",
    "published": "Wed, 8 May 2024 07:00:00 +0000",
    "image": "https://dts.podtrac.com/redirect.mp3/cdn.simplecast.com/audio/c44db111-b60d-436e-ab63-38c7c3402406/episodes/3c51b73c-4bb4-4d51-ae97-b424d02f5675/audio/551e1236-5cdb-4678-b36a-4b179825f56d/default_tc.mp3?aid=rss_feed\u0026feed=dLRotFGk",
    "source": "https://feeds.simplecast.com/dLRotFGk",
    "categories": null
  },
  {
    "id": "a17bfacc-2121-48df-b24e-7749465dfe97",
    "title": "Interview Prep: Two Counterintuitive Tips",
    "link": "http://www.developertea.com",
    "description": "In today's episode we'll discuss some counterintuitive advice for your interviews. This advice applies in interview settings, but also applies in 1-1 meetings as well.🙏 Today's Episode is Brought To you by: UnblockedUnblocked provides helpful and accurate answers developers need to get jobs done. It tailors answers by augmenting your source code with existing team knowledge in GitHub, Slack, Confluence and more. Spend less time digging for context and more time building great software. Check it out at getunblocked.com.📮 Ask a QuestionIf you enjoyed this episode and would like me to discuss a question that you have on the show, drop it over at: developertea.com.📮 Join the DiscordIf you want to be a part of a supportive community of engineers (non-engineers welcome!) working to improve their lives and careers, join us on the Developer Tea Discord community by visiting https://developertea.com/discord today!🧡 Leave a ReviewIf you're enjoying the show and want to support the content head over to iTunes and leave a review! It helps other developers discover the show and keep us focused on what matters to you.",
    "author": "Jonathan Cutrell",
    "published": "Wed, 1 May 2024 07:00:00 +0000",
    "image": "https://dts.podtrac.com/redirect.mp3/cdn.simplecast.com/audio/c44db111-b60d-436e-ab63-38c7c3402406/episodes/012bf1ee-494e-4a56-8a68-cb818d2eb072/audio/1dbd5ed9-e90c-4131-9596-dcf811edaea8/default_tc.mp3?aid=rss_feed\u0026feed=dLRotFGk",
    "source": "https://feeds.simplecast.com/dLRotFGk",
    "categories": null
  },
  {
    "id": "89ff5993-cdc5-404f-87fa-734ee4cf6a6b",
    "title": "The Top Resumé Mistake I See, Plus the Best Resumé Advice I've Ever Received",
    "link": "http://www.developertea.com",
    "description": "After today's episode, your resumé is going to get better! In this episode I will share the biggest mistake and the best advice I've ever received about building a great resumé. This will take some work from you, but I hope you walk away from this episode feeling like you have the right mindset to improve your resumé drastically, and land more interviews, ultimately leading to better job opportunities for the Developer Tea audience!🙏 Today's Episode is Brought To you by: Neo4jIs your code getting dragged down by endless JOINs and long query times? Try simplifying the complexity with graphs!With Neo4j, you can code in your favorite programming language and against anydriver. See what graphs can do for you at Neo4j.com/developer📮 Ask a QuestionIf you enjoyed this episode and would like me to discuss a question that you have on the show, drop it over at: developertea.com.📮 Join the DiscordIf you want to be a part of a supportive community of engineers (non-engineers welcome!) working to improve their lives and careers, join us on the Developer Tea Discord community by visiting https://developertea.com/discord today!🧡 Leave a ReviewIf you're enjoying the show and want to support the content head over to iTunes and leave a review! It helps other developers discover the show and keep us focused on what matters to you.",
    "author": "Jonathan Cutrell",
    "published": "Thu, 25 Apr 2024 07:00:00 +0000",
    "image": "https://dts.podtrac.com/redirect.mp3/cdn.simplecast.com/audio/c44db111-b60d-436e-ab63-38c7c3402406/episodes/c18e458d-ef03-499f-8b35-de1fcc1a8b48/audio/13f642fd-8af8-4c4f-8f3a-7599c921c717/default_tc.mp3?aid=rss_feed\u0026feed=dLRotFGk",
    "source": "https://feeds.simplecast.com/dLRotFGk",
    "categories": null
  },
  {
    "id": "543350f5-698b-4baf-94bf-b2c7652b259c",
    "title": "Prioritization Using Critical Path Thinking",
    "link": "http://www.developertea.com",
    "description": "In today's episode, we talk about the counterintuitive process of prioritizing based on critical path. This is not a novel concept that I've invented, but rather a revisiting of the classic discussion started by Eli Goldratt in his book \"The Goal\", and later in his book \"Critical Path\", based on the theory of constraints.🙏 Today's Episode is Brought To you by: PropelAuthIf you're building a B2B product and looking for an auth provider that can support you now and as you grow, give PropelAuth a try. All of their features are available to test without a credit card, and you can get started at www.propelauth.com today!📮 Ask a QuestionIf you enjoyed this episode and would like me to discuss a question that you have on the show, drop it over at: developertea.com.📮 Join the DiscordIf you want to be a part of a supportive community of engineers (non-engineers welcome!) working to improve their lives and careers, join us on the Developer Tea Discord community by visiting https://developertea.com/discord today!🧡 Leave a ReviewIf you're enjoying the show and want to support the content head over to iTunes and leave a review! It helps other developers discover the show and keep us focused on what matters to you.",
    "author": "Jonathan Cutrell",
    "published": "Tue, 23 Apr 2024 07:00:00 +0000",
    "image": "https://dts.podtrac.com/redirect.mp3/cdn.simplecast.com/audio/c44db111-b60d-436e-ab63-38c7c3402406/episodes/c7634e52-7b79-4af9-8c55-18a895db2685/audio/d215d7b8-17df-401d-85d2-dba64efc5a28/default_tc.mp3?aid=rss_feed\u0026feed=dLRotFGk",
    "source": "https://feeds.simplecast.com/dLRotFGk",
    "categories": null
  },
  {
    "id": "066a2733-c549-4301-ba41-4797a37db824",
    "title": "Cultural Antidotes - Clarity Isn't Just Honesty",
    "link": "http://www.developertea.com",
    "description": "The most common mistake for any manager is to fail to clarify. This often happens because we mistake our average communications for having perfect clarity, when in fact we most often don't communicate at high levels of clarity. This isn't because we are bad at communication, but rather because our social communications carry less consequence when they aren't precise.Clarity is not simply being honest. We'll discuss the importance of clarity in this episode, and your first steps towards achieving clarity above the norm.🙏 Today's Episode is Brought To you by: UnblockedUnblocked provides helpful and accurate answers developers need to get jobs done. It tailors answers by augmenting your source code with existing team knowledge in GitHub, Slack, Confluence and more. Spend less time digging for context and more time building great software. Check it out at getunblocked.com.📮 Ask a QuestionIf you enjoyed this episode and would like me to discuss a question that you have on the show, drop it over at: developertea.com.📮 Join the DiscordIf you want to be a part of a supportive community of engineers (non-engineers welcome!) working to improve their lives and careers, join us on the Developer Tea Discord community by visiting https://developertea.com/discord today!🧡 Leave a ReviewIf you're enjoying the show and want to support the content head over to iTunes and leave a review! It helps other developers discover the show and keep us focused on what matters to you.",
    "author": "Jonathan Cutrell",
    "published": "Wed, 17 Apr 2024 07:00:00 +0000",
    "image": "https://dts.podtrac.com/redirect.mp3/cdn.simplecast.com/audio/c44db111-b60d-436e-ab63-38c7c3402406/episodes/9f260fa8-1bc5-49af-8e45-3a58d34d9144/audio/e248f3c1-b305-43f3-b053-9e83959edf57/default_tc.mp3?aid=rss_feed\u0026feed=dLRotFGk",
    "source": "https://feeds.simplecast.com/dLRotFGk",
    "categories": null
  },
  {
    "id": "7781832f-745a-4793-ab94-a05e3479ec16",
    "title": "Demystifying Culture and Values",
    "link": "http://www.developertea.com",
    "description": "What does your culture have to do with your values? In this episode we open up the discussion about a model of thinking for culture and values to understand how they link, and more importantly, when they don't.🙏 Today's Episode is Brought To you by: UnblockedUnblocked provides helpful and accurate answers developers need to get jobs done. It tailors answers by augmenting your source code with existing team knowledge in GitHub, Slack, Confluence and more. Spend less time digging for context and more time building great software. Check it out at getunblocked.com.📮 Ask a QuestionIf you enjoyed this episode and would like me to discuss a question that you have on the show, drop it over at: developertea.com.📮 Join the DiscordIf you want to be a part of a supportive community of engineers (non-engineers welcome!) working to improve their lives and careers, join us on the Developer Tea Discord community by visiting https://developertea.com/discord today!🧡 Leave a ReviewIf you're enjoying the show and want to support the content head over to iTunes and leave a review! It helps other developers discover the show and keep us focused on what matters to you.",
    "author": "Jonathan Cutrell",
    "published": "Wed, 10 Apr 2024 07:00:00 +0000",
    "image": "https://dts.podtrac.com/redirect.mp3/cdn.simplecast.com/audio/c44db111-b60d-436e-ab63-38c7c3402406/episodes/7f640a1a-e442-4fb1-92fb-5139b5c2e808/audio/7a3facea-ad9e-4ebb-839c-eaadda2b3259/default_tc.mp3?aid=rss_feed\u0026feed=dLRotFGk",
    "source": "https://feeds.simplecast.com/dLRotFGk",
    "categories": null
  },
  {
    "id": "c819a640-1428-4d6c-a26a-a1154fb225e1",
    "title": "Principles of Work - Shorten Your Feedback Loops",
    "link": "http://www.developertea.com",
    "description": "Your feedback loops should be short enough that the cost of making a mistake is low enough that the value of the learning in the feedback loop exceeds the magnitude of the cost of a mistake. In other words: shorten your feedback loops to the point that you're no longer afraid to make a mistake.🙏 Today's Episode is Brought To you by: UnblockedUnblocked provides helpful and accurate answers developers need to get jobs done. It tailors answers by augmenting your source code with existing team knowledge in GitHub, Slack, Confluence and more. Spend less time digging for context and more time building great software. Check it out at getunblocked.com.📮 Ask a QuestionIf you enjoyed this episode and would like me to discuss a question that you have on the show, drop it over at: developertea.com.📮 Join the DiscordIf you want to be a part of a supportive community of engineers (non-engineers welcome!) working to improve their lives and careers, join us on the Developer Tea Discord community by visiting https://developertea.com/discord today!🧡 Leave a ReviewIf you're enjoying the show and want to support the content head over to iTunes and leave a review! It helps other developers discover the show and keep us focused on what matters to you.",
    "author": "Jonathan Cutrell",
    "published": "Wed, 3 Apr 2024 07:00:00 +0000",
    "image": "https://dts.podtrac.com/redirect.mp3/cdn.simplecast.com/audio/c44db111-b60d-436e-ab63-38c7c3402406/episodes/e8545729-3383-4d50-a48a-1ce0919c1889/audio/1b5c38d7-efcd-4e1d-89eb-36dbb027a3e3/default_tc.mp3?aid=rss_feed\u0026feed=dLRotFGk",
    "source": "https://feeds.simplecast.com/dLRotFGk",
    "categories": null
  },
  {
    "id": "e58f0358-19af-456f-8f31-b4595d1acbfc",
    "title": "FLOSS Weekly: FLOSS Weekly Continues at Hackaday - Hackaday is the new home of FLOSS Weekly",
    "link": "https://twit.tv/shows/floss-weekly/episodes/761b",
    "description": "FLOSS Weekly continues with Jonathan Bennett at its new home at Hackaday Visit hackaday.com/floss or search your favorite podcatcher to subscribe. Host: Jonathan Bennett",
    "author": "TWiT",
    "published": "Thu, 11 Jan 2024 00:00:00 PST",
    "image": "https://pdst.fm/e/pscrb.fm/rss/p/cdn.twit.tv/audio/floss/floss_761b/floss_761b.mp3",
    "source": "https://feeds.twit.tv/floss.xml",
    "categories": [
      "News",
      "Technology",
      "Open Source",
      "Software",
      "Open Source Software"
    ]
  },
  {
    "id": "926bac63-c814-4f56-9cd1-4d2ef60aca19",
    "title": "FLOSS Weekly 761: We Won! - The Victories of Free Software and Open Source",
    "link": "https://twit.tv/shows/floss-weekly/episodes/761",
    "description": "Doc Searls, Katherine Druckman, Dan Lynch, Simon Phipps, and Leo Laporte gather to celebrate the final victory of free software and open source—and the final FLOSS Weekly as well. Hosts: Doc Searls, Katherine Druckman, Dan Lynch, and Simon Phipps Guest: Leo Laporte Download or subscribe to this show at https://twit.tv/shows/floss-weekly Think your open source project should be on FLOSS Weekly? Email floss@twit.tv. Thanks to Lullabot's Jeff Robbins, web designer and musician, for our theme music. Get episodes ad-free with Club TWiT at https://twit.tv/clubtwit Sponsors: bitwarden.com/twit kolide.com/floss",
    "author": "TWiT",
    "published": "Wed, 13 Dec 2023 13:30:00 PST",
    "image": "https://pdst.fm/e/pscrb.fm/rss/p/cdn.twit.tv/libsyn/floss_761/3ccb17e9-1a70-473d-8703-0abed61f2d01/R1_floss0761.mp3",
    "source": "https://feeds.twit.tv/floss.xml",
    "categories": [
      "News",
      "Technology",
      "Open Source",
      "Software",
      "TWiT",
      " FLOSS Weekly",
      " Doc Searls",
      " Shawn Powers",
      " Leo Laporte",
      " Jonathan Bennett",
      " dan lynch",
      " simon phipps",
      " Katherine Druckman",
      " FLOSS",
      " open source",
      " open source podcast",
      " free libre open source",
      " open source victories",
      " Open Source Software",
      " eu open source"
    ]
  },
  {
    "id": "26f0860d-ba9a-4b1f-ba91-3483b221bbe0",
    "title": "FLOSS Weekly 760: Making Money In Open Source - Adam Jacob, Chef \u0026 System Initiative",
    "link": "https://twit.tv/shows/floss-weekly/episodes/760",
    "description": "Adam Jacob talks with Doc Searls and Shawn Powers about making money in open source, based on his long experience with Chef, System Initiative, and other development communities that are also businesses. Hosts: Doc Searls and Shawn Powers Guest: Adam Jacob Download or subscribe to this show at https://twit.tv/shows/floss-weekly Think your open source project should be on FLOSS Weekly? Email floss@twit.tv. Thanks to Lullabot's Jeff Robbins, web designer and musician, for our theme music. Get episodes ad-free with Club TWiT at https://twit.tv/clubtwit Sponsor: fastmail.com/twit",
    "author": "TWiT",
    "published": "Wed, 06 Dec 2023 13:30:00 PST",
    "image": "https://pdst.fm/e/pscrb.fm/rss/p/cdn.twit.tv/libsyn/floss_760/3ccb17e9-1a70-473d-8703-0abed61f2d01/R1_floss0760.mp3",
    "source": "https://feeds.twit.tv/floss.xml",
    "categories": [
      "News",
      "Technology",
      "Open Source",
      "Software",
      "TWiT",
      " FLOSS Weekly",
      " Doc Searls",
      " Shawn Powers",
      " Adam Jacob",
      " System Initiative",
      " open source",
      " chef developer community",
      " system administration",
      " sys admin",
      " dev ops",
      " enterprise open source",
      " Enterprise",
      " open source companies",
      " IDE"
    ]
  },
  {
    "id": "5341e927-303c-4ff6-a6c2-21cd5f40ece9",
    "title": "FLOSS Weekly 759: ActivityPub Crawl - Evan Prodromou on ActivityPub \u0026 OpenEarth",
    "link": "https://twit.tv/shows/floss-weekly/episodes/759",
    "description": "Doc Searls and Jonathan Bennett go deep into what's happening in the fediverse with Evan Prodromou, the co-creator of ActivityPub, the open protocol behind Mastodon and other truly social networks on the Internet. Hosts: Doc Searls and Jonathan Bennett Guest: Evan Prodromou Download or subscribe to this show at https://twit.tv/shows/floss-weekly Think your open source project should be on FLOSS Weekly? Email floss@twit.tv. Thanks to Lullabot's Jeff Robbins, web designer and musician, for our theme music. Get episodes ad-free with Club TWiT at https://twit.tv/clubtwit",
    "author": "TWiT",
    "published": "Wed, 29 Nov 2023 12:30:00 PST",
    "image": "https://pdst.fm/e/pscrb.fm/rss/p/cdn.twit.tv/libsyn/floss_759/3ccb17e9-1a70-473d-8703-0abed61f2d01/R1_floss0759.mp3",
    "source": "https://feeds.twit.tv/floss.xml",
    "categories": [
      "News",
      "Technology",
      "Open Source",
      "Software",
      "TWiT",
      " FLOSS Weekly",
      " Doc Searls",
      " Jonathan Bennett",
      " Evan Prodromou",
      " activitypub",
      " open source social media",
      " open source community",
      " podcast",
      " tech discussions",
      " podcast about open source",
      " Mastodon",
      " fediverse",
      " social media and privacy",
      " social media for brands"
    ]
  },
  {
    "id": "083e823d-b17e-41e8-85c7-f10a18195f97",
    "title": "FLOSS Weekly 758: Raiders of the Lost Source - Rocky and Oracle Unbreakable Linux, OpenAI Shakeup",
    "link": "https://twit.tv/shows/floss-weekly/episodes/758",
    "description": "Doc Searls and Dan Lynch explore long-standing ethical and technical imperatives of the free software and open source movements, and the wild new challenges they face in an age of AI that is still just beginning. Hosts: Doc Searls and Dan Lynch Download or subscribe to this show at https://twit.tv/shows/floss-weekly Think your open source project should be on FLOSS Weekly? Email floss@twit.tv. Thanks to Lullabot's Jeff Robbins, web designer and musician, for our theme music. Get episodes ad-free with Club TWiT at https://twit.tv/clubtwit Sponsors: kolide.com/floss bitwarden.com/twit fastmail.com/twit",
    "author": "TWiT",
    "published": "Wed, 22 Nov 2023 13:30:00 PST",
    "image": "https://pdst.fm/e/pscrb.fm/rss/p/cdn.twit.tv/libsyn/floss_758/3ccb17e9-1a70-473d-8703-0abed61f2d01/R1_floss0758.mp3",
    "source": "https://feeds.twit.tv/floss.xml",
    "categories": [
      "News",
      "Technology",
      "Open Source",
      "Software",
      "TWiT",
      " FLOSS Weekly",
      " Doc Searls",
      " dan lynch",
      " openAI",
      " Sam Altman fired",
      " Sam Altman rehired",
      " open source",
      " podcast",
      " Tech News",
      " podcast about open source",
      " red hat linux",
      " rocky linux",
      " Rocky Linux and Oracle",
      " defining open source",
      " ai and morals",
      " privacy"
    ]
  },
  {
    "id": "444ed05d-abf0-4b15-9246-cb012f9ce226",
    "title": "FLOSS Weekly 757: Noodling Around with OpenZiti - Philip Griffiths, OpenZiti and Secure Networking",
    "link": "https://twit.tv/shows/floss-weekly/episodes/757",
    "description": "Philip Griffiths of OpenZiti explains to Doc Searls, Shawn Powers, and Jonathan Bennett how OpenZiti is on its way to becoming the Linux of secure networking. An overview of OpenZiti and how it implements zero trust principles by putting private networks inside applications. How OpenZiti functions similarly to a VPN. OpenZiti's security and how it authorizes connections. Hosts: Doc Searls, Shawn Powers, and Jonathan Bennett Guest: Philip Griffiths Download or subscribe to this show at https://twit.tv/shows/floss-weekly Think your open source project should be on FLOSS Weekly? Email floss@twit.tv. Thanks to Lullabot's Jeff Robbins, web designer and musician, for our theme music. Get episodes ad-free with Club TWiT at https://twit.tv/clubtwit",
    "author": "TWiT",
    "published": "Wed, 08 Nov 2023 13:00:00 PST",
    "image": "https://pdst.fm/e/pscrb.fm/rss/p/cdn.twit.tv/libsyn/floss_757/3ccb17e9-1a70-473d-8703-0abed61f2d01/R1_floss0757.mp3",
    "source": "https://feeds.twit.tv/floss.xml",
    "categories": [
      "News",
      "Technology",
      "Open Source",
      "Software",
      "TWiT",
      " Tech News",
      " open source",
      " FLOSS Weekly",
      " podcast about open source",
      " Openziti",
      " networking",
      " open source networking",
      " fwnop",
      " port knocking",
      " Jonathan Bennett",
      " Doc Searls",
      " Shawn Powers",
      " Philip Griffiths",
      " Netfoundry",
      " open source projects"
    ]
  },
  {
    "id": "8b72bb5f-c5f6-474e-8127-01e014aef4f3",
    "title": "FLOSS Weekly 756: We Won, Now What? - Luis Villa, Tidelift",
    "link": "https://twit.tv/shows/floss-weekly/episodes/756",
    "description": "Doc Searls and Simon Phipps talk with Luis Villa of Tidelift about how it helps code maintainers get paid, plus what's happening in AI, ML, regulation and more. Hosts: Doc Searls and Simon Phipps Guest: Luis Villa Download or subscribe to this show at https://twit.tv/shows/floss-weekly Think your open source project should be on FLOSS Weekly? Email floss@twit.tv. Thanks to Lullabot's Jeff Robbins, web designer and musician, for our theme music. Get episodes ad-free with Club TWiT at https://twit.tv/clubtwit Sponsor: kolide.com/floss",
    "author": "TWiT",
    "published": "Wed, 01 Nov 2023 12:30:00 PDT",
    "image": "https://pdst.fm/e/pscrb.fm/rss/p/cdn.twit.tv/libsyn/floss_756/3ccb17e9-1a70-473d-8703-0abed61f2d01/R1_floss0756.mp3",
    "source": "https://feeds.twit.tv/floss.xml",
    "categories": [
      "News",
      "Technology",
      "Open Source",
      "Software",
      "TWiT",
      " FLOSS Weekly",
      " open source",
      " podcast",
      " Doc Searls",
      " simon phipps",
      " luis villa",
      " tidelift",
      " code maintainers",
      " ai",
      " Open Source Initiative",
      " Creative Commons",
      " Open Source Software",
      " open source podcasts",
      " XKCD",
      " open source maintainers",
      " spotify model",
      " ai bias"
    ]
  },
  {
    "id": "a76330ba-b3f7-4736-8195-176b7fdeabb7",
    "title": "FLOSS Weekly 755: Nextcloud - Frank Karlitschek, Nextcloud Growth and Updates",
    "link": "https://twit.tv/shows/floss-weekly/episodes/755",
    "description": "Frank Karlitschek joins Doc Searls and Jonathan Bennett to talk about Nextcloud. Nextcloud is a fast-growing open source collaboration platform that gives customers a huge array of capabilities, all independent of giant gatekeepers. Hosts: Doc Searls and Jonathan Bennett Guest: Frank Karlitschek Download or subscribe to this show at https://twit.tv/shows/floss-weekly Think your open source project should be on FLOSS Weekly? Email floss@twit.tv. Thanks to Lullabot's Jeff Robbins, web designer and musician, for our theme music. Get episodes ad-free with Club TWiT at https://twit.tv/clubtwit Sponsors: bitwarden.com/twit fastmail.com/twit",
    "author": "TWiT",
    "published": "Wed, 25 Oct 2023 13:37:32 PDT",
    "image": "https://pdst.fm/e/pscrb.fm/rss/p/cdn.twit.tv/libsyn/floss_755/3ccb17e9-1a70-473d-8703-0abed61f2d01/R1_floss0755.mp3",
    "source": "https://feeds.twit.tv/floss.xml",
    "categories": [
      "News",
      "Technology",
      "Open Source",
      "Software",
      "Open Source Software",
      " TWiT",
      " FLOSS Weekly",
      " open source",
      " podcast",
      " Doc Searls",
      " Jonathan Bennett",
      " Frank Karlitschek",
      " Nextcloud",
      " cloud computing",
      " open source cloud",
      " ai",
      " file sharing",
      " decentralized web",
      " owncloud",
      " personal cloud",
      " tech discussions"
    ]
  },
  {
    "id": "b5b371c8-45c1-49a0-8bc6-c8a6401fc49f",
    "title": "FLOSS Weekly 754: Is He Still On? - Jon \"maddog\" Hall, Caninos Loucos, Open Source vs Free Software",
    "link": "https://twit.tv/shows/floss-weekly/episodes/754",
    "description": "Our guest this week was Jon \"maddog\" Hall, the Linux Legend, until his connection from Brazil dropped. At any rate, Dan Lynch and Doc Searls went deep into the differences between GPL licenses v2 and v3 on this episode of FLOSS Weekly. Hosts: Doc Searls and Dan Lynch Guest: Jon \"maddog\" Hall Download or subscribe to this show at https://twit.tv/shows/floss-weekly Think your open source project should be on FLOSS Weekly? Email floss@twit.tv. Thanks to Lullabot's Jeff Robbins, web designer and musician, for our theme music. Get episodes ad-free with Club TWiT at https://twit.tv/clubtwit",
    "author": "TWiT",
    "published": "Wed, 18 Oct 2023 13:30:00 PDT",
    "image": "https://pdst.fm/e/pscrb.fm/rss/p/cdn.twit.tv/libsyn/floss_754/3ccb17e9-1a70-473d-8703-0abed61f2d01/R1_floss0754.mp3",
    "source": "https://feeds.twit.tv/floss.xml",
    "categories": [
      "News",
      "Technology",
      "Open Source",
      "Software",
      "TWiT",
      " FLOSS Weekly",
      " open source",
      " free software",
      " GPL license",
      " Microsoft and open source",
      " Tech News",
      " Richard Stallman",
      " Jon",
      " Doc Searls",
      " dan lynch",
      " Caninos Loucos",
      " difference between open source and free software",
      " tech discussions",
      " open source community"
    ]
  },
  {
    "id": "0c3217aa-5978-4fd3-a54f-ea0c28ac2b93",
    "title": "FLOSS Weekly 753: Small Is Beautiful - Aral Balkan, Small Technology Foundation",
    "link": "https://twit.tv/shows/floss-weekly/episodes/753",
    "description": "Aral Balkan of the Small Technology Foundation talks with Doc Searls and Dan Lynch about the small web, the tame little server called Kitten, and much more about the wide open world we've been losing and how to get it back. Hosts: Doc Searls and Dan Lynch Guest: Aral Balkan Download or subscribe to this show at https://twit.tv/shows/floss-weekly Think your open source project should be on FLOSS Weekly? Email floss@twit.tv. Thanks to Lullabot's Jeff Robbins, web designer and musician, for our theme music. Get episodes ad-free with Club TWiT at https://twit.tv/clubtwit Sponsor: kolide.com/floss",
    "author": "TWiT",
    "published": "Wed, 11 Oct 2023 13:00:00 PDT",
    "image": "https://pdst.fm/e/pscrb.fm/rss/p/cdn.twit.tv/libsyn/floss_753/3ccb17e9-1a70-473d-8703-0abed61f2d01/R1_floss0753.mp3",
    "source": "https://feeds.twit.tv/floss.xml",
    "categories": [
      "News",
      "Technology",
      "Open Source",
      "Software",
      "TWiT",
      " Aral Balkan",
      " Doc Searls",
      " dan lynch",
      " open source",
      " FLOSS Weekly",
      " podcast",
      " tech discussions",
      " open source discussions",
      " about open source",
      " small web",
      " encryption",
      " privacy",
      " open web",
      " web0",
      " web 3.0",
      " Web 2.0",
      " open source community",
      " open source developers"
    ]
  },
  {
    "id": "f372ac63-bd2f-40b3-9842-87c84b2f742e",
    "title": "How open source AI can improve population estimates, sustainable energy, and the delivery of climate change interventions",
    "link": "https://engineering.fb.com/2024/10/03/ml-applications/open-source-ai-population-maps-meta/",
    "description": "Data for Good at Meta is open-sourcing the data used to train our AI-powered population maps.  We’re hoping that researchers and other organizations around the world will be able to leverage these tools to assist with a wide range of projects including those on climate adaptation, public health and disaster response. The dataset and code [...] Read More... The post How open source AI can improve population estimates, sustainable energy, and the delivery of climate change interventions appeared first on Engineering at Meta.",
    "author": "",
    "published": "Thu, 03 Oct 2024 16:00:14 +0000",
    "image": "https://engineering.fb.com/wp-content/uploads/2024/10/Meta-open-source-population-maps-1.png?w=1024",
    "source": "https://engineering.fb.com/feed/",
    "categories": [
      "AI Research",
      "ML Applications",
      "Open Source"
    ]
  },
  {
    "id": "cfceacb7-199c-4a57-9885-ea36605cdc30",
    "title": "React at Meta Connect 2024",
    "link": "https://engineering.fb.com/2024/10/02/android/react-at-meta-connect-2024/",
    "description": "At Meta, React and React Native are more than just tools; they are integral to our product development and innovation. With over five thousand people at Meta building products and experiences with React every month, these technologies are fundamental to our engineering culture and our ability to quickly build and ship high quality products. In [...] Read More... The post React at Meta Connect 2024 appeared first on Engineering at Meta.",
    "author": "",
    "published": "Wed, 02 Oct 2024 16:00:47 +0000",
    "image": "https://engineering.fb.com/wp-content/uploads/2024/10/Meta-Horizon-React-Connect-2024-compressed.jpg?w=1024",
    "source": "https://engineering.fb.com/feed/",
    "categories": [
      "Android",
      "iOS",
      "Open Source",
      "Virtual Reality",
      "Web"
    ]
  },
  {
    "id": "c31cd5ad-3219-4112-873c-41a2ae59484a",
    "title": "Inside Bento: Jupyter Notebooks at Meta",
    "link": "https://engineering.fb.com/2024/09/17/data-infrastructure/inside-bento-jupyter-notebooks-at-meta/",
    "description": "This episode of the Meta Tech Podcast is all about Bento, Meta’s internal distribution of Jupyter Notebooks, an open-source web-based computing platform. Bento allows our engineers to mix code, text, and multimedia in a single document and serves a wide range of use cases at Meta from prototyping to complex machine learning workflows. Pascal Hartig [...] Read More... The post Inside Bento: Jupyter Notebooks at Meta appeared first on Engineering at Meta.",
    "author": "",
    "published": "Tue, 17 Sep 2024 17:53:56 +0000",
    "image": "",
    "source": "https://engineering.fb.com/feed/",
    "categories": [
      "Culture",
      "Data Infrastructure",
      "DevInfra",
      "Open Source",
      "Meta Tech Podcast"
    ]
  },
  {
    "id": "d2ce783d-646a-421a-939a-2c6461f5945e",
    "title": "Simulator-based reinforcement learning for data center cooling optimization",
    "link": "https://engineering.fb.com/2024/09/10/data-center-engineering/simulator-based-reinforcement-learning-for-data-center-cooling-optimization/",
    "description": "We’re sharing more about the role that reinforcement learning plays in helping us optimize our data centers’ environmental controls. Our reinforcement learning-based approach has helped us reduce energy consumption and water usage across various weather conditions in our data centers.   Meta is revamping its new data center design to optimize for artificial intelligence and the [...] Read More... The post Simulator-based reinforcement learning for data center cooling optimization appeared first on Engineering at Meta.",
    "author": "",
    "published": "Tue, 10 Sep 2024 16:00:31 +0000",
    "image": "https://engineering.fb.com/wp-content/uploads/2024/09/RL-data-centers_Figure-1.png?w=600",
    "source": "https://engineering.fb.com/feed/",
    "categories": [
      "Data Center Engineering",
      "ML Applications"
    ]
  },
  {
    "id": "1413172a-afc5-44fc-9b2e-99f105d93f3c",
    "title": "Read Meta’s 2024 Sustainability Report",
    "link": "https://sustainability.atmeta.com/2024-sustainability-report/",
    "description": "[...] Read More... The post Read Meta’s 2024 Sustainability Report appeared first on Engineering at Meta.",
    "author": "",
    "published": "Wed, 04 Sep 2024 17:04:59 +0000",
    "image": "",
    "source": "https://engineering.fb.com/feed/",
    "categories": [
      "Data Center Engineering"
    ]
  },
  {
    "id": "013af049-d169-4ecd-ba7d-847cabdff2a0",
    "title": "Meta is getting ready for post-quantum cryptography",
    "link": "https://engineering.fb.com/2024/08/28/security/post-quantum-cryptography-meta/",
    "description": "The Quantum Apocalypse is coming. The advent of quantum computers has raised real questions about the future of data privacy over the internet.  Someday, advances in quantum computing will make it possible to decrypt sensitive data that was encrypted using today’s complex cryptography systems. In the latest episode of the Meta Tech Podcast you’ll meet Sheran [...] Read More... The post Meta is getting ready for post-quantum cryptography appeared first on Engineering at Meta.",
    "author": "",
    "published": "Wed, 28 Aug 2024 16:19:35 +0000",
    "image": "",
    "source": "https://engineering.fb.com/feed/",
    "categories": [
      "Culture",
      "Security",
      "Meta Tech Podcast"
    ]
  },
  {
    "id": "7bc7e752-38eb-4ddd-a359-f710eeaefccf",
    "title": "How Meta enforces purpose limitation via Privacy Aware Infrastructure at scale",
    "link": "https://engineering.fb.com/2024/08/27/security/privacy-aware-infrastructure-purpose-limitation-meta/",
    "description": "At Meta, we’ve been diligently working to incorporate privacy into different systems of our software stack over the past few years. Today, we’re excited to share some cutting-edge technologies that are part of our Privacy Aware Infrastructure (PAI) initiative. These innovations mark a major milestone in our ongoing commitment to honoring user privacy.  PAI offers [...] Read More... The post How Meta enforces purpose limitation via Privacy Aware Infrastructure at scale appeared first on Engineering at Meta.",
    "author": "",
    "published": "Tue, 27 Aug 2024 16:00:50 +0000",
    "image": "https://engineering.fb.com/wp-content/uploads/2024/08/pai_e2e_s.png?w=1024",
    "source": "https://engineering.fb.com/feed/",
    "categories": [
      "Security"
    ]
  },
  {
    "id": "b0daf599-76ad-4df7-8af4-f6804793ee4a",
    "title": "RETINAS: Real-Time Infrastructure Accounting for Sustainability",
    "link": "https://engineering.fb.com/2024/08/26/data-infrastructure/retinas-real-time-infrastructure-accounting-for-sustainability/",
    "description": "We are introducing a new metric— real-time server fleet utilization effectiveness —as part of the RETINAS initiative to help reduce emissions and achieve net zero emissions across our value chain in 2030. This new metric allows us to measure server resource usage (e.g., compute, storage) and efficiency in our large-scale data center server fleet in [...] Read More... The post RETINAS: Real-Time Infrastructure Accounting for Sustainability appeared first on Engineering at Meta.",
    "author": "",
    "published": "Mon, 26 Aug 2024 16:00:40 +0000",
    "image": "https://engineering.fb.com/wp-content/uploads/2050/05/RETINAS-equation-1-vertical.png?w=1024",
    "source": "https://engineering.fb.com/feed/",
    "categories": [
      "Data Center Engineering",
      "Data Infrastructure"
    ]
  },
  {
    "id": "e811ea89-3dc5-4d5a-982a-84731749ff25",
    "title": "How PyTorch powers AI training and inference",
    "link": "https://engineering.fb.com/2024/08/23/ml-applications/pytorch-ai-training-inference/",
    "description": "Learn about new PyTorch advancements for LLMs and how PyTorch is enhancing every aspect of the LLM lifecycle. In this talk from AI Infra @ Scale 2024, software engineers Wanchao Liang and Evan Smothers are joined by Meta research scientist Kimish Patel to discuss our newest features and tools that enable large-scale training, memory efficient [...] Read More... The post How PyTorch powers AI training and inference appeared first on Engineering at Meta.",
    "author": "",
    "published": "Fri, 23 Aug 2024 16:00:54 +0000",
    "image": "",
    "source": "https://engineering.fb.com/feed/",
    "categories": [
      "AI Research",
      "ML Applications",
      "Open Source",
      "AI Infra @ Scale"
    ]
  },
  {
    "id": "6270188b-1d2c-4e7b-96d5-f501d76420fe",
    "title": "Want a smoother checkout with Google Pay? Configure your payment options!",
    "link": "https://developers.googleblog.com/en/configure-google-pay-payment-options/",
    "description": "Configure accepted payment methods for Google Pay, with options for authentication methods, card networks, and card types, and upcoming features for enhanced control and customization.",
    "author": "",
    "published": "",
    "image": "",
    "source": "http://feeds.feedburner.com/GDBcode",
    "categories": null
  },
  {
    "id": "9163e511-1a85-483c-8308-2e65f30b17c1",
    "title": "Now in Developer Preview: Enhancing Chat apps to create spaces and memberships, using application identity, with the Google Chat API",
    "link": "https://developers.googleblog.com/en/enhancing-chat-apps-with-the-google-chat-api/",
    "description": "The Google Chat API has been launched, allowing developers to build Chat apps that enable real-time collaboration between Google Chat and other systems.",
    "author": "",
    "published": "",
    "image": "",
    "source": "http://feeds.feedburner.com/GDBcode",
    "categories": null
  },
  {
    "id": "cf9f6383-0aeb-4748-b3ed-3ce679e71020",
    "title": "Gemini 1.5 Flash-8B is now production ready",
    "link": "https://developers.googleblog.com/en/gemini-15-flash-8b-is-now-generally-available-for-use/",
    "description": "Google is rolling out (in GA) a new Gemini model, 1.5 Flash-8B, our smallest production model with SOTA performance for its size.",
    "author": "",
    "published": "",
    "image": "",
    "source": "http://feeds.feedburner.com/GDBcode",
    "categories": null
  },
  {
    "id": "085f6595-e352-439d-aaa5-aca7c97438bf",
    "title": "Towards Global Understanding – Advancing Multilingual AI with Gemma 2 and a $150K Challenge",
    "link": "https://developers.googleblog.com/en/advancing-multilingual-ai-with-gemma-2-and-a-150k-challenge/",
    "description": "Google is building AI models, focusing on Gemma, to bridge communication gaps across languages.",
    "author": "",
    "published": "",
    "image": "",
    "source": "http://feeds.feedburner.com/GDBcode",
    "categories": null
  },
  {
    "id": "9a4f80ea-d8f7-4c4c-b961-17e46b483416",
    "title": "Announcing Build with Google AI release 3: A Season of Gemma!",
    "link": "https://developers.googleblog.com/en/build-with-google-ai-release-3-a-season-of-gemma/",
    "description": "The season showcases new applications of Gemma, including a personal AI code assistant and projects for non-English tasks and business email processing.",
    "author": "",
    "published": "",
    "image": "",
    "source": "http://feeds.feedburner.com/GDBcode",
    "categories": null
  },
  {
    "id": "d08f5f56-4891-4f3a-bd47-5738d1f55939",
    "title": "Enhance your prompts with Vertex AI Prompt Optimizer",
    "link": "https://developers.googleblog.com/en/enhance-your-prompts-with-vertex-ai-prompt-optimizer/",
    "description": "Vertex AI Prompt Optimizer, a new managed automated prompt engineering service, can help save time and effort in prompt engineering while ensuring performing prompts ready for your generative AI applications.",
    "author": "",
    "published": "",
    "image": "",
    "source": "http://feeds.feedburner.com/GDBcode",
    "categories": null
  },
  {
    "id": "f553d6aa-dcfb-4d2c-ae39-156fcd9dddd3",
    "title": "Updated production-ready Gemini models, reduced 1.5 Pro pricing, increased rate limits, and more",
    "link": "https://developers.googleblog.com/en/updated-gemini-models-reduced-15-pro-pricing-increased-rate-limits-and-more/",
    "description": "Learn about the latest updates to Google's Gemini models, including reduced pricing for Gemini 1.5 Pro, increased rate limits, faster performance, enhanced quality, and more.",
    "author": "",
    "published": "",
    "image": "",
    "source": "http://feeds.feedburner.com/GDBcode",
    "categories": null
  },
  {
    "id": "ed36044f-3493-4d06-b7c1-383871ca9971",
    "title": "Updates to the Google Photos APIs: Picker API launch and Library API changes",
    "link": "https://developers.googleblog.com/en/google-photos-picker-api-launch-and-library-api-updates/",
    "description": "The new Picker API enables secure photo selection, while the Library API will focus on managing photos and videos uploaded by your application.",
    "author": "",
    "published": "",
    "image": "",
    "source": "http://feeds.feedburner.com/GDBcode",
    "categories": null
  },
  {
    "id": "5bb5f0bd-717b-4f57-9497-d4567bbafe82",
    "title": "Gemma explained: PaliGemma architecture",
    "link": "https://developers.googleblog.com/en/gemma-explained-paligemma-architecture/",
    "description": "PaliGemma, a lightweight open vision-language model (VLM), is able to take both image and text inputs and produce a text response, adding an additional vision model to the BaseGemma model.",
    "author": "",
    "published": "",
    "image": "",
    "source": "http://feeds.feedburner.com/GDBcode",
    "categories": null
  },
  {
    "id": "d52ec05a-2db0-4a64-8fc6-98f3ad3da402",
    "title": "TensorFlow Lite is now LiteRT",
    "link": "https://developers.googleblog.com/en/tensorflow-lite-is-now-litert/",
    "description": "TensorFlow Lite, now named LiteRT, is still the same high-performance runtime for on-device AI, but with an expanded vision to support models authored in PyTorch, JAX, and Keras.",
    "author": "",
    "published": "",
    "image": "",
    "source": "http://feeds.feedburner.com/GDBcode",
    "categories": null
  },
  {
    "id": "820e0d6c-a50b-4569-bd32-d2d23827bd38",
    "title": "Mastering Controlled Generation with Gemini 1.5: Schema Adherence for Developers",
    "link": "https://developers.googleblog.com/en/mastering-controlled-generation-with-gemini-15-schema-adherence/",
    "description": "Controlled Generation for Gemini 1.5 Pro and Flash improves the handoff from data science teams to developers, enhancing the integration of AI output and ensuring AI-generated responses adhere to a defined schema.",
    "author": "",
    "published": "",
    "image": "",
    "source": "http://feeds.feedburner.com/GDBcode",
    "categories": null
  },
  {
    "id": "d8b9ec93-326f-4ac4-b6b5-d9de74784d33",
    "title": "Gemma explained: RecurrentGemma architecture",
    "link": "https://developers.googleblog.com/en/gemma-explained-recurrentgemma-architecture/",
    "description": "RecurrentGemma architecture showcases a hybrid model that mixes gated linear recurrences with local sliding window attention; a highly valuable feature when you're concerned about exhausting your LLM's context window.",
    "author": "",
    "published": "",
    "image": "",
    "source": "http://feeds.feedburner.com/GDBcode",
    "categories": null
  },
  {
    "id": "89a3673a-dcf8-4f99-9675-7c5417602837",
    "title": "Gemma explained: What’s new in Gemma 2",
    "link": "https://developers.googleblog.com/en/gemma-explained-new-in-gemma-2/",
    "description": "Gemma 2 is a new suite of open models that sets a new standard for performance and accessibility, outperforming popular models more than twice its size.",
    "author": "",
    "published": "",
    "image": "",
    "source": "http://feeds.feedburner.com/GDBcode",
    "categories": null
  },
  {
    "id": "37d0bde9-56a9-4306-b442-d77bc4709e2b",
    "title": "Gemma for Streaming ML with Dataflow",
    "link": "https://developers.googleblog.com/en/gemma-for-streaming-ml-with-dataflow/",
    "description": "Use the Gemma language model to gauge customer sentiment, summarize conversations, and assist with crafting responses in near real-time with minimal latency.",
    "author": "",
    "published": "",
    "image": "",
    "source": "http://feeds.feedburner.com/GDBcode",
    "categories": null
  },
  {
    "id": "1f61421a-fb4a-4761-b720-ef9db1c138af",
    "title": "Gemma explained: An overview of Gemma model family architectures",
    "link": "https://developers.googleblog.com/en/gemma-explained-overview-gemma-model-family-architectures/",
    "description": "Learn more about the different variations of Gemma models, how they are designed for different use cases, and the core parameters of their architecture.",
    "author": "",
    "published": "",
    "image": "",
    "source": "http://feeds.feedburner.com/GDBcode",
    "categories": null
  },
  {
    "id": "35fb878c-c0f3-4101-9a01-89b66576b4ee",
    "title": "Indie Games Fund: Google Play’s $2m fund in Latin America is back",
    "link": "https://developers.googleblog.com/en/indie-games-fund-google-plays-2m-fund-in-latin-america-is-back/",
    "description": "Google Play's Indie Games Fund is back in Latin America for 2024, offering up to $2 million in funding and hands-on support to small game studios.",
    "author": "",
    "published": "",
    "image": "",
    "source": "http://feeds.feedburner.com/GDBcode",
    "categories": null
  },
  {
    "id": "d46650c6-048d-4834-83f7-310c66f1aeb7",
    "title": "Build a text-based adventure game with Gemma 2",
    "link": "https://developers.googleblog.com/en/build-a-text-based-adventure-game-with-gemma-2/",
    "description": "Create a text-based adventure game using Gemma 2. Here are code snippets and tips for designing the game world, enhancing interactivity and replayability, and more.",
    "author": "",
    "published": "",
    "image": "",
    "source": "http://feeds.feedburner.com/GDBcode",
    "categories": null
  },
  {
    "id": "f41ffc67-4eea-4a80-b6e6-40c8811bc426",
    "title": "Streamlining LLM Inference at the Edge with TFLite",
    "link": "https://developers.googleblog.com/en/streamlining-llm-inference-at-the-edge-with-tflite/",
    "description": "XNNPack, the default TensorFlow Lite CPU inference engine, has been updated to improve performance and memory management, allow cross-process collaboration, and simplify the user-facing API.",
    "author": "",
    "published": "",
    "image": "",
    "source": "http://feeds.feedburner.com/GDBcode",
    "categories": null
  },
  {
    "id": "08ff9cce-3021-4c07-812f-deddff0a6888",
    "title": "Gemini 1.5 Flash price drop with tuning rollout complete, and more",
    "link": "https://developers.googleblog.com/en/gemini-15-flash-updates-google-ai-studio-gemini-api/",
    "description": "Gemini 1.5 Flash is now available to developers at more than 70% lower prices. Set up billing for Gemini API in Google AI Studio and access other new features like 1.5 Flash tuning.",
    "author": "",
    "published": "",
    "image": "",
    "source": "http://feeds.feedburner.com/GDBcode",
    "categories": null
  },
  {
    "id": "3ee04b95-8990-48d3-9f52-83624b035d82",
    "title": "How We Built Purrfect Code: A Puzzle Game for Developers",
    "link": "https://developers.googleblog.com/en/how-we-built-purrfect-code/",
    "description": "Purrfect Code is a sokoban style box pushing puzzler Purrfect based on Google tech (Flutter, IDX, FLAME, Firebase) and designed to be playable on web browsers. Open the game in Project IDX, earn badges for each level, and showcase your badges on your Developer Profile.",
    "author": "",
    "published": "",
    "image": "",
    "source": "http://feeds.feedburner.com/GDBcode",
    "categories": null
  },
  {
    "id": "0f4b74b2-2f6d-4019-a12b-f0fbcc863df7",
    "title": "Seamlessly migrate from Jira to GitLab with Jira2Lab at scale",
    "link": "https://about.gitlab.com/blog/2024/10/10/seamlessly-migrate-from-jira-to-gitlab-with-jira2lab-at-scale",
    "description": "",
    "author": "Maximilien Belinga",
    "published": "2024-10-10T00:00:00.000Z",
    "image": "",
    "source": "https://about.gitlab.com/atom.xml",
    "categories": null
  },
  {
    "id": "761a4493-c7a3-4d8f-a63c-16c6f066dfa2",
    "title": "Tutorial: Integrate GitLab Merge Request approvals with external systems",
    "link": "https://about.gitlab.com/blog/2024/10/08/tutorial-integrate-gitlab-merge-request-approvals-with-external-systems",
    "description": "",
    "author": "Samer Akkoub",
    "published": "2024-10-08T00:00:00.000Z",
    "image": "",
    "source": "https://about.gitlab.com/atom.xml",
    "categories": null
  },
  {
    "id": "37bf0d1c-c061-4b78-aa65-3ad9544c5a06",
    "title": "What's new in Git 2.47.0?",
    "link": "https://about.gitlab.com/blog/2024/10/07/whats-new-in-git-2-47-0",
    "description": "",
    "author": "Justin Tobler",
    "published": "2024-10-07T00:00:00.000Z",
    "image": "",
    "source": "https://about.gitlab.com/atom.xml",
    "categories": null
  },
  {
    "id": "f751e0d8-0a51-413e-aa69-6168182a8c99",
    "title": "GitLab Duo Chat: Get to know productivity-boosting AI enhancements",
    "link": "https://about.gitlab.com/blog/2024/10/03/gitlab-duo-chat-get-to-know-productivity-boosting-ai-enhancements",
    "description": "",
    "author": "David O'Regan",
    "published": "2024-10-03T00:00:00.000Z",
    "image": "",
    "source": "https://about.gitlab.com/atom.xml",
    "categories": null
  },
  {
    "id": "80284897-e682-4847-935c-2eadf675037e",
    "title": "How we designed the GitLab Reference Architectures",
    "link": "https://about.gitlab.com/blog/2024/10/02/how-we-designed-the-gitlab-reference-architectures",
    "description": "",
    "author": "Grant Young",
    "published": "2024-10-02T00:00:00.000Z",
    "image": "",
    "source": "https://about.gitlab.com/atom.xml",
    "categories": null
  },
  {
    "id": "004b5bdc-0cae-411e-b322-b158c6ad6736",
    "title": "Why GitLab is deprecating compliance pipelines in favor of security policies",
    "link": "https://about.gitlab.com/blog/2024/10/01/why-gitlab-is-deprecating-compliance-pipelines-in-favor-of-security-policies",
    "description": "",
    "author": "Ian Khor",
    "published": "2024-10-01T00:00:00.000Z",
    "image": "",
    "source": "https://about.gitlab.com/atom.xml",
    "categories": null
  },
  {
    "id": "a16946ab-8518-4dd8-9bd4-98cfde632704",
    "title": "Using child pipelines to continuously deploy to five environments",
    "link": "https://about.gitlab.com/blog/2024/09/26/using-child-pipelines-to-continuously-deploy-to-five-environments",
    "description": "",
    "author": "Olivier Dupré",
    "published": "2024-09-26T00:00:00.000Z",
    "image": "",
    "source": "https://about.gitlab.com/atom.xml",
    "categories": null
  },
  {
    "id": "4197bcf9-4b09-49a4-a961-3d34ff7b8035",
    "title": "5 ways GitLab Duo Chat AI can supercharge product management",
    "link": "https://about.gitlab.com/blog/2024/09/25/5-ways-gitlab-duo-chat-ai-can-supercharge-product-management",
    "description": "",
    "author": "Tim Rizzi",
    "published": "2024-09-25T00:00:00.000Z",
    "image": "",
    "source": "https://about.gitlab.com/atom.xml",
    "categories": null
  },
  {
    "id": "37316915-f89b-4262-858c-d24d64730307",
    "title": "Git pull vs. git fetch: What's the difference?",
    "link": "https://about.gitlab.com/blog/2024/09/24/git-pull-vs-git-fetch-whats-the-difference",
    "description": "",
    "author": "GitLab",
    "published": "2024-09-24T00:00:00.000Z",
    "image": "",
    "source": "https://about.gitlab.com/atom.xml",
    "categories": null
  },
  {
    "id": "31a532f2-afba-4635-8b3a-aa59dabebd33",
    "title": "GitLab Pages features review apps and multiple website deployment",
    "link": "https://about.gitlab.com/blog/2024/09/23/gitlab-pages-features-review-apps-and-multiple-website-deployment",
    "description": "",
    "author": "Matthew Macfarlane",
    "published": "2024-09-23T00:00:00.000Z",
    "image": "",
    "source": "https://about.gitlab.com/atom.xml",
    "categories": null
  },
  {
    "id": "83536beb-a061-422c-8688-9be9a8dbad3d",
    "title": "GitLab Advanced SAST is now generally available",
    "link": "https://about.gitlab.com/blog/2024/09/19/gitlab-advanced-sast-is-now-generally-available",
    "description": "",
    "author": "Salman Ladha",
    "published": "2024-09-19T00:00:00.000Z",
    "image": "",
    "source": "https://about.gitlab.com/atom.xml",
    "categories": null
  },
  {
    "id": "842bdd64-00f5-44a8-93f0-aed1ba86e988",
    "title": "GitLab Linux package being upgraded to OpenSSL 3 in GitLab 17.7",
    "link": "https://about.gitlab.com/blog/2024/09/18/gitlab-linux-package-being-upgraded-to-openssl-3",
    "description": "",
    "author": "Dilan Orrino",
    "published": "2024-09-18T00:00:00.000Z",
    "image": "",
    "source": "https://about.gitlab.com/atom.xml",
    "categories": null
  },
  {
    "id": "ba76dcf4-019b-4587-a086-f158da5298e5",
    "title": "Navigate application architecture drift and organizational alignment",
    "link": "https://about.gitlab.com/blog/2024/09/18/navigate-application-architecture-drift-and-organizational-alignment",
    "description": "",
    "author": "Lee Faus",
    "published": "2024-09-18T00:00:00.000Z",
    "image": "",
    "source": "https://about.gitlab.com/atom.xml",
    "categories": null
  },
  {
    "id": "683dbf6b-1900-4fb1-bcd7-ac7ab14520e4",
    "title": "Build an ML app pipeline with GitLab Model Registry using MLflow",
    "link": "https://about.gitlab.com/blog/2024/09/17/build-an-ml-app-pipeline-with-gitlab-model-registry-using-mlflow",
    "description": "",
    "author": "Gufran Yeşilyurt, OBSS",
    "published": "2024-09-17T00:00:00.000Z",
    "image": "",
    "source": "https://about.gitlab.com/atom.xml",
    "categories": null
  },
  {
    "id": "b422e094-95db-465a-b29f-8c9b09a3d434",
    "title": "Building GitLab with GitLab: A multi-region service to deliver AI features",
    "link": "https://about.gitlab.com/blog/2024/09/12/building-gitlab-with-gitlab-a-multi-region-service-to-deliver-ai-features",
    "description": "",
    "author": "Sam Wiskow",
    "published": "2024-09-12T00:00:00.000Z",
    "image": "",
    "source": "https://about.gitlab.com/atom.xml",
    "categories": null
  },
  {
    "id": "c4a3117c-6527-4a28-98ec-b12d12d0be49",
    "title": "Navigating the AI frontier: Lessons from the cutting edge",
    "link": "https://about.gitlab.com/blog/2024/09/10/navigating-the-ai-frontier-lessons-from-the-cutting-edge",
    "description": "",
    "author": "David O'Regan",
    "published": "2024-09-10T00:00:00.000Z",
    "image": "",
    "source": "https://about.gitlab.com/atom.xml",
    "categories": null
  },
  {
    "id": "169d83fd-006a-4a2b-bd75-60701e3b232c",
    "title": "Secure open source container infrastructure with GitLab and Chainguard",
    "link": "https://about.gitlab.com/blog/2024/09/09/secure-open-source-container-infrastructure-with-gitlab-and-chainguard",
    "description": "",
    "author": "Fernando Diaz",
    "published": "2024-09-09T00:00:00.000Z",
    "image": "",
    "source": "https://about.gitlab.com/atom.xml",
    "categories": null
  },
  {
    "id": "1ee5d289-bb8c-4c29-b9bf-932d4458e8be",
    "title": "GitLab named a Leader in the 2024 Gartner Magic Quadrant for DevOps Platforms",
    "link": "https://about.gitlab.com/blog/2024/09/05/gitlab-named-a-leader-in-the-2024-gartner-magic-quadrant-for-devops",
    "description": "",
    "author": "Ashley Kramer",
    "published": "2024-09-05T00:00:00.000Z",
    "image": "",
    "source": "https://about.gitlab.com/atom.xml",
    "categories": null
  },
  {
    "id": "8d7bfd54-7cb1-429a-88a5-2ff88b2f4a95",
    "title": "Annotate container images with build provenance using Cosign in GitLab CI/CD",
    "link": "https://about.gitlab.com/blog/2024/09/04/annotate-container-images-with-build-provenance-using-cosign-in-gitlab-ci-cd",
    "description": "",
    "author": "Tim Rizzi",
    "published": "2024-09-04T00:00:00.000Z",
    "image": "",
    "source": "https://about.gitlab.com/atom.xml",
    "categories": null
  },
  {
    "id": "a5acf9ef-b4a7-40e4-9505-03f5a1c14438",
    "title": "GitLab Duo Enterprise is now available",
    "link": "https://about.gitlab.com/blog/2024/09/03/gitlab-duo-enterprise-is-now-available",
    "description": "",
    "author": "David DeSanto, Chief Product Officer, GitLab",
    "published": "2024-09-03T00:00:00.000Z",
    "image": "",
    "source": "https://about.gitlab.com/atom.xml",
    "categories": null
  },
  {
    "id": "f5ed32b2-3af5-42f5-be38-6a660b9bc5be",
    "title": "How I Wrote 10K Lines of Go in a Weekend",
    "link": "https://www.youtube.com/watch?v=9XiVqfLVtIs",
    "description": "",
    "author": "Google TechTalks",
    "published": "2024-08-15T16:09:01+00:00",
    "image": "",
    "source": "https://www.youtube.com/feeds/videos.xml?user=GoogleTechTalks",
    "categories": null
  },
  {
    "id": "23f307a2-246c-4ffe-8c2a-6b98e54c2000",
    "title": "Supply Chain Security with Go",
    "link": "https://www.youtube.com/watch?v=ORVzCcX0gzE",
    "description": "",
    "author": "Google TechTalks",
    "published": "2024-08-15T16:08:56+00:00",
    "image": "",
    "source": "https://www.youtube.com/feeds/videos.xml?user=GoogleTechTalks",
    "categories": null
  },
  {
    "id": "4695d9bf-27e3-4897-822a-86d9485a1b7f",
    "title": "A Multi Dimensional Online Contention Resolution Scheme",
    "link": "https://www.youtube.com/watch?v=iqa4OYEEjB0",
    "description": "",
    "author": "Google TechTalks",
    "published": "2024-07-30T15:04:32+00:00",
    "image": "",
    "source": "https://www.youtube.com/feeds/videos.xml?user=GoogleTechTalks",
    "categories": null
  },
  {
    "id": "08fa002f-4c68-483f-b53a-3d2ea8d307b1",
    "title": "Robust Distortion-free Watermarks for Language Models",
    "link": "https://www.youtube.com/watch?v=jkwUUAnCI_A",
    "description": "",
    "author": "Google TechTalks",
    "published": "2024-07-09T21:51:22+00:00",
    "image": "",
    "source": "https://www.youtube.com/feeds/videos.xml?user=GoogleTechTalks",
    "categories": null
  },
  {
    "id": "a0534b5a-0518-47c8-8482-e6b21614da42",
    "title": "Is it possible to make self-adjusting data structures concurrent?",
    "link": "https://www.youtube.com/watch?v=A7DaSVMm0To",
    "description": "",
    "author": "Google TechTalks",
    "published": "2024-07-02T17:13:08+00:00",
    "image": "",
    "source": "https://www.youtube.com/feeds/videos.xml?user=GoogleTechTalks",
    "categories": null
  },
  {
    "id": "e4d37f13-bc32-42ed-ad4f-443b7540ba60",
    "title": "Privacy Preserving ML with Fully Homomorphic Encryption",
    "link": "https://www.youtube.com/watch?v=g1Zlu63TP0Y",
    "description": "",
    "author": "Google TechTalks",
    "published": "2024-06-21T18:44:27+00:00",
    "image": "",
    "source": "https://www.youtube.com/feeds/videos.xml?user=GoogleTechTalks",
    "categories": null
  },
  {
    "id": "463ddcfb-fb87-4bec-9c86-f011ac33a874",
    "title": "The Chinese Computer: A Global History of the Information Age",
    "link": "https://www.youtube.com/watch?v=XBVNy-pUqVk",
    "description": "",
    "author": "Google TechTalks",
    "published": "2024-06-21T16:22:15+00:00",
    "image": "",
    "source": "https://www.youtube.com/feeds/videos.xml?user=GoogleTechTalks",
    "categories": null
  },
  {
    "id": "5ea486d9-63d9-4946-8ec6-fef4b0a22356",
    "title": "KAN: Kolmogorov-Arnold Networks",
    "link": "https://www.youtube.com/watch?v=JuPwfQlPUt0",
    "description": "",
    "author": "Google TechTalks",
    "published": "2024-06-15T01:01:31+00:00",
    "image": "",
    "source": "https://www.youtube.com/feeds/videos.xml?user=GoogleTechTalks",
    "categories": null
  },
  {
    "id": "bc89927d-7672-42f0-9d3d-4cc36dee3713",
    "title": "Learning through Transient Matching in Congested Markets",
    "link": "https://www.youtube.com/watch?v=iOUsPSxDkG8",
    "description": "",
    "author": "Google TechTalks",
    "published": "2024-05-27T19:10:30+00:00",
    "image": "",
    "source": "https://www.youtube.com/feeds/videos.xml?user=GoogleTechTalks",
    "categories": null
  },
  {
    "id": "54dc2a00-ff27-4ee4-b4b9-85654071d329",
    "title": "What Makes Software Work?",
    "link": "https://www.youtube.com/watch?v=pCr3GjdoTbg",
    "description": "",
    "author": "Google TechTalks",
    "published": "2024-05-23T06:01:19+00:00",
    "image": "",
    "source": "https://www.youtube.com/feeds/videos.xml?user=GoogleTechTalks",
    "categories": null
  },
  {
    "id": "e0abbba0-e55c-4404-bebb-e862ed8256fa",
    "title": "Algorithms and Hardness for Attention and Kernel Density Estimation",
    "link": "https://www.youtube.com/watch?v=6Dsf1E6ZGP8",
    "description": "",
    "author": "Google TechTalks",
    "published": "2024-05-20T18:50:11+00:00",
    "image": "",
    "source": "https://www.youtube.com/feeds/videos.xml?user=GoogleTechTalks",
    "categories": null
  },
  {
    "id": "4e57a4df-fee9-4f72-9988-c9eff11e5f00",
    "title": "A Unified Analysis of Label Inference Attacks",
    "link": "https://www.youtube.com/watch?v=7lRQaEWwmLk",
    "description": "",
    "author": "Google TechTalks",
    "published": "2024-05-20T18:33:30+00:00",
    "image": "",
    "source": "https://www.youtube.com/feeds/videos.xml?user=GoogleTechTalks",
    "categories": null
  },
  {
    "id": "c25b3079-cf5c-4416-a4f2-91198c972768",
    "title": "Copyright Regenerated: Harnessing GenAI to Measure Originality and Copyright Scope",
    "link": "https://www.youtube.com/watch?v=D7TcPV_X6BI",
    "description": "",
    "author": "Google TechTalks",
    "published": "2024-05-20T18:33:30+00:00",
    "image": "",
    "source": "https://www.youtube.com/feeds/videos.xml?user=GoogleTechTalks",
    "categories": null
  },
  {
    "id": "58d2c2e2-08c0-4bee-a27c-650b08f43c28",
    "title": "The Data Minimization Principle in Machine Learning",
    "link": "https://www.youtube.com/watch?v=PMg09hPA4Z8",
    "description": "",
    "author": "Google TechTalks",
    "published": "2024-05-20T18:33:30+00:00",
    "image": "",
    "source": "https://www.youtube.com/feeds/videos.xml?user=GoogleTechTalks",
    "categories": null
  },
  {
    "id": "0398fed8-d64c-416d-a225-30cb2e50bc3d",
    "title": "Challenges in Augmenting Large Language Models with Private Data",
    "link": "https://www.youtube.com/watch?v=Tyw51pIp_gg",
    "description": "",
    "author": "Google TechTalks",
    "published": "2024-05-20T18:33:30+00:00",
    "image": "",
    "source": "https://www.youtube.com/feeds/videos.xml?user=GoogleTechTalks",
    "categories": null
  },
  {
    "id": "b4d96c66-7949-4baf-8d0c-f86b80af49c9",
    "title": "Remove Paywalls from Search Results",
    "link": "https://medium.com/hackernoon/remove-paywalls-from-search-results-9b2a78053bec?source=rss----3a8144eabfe3---4",
    "description": "",
    "author": "#BlackLivesMatter",
    "published": "Fri, 14 May 2021 13:35:18 GMT",
    "image": "https://cdn-images-1.medium.com/max/784/1*kQx2xxgd7mjP6uTnYYjdgQ.png",
    "source": "https://medium.com/feed/hackernoon",
    "categories": [
      "chrome-extension",
      "paywall",
      "search-results",
      "remove-paywall",
      "google"
    ]
  },
  {
    "id": "d0964358-d90f-4250-968f-1dc0154ed208",
    "title": "NBA Bubbleball and NBA Revenue [Podcast with Washington Post]",
    "link": "https://medium.com/hackernoon/nba-bubbleball-and-nba-revenue-podcast-with-washington-post-75c03541f064?source=rss----3a8144eabfe3---4",
    "description": "",
    "author": "ArtMap Inc.",
    "published": "Mon, 15 Feb 2021 20:13:06 GMT",
    "image": "https://medium.com/_/stat?event=post.clientViewed\u0026referrerSource=full_rss\u0026postId=75c03541f064",
    "source": "https://medium.com/feed/hackernoon",
    "categories": [
      "nba-revenue",
      "nba-bubble",
      "nba",
      "podcast",
      "nba-revenue-podcast"
    ]
  },
  {
    "id": "ae203504-786f-4cc9-8687-4eb6b1f011ee",
    "title": "Meet Tech Experts",
    "link": "https://medium.com/hackernoon/meet-tech-experts-12d4868f079d?source=rss----3a8144eabfe3---4",
    "description": "",
    "author": "#BlackLivesMatter",
    "published": "Tue, 22 Dec 2020 07:29:45 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*zBViYonF9jm8s6oBlpKn7A.png",
    "source": "https://medium.com/feed/hackernoon",
    "categories": [
      "tech-experts",
      "technology-expert",
      "hackernoon-top-story",
      "meet-tech-experts",
      "meet-technology-experts"
    ]
  },
  {
    "id": "8151b050-ce6f-4499-9c06-debac913e1ec",
    "title": "Four Coding Stories",
    "link": "https://medium.com/hackernoon/four-coding-stories-6a942d696817?source=rss----3a8144eabfe3---4",
    "description": "",
    "author": "Hacker Noon Support",
    "published": "Thu, 17 Dec 2020 18:24:20 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*XYxihZr5qZcgijrUYFJeTg.jpeg",
    "source": "https://medium.com/feed/hackernoon",
    "categories": [
      "coding",
      "hackernoon-top-story",
      "technology",
      "programming",
      "hackernoon"
    ]
  },
  {
    "id": "35efc5d5-f2a6-4a08-a017-dfad5d4f0dd0",
    "title": "Three Coding Stories",
    "link": "https://medium.com/hackernoon/three-coding-stories-e57c694814aa?source=rss----3a8144eabfe3---4",
    "description": "",
    "author": "Hacker Noon Support",
    "published": "Tue, 15 Dec 2020 11:42:37 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*9hrJ3ZthWKKN1sitqREZMQ.jpeg",
    "source": "https://medium.com/feed/hackernoon",
    "categories": [
      "codingbootcamp",
      "hackernoon-top-story",
      "coding",
      "programming",
      "technology"
    ]
  },
  {
    "id": "0b6228c1-3cbd-4aa7-bf2f-61ffa6f7bca8",
    "title": "Four Tech Stories",
    "link": "https://medium.com/hackernoon/four-tech-stories-907b5d56b75d?source=rss----3a8144eabfe3---4",
    "description": "",
    "author": "Hacker Noon Support",
    "published": "Mon, 23 Nov 2020 19:19:37 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*AgUGgIvjjjCvIC0C7ZJCNQ.jpeg",
    "source": "https://medium.com/feed/hackernoon",
    "categories": [
      "technews",
      "coding",
      "technology",
      "hackernoon",
      "hackernoon-top-story"
    ]
  },
  {
    "id": "9d478f92-df64-4db1-8d30-29b9aa905b57",
    "title": "Eight Tech Stories",
    "link": "https://medium.com/hackernoon/eight-tech-stories-7ac9d51f0869?source=rss----3a8144eabfe3---4",
    "description": "",
    "author": "Hacker Noon Support",
    "published": "Fri, 20 Nov 2020 18:56:03 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*NeqZ0DdQRS9YJ7LNvMg-5g.jpeg",
    "source": "https://medium.com/feed/hackernoon",
    "categories": [
      "hackernoon",
      "technology",
      "technology-news",
      "technews",
      "hackernoon-top-story"
    ]
  },
  {
    "id": "183f7e2c-7bdb-4dd4-bab0-33194df13dbf",
    "title": "Six Tech Stories",
    "link": "https://medium.com/hackernoon/six-tech-stories-9da7b748ad1?source=rss----3a8144eabfe3---4",
    "description": "",
    "author": "Hacker Noon Support",
    "published": "Wed, 18 Nov 2020 18:53:12 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*nBj1bwwSsERLTIygJmYphw.jpeg",
    "source": "https://medium.com/feed/hackernoon",
    "categories": [
      "hackernoon",
      "technology",
      "technews",
      "hackernoon-top-story"
    ]
  },
  {
    "id": "74961d59-180f-4ecf-a611-b8d78f2136ce",
    "title": "Two Tech Stories",
    "link": "https://medium.com/hackernoon/two-tech-stories-df586e18de02?source=rss----3a8144eabfe3---4",
    "description": "",
    "author": "Hacker Noon Support",
    "published": "Fri, 13 Nov 2020 17:57:34 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*dRAoNCFTfVEI9jXZ1Thjxg.jpeg",
    "source": "https://medium.com/feed/hackernoon",
    "categories": [
      "technology",
      "hackernoon-top-story",
      "hackernoon",
      "spotify",
      "technology-news"
    ]
  },
  {
    "id": "2905da08-aa06-434f-abb8-6c74264d3203",
    "title": "Five Tech Stories",
    "link": "https://medium.com/hackernoon/five-tech-stories-ede34473829c?source=rss----3a8144eabfe3---4",
    "description": "",
    "author": "Hacker Noon Support",
    "published": "Wed, 11 Nov 2020 17:34:55 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*een_wMmh6fzwpQWZChkuPQ.jpeg",
    "source": "https://medium.com/feed/hackernoon",
    "categories": [
      "product-development",
      "hackernoon",
      "technology",
      "hackernoon-top-story",
      "technews"
    ]
  },
  {
    "id": "b0290a0c-c19a-4b01-bf52-1b38c5477f82",
    "title": "Is it always DNS? with DNSimple's Anthony Eden",
    "link": "https://www.hanselminutes.com",
    "description": "",
    "author": "Scott Hanselman",
    "published": "Thu, 10 Oct 2024 21:00:00 +0000",
    "image": "https://r.zen.ai/r/cdn.simplecast.com/audio/24832310-78fe-4898-91be-6db33696c4ba/episodes/afc649e2-db45-4d06-b2eb-90b8e0df87ae/audio/102056de-c75f-4285-a320-70de70fd483d/default_tc.mp3?aid=rss_feed\u0026feed=gvtxUiIf",
    "source": "https://feeds.simplecast.com/gvtxUiIf",
    "categories": null
  },
  {
    "id": "d538d983-34d6-48bc-b0d5-4b4ab3e82647",
    "title": "Creating The Crimson Diamond with Julia Minamata",
    "link": "https://www.hanselminutes.com",
    "description": "The Crimson Diamond is a mystery adventure video game developed and published by Julia Minamata for the PC. The game features a text parser, requiring players to solve a mystery through inputting instructions via text to the game. Solo developer Julia Minamata designed the game featuring an EGA color palette!https://www.thecrimsondiamond.com",
    "author": "Scott Hanselman",
    "published": "Thu, 3 Oct 2024 00:00:00 +0000",
    "image": "https://r.zen.ai/r/cdn.simplecast.com/audio/24832310-78fe-4898-91be-6db33696c4ba/episodes/96c2cd59-fab6-498b-9908-f4f0e552541f/audio/84caf8f5-6310-4958-81a7-623df4265b4d/default_tc.mp3?aid=rss_feed\u0026feed=gvtxUiIf",
    "source": "https://feeds.simplecast.com/gvtxUiIf",
    "categories": null
  },
  {
    "id": "9edf0527-2b2a-4426-ac6f-5b63e674c4e6",
    "title": "The next supercomputer with NVIDIA's Wen-Mei Hwu",
    "link": "https://www.hanselminutes.com",
    "description": "In this episode of ACM ByteCast, our special guest host Scott Hanselman (of The Hanselminutes Podcast) welcomes 2024 ACM-IEEE CS Eckert-Mauchly Award recipient Wen-Mei Hwu, Senior Distinguished Research Scientist at NVIDIA and Professor Emeritus at the University of Illinois, Urbana-Champaign. He was recognized for pioneering and foundational contributions to the design and adoption of multiple generations of processor architectures. His fundamental and pioneering contributions have had a broad impact on three generations of processor architectures: superscalar, VLIW, and throughput-oriented manycore processors (GPUs). Other honors and recognitions include the 1999 ACM Grace Murray Hopper Award, 2006 ISCA Most Influential Paper Award, 2014 MICRO Test-of-Time Award, and 2018 CGO Test-of-Time Award. He is the co-author, with David Kirk, of the popular textbook Programming Massively Parallel Processors.Wen-Mei discusses the evolution of Moore’s Law and the significance of Dennard Scaling, which allowed for faster, more efficient processors without increasing chip size or power consumption. He explains how his research group’s approach to microarchitecture at the University of California, Berkeley in the 80s led to advancements such as Intel’s P6 processor. Wen-Mei and Scott discuss the early days of processors and the rise of specialized processors and new computational units. They also share their predictions about the future of computing and advancements that will be required to handle vast data sets in real time, and potential devices that would extend human capabilities.Wen-mei Hwu Announced as the 2024 ACM-IEEE CS Eckert-Mauchly Award Recipient",
    "author": "Scott Hanselman",
    "published": "Thu, 26 Sep 2024 00:00:00 +0000",
    "image": "https://r.zen.ai/r/cdn.simplecast.com/audio/24832310-78fe-4898-91be-6db33696c4ba/episodes/3dbc63b7-3ec8-47c4-8349-17a9ecd0e6a9/audio/fbc37dcd-e077-4a5f-bf33-aebce377a6e3/default_tc.mp3?aid=rss_feed\u0026feed=gvtxUiIf",
    "source": "https://feeds.simplecast.com/gvtxUiIf",
    "categories": null
  },
  {
    "id": "c348b51b-a457-4b23-aa2c-1bc962f73917",
    "title": "Life as an Indie Developer with Joseph Finney",
    "link": "https://www.hanselminutes.com",
    "description": "Joseph Finney is a mechanical engineer by day and a software developer by night. He talks to Scott about how being an indie developer has improved his life, taught him a ton, in how he put applications in the Apple App store, the Google play store, and the Microsoft store. Some of the apps are big and complicated come up and some of the apps are applets, but all of them serve a purpose and solve a specific problem. Joeseph lives experimenting with different ways to solve common problems and have a passion for designing software which makes computers more natural to use.https://joefinapps.com",
    "author": "Scott Hanselman",
    "published": "Thu, 19 Sep 2024 21:00:00 +0000",
    "image": "https://r.zen.ai/r/cdn.simplecast.com/audio/24832310-78fe-4898-91be-6db33696c4ba/episodes/6f2c5d0b-dcd0-4b05-b9d6-b5f09b8c16b8/audio/a42d8b1e-2e19-47b4-95f3-45fec5353171/default_tc.mp3?aid=rss_feed\u0026feed=gvtxUiIf",
    "source": "https://feeds.simplecast.com/gvtxUiIf",
    "categories": null
  },
  {
    "id": "77e4bed2-47e6-4423-8c5a-148f61f8a025",
    "title": "Snapdragon is the future with Qualcomm's Leendert van Doorn",
    "link": "https://www.hanselminutes.com",
    "description": "In this episode, Leendert van Doorn discusses the future of Snapdragon technology and its potential to revolutionize various industries. Snapdragon processors are known for their high performance and efficiency, making them a popular choice for smartphones, tablets, and other devices. Van Doorn highlights how Qualcomm is pushing the boundaries of what’s possible with Snapdragon, focusing on advancements in AI, connectivity, and power efficiency. He chats with Scott about his passion for this space, and how Qualcomm Snapdragon powers the AI and more in the new Windows Copilot+ PCs!https://developer.qualcomm.com/",
    "author": "Scott Hanselman",
    "published": "Thu, 12 Sep 2024 21:00:00 +0000",
    "image": "https://r.zen.ai/r/cdn.simplecast.com/audio/24832310-78fe-4898-91be-6db33696c4ba/episodes/2739d0af-52f0-4681-bead-c29c47f73cb9/audio/c608b21a-114c-4de0-9e52-29b9d76f3c87/default_tc.mp3?aid=rss_feed\u0026feed=gvtxUiIf",
    "source": "https://feeds.simplecast.com/gvtxUiIf",
    "categories": null
  },
  {
    "id": "ec49370b-bf83-468d-a318-939e56a62935",
    "title": "AI Storytelling with Michael Washington",
    "link": "https://www.hanselminutes.com",
    "description": "Michael Washington doesn't want AI to write the Great American novel, he wants YOU to write the Great American novel faster and easier. He's created AIStoryBuilders To help you break your stories down into timelines, locations, and characters. He sits down with Scott to talk about how he wrote this application, where retrieval augmented generation comes in, and how he wrote it with web assembly in mind to avoid having to deal with app stores while still having a mobile version.https://aistorybuilders.com/https://documentation.aistorybuilders.com/",
    "author": "Scott Hanselman",
    "published": "Thu, 5 Sep 2024 21:00:00 +0000",
    "image": "https://r.zen.ai/r/cdn.simplecast.com/audio/24832310-78fe-4898-91be-6db33696c4ba/episodes/5092c7e1-447f-48f0-a4a4-eed0744218dc/audio/99043ff1-d32c-4d42-93cb-52233ee34440/default_tc.mp3?aid=rss_feed\u0026feed=gvtxUiIf",
    "source": "https://feeds.simplecast.com/gvtxUiIf",
    "categories": null
  },
  {
    "id": "30339c2f-23ad-4bc7-acb8-bd6e221d9696",
    "title": "Nature of Code with Daniel Shiffman",
    "link": "https://www.hanselminutes.com",
    "description": "Daniel Schiffman is a joy. For over a decade, Nature of Code has empowered countless readers to bridge the gap between creative expression and programming. Daniel Schiffman has also brought his joy through education on his Coding Train YouTube channel to millions. Now the Nature of Code has been updated for 2024 with an all new workflow and build system, 28 repositories, and a number of updated chapters that will teach you how to simulate natural systems with javascript. You will come out the the experience with a better appreciation for the nature of code!25% DISCOUNT on Nature of Code!  (applied at checkout so click all the way!)https://natureofcode.com/",
    "author": "Scott Hanselman",
    "published": "Thu, 29 Aug 2024 21:00:00 +0000",
    "image": "https://r.zen.ai/r/cdn.simplecast.com/audio/24832310-78fe-4898-91be-6db33696c4ba/episodes/5a7837a0-ec55-478a-82a1-942a6117ebb2/audio/d31db8c9-2564-4116-b082-d4ab08cad2b5/default_tc.mp3?aid=rss_feed\u0026feed=gvtxUiIf",
    "source": "https://feeds.simplecast.com/gvtxUiIf",
    "categories": null
  },
  {
    "id": "3982fe70-3ff5-40dd-be91-c0de77ca97b6",
    "title": "Fine tuning Products with Stanza System's Stacie Frederick",
    "link": "https://www.hanselminutes.com",
    "description": "In this episode of Hanselminutes, Scott Hanselman chats with technical product leader Stacie Frederick from Stanza Systems. They dive into the intricacies of fine-tuning products, exploring how thoughtful adjustments and gentle optimizations can significantly enhance user experience and performance. Stacie shares her expertise on the methodologies and tools that drive successful product refinement, offering listeners actionable insights and real-world examples and a better sense of customer empathy.https://www.stanza.systems",
    "author": "Scott Hanselman",
    "published": "Thu, 22 Aug 2024 21:00:00 +0000",
    "image": "https://r.zen.ai/r/cdn.simplecast.com/audio/24832310-78fe-4898-91be-6db33696c4ba/episodes/c97ef472-7845-4d49-bfab-73950883e934/audio/a83da7bb-ba6d-4969-ad65-74e89b9031aa/default_tc.mp3?aid=rss_feed\u0026feed=gvtxUiIf",
    "source": "https://feeds.simplecast.com/gvtxUiIf",
    "categories": null
  },
  {
    "id": "e896cd84-ad94-4ff3-9fc3-f55737969c96",
    "title": "GitOps on the Edge with Octopus Deploy's Dan Garfield",
    "link": "https://www.hanselminutes.com",
    "description": "In this episode of Hanselminutes, Scott Hanselman sits down with Dan Garfield from Octopus Deploy to delve into the cutting-edge world of GitOps on the Edge. They explore how GitOps principles are revolutionizing deployment strategies, particularly in edge computing environments where latency and reliability are critical. Dan shares insights on the unique challenges and solutions for managing infrastructure and applications at the edge, highlighting real-world use cases and best practices. Whether you’re a seasoned DevOps professional or just curious about the future of deployment automation, this episode offers valuable perspectives on the evolving landscape of GitOpshttps://octopus.com/blog/what-is-gitops",
    "author": "Scott Hanselman",
    "published": "Thu, 15 Aug 2024 21:00:00 +0000",
    "image": "https://r.zen.ai/r/cdn.simplecast.com/audio/24832310-78fe-4898-91be-6db33696c4ba/episodes/4a91891f-1efc-436b-aeec-d6d531af8aa4/audio/65a57f6f-acef-4551-82d7-d3edf12705cb/default_tc.mp3?aid=rss_feed\u0026feed=gvtxUiIf",
    "source": "https://feeds.simplecast.com/gvtxUiIf",
    "categories": null
  },
  {
    "id": "689b8524-9439-49f8-9a9a-32572ce32263",
    "title": "Decoding Tech Influencers with Emily Freeman",
    "link": "https://www.hanselminutes.com",
    "description": "Freeman and Forrest is the first influencer marketing service focused on enterprise tech. After running developer relations, product marketing, and community teams at companies like AWS, Google, Microsoft, and startups, Emily Freeman and Forrest Brazeal have now assembled a dream team of influencer partners across many niches like cloud to security and even generative AI. Today Emily talks to Scott Hanselman about the rise of the technology influencer.https://www.freemanandforrest.com/",
    "author": "Scott Hanselman",
    "published": "Thu, 8 Aug 2024 21:00:00 +0000",
    "image": "https://r.zen.ai/r/cdn.simplecast.com/audio/24832310-78fe-4898-91be-6db33696c4ba/episodes/ee348121-fd4c-4c82-a4e9-86936c435985/audio/e376b27a-ea90-4511-ac6b-367e7a6cf20c/default_tc.mp3?aid=rss_feed\u0026feed=gvtxUiIf",
    "source": "https://feeds.simplecast.com/gvtxUiIf",
    "categories": null
  },
  {
    "id": "59a368cc-5cf9-43af-8680-2f241a333ca2",
    "title": "Is AI the new UI? Talking to computers with Noelle Russell",
    "link": "https://www.hanselminutes.com",
    "description": "Is AI the new UI? In this episode we'll be chatting with AI expert and Alexa developer Noelle Russell. She's believed in the power of talking to computers for years and thinks it's about to really happen for real. Will VLLMs and AI bring the promise of complex interactions with your computer to life?",
    "author": "Scott Hanselman",
    "published": "Thu, 1 Aug 2024 21:00:00 +0000",
    "image": "https://r.zen.ai/r/cdn.simplecast.com/audio/24832310-78fe-4898-91be-6db33696c4ba/episodes/c15563a2-b995-47cb-814c-d4aeceb4dec7/audio/8ced1dda-be9e-4088-a391-b3fd73318e91/default_tc.mp3?aid=rss_feed\u0026feed=gvtxUiIf",
    "source": "https://feeds.simplecast.com/gvtxUiIf",
    "categories": null
  },
  {
    "id": "be2ab414-f823-4c1d-a6a2-d35b34cba239",
    "title": "Creating Tools for Thought with Andy Matuschak",
    "link": "https://www.hanselminutes.com",
    "description": "Andy Matuschak is an independent researcher who explores user interfaces that expand what people can think and do. He sits down with Scott to talk about how we learn, why we learn, and what learning means in a world of AI and AGI.https://andymatuschak.org/",
    "author": "Scott Hanselman",
    "published": "Thu, 25 Jul 2024 21:00:00 +0000",
    "image": "https://r.zen.ai/r/cdn.simplecast.com/audio/24832310-78fe-4898-91be-6db33696c4ba/episodes/34857840-9ec6-4c5e-974b-911e31d408c6/audio/12ec24fa-08a2-4082-a336-27888daef1a3/default_tc.mp3?aid=rss_feed\u0026feed=gvtxUiIf",
    "source": "https://feeds.simplecast.com/gvtxUiIf",
    "categories": null
  },
  {
    "id": "47103b2f-8f7e-4d9d-8244-69e2e49f31e9",
    "title": "Defining Developer Relations with Angie Jones",
    "link": "https://www.hanselminutes.com",
    "description": "Scott's in Berlin this week and talks to Angie Jones, Global Vice President of Developer Relations, TBD @ Block, about the job of Developer Relations. What does a DevRel person even do? Are they just hanging out in the Delta Lounge or are the Developers? What does it mean to Advocate versus Evangelize?",
    "author": "Scott Hanselman",
    "published": "Thu, 18 Jul 2024 21:00:00 +0000",
    "image": "https://r.zen.ai/r/cdn.simplecast.com/audio/24832310-78fe-4898-91be-6db33696c4ba/episodes/7aea65fd-2eda-4fd0-ad99-43b759d9bbc5/audio/22b42a9a-af04-4eab-afdb-37c14076d810/default_tc.mp3?aid=rss_feed\u0026feed=gvtxUiIf",
    "source": "https://feeds.simplecast.com/gvtxUiIf",
    "categories": null
  },
  {
    "id": "1d85925c-5f13-43bb-bcb0-f1d3305a41c4",
    "title": "Computer Science Visualizations with Sam Rose",
    "link": "https://www.hanselminutes.com",
    "description": "Sam Rose creates visual introductions to computer science topics. Each post takes about a month to make, and he tries to cover foundational topics in a way that's accessible to beginners. Scott chats with Sam about the how and why of making such bespoke and sophisticated blog posts.Visit Sam Rose's site!Load BalancingMemory AllocationHashingRetriesBloom FiltersNumbersQueueingBartosz Ciechanowski's Mechanical WatchAndy Matuschak",
    "author": "Scott Hanselman",
    "published": "Thu, 11 Jul 2024 21:00:00 +0000",
    "image": "https://r.zen.ai/r/cdn.simplecast.com/audio/24832310-78fe-4898-91be-6db33696c4ba/episodes/ce4d3605-a99d-4416-9252-9cef213f8cdb/audio/58b29268-b125-4829-9b84-c25e3791481b/default_tc.mp3?aid=rss_feed\u0026feed=gvtxUiIf",
    "source": "https://feeds.simplecast.com/gvtxUiIf",
    "categories": null
  },
  {
    "id": "b100165b-6bf5-4853-a53d-81452be12f2f",
    "title": "Introducing .NET Aspire with Damian Edwards",
    "link": "https://www.hanselminutes.com",
    "description": ".NET Aspire has folks talking - but why? What is .NET Aspire and what does it me for the average ASP.NET developer like me? Is it a thing for Kubernetes? Is it just for .NET Devs? Scott sits down with Damian Edwards to get a sense of what .NET Aspire ahem aspires to do, and where it's heading.",
    "author": "Scott Hanselman",
    "published": "Thu, 4 Jul 2024 21:00:00 +0000",
    "image": "https://r.zen.ai/r/cdn.simplecast.com/audio/24832310-78fe-4898-91be-6db33696c4ba/episodes/34ec917b-1f52-4d24-85b5-fe9996cc8cf1/audio/4abd62c0-d21b-417b-bb77-0aed1fb6e700/default_tc.mp3?aid=rss_feed\u0026feed=gvtxUiIf",
    "source": "https://feeds.simplecast.com/gvtxUiIf",
    "categories": null
  },
  {
    "id": "aa9da0af-197f-4a08-81c3-ba04b5a4b9e2",
    "title": "DIY Insulin Pumps with Dr Martin de Bock",
    "link": "https://www.hanselminutes.com",
    "description": "Martin de Bock is a Pediatric Endocrinologist and Associate Professor at the University of Otago, Christchurch, New Zealand. In this episode it talks with Scott about the importance of access to low-cost and reliable technology to manage Type 1 Diabetes, like the design for an open source low cost insulin pump that he and his colleagues are championing. Can YOU (should you?) create a DIY insulin pump from plans on GitHub?https://github.com/UCBioengineering/open_source_insulin_pumphttps://pubmed.ncbi.nlm.nih.gov/32837953/https://cmrf.org.nz/story/dr-martin-de-bock/",
    "author": "Scott Hanselman",
    "published": "Thu, 27 Jun 2024 21:00:00 +0000",
    "image": "https://r.zen.ai/r/cdn.simplecast.com/audio/24832310-78fe-4898-91be-6db33696c4ba/episodes/072fbd70-4952-4c42-b686-d71f4d8c72e8/audio/6659de0a-a473-4d68-b674-6f017a0f4b30/default_tc.mp3?aid=rss_feed\u0026feed=gvtxUiIf",
    "source": "https://feeds.simplecast.com/gvtxUiIf",
    "categories": null
  },
  {
    "id": "ccd67dad-7cb0-43b4-b06f-70b80fea4fc3",
    "title": "Scott on DotNetRocks episode 1900 with Carl Franklin and Richard Campbell",
    "link": "https://www.hanselminutes.com",
    "description": "It's episode 1900! While at Build, Carl and Richard recorded a milestone episode with Scott Hanselman. Scott talks about his goals in the later stages of his career, the ideas and origins of all the podcasts, and what is important to him today. In the second half, Carl pulls out a quiz show for Scott with quotes from shows going back 20 years! Lots of great stories of different conferences, podcasts, and other events - and the things learned along the way. Thanks for listening!",
    "author": "Scott Hanselman",
    "published": "Thu, 20 Jun 2024 21:00:00 +0000",
    "image": "https://r.zen.ai/r/cdn.simplecast.com/audio/24832310-78fe-4898-91be-6db33696c4ba/episodes/c5e17aff-ba0a-4c01-9520-6c5d84b3acb4/audio/ec9aa942-03b1-419b-8e5e-8fb14561e6e5/default_tc.mp3?aid=rss_feed\u0026feed=gvtxUiIf",
    "source": "https://feeds.simplecast.com/gvtxUiIf",
    "categories": null
  },
  {
    "id": "d47d0557-ac9f-4852-a408-73541c82a086",
    "title": "Cross-platform UIs for all with Avalonia CEO Mike James",
    "link": "https://www.hanselminutes.com",
    "description": "Avalonia UI is an open-source UI framework for building stunning desktop, mobile, web and embedded applications using a .NET single codebase. Scott talks to Avalonia CEO Mike James about the how and why of Avalonia and why it's been so successful. We'll also learn about Avalonia's new \"XPF\" framework that allows you to take existing WPF applications to macOS and Linux in minutes!",
    "author": "Scott Hanselman",
    "published": "Thu, 13 Jun 2024 21:00:00 +0000",
    "image": "https://r.zen.ai/r/cdn.simplecast.com/audio/24832310-78fe-4898-91be-6db33696c4ba/episodes/845e9738-5f73-4604-b561-f94312075ed9/audio/8c523022-96d5-474f-9721-ddadd1efff57/default_tc.mp3?aid=rss_feed\u0026feed=gvtxUiIf",
    "source": "https://feeds.simplecast.com/gvtxUiIf",
    "categories": null
  },
  {
    "id": "db9fd41f-a025-4f01-979e-52ff32510cc7",
    "title": "Dr. Juan Gilbert in association with the ACM Bytecast",
    "link": "https://www.hanselminutes.com",
    "description": "In association with the ACM's Bytecast Podcast, this week Scott talks to Dr. Juan Gilbert. Dr Gilbert was recently awarded the  National Medal of Technology and Innovation for his work on inclusive open-source voting systems. Dr. Gilbert is the Andrew Banks Family Preeminence Endowed Professor and Chair of the Computer \u0026 Information Science \u0026 Engineering Department at the University of Florida where he leads the Computing for Social Good Lab.",
    "author": "Scott Hanselman",
    "published": "Thu, 6 Jun 2024 21:00:00 +0000",
    "image": "https://r.zen.ai/r/cdn.simplecast.com/audio/24832310-78fe-4898-91be-6db33696c4ba/episodes/329a98d2-e145-47bc-b3ed-5615d7ff7d05/audio/1b3c03b9-4431-4565-9c25-849374cebfb4/default_tc.mp3?aid=rss_feed\u0026feed=gvtxUiIf",
    "source": "https://feeds.simplecast.com/gvtxUiIf",
    "categories": null
  },
  {
    "id": "134122df-2265-492b-b6a9-a9a3e88fd78d",
    "title": "Making \"Tales of Kenzera: Zau\" with Abubakar Salim",
    "link": "https://www.hanselminutes.com",
    "description": "Abubakar Salim is an actor embedded in the video games industry - he voiced Bayek in Assassin’s Creed Origins, and he’s spent his whole life playing games. His new Metroidvania is called \"Tales of Kenzera: Zau\" and it's fantastic. The game is developed by Surgent Studios - a company Salim founded - alongside EA Originals. In this episode Abubakar chats with Scott about gaming, parents, culture, Afrofuturism, mythology, and much more.Watch the VIDEO of this podcast on YouTube!",
    "author": "Scott Hanselman",
    "published": "Thu, 30 May 2024 21:00:00 +0000",
    "image": "https://r.zen.ai/r/cdn.simplecast.com/audio/24832310-78fe-4898-91be-6db33696c4ba/episodes/4d04d30f-193c-4325-bf0a-d1ad0dced0bc/audio/498666c9-7dd0-46b9-8136-8449b612751f/default_tc.mp3?aid=rss_feed\u0026feed=gvtxUiIf",
    "source": "https://feeds.simplecast.com/gvtxUiIf",
    "categories": null
  },
  {
    "id": "a0407f4e-6e4d-4803-a35c-fe0cea26609a",
    "title": "OpenAI Developer Day 2024 (SF) Announces Real-Time API, Vision Fine-Tuning, and More",
    "link": "https://www.infoq.com/news/2024/10/openai-sf-dev-day/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
    "description": "On October 1, 2024, OpenAI SF DevDay unveiled innovative features, including a Real-Time API enabling instant voice interactions and function calling. Enhanced model distillation and vision fine-tuning empower developers to customize AI for diverse applications. Upcoming events in London and Singapore will further expand these capabilities. By Andrew Hoblitzell",
    "author": "Andrew Hoblitzell",
    "published": "Thu, 10 Oct 2024 23:01:00 GMT",
    "image": "https://res.infoq.com/news/2024/10/openai-sf-dev-day/en/headerimage/generatedHeaderImage-1728257761391.jpg",
    "source": "https://feed.infoq.com",
    "categories": [
      "Computer Vision",
      "Artificial Intelligence",
      "OpenAI",
      "API",
      "AI, ML \u0026 Data Engineering",
      "news"
    ]
  },
  {
    "id": "a6c4aef4-d4db-4030-94ab-65eb4fb12b9d",
    "title": "The Linux Kernel to Support Real-time Scheduling Out-of-the-Box",
    "link": "https://www.infoq.com/news/2024/10/linux-6-12-real-time/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
    "description": "Linux 6.12 will officially include support for real-time processing in its mainline thanks to a PR that enables PREEMPT_RT on all supported architectures. While aimed at applications requiring deterministic time guarantees, like avionics, robotics, automotive, and communications, it could bring improvements to user experience on the desktop, too. By Sergio De Simone",
    "author": "Sergio De Simone",
    "published": "Thu, 10 Oct 2024 16:00:00 GMT",
    "image": "https://res.infoq.com/news/2024/10/linux-6-12-real-time/en/headerimage/linux-6-12-real-time-1728574798424.jpeg",
    "source": "https://feed.infoq.com",
    "categories": [
      "Real Time",
      "Linux",
      "Embedded Software Dev",
      "Open Source",
      "Development",
      "news"
    ]
  },
  {
    "id": "b5d49810-8d5d-49a9-b199-d5441ea3fdb8",
    "title": "Presentation: 0 → 1, Shipping Threads in 5 Months",
    "link": "https://www.infoq.com/presentations/threads-meta/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
    "description": "Zahan Malkani shares how they built a microblogging service to compete with Twitter with a small team that shipped a new social network in a few months. By Zahan Malkani",
    "author": "Zahan Malkani",
    "published": "Thu, 10 Oct 2024 12:00:00 GMT",
    "image": "https://res.infoq.com/presentations/threads-meta/en/mediumimage/ZahanMalkani-medium-1723461991582.jpg",
    "source": "https://feed.infoq.com",
    "categories": [
      "Transcripts",
      "QCon London 2024",
      "Thread",
      "Case Study",
      "Facebook",
      "Architecture \u0026 Design",
      "presentation"
    ]
  },
  {
    "id": "91adb7eb-6ed4-4f16-aa25-b2ede32ad94c",
    "title": "Setting up a Data Mesh Organization",
    "link": "https://www.infoq.com/news/2024/10/data-mesh-organization/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
    "description": "A data mesh organization: producers, consumers, and the platform. According to Matthias Patzak, the mission of the platform team is to make the lives of the producer and consumers simple, efficient and stress free. Data must be discoverable and understandable, trustworthy, and shared securely and easily across the organization. By Ben Linders",
    "author": "Ben Linders",
    "published": "Thu, 10 Oct 2024 11:04:00 GMT",
    "image": "https://res.infoq.com/news/2024/10/data-mesh-organization/en/headerimage/generatedHeaderImage-1727936609389.jpg",
    "source": "https://feed.infoq.com",
    "categories": [
      "Platform Engineering",
      "Data Mesh",
      "Agile Manifesto",
      "Agile Conferences",
      "Data",
      "Agile",
      "Platforms",
      "Big Data",
      "Culture \u0026 Methods",
      "news"
    ]
  },
  {
    "id": "a13c560d-ca3e-4ac2-988f-5fbacf32e7ed",
    "title": "Hugging Face Upgrades Open LLM Leaderboard v2 for Enhanced AI Model Comparison",
    "link": "https://www.infoq.com/news/2024/10/open-llm-leaderboard-v2-launch/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
    "description": "Hugging Face has recently released Open LLM Leaderboard v2, an upgraded version of their benchmarking platform for large language models. Hugging Face created the Open LLM Leaderboard to provide a standardized evaluation setup for reference models, ensuring reproducible and comparable results. By Vinod Goje",
    "author": "Vinod Goje",
    "published": "Thu, 10 Oct 2024 09:45:00 GMT",
    "image": "https://res.infoq.com/news/2024/10/open-llm-leaderboard-v2-launch/en/headerimage/hugging-face-upgrades-header-1728473031223.jpg",
    "source": "https://feed.infoq.com",
    "categories": [
      "Benchmark",
      "Large language models",
      "Platforms",
      "Machine Learning",
      "Hugging Face",
      "AI, ML \u0026 Data Engineering",
      "news"
    ]
  },
  {
    "id": "56120d08-0f86-47d8-a94e-8403d77bf0e6",
    "title": "JFrog Integrates Runtime Security for Enhanced DevSecOps Platform",
    "link": "https://www.infoq.com/news/2024/10/jfrog-devsecops-platform/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
    "description": "JFrog has introduced JFrog Runtime to its suite of security capabilities, adding real-time vulnerability detection to its software supply chain platform. This update is aimed at developers and DevSecOps teams working with Kubernetes clusters and cloud-native applications. By Mohit Palriwal",
    "author": "Mohit Palriwal",
    "published": "Thu, 10 Oct 2024 09:05:00 GMT",
    "image": "https://res.infoq.com/news/2024/10/jfrog-devsecops-platform/en/headerimage/jfrog-integrates-runtime-header-1728462017852.jpg",
    "source": "https://feed.infoq.com",
    "categories": [
      "DevSecOps",
      "Security",
      "Kubernetes",
      "Cloud-Native",
      "Software Supply Chain",
      "DevOps",
      "news"
    ]
  },
  {
    "id": "5f9f334f-7938-4c26-be35-8681bd5765e8",
    "title": "Data Teams Survey: Lag in DataOps and Value Delivered",
    "link": "https://www.infoq.com/news/2024/10/data-teams-dataops-lag/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
    "description": "We report on Jesse Anderson's 2024 Data Teams Survey which showed a lag in DataOps capabilities, slow LLM adoption, and a concerning decline in perceived value creation by data teams. It called out the importance of teams spread with data science, engineering, and operations capabilities. We also cover Petr Janda's recent podcast on the need for more engineering rigour for parity with other teams. By Rafiq Gemmail",
    "author": "Rafiq Gemmail",
    "published": "Wed, 09 Oct 2024 22:10:00 GMT",
    "image": "https://res.infoq.com/news/2024/10/data-teams-dataops-lag/en/headerimage/generatedHeaderImage-1728170901199.jpg",
    "source": "https://feed.infoq.com",
    "categories": [
      "Operations management",
      "Team Performance",
      "Software Engineering",
      "Data",
      "Culture \u0026 Methods",
      "AI, ML \u0026 Data Engineering",
      "DevOps",
      "news"
    ]
  },
  {
    "id": "6b1770ad-2d29-464a-a04a-b1913358d5c7",
    "title": "UNO Platform 5.4 Improves App Performance",
    "link": "https://www.infoq.com/news/2024/10/uno-platform-54-performance/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
    "description": "The Uno Platform has unveiled its latest update, version 5.4, packed with over 290 new features and enhancements. As part of this update, the team has prioritised addressing concerns raised by enterprise clients, alongside improving the overall performance of applications built on the Uno Platform. By Edin Kapić",
    "author": "Edin Kapić",
    "published": "Wed, 09 Oct 2024 12:00:00 GMT",
    "image": "https://res.infoq.com/news/2024/10/uno-platform-54-performance/en/headerimage/header-1670341892423-1728209041585.jpg",
    "source": "https://feed.infoq.com",
    "categories": [
      ".NET",
      "Uno Platform",
      "Development",
      "news"
    ]
  },
  {
    "id": "4e27086e-ce7d-4423-a540-12d7b1a09e08",
    "title": "Podcast: Generally AI - Season 2 - Episode 2: Fantastic Algorithms and Where to Find Them",
    "link": "https://www.infoq.com/podcasts/ai-fantastic-algorithms/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
    "description": "Roland Meertens and Anthony Alford discuss their favorite algorithms, starting with the etymology of the word \"algorithm\". Roland introduces the concept of probabilistic counting, focusing on the HyperLogLog algorithm, which can be used to estimate the count of unique items. Meertens shares his own personal algorithm for estimating how many people he talks to at conferences. By Anthony Alford, Roland Meertens",
    "author": "Anthony Alford, Roland Meertens",
    "published": "Wed, 09 Oct 2024 09:00:00 GMT",
    "image": "https://res.infoq.com/podcasts/ai-fantastic-algorithms/en/smallimage/generally-ai-logo-small-100x100-1727697034829.jpg",
    "source": "https://feed.infoq.com",
    "categories": [
      "Algorithms",
      "Generally AI Podcast",
      "The InfoQ Podcast",
      "Artificial Intelligence",
      "AI, ML \u0026 Data Engineering",
      "podcast"
    ]
  },
  {
    "id": "64900314-57b6-4da0-b4ad-70f023a2a2b4",
    "title": "MongoDB 8.0 Now Available with Performance Gains and Enhanced Sharding",
    "link": "https://www.infoq.com/news/2024/10/mongodb-80-performances/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
    "description": "MongoDB has announced the general availability of MongoDB 8.0, introducing significant performance enhancements and new features. Highlights include embedded sharding configuration servers, expanded support for queryable encryption, and the capability to move collections across shards without requiring a shard key. By Renato Losio",
    "author": "Renato Losio",
    "published": "Wed, 09 Oct 2024 08:05:00 GMT",
    "image": "https://res.infoq.com/news/2024/10/mongodb-80-performances/en/headerimage/generatedHeaderImage-1728374971272.jpg",
    "source": "https://feed.infoq.com",
    "categories": [
      "Sharding",
      "Database",
      "MongoDB",
      "NoSQL",
      "Development",
      "AI, ML \u0026 Data Engineering",
      "news"
    ]
  },
  {
    "id": "51907184-3164-4834-84d4-cb729ab1565e",
    "title": "Breaking Down Python 3.13’s Latest Features",
    "link": "https://www.infoq.com/news/2024/10/python-313-latest-features/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
    "description": "Python 3.13 introduces a revamped interactive interpreter with streamlined features like multi-line editing, experimental free-threaded mode, alongside the introduction of a Just-in-Time (JIT) compiler. Lastly, the update removes several outdated modules and introduces random function for the CLI By Shaaf Syed",
    "author": "Shaaf Syed",
    "published": "Wed, 09 Oct 2024 08:00:00 GMT",
    "image": "https://res.infoq.com/news/2024/10/python-313-latest-features/en/headerimage/generatedHeaderImage-1728392400737.jpg",
    "source": "https://feed.infoq.com",
    "categories": [
      "Python",
      "Development",
      "news"
    ]
  },
  {
    "id": "678b3e05-2d5f-4bb9-99e7-12686a022380",
    "title": "PayPal Adds GenAI Support with LLMs to Its Cosmos.AI MLOps Platform",
    "link": "https://www.infoq.com/news/2024/10/paypal-cosmosai-llm-genai/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
    "description": "PayPal extended its MLOps platform Cosmos.AI to support the development of generative AI applications using large language models (LLMs). The company incorporated support for vendor, open-source, and self-tuned LLMs and provided capabilities around retrieval-augmented generation (RAG), semantic caching, prompt management, orchestration, and AI application hosting. By Rafal Gancarz",
    "author": "Rafal Gancarz",
    "published": "Wed, 09 Oct 2024 07:00:00 GMT",
    "image": "https://res.infoq.com/news/2024/10/paypal-cosmosai-llm-genai/en/headerimage/generatedHeaderImage-1728375076934.jpg",
    "source": "https://feed.infoq.com",
    "categories": [
      "Generative AI",
      "AIOps",
      "Large language models",
      "MLOps",
      "AI Architecture",
      "Architecture \u0026 Design",
      "AI, ML \u0026 Data Engineering",
      "news"
    ]
  },
  {
    "id": "4035986b-f458-4f21-922f-778b86c6b57a",
    "title": "Presentation: Turbocharged Development: The Speed and Efficiency of WebAssembly",
    "link": "https://www.infoq.com/presentations/wasm-serverless/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
    "description": "Danielle Lancashire discusses why Wasm is the most cross-platform unit of compute for serverless applications, and how that translates to efficiency at scale. By Danielle Lancashire",
    "author": "Danielle Lancashire",
    "published": "Tue, 08 Oct 2024 14:20:00 GMT",
    "image": "https://res.infoq.com/presentations/wasm-serverless/en/mediumimage/DanielleLancashire-medium-1723461032382.jpg",
    "source": "https://feed.infoq.com",
    "categories": [
      "Transcripts",
      "QCon London 2024",
      "Serverless",
      "Scalability",
      "Web Development",
      "WebAssembly",
      "Development",
      "presentation"
    ]
  },
  {
    "id": "61d267f8-c85f-4d2f-8790-ca76e6280466",
    "title": "University of Chinese Academy of Sciences Open-Sources Multimodal LLM LLaMA-Omni",
    "link": "https://www.infoq.com/news/2024/10/llama-omni/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
    "description": "Researchers at the University of Chinese Academy of Sciences (UCAS) recently open-sourced LLaMA-Omni, an LLM that can operate on both speech and text data. LLaMA-Omni is based on Meta's Llama-3.1-8B-Instruct LLM and outperforms similar baseline models while requiring less training data and compute. By Anthony Alford",
    "author": "Anthony Alford",
    "published": "Tue, 08 Oct 2024 13:00:00 GMT",
    "image": "https://res.infoq.com/news/2024/10/llama-omni/en/headerimage/generatedHeaderImage-1727531829012.jpg",
    "source": "https://feed.infoq.com",
    "categories": [
      "Generative AI",
      "Large language models",
      "AI, ML \u0026 Data Engineering",
      "news"
    ]
  },
  {
    "id": "b2edef91-82e6-46b7-91de-730b13c55332",
    "title": "Meta Unveils Movie Gen, a New AI Model for Video Generation",
    "link": "https://www.infoq.com/news/2024/10/meta-ai-movie-gen/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
    "description": "Meta has announced Movie Gen, a new AI model designed to create high-quality 1080p videos with synchronized audio. The system enables instruction-based video editing and allows for personalized content generation using user-supplied images. By Daniel Dominguez",
    "author": "Daniel Dominguez",
    "published": "Tue, 08 Oct 2024 09:16:00 GMT",
    "image": "https://res.infoq.com/news/2024/10/meta-ai-movie-gen/en/headerimage/generatedHeaderImage-1728314582221.jpg",
    "source": "https://feed.infoq.com",
    "categories": [
      "Generative AI",
      "Large language models",
      "Artificial Intelligence",
      "OpenAI",
      "Facebook",
      "AI, ML \u0026 Data Engineering",
      "news"
    ]
  },
  {
    "id": "25d1e5ee-d6d3-4fb2-912f-e1c85471625b",
    "title": "The Instagram Engineering Blog has a new location",
    "link": "https://instagram-engineering.com/the-instagram-engineering-blog-has-a-new-location-85de9ab8d90f?source=rss----37dc2a3034f2---4",
    "description": "",
    "author": "Ryan Peterman",
    "published": "Tue, 12 Jul 2022 17:00:22 GMT",
    "image": "https://medium.com/_/stat?event=post.clientViewed\u0026referrerSource=full_rss\u0026postId=85de9ab8d90f",
    "source": "https://instagram-engineering.com/feed/",
    "categories": [
      "software-engineering",
      "instagram",
      "computer-science",
      "engineering"
    ]
  },
  {
    "id": "11e9766a-6727-4aac-bc95-02d38a727947",
    "title": "Five things I learned about working on content quality at Instagram",
    "link": "https://instagram-engineering.com/five-things-i-learned-about-working-on-content-quality-at-instagram-5031b1342bea?source=rss----37dc2a3034f2---4",
    "description": "",
    "author": "Brunno Attorre",
    "published": "Sat, 25 Jan 2020 01:13:36 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*M_vyOynSyXIXtH4V8kVMGg.png",
    "source": "https://instagram-engineering.com/feed/",
    "categories": [
      "data",
      "machine-learning",
      "instagram"
    ]
  },
  {
    "id": "43033d89-f2e3-4a07-8fcf-bb0ac55db100",
    "title": "Instagram Data Saver Mode",
    "link": "https://instagram-engineering.com/instagram-data-saver-mode-ffb01fd5a6bd?source=rss----37dc2a3034f2---4",
    "description": "",
    "author": "Cristina Acha",
    "published": "Fri, 13 Dec 2019 18:09:34 GMT",
    "image": "https://cdn-images-1.medium.com/max/912/1*DFLQYzOGL6yMpXmN28iP7g.png",
    "source": "https://instagram-engineering.com/feed/",
    "categories": [
      "data",
      "android",
      "instagram",
      "tech"
    ]
  },
  {
    "id": "1e2c2fe1-e466-4433-8d11-043b5ce913b3",
    "title": "Powered by AI: Instagram’s Explore recommender system",
    "link": "https://instagram-engineering.com/powered-by-ai-instagrams-explore-recommender-system-7ca901d2a882?source=rss----37dc2a3034f2---4",
    "description": "",
    "author": "Ivan Medvedev",
    "published": "Tue, 26 Nov 2019 13:48:39 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/0*L8XlYDF2i6ziTrH4",
    "source": "https://instagram-engineering.com/feed/",
    "categories": [
      "machine-learning",
      "recommender-systems",
      "recommendations"
    ]
  },
  {
    "id": "c8768e2b-43c8-4154-ae9c-1ceedda22a3c",
    "title": "10 Questions with Shupin Mao, Well-being tech lead",
    "link": "https://instagram-engineering.com/10-questions-with-shupin-mao-well-being-tech-lead-3b19f19b168d?source=rss----37dc2a3034f2---4",
    "description": "",
    "author": "shelly",
    "published": "Fri, 08 Nov 2019 16:24:40 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*ZQwaKQcTLRoYO7Pa57oXrg.jpeg",
    "source": "https://instagram-engineering.com/feed/",
    "categories": [
      "team",
      "instagram",
      "career-advice",
      "careers",
      "startup"
    ]
  },
  {
    "id": "bb59df00-fbf9-46a8-890f-421b4eda92c6",
    "title": "Making instagram.com faster: Code size and execution optimizations (Part 4)",
    "link": "https://instagram-engineering.com/making-instagram-com-faster-code-size-and-execution-optimizations-part-4-57668be796a8?source=rss----37dc2a3034f2---4",
    "description": "",
    "author": "Glenn Conner",
    "published": "Fri, 01 Nov 2019 13:03:12 GMT",
    "image": "https://cdn-images-1.medium.com/max/627/1*HDLCFPZCIfOpVWMSYz4HOg.png",
    "source": "https://instagram-engineering.com/feed/",
    "categories": [
      "instagram",
      "react-native",
      "web-performance",
      "es2017",
      "javascript"
    ]
  },
  {
    "id": "c5a138f4-51ab-43d5-ba0f-a8126beaf2f2",
    "title": "Python at Scale: Strict Modules",
    "link": "https://instagram-engineering.com/python-at-scale-strict-modules-c0bb9245c834?source=rss----37dc2a3034f2---4",
    "description": "",
    "author": "Carl Meyer",
    "published": "Thu, 17 Oct 2019 15:01:07 GMT",
    "image": "https://medium.com/_/stat?event=post.clientViewed\u0026referrerSource=full_rss\u0026postId=c0bb9245c834",
    "source": "https://instagram-engineering.com/feed/",
    "categories": [
      "developement-velocity",
      "development",
      "modules",
      "runtime",
      "python"
    ]
  },
  {
    "id": "9286570c-52bf-4b36-898d-441d85c5baeb",
    "title": "Making instagram.com faster: Part 3 — cache first",
    "link": "https://instagram-engineering.com/making-instagram-com-faster-part-3-cache-first-6f3f130b9669?source=rss----37dc2a3034f2---4",
    "description": "",
    "author": "Glenn Conner",
    "published": "Fri, 11 Oct 2019 00:04:26 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*yw3otH31zNaPYawMbmbM7g.png",
    "source": "https://instagram-engineering.com/feed/",
    "categories": [
      "instagram",
      "javascript",
      "redux",
      "react",
      "web-performance"
    ]
  },
  {
    "id": "7883547e-7916-4fa0-941e-fdf3455e1a19",
    "title": "Implementing Dark Mode in iOS 13",
    "link": "https://instagram-engineering.com/instagram-darkmode-58802b43c0f2?source=rss----37dc2a3034f2---4",
    "description": "",
    "author": "Tim Johnsen",
    "published": "Tue, 08 Oct 2019 16:30:51 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*d8-4IYqquJ0yGIKZ3bjzWg.png",
    "source": "https://instagram-engineering.com/feed/",
    "categories": [
      "engineering",
      "dark-mode",
      "instagram",
      "ios",
      "ios-13"
    ]
  },
  {
    "id": "1abb69d4-2452-4aaa-bd19-5bda81f86ff4",
    "title": "Interview with Tamar Shapiro, Instagram’s Head of Analytics",
    "link": "https://instagram-engineering.com/interview-with-tamar-shapiro-instagrams-head-of-analytics-c81946d02b90?source=rss----37dc2a3034f2---4",
    "description": "",
    "author": "Instagram Engineering",
    "published": "Tue, 24 Sep 2019 15:51:03 GMT",
    "image": "https://cdn-images-1.medium.com/max/960/1*XnYj-RwRD7bYSrXvb41pGQ.jpeg",
    "source": "https://instagram-engineering.com/feed/",
    "categories": [
      "analytics",
      "professional-development",
      "team",
      "instagram",
      "data-science"
    ]
  },
  {
    "id": "e3de7638-4232-4f98-95a1-87c69afa911f",
    "title": "Join Us for JetBrains Plugin Developer Conf 2024",
    "link": "https://blog.jetbrains.com/platform/2024/10/join-us-for-jetbrains-plugin-developer-conf-2024/",
    "description": "Hey everyone! We’re introducing JetBrains Plugin Developer Conf 2024, the first-ever virtual event dedicated to plugin development for JetBrains products! We invite you to join us on Thursday, November 7 for a full day of engaging sessions and insightful discussions.  This conference brings together JetBrains experts and plugin developers to explore topics such as developing […]",
    "author": "Elena Kerpeleva",
    "published": "Thu, 10 Oct 2024 17:07:31 +0000",
    "image": "https://blog.jetbrains.com/wp-content/uploads/2024/10/Social_Share_Blog_1280x720-1-2.png",
    "source": "https://blog.jetbrains.com/feed",
    "categories": [
      "plugin-development",
      "events",
      "livestreams",
      "marketplace",
      "news",
      "plugins",
      "jetbrains-marketplace"
    ]
  },
  {
    "id": "36b48387-d668-424f-b5ae-6d5aaab93ce4",
    "title": "Ktor 3.0 Is Now Available With New Features and Improved Performance",
    "link": "https://blog.jetbrains.com/kotlin/2024/10/ktor-3-0/",
    "description": "This new version uses Kotlin 2.0 and switches to kotlinx-io, making Ktor more up to date and better connected with other Kotlin tools. Ktor 3.0 works faster and gives you more options for building client-server applications. If you’re new to Ktor or need a reminder about how it works, our recent blog post, Ktor 101: […]",
    "author": "Anton Arhipov",
    "published": "Thu, 10 Oct 2024 15:18:14 +0000",
    "image": "https://blog.jetbrains.com/wp-content/uploads/2024/10/ktor-3-io-benchmarks.png",
    "source": "https://blog.jetbrains.com/feed",
    "categories": [
      "ktor",
      "news",
      "release"
    ]
  },
  {
    "id": "3ed9bfa7-9bd6-45ff-8ce4-d2d1cfed9dc9",
    "title": "CLion 2024.3 EAP 4: New Embedded Development and Debugging Features",
    "link": "https://blog.jetbrains.com/clion/2024/10/clion-2024-3-eap-4/",
    "description": "The new CLion 2024.3 EAP build, 243.19420.28, is out. You can download it for free from the link below, via the Toolbox App, or as a snap package if you’re using Ubuntu. DOWNLOAD CLION 2024.3 EAP This build includes new features for embedded development, such as debug servers, the ability to edit peripheral register values, […]",
    "author": "Oleg Zinovyev",
    "published": "Thu, 10 Oct 2024 15:17:36 +0000",
    "image": "https://blog.jetbrains.com/wp-content/uploads/2024/10/image-12.png",
    "source": "https://blog.jetbrains.com/feed",
    "categories": [
      "eap",
      "news",
      "debugger",
      "embedded",
      "gdb",
      "gdbserver",
      "j-link",
      "segger",
      "zephyr-west"
    ]
  },
  {
    "id": "957a3194-1f20-40a5-b8bd-5f0ec1b06a5e",
    "title": "Online Coding Workshop for the C++ Basics Course",
    "link": "https://blog.jetbrains.com/education/2024/10/10/online-coding-workshop-for-the-c-basics-course/",
    "description": "Join us on Tuesday, October 22, 2024, at 3:00 pm UTC (check other timezones) for our free online workshop for the C++ Basics course. If you’ve wanted to learn C++ or have any questions about this language, you’ve come to the right place! C++ is a powerful, general-purpose programming language used to build everything from […]",
    "author": "Regina Muradova",
    "published": "Thu, 10 Oct 2024 12:34:41 +0000",
    "image": "https://blog.jetbrains.com/wp-content/uploads/2024/10/Featured_Blog_1280x720-1-1.png",
    "source": "https://blog.jetbrains.com/feed",
    "categories": [
      "jetbrains-academy",
      "livestream",
      "cpp",
      "jetbrainsacademy-2",
      "learn-programming",
      "workshop"
    ]
  },
  {
    "id": "bc9cd325-46fb-4cd9-9e89-29610245c5ee",
    "title": "How I do Django APIs in PyCharm",
    "link": "https://blog.jetbrains.com/pycharm/2024/10/how-i-do-django-apis-in-pycharm/",
    "description": "I learn so much from watching conference talks, especially live, when I’m vibing with the crowd. But sometimes I watch and think: “Wow, I wish I could show you how awesome that would be in PyCharm.” That just happened. Here’s the explainer, with a little special something at the end. Hello, DjangoConf I recently attended […]",
    "author": "Paul Everitt",
    "published": "Thu, 10 Oct 2024 11:21:47 +0000",
    "image": "https://blog.jetbrains.com/wp-content/uploads/2024/10/httpclient.png",
    "source": "https://blog.jetbrains.com/feed",
    "categories": [
      "all-things-web",
      "pycharm",
      "web-development",
      "api",
      "debugger",
      "django",
      "live-preview"
    ]
  },
  {
    "id": "5a4aae1f-8cdb-4d61-8f5b-4bddff9daf7f",
    "title": "IntelliJ IDEA 2024.3 EAP 5: Extended Support for Kotlin Features, Updates to Find in Files, Option to Disable Pre-Commit Checks, and More",
    "link": "https://blog.jetbrains.com/idea/2024/10/intellij-idea-2024-3-eap-5/",
    "description": "The IntelliJ IDEA 2024.3 EAP 5 is here!  You can now download this version from our website, update directly from within the IDE, use the free Toolbox App, or install it via snap packages for Ubuntu.  Download IntelliJ IDEA 2024.3 EAP 5 If you haven’t seen our earlier overviews of the latest features, browse through […]",
    "author": "Maria Kosukhina",
    "published": "Wed, 09 Oct 2024 17:01:13 +0000",
    "image": "https://lh7-rt.googleusercontent.com/docsz/AD_4nXeHMchDQ--rSh7-aECYUhZBeNdbC9pzqkaFga4kROjvAjgwsPUWbktj78BR2TwGB7L5OqBq_Vh4GjogJ--uK3sRQOvTi01Sz633vEuoPUaiMbcYCr7GEJsXikF2ovWWIpdy3E4LT2kSeWskZgyzl80Hnbc?key=co0WEVUoDMEfFrV387cwVw",
    "source": "https://blog.jetbrains.com/feed",
    "categories": [
      "eap",
      "2024-3-eap",
      "intellij-idea",
      "intellij-idea-2024-3",
      "intellij-idea-2024-3-eap"
    ]
  },
  {
    "id": "cd901b8c-2224-45d6-b48d-fe08da38500b",
    "title": "A Joint Bugfix Release for Five Recent MPS Versions Is Out",
    "link": "https://blog.jetbrains.com/mps/2024/10/mps_joint_bug_fixreleases/",
    "description": "We’re releasing updates for MPS 2022.2, 2022.3, 2023.2, 2023.3, and 2024.1, with numerous fixes included. In general, it’s safe to assume that all features and bug-fixes from the releases of older MPS versions have been included in the newer ones. DOWNLOAD MPS 2024.1.1 There are two new features worth mentioning separately: Filter commented out nodes […]",
    "author": "Vaclav Pech",
    "published": "Wed, 09 Oct 2024 11:43:43 +0000",
    "image": "",
    "source": "https://blog.jetbrains.com/feed",
    "categories": [
      "releases",
      "release"
    ]
  },
  {
    "id": "cc0e60d2-8b26-4307-98c8-47c4d20e0b3c",
    "title": "Fleet 1.41 Is Here With New Bundled Keymaps, Unlimited Splits, Improved Typing Latency and Editor Responsiveness, and Many More Enhancements",
    "link": "https://blog.jetbrains.com/fleet/2024/10/fleet-1-41-is-here-with-new-bundled-keymaps-unlimited-splits-improved-typing-latency-and-editor-responsiveness-and-many-more-enhancements/",
    "description": "Fleet 1.41 is now available! Explore our latest release, which introduces many new features designed to improve your development experience. You can update to this version using the Toolbox App. Let’s take a closer look at the highlights. Download Fleet 1.41 New features Improvements Bug fixes We’ve also fixed several bugs: See the full release […]",
    "author": "Daniela Bentrup",
    "published": "Wed, 09 Oct 2024 11:32:02 +0000",
    "image": "https://blog.jetbrains.com/wp-content/uploads/2024/10/keymaps.png",
    "source": "https://blog.jetbrains.com/feed",
    "categories": [
      "news",
      "releases"
    ]
  },
  {
    "id": "5906923c-15a1-4797-becc-ce13b3c0d35a",
    "title": "Qodana 2024.2 Release: Enhanced Android Linter, Hard-coded Password Detection, and More",
    "link": "https://blog.jetbrains.com/qodana/2024/10/qodana-2024-2-release/",
    "description": "Get ready for new features and improvements with our latest Qodana 2024.2 release! This update introduces major enhancements that boost security, extend compatibility, and provide more convenience for development teams looking to increase code quality. Here’s what’s new: View Qodana 2024.2 Documentation Hardcoded password detection Hardcoded passwords can be a critical security issue because, when […]",
    "author": "Kerry Beetge",
    "published": "Wed, 09 Oct 2024 10:06:51 +0000",
    "image": "https://blog.jetbrains.com/wp-content/uploads/2024/09/Untitled-9.png",
    "source": "https://blog.jetbrains.com/feed",
    "categories": [
      "news",
      "qodana",
      "code-analysis",
      "code-quality",
      "quality-gates"
    ]
  },
  {
    "id": "58bfdc08-6e5d-4a40-ae24-e7814213768c",
    "title": "TeamCity Pipelines Is Now Out of Beta",
    "link": "https://blog.jetbrains.com/teamcity/2024/10/teamcity-pipelines-out-of-beta/",
    "description": "In March 2024, we announced the Beta release of TeamCity Pipelines, a new approach to CI/CD that offers blazing-fast pipelines to optimize your development flow. After six months of fine-tuning, adding features, and gathering feedback, we’re excited to announce that TeamCity Pipelines is officially going GA (General Availability) 🎉 This is a major milestone for […]",
    "author": "Olga Bedrina",
    "published": "Wed, 09 Oct 2024 09:40:59 +0000",
    "image": "https://blog.jetbrains.com/wp-content/uploads/2024/10/YAML-autocomplete_1300_optimized.gif",
    "source": "https://blog.jetbrains.com/feed",
    "categories": [
      "new-products",
      "news",
      "teamcity-2",
      "newsletter",
      "release",
      "teamcity-pipelines-pulse"
    ]
  },
  {
    "id": "70b079e8-cf73-4937-9a88-f7d62ba729da",
    "title": "Where To Get Data for Your Data Science Projects",
    "link": "https://blog.jetbrains.com/pycharm/2024/10/how-to-get-data/",
    "description": "Whether you’re starting a new project or expanding an existing one, as a data scientist, you’re always on the lookout for new material to explore. Knowing where to get data for data science projects can be challenging, and finding “good data” can be even more difficult. In this article, we’ll look at what makes “good […]",
    "author": "Helen Scott",
    "published": "Wed, 09 Oct 2024 09:00:00 +0000",
    "image": "",
    "source": "https://blog.jetbrains.com/feed",
    "categories": [
      "data",
      "data-science",
      "education",
      "how-tos",
      "python",
      "dataset",
      "datasets"
    ]
  },
  {
    "id": "90e09885-ef9e-4635-b0d1-920f6fa274ae",
    "title": "GitHub Stars Join the JetBrains Developer Recognition Program 🌟",
    "link": "https://blog.jetbrains.com/blog/2024/10/08/github-stars-join-the-jetbrains-developer-recognition-program/",
    "description": "GitHub is the world’s leading AI-powered platform for developers who share their code, work together, and build amazing things. But out of the more than 100 million developers that call GitHub home, there are a few exceptional talents and technical experts who go above and beyond in helping others in the developer space – the […]",
    "author": "Marina Sergienko",
    "published": "Tue, 08 Oct 2024 12:43:51 +0000",
    "image": "https://blog.jetbrains.com/wp-content/uploads/2024/10/Blog_1280x720.png",
    "source": "https://blog.jetbrains.com/feed",
    "categories": [
      "community-support",
      "developer-recognition-program",
      "github-stars",
      "news",
      "news-company"
    ]
  },
  {
    "id": "98bb698a-84a3-4f29-bcb2-df70abc1f5c0",
    "title": "Progress on the Block Protocol",
    "link": "https://www.joelonsoftware.com/2022/12/19/progress-on-the-block-protocol/",
    "description": "Since the 1990s, the web has been a publishing place for human-readable documents. Documents published on the web are in HTML. HTML has a little bit of… Read more \"Progress on the Block Protocol\"",
    "author": "Joel Spolsky",
    "published": "Mon, 19 Dec 2022 13:01:40 +0000",
    "image": "https://i0.wp.com/www.joelonsoftware.com/wp-content/uploads/2022/12/IMG_0203.webp?resize=730%2C730\u0026ssl=1",
    "source": "https://www.joelonsoftware.com/feed/",
    "categories": [
      "News"
    ]
  },
  {
    "id": "bb377feb-2186-4224-acd6-8ca394133ed2",
    "title": "Making the web better. With blocks!",
    "link": "https://www.joelonsoftware.com/2022/01/27/making-the-web-better-with-blocks/",
    "description": "You’ve probably seen web editors based on the idea of blocks. I’m typing this in WordPress, which has a little + button that brings up a long… Read more \"Making the web better. With blocks!\"",
    "author": "Joel Spolsky",
    "published": "Thu, 27 Jan 2022 17:14:00 +0000",
    "image": "https://i0.wp.com/www.joelonsoftware.com/wp-content/uploads/2022/01/wordpressblocks.png?resize=260%2C573\u0026ssl=1",
    "source": "https://www.joelonsoftware.com/feed/",
    "categories": [
      "News"
    ]
  },
  {
    "id": "8478db1d-07a5-4412-92ab-138ae2000452",
    "title": "Kinda a big announcement",
    "link": "https://www.joelonsoftware.com/2021/06/02/kinda-a-big-announcement/",
    "description": "The other day I was talking to a young developer working on a code base with tons of COM code, and I told him that even before… Read more \"Kinda a big announcement\"",
    "author": "Joel Spolsky",
    "published": "Wed, 02 Jun 2021 16:36:19 +0000",
    "image": "https://www.joelonsoftware.com/wp-content/uploads/2021/06/63017985094__5783FDD0-E895-4A7F-BB5A-A1CD6B6C9DCF.mov",
    "source": "https://www.joelonsoftware.com/feed/",
    "categories": [
      "News"
    ]
  },
  {
    "id": "01e15205-b9b5-4d26-9b81-c9be66b2dc40",
    "title": "HASH: a free, online platform for modeling the world",
    "link": "https://www.joelonsoftware.com/2020/06/18/hash-a-free-online-platform-for-modeling-the-world/",
    "description": "Sometimes simulating complex systems is the best way to understand them. Read more \"HASH: a free, online platform for modeling the world\"",
    "author": "Joel Spolsky",
    "published": "Thu, 18 Jun 2020 14:12:25 +0000",
    "image": "https://i0.wp.com/www.joelonsoftware.com/wp-content/uploads/2020/06/5ec6e31a68c106c99a6c6836.gif?resize=730%2C512\u0026ssl=1",
    "source": "https://www.joelonsoftware.com/feed/",
    "categories": [
      "News"
    ]
  },
  {
    "id": "9490926b-fc11-4977-bd22-7524ada4a326",
    "title": "So, how’s that retirement thing going, anyway?",
    "link": "https://www.joelonsoftware.com/2019/12/05/so-hows-that-retirement-thing-going-anyway/",
    "description": "For the last couple of months, Prashanth Chandrasekar has been getting settled in as the new CEO of Stack Overflow. I’m still going on some customer calls… Read more \"So, how’s that retirement thing going, anyway?\"",
    "author": "Joel Spolsky",
    "published": "Thu, 05 Dec 2019 22:51:39 +0000",
    "image": "https://i0.wp.com/www.joelonsoftware.com/wp-content/uploads/2019/12/IMG_9590-scaled.jpg?fit=730%2C548\u0026ssl=1",
    "source": "https://www.joelonsoftware.com/feed/",
    "categories": [
      "News"
    ]
  },
  {
    "id": "03787b04-8fbf-4375-85e7-12473a37b36b",
    "title": "Welcome, Prashanth!",
    "link": "https://www.joelonsoftware.com/2019/09/24/announcing-stack-overflows-new-ceo/",
    "description": "Last March, I shared that we were starting to look for a new CEO for Stack Overflow. We were looking for that rare combination of someone who… Read more \"Welcome, Prashanth!\"",
    "author": "Joel Spolsky",
    "published": "Tue, 24 Sep 2019 14:00:17 +0000",
    "image": "",
    "source": "https://www.joelonsoftware.com/feed/",
    "categories": [
      "News"
    ]
  },
  {
    "id": "c15179bc-398e-4f27-aba0-16f985a7b6b6",
    "title": "The next CEO of Stack Overflow",
    "link": "https://www.joelonsoftware.com/2019/03/28/the-next-ceo-of-stack-overflow/",
    "description": "We’re looking for a new CEO for Stack Overflow. I’m stepping out of the day-to-day and up to the role of Chairman of the Board. Read more \"The next CEO of Stack Overflow\"",
    "author": "Joel Spolsky",
    "published": "Thu, 28 Mar 2019 14:00:53 +0000",
    "image": "https://i0.wp.com/www.joelonsoftware.com/wp-content/uploads/2019/03/IMG_9111.jpg?fit=730%2C548\u0026ssl=1",
    "source": "https://www.joelonsoftware.com/feed/",
    "categories": [
      "Stack Overflow",
      "News"
    ]
  },
  {
    "id": "4480b403-6fb8-4bb8-a5ab-c122e61ae127",
    "title": "Announcing Stack Overflow for Teams",
    "link": "https://www.joelonsoftware.com/2018/05/03/announcing-stack-overflow-for-teams/",
    "description": "New product: Stack Overflow for Teams lets you direct questions to members of your own team, company, or organization. Read more \"Announcing Stack Overflow for Teams\"",
    "author": "Joel Spolsky",
    "published": "Thu, 03 May 2018 12:58:25 +0000",
    "image": "https://i0.wp.com/www.joelonsoftware.com/wp-content/uploads/2018/05/Helicopters.png?resize=730%2C255\u0026ssl=1",
    "source": "https://www.joelonsoftware.com/feed/",
    "categories": [
      "Stack Overflow",
      "News"
    ]
  },
  {
    "id": "5073a9e4-b5ed-47db-ae47-ea366bf45320",
    "title": "Strange and maddening rules",
    "link": "https://www.joelonsoftware.com/2018/04/23/strange-and-maddening-rules/",
    "description": "There's this popular idea among developers that when you face a problem with code, you should get out a rubber duck and explain, to the duck, exactly how your code was supposed to work. Read more \"Strange and maddening rules\"",
    "author": "Joel Spolsky",
    "published": "Mon, 23 Apr 2018 14:42:45 +0000",
    "image": "https://upload.wikimedia.org/wikipedia/en/e/ef/StackExchange_Rubber_Duck_Avatar_April_Fools_2018.png",
    "source": "https://www.joelonsoftware.com/feed/",
    "categories": [
      "News"
    ]
  },
  {
    "id": "f5f3527a-4549-40af-bace-41ead1e9e940",
    "title": "A Dusting of Gamification",
    "link": "https://www.joelonsoftware.com/2018/04/13/gamification/",
    "description": "I had to think for a minute to realize that Stack Overflow has “gamification\" too. Not a ton. Maybe a dusting of gamification, most of it around reputation. Read more \"A Dusting of Gamification\"",
    "author": "Joel Spolsky",
    "published": "Fri, 13 Apr 2018 13:40:21 +0000",
    "image": "https://i0.wp.com/www.joelonsoftware.com/wp-content/uploads/2018/04/2018-01-09-12.54.00.jpg?resize=500%2C667\u0026ssl=1",
    "source": "https://www.joelonsoftware.com/feed/",
    "categories": [
      "News"
    ]
  },
  {
    "id": "8fdd8650-f971-4740-92b3-cac62b0c9078",
    "title": "Interviewed by Book Overflow podcast on Refactoring",
    "link": "https://www.youtube.com/watch?v=CjCJ76oZXTE",
    "description": "",
    "author": "",
    "published": "2024-10-04T09:16:00+02:00",
    "image": "",
    "source": "https://martinfowler.com/feed.atom",
    "categories": null
  },
  {
    "id": "3a0de0d0-9c3b-45ef-9c52-054057c855e3",
    "title": "Using GenAI to build a capability map and translate legacy systems",
    "link": "https://martinfowler.com/articles/legacy-modernization-gen-ai.html#DiscoveringACapabilityMapOfASystem",
    "description": "",
    "author": "",
    "published": "2024-09-24T09:51:00-04:00",
    "image": "",
    "source": "https://martinfowler.com/feed.atom",
    "categories": [
      "skip-home-page"
    ]
  },
  {
    "id": "3f18fac0-07ea-42d5-9067-a2a93fad3a93",
    "title": "Using GenAI to extract low-level details and high-level explanations from legacy systems",
    "link": "https://martinfowler.com/articles/legacy-modernization-gen-ai.html#ReverseEngineeringDrawingOutLow-levelRequirements",
    "description": "",
    "author": "",
    "published": "2024-09-18T08:08:00-05:00",
    "image": "",
    "source": "https://martinfowler.com/feed.atom",
    "categories": [
      "skip-home-page"
    ]
  },
  {
    "id": "823c01aa-f13b-42f1-b65d-4244a49f2079",
    "title": "Legacy Modernization meets GenAI",
    "link": "https://martinfowler.com/articles/legacy-modernization-gen-ai.html",
    "description": "",
    "author": "",
    "published": "2024-09-17T09:07:00-04:00",
    "image": "",
    "source": "https://martinfowler.com/feed.atom",
    "categories": null
  },
  {
    "id": "b7028d33-76e6-4825-8df4-807136284468",
    "title": "Governing data products using fitness functions",
    "link": "https://martinfowler.com/articles/fitness-functions-data-products.html",
    "description": "",
    "author": "",
    "published": "2024-09-05T09:37:00-04:00",
    "image": "",
    "source": "https://martinfowler.com/feed.atom",
    "categories": null
  },
  {
    "id": "6b6d1a53-452c-435a-95cb-507e2901818a",
    "title": "Bliki: Cycle Time",
    "link": "https://martinfowler.com/bliki/CycleTime.html",
    "description": "",
    "author": "",
    "published": "2024-09-04T00:00:00-04:00",
    "image": "",
    "source": "https://martinfowler.com/feed.atom",
    "categories": [
      "bliki"
    ]
  },
  {
    "id": "ff382ff9-6691-4195-ba5f-f327f125e9fe",
    "title": "Rewriting Strangler Fig",
    "link": "https://martinfowler.com/articles/2024-strangler-fig-rewrite.html",
    "description": "",
    "author": "Martin Fowler",
    "published": "2024-08-22T11:51:00-04:00",
    "image": "",
    "source": "https://martinfowler.com/feed.atom",
    "categories": null
  },
  {
    "id": "555cc8e7-3484-462c-b500-3845d4b631c1",
    "title": "Onboarding to a \"legacy\" codebase with the help of AI",
    "link": "https://martinfowler.com/articles/exploring-gen-ai.html#memo-09",
    "description": "",
    "author": "",
    "published": "2024-08-15T10:32:00-04:00",
    "image": "",
    "source": "https://martinfowler.com/feed.atom",
    "categories": null
  },
  {
    "id": "0d11ccbf-a07c-43bb-b750-704c7f7e2fc0",
    "title": "Refresh of the PoEAA catalog page",
    "link": "https://martinfowler.com/articles/2024-eaa-catalog-refresh.html",
    "description": "",
    "author": "Martin Fowler",
    "published": "2024-07-31T16:11:00-04:00",
    "image": "",
    "source": "https://martinfowler.com/feed.atom",
    "categories": null
  },
  {
    "id": "65e87dc4-c96f-46de-bdb0-91cf63492872",
    "title": "Instead of restricting AI and algorithms, make them explainable",
    "link": "https://martinfowler.com/articles/2024-restrict-algorithm.html",
    "description": "",
    "author": "",
    "published": "2024-07-30T12:10:00-04:00",
    "image": "",
    "source": "https://martinfowler.com/feed.atom",
    "categories": null
  },
  {
    "id": "3e417963-0926-44bd-b164-3877720f563a",
    "title": "Testing server calls in generated HTML",
    "link": "https://martinfowler.com/articles/tdd-html-templates.html#Round-tripToTheServer",
    "description": "",
    "author": "",
    "published": "2024-06-05T15:00:00+02:00",
    "image": "",
    "source": "https://martinfowler.com/feed.atom",
    "categories": [
      "skip-home-page"
    ]
  },
  {
    "id": "a63fae43-b94c-4572-a4d5-333fca067b0b",
    "title": "Testing the behavior of generated HTML",
    "link": "https://martinfowler.com/articles/tdd-html-templates.html#Level3TestingHtmlBehaviour",
    "description": "",
    "author": "",
    "published": "2024-05-30T08:42:00-04:00",
    "image": "",
    "source": "https://martinfowler.com/feed.atom",
    "categories": [
      "skip-home-page"
    ]
  },
  {
    "id": "8569daad-9088-4a06-91c9-68adf17b6f13",
    "title": "Parameterizing HTML template tests",
    "link": "https://martinfowler.com/articles/tdd-html-templates.html#MakeItEasyToAddNewTests",
    "description": "",
    "author": "",
    "published": "2024-05-29T10:44:00-04:00",
    "image": "",
    "source": "https://martinfowler.com/feed.atom",
    "categories": [
      "skip-home-page"
    ]
  },
  {
    "id": "dea01456-46f4-42d5-be70-5a29b37ab87b",
    "title": "Prefetching in Single-Page Applications",
    "link": "https://martinfowler.com/articles/data-fetch-spa.html#prefetching",
    "description": "",
    "author": "",
    "published": "2024-05-29T10:24:00-04:00",
    "image": "",
    "source": "https://martinfowler.com/feed.atom",
    "categories": [
      "skip-home-page"
    ]
  },
  {
    "id": "c71a7385-48a9-40d2-9907-16bde3c5135f",
    "title": "Code Splitting in Single-Page Applications",
    "link": "https://martinfowler.com/articles/data-fetch-spa.html#IntroducingUserdetailcardComponent",
    "description": "",
    "author": "",
    "published": "2024-05-23T10:26:00-04:00",
    "image": "",
    "source": "https://martinfowler.com/feed.atom",
    "categories": [
      "skip-home-page"
    ]
  },
  {
    "id": "b4335355-5da3-402b-86cb-6246e8b9574d",
    "title": "A short note on how I use and render footnotes",
    "link": "https://martinfowler.com/articles/2024-footnote-rendering.html",
    "description": "",
    "author": "",
    "published": "2024-05-22T14:17:00-04:00",
    "image": "",
    "source": "https://martinfowler.com/feed.atom",
    "categories": null
  },
  {
    "id": "cae135dd-63a3-4d1e-9275-229c60e55f78",
    "title": "Testing the contents of generated HTML",
    "link": "https://martinfowler.com/articles/tdd-html-templates.html#Level2TestingHtmlStructure",
    "description": "",
    "author": "",
    "published": "2024-05-22T10:14:00-04:00",
    "image": "",
    "source": "https://martinfowler.com/feed.atom",
    "categories": [
      "skip-home-page"
    ]
  },
  {
    "id": "d257056a-3df3-43b3-901d-071cbed9e45c",
    "title": "Using markup for fallbacks when fetching data",
    "link": "https://martinfowler.com/articles/data-fetch-spa.html#fallback-markup",
    "description": "",
    "author": "",
    "published": "2024-05-21T11:30:00-04:00",
    "image": "",
    "source": "https://martinfowler.com/feed.atom",
    "categories": [
      "skip-home-page"
    ]
  },
  {
    "id": "055f6dde-04d1-474b-b2b2-9ab927aad4de",
    "title": "Test-Driving HTML Templates",
    "link": "https://martinfowler.com/articles/tdd-html-templates.html",
    "description": "",
    "author": "",
    "published": "2024-05-21T11:06:00-04:00",
    "image": "",
    "source": "https://martinfowler.com/feed.atom",
    "categories": null
  },
  {
    "id": "5b9ca626-63df-440e-9aa0-66644c366d10",
    "title": "Parallel Data Fetching",
    "link": "https://martinfowler.com/articles/data-fetch-spa.html#ImplementTheFriendsList",
    "description": "",
    "author": "",
    "published": "2024-05-15T10:47:00-04:00",
    "image": "",
    "source": "https://martinfowler.com/feed.atom",
    "categories": [
      "skip-home-page"
    ]
  },
  {
    "id": "e05b30ab-ee35-4cd9-9fa3-f9d753fc905a",
    "title": "Emulating SQL FILTER with Oracle JSON Aggregate Functions",
    "link": "https://blog.jooq.org/emulating-sql-filter-with-oracle-json-aggregate-functions/",
    "description": "A cool standard SQL:2003 feature is the aggregate FILTER clause, which is supported natively by at least these RDBMS: The following aggregate function computes the number of rows per group which satifsy the FILTER clause: This is useful for pivot style queries, where multiple aggregate values are computed in one go. For most basic types … Continue reading Emulating SQL FILTER with Oracle JSON Aggregate Functions →",
    "author": "lukaseder",
    "published": "Mon, 03 Jun 2024 12:17:41 +0000",
    "image": "",
    "source": "https://blog.jooq.org/feed",
    "categories": [
      "sql",
      "aggregate functions",
      "FILTER",
      "FILTER clause",
      "JSON",
      "JSON aggregate functions",
      "JSON_ARRAYAGG",
      "JSON_OBJECTAGG",
      "Oracle",
      "SQL/JSON"
    ]
  },
  {
    "id": "55ab0e5a-e921-4503-be54-33c7598ea56f",
    "title": "Getting Top 1 Values Per Group in Oracle",
    "link": "https://blog.jooq.org/getting-top-1-values-per-group-in-oracle/",
    "description": "I’ve blogged about generic ways of getting top 1 or top n per category queries before on this blog. An Oracle specific version in that post used the arcane KEEP syntax: This is a bit difficult to read when you see it for the first time. Think of it as a complicated way to say … Continue reading Getting Top 1 Values Per Group in Oracle →",
    "author": "lukaseder",
    "published": "Fri, 01 Mar 2024 09:55:41 +0000",
    "image": "",
    "source": "https://blog.jooq.org/feed",
    "categories": [
      "sql",
      "aggregate functions",
      "ANY_VALUE",
      "KEEP",
      "Oracle",
      "top-1-per-category"
    ]
  },
  {
    "id": "1c1d5cf9-089e-4695-8998-e6126d026a66",
    "title": "An Efficient Way to Check for Existence of Multiple Values in SQL",
    "link": "https://blog.jooq.org/an-efficient-way-to-check-for-existence-of-multiple-values-in-sql/",
    "description": "In a previous blog post, we’ve advertised the use of SQL EXISTS rather than COUNT(*) to check for existence of a value in SQL. I.e. to check if in the Sakila database, actors called WAHLBERG have played in any films, instead of: Do this: (Depending on your dialect you may require a FROM DUAL clause, … Continue reading An Efficient Way to Check for Existence of Multiple Values in SQL →",
    "author": "lukaseder",
    "published": "Fri, 16 Feb 2024 14:16:45 +0000",
    "image": "",
    "source": "https://blog.jooq.org/feed",
    "categories": [
      "sql",
      "COUNT(*)",
      "exists",
      "LIMIT",
      "mysql",
      "Oracle",
      "performance",
      "PostgreSQL",
      "SQL Performance",
      "SQL Server",
      "TOP"
    ]
  },
  {
    "id": "1610e936-57ef-45c3-9903-80fe10b86692",
    "title": "A Hidden Benefit of Implicit Joins: Join Elimination",
    "link": "https://blog.jooq.org/a-hidden-benefit-of-implicit-joins-join-elimination/",
    "description": "One of jOOQ’s key features so far has always been to render pretty much exactly the SQL that users expect, without any surprises – unless some emulation is required to make a query work, of course. This means that while join elimination is a powerful feature of many RDBMS, it isn’t part of jOOQ’s feature … Continue reading A Hidden Benefit of Implicit Joins: Join Elimination →",
    "author": "lukaseder",
    "published": "Wed, 10 Jan 2024 14:19:00 +0000",
    "image": "",
    "source": "https://blog.jooq.org/feed",
    "categories": [
      "jooq-in-use",
      "implicit joins",
      "implicit path join",
      "java",
      "JOIN elimination",
      "jooq",
      "many-to-many joins",
      "sql",
      "to-many joins"
    ]
  },
  {
    "id": "46bdf000-8bc2-4dcd-8f3a-b28eb560e98f",
    "title": "jOOQ 3.19’s new Explicit and Implicit to-many path joins",
    "link": "https://blog.jooq.org/jooq-3-19s-new-explicit-and-implicit-to-many-path-joins/",
    "description": "jOOQ 3.19 finally delivers on a set of features that will greatly simplify your queries further, after jOOQ 3.11 introduced implicit to-one joins: What are these features? Many ORMs (e.g. JPA, Doctrine, jOOQ 3.11 and others) support “path joins” (they may have different names for this concept). A path join is a join derived from … Continue reading jOOQ 3.19’s new Explicit and Implicit to-many path joins →",
    "author": "lukaseder",
    "published": "Thu, 28 Dec 2023 14:35:14 +0000",
    "image": "",
    "source": "https://blog.jooq.org/feed",
    "categories": [
      "jooq-development",
      "correlated subqueries",
      "explicit path joins",
      "implicit join path correlation",
      "implicit joins",
      "java",
      "jooq",
      "path joins",
      "sql",
      "to-many path joins"
    ]
  },
  {
    "id": "1da51020-50cc-4d69-8028-81941b2b896b",
    "title": "Workaround for MySQL’s “can’t specify target table for update in FROM clause” Error",
    "link": "https://blog.jooq.org/workaround-for-mysqls-cant-specify-target-table-for-update-in-from-clause-error/",
    "description": "In MySQL, you cannot do this: The UPDATE statement will raise an error as follows: SQL Error [1093] [HY000]: You can’t specify target table ‘t’ for update in FROM clause People have considered this to be a bug in MySQL for ages, as most other RDBMS can do this without any issues, including MySQL clones: … Continue reading Workaround for MySQL’s “can’t specify target table for update in FROM clause” Error →",
    "author": "lukaseder",
    "published": "Wed, 20 Dec 2023 14:20:29 +0000",
    "image": "",
    "source": "https://blog.jooq.org/feed",
    "categories": [
      "jooq-in-use",
      "sql",
      "FOR UPDATE",
      "from clause",
      "mysql",
      "target table"
    ]
  },
  {
    "id": "84832e1a-b3c0-40de-8cff-6b209a5b9660",
    "title": "jOOQ 3.19.0 Released with DuckDB, Trino, Oracle 23c support, join path improvements, an official gradle plugin, commercial maven repositories, policies, UDT paths, trigger meta data, hierarchies, and much more",
    "link": "https://blog.jooq.org/jooq-3-19-0-released-with-duckdb-trino-oracle-23c-support-join-path-improvements-an-official-gradle-plugin-commercial-maven-repositories-policies-udt-paths-trigger-meta-data-hierarchies-and/",
    "description": "New Dialects It’s been a few releases since we’ve added support for new dialects, but finally some very interesting RDBMS of increasing popularity have joined the jOOQ family including: These dialects are available in all jOOQ editions. New dialect versions In addition to these entirely new dialects, big new CockroachDB and Oracle versions have shipped: … Continue reading jOOQ 3.19.0 Released with DuckDB, Trino, Oracle 23c support, join path improvements, an official gradle plugin, commercial maven repositories, policies, UDT paths, trigger meta data, hierarchies, and much more →",
    "author": "lukaseder",
    "published": "Fri, 15 Dec 2023 16:30:41 +0000",
    "image": "",
    "source": "https://blog.jooq.org/feed",
    "categories": [
      "jooq-development",
      "CockroachDB 23",
      "duckdb",
      "Gradle",
      "gradle plugin",
      "implicit joins",
      "Java 8",
      "Join paths",
      "jooq",
      "jOOQ 3.19",
      "maven repository",
      "Oracle 23c",
      "policies",
      "Release Notes",
      "row level security",
      "trigger meta data",
      "triggers",
      "TrinoDB",
      "UDT paths",
      "UDTs"
    ]
  },
  {
    "id": "9aa310ea-e3df-4146-933c-f5f0f65fda4a",
    "title": "Maven Coordinates of the most popular JDBC Drivers",
    "link": "https://blog.jooq.org/maven-coordinates-of-the-most-popular-jdbc-drivers/",
    "description": "Do you need to add a JDBC driver to your application, and don’t know its Maven coordinates? This blog post lists the most popular drivers from the jOOQ integration tests. Look up the latest versions directly on https://central.sonatype.com/ with parameters g:groupId a:artifactId, for example, the H2 database and driver: https://central.sonatype.com/search?q=g%3Acom.h2database+a%3Ah2 The list only includes drivers … Continue reading Maven Coordinates of the most popular JDBC Drivers →",
    "author": "lukaseder",
    "published": "Wed, 13 Dec 2023 11:25:44 +0000",
    "image": "",
    "source": "https://blog.jooq.org/feed",
    "categories": [
      "java",
      "sql",
      "JDBC",
      "JDBC drivers",
      "Maven Central"
    ]
  },
  {
    "id": "9c229734-9bba-44a0-9e25-15c3a0741299",
    "title": "To DAO or not to DAO",
    "link": "https://blog.jooq.org/to-dao-or-not-to-dao/",
    "description": "jOOQ’s DAO API is one of jOOQ’s most controversial features. When it was first implemented, it was implemented merely: There’s a strong hint about the third bullet given how popular Spring Data’s repository “pattern” is. A lot of developers just want to quickly fetch and store data, without giving individual queries much thought. A fun … Continue reading To DAO or not to DAO →",
    "author": "lukaseder",
    "published": "Wed, 06 Dec 2023 13:41:52 +0000",
    "image": "",
    "source": "https://blog.jooq.org/feed",
    "categories": [
      "jooq-in-use",
      "dao",
      "jooq",
      "Repository"
    ]
  },
  {
    "id": "1ea0e8af-9cfd-49d5-bdac-59a1b9c183db",
    "title": "JDBC Connection URLs of the Most Popular RDBMS",
    "link": "https://blog.jooq.org/jdbc-connection-urls-of-the-most-popular-rdbms/",
    "description": "Need to connect to your RDBMS with JDBC and don’t have the JDBC connection URL or driver name at hand? No problem, just look up your RDBMS below:",
    "author": "lukaseder",
    "published": "Fri, 01 Dec 2023 11:12:59 +0000",
    "image": "",
    "source": "https://blog.jooq.org/feed",
    "categories": [
      "sql",
      "connection url",
      "JDBC",
      "RDBMS"
    ]
  },
  {
    "id": "bd1563e2-f954-4743-a3f8-2c389b5c8e79",
    "title": "How to Generate Package Private Code with jOOQ’s Code Generator",
    "link": "https://blog.jooq.org/how-to-generate-package-private-code-with-jooqs-code-generator/",
    "description": "Java’s package private visibility is an underrated feature. When you omit any visibility modifier in Java, then the default (for most objects) is package private, i.e. the object is visible only to types in the same package: In fact, a compilation unit (the .java file) can contain multiple such classes. You don’t have to create … Continue reading How to Generate Package Private Code with jOOQ’s Code Generator →",
    "author": "lukaseder",
    "published": "Wed, 28 Jun 2023 15:54:18 +0000",
    "image": "",
    "source": "https://blog.jooq.org/feed",
    "categories": [
      "jooq-in-use",
      "code generator",
      "jooq",
      "jOOQ code generator",
      "Modularity",
      "package private",
      "visibility",
      "visibility modifier"
    ]
  },
  {
    "id": "d9ff58aa-b773-4018-9cd4-cae2ed7596ef",
    "title": "How to Pass a Table Valued Parameter to a T-SQL Function with jOOQ",
    "link": "https://blog.jooq.org/how-to-pass-a-table-valued-parameter-to-a-t-sql-function-with-jooq/",
    "description": "Microsoft T-SQL supports a language feature called table-valued parameter (TVP), which is a parameter of a table type that can be passed to a stored procedure or function. For example, you may write: This function takes a table-valued parameter (TVP), and produces a result set containing the cross product of the parameter table with itself. … Continue reading How to Pass a Table Valued Parameter to a T-SQL Function with jOOQ →",
    "author": "lukaseder",
    "published": "Tue, 25 Apr 2023 12:16:30 +0000",
    "image": "",
    "source": "https://blog.jooq.org/feed",
    "categories": [
      "jooq-in-use",
      "Code generation",
      "code generator",
      "java",
      "JDBC",
      "jooq",
      "SQL Server",
      "T-SQL",
      "Table-valued function",
      "Table-valued parameter"
    ]
  },
  {
    "id": "b7f529a0-53a7-4d1e-a2dc-cc489eb970dd",
    "title": "How to Turn a List of Flat Elements into a Hierarchy in Java, SQL, or jOOQ",
    "link": "https://blog.jooq.org/how-to-turn-a-list-of-flat-elements-into-a-hierarchy-in-java-sql-or-jooq/",
    "description": "Occasionally, you want to write a SQL query and fetch a hierarchy of data, whose flat representation may look like this: The result might be: |id |parent_id|label | |---|---------|-------------------| |1 | |C: | |2 |1 |eclipse | |3 |2 |configuration | |4 |2 |dropins | |5 |2 |features | |7 |2 |plugins | |8 |2 … Continue reading How to Turn a List of Flat Elements into a Hierarchy in Java, SQL, or jOOQ →",
    "author": "lukaseder",
    "published": "Fri, 24 Mar 2023 15:45:28 +0000",
    "image": "",
    "source": "https://blog.jooq.org/feed",
    "categories": [
      "java",
      "jooq-development",
      "sql",
      "Collector",
      "Collectors",
      "Hierarchical SQL",
      "PostgreSQL",
      "Recursive SQL"
    ]
  },
  {
    "id": "79ca7f5e-ba1a-4e06-870d-a68f288bcccb",
    "title": "3.18.0 Release with Support for more Diagnostics, SQL/JSON, Oracle Associative Arrays, Multi dimensional Arrays, R2DBC 1.0",
    "link": "https://blog.jooq.org/3-18-0-release-with-support-for-more-diagnostics-sql-json-oracle-associative-arrays-multi-dimensional-arrays-r2dbc-1-0/",
    "description": "DiagnosticsListener improvements A lot of additional diagnostics have been added, including the automated detection of pattern replacements, helping you lint your SQL queries irrespective of whether you’re using jOOQ to write your SQL, or if you’re using it as a JDBC / R2DBC proxy for an existing application. A lot of these diagnostics are available … Continue reading 3.18.0 Release with Support for more Diagnostics, SQL/JSON, Oracle Associative Arrays, Multi dimensional Arrays, R2DBC 1.0 →",
    "author": "lukaseder",
    "published": "Wed, 08 Mar 2023 16:34:56 +0000",
    "image": "",
    "source": "https://blog.jooq.org/feed",
    "categories": [
      "Uncategorized"
    ]
  },
  {
    "id": "cf84a3b9-2c53-407a-b123-cfbf77f01e4e",
    "title": "How to use jOOQ’s Converters with UNION Operations",
    "link": "https://blog.jooq.org/how-to-use-jooqs-converters-with-union-operations/",
    "description": "jOOQ 3.15 introduced the concept of an ad-hoc converter, a converter that is applied “ad-hoc” to a single query. It uses the same underlying mechanisms as any ordinary Converter that is attached to generated code for use in every query. An example of such an ad-hoc converter is this: While there are other ways to … Continue reading How to use jOOQ’s Converters with UNION Operations →",
    "author": "lukaseder",
    "published": "Thu, 02 Mar 2023 11:18:17 +0000",
    "image": "",
    "source": "https://blog.jooq.org/feed",
    "categories": [
      "jooq-in-use",
      "Ad-hoc converter",
      "Converter",
      "jooq",
      "Multiset",
      "UNION"
    ]
  },
  {
    "id": "69f8e1ef-a32c-46b2-990a-e8d9f36efe31",
    "title": "How to Write a Derived Table in jOOQ",
    "link": "https://blog.jooq.org/how-to-write-a-derived-table-in-jooq/",
    "description": "One of the more frequent questions about jOOQ is how to write a derived table (or a CTE). The jOOQ manual shows a simple example of a derived table: In SQL: In jOOQ: And that’s pretty much it. The question usually arises from the fact that there’s a surprising lack of type safety when working … Continue reading How to Write a Derived Table in jOOQ →",
    "author": "lukaseder",
    "published": "Fri, 24 Feb 2023 09:18:48 +0000",
    "image": "",
    "source": "https://blog.jooq.org/feed",
    "categories": [
      "jooq-in-use",
      "sql",
      "cte",
      "derived table",
      "jooq",
      "Type safety"
    ]
  },
  {
    "id": "fb109196-68c8-4b9f-b642-d20247002bd4",
    "title": "The Performance Impact of SQL’s FILTER Clause",
    "link": "https://blog.jooq.org/the-performance-impact-of-sqls-filter-clause/",
    "description": "I’ve found an interesting question on Twitter, recently. Is there any performance impact of using FILTER in SQL (PostgreSQL, specifically), or is it just syntax sugar for a CASE expression in an aggregate function? As a quick reminder, FILTER is an awesome standard SQL extension to filter out values before aggregating them in SQL. This … Continue reading The Performance Impact of SQL’s FILTER Clause →",
    "author": "lukaseder",
    "published": "Mon, 06 Feb 2023 07:51:38 +0000",
    "image": "",
    "source": "https://blog.jooq.org/feed",
    "categories": [
      "sql",
      "aggregate functions",
      "Benchmark",
      "FILTER",
      "performance",
      "PostgreSQL"
    ]
  },
  {
    "id": "53e7fc46-9b19-432d-ad01-afdbe81a693b",
    "title": "Emulating Window Functions in MySQL 5.7",
    "link": "https://blog.jooq.org/emulating-window-functions-in-mysql-5-7/",
    "description": "One of MySQL 8’s biggest improvements is the support of window functions. As I always said in conferences, there’s SQL before window functions and SQL after window functions. Once you start using them, you’ll use them everywhere. Some of you poor souls are unfortunate enough to be stuck on MySQL 5.7, either of your own … Continue reading Emulating Window Functions in MySQL 5.7 →",
    "author": "lukaseder",
    "published": "Fri, 20 Jan 2023 11:07:00 +0000",
    "image": "",
    "source": "https://blog.jooq.org/feed",
    "categories": [
      "sql",
      "DENSE_RANK",
      "emulations",
      "local variables",
      "MySQL 5.7",
      "RANK",
      "ROW_NUMBER",
      "Window Functions"
    ]
  },
  {
    "id": "9b942e43-516f-4c2d-87e9-fbbe78b82fb8",
    "title": "Why You Should Execute jOOQ Queries With jOOQ",
    "link": "https://blog.jooq.org/why-you-should-execute-jooq-queries-with-jooq/",
    "description": "Previously on this blog, I’ve written a post explaining why you should use jOOQ’s code generator, despite the possibility of using jOOQ without it. In a similar fashion, as I’ve answered numerous jOOQ questions on Stack Overflow, where someone used jOOQ to build a query, but then executed it elsewhere, including on: jOOQ itself isn’t … Continue reading Why You Should Execute jOOQ Queries With jOOQ →",
    "author": "lukaseder",
    "published": "Wed, 18 Jan 2023 11:46:25 +0000",
    "image": "",
    "source": "https://blog.jooq.org/feed",
    "categories": [
      "jooq-in-use",
      "Code generation",
      "CRUD",
      "CSV",
      "execution",
      "export",
      "identity",
      "import",
      "JDBC",
      "jooq",
      "jpa",
      "JSON",
      "mapping",
      "Multiset",
      "Nested collections",
      "Nested Records",
      "ORM",
      "R2DBC",
      "stored procedures",
      "Type safety",
      "UDT",
      "UpdatableRecord",
      "user defined types",
      "xml"
    ]
  },
  {
    "id": "ef2a09ba-9718-4dfd-947c-86c594d2ed59",
    "title": "jOOQ’s R2DBC LoggingConnection to log all SQL statements",
    "link": "https://blog.jooq.org/jooqs-r2dbc-loggingconnection-to-log-all-sql-statements/",
    "description": "jOOQ already has a LoggingConnection (see also the manual), which acts as a JDBC proxy Connection to log all SQL statements that are executed by any JDBC client (including Hibernate, MyBatis, JdbcTemplate, native JDBC, etc.). Starting from jOOQ 3.18.0, 3.17.7, and 3.16.13, a LoggingConnection is now also available for R2DBC clients to log all reactive … Continue reading jOOQ’s R2DBC LoggingConnection to log all SQL statements →",
    "author": "lukaseder",
    "published": "Tue, 17 Jan 2023 10:12:05 +0000",
    "image": "",
    "source": "https://blog.jooq.org/feed",
    "categories": [
      "jooq-in-use",
      "jooq",
      "logging",
      "R2DBC"
    ]
  },
  {
    "id": "75647240-fb88-4bd3-a164-269853794ee8",
    "title": "How We're Preventing Breaking Changes in GraphQL APIs at Buffer — and Why It's Essential for Our Customers",
    "link": "https://buffer.com/resources/how-were-preventing-breaking-changes-in-graphql-apis-at-buffer-and-why-its-essential-for-our-customers/",
    "description": "As part of our commitment to transparency and building in public, Buffer engineer Joe Birch shares how we’re doing this for our own GraphQL API via the use of GitHub Actions.",
    "author": "Joe Birch",
    "published": "Fri, 12 Jul 2024 11:28:34 GMT",
    "image": "https://buffer.com/resources/content/images/2024/07/Changes-in-GraphQL-APIs.png",
    "source": "https://buffer.com/resources/overflow/rss/",
    "categories": [
      "Overflow",
      "Open"
    ]
  },
  {
    "id": "ed399021-6de4-4ae9-8bd8-353f6296acc9",
    "title": "Highlighting Text Input with Jetpack Compose",
    "link": "https://buffer.com/resources/highlighting-text-input-with-jetpack-compose/",
    "description": "We recently launched a new feature at Buffer, called Ideas. With Ideas, you can store all your best ideas, tweak them until they’re ready, and drop them straight into your Buffer queue. Now that Ideas has launched in our web and mobile apps, we have some time to",
    "author": "Joe Birch",
    "published": "Tue, 13 Dec 2022 18:32:36 GMT",
    "image": "https://buffer.com/resources/content/images/2022/12/aaron-burden-Hzi7U2SZ2GE-unsplash.jpg",
    "source": "https://buffer.com/resources/overflow/rss/",
    "categories": [
      "Overflow"
    ]
  },
  {
    "id": "c958a56d-73de-4e92-a1bb-72661be80d8c",
    "title": "Secure Access To Opensearch on AWS",
    "link": "https://buffer.com/resources/secure-access-to-opensearch-on-aws/",
    "description": "With the surprising swap of Elasticsearch with Opensearch on AWS. Learn how the team at Buffer achieved secure access without AWS credentials.",
    "author": "Peter Emil",
    "published": "Mon, 18 Apr 2022 13:49:52 GMT",
    "image": "https://buffer.com/resources/content/images/2022/04/kari-shea-1SAnrIxw5OY-unsplash.jpg",
    "source": "https://buffer.com/resources/overflow/rss/",
    "categories": [
      "Overflow"
    ]
  },
  {
    "id": "8086ced5-6ae2-4277-ad4c-db8801288dce",
    "title": "Load Fonts Fast",
    "link": "https://buffer.com/resources/load-fonts-fast/",
    "description": "Learn the trick to fast fonts. This post shares how to load fonts fast.",
    "author": "Juliana Gomez",
    "published": "Thu, 09 Dec 2021 19:46:22 GMT",
    "image": "https://buffer.com/resources/content/images/2021/12/Frame-51.png",
    "source": "https://buffer.com/resources/overflow/rss/",
    "categories": [
      "Overflow"
    ]
  },
  {
    "id": "40991aaf-6515-4060-baa2-a8f53661d1d6",
    "title": "Migrating our component library to the Material Button",
    "link": "https://buffer.com/resources/migrating-our-component-library-to-the-material-button/",
    "description": "How we converted our Button styling to a Material Button component. This post is an overview on migrating our component library.",
    "author": "Joe Birch",
    "published": "Fri, 14 Feb 2020 15:52:40 GMT",
    "image": "https://buffer.com/resources/content/images/wp-content/uploads/2020/02/pearse-o-halloran-mrbDuwF9gqk-unsplash.jpg",
    "source": "https://buffer.com/resources/overflow/rss/",
    "categories": [
      "Overflow"
    ]
  },
  {
    "id": "4527cd3f-7ff0-4d8f-b1e1-9ffd3bd849fd",
    "title": "Selectively running Android modularized unit tests on your CI server",
    "link": "https://buffer.com/resources/selectively-running-android-modularized-unit-tests-on-your-ci-server/",
    "description": "Modularizing projects can bring different advantages to your team. This post is an overview on running modularized unit test on CI server.",
    "author": "Joe Birch",
    "published": "Fri, 20 Dec 2019 14:10:22 GMT",
    "image": "https://buffer.com/resources/content/images/wp-content/uploads/2019/12/icons8-team-dhZtNlvNE8M-unsplash.jpg",
    "source": "https://buffer.com/resources/overflow/rss/",
    "categories": [
      "Overflow"
    ]
  },
  {
    "id": "ec82bd40-b27c-4115-9887-77700444bc54",
    "title": "Tainting and Labeling Kubernetes Nodes to Run Special Workload — A quick guide that is finally NOT confusing",
    "link": "https://buffer.com/resources/tainting-and-labeling-kubernetes-nodes-to-run-special-workload-e2-80-8a--e2-80-8aa-quick-guide-that-is-finally-not-confusing/",
    "description": "A quick guide to tainting and labeling kubernetes. This post is an overview of tainting and labeling kubernetes nodes to run special workload.",
    "author": "Steven Cheng",
    "published": "Tue, 03 Dec 2019 23:11:37 GMT",
    "image": "https://buffer.com/resources/content/images/wp-content/uploads/2019/12/440px-Kubernetes_logo_without_workmark.svg_.png",
    "source": "https://buffer.com/resources/overflow/rss/",
    "categories": [
      "Overflow"
    ]
  },
  {
    "id": "aab11ba1-2185-428f-bddc-38a744d1b6f9",
    "title": "How to Set Kubernetes Resource Requests and Limits - A Saga to Improve Cluster Stability and Efficiency",
    "link": "https://buffer.com/resources/how-to-set-kubernetes-resource-requests-and-limits-e2-80-8a--e2-80-8aa-saga-to-improve-cluster-stability-and-efficiency/",
    "description": "Learn how to set kubernetes resource requests and limits. This post explains how to set Kubernetes resource requests and limits.",
    "author": "Steven Cheng",
    "published": "Wed, 13 Nov 2019 19:18:46 GMT",
    "image": "https://buffer.com/resources/content/images/wp-content/uploads/2019/11/2560px-Kubernetes_logo_without_workmark.svg_.png",
    "source": "https://buffer.com/resources/overflow/rss/",
    "categories": [
      "Workplace of the future",
      "Overflow"
    ]
  },
  {
    "id": "ae829e57-7541-463a-b74a-f1da53b284d2",
    "title": "Announcing The Buffer Overflow Podcast",
    "link": "https://buffer.com/resources/announcing-the-buffer-overflow-podcast/",
    "description": "So, why start a podcast? This post announces the Buffer Overflow podcast.",
    "author": "Jordan Morgan",
    "published": "Mon, 07 Oct 2019 18:07:47 GMT",
    "image": "https://buffer.com/resources/content/images/wp-content/uploads/2019/10/podcastHeader.jpg",
    "source": "https://buffer.com/resources/overflow/rss/",
    "categories": [
      "Workplace of the future",
      "Overflow"
    ]
  },
  {
    "id": "ee2b00d3-904a-466b-aa4b-177446cb11bc",
    "title": "Getting Buffer Publish ready for Android 10",
    "link": "https://buffer.com/resources/getting-buffer-publish-ready-for-android-10/",
    "description": "Learn about the things we did to prepare our app for the Android 10 release. This post explains getting Buffer publish ready for Android 10.",
    "author": "Joe Birch",
    "published": "Wed, 11 Sep 2019 12:45:04 GMT",
    "image": "https://buffer.com/resources/content/images/wp-content/uploads/2019/09/10-1.png",
    "source": "https://buffer.com/resources/overflow/rss/",
    "categories": [
      "Overflow"
    ]
  },
  {
    "id": "5def8a15-9c38-47ea-9d31-6defb77fe9c3",
    "title": "Library module navigation in Android Applications",
    "link": "https://buffer.com/resources/library-module-navigation-in-android-applications/",
    "description": "Learn about the library module navigation in Android apps. This post is an overview of the library module navigation in Android applications.",
    "author": "Joe Birch",
    "published": "Tue, 30 Jul 2019 11:57:23 GMT",
    "image": "https://buffer.com/resources/content/images/wp-content/uploads/2019/07/alexander-andrews-4JdvOwrVzfY-unsplash.jpg",
    "source": "https://buffer.com/resources/overflow/rss/",
    "categories": [
      "Overflow"
    ]
  },
  {
    "id": "a1eba2eb-d461-47f0-8d37-84989b15371d",
    "title": "Video: Getting started with Go [Bufferdevs Snackchat]",
    "link": "https://buffer.com/resources/video-getting-started-with-go-bufferdevs-snackchat/",
    "description": "In this Snackchat, Joe Birch gives us a quick introduction to Go. This post shares a video on getting started with Go.",
    "author": "Joe Birch",
    "published": "Fri, 07 Jun 2019 13:27:54 GMT",
    "image": "",
    "source": "https://buffer.com/resources/overflow/rss/",
    "categories": [
      "Workplace of the future",
      "Overflow"
    ]
  },
  {
    "id": "9c458aa1-906c-4a26-b174-b99c2fc02985",
    "title": "Creating a custom video SeekBar on Android",
    "link": "https://buffer.com/resources/creating-a-custom-video-seekbar-on-android/",
    "description": "Don’t reinvent the wheel when you don’t need to! Re-use what you can. This post is an overview on creating a custom video SeekBar on Android.",
    "author": "Joe Birch",
    "published": "Fri, 08 Feb 2019 16:21:47 GMT",
    "image": "https://buffer.com/resources/content/images/wp-content/uploads/2019/02/jakob-owens-199505-unsplash.jpg",
    "source": "https://buffer.com/resources/overflow/rss/",
    "categories": [
      "Overflow"
    ]
  },
  {
    "id": "46df121e-ce20-4cca-a09d-3a5a5999d412",
    "title": "Video: Automate Everything – From Review to Release [Bufferdevs Snackchat]",
    "link": "https://buffer.com/resources/video-automate-everything-from-review-to-release-bufferdevs-snackchat/",
    "description": "At Buffer we regularly hold what we call ‘Snackchats’. This post shares a video on automate everything-from reviews to release.",
    "author": "Joe Birch",
    "published": "Fri, 18 Jan 2019 11:38:24 GMT",
    "image": "",
    "source": "https://buffer.com/resources/overflow/rss/",
    "categories": [
      "Workplace of the future",
      "Overflow"
    ]
  },
  {
    "id": "cf69a67f-ce62-4e7f-a4c2-4c9469484595",
    "title": "Effective Communication on Technical Topics",
    "link": "https://buffer.com/resources/effective-communication-on-technical-topics/",
    "description": "Levels of communication. This post is an overview of effective communication on technical topics.",
    "author": "Jordan Morgan",
    "published": "Mon, 14 Jan 2019 21:17:48 GMT",
    "image": "https://buffer.com/resources/content/images/wp-content/uploads/2019/01/nik-macmillan-280300-unsplash.jpg",
    "source": "https://buffer.com/resources/overflow/rss/",
    "categories": [
      "Productivity",
      "Overflow",
      "Self-Improvement"
    ]
  },
  {
    "id": "4cd1d16f-91c0-47c5-b563-bbcfe5f4a061",
    "title": "Introducing Netflix’s TimeSeries Data Abstraction Layer",
    "link": "https://netflixtechblog.com/introducing-netflix-timeseries-data-abstraction-layer-31552f6326f8?source=rss----2615bd06b42e---4",
    "description": "",
    "author": "Netflix Technology Blog",
    "published": "Tue, 08 Oct 2024 17:05:36 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/0*jl30Jl559Fnd29in",
    "source": "https://netflixtechblog.com/feed",
    "categories": null
  },
  {
    "id": "723b9dd3-e241-476b-93e4-5d6269e8de6c",
    "title": "Introducing Netflix’s Key-Value Data Abstraction Layer",
    "link": "https://netflixtechblog.com/introducing-netflixs-key-value-data-abstraction-layer-1ea8a0a11b30?source=rss----2615bd06b42e---4",
    "description": "",
    "author": "Netflix Technology Blog",
    "published": "Wed, 18 Sep 2024 22:49:04 GMT",
    "image": "https://cdn-images-1.medium.com/max/755/0*9Ny8Uc-diSDnVGnk",
    "source": "https://netflixtechblog.com/feed",
    "categories": null
  },
  {
    "id": "af0904d9-a4ad-4a01-a619-f4ba1e2ae101",
    "title": "Pushy to the Limit: Evolving Netflix’s WebSocket proxy for the future",
    "link": "https://netflixtechblog.com/pushy-to-the-limit-evolving-netflixs-websocket-proxy-for-the-future-b468bc0ff658?source=rss----2615bd06b42e---4",
    "description": "",
    "author": "Netflix Technology Blog",
    "published": "Tue, 10 Sep 2024 19:15:34 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/0*WQ1W30ChfWrEmmR5",
    "source": "https://netflixtechblog.com/feed",
    "categories": null
  },
  {
    "id": "5b610324-6a71-4fec-a151-c589f01a8f1b",
    "title": "Noisy Neighbor Detection with eBPF",
    "link": "https://netflixtechblog.com/noisy-neighbor-detection-with-ebpf-64b1f4b3bbdd?source=rss----2615bd06b42e---4",
    "description": "",
    "author": "Netflix Technology Blog",
    "published": "Tue, 10 Sep 2024 18:00:21 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*6bapyclfXZPsUIaXFM-xaQ.png",
    "source": "https://netflixtechblog.com/feed",
    "categories": [
      "observability",
      "linux",
      "ebpf",
      "performance",
      "containers"
    ]
  },
  {
    "id": "23e46408-9699-47b5-89ca-7410b456058e",
    "title": "Recommending for Long-Term Member Satisfaction at Netflix",
    "link": "https://netflixtechblog.com/recommending-for-long-term-member-satisfaction-at-netflix-ac15cada49ef?source=rss----2615bd06b42e---4",
    "description": "",
    "author": "Netflix Technology Blog",
    "published": "Thu, 29 Aug 2024 01:01:40 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*Y8QDcyallv_mh7ylPzXqkA.png",
    "source": "https://netflixtechblog.com/feed",
    "categories": [
      "reward-engineering",
      "contextual-bandit",
      "recommendation-system",
      "machine-learning"
    ]
  },
  {
    "id": "5b1cfafb-7b4f-48ea-b28e-57db0a7c1409",
    "title": "Improve Your Next Experiment by Learning Better Proxy Metrics From Past Experiments",
    "link": "https://netflixtechblog.com/improve-your-next-experiment-by-learning-better-proxy-metrics-from-past-experiments-64c786c2a3ac?source=rss----2615bd06b42e---4",
    "description": "",
    "author": "Netflix Technology Blog",
    "published": "Mon, 26 Aug 2024 15:46:24 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*m_lKjIe460GlWr5JseoQzw.jpeg",
    "source": "https://netflixtechblog.com/feed",
    "categories": [
      "data-science",
      "experimentation",
      "machine-learning",
      "a-b-testing",
      "statistics"
    ]
  },
  {
    "id": "39e6d652-17d5-4e01-86ae-d4604206cc98",
    "title": "Investigation of a Cross-regional Network Performance Issue",
    "link": "https://netflixtechblog.com/investigation-of-a-cross-regional-network-performance-issue-422d6218fdf1?source=rss----2615bd06b42e---4",
    "description": "",
    "author": "Netflix Technology Blog",
    "published": "Mon, 05 Aug 2024 22:18:00 GMT",
    "image": "https://cdn-images-1.medium.com/max/1022/0*RpHklRseVBeBJG6u",
    "source": "https://netflixtechblog.com/feed",
    "categories": [
      "tcp",
      "debugging",
      "kernel",
      "network",
      "linux"
    ]
  },
  {
    "id": "d1ebc2d0-a984-413d-a9ce-ff6a83c5a5d8",
    "title": "Java 21 Virtual Threads - Dude, Where’s My Lock?",
    "link": "https://netflixtechblog.com/java-21-virtual-threads-dude-wheres-my-lock-3052540e231d?source=rss----2615bd06b42e---4",
    "description": "",
    "author": "Netflix Technology Blog",
    "published": "Mon, 29 Jul 2024 18:04:05 GMT",
    "image": "https://cdn-images-1.medium.com/max/800/1*b5oZiN2Ew96GEeZ9oIIhPA.png",
    "source": "https://netflixtechblog.com/feed",
    "categories": [
      "java",
      "performance",
      "troubleshooting",
      "concurrency",
      "distributed-systems"
    ]
  },
  {
    "id": "70c55039-4438-4a1d-8941-0571664d0a39",
    "title": "Maestro: Netflix’s Workflow Orchestrator",
    "link": "https://netflixtechblog.com/maestro-netflixs-workflow-orchestrator-ee13a06f9c78?source=rss----2615bd06b42e---4",
    "description": "",
    "author": "Netflix Technology Blog",
    "published": "Mon, 22 Jul 2024 17:38:23 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/0*NvdLiYWhhWb0tvL-",
    "source": "https://netflixtechblog.com/feed",
    "categories": [
      "orchestration",
      "machine-learning",
      "workflow",
      "data",
      "distributed-systems"
    ]
  },
  {
    "id": "2d969efd-a5ec-457e-a328-25756e3d686a",
    "title": "Enhancing Netflix Reliability with Service-Level Prioritized Load Shedding",
    "link": "https://netflixtechblog.com/enhancing-netflix-reliability-with-service-level-prioritized-load-shedding-e735e6ce8f7d?source=rss----2615bd06b42e---4",
    "description": "",
    "author": "Netflix Technology Blog",
    "published": "Tue, 25 Jun 2024 22:58:09 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/0*2KByIB47RWng5UNH",
    "source": "https://netflixtechblog.com/feed",
    "categories": [
      "chaos-engineering",
      "load-shedding",
      "reliability",
      "distributed-systems",
      "netflix"
    ]
  },
  {
    "id": "8077bf0c-8cdc-41ba-a0c1-555851b8ef15",
    "title": "The Insane Innovation of TI Calculator Hobbyists",
    "link": "https://www.thirtythreeforty.net/posts/2021/10/ti-calculator-innovation/",
    "description": "Table of Contents The platform Programming model Software projects Phoenix Grayscale on the TI-84 Plus Game Boy emulator for the TI-84 Plus Shells TI-84+ USB mass storage driver KnightOS The Axe Parser project Unity: Native code on the TI-81 Operating system hacks Signing keys arTIfice Whence from here? Further reading In the mid-to-late 2000s, you either knew, or were, that kid in grade school. You know. The one who could put games on your graphing calculator. You may be surprised to learn that some of these people didn’t exist totally in a vaccuum. There was in fact a thriving scene of hackers who had bent these calculators to their will, writing games, math software, and more generally hacking on the platform just for the sake of it. True to my interests, it’s all deeply embedded, pushing the limits of platforms that were obsolete when they were released. I’ll take you through some of the highlights of Texas Instruments calculator hacking done over the past two and a half decades, along with an explanation of why these projects are so technically impressive. This is xkcd #768. There are also 768 bytes in the RAM buffer used to hold TI display bitmaps. This is not a coincidence because nothing is ever a coincidence with xkcd. (source) Note Wow, it’s been a while since I’ve written anything. In the space of a year I’ve gotten a new job, bought a house, moved. Life comes at you fast. Thanks to everyone who has emailed to check on me—and I apologize for not being super responsive over email. I do plan to continue the articles I’ve started! The platform Throughout the 90s and 2000s, TI released a succession of z80-based graphing calculators. You might have heard of the z80—it was an improved version of the Intel 8080 developed by Zilog. Yeah. It’s old.1 They were quite nice 45 years ago when they were released! All TI calculators generally had similar low-end specs: z80 processor usually clocked at 8 or 10MHz—and note that the z80 can only retire one instruction every 4 cycles. 96x64 black and white LCD (a few models had a larger screen but this was by far the most common. The latest models finally have higher resolution color screens.) A link port which (ab)used the 2.5mm headphone jack connector Generally, 32KB of RAM, and on the 83+ and later, anywhere from 100KB to 2MB of flash storage (“archive”) TI’s operating system “TI-OS” (they call it “EOS” but nobody else does). TI-OS has: Arithmetic and graphing engine TI-BASIC scripting language On the models with flash, support for launching large “apps” stored exclusively in flash Needless to say, this is the very definition of a constrained environment. The most popular graphing calculators were of course the TI-83/84 Plus, which every American student for the past decade and a half has probably seen. I will use “TI-84 Plus” throughout here because it’s very likely the model you’re familiar with; however, it was more often referred to as the TI-83 Plus because they were basically identical. The 84 Plus had USB and a redesigned case, but the system was the same. Programming model The z80 assembly2 programming environment was pretty spartan: there was no supervisor or memory protection, so if you had a bug you were probably going to crash the calculator (the dreaded “RAM Cleared” message). The z80 is an 8-bit machine, with 16-bit pointers, so although archive was technically memory mapped, it wouldn’t all fit—it was actually paged in to a 16KB “window”: This diagram is heavily simplified, but you’ll notice the lack of any horsepower at all. There were several guides for learning assembly, but the best was by Sean McLaughlin, Learn TI-83 Plus Assembly in 28 Days. TI provided a very good SDK documentation about subroutines provided by TI-OS (and official support for Asm() programs), and with that you pretty much had free rein over the system. Software projects Those who followed calculator hacking news will surely recognize the individuals I’m calling out here, either by their name or, more likely, by their handle. For my own part, I was almost entirely a lurker, largely due to the influence of my parents who were not keen on talking to people online. (Remember, high school.) I was, however, a pretty good self-taught calculator programmer—more on that in a later article… Note A fair number of these links are starting to rot because development happened 20 years ago. Please do email me with corrections if you find a newly dead link. And of course massive kudos to the Internet Archive for preserving it all! Phoenix Easily the most famous3 graphing calculator game is Phoenix by Patrick Davidson. It’s a top-down space shoot-em-up similar to the arcade game Galaxian. The reason it is famous is not because it is fun—although it is—nor because it’s well implemented—although it is. Rather, this game is famous because it is one of the oldest, and Patrick and others have ported it to nearly every single z80 calculator ever released. Grayscale on the TI-84 Plus The first thing I remember being really wowed by was an RPG game called Desolate by Patrick Prendergast (tr1p1ea), which boasted four level grayscale. On top of that the game was not just a tech demo; it had a fully featured storyline and pretty good sprite art.4 Most emulators were able to detect that the application was doing grayscale and produce a clean rendering of it How was this possible on a device with only a black and white screen? The answer was that if you flickered pixels on and off fast enough, they would appear gray. Naïve attempts at this led to horrible jittery messes and found it difficult to get over 3 colors (black, white, gray). In contrast, Durk Kingma’s grayscale library that Desolate used achieved really nice 4-gray art by careful timing and by dithering the flickered pixels so that not all were on or off at once. Graphics consumed the majority of the compute budget for the game—but such is life for most video games! Game Boy emulator for the TI-84 Plus TI wasn’t the only company using z80 processors. The original Game Boy used them too! A natural question arises: maybe, possibly, could you run a Game Boy game on a calculator in some sort of hypervisor? Brendan Fletcher (calc84maniac) put a ton of engineering into TI-Boy SE, which does exactly that! A Game Boy cartridge is fairly large—Pokémon Red’s ROM is 1MB—so TI-Boy solves this by packing the ROM into a “shell” flash app using a PC program. Of course, you had to bring your own Game Boy cartridge ROM. The next problem is that many Game Boy cartridges have more RAM (up to 128KiB) than the TI-84 Plus (32KiB). (The Game Boy had only 8KiB built in, but cartridges could supply extra.) Here we’d seem to be stuck: how can you possibly emulate extra RAM? Xavier Andréani (critor) observed that TI calculators did in fact have extra RAM because the ASIC containing the z80 had more RAM than was exposed by default. TI-Boy reverse engineered the special commands to the hardware to bank-switch these into address space! The result is impressive: TI-Boy playing Legend of Zelda (via ticalc.org) Shells On calculators released before the TI-83 Plus, there was no official way to launch assembly language programs. These calculators had to be hacked using various techniques. The solution for end users was a shell - a launcher program that handled the annoying bits of transferring control from the OS. Many shells also provided additional routines a program could call. On the TI-82, the Ash shell accomplished this by sending a specially-crafted memory backup to the calculator. When the calculator next handled a keypress, the memory image redirected the CPU into the setup code. In a sense, this technique is one of the oldest exploits for any TI calculator. The shell that you are most likely to remember is MirageOS for the 84+. MirageOS was a popular tag-along with games shared peer-to-peer with a link cable, because the games needed it to run. It was also a flash app, so it persisted through RAM clears. I remember not being entirely clear on why its splash screen was so elaborate when I first encountered it, but now I appreciate the artwork! Shells got more elaborate over time, culminating in Doors CS by Christopher Mitchell (KermMartian), which had icons for assembly programs, a cursor-based UI, and a bunch of routines for programs to use. TI-84+ USB mass storage driver The 84+ had a really wacky USB port: it was an On-the-Go port, very obscure when it was released. This technically meant that the 84+ could act as a USB host. Dan Englender’s Usb8x supplied the missing driver code, allowing you to use a mouse (of questionable utility), keyboard, or more importantly, a flash drive. The calculator’s boot code provided low-level USB routines for get/send, but the impressive part is the upper USB stack including the mass storage and FAT16 driver “msd8x”—all, of course, in z80 assembly! Usb8x enabled, among other things, a hilarious demo: Michael Vincent may be one of the only people to have ever watched The Matrix on his calculator. (via ticalc.org) KnightOS Drew DeVault (SirCmpwn) was working on a promising project replacing TI-OS entirely with a from-scratch Unix-inspired, multitasking system called KnightOS. The cool part about this system is that it drew a lot from the multitasking paradigms we take for granted on a Mac or Linux box, but did it all with barely any help from the hardware. Programs were relocatable, there was preemptive multitasking, and there were loadable libraries that worked exactly like shared objects do in Unix. There was also a “real” filesystem with directories, flash wear leveling, and a protocol to connect to a computer. (It even has its own USB PID—0xCA1C.) Of course, the whole thing was all carefully implemented in z80 assembly, and kernel and library routines documented the contents of each register. It’s not vaporware; there’s autogenerated builds you can download and install on your calculator, and the source is on GitHub. Unfortunately its broad scope prevented it from achieving a stable release, but the bones are there and they are cool. I actually contributed a little to this project: I remember just having learned about synchronization primitives (mutexes and condition variables) and I easily knew enough about the z80 to be able to implement them for KnightOS. The Axe Parser project As you might imagine, there are two problems with writing assembly programs. First, you generally need a PC to do it properly, and most budding programmers were in school for most of their day. Second, and more importantly, z80 assembly is pretty arcane if you’re coming from BASIC. With the Axe Parser5, Kevin Horowitz (Quigibo) attempted to solve these problems by creating a new programming language that compiled into native code on the calculator. Axe is an app that reads a “TI-BASIC program” written with the built-in editor, but Axe redefined the grammar and semantics to provide a language that was very well suited to writing games. It’s quite an elegant solution: using the built-in editor means Axe didn’t have to ship an editor for its language. Rather, Axe is a compiler—it spends its engineering budget on producing better assembly code, with pages and pages of forum threads devoted to optimization. And further, Axe is extensible with new primitives provided as “Axioms”—plugins that further manipulate the grammar of the language. Here’s a hello world program in Axe. The Str1 token has been co-opted into a 16-bit pointer variable—this compiles on-calculator to an assembly program called HELLO! :.HELLO :\"Hello World\"→Str1 :Disp Str1 Unity: Native code on the TI-81 The TI-81 was an absolute potato of a calculator. Not only did it lack archive memory, it also lacked a link port, and lacked the Asm() command, meaning you were stuck with TI-BASIC. Stuck, that is, until Ben Moody (floppusmaximus) released Unity, a loader that exploited a buffer overflow in the primitive TI-OS, then installed itself to help load other assembly programs. With no link port, how did you get Unity or other assembly programs on the calculator? You typed them in, by hand! The installation instructions are reminiscent of typing in BASIC programs out of BYTE magazine: I suspect Randy Compton, who originally discovered the OS bug, did so by dumping the ROM with physical disassembly. z80 assembly is extremely amenable to reverse engineering because it’s hand-written. Operating system hacks While most projects ran on TI-OS, some ran up against TI-OS in order to make the hardware do things that TI preferred they didn’t do. There were scruples. Most people wanted to avoid the ire of Texas Instruments because (a) even the threat of lawyers tends to have a chilling effect on high school students and (b) people generally wanted to avoid besmirching the community’s image. And so there were certain things that were mostly considered off-limits, namely programs that were designed to help cheat on tests. Signing keys Really all anyone wanted to do was run their own code on their own hardware. TI had a crude but effective cryptographic signature check for apps and operating systems, which used the Rabin cryptosystem. They had released the signing key for TI-83 Plus apps as part of the SDK. However, the other keys that allowed signing OS images for the 83+, 84+, and apps and operating systems for the TI-89, were still secret. Using math against calculator enthusiasts—what did TI expect to happen?! Ben Moody realized that the state of the art in 2009 was enough to directly crack the ten year old 512-bit keys. His post (enigmatically titled “Fun Number Theory Facts”) revealed that he had found the prime factors of the public key for the 83+ operating system. Initially flabbergasted, the community threw together a BOINC cluster which cracked all the remaining keys in a few weeks without breaking a sweat. Texas Instruments threw a tantrum, lobbing legal threats that were, frankly, 100% bullshit abuses of the DMCA. The Electronic Frontier Foundation intervened on the hobbyists' behalf, explaining to TI that there is nothing illegal about knowing the prime factors of certain integers. The whole thing earned its own Wikipedia article. Today, you can easily find these keys on any enthusiast site, including right here. arTIfice Fairly recently (late 2020), TI decided what everyone really needed was a cold shower, and announced they’d be disabling all this assembly business with a software update for the TI-84+ CE (the newest color calculator), dubiously claiming that this would improve exam security, etc, etc.6 To quote Lionel Debroux: This slam shuts [sic] a golden age of over two decades (!) of native code being officially supported on at least one actively maintained TI graphing calculator. […] Like all true calculator enthusiasts, we have hard feelings about the matter. The community had always been nice to TI - nothing really damaging for TI’s business was ever released over 20+ years! - but a moral barrier has probably been broken today… As an olive branch they offered Python bindings; everyone immediately pointed out that Python is wicked slow in embedded environments and absolutely cannot replicate what native code can do.7 If you’ve read this far, you’ll note this isn’t the first time TI has been a little tone-deaf toward enthusiasts. Enter arTIfice8 - a proper jailbreak for these calculators. You simply install the CabriJr geometry app, and open a special data file with it, and suddenly you’re presented with a menu allowing you to run whatever you like. What’s cool about this is that it’s a jailbreak, not just a sweet hack that uses the hardware. Just like you may be familiar with jailbreaking an iPhone or Xbox, starting from within the sandbox and getting out, this abuses bugs in the wildly complicated CabriJr geometry app (signed and blessed to run by TI) to reenable arbitrary code execution and literally pop a shell or install hooks into the OS.9 The arTIfice exploit is just 927 bytes, and it packs a simple UI and loader in behind the shellcode. Being this small, the underlying exploit is probably the lowest hanging fruit of plenty of zero-days in this and other TI software. So yeah, now exams are secure, or something. Whence from here? For every project I listed, there were ten others that I didn’t. (And if I missed yours, I mean no disrespect!) The breadth and depth of tinkering is staggering: I haven’t even touched the scene for the ARM-based Nspire. There are always challengers to Texas Instruments' entrenchment in high schools; Casio in particular has made some attractive devices. There has been a modest amount of scene releases for Casio calculators as well. The startup Numworks makes calculators based on a very capable STM32F429 microcontroller. Until recently, the Numworks had an open-source operating system and I had half-hoped that it might spark a renaissance of handheld calculators. The hardware is available and pretty nice, but they’ve closed the source code license, so I don’t think it will see any grassroots adoption by the calculator scene. But no matter the platform, the steady stream of bored nerds in high school cannot be quenched, and they will have the support of smart engineers with free time. In the true hacker spirit, I suspect people will continue to push the boundaries of whatever hardware they find in their hands. Further reading Casual readers may wish to browse ticalc.org’s news (which goes back to 1997) for the most interesting news, or spelunk in their massive archives. Or, dive into the phpBB rabbit holes of the community’s forums, some dead and some still thriving! ticalc.org: one part forum, one part news source, three parts massive archive of nearly all software released for any TI calculator Cemetech: fairly formal, moderate amount of chatter but with pretty good signal to noise ratio and with very knowledgeable people. Still very active. Omnimaga: less formal, lots of projects, with a sprawling offtopic section and very elaborate forum signatures. Datamath: a large “online museum” with hardware teardowns, reverse engineering, and documentation of nearly every calculator ever released. TI-Planet: a French forum that was linked a lot, with a large downloads section and active community; unfortunately I don’t know much about it firsthand because I don’t speak French. calc.org (Wayback link): also used to be called Dimension-TI. A now-defunct forum and download host. Unfortunately it was before my time and I don’t know much about it. Oh, and other calculator nerds: keep me honest. Corrections welcome by comment or email. A popular hobbyist project is to build your own homebrew z80 computer, precisely because it is so simple that you can understand the foundations of the system. My favorite is probably Jim MacAurthur’s beautiful minimal z80 in a laser cut case with a hand crank to single-step instructions! ↩︎ The z80 generally made life pretty difficult for people who attempted to make a good C compiler for it. I believe I have the only remaining copy of HITECH-C for DOS, which was actually a decent C compiler. As I said, more on that in a later article. ↩︎ Your fame results may vary. Seemed this way to me, anyway. ↩︎ It’s good enough to have garnered at least a few fan ports to ZX Spectrum and some old Soviet computers. ↩︎ Wow, the Axe user manual takes me back—it was my first exposure to xkcd! ↩︎ Feels like they got advice from the Playstation Linux team. ↩︎ As far as I can tell, they are likely using MicroPython—implementing a Python from scratch would be a huge task—but I can’t find any MIT license disclosure. ↩︎ Holy moly does this page cause my CPU fans to spin… ↩︎ I’ll point out that all these hooks were already possible and remain supported by the OS itself; it’s how apps like Inequalz (which graphs inequalities) work - they hook the graph equation screens and the drawing routines, using official APIs. ↩︎",
    "author": "George Hilliard",
    "published": "Wed, 06 Oct 2021 08:42:00 -0500",
    "image": "https://www.thirtythreeforty.net/posts/2021/10/ti-calculator-innovation/1996.png",
    "source": "https://www.thirtythreeforty.net/posts/index.xml",
    "categories": null
  },
  {
    "id": "416b7109-f495-4db4-aedc-189f149440ee",
    "title": "Hacking Reolink cameras for fun and profit",
    "link": "https://www.thirtythreeforty.net/posts/2020/05/hacking-reolink-cameras-for-fun-and-profit/",
    "description": "Table of Contents Sniffing traffic Dissecting traffic with Wireshark Inspecting the firmware Why doesn’t this camera support RTSP? Pwning the camera Low hanging fruit first Getting root Reversing the protocol Static analysis with Ghidra Strings: a bounty of information The Charlie Scrambler Dynamic analysis with gdb Feeding the watchdog Charlie strikes again A brief history of the Baichuan protocol Neolink: a new client Getting the video data Wrap it in maroon and white, er, RTSP Testing it with Blue Iris Future work Way back in late 2019, I dissected a Reolink B800 IP camera to demonstrate the various parts of an embedded Linux system. It’s fairly nice hardware, actually—it has a 4K video sensor, a microphone, power over Ethernet, and is nominally waterproof. And yes, it runs Linux. It came in a “kit” of six cameras and an NVR (a dedicated recording box that also powers the cameras). Unfortunately, the NVR is pretty anemic: it’s clearly an existing model with slight changes to support 4K cameras, and it struggles to support more than one viewer at a time. However, I bought these cameras because I believed they supported open standards such as ONVIF, so I’d just swap the NVR for a copy of Blue Iris running on my server. At the time, the Reolink support page clearly indicated that all of their non-battery-powered cameras supported RTSP. After the system was installed, it became apparent that the cameras did not in fact support RTSP—the only port open on them was port 9000. Then, barely outside my return window, Reolink updated their support page to say that the cameras would only work with their 8-channel NVR or proprietary viewer apps. This was, in the immortal words of Bill and Ted, bogus. Heinous. Most non-triumphant. Bogus enough that I decided to pwn the camera, reverse engineer the protocol, and write my own software to get the video stream. The end result is a new piece of open-source software called Neolink, which allows Blue Iris, Shinobi, or other NVR software to receive video from unmodified Reolink cameras. Here’s how I did it. Sniffing traffic As a first step, I fired up Wireshark and captured traffic between the camera and its official Reolink PC client1. The only thing that jumped out to me was the appearance of a sync word at the beginning of each packet, 0xf0debc0a. (In little endian, this is 0x0abcdef0.) On a lark, I Googled this, and actually found a project on GitHub from 2015 which was attempting to retrieve data from Swann cameras! A quick look at the code told me that although they share the sync word and packet header, the protocols for my camera and these older cameras were very different. The payload appeared to be encrypted in my captures. Furthermore, the code wouldn’t even run due to some questionable pointer juggling. Time to extract what I could—the header layout was correct—and move on. Dissecting traffic with Wireshark Always, always spend time developing debug or analysis tools. In my experience, such tools immediately pay back your time investment by a factor of 4 or more. With what I knew, I was able to write a “Baichuan” protocol dissector for Wireshark using Mika’s awesome tutorial. This was easy and fun: Wireshark lets you write dissectors in Lua (disclaimer: your definition of fun may vary). Now Wireshark could show me the payload lengths and message IDs. Not much, but it was a start. Inspecting the firmware In order to figure out whatever encryption and/or obfuscation the protocol was using, I planned to reverse engineer the firmware. I felt pretty confident that the underlying video was using a well-known protocol (especially since the camera seemed to have dedicated video encoding hardware). So “all” I’d have to do is reverse engineer the rest of the protocol. Easy peasy, right? Why doesn’t this camera support RTSP? As a quick aside, it’s natural to wonder why this camera doesn’t support RTSP and/or ONVIF. After all, plenty of other Reolink cameras do. Because I’d like to give them the benefit of the doubt, I’ll propose the possibility that Reolink ran out of storage on this camera and had to axe some features. After all, a 16MB flash chip would cost a whole 20 cents extra. This is just a cost-saving measure and definitely not vendor lock-in, hmmm? Pwning the camera Right, onward. With the protocol not immediately accessible, it was time to crack this camera open. My previous disassembly of the camera has already indicated that it uses SPI NOR flash—bog standard for a small Linux system like this. I was wanting to try out a really neat little SOIC socket I had discovered and ordered on Taobao a little while back. I desoldered the flash and soldered on a socket instead. The camera was now pwned, permanently—there was nothing I could do to brick it (I could always just reflash it with flashrom) and there was nothing Reolink could do to stop me from running my own code on it (since I had control of the first instruction executed, if need be2). With the flash now conveniently socketed, I dumped it and used binwalk to inspect the layout. Here’s the flash layout—the nice round byte offsets that engineers tend to pick.3 Bootloader, Linux uImage, squashfs rootfs, and JFFS2 persistent partition. DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 67266 0x106C2 eCos RTOS string reference 1769472 0x1B0000 uImage header 3604480 0x370000 Squashfs filesystem, little endian 7798784 0x770000 JFFS2 filesystem, little endian This also lines up nicely with this visualization of the flash image, made by a neat little tool called BinVis. binwalk also conveniently offers to unpack the filesystems it finds. Low hanging fruit first My first order of business was to find the actual camera binary. It was pretty easy to find; it’s sitting in its own directory at /mnt/app/dvr. The dvr binary also had an accompanying dvr.xml, which looked like a configuration file. A little grepping later, and… sure enough, here were the magic words ONVIF and RTSP! # .... push_server=\"pushx.reolink.com\" push_server_port=\"9501\" support_3gnet=\"0\" support_intelligence=\"0\" support_smartsearch=\"0\" support_onvif=\"0\" support_rtsp=\"0\" support_bc=\"1\" support_3dnr_config_interface=\"1\" default_3dnr_config=\"1\" # .... I suspected these were simply feature flags dictating to the software which features to enable. What if I just changed these zeros to ones? Rebuilding the rootfs wasn’t quite as easy as extracting it, but I cobbled together a command through trial and error. I wanted to get the squashfs format exactly the same as the one reported by binwalk, so that I could be sure that the stock kernel would mount it. Since I was mostly flying blind without a UART console, I didn’t want any trouble. $ mksquashfs new-squashfs-root/ new-squashfs.img -comp xz -b 262144 -all-root -noappend $ dd if=new-squashfs.img of=pwned.bin bs=1 seek=$((0x370000)) conv=notrunc $ flashrom -p ft2232_spi:type=2232H,port=A -w pwned.bin Alas, it was not to be this easy. The camera exhibited a remarkable lack of behavioral reform: no new ports opened, nothing. For comparison, I downloaded and unpacked a firmware update for a different Reolink camera that did support RTSP. The dvr binary for that camera was nearly 8 megabytes, while my victim’s was only a little over 3. Clearly, the engineers compiled out the unneeded bits. Getting root Fine. If Reolink has compiled the extra functionality out, then the least the camera could do is give me a shell. While I was here, I decided I’d make some, ahem, extra modifications. A quick Google did not yield prebuilt binaries of the tools I was looking for. Instead, I checked out a fresh copy of Buildroot and quickly set it up for a baseline MIPS configuration with static linking, then asked for copies of gdbserver, busybox with all the fixin’s, and strace: $ make qemu_mips32r2el_malta_defconfig $ make menuconfig # (with appropriate edits made) $ make busybox gdb strace Thirty minutes later, I had my tools. In the rootfs tree that binwalk had extracted, there’s the usual assortment of startup scripts in /etc/init.d. With my tricked-out Busybox copied to /bin, and a symlink created named telnetd, I added an extra line to one of the startup scripts: # Get a shell /bin/telnetd -l /bin/sh Fingers crossed, I reinstalled the flash and powered the camera. $ telnet 192.168.1.187 Trying 192.168.1.187... Connected to 192.168.1.187. Escape character is '^]'. /mnt/app # Mwahahaha. Reversing the protocol What to do with my newfound power? I planned to start with a static analysis of the firmware, first reverse engineering the encryption scheme. If I got stuck, I could interrogate the camera binary as it executed. Once I could undo the encryption, I’d be able to see what the actual protocol was like. Static analysis with Ghidra The traditional hobbyist tool for static analysis, IDA free edition, is no good here, because my binary is for MIPS, which the free IDA refuses to disassemble. Instead, the tool of choice is Ghidra, an astoundingly good open-source reverse engineering suite released by the NSA. Now, normally saying “I ran a binary the NSA gave me” will get you laughed out of the room. But Ghidra has been open source for a while now, so I feel reasonably safe installing it from the Arch Linux repository. If this website looks like it’s made by a government agency, it’s because it is. Ghidra is awesome. Seriously, this is a piece of software you’d have to pay $10000 for, and it should be your go-to for reverse engineering work. In addition to the disassembler and analyzer, Ghidra also includes a decompiler, which prints pseudo-C code instead of leaving you digging through MIPS assembly. It also re-analyzes in realtime as you annotate function arguments with type information and names. These features easily cut my time spent reverse engineering in half. So, armed with Ghidra and a false sense of confidence stemming from never having done any reverse engineering before, I went spelunking in the Baichuan binaries. Strings: a bounty of information There’s a reason most reverse engineers start by examining the strings in an unknown binary—it’s a technique that works. In my case, checking for strings in the desktop client and the firmware’s server yielded debug print statements, function names (which Ghidra automatically annotated), and a couple other oddball strings that I’ll talk about in a minute. Both codebases were clearly built around a shared proprietary “BCSDK” library. Searching for crypt yielded a couple of candidate functions that purported to perform encryption: Well, no RSA here, or anything resembling “real” encryption, except AES. (And I could find any AES keys embedded in the app in short order.) But what’s this string stuck nonchalantly in the middle of the others? That’s not a function name. I hit find-references and read the code that uses it. The Charlie Scrambler Ghidra took me to this gem of a function: Technically, this is the decryption function; there’s another one that works in reverse. It only takes a second to understand what’s going on here: the “encryption” scheme is simply: XOR the data with the string Charlie is the designer of P2P!!, then mix up the bytes. This isn’t encryption. This is just a scrambler. Bravo, Charlie, your “design” is permanently encoded in this protocol for all time. Don’t roll your own crypto, kids. Unfortunately, the Charlie Scrambler is only called from UDP functions (see the cross-reference at the bottom of the Ghidra window). This meant it wasn’t my pigeon; my camera uses TCP. At this point I had no idea which of the other “encryption” functions were the right one for my camera, so it was time to bring out my next weapon. Dynamic analysis with gdb With my shell access waiting, my next move was to attach a debugger and control the dvr program remotely from my workstation using my cross-compiled gdbserver and strace tools. My Busybox included an FTP server and a TCP wrapper: $ /bin/busybox tcpsvd -vE 0.0.0.0 21 ftpd / -w -A tcpsvd: listening on 0.0.0.0:21 With this setup I could push whatever tools I wanted to the camera filesystem, even though I hadn’t packed them into the firmware. I went through this process manually about twice before it became really tedious. This is the kind of thing it’s possible to automate with expect, a Tcl (!) program that pretends to be a console user. I scripted these interactions, which reduced the connect, tool push, and gdb setup to a simple: $ ./start-debug.exp An added benefit of this setup is that I could stick whatever gdb commands I wanted to run at startup at the end of the script, instead of writing a dedicated GDB script. These dynamic printf commands simply print in the GDB console when the camera hits a breakpoint, helpful for knowing which functions are being called without halting the camera: send_gdb \"dprintf *0x478908, \\\"_Nets_Without_Password_Login_V20\\\\n\\\"\" send_gdb \"dprintf *0x4780ac, \\\"FUN_004780ac\\\\n\\\"\" send_gdb \"dprintf *0x6310f0, \\\"Md5_string_encrypt\\\\n\\\"\" Feeding the watchdog After attaching and halting the dvr daemon, the camera promptly crashed and reset. After some quick investigation, the camera had a watchdog enabled at /dev/watchdog—a very common setup for embedded devices. I was doing open heart surgery on this software—I didn’t need some two-bit peripheral wandering by and hitting it with an AED! Busybox ships with a watchdog minder, so I simply fired it up: $ watchdog /dev/watchdog Problem solved. Charlie strikes again After my breakpoint was hit, I knew which encryption function I was dealing with: Nets_XmlEncryption. This was immediately good news, because after figuring out the encryption, I was likely dealing with nice ordinary XML, not some crazy half-baked bag of C structs. I took a look at the decompiled function in question in Ghidra, annotating as I went. Sure did look familiar… No engineering lessons had been learned during the redesign, and the influence of Charlie was alive and well! Here is the Charlie Scrambler back in force, but without the mixing step, and with a shorter key. Fine, whatever. Implementing the Scrambler in my Wireshark dissector didn’t take very long—although I was briefly baffled by a header of varying length depending on the message type. Once implemented, I was greeted with this glorious sight: Again, I highly recommend writing plugins for Wireshark. You can do it in Lua (or C if you’re that hardcore), and it only takes a couple hours to have a really nice debug tool. A brief history of the Baichuan protocol I won’t bore you with the gory details, but I’ll summarize my findings. The Baichuan protocol has had several iterations over the years. The very oldest seem to be UDP-based, using a proprietary SDK called TUTK, illicit copies of which can conveniently be found on GitHub. This is no longer used; it’s not even present in the camera code. The next variant is indeed a plaintext “bag of structs”, which consists of a header and a body specified by a message ID in the header. This “legacy variant” is briefly used on the B800 so that both clients can negotiate an upgrade to the “modern variant,” which is the scrambled XML-based scheme you see above. On top of this, modern messages can optionally have a payload. A certain XML message switches the entire message ID into “binary mode,” which supplies a raw data stream in subsequent messages. When the client sends a video-start command, the camera replies with a binary stream containing raw H.265 video. On top of that, the payload can also be more encrypted XML, separate from the main XML for some reason. On the whole, it’s really quite a pain to parse. Neolink: a new client Once my Wireshark dissector was humming along, it was time to write a new client. I wanted my software to be fast, high-level, and correct, since it would be part of a security system setup. That’s right: I rewrote Reolink’s software in Rust. Well, not exactly. Neolink is a new client completely from scratch. It speaks the same Baichuan protocol as the camera, and it extracts the video and forwards it to another real NVR client like Blue Iris over RTSP. The parsing code is somewhat hairy4, but other than that, it’s straightforward. Getting the video data Here’s all the client is capable of right now. It’s pretty easy to read if you want to look at the source. Send a legacy login message to get the camera to “upgrade” to modern messages. Note: this uses plain MD5 encryption for your password, another, um, interesting design choice. Use a password that isn’t in a rainbow table! Send a modern login message to actually authenticate to the camera. Send a start video request: let start_video = Bc::new_from_xml( BcMeta { msg_id: MSG_ID_VIDEO, client_idx: 0, encrypted: true, class: 0x6414, }, BcXml { preview: Some(Preview { version: xml_ver(), channel_id: 0, handle: 0, stream_type: \"mainStream\".to_string(), }), ..Default::default() }); sub_video.send(start_video)?; Spit out the binary data when it’s received: loop { let msg = sub_video.rx.recv_timeout(self.rx_timeout)?; if let BcBody::ModernMsg(ModernMsg { binary: Some(binary), .. }) = msg.body { data_out.write_all(binary.as_slice())?; } } Wrap it in maroon and white, er, RTSP5 For this part of the program I reached for Gstreamer, which ships with an RTSP server. Gstreamer is… complex. However, their examples are fantastic; they even provided a sample RTSP server in Rust! The general approach for feeding Gstreamer data from an arbitrary part of your program is to use a block called an appsrc. This lets you get a callback whenever Gstreamer wants data, or alternatively just push data whenever you have some and let Gstreamer handle scheduling it. The latter approach is the one I went with here, since the camera doesn’t wait for a signal to send video data. I wrapped everything in a Gstreamer pipeline: appsrc name=baichuan is-live=true emit-signals=false max-bytes=0 ! h265parse ! rtph265pay name=pay0 Testing it with Blue Iris The moment of truth arrived… could Blue Iris connect to my RTSP server and actually display the video? You bet. I present… me! In glorious 4K! Future work I’ve been soak-testing Neolink for a while now and I think it’s pretty stable. Going forward I’m packaging it up as a real Windows service (not a command line program) to run alongside Blue Iris on my server. Go look at it and download it for yourself! I’m also interested in getting Neolink working with other “NVR only” Reolink cameras, of which there are quite a few. So far I haven’t purchased any other hardware, so if you have one of these cameras, please get in touch so we can test it. It might Just Work out of the box. Port scan your cameras! If they have port 9000 available, chances are good that they speak the Baichuan protocol. This project was a “just right” intro to reverse engineering. Low-security systems like these let you teach yourself the principles without actively trying to thwart reverse engineering. I taught myself a lot, and I hope it provides a lot of value for folks who own these cameras. Finally, some shameless self-promotion: embedded Linux systems are actually pretty approachable! If you’d like to learn how to do this kind of thing, you might be interested in my Mastering Embedded Linux series, designed to help you become an expert in hacking low-cost embedded Linux systems just like this camera. If you enjoyed this, you can subscribe to my blog updates, or leave a comment below. Thanks for reading! The Reolink support forums always claim that their pages were “updated 8 hours ago.” This is obvious nonsense. They do update fairly frequently, but not constantly. ↩︎ This is exactly the point of secure boot schemes, where the immutable boot ROM validates code against immutable encryption keys, preventing tampering. Needless to say, this camera does not implement such niceties. ↩︎ binwalk also turns up a bunch of false positives, which are easy to ignore because they don’t have nice round offsets. ↩︎ Seriously, having packet decode be stateful is just ridiculous. ↩︎ Yes, I’m a proud Mississippi State University bulldog. You too can attend and become a computer engineer! ↩︎",
    "author": "George Hilliard",
    "published": "Sat, 16 May 2020 17:40:00 -0500",
    "image": "https://www.thirtythreeforty.net/posts/2020/05/hacking-reolink-cameras-for-fun-and-profit/b800.jpg",
    "source": "https://www.thirtythreeforty.net/posts/index.xml",
    "categories": null
  },
  {
    "id": "ba15e1e2-cf4f-42f3-b3ee-8c19de780369",
    "title": "Mastering Embedded Linux, Part 5: Platform Daemons",
    "link": "https://www.thirtythreeforty.net/posts/2020/05/mastering-embedded-linux-part-5-platform-daemons/",
    "description": "Table of Contents Platform daemons A GPIO platform daemon GPIO access in Linux Linux GPIO in Rust Embedded web servers in Rust Exercising the code Ideas for improvement Key takeaways Recommended reading Coming up Subscribe and comment This is the fifth part of the Mastering Embedded Linux series, which is designed to help you become an expert at developing low-cost, customized embedded Linux systems. Previously, I provided an overview of the embedded Linux landscape, then dove straight into tutorials for compiling Raspberry Pi firmware using Buildroot. In this article and the next, I’m discussing how to apply these new Buildroot skills to begin packaging custom software into the firmware image. To do this, this article will discuss my concept of a “platform daemon” and implement a simple example of one in Rust. Then in Part 6, I’ll walk through the steps of writing a package to port this software to Buildroot. Platform daemons What’s a platform daemon? Up until now, most of this series has largely used “off the shelf” embedded software, including the Buildroot distribution itself and the individual software packages in it. Independent of this common library of software, every embedded system has its own “secret sauce”—usually software written specifically for that system. One such common pattern is a piece of software that picks up where the kernel leaves off: even if the kernel provides drivers to interact with peripherals, it doesn’t help with getting data moved between peripherals. For example, if you have an analog/digital converter that needs to report its readings over USB, the kernel lets userland talk to both, but it’s up to userland to read from the ADC and write to USB. Such software is target-specific enough that you simply can’t provide a generic solution that’s shipped with Buildroot. This scenario typically results in a piece of software I call the platform daemon.1 This daemon is bespoke software written for a particular target or family of targets—a “platform,” if you will. Often, it even contains device driver code for custom peripherals, even though such code really ought to go in the kernel as a module. Overall, the platform daemon contains intimate knowledge of the embedded system, it manages the state of all peripherals as a holistic unified entity, and it knows how to route and translate data coming and going from the system. In microcontrollers, this would just be “firmware”—a separate RTOS task that waits for events coming from device drivers. But in Linux, this can typically be implemented as low-level userland code. This is great because you can often write and debug the daemon on your computer and then port it to the hardware. (Sound familiar?) It also means that the system is better-behaved, because bugs in userland don’t crash the entire system. A GPIO platform daemon For this article, I’ve written a proof-of-concept platform daemon in Rust. This daemon provides direct HTTP access to GPIO pins. Usually, there are some more abstractions around this, like “system mode” or “peripheral enable,” but since this is a proof of concept, I’ll dispense with the extra work. A quick aside: If you’re a systems programmer who hasn’t yet run across Rust, I encourage you to take a look at it. It is a systems language that eliminates entire classes of bugs at compile time. It’s mature enough to use in production, but the language is still innovating rapidly and cares very deeply about getting it right the first time. Learning Rust will make you a better C/C++ programmer. There, I’m done evangelizing. The source code of the daemon is available on GitHub, or you can follow along below for the salient points. GPIO access in Linux The kernel provides userland programs with direct access to GPIOs via dedicated APIs. As with most kernel topics, you can read all about these interfaces in the excellent kernel documentation, which give a kernel-side view of how GPIOs are handled. This model extends pretty well to the userland API. Here are the Cliff’s notes. Linux provides a GPIO character device in /dev for applications to read/write to control GPIO pins. There is one character device named after each GPIO controller peripheral present in the system; the exact names depend on the system’s device tree. The upshot is that a given physical pin on the SoC is known to userland as a [peripheral, pin number] pair. Userland can use the device file to command the GPIO’s input/output state, read its high/low state, and if it is an “output,” command its high/low drive.2 Under the hood, this is done by sending special ioctl commands to this file, but you don’t have to worry about the gory details. There are lots of command-line tools that help handle this, including the kernel’s own libgpiod. (And yes, this is packaged in Buildroot!) There are also many different language bindings that make this API nice to use directly from custom programs, which is what I’ll be doing here. Note You may have also heard about the older /sys/class/gpio kernel ABI for manipulating GPIOs. This has been deprecated for many years now and will be removed after 2020. However, it is still present in many embedded systems with older kernels, and you’ll likely see it pop up in discussions from time to time. In this system, I’ll be using the modern character device API. Linux GPIO in Rust There is a dedicated Rust wrapper for the Linux GPIO system called gpio-cdev. This library makes it pretty easy to toggle a GPIO pin given a GPIO character device name and a pin number within that device. To use the library, I’ll write a quick wrapper that maps well to REST API calls. I’d like to allow the user to set the mode to “input” or “output.” If the user chooses “output,” they should be able to send the value. Here’s an enum type encapsulating this: #[derive(Serialize,Deserialize,Debug)] enum GpioCmd { In, Out { value: bool, }, } An important detail of the chardev GPIO API is that the file descriptor must be kept open by the program using the GPIO. If it is closed, all the GPIO lines will be released. So, I’ll create a map of [chip, pin] to lines, then cache the GPIO line objects in there. This cache will last as long as the daemon runs. type GpioPath = (String, u32); async fn main() { let active_pins = BTreeMap::\u003cGpioPath, Chip\u003e::new(); let shared_pins_state = Arc::new(RwLock::new(active_pins)); Now, the user specifies a pin using the previously-discussed [peripheral, pin number] pair, plus the state they’d like to command it to. This function needs a copy of the Arc shared pointer we created earlier: type GpioModifyResult = Result\u003c(), gpio_cdev::errors::Error\u003e; fn gpio_modify(chip: String, pin: u32, pins: Arc\u003cRwLock\u003cBTreeMap\u003cGpioPath, Chip\u003e\u003e\u003e, body: GpioCmd) -\u003e GpioModifyResult { // Lock the global map of pins so we can have exclusive access // to the mut methods on it and its Chips. let mut shared_pins = pins.write().unwrap(); let mut our_pin_entry = shared_pins.entry((chip.clone(), pin)); let chipdev = match our_pin_entry { Occupied(ref mut entry) =\u003e entry.get_mut(), Vacant(entry) =\u003e entry.insert(Chip::new(format!(\"/dev/{}\", chip))?) }; let line = chipdev.get_line(pin)?; Now, handle the GpioCmd. This function returns “nothing” () on success, because this is a “set” operation. match body { GpioCmd::Out { value } =\u003e { line.request(LineRequestFlags::OUTPUT, 0, \"http-gpio\")? // set_value returns () on success, which is what we need .set_value(value as u8) } GpioCmd::In =\u003e { line.request(LineRequestFlags::INPUT, 0, \"http-gpio\")?; // Set-to-input successful; we can ignore the returned LineHandle Ok(()) } } } Now I can move on to wrapping this in a web server. Embedded web servers in Rust There are several web server frameworks available for Rust, but the one I settled on is called Warp. There are several reasons I selected Warp: Runs on stable Rust: This rules out the otherwise very nice-looking Rocket (as of this writing in May 2020). Stable Rust is important to me because Rust provides extremely strong stability guarantees that make my life easier as a maintainer. Comparatively lightweight dependency list: Embedded systems don’t have the horsepower of a cloud server—in particular, they’re pretty light on CPU and memory. Selecting a small web framework helps ensure that compile times stay low and that the daemon itself remains lightweight at runtime. Because everything compiles down to native code, I don’t anticipate any speed problems.3 Extremely straightforward setup: When you’re writing a platform daemon, typically you’re more concerned about talking to the hardware and managing the system than you are using the latest whiz-bang web framework. Warp makes it trivial to have the webserver call your code. The only tricky bit is passing in the cache along with the request: let with_pins_state = warp::any().map(move || shared_pins_state.clone()); // POST /gpio/chipname/pinnum -\u003e String let gpio_modify = warp::post() .and(warp::path!(\"gpio\" / String / u32)) .and(with_pins_state) .and(warp::body::json()) .map(gpio_modify) .map(as_reply); My as_reply helper transforms the Result into a reply for Warp: fn as_reply(value: GpioModifyResult) -\u003e Box\u003cdyn warp::Reply\u003e { // Return if success, or stringify the error if not match value { Ok(_) =\u003e Box::new(\"Success\"), Err(err) =\u003e Box::new( warp::reply::with_status(err.to_string(), StatusCode::INTERNAL_SERVER_ERROR)) } } Boom, done. A simple platform daemon in about 70 lines of Rust. Exercising the code Since I’m wearing my “developer hat,” I’ll try to test on my workstation, without cross-compiling just yet. Linux provides lots of “dummy” drivers to simulate actual hardware, and GPIO is no exception. The gpio-mockup kernel module provides the ABI but doesn’t actually use any hardware. Each pair of arguments in gpio_mockup_ranges describes how many pins should be attached to each dummy GPIO peripheral. The new peripherals appear in /dev/ as expected: # modprobe gpio-mockup gpio_mockup_ranges=-1,32,-1,32 # ls -lh /dev/gpio* crw------- 1 root root 254, 0 Apr 7 22:07 /dev/gpiochip0 crw------- 1 root root 254, 1 Apr 7 22:07 /dev/gpiochip1 Here’s how to call the daemon using httpie.4 $ http POST localhost:3030/gpio/gpiochip0/2 Out:='{\"value\": true}' HTTP/1.1 200 OK content-length: 7 content-type: text/plain; charset=utf-8 date: Wed, 08 Apr 2020 03:19:41 GMT Success This POSTs the following JSON to /gpio/gpiochip0/2, where Serde automatically translates it to the Rust type and Warp passes it to the callback: { \"Out\": { \"value\": true } } Malformed requests are rejected automatically by the framework, and if anything goes wrong while setting the pin, as_reply sends back the error message. Overall, I am pleased with the proof of concept—it is concise, but thanks to the underlying libraries, it is largely correct and well-behaved. Again, I encourage you to study the complete source code on GitHub and let me know if you have feedback – either via email, as a GitHub issue, or with the fancy new comments section I’ve added. Ideas for improvement Every platform daemon I’ve dealt with has ended up needing a small configuration file, either because I wanted to target multiple boards at once, or because I wanted to make my own life easier while I wrote the software. To facilitate this, a small YAML or INI-formatted configuration file in /etc could tell the platform daemon which GPIO character device it ought to use, or provide string aliases for some of the pins so clients could just POST /gpio/yellow-led.5 If I were to implement this, I’d make sure to provide a sample config file in the http-gpio README, then provide a suitable configuration file in my target’s overlay directory, just like the configuration files for other software in the last article. Key takeaways If you’re doing anything clever with your embedded system, you’ll eventually wind up with a platform daemon of some kind. Wear multiple hats! Think about what would make the maintainer’s job easier while you’re writing custom software—chances are, you are the maintainer, and you’ll save yourself work down the road. Recommended reading LWN is an extremely well-written news site that regularly delivers in-depth technical articles about the Linux kernel and various free software projects surrounding it. The articles are free to read after a period of time, and you can also buy a subscription to read them as soon as they come out. It’s well worth it—the articles often include code samples, historical notes, and a great comments section about whatever they’re writing about. For example, here’s a pair of LWN articles about Linux GPIO: GPIO in the Kernel: an introduction GPIO in the Kernel: future directions This excellent article gives a good command-line tutorial of character device GPIO control. Hackaday’s Linux-Fu series has in-depth discussion of various technical userland topics, not just GPIOs. Many of these will come in handy when you start to write your own daemon code. Coming up In the next article I’ll finish the ongoing Buildroot theme by packaging http-gpio for the Raspberry Pi I’ve been working with. This will include some “best practices” for your own packages. I’ll also have a deeper discussion of startup scripts and the init system, which I’ll use to start the daemon automatically. Subscribe and comment As always, you can subscribe to my blog for updates. Please also leave a comment below if you have a question or want to point something out that I’ve overlooked. I appreciate all the communication I get. Thanks for reading! I initially called these “system daemons” but that became a non-starter after the proliferation of systemd. ↩︎ This slightly glosses over the pin controller, another peripheral, separate from the GPIO peripheral, which is responsible for steering a pin toward the GPIO, SPI, MMC, or other peripheral. This complication is handled for you when you use the userland GPIO API. Later on, I’ll discuss this in more detail when writing a device tree. ↩︎ Quick war story: at my last job, I foolishly selected Python for a platform daemon that did not need any sort of strong performance guarantees. Other developers began adding functionality using dependencies like Flask. These heavy frameworks combined with Python’s anemic performance slowed the platform daemon’s startup time to nearly 45 seconds—embarrassingly slow, even without hard performance requirements. It took more work to speed up the Python than it would have to have written the daemon in Go or Rust to begin with. I like Python, but don’t use it for platform daemons. ↩︎ httpie is a better curl (pronounced aitch-tee-tee-pie, command named http—go figure). In the very common case of passing JSON values in a POST body, it saves so much typing, and it looks readable in documentation. ↩︎ It’s actually possible to provide GPIO names in the device tree, which is the “hardware definition” for Linux. Doing the naming there would provide the abstraction for all of userland to use. I’d prefer that approach for the specific case of naming GPIOs, but of course in a real platform daemon you’d have more interesting configuration variables. ↩︎",
    "author": "George Hilliard",
    "published": "Sat, 02 May 2020 18:30:00 -0500",
    "image": "https://www.google-analytics.com/collect?v=1\u0026t=pageview\u0026tid=UA-144893958-1\u0026aip=1\u0026cid=84aa27b7-bf28-4e6e-9d0d-edf118791d2e\u0026cm=rss\u0026cs=rss\u0026ck=\u0026dt=Mastering Embedded Linux, Part 5: Platform Daemons\u0026dl=https://www.thirtythreeforty.net//posts/2020/05/mastering-embedded-linux-part-5-platform-daemons/",
    "source": "https://www.thirtythreeforty.net/posts/index.xml",
    "categories": null
  },
  {
    "id": "aaa1d560-8897-4641-bb56-9842abb41701",
    "title": "Mastering Embedded Linux, Part 4: Adding Features",
    "link": "https://www.thirtythreeforty.net/posts/2020/03/mastering-embedded-linux-part-4-adding-features/",
    "description": "Table of Contents Workflow for new features How to implement an access point Configuring the software Startup scripts Porting the configuration to Buildroot Implementing it Side lesson: How to work menuconfig Enable ccache Install the daemons and firmware Create the overlay directory Recompile the image, flash and burn Side lesson: re-doing things in Buildroot Testing Commit that mess How to experiment on the fly Key points Recommended reading Coming up next Subscribe This is the fourth part of the Mastering Embedded Linux series, which is designed to help you become an expert at developing low-cost custom embedded Linux systems. Continuing the ongoing theme of developing customized firmware, I’ll be discussing how to add high-level “features” to your firmware image by taking off-the-shelf open source software, configuring it, and integrating it into your system. As an example of this workflow, we’ll be taking the Raspberry Pi Zero W firmware, which we built from source code in Part 3, and modifying it to implement a wireless access point. To follow along, you’ll need the hardware list from Part 2. The method I explain is broadly applicable to any firmware features you might want to add to your custom embedded system. First, I’ll identify the software we intend to use and paint a broad picture of how the new firmware feature will work. Then, we’ll actually implement it in the firmware. Workflow for new features The full workflow for a new firmware feature looks like the following checklist. You’ll notice that it isn’t so different from other software engineering activities. Plan what the feature looks like to the user and which specific things the system should do. Do you need to handle a new piece of hardware? How does the new feature/subsystem handle errors? Select the software you need to accomplish this list of behaviors. You might need to enable new kernel drivers, new daemons, or even write a couple scripts to tie everything together. Configure the selected software for your specific use case, since good software is almost certainly more general than your exact vision. Test your changes by booting with the new code. Inspect the system. Does it work? If not, debug; lather, rinse, and repeat. If you’re part of a professional engineering team, you might write automated integration tests; if you’re just hacking on the weekend, you might not.1 Finalize your changes by checking them into source control. How to implement an access point The goal is to have the Pi (the “target”) function similarly to a normal Wi-Fi router: on startup, the Pi should automatically create a Wi-Fi access point. It should also automatically assign an IP address to clients using DHCP. This should happen without any user interaction or configuration of the device.2 To accomplish this, this “firmware feature” actually needs two daemons and some additional firmware for the Wi-Fi chip.3 We’ll use the well-respected combination of hostapd and dnsmasq to do the userland work, and install the firmware that’s already packaged. hostapd is responsible for creating the host access point that other devices can join. It talks to the Wi-Fi API provided by the kernel to set the hardware up as a host; it chooses the Wi-Fi channel and sets the security. Then, it manages all the events and network traffic that are associated with being a host—things like connect/disconnect events. To keep things simple, we’ll just use a simple 2.4GHz open access point. dnsmasq will assign IP addresses via DHCP. When client devices connect, they expect to be assigned an IP address by the router. Again keeping things simple, we’ll assign an IPv4 address in the 10.33.40.0/24 range (which I have selected from thin air). The target itself needs to be statically assigned an IP address so that AP clients can route traffic to it; we’ll use 10.33.40.1 for the wlan0 interface. Our current Buildroot defconfig uses /etc/network/interfaces (not systemd’s networkd), so we’ll have to add a couple lines to that file. This configuration will be baked into the image, so you can burn the firmware and the system will start up ready to go, with no manual steps needed. Configuring the software Let’s go ahead and write the configuration files for these programs. I’ve shamelessly cribbed from other howtos and documentation—this isn’t university!4 # dnsmasq.conf interface=wlan0 # Serve addresses in 10.33.40.{10-200}, subnet /24, with a 24-hour lease dhcp-range=10.33.40.10,10.33.40.200,255.255.255.0,24h # hostapd.conf interface=wlan0 # Kernel driver; most modern drivers use nl80211 driver=nl80211 # The AP \"friendly name\"; change to anything you like ssid=MasteringEmbeddedLinux # Use 802.11g, not the glacially-slow b hw_mode=g # Arbitrarily choose radio channel from 1, 6, or 11, the only useful 2.4GHz ones channel=6 Buildroot automatically creates the ifupdown configuration and populates it with a quick configuration to be a DHCP client on eth0. Since the Pi Zero W doesn’t have an Ethernet port, we’ll just overwrite it with our own: # /etc/network/interfaces auto wlan0 iface wlan0 inet static address 10.33.40.1 netmask 255.255.255.0 We are able to write these now because nothing about them is specific to Buildroot. Note At this point, you could actually install these programs on your computer from your distribution and use these configuration files to test everything. This is often a viable approach, because you can iterate faster on your workstation than you can on the target. (Similarly, writing and packaging embedded Linux software should be considered separate tasks; developers iterate much faster with their beefy workstations.) Startup scripts If you log into the firmware image from Part 3, you might notice that ip link doesn’t mention wlan0. That’s because the Wi-Fi isn’t set up by the existing Buildroot firmware. At boot, we’ll need to load the kernel module that serves as the driver for the Wi-Fi chip.5 (Also, for reasons unknown, the Buildroot hostapd package doesn’t include a startup script, so we’ll add one.) The current Buildroot configuration is using init scripts, which I’ll cover in much more detail in Part 5. For now, all you need to know is that executable files placed in /etc/init.d/ are started in alphabetical order. It’s customary to start them with S and a number, to turn alphabetical order into numerical order. Since we want to load the kernel module first and start hostapd last, we’ll call them S02modules and S90hostapd. Here’s the module loader. I’m being really lazy here: #!/bin/sh /sbin/modprobe brcmfmac And here’s the hostapd script. (This is mostly copied from existing scripts. They all look alike.) #!/bin/sh case \"$1\" in start) printf \"Starting hostapd: \" start-stop-daemon -S -x /usr/sbin/hostapd -- -B /etc/hostapd.conf [ $? = 0 ] \u0026\u0026 echo \"OK\" || echo \"FAIL\" ;; stop) printf \"Stopping hostapd: \" start-stop-daemon -K -q -x /usr/sbin/hostapd [ $? = 0 ] \u0026\u0026 echo \"OK\" || echo \"FAIL\" ;; restart|reload) $0 stop $0 start ;; *) echo \"Usage: $0 {start|stop|restart}\" exit 1 esac exit 0 Porting the configuration to Buildroot Configuration files like these only make sense in conjunction with a particular board and firmware configuration. They don’t belong in packages, which are hardware-agnostic. Instead, board-specific configuration files are placed in a directory that Buildroot calls an overlay. Files in such directories are overlaid onto the generated filesystem after all the packages have been compiled. We’ll simply add these configuration files to an overlay, and they’ll appear in the corresponding place in the final image. Implementing it Let’s get started. If you’d like to inspect the finished Buildroot repository, review the companion Mastering repository available on GitHub under the part-4 branch. Side lesson: How to work menuconfig menuconfig is a terminal UI used to change the working configuration. You can invoke it by running make menuconfig. Move up and down with ↑ and ↓, and choose the buttons at the bottom with ← and →. Here’s a quick legend of the various menu item annotations: ---\u003e: A submenu. Descend with the bottom button; ascend with \u003c Exit \u003e. [ ]: A checkbox. Toggle with Space. Some things are both checkboxes and submenus. ***: A comment. Search is invoked with / (the Vim keybinding for search). You can search for a program name such as dnsmasq or configuration variable such as BR2_PACKAGE_DNSMASQ. In the results, menuconfig will display the menu location of the configuration option—in this example, you’d drill to “Target packages” then “Networking applications”. It also displays whether the package is enabled ([=n]) and lists its dependencies. If you can’t see an option in the menu, it’s because its dependencies aren’t enabled. Dependencies can sometimes lead to a wild goose chase where you have to go find three recursive dependencies and turn them on before the desired option appears. To mitigate this, dependencies are typically “big ticket” items like a toolchain with C++ support. Smaller dependencies like libraries are “selected” by a package instead, which means they’re automatically enabled when you enable that package. Enable ccache One of the things you should probably do first in menuconfig is enable ccache. This is a tool that acts as a “proxy” for the compiler: it caches the output of a given compile command. It is very conservative: if the hash of the compiler, input, or command line arguments changes, ccache treats that as a new compilation and doesn’t hit the cache. But since Buildroot runs the very same commands during rebuild, this is a perfect use case. For menuconfig practice, turn on ccache by navigating to its option under “Build Options” → “Enable compiler cache”. Enable it with spacebar; save and exit. Now, subsequent compiles will be captured by ccache. With a warm cache, a rebuild from scratch takes about 20 minutes on my laptop. If you want to warm up the cache, you can run make clean \u0026\u0026 make before you go to sleep for the night. Install the daemons and firmware Now, we need to enable the applications we need, dnsmasq and hostapd. They are both under “Target packages” → “Networking applications”—but if you’re unsure, remember you can search. Additionally, the Wi-Fi chip’s firmware needs to be installed; this is a binary blob (always kept in /lib/firmware) that the kernel pushes to the chip when the module is loaded. Enable the Raspberry Pi Wi-Fi firmware under Target packages → Hardware handling → Firmware (config option BR2_PACKAGE_RPI_WIFI_FIRMWARE). Note There are some people that hate vi. (Philistines.) If you’re one of them, you can enable a different editor at this point under “Target packages” → “Text editors and viewers.” Create the overlay directory Now we need to create the overlay directory that will add additional configuration files to the target’s firmware image. Let’s create a directory called board/raspberrypi/rootfs_overlay/, and subdirectories for the actual files. $ mkdir board/raspberrypi/rootfs_overlay/ $ mkdir board/raspberrypi/rootfs_overlay/etc/ $ mkdir board/raspberrypi/rootfs_overlay/etc/init.d/ $ mkdir board/raspberrypi/rootfs_overlay/etc/network/ Add the five configuration and startup files, given above, to the overlay: File Destination in rootfs_overlay/ dnsmasq config etc/dnsmasq.conf hostapd config etc/hostapd.conf ifupdown config etc/network/interfaces modprobe startup script etc/init.d/S02modprobe hostapd startup script etc/init.d/S90hostapd Ensure the init scripts are marked executable with the following command. If they aren’t executable, init will emit weird “permission denied” errors during boot. chmod +x board/raspberrypi/rootfs_overlay/etc/init.d/* Now, add the new rootfs overlay in menuconfig to the Kconfig option BR2_ROOTFS_OVERLAY; it’s probably empty right now. This is a space-separated list of individual overlay directories, specified relative to the top of the Buildroot tree. (No more training wheels; you can find it in menuconfig!) Recompile the image, flash and burn Now, recompile by running make; this will build the packages you selected and generate a new image. Because of the redo logic discussed below, recompiles only take a few minutes. When it’s finished, inspect output/target/etc/—your new configuration files should be placed! Side lesson: re-doing things in Buildroot Once Buildroot builds a particular package’s make subtarget, such as dnsmasq-install-target, it won’t re-do them when you run make again. If you make changes, such as adding a patch file or changing a configuration option, you need to tell Buildroot to re-do these steps, because they aren’t triggered automatically. Of course, you could run make clean. This “nuclear option” is necessary when you make sweeping changes that affect all packages. Great examples include changing the processor architecture, compiler version, or C library. It’s also a good idea to run a clean build right before you cut a firmware release, to ensure you haven’t accidentally made manual changes that won’t be captured by a rebuild. Clean builds are necessary just often enough that using ccache (explained above) is an excellent idea. However, sometimes you just need to rebuild a single package. If make clean is the nuclear option, then the package’s -dirclean subtarget is a tactical nuke. This erases output/build/, forcing Buildroot to build the package from scratch on subsequent make invocations. If you’ve changed build flags for a package, make -dirclean will ensure that those options are captured. Note, however, that dirclean only erases the build directory for a package, not the files copied into the rootfs in output/target. There is an important distinction between make subtargets, which do not rerun on every build, and post-build scripts, which do. These scripts typically do things like assemble the final firmware image. So if you manually change a file in output/target for testing, a simple make invocation will pick it up into the new image. Testing Burn the firmware using the same steps in Part 3. Here’s the relevant command again: $ sudo dd if=output/images/sdcard.img of=/dev/mmcblkX bs=1M status=progress In the serial console, you should notice the newly compiled daemons starting up at boot: Starting dnsmasq: OK Starting hostapd: OK And if you look on your workstation or phone, you should be able to see the access point displayed:6 Commit that mess It works? Great! Keep it that way: check your changes into Git. In Part 3 I discuss the difference between the working configuration and the saved defconfigs. So far all the changes we’ve made are only in the working configuration, which isn’t supposed to be version controlled. To save the changes back to the defconfig, run: $ make savedefconfig Now you can see that the defconfig is modified, and the overlay directory is not yet tracked. $ git status HEAD detached at 2019.11.1 Changes not staged for commit: (use \"git add ...\" to update what will be committed) (use \"git restore ...\" to discard changes in working directory) modified: configs/raspberrypi0w_defconfig Untracked files: (use \"git add ...\" to include in what will be committed) board/raspberrypi/rootfs_overlay/ no changes added to commit (use \"git add\" and/or \"git commit -a\") Add and commit the changes with: $ git add board/raspberrypi/rootfs_overlay/ $ git add configs/ $ git commit -m \"rpi: implement simple wireless access point\" How to experiment on the fly In this article, the software, configuration files, and steps needed to bundle everything up appeared, perfectly formed, out of the head of Zeus, without any messy compile/test/repeat cycle. I can assure you that when you’re tinkering on the bench, this “works flawlessly first try” scenario might happen once every year or two (when you manage to hit the Ballmer Peak just right). For all the other times, you will likely need a few attempts before you get everything working just right. The fastest way to quickly iterate is to experiment directly on the target using a half-finished firmware image. You can modify configuration files and test the system manually via the serial console. When you get a config file polished, copy it back to your Buildroot overlay. If you need a new program during testing, you’ll have to rebuild the image, and burning the image erases your progress if you don’t copy things off the target. Remember, Buildroot’s power is in the reproducibility of the firmware image; monkeying with it after it’s created removes that advantage. Key points This cycle of plan, select, configure, test, finalize is the backbone of embedded system customization. If you need to test or experiment “on the fly,” you can do that too—just be sure to migrate your changes back to Buildroot. Although this is engineering, nobody wrote any code during this session.7 Much of embedded Linux engineering is taking finished software packages and packaging them into a working, preconfigured system. ccache drastically lowers your rebuild times, which is good because you need to rebuild fairly often. The rootfs overlay is where board-specific customization goes. It’s best for configuration files and other stuff that doesn’t belong in a package’s scripts. All the changes we made have been automated and captured in the Buildroot tree, and the history of changes is visible in Git. You can reproduce another copy of the firmware image by simply running make. Recommended reading The Buildroot user manual’s “redo” sections gives guidance about how to cleanly redo build steps. The accompanying Buildroot repo for this series has all the changes described above in one convenient place for you to review. Coming up next The next installment is Part 5: Packaging Custom Software Part 5: Platform Daemons. Note The packaging discussion has been delayed to part 6 because the combined article was getting unwieldy. We’ll build on the ideas in this article and extend them to do three things: Write a quick-n-dirty embedded webserver that knows how to toggle GPIO pins Package this new, custom software for Buildroot, including automatic startup at boot Add it to our image, just like we did here. Learning the skill of porting your software to embedded Linux lets you build truly customized Linux firmware that does exactly what you want. I’ll close by reiterating a point I made in the last article: you own all the code on this system. If something doesn’t work, or you want a new feature in any of the software, you don’t have to wait for the distribution. You are the distribution, and you can make it happen. Subscribe You can subscribe to my blog via no-spam email or RSS. Thanks for reading! Automated unit tests involving hardware are hard. If you’re familiar with software testing, imagine that every executable, test harness, and dataset is now a physical object at least the size of a box of playing cards. You can’t create new test fixtures with quite the same wily abandon—you must design a physical test harness that has complete control of the embedded system. ↩︎ This philosophy of “no setup needed” is what separates this approach from the many “make your Raspberry Pi do X” tutorials that are available. In this article, the entire functionality of the system is reproducibly captured in the source code and the target configuration, not on one random SD card that is set up just so. ↩︎ This is the quick, glossy explanation of access points. There are many other good tutorials that go into greater depth about Wi-Fi, hostapd, and DHCP. The point of this article is to explain how to add features to your embedded systems, not Wi-Fi in particular. ↩︎ Thanks to this Raspberry Pi article for the configuration scripts, which I adapted and commented. ↩︎ If you enable a couple dependencies, you can use eudev (under the System Configuration menuconfig option) which will automatically handle loading the correct kernel modules. For now, I’ll stick with an explicit load because it’s also a chance to explain init scripts. ↩︎ You may have trouble connecting to it with Android, which implements a “connectivity check” that makes sure the access point has Internet access before it starts routing traffic. (iOS may do something similar; I don’t use iOS to know.) Certainly, your workstation should be able to connect without problems. ↩︎ We do write configuration files, but those don’t count. You’ll find that the more configurable the software is, the less you have to modify its source to get it to do what you want. ↩︎",
    "author": "George Hilliard",
    "published": "Wed, 11 Mar 2020 08:40:00 -0500",
    "image": "https://www.thirtythreeforty.net/posts/2020/03/mastering-embedded-linux-part-4-adding-features/menuconfig.png",
    "source": "https://www.thirtythreeforty.net/posts/index.xml",
    "categories": null
  },
  {
    "id": "2ce3b21a-9806-4166-9fec-8bd6a379eb94",
    "title": "Trying the Allwinner F1C200s",
    "link": "https://www.thirtythreeforty.net/posts/2020/02/trying-the-allwinner-f1c200s/",
    "description": "Table of Contents Getting F1C200s samples Booting the F1C200s Remaining Work Resources After the success of my previous post regarding my business card that runs Linux on a diminuitive Allwinner F1C100s processor, I have received a ton of good mail about it. I’ve had people tell me they bought some for 61 cents (!) in moderate quantity on Taobao. Some people have asked for samples1. And I’ve had a couple people inquire about freelance work based on this part. Getting F1C200s samples In addition to all that, Allwinner kindly reached out to me and provided some samples of the F1C200s, a close cousin of the F1C100s that doubles the in-package RAM to 64MB. They also provided a datasheet and updated reference manual—see the Resources section below to download a copy. The samples arrived expertly vacuum-packed on pick-and-place trays. Booting the F1C200s I decided to just use my business card as a testbed, since I had blank PCBs available. I’ve had some precious free time lately, so I assembled a card using one of these samples: Pardon the soldering flux. I had to fix a bridged pin. Based on the datasheets and reference manuals, I suspected that the image I built for my business card would boot with little to no modification; all their peripherals and docs are basically identical. I flashed it with sunxi-fel, which recognized it as an F1C100s; this output is identical to that of the actual F1C100s, so there’s no way to tell which you’re flashing based on FEL mode. $ sunxi-fel version AWUSBFEX soc=00001663(F1C100s) 00000001 ver=0001 44 08 scratchpad=00007e00 00000000 00000000 The card booted all the way through U-Boot into Linux, both of which detected the increased RAM automatically: U-Boot 2019.04 (Jan 23 2020 - 17:27:09 +0000) Allwinner Technology CPU: Allwinner F Series (SUNIV) Model: George Hilliard's business card DRAM: 64 MiB In: serial@1c25000 Out: serial@1c25000 Err: serial@1c25000 Hit any key to stop autoboot: 0 linuxcard login: root # free total used free shared buff/cache available Mem: 60472 5076 53328 12 2068 52892 Swap: 0 0 0 I now hold the dubious honor of having the only business card in the world with 64MB of RAM. Because this part is literally a drop-in replacement for the F1C100s, the verdict is that there’s no reason not to use it in projects where you’d otherwise use the F1C100s. Remaining Work I’m working on getting my work upstreamed, as well as implementing support for the remaining peripherals. Most are easy because they are pretty close copies of other, already supported, peripherals on other Allwinner parts. F1C-series parts also have a 1080P-capable hardware accelerated H.264 video decoder! Although the reference manual doesn’t contain any info about the accelerator peripheral, I think it’s likely that the accelerator is based on Allwinner’s Cedar architecture. This is based on inspection of a board support package I have for Melis, Allwinner’s proprietary RTOS. Cedar has been reverse engineered by the awesome sunxi community, so you can use Cedar peripherals with a completely open-source stack called Cedrus. The F1C100s needs some additional work to enable its Cedar peripheral. I’ve asked Allwinner for more info about the F1C100s’s video stack, and I plan to continue working on it in the meantime as well. All this means that you could be playing 1080P HD video on Linux on a 61-cent chip. Absolutely crazy. Resources Here’s some F1C200s-specific resources; thanks again to Allwinner for providing these. See also the resources section for my business card, which has things like links to my kernel and U-Boot trees. Allwinner F1C200s Datasheet v1.1 gives pinouts and general info Allwinner F1C200s User Manual v1.1 gives register definitions and details of the internals As always, if you have question or something cool to share, send me an email. You can also subscribe to my blog. Feel free to reach out if you have a project in mind! ↩︎",
    "author": "George Hilliard",
    "published": "Sat, 29 Feb 2020 16:56:00 -0600",
    "image": "https://www.thirtythreeforty.net/posts/2020/02/trying-the-allwinner-f1c200s/f1c200s.jpg",
    "source": "https://www.thirtythreeforty.net/posts/index.xml",
    "categories": null
  },
  {
    "id": "62d21ee6-36f1-4489-b424-f9601fad95f4",
    "title": "The Wave/Particle Duality of Git Commits",
    "link": "https://www.thirtythreeforty.net/posts/2020/01/the-wave-particle-duality-of-git-commits/",
    "description": "A lot of my friends get confused when they encounter more advanced Git topics such as git rebase. This misunderstanding typically arises during the first merge conflict that interrupts the rebase process. The central point of confusion is usually how Git can reapply one commit onto another. My friends are confused about why a snapshot could have a merge conflict. Shouldn’t it be obvious, they think, what the final state should be? In order to understand what’s going on, it’s first necessary to take a quick detour into quantum physics—tongue planted firmly in cheek. Wave/particle duality If you’re not already passingly familiar with this particular flavor of apparent quantum nonsense, I am afraid you’re about to get a lot more confused. It turns out that particles such as photons (and electrons, etc) have properties of both classical particles and waves. This leads to experimental results such as the well-known double-slit experiment. If photons are fired through a slit onto a piece of film, they create a band where they passed through the slit, acting as if photons are particles. However, photons that pass through two side-by-side slits interfere with themselves to create an interference pattern on a piece of film, as if photons are waves. The small extra ripples are the interference from the second slit. (photo CC BY-SA 3.0, by Jordgette) The upshot is that it is important to realize that photons are neither particles nor waves, but rather something strange that behaves like both. What do photons have to do with Git? I’m glad you asked. It’s easy to see that many Git operations treat commits as snapshots. Every Git user knows how to use checkout: $ git checkout 42bd1ef5 \u0026\u0026 ls -lh HEAD is now at 42bd1ef Adjust padding for social links total 48K drwxr-xr-x 2 georgev georgev 4.0K Jun 1 2019 archetypes drwxr-xr-x 3 georgev georgev 4.0K Jun 1 2019 assets drwxr-xr-x 2 georgev georgev 4.0K Jun 1 2019 images drwxr-xr-x 7 georgev georgev 4.0K Aug 25 13:27 layouts -rw-r--r-- 1 georgev georgev 9.3K Jan 4 12:21 README.md drwxr-xr-x 3 georgev georgev 4.0K Aug 15 01:01 static -rw-r--r-- 1 georgev georgev 712 Jun 1 2019 theme.toml But other commands, such as show, output a unified diff—that is, a patch: $ git show 42bd1ef5 commit 42bd1ef5c5541815ad0ae4eba2c695387228e719 Author: George Hilliard Date: Tue Dec 31 10:43:45 2019 -0600 Adjust padding for social links diff --git a/assets/scss/hyde-hyde/_sidebar.scss b/assets/scss/hyde-hyde/_sidebar.scss index 0686b42..6b34856 100644 --- a/assets/scss/hyde-hyde/_sidebar.scss +++ b/assets/scss/hyde-hyde/_sidebar.scss @@ -54,7 +54,7 @@ .social { text-align: center; a { - padding: 0 4px; + padding: 0 7px; @include link-no-decoration(); } } The same commit hash is present in both commands. There’s no “--as-patch” or “--as-snapshot” flags to indicate a difference. I am in fact referring to the same object. What is going on? Commits, it seems, are neither patches nor snapshots until they are observed. Rather, they are something strange1 that can be treated as either a patch or a snapshot, just as a photon has properties of both a particle and a wave. When Git treats a commit as a patch, it appears as the difference between its snapshot and that of its parent. When Git treats a commit as a snapshot, it appears as the tree of files that were in the staging area when the commit was made. This duality of Git commits is what enables operations such as rebase. Git commands such as rebase, cherry-pick, format-patch, etc, all treat a Git commit as a patch, rather than as a snapshot. When viewed this way, Git’s rebase operation suddenly makes a whole lot more sense: Git takes a string of commits, interprets them as patches, and applies them to the commit you specify. A simple rebase, where C4’s diff has been applied to C3. (from Git docs) If this process goes smoothly, this creates a new string of commits, with the destination snapshot modified according to the original commits-as-patches. And so this is also why it’s possible for rebase to create “merge conflicts:” it’s the patches, not that snapshots, that won’t apply cleanly. Is this a silly way to think of commits? Probably. But it has been helpful to at least one other person when I explained it this way. I hope it helps you too. You can subscribe to updates via RSS or email. This duality extends as far as the underlying storage format: individual commits are stored as something very similar to a snapshot: they are a “tree” referencing “blobs”, all referenced by a “commit” blob. But pack files are stored similar to patches, with objects optionally being stored as a “delta” to another object occurring earlier in the pack. This is an internal detail that most users of Git need not be aware of. ↩︎",
    "author": "George Hilliard",
    "published": "Mon, 20 Jan 2020 08:00:00 -0600",
    "image": "https://www.thirtythreeforty.net/posts/2020/01/the-wave-particle-duality-of-git-commits/slits.jpg",
    "source": "https://www.thirtythreeforty.net/posts/index.xml",
    "categories": null
  },
  {
    "id": "2b53c2f3-982a-4221-8529-661bda878a37",
    "title": "Mastering Embedded Linux, Part 3: Buildroot",
    "link": "https://www.thirtythreeforty.net/posts/2020/01/mastering-embedded-linux-part-3-buildroot/",
    "description": "Table of Contents Prerequisites Kicking off Buildroot Install host tools Download Buildroot Configure Buildroot for your hardware Build How Buildroot works Compilation flow Buildroot packages Build configurations Booting the new image Optional: start the VM Aside: how to use dmesg Burn the Raspberry Pi’s SD card Connect to the Pi’s serial console Open the serial console Boot the firmware Key takeaways Further reading Coming up next Subscribe to updates Notes This Mastering Embedded Linux article is the first where the rubber hits the road. We’re walking through building Linux from source code and booting it on a Raspberry Pi. Whereas the previous articles have been all discussion, this one is equal parts discussion and tutorial. This article will introduce Buildroot, a toolkit for building highly customized embedded Linux images. Buildroot is the right combination of “powerful” and “easy to use.” It provides a lot of automation so that your build process can Just Work, freeing you up for doing the interesting parts of embedded Linux development. In this article: We’ll download Buildroot and start the build using just six commands. While it compiles, we’ll talk about the steps Buildroot is doing automatically, and what the process looks like conceptually. At the end, we’ll walk through booting the freshly built operating system on a Raspberry Pi. It’s easy and fun.1 Let’s get started. Prerequisites To follow along, you will need the things from the shopping list at the end of the last article. The Raspberry Pi will serve as the target hardware, and the FT2232 is the serial adapter that’s needed to communicate with the Pi’s serial console. Or, if you don’t want to buy anything, you don’t have to; you can use a virtual machine as the target instead. I’ll give you the option as I go along. Regardless of what target you pick, you will also need the following: Host workstation running Linux. If you don’t have a favorite distribution, you can install Ubuntu. If you aren’t running Linux, you can use a virtual machine (VM) as the host and that will work okay with some caveats. I am not walking you through this—you’ll need to get Linux on your workstation beforehand. 15GiB free disk space. We are compiling an entire operating system; the final result is small, but it needs lots of space to get there. If you use a VM, make sure you give it enough virtual drive space. 2–4 hours free time. You’ll need time to read this article, do the build, and play with the result. Working knowledge of Linux. You don’t need to be an expert, but it will be good to know how to get around in the shell. Kicking off Buildroot We’ll have Buildroot compiling our image in no time. There’s four main steps: Install host tools Download Buildroot Configure Buildroot Build the target image You only need to run six commands to accomplish all this. I’ll tell you what they are. Install host tools The first step is to install programs that you’ll need that don’t ship with Buildroot. Git: Buildroot provides tar archives, but it’s much easier in the long run to use the Git repository. A compiler: Buildroot needs an initial compiler to build its own compilers. Miscellaneous tools: Various system utilities that help Buildroot download and preprocess code. Buildroot documents these dependencies. screen: A “serial console” utility that will use the FT2232 serial adapter. Install the tools. (The ~$ in all the commands I give is the shell prompt. Don’t type that. Type what comes after it.) ~$ sudo apt install -y git build-essential wget cpio unzip rsync bc libncurses5-dev screen That’s pretty much it. Buildroot includes its own tools and just needs these things to get the process started. (This command is for Ubuntu. It’s the only command in this guide that is distribution-specific. Everything else interacts with Buildroot, not the host operating system.) Download Buildroot Buildroot provides multiple ways to get the source code, but the easiest way to do it is to use Git. Clone the Buildroot tree with Git: ~$ git clone git://git.buildroot.net/buildroot Cloning into 'buildroot'... remote: Enumerating objects: 356009, done. remote: Counting objects: 100% (356009/356009), done. remote: Compressing objects: 100% (116215/116215), done. remote: Total 356009 (delta 248969), reused 342974 (delta 238353) Receiving objects: 100% (356009/356009), 75.76 MiB | 1.36 MiB/s, done. Resolving deltas: 100% (248969/248969), done. ~$ cd buildroot/ Now we’re in the top level of the Buildroot tree. We need to switch to the exact version of Buildroot we want to build with. In this case, it’s the 2019.11.1 (November 2019) release, which is the latest as of this writing in January 2020. Check out the 2019.11.1 tag: ~/buildroot$ git checkout 2019.11.1 Note: checking out '2019.11.1'. You are in 'detached HEAD' state. You can look around, make experimental changes and commit them, and you can discard any commits you make in this state without impacting any branches by performing another checkout. If you want to create a new branch to retain commits you create, you may do so (now or later) by using -b with the checkout command again. Example: git checkout -b HEAD is now at 57fbebac60 Update for 2019.11.1 Easy enough. Git tells us we aren’t on a branch (“detached HEAD”). That’s okay for now. Configure Buildroot for your hardware Now, you need to configure Buildroot for your target. The exact command to do this depends on which board you’re building for: Target Command Raspberry Pi Zero W make raspberrypi0w_defconfig Raspberry Pi Zero make raspberrypi0_defconfig Virtual machine make qemu_x86_64_defconfig Each of these words after make is a configuration. You can see all these configurations in the configs directory; more on this later. ~/buildroot$ make raspberrypi0w_defconfig Buildroot prints each command that it’s running. It’s a lot of gibberish, but you can ignore all of it except the bottom part—that’s Buildroot saying that the configuration is activated: # # configuration written to /home/georgev/buildroot/.config # Build We’re now ready to compile the entire operating system. Buildroot makes this easy, but it does take some time: probably 2–3 hours, depending on how fast your workstation is. It also needs an active Internet connection to download source code. Ready? Compile the target image:2 ~/buildroot$ make This will start printing lots of text as Buildroot downloads and compiles the various parts of the target operating system image. When it finishes, there will be an SD card image ready to burn onto the Pi’s SD card. If you’d like to watch instead of doing it yourself, you can press Play on this asciicast: How Buildroot works While this compiles, I’ll discuss what each part of Buildroot does. The best part about being an embedded Linux hacker is that your builds take hours! This gives you plenty of time to write blog posts about embedded Linux. (comic via xkcd) Compilation flow From a high level point of view, here is the workflow that Buildroot automates:3 Buildroot builds the toolchain, which is the cross-compilers and other tools that it needs to compile the target system (green boxes). The source code (blue boxes) for each piece of software is downloaded from the Internet. Using Buildroot scripts (grey boxes), source is unpacked, patched, configured, compiled, and installed into the target output directory that forms the root filesystem (“rootfs”) for the target (purple boxes). Extra files, such as on-device configuration files, also get copied into the target output directory. Finally, scripts assemble the final firmware image from this rootfs. There are some exceptions; sometimes the cross-compiler is downloaded without needing to be compiled. Sometimes the manufacturer ships an entire “Board Support Package” (BSP) where all the compilation has already been done for you. But at the end of the day, those just truncate this flowchart; all the steps still have to be accomplished somehow. Here are the most important directories in the top of the Buildroot tree. There are others, but they are boring. You’ll spend most of your time interacting with these: Directory Purpose board/ Files and scripts to support each target board configs/ Build configurations such as raspberrypi0w_defconfig package/ Package definitions output/host/ Build tools that run on the workstation output/target/ Target output directory where target binaries are staged output/images/ Filesystem images and the final firmware image are emitted here So, the next question is: How does the one magic make command know how to build everything? To answer that, first I’ll talk about the structure of a Buildroot package. Buildroot packages Compilation scripts are grouped into packages. Most things in Buildroot are packages. You can see these packages under the package directory in the Buildroot tree. Buildroot 2019.11 ships with 2,289 packages! This is a wonderful library of free, open source software that you can drop into your custom firmware with a few commands. Everything from the Nginx web server to the Chocolate Doom game engine is available. Each package defines its own configuration options, build steps, and dependencies. The dependencies tell Buildroot in what order to build packages, the build steps tell exactly what commands to run to build the package (including how to download its source code), and the configuration options control anything about the package. The package’s list of configuration options is in a file called Config.in4 using a language called Kconfig5. At minimum, the package must supply an option controlling whether or not the package is to be compiled at all. To put the package in the target’s image, you enable this option. There might also be other options controlling whether extra features of the software are compiled in. These extra options are often useful when space is at a premium: you can simply “compile out” features that you don’t need. Armed with an understanding of a package’s configuration, it is easy to understand the entire build configuration. Build configurations Taken together, all the configuration options for all a system’s packages form a build configuration. Applying one of these default build configurations—a “defconfig”—allows you to quickly select all the relevant options. And so this is how make knows how to build everything: all the configuration options, for all the packages, were supplied in the raspberrypi0w_defconfig file that we specified at the beginning of the build.6 (GNU Make calculates the dependency tree and starts building the packages in the correct order.) Selecting the defconfig copies all the config options into the working configuration kept in a file named .config. You can change the working configuration using the menuconfig tool. This provides a graphical interface that lets you find and change various menu options. Here’s an example, using menuconfig to enable the Chocolate Doom package mentioned above. Note that .config is not supposed to be kept in Git version control; it’s specific only to a particular working copy. You can run make savedefconfig to copy the working config back to the defconfig, which is version controlled. Booting the new image Enough theory. Let’s boot Linux. Allow the build process to finish. When it does, you should see some lines that look like this: INFO: vfat(boot.vfat): adding file 'zImage' as 'zImage' ... INFO: vfat(boot.vfat): cmd: \"MTOOLS_SKIP_CHECK=1 mcopy -bsp -i '/home/georgev/Code/buildroot-mel/output/images/boot.vfat' '/home/georgev/Code/buildroot-mel/output/images/zImage' '::'\" (stderr): INFO: hdimage(sdcard.img): adding partition 'boot' (in MBR) from 'boot.vfat' ... INFO: hdimage(sdcard.img): adding partition 'rootfs' (in MBR) from 'rootfs.ext4' ... INFO: hdimage(sdcard.img): writing MBR These lines indicate that the SD card image (sdcard.img) for the Pi has been generated. It built the image from the root filesystem in output/target/, which you can inspect:7 ~/buildroot$ ls -lh output/target/ total 64K drwxr-xr-x 2 georgev georgev 4.0K Jan 13 22:01 bin drwxr-xr-x 4 georgev georgev 4.0K Jan 13 20:48 dev drwxr-xr-x 5 georgev georgev 4.0K Jan 13 22:01 etc drwxr-xr-x 3 georgev georgev 4.0K Jan 13 22:01 lib lrwxrwxrwx 1 georgev georgev 3 Jan 13 21:08 lib32 -\u003e lib lrwxrwxrwx 1 georgev georgev 11 Jan 13 21:23 linuxrc -\u003e bin/busybox drwxr-xr-x 2 georgev georgev 4.0K Jan 13 20:48 media drwxr-xr-x 2 georgev georgev 4.0K Jan 13 20:48 mnt drwxr-xr-x 2 georgev georgev 4.0K Jan 13 20:48 opt drwxr-xr-x 2 georgev georgev 4.0K Jan 13 20:48 proc drwxr-xr-x 2 georgev georgev 4.0K Jan 13 20:48 root drwxr-xr-x 2 georgev georgev 4.0K Jan 13 20:48 run drwxr-xr-x 2 georgev georgev 4.0K Jan 13 22:01 sbin drwxr-xr-x 2 georgev georgev 4.0K Jan 13 20:48 sys -rw-r--r-- 1 georgev georgev 1.4K Jan 13 21:08 THIS_IS_NOT_YOUR_ROOT_FILESYSTEM drwxr-xr-x 2 georgev georgev 4.0K Jan 13 20:48 tmp drwxr-xr-x 6 georgev georgev 4.0K Jan 13 22:01 usr drwxr-xr-x 3 georgev georgev 4.0K Jan 13 20:48 var We can verify that the SD card image was emitted by looking in the output/images/ directory: ~/buildroot$ ls -lh output/images/ total 225M -rw-r--r-- 1 georgev georgev 24K Jan 13 22:01 bcm2708-rpi-zero.dtb -rw-r--r-- 1 georgev georgev 32M Jan 13 22:01 boot.vfat -rw-r--r-- 1 georgev georgev 120M Jan 13 22:01 rootfs.ext2 lrwxrwxrwx 1 georgev georgev 11 Jan 13 22:01 rootfs.ext4 -\u003e rootfs.ext2 drwxr-xr-x 3 georgev georgev 4.0K Jan 13 21:28 rpi-firmware -rw-r--r-- 1 georgev georgev 153M Jan 13 22:01 sdcard.img -rw-r--r-- 1 georgev georgev 4.8M Jan 13 22:01 zImage Looks good. Now, let’s burn this image to the Pi’s SD card and start connecting the Pi to the computer. Optional: start the VM If you are using a Raspberry Pi, skip ahead to the section where we’ll start getting it ready. If you instead elected to build for a virtual machine, not a Pi, you can start the VM with a command8: ~/buildroot$ output/host/bin/qemu-system-x86_64 -M pc -kernel output/images/bzImage -drive file=output/images/rootfs.ext2,if=virtio,format=raw -append \"rootwait root=/dev/vda\" -net nic,model=virtio -net user The VM boots really quickly. On my workstation it only takes a couple seconds. Once the VM’s window appears, skip ahead to the “Boot the Firmware” section—it’s the same experience once you start the VM. Aside: how to use dmesg Let’s take a quick detour and learn how to work the Linux utility dmesg. It is a small tool that displays the output of the kernel log. This is useful because the kernel prints the names it assigns to devices that you’ve just plugged in. Reading the kernel log will let you know which device name to use for, say, your SD card. Basic usage is simple; just run: $ dmesg -w The -w flag stands for “watch;” dmesg will continue to monitor for new messages after dumping the kernel’s existing log. You can ignore the existing log; it’s probably pretty verbose. Once dmesg is watching, you can plug in your gadget and you should see a few lines like this: [163513.147002] mmc0: new ultra high speed SDR50 SDHC card at address aaaa [163513.174253] mmcblk0: mmc0:aaaa SP32G 29.7 GiB [163513.189137] mmcblk0: p1 In this example, the SD card has been assigned a name of mmcblk0, and it has a single partition p1 (so the full path of the device is /dev/mmcblk0 and its partition is /dev/mmcblk0p1). Depending on your SD card reader, it might also get assigned an sd prefix. No matter, as long as you know exactly which one it is. Once you’re done with dmesg, you can just hit Ctrl+C to stop it. Burn the Raspberry Pi’s SD card Insert your SD card and use dmesg to learn its block device name. Use dd to copy the image onto the card. Substitute /dev/mmcblkX with the actual path of your SD card. ~/buildroot$ sudo dd if=output/images/sdcard.img of=/dev/mmcblkX bs=1M status=progress Note Be sure you get the of (output file) correct. If you specify your workstation’s hard drive, dd will happily overwrite all your files. If you’re unsure, just go back to dmesg and reinsert your SD card to double check its device name. Here’s what this command does: Option Explanation if= Input File—read from here of= Output File—write to here bs= Block Size—write this many bytes at once status= Show a nice progress bar (sometimes this doesn’t work well) Once this finishes, make sure the kernel’s write buffers have been flushed to the card: ~/buildroot$ sync Once this command returns, you can pull the SD card out and stick it into the Pi. Don’t turn on the Pi yet though (nothing bad will happen, it’s just not ready yet). Connect to the Pi’s serial console Now the FT2232 USB/UART device needs to be connected to the Pi’s serial pins. Here’s the Raspberry Pi header pinout: pinout.xyz is the best Raspberry Pi pinout website Since the FT2232 isn’t just a UART adapter, we need to know which pins should be used when it is being used in UART mode—the pins are named like ADBUS0, BCBUS3, etc. To figure this out, refer to section 3.1.2 of the FT2232’s datasheet, which suggests pin mappings: For “Async Serial,” pin ADBUS0 is TXD, and ADBUS1 is RXD. Easy enough. Connect the Pi’s UART TXD to the FT2232’s RXD, and vice versa. Finally, connect their grounds together. It should look like this: ADBUS0 might be labeled D0 or AD0 depending on your FT2232 adapter. This diagram was made with Fritzing, which is nice for drawing high-level wiring diagrams like these. Now, plug the serial adapter into your workstation. Using dmesg, learn the name of your FT2232 as you plug it in. It will probably be named ttyUSB0 and ttyUSB1—these are the two channels.9 Open the serial console Launch GNU Screen using the device name you just discovered. The extra flags configure the right baud rate and disable flow control—the vast majority of Linux serial consoles use this convention of 115200 baud with no hardware flow control. ~/buildroot$ sudo screen -fn /dev/ttyUSBX 115200 If you want to quit Screen, you need to type the escape sequence Ctrl+a followed by the command \\. Boot the firmware Plug in the Raspberry Pi’s power adapter. The serial console should begin printing boot messages as the operating system boots: [ 0.000000] Booting Linux on physical CPU 0x0 [ 0.000000] Linux version 4.19.66 (georgev@desertvoice) (gcc version 8.3.0 (Buildroot 2019.11.1)) #1 Tue Jan 14 11:14:59 CST 2020 [ 0.000000] CPU: ARMv6-compatible processor [410fb767] revision 7 (ARMv7), cr=00c5387d [ 0.000000] CPU: PIPT / VIPT nonaliasing data cache, VIPT nonaliasing instruction cache [ 0.000000] OF: fdt: Machine model: Raspberry Pi Zero Rev 1.3 [ 0.000000] Memory policy: Data cache writeback [ 0.000000] cma: Reserved 8 MiB at 0x19000000 [ 0.000000] random: get_random_bytes called from start_kernel+0x90/0x4a4 with crng_init=0 [ 0.000000] Built 1 zonelists, mobility grouping on. Total pages: 104545 [ 0.000000] Kernel command line: coherent_pool=1M bcm2708_fb.fbwidth=720 bcm2708_fb.fbheight=480 bcm2708_fb.fbswap=1 smsc95xx.macaddr=B8:27:EB:6C:5F:E1 vc_mem.mem_base=0x1ec00000 vc_mem.mem_size=0x20000000 root=/dev/mmcblk0p2 rootwait console=tty1 console=ttyAMA0,115200 [ 0.000000] Dentry cache hash table entries: 65536 (order: 6, 262144 bytes) [ 0.000000] Inode-cache hash table entries: 32768 (order: 5, 131072 bytes) [ 0.000000] Memory: 397928K/421888K available (6947K kernel code, 635K rwdata, 2080K rodata, 452K init, 796K bss, 15768K reserved, 8192K cma-reserved) Eventually, it should print a login prompt: Welcome to Buildroot! buildroot login: You can enter root as the username; there isn’t a password. You can look around with commands like ls /usr/bin to see what programs are available on the image. If your board made it to the login prompt, congratulations! You have compiled and booted your first firmware image from source code. The world is your oyster. Key takeaways This has been a high-level introduction to Buildroot. It’s easy to get much further down in the weeds than this article goes. Nevertheless, it’s definitely a lot of info. Here’s the key takeaways from this lesson: You own all the code on the target and all the tools that make it. All the software in this process is completely open source. It is all compiled on your computer when you type make. If anything is broken or doesn’t work like you want, you can simply change it. All the work was automated. Buildroot lets you focus on implementing one thing at a time, starting from a working Linux system. Gradually, you can take the defconfigs provided and craft them into custom firmware that works exactly like you want. The target rootfs is tiny! The default image is only 57 megabytes, and most of that is kernel modules that you can turn off. Buildroot’s “small image” philosophy leaves you plenty of space to add features, or lets you build a firmware image that fits in as little as 4MiB. Further reading A lot of people have emailed me to ask about other reading materials they can get to learn more about embedded Linux systems. I am currently working on building a better list of resources. Here are some of the ones that are most relevant to this chapter: How Linux Works, 2nd Edition10 by Brian Ward is a great book about many topics in Linux. It’s relevant for desktop and server Linux, as well as embedded. It covers basics such as shell commands yet still goes into important, complex topics like the X11 window system and the DBus messaging bus. It’s the right amount of detail to give you a good mental picture of how everything works, while still being approachable. Bootlin’s Buildroot training is maintained by the very prolific team at Bootlin, a French company that does embedded Linux development. You can pay them to come give your entire team training using this material. If you’re willing to read through their slide deck, it’s very thorough, although there’s no lecture accompanying it. The Buildroot user manual is the place to learn about hacking on Buildroot. The various areas of the build system are well-described and the reference manual for writing new packages is superb. The downside is that because it is a user manual, not a tutorial, it’s quite dense. You’ll definitely get familiar with it as you use Buildroot going forward. If you would like to recommend other relevant embedded Linux learning material, please send me an email as I would be glad to learn about it. Coming up next In the next article, we’ll be adding a feature to the Linux system we just compiled. This will involve reading some documentation and customizing the build configuration with menuconfig, like in the demo I showed earlier. I’ll also be discussing the init system and how to integrate your programs into the boot process. (Edit: this has been postponed to Part 6.) We’ll make all the changes and rebuild, testing the new changes right away (rebuilds take only a couple minutes with Buildroot). This is the next step in the iterative process of crafting your own firmware image! Subscribe to updates You can subscribe to all of my blog updates via email or RSS on the Subscribe page. Thanks for reading! Notes A note about troubleshooting: If you are running into problems, I highly recommend that you Google the error message, possibly alongside the keyword “buildroot.” It is likely that someone has had your problem before. At any rate, the world of embedded systems is full of novel bizarre problems, being frustrated is normal, and debugging is a really good skill to build. A note about using a virtual machine as a workstation: If you’re building Buildroot inside a VM (e.g. Ubuntu is in VirtualBox, and your PC is actually running Windows), be sure you pass through the FT2232 and the SD card reader to the guest. You should probably also give the guest multiple CPUs, or the build will take a very, very long time. Your definition of “fun” may vary. I think it’s pretty cool, anyway. ↩︎ If you intend to use your workstation for other things, you can instead run nice make, which will make the build a lower priority so that your workstation is still responsive. ↩︎ Although this guide uses Buildroot, this workflow applies to any embedded Linux distribution. ↩︎ Packages compiled for the host, not the target, have separate options in Config.host.in. ↩︎ Kconfig was originally created by the Linux kernel developers to help manage the Linux kernel’s vast array of features. Buildroot has a similar scope, so Kconfig is useful here too. ↩︎ This isn’t actually quite true. In reality, only non-default options are stored in the defconfigs. But since the default is stored elsewhere, it amounts to about the same thing as “storing all the configuration options.” ↩︎ Buildroot adds a file called THIS_IS_NOT_YOUR_ROOT_FILESYSTEM to the output/target directory. This is the root filesystem, mostly. But there are a few extra steps that happen, like creation of special files, that aren’t reflected in this tree, so that’s why that warning file is there. ↩︎ How did I know this awful command? Simple: I read it in the readme file in boards/qemu/x86_64/readme.txt. ↩︎ If you have an FT232 (not 2232), you’ll only have a single channel. That’s okay; we’re not using the second one right now. ↩︎ Some links on my site, such as this one, are affiliate links. The proceeds help me keep buying and building neat embedded systems. ↩︎",
    "author": "George Hilliard",
    "published": "Tue, 14 Jan 2020 11:45:00 -0600",
    "image": "https://imgs.xkcd.com/comics/compiling.png",
    "source": "https://www.thirtythreeforty.net/posts/index.xml",
    "categories": null
  },
  {
    "id": "7bc7a7e1-51d9-499c-9f05-2499e73ceb37",
    "title": "Mastering Embedded Linux, Part 2: Hardware",
    "link": "https://www.thirtythreeforty.net/posts/2019/12/mastering-embedded-linux-part-2-hardware/",
    "description": "Table of Contents Buy it—single-board computers Hack it—repurposed hardware Build it—custom boards Systems on a Module Bare processors Recommended tools FTDI breakout SOP8 test clip Miscellaneous supplies Coming Up Needed Hardware Subscribe In the first part of this series, I discussed some of the core concepts surrounding embedded Linux, with the ultimate goal of empowering you to be able to build inexpensive embedded Linux systems. This part will look at some of the many, many devices you can use to develop with. I’ll also discuss some of the individual components you might use if you’re building your own. I will also recommend that you buy a couple (very cheap) development tools. These will follow you from project to project. Finally, I’ll provide a shopping list so you can follow along in the next Mastering Embedded Linux post, where we’ll compile Linux from source code and boot it on hardware. Your main options are any combination of the following: Buy it—it’s hard to beat a drop-in board. Hack it—so many devices out there run Linux, like routers and cameras. You can reprogram these with a little effort. Build it—to get the perfect form factor and functionality, flex your hardware development skills and build your own Linux-powered board. To me, Linux hardware is a lot of fun, because the form factors are endless. A bit of warning: the deeper into the weeds you go, the more you must be prepared to order boards from overseas manufacturers and wade through poorly-documented resellers. And most of all, you need to have the time and inclination to learn and tinker with these systems. Let’s look at some individual options for each. Buy it—single-board computers The first angle of attack is to look for computers that are explicitly marketed as running Linux all in a single package — a Single Board Computer (SBC). There is an abundance of these, and the numbers only continue to grow. The iconic Raspberry Pi is a great option for getting started. It has storage, memory, and connectivity in spades. If you are just getting started and would like to follow along with my software tutorial a little later, you cannot go wrong with a Pi. However, the Pi is somewhat bulky compared to some other less well-known boards, and for many embedded applications, it’s a lot of overkill. Also, if you need to rely on the board, the SD card is often considered a single point of failure because of its comparatively poor reliability. The smaller $5 Pi Zero gets you an entry-level Pi that has 512MB of RAM. The Pi Zero W adds Wi-Fi and Bluetooth for $5 more. Both also offer a neat trick that isn’t found on larger models: they have a USB On-the-Go (OTG) port, which lets it emulate all kinds of functionality when it’s plugged into a computer, like a virtual Ethernet adapter or a flash drive. via Wikimedia Foundation Because it’s such a great platform, for much of this series, we’ll use a Raspberry Pi Zero W as our hardware. There are other popular boards from various companies. OrangePi makes a bewildering array of SBCs. In my mind, the key feature of most of these is their superior interconnection — even the Pi 4 cannot beat some of the features of these boards, including 4G LTE, PCIe, and mSATA adapters. Most of them also include eMMC, which is flash memory that’s designed for embedded, so it is more reliable than an SD card. High-end OrangePi boards can be even pricier than Raspberry Pis, but they make some $10 SBCs too! The Orange Pi Zero Plus2 is $13 shipped Finally, there is a very good database of SBCs called Hackerboards. If you want to watch for new ones, keep tabs on sites like Linux Gizmos and CNXSoftware, which offer embedded news and frequently announce new Linux SBCs. Hack it—repurposed hardware Lots of existing consumer electronics, especially routers and IP cameras, run Linux just fine. The OpenWRT project targets many of these devices. The downside of these devices is that they are difficult to tinker with because they are typically rather large, bulky affairs (oddly enough) and they lack connectivity; many only have an Ethernet jack externally, and if you pry them open, they might not have convenient debugging headers you would need to be able to reprogram the storage. Devices like these typically follow a very predictable formula. This isn’t because the engineers are lazy; this formula works in high volume, low margin scenarios. Here is the formula: Obscure processor, typically MIPS or ARM Small NAND or NOR flash chip containing bootloader, kernel, and rootfs One or two “cool” peripherals like Wi-Fi, a sensor, or a camera Custom software running within Linux Here’s one of my Reolink IP cameras that runs Linux. This thing has PoE and a 4k camera. Let’s take it apart so I can show you what I mean. The camera has multiple PCBs stacked into it. Looks like the camera module is separate from the main PCB and connected by a ribbon cable. This is pretty standard. Let’s look at the front of the main PCB. This thing is an entire Linux computer smaller than a business card. You can see the system-on-chip; it’s a Novatek NT9851x; this appears to be a Chinese MIPS part that you definitely can’t buy in quantities smaller than a jillion. You can also see where there’s a space for a microSD card. It’s not supported on this model (it’s waterproof), but if I needed to, I could probably solder a holder to it and the processor might be able to read the SD card. This would be handy to download more hacking tools to look around while the system is running. And here’s the back of the PCB. You can easily see the small NOR flash. If I were going to really start hacking this, the first step would be to desolder the flash and clone it using the tools I’ll recommend below; that way I could never truly brick the camera. There are also a couple of non-populated debug headers. One of the first steps in reverse engineering a device is to see if it has a UART with a shell prompt; I could probe these pins with an oscilloscope to find the console. And so you see that the pieces of the formula are all here: Obscure processor: check, Novatek Small NOR flash: check “Cool” peripherals: check, camera Custom software running within Linux: check (Spoilers: this camera has been annoying me for some time. Stay tuned for a more thorough reverse engineering.) Build it—custom boards If all you want to do is compile Linux from scratch, then grab your Raspberry Pi and skip this section. On the other hand, if you’re building custom hardware that’s going to run Linux, read on. All these choices are cheap. Typically any single option won’t cost more than $20. Of course there are many embeddable options for much more money, but that isn’t in the spirit of this article series! Systems on a Module A “system on a module” (SoM) is a device that packages all the complex parts onto a single module that is ready to integrate with your project. You will still need to build a carrier PCB that the SoM mounts to, but this is comparatively straightforward. I’m grouping these boards separately from the ones above, for a couple reasons. First, they don’t have all the connectors present on the bigger boards. In turn, they are much smaller, and they are typically designed to be easy to embed into your own project. This makes them a sweet spot for many hobbyists who want to build a board without dealing with ultra-fine-pitch soldering. You can do pretty well with a price cap of $20. My favorite in this price range is the Onion Omega2S. It’s MIPS-based MT7688 with built-in Wi-Fi plus 64MB of RAM and 16MB of NOR flash, all on a nice package with castellated edges. Even better, it’s available on Mouser. It also has a single-board cousin, the Omega2. There are a bunch of other SoMs available; they’re pretty easy to find when you Google for them. SoMs are a very popular thing for companies to make because it’s easy to sell in moderate quantities to other companies. Professionally, I use SoMs all the time because it’s cheaper to buy a few for prototypes than it is to design from scratch. Bare processors If you’re building a really space-constrained device, or maybe if you just enjoy a challenge, you can’t use a SoM. There are several parts that I’d like to give special mention to. These parts are great because it’s possible to solder them onto hobby boards without industrial equipment—they come in nice sane QFP or QFN packages (and commercial users will appreciate this too). This list doesn’t include other parts that need external RAM and a lot more TLC. For that reason, people refer to this kind of part as a “system in package.” Nuvoton NUC980 series: Nuvoton has a line of ARM9 processors. Although they are underpowered versus modern CPUs, these parts have a ton of peripherals and very good freely available documentation. The parts have varying amounts of RAM depending on the pin count, which varies from QFP64 to QFP216. They also have a development board using this part series called the “NuMaker Tomato.” Allwinner V3s: Allwinner is a Chinese semiconductor company that makes a lot of low- and mid-range parts. Often these SoCs end up in tablets or dashcams. The V3s is a particularly powerful example that has the magic combination of a QFP package and built-in 64MB of RAM. Unfortunately it is discontinued; for hobby purposes this is not necessarily a problem, because the parts are still available from the usual low-volume resellers that hang out on eBay, Taobao, and AliExpress. Also note that Allwinner doesn’t always interact with the FOSS community—many of their peripherals have had to be reverse engineered—but if you want good, affordable hardware, they’re hard to beat. Allwinner F1C100s: Another Allwinner part that is astoundingly cheap. It’s based on a single ARM9 core and has 32MB of RAM in a QFN package. There are several decent peripherals on board including a display driver, but everything that it includes is honestly table stakes for SoCs these days. Linux support is middling, but it worked well enough for me to build my Linux-powered business card using this part. Overall, at $1 to 1.40 on Taobao, you get what you pay for. Sunplus SP7021: This looks like a recently developed part (as of Dec 2019). It powers the Banana Pi BPI-F2S; it has either 128MB or 512MB of RAM, four ARM cores, and a ton of peripherals, all in a QFP package. It’s relatively expensive at $20 apiece, but it packs a ton of horsepower for this price. I am looking forward to trying this in a future project! Ingenic X1830: I hesitate to include this BGA part, but otherwise it is a quite capable MIPS core with 128MB of built in RAM. The ball pitch of 0.65mm isn’t too bad, but you might prefer other parts if you’re hand-assembling. Linux support appears to be a mixed bag. Let me know if you have any experience with this part. Further on in the series, I’ll talk more about building your own. You definitely will need a strong grasp on the basics. Recommended tools To interact with the console on your system, you will need a tool that allows you to talk over UART. I also highly recommend you get a tool that allows you to reflash SPI flash memories. FTDI breakout You can kill these two birds with one stone by buying a simple breakout board for the FTDI FT2232H, a classic “USB to UART” chip. They are readily available on eBay or Amazon1. The FT2232H has two channels; each can simultaneously do a different function. Each channel behaves as a UART out of the box, or these programs can use the channel to do other things: flashrom can use it to speak to SPI flashes—you can unbrick many routers like this OpenOCD can use it to control many processors via JTAG Sigrok can use it as a low-speed logic analyzer, in a pinch aehparta/ftdi-bitbang will let you manually bit-bang each pin on the command line Because it’s so versatile, I think of this simple, inexpensive board as my “Swiss Army knife” of embedded device hacking. SOP8 test clip You don’t need this tool if you’re going to be experimenting with a Raspberry Pi, because it can only boot from an SD card. When you start using SPI flash, you will want something that lets you program the parts in-circuit without desoldering them. Buy a very inexpensive “chip clip” to let you connect your FTDI chip to the flashes. Miscellaneous supplies Make sure you can wire all this up. I know it sounds silly, but nothing is more irritating than having your project stuck for four days because you’re waiting on more header pins to arrive. 0.1\" header pins and breadboard wires Soldering iron USB cables A couple small 1GB or 2GB SD cards Coming Up In the next article we’ll be compiling our first image from source code. We’ll take the Buildroot distribution for a spin. Buildroot is really easy to get started with if you have a Raspberry Pi, so that’s what we’ll use as an example. Then, in later articles, we’ll build on those base concepts to tackle more advanced software and hardware topics. We will be doing all of this in a Linux environment on our workstation. If you’re not already running Linux, you can install it in a virtual machine and that should work OK with some caveats. Needed Hardware You’ll be able to follow along using just software if you don’t feel like buying anything. However, if you want to follow along with hardware, I highly recommend that you have the following shopping list1. Raspberry Pi Zero W; make sure to get one with header pins so you can connect to its UART microSD card; also make sure you have a way to plug this into your computer FT2232H breakout; this is a fairly generic little tool so any of the results you find will work. I like the purple ones with CJMCU printed on them. Breadboard wires; this lets you connect the breakout to the Raspberry Pi’s serial console. You might already have some of this lying around. If you have a Pi Zero non-W, don’t rush out and buy the W. You can make do with what you have. When you’re ready, jump to Part 3 to get started. Subscribe Stay tuned! You can subscribe to updates if you’d like to follow along. Some of the links in this article are affiliate links. The proceeds help me keep buying and building neat embedded systems. ↩︎",
    "author": "George Hilliard",
    "published": "Sat, 28 Dec 2019 18:00:00 -0600",
    "image": "https://www.thirtythreeforty.net/posts/2019/12/mastering-embedded-linux-part-2-hardware/rpizero.png",
    "source": "https://www.thirtythreeforty.net/posts/index.xml",
    "categories": null
  },
  {
    "id": "354e73cb-4fbd-4ed8-b2de-5f0c17a35afe",
    "title": "Designing My Linux-Powered Business Card",
    "link": "https://www.thirtythreeforty.net/posts/2019/12/designing-my-linux-business-card/",
    "description": "Table of Contents Designing the computer Picking a processor Finding resources for the F1C100s Everything else Designing the physical card Sizing Graphic design USB Hand-assembly Software Porting U-Boot and Linux Building the flash image Flashing a card Finishing touches I recently built a business card that runs Linux. This is a detailed design log, plus a few random notes, from the build. If you want to see the blinkenlights, first you should go read my other blog post detailing the finished product. Designing the computer First and foremost, I would need to choose a Linux-capable processor, because it would be the driving factor in the affordability and feasibility of the final product. Picking a processor I started by looking for processors that were the magic combination: inexpensive, USB, no BGA footprints, and purchasable somewhere, even if I had to get it from Taobao. (You usually can’t buy these processors from Mouser or the manufacturer.) Ideally, there would also be a known-good piece of hardware I could get as a development board. I also really wanted a part that had RAM included in the package. This is fairly rare for microprocessors, in contrast to micro_controllers_ which typically don’t have enough juice to run Linux. This constraint really narrowed down my choices, but I stuck with it because it would make design and assembly a lot easier. Many of the processors in this price class are made by Chinese companies and there’s not a lot of info about them available in English, so finding them takes some digging. (If you know of other Chinese-only processors in this category, please let me know about them as I would be excited to learn about them.) My first attempt was using an STM32F4, which can be persuaded to run Linux if it’s hooked up to external SDRAM, like in this Emcraft Systems system-on-module. Unfortunately the STM32 parts that can be hooked up to SDRAM are BGA, or else they use obscure RAM buses that I can barely find any documentation for, let alone buy parts for. The nail in this coffin is that the cheapest STM32F4 that would work was around $9 for the processor alone. That’s too expensive if I’m going to give away the result. I looked around a lot at the chips used in really cheap routers. Parts like the AR9331 are ancient MIPS-based designs that continue to be used in bottom-of-the-line routers. Unfortunately most of these parts are—you guessed it—BGA, and even the ones that aren’t, still don’t have RAM included. Really what I wanted was a really cheap processor for IoT, dashcams, or tablets. I struck gold with Sipeed’s Lichee boards, which are the cheapest Linux development boards I’ve seen anywhere. The Lichee Zero has an Allwinner V3s, which seemed to tick all the boxes. It’s QFP, has 64MB built-in RAM, and there are even people selling them on eBay. The V3s is very well supported by the sunxi community. Unfortunately the best price I could find was around $4 on Taobao. This wasn’t the end of the world if it was the best I could do, but I kept looking. Finally I found my pigeon: the Lichee Nano uses a very small Allwinner part called the F1C100s. Here’s the Nano next to an SD card. Pretty small. This is an ARM9 design Allwinner apparently makes for dashcams. ARM9 is ancient technology, but I am not trying to win any performance awards. The part comes in a QFN package with a rather small 0.4mm pitch, but at the end of the day it’s still workable with a steady hand. It has 32MB RAM in the package, which is a veritable bounty for my purposes. It is astoundingly cheap for a Linux-capable processor: In single quantities, I found it at $1.20 or so on Taobao, and recently I’ve seen listings for $0.90 apiece. I bought a big bag of them (top left). (It turns out that you can buy nearly any chip under the sun on Taobao. I used Superbuy to batch up my purchases into one box shipped overseas.) Finding resources for the F1C100s The best resource I found was that Sipeed actually published their schematic for the Lichee Nano. This was absolutely invaluable as there were several places in the datasheet where a pin was named, but there was nothing explaining what you should do with the pin. Googling around also led me to the reference manual for the F1C600, which is apparently an F1C100s rebadged as Linux-capable. So I had register definitions and a real datasheet. I want to reiterate that I’m doing this as a hack. Using random schematics you find on the internet is not the best way to build a product. Allwinner does not support this part unless you are a large company and get in touch with them directly. The F1C100s so cheap that it’s not even supported by the sunxi folks, but some work was done in early 2019 getting the part supported the Linux kernel. I found a branch on GitHub by Icenowy who added drivers for some of the other peripherals. I also found a port of U-Boot. With all this, I decided that the software was complete enough that I could write drivers for anything else I needed. Everything else Once I had the processor picked and laid out in KiCAD, the rest was reasonably easy. I made sure the interfaces were all very similar to the Nano, so that I could get my code working on the Nano and hopefully everything would Just Boot on the business card. I used ordinary NOR flash for storage and added an LED for bling. The first version had an unpopulated JTAG header on the back in case I got into dire straits; this proved unnecessary and I removed it on the second spin. I also threw in a Shitty Add-on header, just in case I needed UART on the final card. This was removed on the second spin and replaced with a nice compact SOICbite footprint; I have needed neither. Here’s the schematic; click to download. I hope it helps you if you want to use this part. Feel free to contact me if you have questions. Designing the physical card Sizing Board space was not a problem; the computer easily fits in the bottom corner of a standard-size card. A bigger problem was that I wanted the card to be as thin as possible; however, a PCB must be 2.2mm or so thick to make it fit in a USB port. I solved this by selecting 1mm PCBs and laser-cutting some 1mm acrylic into appropriately-sized spacers. The final assembly step is to superglue this spacer into place. Graphic design Designing the text of the card was easy enough, but because there’s no way to use custom fonts in KiCAD, I needed to import it as a vector. Unfortunately there is not a good solution to putting vector images on any layer except Edge.Cuts, and of course I did not want to do that. The best way I found was to export the design from Inkscape as a super-high-resolution 4000dpi PNG file, then trace it as a footprint in KiCAD using bitmap2component. Although tracing a bitmap makes my inner typographer cringe a little, in practice the resolution of the footprint far exceeds the board house’s capabilities and it looks great without hand-tracing every letter. Plenty of points here on the curves. USB Routing USB was tricky on this board because the traces are fairly long. Although I’m just using full speed USB, which is pretty forgiving, I still did my best to impedance-control these traces. The USB traces are comically large because the two-layer board makes getting decent capacitance difficult. Thank goodness it’s only 1mm thick (a standard 1.6mm board would make the traces even fatter). Hand-assembly I’m laser-cutting my own stencil. The 0.2mm apertures for the processor pins are at the hairy edge of what the machine is capable of. I ended up cutting the pins in two passes, skipping every other one, to prevent them from all melting together as the laser cut them one after the other. If I ever need to go any smaller, I’ll definitely just order a stencil from OSH Stencils. Software Porting U-Boot and Linux The first step of porting Linux to any board is getting U-Boot up and running. Someone on GitHub named Icenowy had done some work getting an older U-Boot version running on the part; it was in rough shape but it would boot, which I was very glad about. I rebased this onto v2019.04 and added support in a couple drivers for various other mostly-uninteresting subsystems like the pin controller and clock. Due to a bug, about 70% of my overall effort on the software was spent getting U-Boot to talk to the flash. U-Boot has a driver for the SPI peripheral on this part, but it didn’t work. The symptom was that the SPI peripheral could detect the flash chip, but always read garbage from it. It turned out that U-Boot likes to reset the SPI peripheral when it’s done with it. This apparently hasn’t caused any problems for other Allwinner parts. However, on the F1C100s, resetting the peripheral unsurprisingly erases its configuration registers, especially those for setting speed. Once I figured this out, it was a quick fix to reconfigure the registers when needed: From 869a7c04f23fe9e10c26b7f1af9774ea813ea49a Mon Sep 17 00:00:00 2001 From: George Hilliard Date: Wed, 19 Jun 2019 22:37:30 -0500 Subject: [PATCH] sunxi-spi: restore bus speed and mode after reset The sunxi SPI peripheral driver resets the device completely (disabling clocks and power) when the bus is released and turns it back on when claiming. On the F1C100s (and maybe others), the peripheral resets back to default register settings, losing speed and mode settings. Restore these settings when resetting the peripheral. Signed-off-by: George Hilliard Cc: Jagan Teki --- drivers/spi/spi-sunxi.c | 10 +++++++++- 1 file changed, 9 insertions(+), 1 deletion(-) diff --git a/drivers/spi/spi-sunxi.c b/drivers/spi/spi-sunxi.c index dbfeac77eec..2d02289d04d 100644 --- a/drivers/spi/spi-sunxi.c +++ b/drivers/spi/spi-sunxi.c @@ -35,6 +35,10 @@ DECLARE_GLOBAL_DATA_PTR; +/* Forward declarations of some reused functions */ +static int sun4i_spi_set_speed(struct udevice *dev, uint speed); +static int sun4i_spi_set_mode(struct udevice *dev, uint mode); + /* sun4i spi registers */ #define SUN4I_RXDATA_REG 0x00 #define SUN4I_TXDATA_REG 0x04 @@ -300,7 +304,8 @@ static inline int sun4i_spi_set_clock(struct udevice *dev, bool enable) static int sun4i_spi_claim_bus(struct udevice *dev) { - struct sun4i_spi_priv *priv = dev_get_priv(dev-\u003eparent); + struct udevice *bus = dev-\u003eparent; + struct sun4i_spi_priv *priv = dev_get_priv(bus); int ret; ret = sun4i_spi_set_clock(dev-\u003eparent, true); @@ -317,6 +322,9 @@ static int sun4i_spi_claim_bus(struct udevice *dev) setbits_le32(SPI_REG(priv, SPI_TCR), SPI_BIT(priv, SPI_TCR_CS_MANUAL) | SPI_BIT(priv, SPI_TCR_CS_ACTIVE_LOW)); + sun4i_spi_set_speed(bus, priv-\u003efreq); + sun4i_spi_set_mode(bus, priv-\u003emode); + return 0; } Everything works great after this fix! Linux 5.2 booted like a champ. Again, I ported Icenowy’s Linux work forward—some of it had been merged; some of it needed massaging to apply. Normal Linux kernel development stuff. There were a couple typos that I fixed to get USB working. Building the flash image The board has 8MB of flash. This must include the bootloader, the kernel, the root filesystem, and the small persistent partition. I decided to use UBI to house everything except the bootloader, which has to be positioned at the very front of the flash. Using genimage, I define the physical partitions: image flash.bin { flash {} flashtype = w25q64 partition uboot { image = \"u-boot-sunxi-with-spl.bin\" size = 256K } partition rootubi { image = root.ubi size = 0 } } Then, root.ubi is built from the partitions' images: image root.ubi { ubi {} partition kernel { image = \"zImage\" read-only = true } partition dtb { image = \"businesscard.dtb\" read-only = true } partition root { image = \"rootfs.squashfs\" read-only = true } partition flashdrive { image = flashdrive.img read-only = true } partition persist { image = persist.ubifs } } During build, genimage uses this definition to automatically compile a binary ready to flash to the card. Flashing a card Once I’m ready to program a newly made card, I simply plug it into my laptop. The processor can’t find anything to boot (the flash is blank), so it runs its built-in “FEL mode,” which lets me use a tool called sunxi-fel to send the generated image over USB: output/host/bin/sunxi-fel -p spiflash-write 0 output/images/flash.bin Flashing eight measly megabytes takes the better part of two minutes, because NOR flash has an amazingly slow write speed of around 100KB/s. Finishing touches Getting everything buttoned up is the hardest part of any project, in my opinion. I’ve been working on these blog posts, and cleaning up my Buildroot work, for the past month or so in my spare time. I hope to ultimately upstream all the software changes, and I’ve open-sourced everything for the benefit of the community. Soon I hope to put together a “resource page” for the F1C100s with links to everything you need to get going with it. In the meantime, you can go get everything from the Resources section of my main write-up. I’ll also drop another plug for my ongoing Mastering Embedded Linux series. I’m walking through how to build hardware and software from scratch for tiny, cheap Linux systems much like my business card. I hope you have enjoyed this write-up. Feel free to leave comments or drop me a line!",
    "author": "George Hilliard",
    "published": "Mon, 23 Dec 2019 19:37:00 -0500",
    "image": "https://www.thirtythreeforty.net/posts/2019/12/designing-my-linux-business-card/businesscard-top_huad90566bef925e8b01048d4355f78bd6_6751801_1024x1024_fit_q80_box.jpg",
    "source": "https://www.thirtythreeforty.net/posts/index.xml",
    "categories": null
  },
  {
    "id": "02ac2107-8772-4bb9-a042-f44275135d14",
    "title": "My Business Card Runs Linux",
    "link": "https://www.thirtythreeforty.net/posts/2019/12/my-business-card-runs-linux/",
    "description": "Table of Contents Design and assembly Bill of Materials \u0026 Cost Capabilities USB Shell Emulated Flash Drive Resources Source Code F1C100s Documentation Conclusion I’m an embedded systems engineer. I spend a lot of my free time looking for things I could use in future designs, or things that tickle one of my fancies. One of those things is cheap Linux-capable computers, the cheaper the better. So I started diving into the very deep rabbit hole of obscure processors. I thought to myself, “These processors are nearly cheap enough to give away.” After a while I hit upon the idea of making a barebones Linux board in a business card form factor. As soon as I had the idea I thought it would be pretty cool to do. I have seen electronic business cards before, with various fun features including emulating USB flash drives, blinkenlights, or even wireless transceivers. I have never seen one running Linux, however. So I built one. This is the finished product. It is a complete, minimal ARM computer running my customized Linux firmware built with Buildroot. It has a USB port in the corner. If you plug it into a computer, it boots in about 6 seconds and shows up over USB as a flash drive and a virtual serial port that you can use to log into the card’s shell. The flash drive has a README file, a copy of my résumé, and some of my photography. The shell has several games and Unix classics such as fortune and rogue, a small 2048, and a small MicroPython interpreter. All this is accomplished on a very small 8MB flash chip. The bootloader fits in 256KB, the kernel is 1.6MB, and the whole root filesystem is 2.4MB. So, there’s plenty of space for the virtual flash drive. It also includes a writable home directory, on the off chance that anyone creates something they want to keep. This is also saved on the flash chip, which is properly wear leveled with UBI. The whole thing costs under $3. It’s cheap enough to give away. If you get one from me, I’m probably trying to impress you. Design and assembly I designed and built everything myself. This is literally my job, and I enjoy it, so much of the challenge was finding parts that were cheap enough for a hobbyist. The choice of processor was the most critical decision to keep the cost low and make the project feasible. After much research, I selected the F1C100s, a fairly obscure cost-optimized (read: damn cheap) part made by Allwinner; it includes both RAM and CPU in a single package. I bought these on Taobao. All the other miscellaneous components were sourced from LCSC. I fabricated the PCBs with JLC. For $8 I got 10 copies. I have been very impressed with boards I’ve gotten from JLC; they’re not quite as nice as the ones from OSHPark, but they look great, especially for the price. The first spin of the boards were matte black, which looked fine but were quite the fingerprint magnets. There were a couple problems with the first spin: first, the USB port wasn’t long enough to reliably make contact in many USB ports. Less critically, the flash footprint was wrong, which I worked around by bending the leads under the part by hand. (My wife said I was “dead-spidering” the part!) Once I had validated everything else, I re-spun the boards to get the version you see at the top of this article. Due to the size of all these small parts, right away I decided to reflow solder everything using a cheap reflow oven. I have access to a laser cutter, so I laser-cut my own solder paste stencil using laminator pages. The stencil turned out reasonably well. The 0.2mm apertures for the processor pins needed special attention to get them to come out clean: laser power and focus were critical. Other blank PCBs make a good jig for holding your board to apply paste. I applied solder paste and placed components by hand. I made sure to have a lead-free process—the boards, parts, and solder paste are all RoHS—so that I wouldn’t feel bad about giving them to people. I was a little off-target on this particular print, but solder paste is pretty forgiving and these assembled fine. Each component takes around 10 seconds to hand-place, so I tried to keep component count as low as possible. For more discussion about the design and software, you might be interested in reading my detailed write-up. Bill of Materials \u0026 Cost I kept costs low. It’s cheap enough that I don’t feel bad giving it away, as designed! I’m not going to give one to absolutely everyone because it does take time to assemble each card, and assembly cost is not factored in here (my time is “free”). Component Price F1C100s $1.42 PCB $0.80 8MB flash $0.17 All other components $0.49 Total $2.88 Of course, there are other costs that are difficult to quantify like shipping (since it’s spread across multiple projects). But this is definitely pretty cheap for a Linux board. It also gives a pretty decent starting point for quantifying how much it costs companies to manufacture bottom-end devices: you bet they’re getting everything even cheaper than I am! Capabilities What can I say? It boots a super stripped-down Linux in about 6 seconds. Due to form factor and cost, the card lacks I/O, networking, and any amount of storage to run heavyweight programs. Nonetheless, I managed to cram a bunch of interesting stuff into the firmware image. USB I could do any number of things with the USB, but I chose to keep it fairly simple so that people could have a decent chance of getting everything working on their computer when they tried it out. Linux lets you behave as a “device” with the Gadget Framework. Since I forward-ported some drivers from others' previous work on this processor, I have all the functionality of the entire USB gadget framework at my disposal. I decided to emulate a pre-generated flash drive and supply a shell over a virtual serial port. Shell You can run all these from the emulated serial console after you log in (as root, the only user): rogue: the classic Unix dungeon crawler. 2048: a simple console mode 2048 game. fortune: various pithy sayings. I decided not to include the entire database of quotes here to save space for other functionality. micropython: a very small Python interpreter. Emulated Flash Drive During the compilation process, the build tools generate a small FAT32 image and add it as one of the UBI partitions. As I described above, the Linux gadget subsystem presents this as a mass storage device to the PC. If you’d like to see what appears on the flash drive, the easiest thing to do would be to go look at the source code. There’s some of my photography and my resume. Resources Source Code If you’d like to see my Buildroot tree, it’s open-sourced on GitHub at thirtythreeforty/businesscard-linux. It contains the code to generate the NOR flash image, which is then installed via the processor’s USB download mode. It also has package definitions for the games and other goodies like fortune that I packaged for Buildroot once I got everything working. If you’re wanting to use the F1C100s in a project, it’s a great starting point (and feel free to get in touch if you have questions). I rebased Icenowy’s excellent F1C100s work on Linux v4.9. My business card runs near-mainline v5.2 with this handful of patches rebased and debugged. It’s hosted on GitHub at thirtythreeforty/linux. I believe I currently have the world’s best port of U-Boot to the F1C100s, based again in part on some work by Icenowy. (Surprisingly, getting U-Boot fully working was quite annoying.) I am working on upstreaming this. In the meantime, it is also on GitHub at thirtythreeforty/u-boot. F1C100s Documentation I found some (sparse) documentation for the F1C100s, which I’m mirroring here: Allwinner F1C100s Datasheet gives pinouts and general info Allwinner F1C600 Reference Manual gives register definitions for the F1C600, which is an F1C100s rebadged as Linux-capable (ha!) I heavily drew from the schematic for Sipeed’s Lichee Nano, which was the dev board I used to get my software working. You can get a KiCAD symbol and footprint for the F1C100s in my KiCAD parts library. And finally, I’ve uploaded my schematic for the curious. You can download it by clicking on it below. The F1C100s is somewhat scarce here in the US, so here’s an open offer for people who want to design with this part: if you design a board with this chip on it, get in touch and I’ll get you some samples to build your board. Conclusion I taught myself a lot on this project: it’s my first project using a reflow oven to solder the parts. I also had to learn how to find resources for poorly-documented parts. There was a lot more to it than what I touched on in this quick presentation; again, if you want to see how the sausage gets made, see also my companion detailed write-up. I drew from my existing experience with embedded Linux and designing PCBs. It isn’t flawless, but it’s a pretty good representation of my abilities. If you’d like to learn how to do this kind of thing, you might also be interested in my ongoing Mastering Embedded Linux series! I’m walking through how to build hardware and software from scratch for tiny, cheap Linux systems much like my business card. You can also subscribe to all future updates from the fancy new Subscribe page.",
    "author": "George Hilliard",
    "published": "Mon, 23 Dec 2019 19:36:00 -0500",
    "image": "https://www.thirtythreeforty.net/posts/2019/12/my-business-card-runs-linux/businesscard-top_huad90566bef925e8b01048d4355f78bd6_6751801_1024x1024_fit_q80_box.jpg",
    "source": "https://www.thirtythreeforty.net/posts/index.xml",
    "categories": null
  },
  {
    "id": "edb1b452-08b2-484a-9ed6-ef89c358c393",
    "title": "Mastering Embedded Linux, Part 1: Concepts",
    "link": "https://www.thirtythreeforty.net/posts/2019/08/mastering-embedded-linux-part-1-concepts/",
    "description": "Table of Contents Embedded Linux concepts Components Microprocessor Memory Storage Software Bootloader Boot ROM Kernel Userland Next steps One of my favorite hobbies is hacking low-cost embedded systems that run Linux. These systems are absolutely everywhere: the combination of powerful yet inexpensive processors, mass production of consumer goods, and the flexibility of Linux means that hobbyists can buy or build an embedded device capable of running Linux, often for less than $10. I’ll say that again: not only is embedded Linux within reach for makers and hobbyists, it’s also cheap to throw into your next design. I’d like to show you just how diverse this ecosystem is, and then I’d like to empower you to start tinkering with these systems. This article series will walk you through choosing hardware and compiling your first system image from source code. Then, we’ll dive deeper into how to pick components for building a custom Linux board, how to deliver updates in a reliable, production-ready way, and how to customize the Linux kernel. In short, this series of articles will get you up and running with the embedded Linux ecosystem. Ideally you should have some Linux command line knowledge, a good understanding of the overall components of an embedded system (flash memory, processor, peripherals), and a good chunk of free time for learning and experimenting. via xkcd Let’s start with some high-level concepts. Having a big-picture view will help prevent being overwhelmed when we start going into more detail later. Embedded Linux concepts If you’re already familiar with microcontrollers, you’re by-and-large used to having everything in a single package. You buy an STM32F1 or whatever, and you get flash program memory, RAM, a processor core or two, and some peripherals. If you buy a part specifically designed for it, you might get one or two really nice peripherals tailored to an application — built-in Bluetooth, USB 3.0, or a MIPI camera interface. The device probably has a development studio in which you write your code and send it over to run “bare metal” without a real operating system to get in its way. Finally, all this tends to come in a fairly hobbyist-friendly package: SOIC or QFP packages are usually available for at least one part in a microcontroller line. graph BT; subgraph Microcontroller A[Processor core] --- B[RAM] A --- ST[Storage] subgraph Peripherals D[USB] E[ADC] S[SPI] U[UART] end A --- D A --- E A --- U A --- S end The architecture is a little different with Linux-capable processors. Typically, these processors cram in nearly every peripheral you can think of, and many you haven’t heard of. In exchange, they frequently lack built-in RAM, and always lack storage. On top of that, starting one of these devices up is a more involved setup: the processor typically has a built-in boot ROM that is responsible only for loading your bootloader. graph BT; B[RAM] subgraph Microprocessor A[Processor core] subgraph Peripherals D[USB] E[ADC] S[SPI] U[UART] end A --- D A --- E A --- U A --- S BC[Boot ROM] --- A end B --- A ST[Storage] ST --- S From there, the bootloader will load Linux, which will configure the rest of the peripherals and run a preset series of programs. Networking, application logic, and user interface are all available, just like a bigger Linux system. As far as the application is concerned, the environment looks identical to a desktop Linux system — all the APIs are the same, the filesystem looks normal, and it can talk to the outside world using normal networking protocols. graph TB; Hardware --\u003e Bootloader Bootloader --\u003e Linux Linux --\u003e A1[SSH server] Linux --\u003e A2[Web server] Linux --\u003e A3[User interface] Linux --\u003e A4[Custom programs] All this is stored in a tiny system image that can be as small as 4MB, depending on the needs of the device. But this is a key point, so I’ll say it again: every software component running on Linux is nearly identical to the version you’d run on a desktop! Linux provides all the abstraction your applications need, so your job is mostly reduced to getting the bootloader and Linux kernel ported to your hardware. Components Almost every one of these components is replaceable. The choices made for each of these constitute a large portion of the design decisions you make while choosing an embedded system. Microprocessor Of course, your processor will determine a lot of your system’s capabilities. Most of the small, cheap embedded Linux systems you’ll be interacting with will either be using an ARM or MIPS core, and most of the industry is moving further and further toward ARM. (Keep your eye on RISC-V; it’s an open-source instruction set architecture that isn’t quite ready for prime time but has already seen a lot of industry interest.) On top of the architecture, each silicon vendor adds many different peripherals. Much like their microcontroller brethren, these are small bits of silicon that do one thing, like USB or SPI. They are often configured via memory-mapped registers, and often, manufacturers will add more capabilites to a new product (a “part”) by copy-pasting peripheral IP from an older part, or by adding more copies of the peripheral to the new part. Memory These processors typically don’t ship with memory. This is provided separately. The usual kinds of memory you might be familiar with apply here: SDRAM is often used on the low end, while DDR, DDR2, and DDR3 are used for more powerful parts. Although I haven’t yet seen a whole lot of devices using DDR4, I’m sure we’ll get there. The processor provides a module to manage the memory; this module is either initialized by the manufacturer’s boot code or by the first stage of the bootloader. Note how I said processors typically don’t ship with RAM embedded in their package? Sometimes, they do. If you’re buying an embedded system on a module, or a ready-to-go development board, you don’t care about this, because someone else has already done the hard work of putting the memory on the PCB. But if you are a hobbyist building your own from individual parts, you care very deeply about these parts (whether or not you know it yet). That’s because laying memory out on a PCB is difficult for a few different reasons. So when I’m talking about hardware in my next article, I’ll be sure call out some parts I’ve found that ship their own memory. Storage Storage, distinct from memory, is the involatile place your code and data is stored. On embedded systems, it will almost certainly be some form of flash memory. Even in cases where the system boots from the network, typically this is still assisted by a bootloader stored in flash. There are multiple kinds of flash memory. You are likely already familiar with SD or microSD cards. These provide raw storage, plus a flash controller whose job is to abstract the raw flash into a well-behaved storage medium (more on this in a second). SD cards are not known for their reliability, as anybody who has used a Raspberry Pi can tell you. However, later in this series, I’ll explain how best to work around questionably reliable storage media. eMMC is an embeddable version of an SD card. Conceptually it is very similar; it has raw flash and a controller bundled into a single part. Unfortunately it is usually sold in nasty BGA packages like is pictured, which aren’t a problem for large companies but are pretty much unusable for hobbyists because you can’t easily solder it. via Wikimedia Foundation You can also buy raw flash without a controller attached to it. This is typically cheaper than eMMC and is sold in two varieties, NOR and NAND. NOR flash is slow to write, very cheap, and not very dense. Boot ROMs almost always know how to read from NOR flash accessed over SPI. If you’re not writing very often, maybe only once to burn firmware to the device, it’s a great option. NAND flash is faster, denser, and a little more expensive. You can buy NAND that’s accessed via SPI, but there are also faster parts that can be accessed over a dedicated NAND bus. Raw flash isn’t really all that nice. You cannot write to it willy-nilly; flash can only be written once before you must erase it in large blocks. Furthermore, flash can be written a limited number of times before it wears out (between 1000 and 100000, depending on the technology). A software guy’s first instinct is to throw software at a hardware problem, and that’s what we’ll do here, later on. A Linux subsystem called UBI can help work around these limitations and make raw flash nicer to use. Software If you’re developing for one of these systems, you provide the bootloader, kernel, and filesystem. Thankfully, once Linux has booted, it often supports many of the peripherals on a system out of the box using a wonderfully consistent set of driver interfaces — in stark contrast to how often you must write drivers yourself on a microcontroller. In general the software typically follows a very understandable pattern that you can apply anywhere. You don’t have to micromanage all these pieces at once. There are embedded Linux distributions that provide a complete toolkit to help you build a firmware image with all of this included. Later on, we’ll start using a distribution and compile our own complete system. Bootloader The bootloader is the first program that the engineer or hacker has control over. It is only as complex as is needed to load the kernel and get it running. In practice, the bootloader can still be pretty complex. Your embedded Linux system will almost certainly be using Das U-Boot, the so-called “universal bootloader.” (It really does run on nearly everything!) The bootloader has stripped-down drivers for the onboard storage, perhaps a couple of other peripherals, and just enough code to read the kernel into memory and start executing it. A lot of times, people don’t mess with the bootloader that comes with their board, and they just follow the conventions it’s expecting. That’s fine, but often you want your system to do something the stock bootloader can’t. With the right tools, you have no reason to be afraid of modifying the bootloader — it is a program like any other. Boot ROM I should mention the Boot ROM here. The Boot ROM is a small chunk of code embedded in the processor, provided by the manufacturer. It is very, very simple, and typically it immediately runs the real bootloader from a couple different storage media — often this “boot order” is specified in the processor’s datasheet. Boot ROMs have one other cool trick — they often speak USB! This allows you to connect a brand-new, unprogrammed system to a computer over USB and run code, or flash a storage medium. If it’s present, this feature makes a board nearly impossible to brick. Different manufacturers call this mode different things. NXP/Freescale calls it Download Mode. Allwinner calls it FEL mode. You will generally need a special program on your workstation to use this mode, and capabilities vary between different processors. Kernel You already know what Linux is, I hope! Linux must be ported to each architecture, each part, and each board. All these drivers ship with the kernel source. There’s a lot of them, but because of the tendency of manufacturers to reuse IP, it’s managable. Typically, a port consists of the following: Architecture code provides low-level routines for very basic things like register manipulation, synchronization primitives, etc. Porting Linux to a completely new architecture is an immense amount of work, and you will likely not have to do this anytime soon. Drivers make up the bulk of the kernel source code. This is because Linux ships drivers for every device supported by Linux, in one source code tree. Most of them are not needed by your embedded system — for example, a MIPS router has absolutely no use for a driver for Intel QuickSync. So most of these drivers are not even compiled for very small systems. The device tree is a very important part of the port that explains to the kernel how hardware is actually connected to the system. Device trees are the “config files” for Linux drivers. This means that Linux drivers are easy to reuse — if you add a device tree entry for a piece of hardware on your system and compile the relevant driver, the driver will find the entry and set itself up. We’ll talk a lot about device trees later. Userland Like I mentioned already, the “rest” of the software on an embedded system is pretty much identical to its desktop counterparts. Together, this “everything else” is frequently called “user land,” because it’s the land where user software can roam freely, without worries of the nasty hardware gremlins that lurk underneath the peaceful abstraction of the Linux API. We’ll go over userland in more detail later. The major components you need to know right now are the filesystem, the init system, and the shell. The filesystem is important because some are better for embedded systems than others — remember the SD card reliability we talked about? Filesystems can help with this. If the system is using eMMC or an SD card, it looks like a normal “block device,” and you can use the standard ext2/3/4 or stuff like the flash-friendly filesystem (f2fs), which helps with reliability in various ways. If you’re on raw flash, you need to use more esoteric filesystems that are designed for raw flash, such as JFFS2 or UBIFS. My personal favorite is to use squashfs on an UBI partition; we’ll talk more about this when we start customizing our firmware image! Next, the init system is responsible for managing userland. You might have heard of systemd? It’s used on bigger embedded systems. However, it’s too big for the really small systems, which usually use a SysV init scheme of simple shell scripts. Most embedded Linux distributions provide this, and again, when we’re customizing firmware, I’ll show you how to add your programs to run automatically. And finally, the shell is what you’ll interact with. Traditionally, this is done over a UART serial connection, but occasionally you might have the luxury of a screen. If you get your system to a shell prompt, you have definitely gotten your system up and running! Next steps Okay. That’s a lot of info all at once. Thanks for staying with me! With that out of the way, here’s my rough plan for the series: Hardware: We’ll choose a development board. Spoilers: I’ll use a Raspberry Pi Zero for demo for the first few software tutorials. But here, I’ll also point out various other cheap Linux-capable hardware. If you’re interested in building your own, I am also recommending hacker-friendly parts that you can add to your own PCB. Buildroot: For a quick win, we’ll download Buildroot and compile a complete operating system from scratch. We’ll flash it and boot it on real hardware. I’ll be sure to explain what’s happening at each step. Customizing the firmware image: here we’ll depart from what the Buildroot developers' defaults and begin to make changes to the Raspberry Pi’s firmware. Each individual step is pretty straightforward, and all combined, your finished system can look completely different from the stock one. It’s all up to the engineer. Going smaller: We leave the sunny skies of Raspberry Pi land and start working on an image for a very small board with just 4MB of storage. It’s quite impressive how much functionality you can cram in—take that, node_modules! Hacking on U-Boot and Linux: The available code for your board’s processor is out of date. What do you do? Building a board from scratch: We’ll go back to the parts I recommend in the Hardware stage and start building our very own dev board. (This part is subject to change as I figure out the best approach!) In the next article we’ll look around at some hardware. If you’d like to follow along, you can subscribe. In the meantime, if you’d like to Linux-enable your project, product, or program, leave a comment or drop me a line—I’d love to hear from you and I’m always happy to hear about cool stuff.",
    "author": "George Hilliard",
    "published": "Sun, 25 Aug 2019 21:15:00 -0500",
    "image": "https://imgs.xkcd.com/comics/cautionary.png",
    "source": "https://www.thirtythreeforty.net/posts/index.xml",
    "categories": null
  },
  {
    "id": "44534c12-f3f3-4b85-8b03-d91a566bbe95",
    "title": "T-962 Reflow Profile Calculator",
    "link": "https://www.thirtythreeforty.net/posts/2019/08/t962-reflow-profile-calculator/",
    "description": "I am the proud owner of a new-to-me Puhui T-962. This is a reflow oven that can be bought fairly cheaply, but because the manufacturer cuts corners in several places, you have to do several modifications to make it usable. The main thing I did was install the replacement firmware written by Unified Engineering, and replace the masking tape (!) with kapton tape. Either firmware allows you to configure two custom profiles. You specify a target temperature at 10-second intervals. Unfortunately most solder paste datasheets don’t specify at 10-second intervals; rather, they specify times and target temperatures. Here’s an example from MG Chemical for their 4902P low-temp, lead-free paste: It’s difficult to “eyeball” the interpolated 10-second intervals here. They only give a bullet every 25 seconds, and you even have to guess those temperatures! So, I made a spreadsheet—you can download it for yourself. It will do a linear interpolation of the points you give in columns A and B. If you need more interpolated times, be sure to extend columns E thru I, which are hidden for clarity. The license for the spreadsheet is CC-BY-SA, meaning you can use it commercially as long as you retain the copyright notice. Hope this saves you some time!",
    "author": "George Hilliard",
    "published": "Sat, 17 Aug 2019 00:00:00 +0000",
    "image": "https://www.thirtythreeforty.net/media/t962.jpg",
    "source": "https://www.thirtythreeforty.net/posts/index.xml",
    "categories": null
  },
  {
    "id": "7f741470-1c89-4ff8-8bce-9cb0601c272a",
    "title": "Spinning up a Hugo-powered blog with GitLab Pages",
    "link": "https://www.thirtythreeforty.net/posts/2019/06/spinning-up-a-hugo-blog/",
    "description": "In the name of documenting some of my free time for fun and profit(tm), I am starting a blog. I am many things, but I am not a web developer, so I need something quick and easy to use. At the same time, as a programmer, I really appreciate the ability to script my text documents where needed, and to have automation around my chosen tools. I have elected to use the popular Hugo as the right combination of a) powerful and b) easy to get started with. So, as my first challenge for myself, I would like to automatically build and publish the blog from source every time I upload a change. I would also like to secure the site with HTTPS, because it’s 2019. Unfortunately, my choice of Hugo means I am out of the GitHub Pages ecosystem, which only allows you to use Jekyll. This isn’t really the end of the world, as I am a huge fan of GitLab’s continuous integration (CI), including their very generous free tier of build servers. So I’ll give a quick run-through of what you need to do to get a site online, for free1, in about an hour. This assumes you: 10 min Have followed the excellent Hugo Getting Started Guide 5 min Have initialized a Git repository on GitLab and pushed your blog/code there 20 min Have bought your domain of choice, or are okay with using something.gitlab.io. GitLab CI Right. Let’s set up CI. If you’re already generating your site on the command line with Hugo, this is cake. We’ll use a Docker image with Hugo installed, generate the site, and tag the generated folder as the artifact. Then, GitLab will serve this folder. They have some really good documentation about all this. For some reason, there isn’t an official Hugo Docker image, so for now I’ll use one supplied by GitLab that appears to be well maintained. Here’s the .gitlab-ci.yml file. image: registry.gitlab.com/pages/hugo:latest variables: GIT_SUBMODULE_STRATEGY: recursive pages: script: - hugo artifacts: paths: - public only: - master The important parts are that the job is named pages, the content appears in a public/ directory in the artifact, and the job only runs on the master branch—you don’t want to publish whichever branch you last pushed to! Commit this to the root of the repository, and push. GitLab will run the script and publish your site! In my experience, this takes up to 30 minutes to propagate. Be patient, and do all your validation on your workstation before you publish. Custom domain If you want a custom domain, head to your GitLab repo’s Settings \u003e Pages and add the domain. You will need to validate it by adding a custom DNS TXT record, and point the actual domain at GitLab servers. Note: be sure to leave the TXT record in place! GitLab periodically revalidates it and your site will get un-validated if you remove it. HTTPS If you want a custom domain name for your blog, and you want it accessible via HTTPS, this is where it gets hairy. GitLab does not quite yet support automatic HTTPS with LetsEncrypt for custom domains like GitHub does. So, there are a couple ways to do HTTPS. We could go through CloudFlare, but that requires monkeying with your site’s DNS nameservers and adds an extra account to keep track of. We could also use LetsEncrypt and maybe even use a GitLab CI job to pass the challenges and keep the certificate updated automatically. The DNS challenge, which simply involves adding a DNS record much like GitLab’s challenge earlier, would be ideal for this, because it could be accomplished entirely from a runner with plain certbot. Unfortunately, most DNS providers provide a terrible or nonexistent API, so you’d need to use something like Google Cloud DNS for this to be a viable option. The HTTP challenge sounds like a lot of pain. Normally you’d have a webserver watching a folder that certbot can poke directly, and the challenge would be quick and automated. But with a Git-tracked and Hugo-processed site, you’d need to commit the file, push the file, wait for GitLab Pages to update (which can take a while), etc. This does not sound fun. Fortunately, Rodrigo Dato has done the hard work and written a tool called gitlab-le that does all the steps you need. I have built and published a gitlab-le Docker image that you can grab: $ docker run --rm -it registry.gitlab.com/thirtythreeforty/gitlab-letsencrypt gitlab-le Let’s call this tool from CI by adding a job in .gitlab-ci.yml: certificate: image: registry.gitlab.com/thirtythreeforty/gitlab-letsencrypt script: - | gitlab-le \\ --domain YOUR_DOMAIN \\ --email YOUR_EMAIL \\ --repository YOUR_BLOG_REPO_URL \\ --token $GITLAB_ACCESS_TOKEN \\ --path static/.well-known/acme-challenge when: manual When you generate your access token, it would be smart to put it in a CI variable, so it’s not checked into your repository. Note also that Hugo copies things in the static folder as-is to the output folder, so that’s where we’ll have gitlab-le put the challenge info. When you run this, either via Docker or as a GitLab job, you should see something like: By using Let's Encrypt, you are agreeing to the TOS at https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf Uploaded challenge file, polling until it is available at http://www.thirtythreeforty.net/.well-known/acme-challenge/7Vui_I58QATNbtTz1C3CasYriSShSbJKxnCk0IKY5FE Could not find challenge file. Retrying in 30s... Could not find challenge file. Retrying in 30s... Success! Your GitLab page has been configured to use an HTTPS certificate obtained from Let's Encrypt. Try it out: https://www.thirtythreeforty.net (GitLab might take a few minutes to start using your certificate for the first time) This certificate expires on Mon Sep 02 2019 01:59:40 GMT+0000 (Coordinated Universal Time). You will need to run gitlab-le again at some time before this date. You can add this as a periodic job in GitLab if you like. Wrapping up So this blog is built with Hugo, compiled on GitLab CI, hosted on GitLab Pages, and secured via LetsEncrypt. Let me know if you have any feedback on any of this! Renting a domain will of course cost a small fee. ↩︎",
    "author": "George Hilliard",
    "published": "Sat, 01 Jun 2019 00:00:00 +0000",
    "image": "https://www.google-analytics.com/collect?v=1\u0026t=pageview\u0026tid=UA-144893958-1\u0026aip=1\u0026cid=84aa27b7-bf28-4e6e-9d0d-edf118791d2e\u0026cm=rss\u0026cs=rss\u0026ck=\u0026dt=Spinning up a Hugo-powered blog with GitLab Pages\u0026dl=https://www.thirtythreeforty.net//posts/2019/06/spinning-up-a-hugo-blog/",
    "source": "https://www.thirtythreeforty.net/posts/index.xml",
    "categories": null
  },
  {
    "id": "d5a10fa1-13ec-4811-b100-243664856e51",
    "title": "Identity and Access Management with Julianna Lamb",
    "link": "https://softwareengineeringdaily.com/2024/10/09/identity-and-access-management-with-julianna-lamb/?utm_source=rss\u0026utm_medium=rss\u0026utm_campaign=identity-and-access-management-with-julianna-lamb",
    "description": "Authentication is a key requirement for any B2B software application, especially if software vendors are selling to enterprise clients who are likely to have strict authentication requirements for the vendors they use. However, building authentication for a B2B application is typically complex and resource-intensive due to the data models required, the provisioning and managing accounts, The post Identity and Access Management with Julianna Lamb appeared first on Software Engineering Daily.",
    "author": "SEDaily",
    "published": "Wed, 09 Oct 2024 09:00:00 +0000",
    "image": "https://traffic.megaphone.fm/SED8999448795.mp3",
    "source": "https://softwareengineeringdaily.com/category/podcast/feed",
    "categories": [
      "All Content",
      "Exclusive Content",
      "Gregor Vand",
      "Hosts",
      "Podcast",
      "authentication",
      "B2B software application",
      "Julianna Lamb",
      "Stytch"
    ]
  },
  {
    "id": "2dad1e08-51a1-4400-bce5-37445cec1fa0",
    "title": "Building Secure Payments Infrastructure with Jack Gibson",
    "link": "https://softwareengineeringdaily.com/2024/10/08/building-secure-payments-infrastructure-with-jack-gibson/?utm_source=rss\u0026utm_medium=rss\u0026utm_campaign=building-secure-payments-infrastructure-with-jack-gibson",
    "description": "J. P. Morgan Payments is one of the leaders in payments processing with a staggering $10 trillion in payments handled daily. The company recently released its Payments Developer Portal, or PDP, which serves as a gateway for developers to build and test payment APIs, and accept, manage, and send payments on their own platforms. Developing The post Building Secure Payments Infrastructure with Jack Gibson appeared first on Software Engineering Daily.",
    "author": "SEDaily",
    "published": "Tue, 08 Oct 2024 09:00:55 +0000",
    "image": "https://traffic.megaphone.fm/SED1941872490.mp3",
    "source": "https://softwareengineeringdaily.com/category/podcast/feed",
    "categories": [
      "All Content",
      "Exclusive Content",
      "Hosts",
      "Podcast",
      "Sean Falconer",
      "financial APIs",
      "J. P. Morgan",
      "Jack Gibson",
      "Payments Developer Portal"
    ]
  },
  {
    "id": "cde1405e-2bd7-4679-9629-673a5152977c",
    "title": "MongoDB Vector Search with Ben Flast",
    "link": "https://softwareengineeringdaily.com/2024/10/03/mongodb-vector-search-with-ben-flast/?utm_source=rss\u0026utm_medium=rss\u0026utm_campaign=mongodb-vector-search-with-ben-flast",
    "description": "MongoDB Atlas is a managed NoSQL database that uses JSON-like documents with optional schemas. The platform recently released new vector search capabilities to facilitate building AI capabilities. Ben Flast is the Director of Product Management at MongoDB. He joins the show to talk about the company’s developments with vector search. This episode is hosted by The post MongoDB Vector Search with Ben Flast appeared first on Software Engineering Daily.",
    "author": "SEDaily",
    "published": "Thu, 03 Oct 2024 09:00:50 +0000",
    "image": "https://traffic.megaphone.fm/SED4448143507.mp3",
    "source": "https://softwareengineeringdaily.com/category/podcast/feed",
    "categories": [
      "All Content",
      "Exclusive Content",
      "Hosts",
      "Lee Atchison",
      "Podcast",
      "Ben Flast",
      "MongoDB Atlas",
      "NoSQL database",
      "vector search"
    ]
  },
  {
    "id": "bef17d84-1121-42f2-89b4-e8b89a19e6f2",
    "title": "N64 Recompiled with Darío and Wiseguy",
    "link": "https://softwareengineeringdaily.com/2024/10/02/n64-recompiled-with-dario-and-wiseguy/?utm_source=rss\u0026utm_medium=rss\u0026utm_campaign=n64-recompiled-with-dario-and-wiseguy",
    "description": "Darío and Wiseguy are Nintendo 64 hackers and modders. They are the creators of multiple projects, including RT64 which is an N64 graphics renderer for enhancing games in emulators and native ports. This year, they released N64: Recompiled, which is a tool to statically recompile N64 binaries into C code that can be compiled for The post N64 Recompiled with Darío and Wiseguy appeared first on Software Engineering Daily.",
    "author": "SEDaily",
    "published": "Wed, 02 Oct 2024 09:00:17 +0000",
    "image": "https://traffic.megaphone.fm/SED5466638170.mp3",
    "source": "https://softwareengineeringdaily.com/category/podcast/feed",
    "categories": [
      "All Content",
      "Exclusive Content",
      "Hosts",
      "Podcast",
      "Darío",
      "hackers and modders",
      "N64: Recompiled",
      "Nintendo 64",
      "Wiseguy"
    ]
  },
  {
    "id": "c055ea21-d4c4-4443-aa74-ebecb25625ca",
    "title": "The 2024 Stack Overflow Developer Survey with Erin Yepis and Ryan Polk",
    "link": "https://softwareengineeringdaily.com/2024/10/01/the-2024-stack-overflow-developer-survey-with-erin-yepis-and-ryan-polk/?utm_source=rss\u0026utm_medium=rss\u0026utm_campaign=the-2024-stack-overflow-developer-survey-with-erin-yepis-and-ryan-polk",
    "description": "The Stack Overflow Developer Survey is an annual survey conducted by Stack Overflow that gathers comprehensive insights from developers around the world. It offers a valuable snapshot of the global developer community, covering a wide range of topics such as preferred programming languages, tools, and technologies. Erin Yepis is a Senior Analyst and Ryan Polk The post The 2024 Stack Overflow Developer Survey with Erin Yepis and Ryan Polk appeared first on Software Engineering Daily.",
    "author": "SEDaily",
    "published": "Tue, 01 Oct 2024 09:00:24 +0000",
    "image": "https://traffic.megaphone.fm/SED8254863519.mp3",
    "source": "https://softwareengineeringdaily.com/category/podcast/feed",
    "categories": [
      "All Content",
      "Exclusive Content",
      "Hosts",
      "Podcast",
      "Sean Falconer",
      "2024 Developer Survey",
      "Erin Yepis",
      "global developer community",
      "Ryan Polk",
      "Stack Overflow"
    ]
  },
  {
    "id": "197408a8-13a9-4729-9d81-d893e17af4fe",
    "title": "Container Security with Matt Moore",
    "link": "https://softwareengineeringdaily.com/2024/09/26/container-security-with-matt-moore/?utm_source=rss\u0026utm_medium=rss\u0026utm_campaign=container-security-with-matt-moore",
    "description": "Software supply chain attacks exploit interdependencies within software ecosystems. Security in the supply chain is a growing issue, and is particularly important for companies that rely on large numbers of open source dependencies. Chainguard was founded in 2021 and offers tools and secure container images to improve the security of the software supply chain. Matt The post Container Security with Matt Moore appeared first on Software Engineering Daily.",
    "author": "SEDaily",
    "published": "Thu, 26 Sep 2024 09:00:20 +0000",
    "image": "https://traffic.megaphone.fm/SED9361917389.mp3",
    "source": "https://softwareengineeringdaily.com/category/podcast/feed",
    "categories": [
      "All Content",
      "Exclusive Content",
      "Gregor Vand",
      "Hosts",
      "Podcast",
      "Chainguard",
      "container security",
      "Matt Moore",
      "Software Supply Chain"
    ]
  },
  {
    "id": "b712ec99-e6d1-476a-abd5-45d7542164ca",
    "title": "Google Maps Platform Javascript API with Matt Toon",
    "link": "https://softwareengineeringdaily.com/2024/09/25/googles-maps-javascript-api-with-matt-toon/?utm_source=rss\u0026utm_medium=rss\u0026utm_campaign=googles-maps-javascript-api-with-matt-toon",
    "description": "The Google Maps Platform JavaScript API is a fundamental web technology that’s used to build dynamic and interactive map features in web apps. Matt Toon is a Solutions Engineering Manager for the Google Maps Platform. He joins the podcast with Josh Goldberg to talk about his background working with geospatial data, the development of Google The post Google Maps Platform Javascript API with Matt Toon appeared first on Software Engineering Daily.",
    "author": "SEDaily",
    "published": "Wed, 25 Sep 2024 09:00:05 +0000",
    "image": "https://traffic.megaphone.fm/SED1700108661.mp3",
    "source": "https://softwareengineeringdaily.com/category/podcast/feed",
    "categories": [
      "All Content",
      "Exclusive Content",
      "Hosts",
      "Josh Goldberg",
      "Podcast",
      "Google Maps Platform",
      "Google’s Maps",
      "JavaScript API",
      "Matt Toon"
    ]
  },
  {
    "id": "ecba4dfe-a793-4ede-a904-135013f4b828",
    "title": "AI Pipelines with Maxime Armstrong and Yuhan Luo",
    "link": "https://softwareengineeringdaily.com/2024/09/24/ai-pipelines-with-maxime-armstrong-and-yuhan-luo/?utm_source=rss\u0026utm_medium=rss\u0026utm_campaign=ai-pipelines-with-maxime-armstrong-and-yuhan-luo",
    "description": "LLMs are becoming more mature and accessible, and many teams are now integrating them into common business practices such as technical support bots, online real-time help, and other knowledge-base-related tasks. However, the high cost of maintaining AI teams and operating AI pipelines is becoming apparent. Maxime Armstrong and Yuhan Luo are Software Engineers at Dagster, The post AI Pipelines with Maxime Armstrong and Yuhan Luo appeared first on Software Engineering Daily.",
    "author": "SEDaily",
    "published": "Tue, 24 Sep 2024 09:00:38 +0000",
    "image": "https://traffic.megaphone.fm/SED7943277284.mp3",
    "source": "https://softwareengineeringdaily.com/category/podcast/feed",
    "categories": [
      "All Content",
      "Exclusive Content",
      "Hosts",
      "Podcast",
      "Sean Falconer",
      "AI pipelines.",
      "Dagster",
      "LLMs",
      "Maxime Armstrong",
      "Yuhan Luo"
    ]
  },
  {
    "id": "6b628eac-e921-43f6-b54f-0171f884d57c",
    "title": "Data Management at Capital One with Jim Lebonitte",
    "link": "https://softwareengineeringdaily.com/2024/09/19/data-management-at-capital-one-with-jim-lebonitte/?utm_source=rss\u0026utm_medium=rss\u0026utm_campaign=data-management-at-capital-one-with-jim-lebonitte",
    "description": "Data is at the center of many business decisions and advances today, including AI-driven capabilities. This requires companies to have well-governed data that is easy for users to find, use and understand. In moving to the cloud, Capital One modernized its data ecosystem and adopted a “You Build, Your Data” model to equip its data The post Data Management at Capital One with Jim Lebonitte appeared first on Software Engineering Daily.",
    "author": "SEDaily",
    "published": "Thu, 19 Sep 2024 09:00:23 +0000",
    "image": "https://traffic.megaphone.fm/SED5599011462.mp3",
    "source": "https://softwareengineeringdaily.com/category/podcast/feed",
    "categories": [
      "All Content",
      "Exclusive Content",
      "Hosts",
      "Lee Atchison",
      "Podcast",
      "AI-driven data",
      "Capital One",
      "data ecosystem",
      "Jim Lebonitte"
    ]
  },
  {
    "id": "a8bbd8c6-259a-45a0-8b91-510218d1a266",
    "title": "Creating ESLint with Nicholas Zakas",
    "link": "https://softwareengineeringdaily.com/2024/09/18/creating-eslint-with-nicholas-zakas/?utm_source=rss\u0026utm_medium=rss\u0026utm_campaign=creating-eslint-with-nicholas-zakas",
    "description": "ESLint is a static code analysis tool for identifying and fixing problems in JavaScript code. It helps developers maintain code quality and consistency by enforcing coding standards and detecting issues such as syntax errors, stylistic problems, and bugs. Nicholas Zakas is the creator of ESLint. He joins the show to talk about working at Yahoo The post Creating ESLint with Nicholas Zakas appeared first on Software Engineering Daily.",
    "author": "SEDaily",
    "published": "Wed, 18 Sep 2024 09:00:18 +0000",
    "image": "https://traffic.megaphone.fm/SED6872394941.mp3",
    "source": "https://softwareengineeringdaily.com/category/podcast/feed",
    "categories": [
      "All Content",
      "Exclusive Content",
      "Hosts",
      "Josh Goldberg",
      "Podcast",
      "ESLint",
      "Nicholas Zakas",
      "parsing",
      "static code analysis"
    ]
  },
  {
    "id": "e9d69ad7-e29b-444d-84b5-afd8673f7fe7",
    "title": "Humane with George Kedenburg III and Josh Dickens",
    "link": "https://softwareengineeringdaily.com/2024/09/17/humane-with-george-kedenburg-iii-and-josh-dickens/?utm_source=rss\u0026utm_medium=rss\u0026utm_campaign=humane-with-george-kedenburg-iii-and-josh-dickens",
    "description": "The Humane pin is a multi-modal wearable device designed by Humane Inc., a startup co-founded by former Apple employees Imran Chaudhri and Bethany Bongiorno. This wearable is part of a broader vision to create more seamless and integrated interactions between humans and technology, moving away from traditional screens. George Kedenburg III is a Software Designer The post Humane with George Kedenburg III and Josh Dickens appeared first on Software Engineering Daily.",
    "author": "SEDaily",
    "published": "Tue, 17 Sep 2024 09:00:36 +0000",
    "image": "https://traffic.megaphone.fm/SED8046885666.mp3",
    "source": "https://softwareengineeringdaily.com/category/podcast/feed",
    "categories": [
      "All Content",
      "Exclusive Content",
      "Hosts",
      "Podcast",
      "Sean Falconer",
      "George Kedenburg III",
      "Humane",
      "Humane pin",
      "Josh Dickens",
      "multi-modal device"
    ]
  },
  {
    "id": "7c08fcbf-115d-4fbd-afbc-b338a6bd6a94",
    "title": "Building a Fast Financial Transactions Database with Joran Greef",
    "link": "https://softwareengineeringdaily.com/2024/09/12/building-a-fast-financial-transactions-database/?utm_source=rss\u0026utm_medium=rss\u0026utm_campaign=building-a-fast-financial-transactions-database",
    "description": "Online transaction processing, or OLTP, is designed for managing high volumes of short, fast, and concurrent transactions, such as data entry and retrieval operations. OLTP systems solve the problem of efficiently handling numerous simultaneous transactions, making them essential for sectors like banking and retail. Joran Greef is the Founder and CEO of TigerBeetle, which is The post Building a Fast Financial Transactions Database with Joran Greef appeared first on Software Engineering Daily.",
    "author": "SEDaily",
    "published": "Thu, 12 Sep 2024 09:00:31 +0000",
    "image": "https://traffic.megaphone.fm/SED7262054997.mp3",
    "source": "https://softwareengineeringdaily.com/category/podcast/feed",
    "categories": [
      "All Content",
      "Exclusive Content",
      "Gregor Vand",
      "Hosts",
      "Podcast",
      "financial transactions database",
      "Joran Dirk Greef",
      "OLTP",
      "Online transaction processing",
      "TigerBeetle"
    ]
  },
  {
    "id": "2a83abf2-ec9f-4194-be25-1d75d78e8c97",
    "title": "Firefox Software Architecture with Brian Grinstead",
    "link": "https://softwareengineeringdaily.com/2024/09/11/firefox-software-architecture-with-brian-grinstead/?utm_source=rss\u0026utm_medium=rss\u0026utm_campaign=firefox-software-architecture-with-brian-grinstead",
    "description": "Mozilla Firefox is an open-source web browser developed by the Mozilla Foundation. Since its first major release in 2004, it has stood out on the browser landscape for its emphasis on privacy, security, and customization. Brian Grinstead is a Senior Principal Engineer at Mozilla. He joins the podcast with Kevin Ball to talk about the The post Firefox Software Architecture with Brian Grinstead appeared first on Software Engineering Daily.",
    "author": "SEDaily",
    "published": "Wed, 11 Sep 2024 09:00:18 +0000",
    "image": "https://traffic.megaphone.fm/SED9515840829.mp3",
    "source": "https://softwareengineeringdaily.com/category/podcast/feed",
    "categories": [
      "All Content",
      "Exclusive Content",
      "Hosts",
      "Podcast",
      "Brian Grinstead",
      "Firefox",
      "Mozilla",
      "UI refactor",
      "web browser"
    ]
  },
  {
    "id": "00254738-6629-43d4-97b6-a764696370bc",
    "title": "AI Data Analytics at Google with Gerrit Kazmaier",
    "link": "https://softwareengineeringdaily.com/2024/09/10/ai-data-analytics-at-google-with-gerrit-kazmaier/?utm_source=rss\u0026utm_medium=rss\u0026utm_campaign=ai-data-analytics-at-google-with-gerrit-kazmaier",
    "description": "Google needs no introduction, and is renowned for its data and analytics capabilities. Gerrit Kazmaier is the VP and GM for Database, Data Analytics and Looker at Google. He has a long history in the space, and in this episode he speaks with Sean Falconer about data and analytics in the AI era. Sean’s been The post AI Data Analytics at Google with Gerrit Kazmaier appeared first on Software Engineering Daily.",
    "author": "SEDaily",
    "published": "Tue, 10 Sep 2024 09:00:27 +0000",
    "image": "https://traffic.megaphone.fm/SED4977357341.mp3",
    "source": "https://softwareengineeringdaily.com/category/podcast/feed",
    "categories": [
      "All Content",
      "Exclusive Content",
      "Hosts",
      "Podcast",
      "Sean Falconer",
      "data analytics",
      "Gerrit Kazmaier",
      "GM for Database",
      "Google"
    ]
  },
  {
    "id": "252a2f47-ffef-47dd-b5d0-b63cdfbd3370",
    "title": "Building a Collaborative DevOps Platform with Adam Jacob",
    "link": "https://softwareengineeringdaily.com/2024/09/05/building-a-collaborative-devops-platform-with-adam-jacob/?utm_source=rss\u0026utm_medium=rss\u0026utm_campaign=building-a-collaborative-devops-platform-with-adam-jacob",
    "description": "DevOps is a powerful model for managing the building and operational aspects of modern applications. Most developers are now familiar with DevOps, and the adoption of DevOps practices is widespread and growing. Adam Jacob was the original author of Chef, a popular early DevOps tool. He’s now the CEO of System Initiative, which develops an The post Building a Collaborative DevOps Platform with Adam Jacob appeared first on Software Engineering Daily.",
    "author": "SEDaily",
    "published": "Thu, 05 Sep 2024 09:00:16 +0000",
    "image": "https://traffic.megaphone.fm/SED2485726001.mp3",
    "source": "https://softwareengineeringdaily.com/category/podcast/feed",
    "categories": [
      "All Content",
      "Exclusive Content",
      "Hosts",
      "Lee Atchison",
      "Podcast",
      "Adam Jacob",
      "Chef",
      "collaborative tool",
      "DevOps",
      "System Initiative"
    ]
  },
  {
    "id": "c72ee02e-caea-4a11-9e38-bb40efd7039c",
    "title": "React 18 at The New York Times with Ilya Gurevich",
    "link": "https://softwareengineeringdaily.com/2024/09/04/react-18-at-the-new-york-times-with-ilya-gurevich/?utm_source=rss\u0026utm_medium=rss\u0026utm_campaign=react-18-at-the-new-york-times-with-ilya-gurevich",
    "description": "React is an open-source front-end JavaScript library maintained by Meta. It was first released in 2013 and is now the most popular web framework. Ilya Gurevich is a Senior Software Engineer at The New York Times. Last winter, his team set out to implement React 18 for The Times’ flagship core news site. Ilya recently The post React 18 at The New York Times with Ilya Gurevich appeared first on Software Engineering Daily.",
    "author": "SEDaily",
    "published": "Wed, 04 Sep 2024 09:00:56 +0000",
    "image": "https://traffic.megaphone.fm/SED1171017766.mp3",
    "source": "https://softwareengineeringdaily.com/category/podcast/feed",
    "categories": [
      "All Content",
      "Exclusive Content",
      "Gregor Vand",
      "Hosts",
      "Podcast",
      "Ilya Gurevich",
      "JavaScript library",
      "open-source front-end",
      "React 18",
      "The New York Times"
    ]
  },
  {
    "id": "7bfd1139-779f-4ec9-96c4-e332ab4cb790",
    "title": "Lekko and Dynamic Configuration with Konrad Niemiec",
    "link": "https://softwareengineeringdaily.com/2024/09/03/lekko-and-dynamic-software-configuration-with-konrad-niemiec/?utm_source=rss\u0026utm_medium=rss\u0026utm_campaign=lekko-and-dynamic-software-configuration-with-konrad-niemiec",
    "description": "Feature flagging tools have grown in popularity as a way to decouple releases and deployment, but they can introduce their own long-term problems and tech debt. Lekko is a startup democratizing the practice of dynamic configuration. Their motivating idea is to empower engineers to focus on software releases, and business teams and other stakeholders to The post Lekko and Dynamic Configuration with Konrad Niemiec appeared first on Software Engineering Daily.",
    "author": "SEDaily",
    "published": "Tue, 03 Sep 2024 09:00:15 +0000",
    "image": "https://traffic.megaphone.fm/SED9309120066.mp3",
    "source": "https://softwareengineeringdaily.com/category/podcast/feed",
    "categories": [
      "All Content",
      "Exclusive Content",
      "Hosts",
      "Podcast",
      "Sean Falconer",
      "configuration management",
      "Feature flagging",
      "Flipr",
      "Konrad Niemiec",
      "Lekko"
    ]
  },
  {
    "id": "67e09e51-0f14-4799-bc9d-6bc332c09790",
    "title": "Crafting a Stop Motion Video Game with Onat Hekimoglu",
    "link": "https://softwareengineeringdaily.com/2024/08/29/crafting-a-stop-motion-video-game-with-onat/?utm_source=rss\u0026utm_medium=rss\u0026utm_campaign=crafting-a-stop-motion-video-game-with-onat",
    "description": "Harold Halibut is a 2024 narrative adventure video game developed by German developer Slow Bros. The game has a distinct look owing to its use of stop motion animation with 3D scans of physical sets and puppets. Onat Hekimoglu worked on Harold Halibut as the Director, Game Designer, Composer, and Person of Many Hats. He The post Crafting a Stop Motion Video Game with Onat Hekimoglu appeared first on Software Engineering Daily.",
    "author": "SEDaily",
    "published": "Thu, 29 Aug 2024 09:00:26 +0000",
    "image": "https://traffic.megaphone.fm/SED5437949094.mp3",
    "source": "https://softwareengineeringdaily.com/category/podcast/feed",
    "categories": [
      "All Content",
      "Exclusive Content",
      "Hosts",
      "Podcast",
      "3D physical set",
      "adventure video game",
      "Harold Halibut",
      "Onat Hekimoglu"
    ]
  },
  {
    "id": "68540774-17e8-4e9a-b0b1-13d7da2f5f13",
    "title": "Why Stack Overflow Uses Svelte with Giamir Buoncristiani",
    "link": "https://softwareengineeringdaily.com/2024/08/28/why-stack-overflow-uses-svelte-with-giamir-buoncristiani/?utm_source=rss\u0026utm_medium=rss\u0026utm_campaign=why-stack-overflow-uses-svelte-with-giamir-buoncristiani",
    "description": "Stack Overflow is a legendary question-and-answer site for programmers, and is likely well known to most SEDaily listeners. Svelte is an open-source front-end framework that was released in 2016 and continues to grow rapidly in popularity. Giamir Buoncristiani is a Staff Software Engineer at Stack Overflow. He is also the tech lead for the Stacks The post Why Stack Overflow Uses Svelte with Giamir Buoncristiani appeared first on Software Engineering Daily.",
    "author": "SEDaily",
    "published": "Wed, 28 Aug 2024 09:00:14 +0000",
    "image": "https://traffic.megaphone.fm/SED2021321696.mp3",
    "source": "https://softwareengineeringdaily.com/category/podcast/feed",
    "categories": [
      "All Content",
      "Exclusive Content",
      "Gregor Vand",
      "Hosts",
      "Podcast",
      "Front end",
      "Giamir Buoncristiani",
      "Stack Overflow",
      "Svelte"
    ]
  },
  {
    "id": "77ba6c5a-5b5c-4c49-8dad-a60bf261b348",
    "title": "How Google Sheets Uses WasmGC with Michael Thomas and Thomas Steiner",
    "link": "https://softwareengineeringdaily.com/2024/08/27/17045/?utm_source=rss\u0026utm_medium=rss\u0026utm_campaign=17045",
    "description": "The Google Sheets calculation engine was originally written in Java and launched in 2006. In the early days of the product, all calculation happened on the server. However, starting in 2013 the engine has run in the browser using JavaScript. Google Sheets is now one of the first products at Google to use WebAssembly Garbage The post How Google Sheets Uses WasmGC with Michael Thomas and Thomas Steiner appeared first on Software Engineering Daily.",
    "author": "SEDaily",
    "published": "Tue, 27 Aug 2024 09:00:03 +0000",
    "image": "https://traffic.megaphone.fm/SED3763927328.mp3",
    "source": "https://softwareengineeringdaily.com/category/podcast/feed",
    "categories": [
      "All Content",
      "Exclusive Content",
      "Hosts",
      "Podcast",
      "Sean Falconer",
      "Google Sheets",
      "Michael Thomas",
      "WasmGC",
      "WebAssembly Garbage Collection"
    ]
  },
  {
    "id": "66c04f18-283e-4801-a817-6ccfacff1bea",
    "title": "A Rare Insight Into The Daily Challenges Of An Experiments Team",
    "link": "https://engineering.prezi.com/a-rare-insight-into-the-daily-challenges-of-an-experiments-team-349a94960b4f?source=rss----911e72786e31---4",
    "description": "",
    "author": "Attila Vágó",
    "published": "Tue, 09 Jul 2024 13:21:02 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/0*n3VDMgH-u5OU5VAH",
    "source": "https://engineering.prezi.com/feed",
    "categories": [
      "a-b-testing",
      "prezi",
      "product-development",
      "software-development",
      "engineering-culture"
    ]
  },
  {
    "id": "8145a361-677e-4e50-a9d6-6ca3d5bc381d",
    "title": "How Prezi replaced a homegrown Log Management System with Grafana Loki",
    "link": "https://engineering.prezi.com/how-prezi-replaced-a-homegrown-log-management-system-with-grafana-loki-15111174ff91?source=rss----911e72786e31---4",
    "description": "",
    "author": "Alex",
    "published": "Thu, 08 Feb 2024 15:26:37 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/0*pmZClgRKPe7CZ0EI",
    "source": "https://engineering.prezi.com/feed",
    "categories": [
      "logging",
      "sre",
      "technology",
      "prezi",
      "software-development"
    ]
  },
  {
    "id": "b4fd3fe1-cfd2-4d24-a6e8-3d1804900ef8",
    "title": "How Prezi Serves Customer Traffic",
    "link": "https://engineering.prezi.com/how-prezi-serves-customer-traffic-60fc9711702b?source=rss----911e72786e31---4",
    "description": "",
    "author": "Alex",
    "published": "Tue, 09 Jan 2024 09:56:32 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/0*wAbH9ve3pibIrm0F",
    "source": "https://engineering.prezi.com/feed",
    "categories": null
  },
  {
    "id": "40bf1e7a-ff3f-4c78-8771-2164490e6802",
    "title": "The Value Of Experimentation In Software Development",
    "link": "https://engineering.prezi.com/the-value-of-experimentation-in-software-development-c10a012ebd49?source=rss----911e72786e31---4",
    "description": "",
    "author": "Attila Vágó",
    "published": "Tue, 28 Nov 2023 22:04:43 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/0*ZUCMRoRvsMSr83tw",
    "source": "https://engineering.prezi.com/feed",
    "categories": [
      "coding",
      "productivity",
      "experimentation",
      "work",
      "software-development"
    ]
  },
  {
    "id": "5ee5aa23-2c0e-43b7-8a98-b6379e9de8c8",
    "title": "Read This Before Building Your First Zoom App",
    "link": "https://engineering.prezi.com/read-this-before-building-your-first-zoom-app-bd86c1d42cb3?source=rss----911e72786e31---4",
    "description": "",
    "author": "Attila Vágó",
    "published": "Mon, 09 Oct 2023 14:41:09 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/0*CagTotjAHmqlmknU",
    "source": "https://engineering.prezi.com/feed",
    "categories": [
      "software-development",
      "prezi",
      "coding",
      "software-architecture",
      "zoom"
    ]
  },
  {
    "id": "e5d08e08-95ac-46cc-b7f1-df189b991046",
    "title": "Shifting to the Right Place: My Transition Back from EM to Engineer",
    "link": "https://engineering.prezi.com/shifting-to-the-right-place-my-transition-back-from-em-to-engineer-d435acbabf2f?source=rss----911e72786e31---4",
    "description": "",
    "author": "Zoltán Adamek",
    "published": "Thu, 13 Jul 2023 13:59:27 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*5U4Z5q4sT8CXDFv1pWiQ5Q.jpeg",
    "source": "https://engineering.prezi.com/feed",
    "categories": [
      "engineering",
      "management-and-leadership",
      "engineering-mangement",
      "career-change",
      "career-advice"
    ]
  },
  {
    "id": "00ff50d1-3574-4e6a-a9c8-5df5ee3f06d4",
    "title": "Keep the databases top-notch",
    "link": "https://engineering.prezi.com/keep-the-databases-top-notch-96b2d004e1cf?source=rss----911e72786e31---4",
    "description": "",
    "author": "Alex",
    "published": "Tue, 09 May 2023 12:58:13 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/0*JA0F7dKbF1y3Cc6T",
    "source": "https://engineering.prezi.com/feed",
    "categories": [
      "blue-green-deployment",
      "rds",
      "aws"
    ]
  },
  {
    "id": "8f828991-e70b-436c-b23e-b2b774a2d518",
    "title": "10 Things We Learnt While Building A Top-Performing Zoom App",
    "link": "https://engineering.prezi.com/10-things-we-learnt-while-building-a-top-performing-zoom-app-514905743d29?source=rss----911e72786e31---4",
    "description": "",
    "author": "Attila Vágó",
    "published": "Tue, 25 Apr 2023 15:01:48 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*syBIPDBLBUXcL1ApozwaKA.png",
    "source": "https://engineering.prezi.com/feed",
    "categories": [
      "coding",
      "web-development",
      "prezi",
      "agile",
      "productivity"
    ]
  },
  {
    "id": "7652d58a-85f5-4029-9b0b-8bd9fca285b4",
    "title": "EM In A Year",
    "link": "https://engineering.prezi.com/em-in-a-year-8e24655e50bb?source=rss----911e72786e31---4",
    "description": "",
    "author": "Conor O'Donnchadha",
    "published": "Fri, 13 Jan 2023 16:58:29 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*TWLmeY6lpxeYOeb3ehn0OA.jpeg",
    "source": "https://engineering.prezi.com/feed",
    "categories": [
      "engineering-mangement",
      "software-engineering"
    ]
  },
  {
    "id": "bb6bad81-de12-4930-935c-9a1106757899",
    "title": "Prezi Engineering’s 2022 In A Nutshell",
    "link": "https://engineering.prezi.com/prezi-engineerings-2022-in-a-nutshell-159a3e6c84e7?source=rss----911e72786e31---4",
    "description": "",
    "author": "Attila Vágó",
    "published": "Thu, 15 Dec 2022 19:15:08 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*mAzTDUJecLPaqTqo9oT9xA.jpeg",
    "source": "https://engineering.prezi.com/feed",
    "categories": [
      "software-development",
      "coding",
      "software-engineering",
      "work-life-balance",
      "prezi"
    ]
  },
  {
    "id": "d66589b6-c674-4022-8db9-147b0a2ffd45",
    "title": "176: MLOps at SwampUp",
    "link": "https://www.programmingthrowdown.com/episodes/176-mlops-at-swampup/",
    "description": "James Morse: Software Engineer at CiscoSystem Administrator to DevOpsDifference between DevOps and MLOpsGetting Started with DevOpsLuke Marsden: CEO of Helix MLHow to start a business at 15 years oldBTRFS vs ZFSMLOps: the intersection of software, DevOps and AIFine-tuning AI on the CloudSome advice for folks interested in ML OpsYuval Fernbach: CTO MLOps \u0026 JFrogStarting QwakGoing from a jupyter notebook to productionML Supply ChainGetting started in Machine LearningStephen Chin: VP of DevRel at Neo4JDeveloper Relations: The JobWhat is a Large Language Model?Knowledge graphs and the Linkage ModelHow to Use Graph databases in EnterpriseHow to get into ML Ops ★ Support this podcast on Patreon ★",
    "author": "Patrick Wheeler and Jason Gauci",
    "published": "Tue, 24 Sep 2024 10:00:00 -0500",
    "image": "https://pdst.fm/e/media.transistor.fm/9258a4ac/f5edcaaa.mp3",
    "source": "http://feeds.feedburner.com/ProgrammingThrowdown",
    "categories": [
      "Programming Throwdown",
      " Programming Languages",
      "C",
      "C",
      "Java",
      "Python",
      "Objective C"
    ]
  },
  {
    "id": "d2497de9-445b-498d-8680-ee0270bafaf0",
    "title": "175: Resume Writing",
    "link": "https://www.programmingthrowdown.com/episodes/175-resume-writing",
    "description": "175: Resume WritingIntro topic:  DSLR Photography vs Camera PhoneNews/Links:Free Internet while flying by abusing edits to your profile namehttps://robertheaton.com/pyskywifi/Making Animated Characters with AI Arthttps://www.youtube.com/watch?v=zSN76gb_Z28On 10x Engineershttps://stackoverflow.blog/2024/06/19/the-real-10x-developer-makes-their-whole-team-better/The Beauty and Challenges of AI-Generated Artistic Gymnasticshttps://www.youtube.com/watch?v=YwJIYj3hPAUBook of the ShowPatrick: The Three Body Problem by Cixin Liuhttps://amzn.to/3xNEoRBJason: The Checklist Manifestohttps://amzn.to/3W2JjpMPatreon Plug https://www.patreon.com/programmingthrowdown?ty=hTool of the ShowPatrick: Super Mario Bros. Wonder (Nintendo Switch)https://amzn.to/3S9VJLfJason: Amazon Qhttps://marketplace.visualstudio.com/items?itemName=AmazonWebServices.amazon-q-vscodeTopic: Resume Writing (Courtesy of Matthew C.)Why have a resume?Many jobs require it to get into the considerationToday many are screened for keywords automaticallyLog for future youWhat is a resume?One-page descriptionKey accomplishments \u0026 experiencesComparison to CVReferencesHow to write a good resume?Do’sInclude your github if it has good contributionsBe specific (dates, locations, skills)Isolate your specific contributionsBe accurate/honestBe conciseBe ready to discuss any point you have on the resumeList hobbies/activities/extracurricularsDon’tsHave mistakes (especially dates)Use images (most companies use text extraction)Use it as a design portfolioPut social qualities (e.gs. hard-working, motivated, friendly)Use fancy templates/toolsResourcesManager Tools: How to scan resumes https://www.manager-tools.com/2016/05/how-scan-resume-part-1 Google docsLatex/Lyx for CVsHow to think about your career and how it impacts your future resume writing (career planning)Technologies and architectures more than specifics of project detailsHow various choices may age over time ★ Support this podcast on Patreon ★",
    "author": "Patrick Wheeler and Jason Gauci",
    "published": "Fri, 16 Aug 2024 10:53:00 -0500",
    "image": "https://pdst.fm/e/media.transistor.fm/c357d316/7edfb220.mp3",
    "source": "http://feeds.feedburner.com/ProgrammingThrowdown",
    "categories": [
      "Programming Throwdown",
      " Programming Languages",
      "C",
      "C",
      "Java",
      "Python",
      "Objective C"
    ]
  },
  {
    "id": "6bb485fd-14e4-4371-a0c6-de548ccd3bf3",
    "title": "174: Devops",
    "link": "https://www.programmingthrowdown.com/episodes/174-devops/",
    "description": "Intro topic:  Social Media Auto Responder LLMNews/Links:Amazon releases Amazon Qhttps://press.aboutamazon.com/2024/4/aws-announces-general-availability-of-amazon-q-the-most-capable-generative-ai-powered-assistant-for-accelerating-software-development-and-leveraging-companies-internal-dataCheap RiscV “Super Cluster” from BitluniDIY 256-Core RISC-V super computerhttps://www.youtube.com/watch?v=-4d3PgEXhdYCH32V203Phi 3 Vision Releasedhttps://azure.microsoft.com/en-us/blog/new-models-added-to-the-phi-3-family-available-on-microsoft-azure/OllamaChatGPT 4ohttps://openai.com/index/hello-gpt-4o/Book of the ShowPatrick: MyFirstMillion Podcasthttps://www.mfmpod.com/Jason: A Path Towards Autonomous Machine Intelligencehttps://openreview.net/pdf?id=BZ5a1r-kVsfPatreon https://www.patreon.com/programmingthrowdown?ty=hTool of the ShowPatrick: Dave the Diverhttps://store.steampowered.com/app/1868140/DAVE_THE_DIVER/Jason: Turing Completehttps://store.steampowered.com/app/1444480/Turing_Complete/ Topic: DevOpsWhat is DevOpsDevOps vs SREWhy DevOps is importantEngineering time is expensiveOutages can hurt company metrics \u0026 reputationBuild \u0026 Testing InfrastructureBazel \u0026 Build/Test IdempotencyBuild/Test FarmsBuildBarnGithub ActionsJenkinsInfrastructure as codeTerraformBlue Green DeploymentContinuous Everything!Continuous IntegrationContinuous DeploymentHow to Measure DevOpsBuild TimesRelease cadenceBug tracking / round trip timesEngineer SurveysTime spent doing what you enjoyDevOps Horror Stories ★ Support this podcast on Patreon ★",
    "author": "Patrick Wheeler and Jason Gauci",
    "published": "Mon, 10 Jun 2024 15:16:12 -0500",
    "image": "https://pdst.fm/e/media.transistor.fm/61f95e9c/21c8d99c.mp3",
    "source": "http://feeds.feedburner.com/ProgrammingThrowdown",
    "categories": [
      "Programming Throwdown",
      " Programming Languages",
      "C",
      "C",
      "Java",
      "Python",
      "Objective C"
    ]
  },
  {
    "id": "196d8938-097b-4a84-b8df-c7d8ac764bda",
    "title": "173: Mocking and Unit Tests",
    "link": "https://www.programmingthrowdown.com/episodes/173-mocking-and-unit-tests/",
    "description": "173: Mocking and Unit TestsIntro topic:  HeadphonesNews/Links:Texas A\u0026M University Physics Festivalhttps://physicsfestival.tamu.edu/Rust vs Cpp at GoogleLars Bergstrom (Google Director of Engineering): Rust teams at Google are as productive as the ones using Go and 2x those using Cpphttps://youtu.be/6mZRWFQRvmw?t=27012Is Cosine Similarity Really About Similarityhttps://arxiv.org/abs/2403.05440Xz utils supply chain attackAndres Freund at Microsofthttps://arstechnica.com/security/2024/04/what-we-know-about-the-xz-utils-backdoor-that-almost-infected-the-world/Book of the ShowPatrick:80/20 Running by Matt Fitzgeraldhttps://amzn.to/3xyEKLoJason: A Movie Making Nerdhttps://amzn.to/49ycDJjPatreon Plug https://www.patreon.com/programmingthrowdown?ty=hTool of the ShowPatrick: Shapez Android: https://play.google.com/store/apps/details?id=com.playdigious.shapez\u0026hl=en_US\u0026gl=USShapez iOS: https://apps.apple.com/us/app/shapez-factory-game/id6450830779Jason: Dwarf Fortresshttps://store.steampowered.com/app/975370/Dwarf_Fortress/Topic: Mocking and Unit TestsWhat are Unit TestsBalance between utility, maintenance, and coverageUnit Test: testing small functionsRegression Test: Testing larger functionsSystem Test: End-to-end testing of programsWhat are mocks \u0026 fakesWhen to use mock vs. fakeMocking libraries in various languagesPython: https://docs.python.org/3/library/unittest.mock.htmlJava: https://github.com/mockito/mockitoC++:  https://github.com/google/googletest ★ Support this podcast on Patreon ★",
    "author": "Patrick Wheeler and Jason Gauci",
    "published": "Mon, 29 Apr 2024 10:00:00 -0500",
    "image": "https://pdst.fm/e/media.transistor.fm/3dd84a81/315333a3.mp3",
    "source": "http://feeds.feedburner.com/ProgrammingThrowdown",
    "categories": [
      "Programming Throwdown",
      " Programming Languages",
      "C",
      "C",
      "Java",
      "Python",
      "Objective C"
    ]
  },
  {
    "id": "10a4fa90-3cc2-4fc9-b20e-968123301dd9",
    "title": "172: Transformers and Large Language Models",
    "link": "https://www.programmingthrowdown.com/episodes/172-transformers-and-large-language-models/",
    "description": "172: Transformers and Large Language ModelsIntro topic: Is WFH actually WFC?News/Links:Falsehoods Junior Developers Believe about Becoming Seniorhttps://vadimkravcenko.com/shorts/falsehoods-junior-developers-believe-about-becoming-senior/Pure PursuitTutorial with python code: https://wiki.purduesigbots.com/software/control-algorithms/basic-pure-pursuit Video example: https://www.youtube.com/watch?v=qYR7mmcwT2w PID without a PHDhttps://www.wescottdesign.com/articles/pid/pidWithoutAPhd.pdfGoogle releases Gemmahttps://blog.google/technology/developers/gemma-open-models/Book of the ShowPatrick: The Eye of the World by Robert Jordan (Wheel of Time)https://amzn.to/3uEhg6vJason: How to Make a Video Game All By Yourselfhttps://amzn.to/3UZtP7bPatreon Plug https://www.patreon.com/programmingthrowdown?ty=hTool of the ShowPatrick: Stadia Controller Wifi to Bluetooth Unlockhttps://stadia.google.com/controller/index_en_US.htmlJason: FUSE and SSHFShttps://www.digitalocean.com/community/tutorials/how-to-use-sshfs-to-mount-remote-file-systems-over-sshTopic: Transformers and Large Language ModelsHow neural networks store informationLatent variablesTransformersEncoders \u0026 DecodersAttention LayersHistoryRNNVanishing Gradient ProblemLSTMShort term (gradient explodes), Long term (gradient vanishes)Differentiable algebraKey-Query-ValueSelf AttentionSelf-Supervised Learning \u0026 Forward ModelsHuman FeedbackReinforcement Learning from Human FeedbackDirect Policy Optimization (Pairwise Ranking) ★ Support this podcast on Patreon ★",
    "author": "Patrick Wheeler and Jason Gauci",
    "published": "Mon, 11 Mar 2024 10:00:00 -0500",
    "image": "https://pdst.fm/e/media.transistor.fm/c9dc300f/c4ab06ae.mp3",
    "source": "http://feeds.feedburner.com/ProgrammingThrowdown",
    "categories": [
      "Programming Throwdown",
      " Programming Languages",
      "C",
      "C",
      "Java",
      "Python",
      "Objective C"
    ]
  },
  {
    "id": "fabdaa06-d68f-40db-b8c4-46ceface45ae",
    "title": "171: Compilers and Interpreters",
    "link": "https://www.programmingthrowdown.com/episodes/171-compilers-and-interpreters/",
    "description": "Intro topic: Monitor setupsNews/Links:BlueScuti, Willis, beats Tetrishttps://www.youtube.com/watch?v=GuJ5UuknsHUPalWorld accused of being an AI Producthttps://www.forbes.com/sites/paultassi/2024/01/22/palworld-accused-of-using-genai-with-no-evidence-so-far/?sh=26a9651b42394 Billion if-statements to determine if a number is even or oddhttps://andreasjhkarlsson.github.io/jekyll/update/2023/12/27/4-billion-if-statements.htmlSeamless M4Thttps://ai.meta.com/blog/seamless-m4t/Book of the ShowPatrick:Foundation by Isaac Asimovhttps://amzn.to/3SrmgnPJason: Propaganda by Edward Bernayshttps://amzn.to/47JUCXJPatreon Plug https://www.patreon.com/programmingthrowdown?ty=hTool of the ShowPatrick: The Room Gamehttps://www.fireproofgames.com/games/the-roomJason:Incredibuildhttps://www.incredibuild.com/Topic: Compilers and Interpreters (Request by Jessica W.)Machine CodeArchitecture SpecificAssemblySingle vs Two Pass CompilerHigh level LanguagesIntermediate RepresentationJVM ByteCode vs Machine Code for portabilityScripting/InterpretersJITProfile Guided OptimizationResourceshttps://www.craftinginterpreters.com/https://nandgame.com/Turing Complete ★ Support this podcast on Patreon ★",
    "author": "Patrick Wheeler and Jason Gauci",
    "published": "Mon, 12 Feb 2024 11:35:31 -0600",
    "image": "https://pdst.fm/e/media.transistor.fm/50134364/dc7f06ea.mp3",
    "source": "http://feeds.feedburner.com/ProgrammingThrowdown",
    "categories": [
      "Programming Throwdown",
      " Programming Languages",
      "C",
      "C",
      "Java",
      "Python",
      "Objective C"
    ]
  },
  {
    "id": "6f19b5d6-4fed-41e3-98d9-5204595ba432",
    "title": "170: 2023 Holiday Special Live",
    "link": "https://www.programmingthrowdown.com/episodes/170-2023-holiday-special-live",
    "description": "Predictions:Jason VR for WorkLowering AI training cost/ improved efficiencyRISC-V takeoffPatrickAi claim of AGIAi peer reviewerAi Video GeneratorMore space vehicles reaching orbitEarly career, finding role at FAANG, liaising vs shipping code. Startup?3 part. 1. How and when current hype for AI will end? 2. Shape of the show 3. Upcoming in techWhat are essential programmer knowledge items?CS Student, how to organize life and goals? What purpose life should serve?What kind of programmer were you in college?Happy Holidays! ★ Support this podcast on Patreon ★",
    "author": "Patrick Wheeler and Jason Gauci",
    "published": "Sun, 24 Dec 2023 10:00:00 -0600",
    "image": "https://pdst.fm/e/media.transistor.fm/6f8d9992/726d224c.mp3",
    "source": "http://feeds.feedburner.com/ProgrammingThrowdown",
    "categories": [
      "Programming Throwdown",
      " Programming Languages",
      "C",
      "C",
      "Java",
      "Python",
      "Objective C"
    ]
  },
  {
    "id": "2fccc24b-17af-4a55-83c4-79a24bd12f6e",
    "title": "169: HyperLogLog",
    "link": "https://www.programmingthrowdown.com/episodes/169-hyperloglog",
    "description": "Intro topic: Testing your car batteryNews/Links:Tech Layoffs still going onhttps://www.sfchronicle.com/tech/article/google-layoffs-california-companies-18465600.php Real-time dreamy Cloudscapes with Volumetric Raymarchinghttps://blog.maximeheckel.com/posts/real-time-cloudscapes-with-volumetric-raymarching/Robot Rascalshttps://en.wikipedia.org/wiki/Robot_Rascals Meta Quest 3 https://www.theverge.com/23906313/meta-quest-3-review-vr-mixed-reality-headsetBook of the ShowPatrick:HyperLogLog Paperhttps://static.googleusercontent.com/media/research.google.com/en//pubs/archive/40671.pdf Jason: Eureka! NVIDIA Research Breakthrough Puts New Spin on Robot Learning https://blogs.nvidia.com/blog/2023/10/20/eureka-robotics-research/ Patreon Plug https://www.patreon.com/programmingthrowdown?ty=hTool of the ShowPatrick: Techtonica: https://store.steampowered.com/app/1457320/Techtonica/ Jason:ESP32 development board: https://amzn.to/3Qpmb20 WEMOSTopic: HyperLogLogMotivationCardinality CountingLinearCountingHash + expectation of collision based on how fullBloom FilterLogLogUse first N bits as bucketUse max sequential 0s in each bucketAverageHyperLogLogHandle empty bucketsUse correction factor like linear counting for low counts (number of empty buckets) and high countsDistributingTransfer bucket counts ★ Support this podcast on Patreon ★",
    "author": "Patrick Wheeler and Jason Gauci",
    "published": "Mon, 27 Nov 2023 09:00:00 -0600",
    "image": "https://pdst.fm/e/media.transistor.fm/217a2bbb/6b03d208.mp3",
    "source": "http://feeds.feedburner.com/ProgrammingThrowdown",
    "categories": [
      "Programming Throwdown",
      " Programming Languages",
      "C",
      "C",
      "Java",
      "Python",
      "Objective C"
    ]
  },
  {
    "id": "a5f060ee-90c1-4781-a315-bdb3369a5b4c",
    "title": "168: Godot",
    "link": "https://www.programmingthrowdown.com/episodes/168-godot",
    "description": "Intro topic: What are expectations on developers that have nothing to do with programmingNews/Links:Pushing for a lower dev estimate is like negotiating weather with a Meteorologisthttps://smartguess.is/blog/your-estimate-is-less-than-that/Announcing python in excelhttps://techcommunity.microsoft.com/t5/excel-blog/announcing-python-in-excel-combining-the-power-of-python-and-the/ba-p/38934397 Habits of Highly Effective Software Engineershttps://makingsmallercircles.com/articles/7-habits-of-highly-effective-software-engineers/Raspberry pi 5 begins shippinghttps://www.phoronix.com/news/Raspberry-Pi-5-ShippingBook of the ShowPatrick:Harry Potter and the Sorcerer's Stone Illustrated Editionhttps://amzn.to/3St3L35Jason: The Pete and Sebastian Showhttps://podcasts.apple.com/us/podcast/the-pete-and-sebastian-show/id570256898Patreon Plug https://www.patreon.com/programmingthrowdown?ty=hTool of the ShowPatrick: Obsidianobsidian.mdJason:Ink by Inklehttps://github.com/inkle/inkTopic: GodotWhat is a game engine?Graphics, animation, particle effectsTilemapsEntity component systemsPhysicsSoundI/OInput handling (touchscreen, joystick)GDScriptWhy use a game engine?PortabilityAllow for testing individual components of the gameLibraries for ads, in-app-purchasesGodotOpen sourceFocused on 2-D but now many 3-D featuresGreat development environmentAI HeroStarted in phaser (development rut)Moved to Godot, rapid prototyping ★ Support this podcast on Patreon ★",
    "author": "Patrick Wheeler and Jason Gauci",
    "published": "Mon, 20 Nov 2023 09:00:00 -0600",
    "image": "https://pdst.fm/e/media.transistor.fm/1f26b501/d7946398.mp3",
    "source": "http://feeds.feedburner.com/ProgrammingThrowdown",
    "categories": [
      "Godot"
    ]
  },
  {
    "id": "3fbee1c8-3c70-4819-b84e-e769e8fa1dfa",
    "title": "167: Desktop User Interfaces",
    "link": "https://www.programmingthrowdown.com/episodes/167-desktop-ui",
    "description": "Intro topic: Jogging MetricsNews/Links:Unholy LLMhttps://huggingface.co/Undi95/Unholy-v1-12L-13B The reverse red herring  https://www.blameless.com/blog/the-reverse-red-herringThe \"ens–tification\" of TikTokhttps://www.wired.com/story/tiktok-platforms-cory-doctorow/ Response letter to Godot is not the new Unityhttps://sampruden.github.io/posts/godot-is-not-the-new-unity/https://gist.github.com/reduz/cb05fe96079e46785f08a79ec3b0ef21Book of the ShowPatrick:Math Games with Bad Drawings by Ben Orlinhttps://amzn.to/48qlg9AJason: The Invisible Hook: The Hidden Economics of Pirateshttps://amzn.to/3LChBffPatreon Plug https://www.patreon.com/programmingthrowdown?ty=hTool of the ShowPatrick: Factorio (Desktop Game)Jason:AI Hero (iOS and Android)Topic: Desktop user interfacesWhat is a user interface?Web and Mobile UI toolkitsDesktop optionsQtCross platform, custom UI elementsQt creator, code generatorWxWidgetsCross platform, uses native UI elements WxFormDesigner, code generationCan look different on different operating systemsElectronLocal nodejs webserverHtml/JavaScript technologyRequires interprocess communication to use other languages  Jupyter notebooksMathematica-like notebook Not for distribution StreamlitPython to web compilerGame EnginesUnity, Godot, UnrealTips for building desktop UIUI is slow (startup time, interaction time)Separate the UI from the engine \u0026 business logic ★ Support this podcast on Patreon ★",
    "author": "Patrick Wheeler and Jason Gauci",
    "published": "Mon, 23 Oct 2023 10:00:00 -0500",
    "image": "https://pdst.fm/e/media.transistor.fm/22770c51/167aedbb.mp3",
    "source": "http://feeds.feedburner.com/ProgrammingThrowdown",
    "categories": [
      "Programming Throwdown",
      " Programming Languages",
      "C",
      "C",
      "Java",
      "Python",
      "Objective C"
    ]
  },
  {
    "id": "2d514b65-eb23-46f3-b3fc-ad0ae17539bc",
    "title": "166: Speedy Database Queries with Lukas Fittl",
    "link": "https://www.programmingthrowdown.com/episodes/166-speedy-database-queries-with-lukas-fittl",
    "description": "- pganalyze: https://pganalyze.com/- Weekly series \"5mins of Postgres\": https://www.youtube.com/channel/UCDV_1Dz2Ixgl1nT_3DUZVFw- How Postgres chooses which index to use: https://pganalyze.com/blog/how-postgres-chooses-index- CMU databases courses: https://db.cs.cmu.edu/courses/- Postgres community: https://www.postgresql.org/community/As well as social links:- Mastodon: https://hachyderm.io/@lukas- Twitter/X: @pganalyze, @LukasFittl- GitHub: @pganalyze, @lfittl- LinkedIn: https://www.linkedin.com/in/lfittl/ , https://www.linkedin.com/company/pganalyze/ ★ Support this podcast on Patreon ★",
    "author": "Patrick Wheeler and Jason Gauci",
    "published": "Mon, 16 Oct 2023 10:00:00 -0500",
    "image": "https://pdst.fm/e/media.transistor.fm/e9d9d28c/1699ca75.mp3",
    "source": "http://feeds.feedburner.com/ProgrammingThrowdown",
    "categories": [
      "Programming Throwdown",
      " Programming Languages",
      "C",
      "C",
      "Java",
      "Python",
      "Objective C"
    ]
  },
  {
    "id": "3c496d4a-873e-4d8d-b2f5-1562e0c779e9",
    "title": "165: Differential Equations",
    "link": "https://www.programmingthrowdown.com/episodes/165-differential-equations",
    "description": "Intro topic: Revisiting the power of SpreadsheetsNews/Links:LK-99 Isn’t a Superconductorhttps://www.nature.com/articles/d41586-023-02585-7Normalizing Flowshttps://pyro.ai/examples/normalizing_flows_i.htmlHow is llama.cpp possible?https://finbarr.ca/how-is-llama-cpp-possible/Chat with open source large language modelshttps://chat.lmsys.org/Book of the ShowPatrick: Math with Bad Drawings by Ben Orlinhttps://amzn.to/44dsgDzJason: Overboard! https://play.google.com/store/apps/details?id=com.InkleLtd.Overboard Nhl=en_US\u0026gl=US Patreon Plug https://www.patreon.com/programmingthrowdown?ty=hTool of the ShowPatrick: ffmprovisr https://amiaopensource.github.io/ffmprovisr/Jason:Pandas read_ods() read_excel()Topic: Differential EquationsWhy should programmers learn about DiffEqLaw of Large NumbersWhat are differential equations?When you know the rate of changeEigenVectors \u0026 EigenValuesWhat is Jacobian What is Jacobian? | The right way of thinking derivatives and integralsSpecial casesPartial Differential EquationsOrdinary Differential EquationsWhy solvers are importantNumerical Stability at larger step sizesExample: https://medium.com/@pukumarathe/eulers-method-and-runge-kutta-4th-order-method-in-python-b4a0068a8ebe Fun ExamplesPredator-Prey relationships in scipyhttps://scientific-python.readthedocs.io/en/latest/notebooks_rst/3_Ordinary_Differential_Equations/02_Examples/Lotka_Volterra_model.html Physics Engines for gameshttps://youtu.be/52n2qKgwW_Q PageRankhttps://arxiv.org/pdf/2001.08973.pdf  ★ Support this podcast on Patreon ★",
    "author": "Patrick Wheeler and Jason Gauci",
    "published": "Mon, 25 Sep 2023 10:00:00 -0500",
    "image": "https://pdst.fm/e/media.transistor.fm/e0dc70cc/ca4663e0.mp3",
    "source": "http://feeds.feedburner.com/ProgrammingThrowdown",
    "categories": [
      "Programming Throwdown",
      " Programming Languages",
      "C",
      "C",
      "Java",
      "Python",
      "Objective C"
    ]
  },
  {
    "id": "0d9fd8d2-6cd1-467e-ab84-70f9813acd53",
    "title": "164: Choosing a Database For Your Project With Kris Zyp",
    "link": "https://www.programmingthrowdown.com/episodes/164-choosing-a-database",
    "description": "Things to consider when choosing a databaseSpeed \u0026 LatencyConsistency, ACID ComplianceScalabilityLanguage support \u0026 Developer ExperienceRelational vs. Non-relational (SQL vs. NoSQL)Data typesSecurityDatabase environmentClient vs Server accessInfo on Kris \u0026 Harper:Website: harperdb.ioTwitter: @harperdbio, @kriszypGithub: @HarperDB, @kriszyp ★ Support this podcast on Patreon ★",
    "author": "Patrick Wheeler and Jason Gauci with guest Kris Zyp",
    "published": "Mon, 11 Sep 2023 10:00:00 -0500",
    "image": "https://pdst.fm/e/media.transistor.fm/eaf2acd4/d28ba72a.mp3",
    "source": "http://feeds.feedburner.com/ProgrammingThrowdown",
    "categories": [
      "Programming Throwdown",
      " Programming Languages",
      "C",
      "C",
      "Java",
      "Python",
      "Objective C"
    ]
  },
  {
    "id": "0091d0f1-2ce5-47e8-b417-e688b6f1250d",
    "title": "163: Recursion",
    "link": "https://www.programmingthrowdown.com/episodes/163-recursion",
    "description": "Episode 163 - RecursionIntro topic: Electric CarsNews/Links:Snake Game in 101 Bytes in a QR Codehttps://www.reddit.com/r/programming/comments/15ab4ct/my_qr_code_snake_game_is_now_only_101_bytes/Superconductor Rumors aboundhttps://arstechnica.com/science/2023/08/whats-going-on-with-the-reports-of-a-room-temperature-superconductor/OpenWormhttps://github.com/openworm/OpenWormCreator of vim passes awayhttps://news.itsfoss.com/vim-creator-passed-away/Book of the ShowPatrick:Little Book of Common Sense Investing by Jack Bogle https://amzn.to/43YqANRJason: Mistborn Saga: https://amzn.to/3DJkUN8Patreon Plug https://www.patreon.com/programmingthrowdown?ty=hTool of the ShowJason:reMarkable https://remarkable.com/Patrick: Stellarium (iOS and Android)Topic: RecursionWhat is itDivide-And-ConquerFibonacci numbersHow to (not) teach recursionPractical ApplicationsGraph operationsTree retrieval, balancingGraph SearchSpatial partitioningPitfallsStack sizeHow to solve problems with recursion(1) Consider the base cases(2) Build the recursive step(3) Look for ways the recursion will not terminate and fix(4) (rest are optional) Remove global contexts(5) Add memoization(6) Build solutions incrementally ★ Support this podcast on Patreon ★",
    "author": "Patrick Wheeler and Jason Gauci",
    "published": "Mon, 14 Aug 2023 10:15:25 -0500",
    "image": "https://pdst.fm/e/media.transistor.fm/5061fa51/2f90cc33.mp3",
    "source": "http://feeds.feedburner.com/ProgrammingThrowdown",
    "categories": [
      "Programming",
      " Recursion"
    ]
  },
  {
    "id": "ff023def-69c3-448f-9aa7-8607ec5fb3a8",
    "title": "162: Interactive Fiction",
    "link": "https://www.programmingthrowdown.com/episodes/162-interactive-fiction/",
    "description": "In the latest episode of Programming Throwdown, we delve into the captivating world of interactive fiction. We explore: Wordnet, Inform, and how games in the past have been the forerunners of today’s NLP challenges. 00:00:22 Introductions00:00:39 To hard mode or not to hard mode00:08:58 No moats in Google00:16:37 Stable Diffusion blows Jason’s mind00:21:31 Putting beats together00:23:38 GPT4All00:27:44 White Sand00:35:28 Fortuna00:38:55 Patrick’s ‘dirty’ secret00:47:20 Wordnet00:53:56 Procedural generation00:57:29 On tabletop RPGs01:00:48 Inform01:07:27 FarewellsResources mentioned in this episode:Join the Programming Throwdown Patreon community today: https://www.patreon.com/programmingthrowdown?ty=h Subscribe to the podcast on Youtube: https://www.youtube.com/@programmingthrowdown4793 News/Links:Google: We have no moat and neither does OpenAIhttps://www.semianalysis.com/p/google-we-have-no-moat-and-neitherStable Diffusion QR Codeshttps://stable-diffusion-art.com/qr-code/ Beginning to Make Musichttps://learningmusic.ableton.com/GPT4Allhttps://gpt4all.io/index.htmlWordnet:https://wordnet.princeton.edu/Inform:https://en.wikipedia.org/wiki/InformBook of the ShowPatrick:White Sand https://amzn.to/43CPMKAJason: The Fortuna https://www.generativefiction.com/Tool of the ShowJason:Gatsby.js https://www.gatsbyjs.com/Patrick: Peglin https://store.steampowered.com/app/1296610/Peglin/  If you’ve enjoyed this episode, you can listen to more on Programming Throwdown’s website: https://www.programmingthrowdown.com/ Reach out to us via email: programmingthrowdown@gmail.com You can also follow Programming Throwdown on Facebook | Apple Podcasts | Spotify | Player.FM | Youtube Join the discussion on our DiscordHelp support Programming Throwdown through our Patreon ★ Support this podcast on Patreon ★",
    "author": "Patrick Wheeler and Jason Gauci",
    "published": "Mon, 24 Jul 2023 10:00:00 -0500",
    "image": "https://pdst.fm/e/media.transistor.fm/e533699e/a551aa1e.mp3",
    "source": "http://feeds.feedburner.com/ProgrammingThrowdown",
    "categories": [
      "Programming Throwdown",
      " Programming Languages",
      "C",
      "C",
      "Java",
      "Python",
      "Objective C"
    ]
  },
  {
    "id": "4633fe97-d905-4c01-a919-e0d11da95bc5",
    "title": "161: Leveraging Generative AI Models with Hagay Lupesko",
    "link": "https://www.programmingthrowdown.com/episodes/161-leveraging-generative-ai-models-with-hagay-lupesko",
    "description": "MosaicML’s VP Of Engineering, Hagay Lupesko, joins us today to discuss generative AI!  We talk about how to use existing models as well as ways to finetune these models to a particular task or domain. 00:01:28 Introductions00:02:09 Hagay’s circuitous career journey00:08:25 Building software for large factories00:17:30 The reality of new technologies00:28:10 AWS00:29:33 Pytorch’s leapfrog advantage00:37:24 MosaicML’s mission00:39:29 Generative AI00:44:39 Giant data models00:57:00 Data access tips01:10:31 MPT-7B01:27:01 Careers in Mosaic01:31:46 FarewellsResources mentioned in this episode:Join the Programming Throwdown Patreon community today: https://www.patreon.com/programmingthrowdown?ty=h Subscribe to the podcast on Youtube: https://www.youtube.com/@programmingthrowdown4793 Links:Hagay Lupesko:Linkedin: https://www.linkedin.com/in/hagaylupesko/Twitter: https://twitter.com/hagay_lupeskoGithub: https://github.com/lupeskoMosaicML:Website: https://www.mosaicml.com/Careers: https://www.mosaicml.com/careersTwitter: https://twitter.com/MosaicMLLinkedin: https://www.linkedin.com/company/mosaicml/Others:Amp It Up (Amazon): https://www.amazon.com/Amp-Unlocking-Hypergrowth-Expectations-Intensity/dp/1119836115Hugging Face Hub: https://huggingface.co/ If you’ve enjoyed this episode, you can listen to more on Programming Throwdown’s website: https://www.programmingthrowdown.com/ Reach out to us via email: programmingthrowdown@gmail.com You can also follow Programming Throwdown on Facebook | Apple Podcasts | Spotify | Player.FM | Youtube Join the discussion on our DiscordHelp support Programming Throwdown through our Patreon ★ Support this podcast on Patreon ★",
    "author": "Patrick Wheeler and Jason Gauci",
    "published": "Mon, 10 Jul 2023 10:00:00 -0500",
    "image": "https://pdst.fm/e/media.transistor.fm/39145506/52d1bda6.mp3",
    "source": "http://feeds.feedburner.com/ProgrammingThrowdown",
    "categories": [
      "Programming Throwdown",
      " Programming Languages",
      "C",
      "C",
      "Java",
      "Python",
      "Objective C"
    ]
  },
  {
    "id": "f72c6931-61e3-4091-b999-9a63ed98721f",
    "title": "160: Position Localization",
    "link": "https://www.programmingthrowdown.com/episodes/160-position-localization/",
    "description": "Where are you now? It’s a question that may seem easy to answer on the surface, but in truth hides more complexity than people expect. In today’s episode, we tackle the latest on AI, creative endeavors, and more before diving into the meaty discussion of position localization. 00:01:13 Steam Deck00:11:22 Summoning Salt on Mario00:16:49 100k stars00:24:26 ChatGPT spam call00:25:31 Build Your Own DB (from scratch)00:29:50 DuckDB00:35:07 Jason has an idea00:37:58 Fighting Fantasy Classics00:41:52 Patrick’s bread00:47:52 Support the show00:53:54 Awkward CRM emails00:56:07 Rill01:00:29 Position localization in detail01:17:15 Common filter01:25:22 Simultaneous localization01:28:59 FarewellsResources mentioned in this episode:Join the Programming Throwdown Patreon community today: https://www.patreon.com/programmingthrowdown?ty=h Subscribe to the podcast on Youtube: https://www.youtube.com/@programmingthrowdown4793News/Links:The History of Super Mario Bros 3 100% World Records (Summoning Salt)https://www.youtube.com/watch?v=_EsFyogVvkwAutoGPT hits 100k starshttps://twitter.com/AlphaSignalAI/status/1649524105647906819Build Your Own Database from Scratchhttps://build-your-own.org/database/Asking generative art AI to render mathematical theoremshttps://twitter.com/TivadarDanka/status/1649721970886594561DuckDB:https://duckdb.org/Book of the Show:Jason: Fighting Fantasy Classicshttps://play.google.com/store/apps/details?id=com.tinmangames.ffhub\u0026hl=en_US\u0026gl=UShttps://apps.apple.com/us/app/fighting-fantasy-classics/id1261201650Patrick: Evolutions in Bread: Artisan Pan Breads and Dutch-Oven Loaves at Homehttps://amzn.to/44kW4iETool of the Show:Jason: Jinja https://jinja.palletsprojects.com/en/3.1.x/Patrick: Rill https://www.rilldata.com/If you’ve enjoyed this episode, you can listen to more on Programming Throwdown’s website: https://www.programmingthrowdown.com/ Reach out to us via email: programmingthrowdown@gmail.com You can also follow Programming Throwdown on Facebook | Apple Podcasts | Spotify | Player.FM | Youtube Join the discussion on our DiscordHelp support Programming Throwdown through our Patreon ★ Support this podcast on Patreon ★",
    "author": "Patrick Wheeler and Jason Gauci",
    "published": "Mon, 26 Jun 2023 10:00:00 -0500",
    "image": "https://pdst.fm/e/media.transistor.fm/c37d6c58/fa2185a9.mp3",
    "source": "http://feeds.feedburner.com/ProgrammingThrowdown",
    "categories": [
      "Programming Throwdown",
      " Programming Languages",
      "C",
      "C",
      "Java",
      "Python",
      "Objective C"
    ]
  },
  {
    "id": "c3710eac-b511-4777-8ec5-8158fd80c334",
    "title": "159: GraphQL with Tanmai Gopal",
    "link": "https://www.programmingthrowdown.com/2023/05/159-graphql-with-tanmai-gopal.html",
    "description": "GraphQL is one of the biggest API enablers in software development, but just how complicated can things be? Tanmai Gopal – Hasura’s CEO extraordinaire – talks with Jason and Patrick about how the secret sauce gets made. They dive deeply from how APIs function to having them managed in practice – among several other topic, making this a must-listen episode.  00:01:19 Introductions00:01:48 Tanmai’s late start in programming00:05:48 Plinko00:13:06 Coursera00:23:28 The question of API development00:30:30 API layer functionality00:34:58 How Hasura leverages JSON00:39:08 GraphQL00:42:49 Worse than an API call00:49:15 The potential REST minefield00:53:41 JSON Web Tokens01:11:34 Scaling writes01:15:17 Careers with Hasura01:22:35 FarewellsResources mentioned in this episode:Join the Programming Throwdown Patreon community today: https://www.patreon.com/programmingthrowdown?ty=h Subscribe to the podcast on Youtube: https://www.youtube.com/@programmingthrowdown4793Links: Tanmai Gopal: Website: https://hasura.io/blog/@tanmaig/ Linkedin: https://www.linkedin.com/in/tanmaig/ Twitter: https://twitter.com/tanmaigo Github: https://github.com/coco98 Hasura: Website: https://hasura.io/ Careers: https://hasura.io/careers/ Twitter: https://twitter.com/HasuraHQ Github: https://github.com/hasura Linkedin: https://www.linkedin.com/company/hasura Others: Good Strategy, Bad Strategy (Amazon): https://www.amazon.com/Good-Strategy-Bad-Strategy-audiobook/dp/B07R6XQ8YP Modern Application Development (IIT Madras, archived): https://archive.nptel.ac.in/courses/106/106/106106156/If you’ve enjoyed this episode, you can listen to more on Programming Throwdown’s website: https://www.programmingthrowdown.com/ Reach out to us via email: programmingthrowdown@gmail.com You can also follow Programming Throwdown on Facebook | Apple Podcasts | Spotify | Player.FM | Youtube Join the discussion on our DiscordHelp support Programming Throwdown through our Patreon ★ Support this podcast on Patreon ★",
    "author": "Patrick Wheeler and Jason Gauci",
    "published": "Mon, 12 Jun 2023 10:00:00 -0500",
    "image": "https://pdst.fm/e/media.transistor.fm/721b94ca/549ae1a1.mp3",
    "source": "http://feeds.feedburner.com/ProgrammingThrowdown",
    "categories": [
      "Programming Throwdown",
      " Programming Languages",
      "C",
      "C",
      "Java",
      "Python",
      "Objective C"
    ]
  },
  {
    "id": "e719d417-b5a3-43aa-913e-5ebacc8d04f3",
    "title": "158: Software Supply Chain with Bill Manning",
    "link": "https://www.programmingthrowdown.com/2023/05/158-software-supply-chain-with-bill.html",
    "description": "In today’s episode, Jason and Patrick dive deeply with JFrog’s Senior Solutions Engineer, Bill Manning. With the conversation tackling the depth and complexity of software supply chains, vulnerabilities and more, Bill deftly offers grounded advice to listeners old and new. 00:00:26 Introductions00:00:40 Bill’s plethora of job titles00:09:33 The excitement of learning a language00:15:08 Mechanical keyboards00:21:17 Bill’s advice on adapting00:27:55 What a supply chain is00:34:28 Castle analogies00:40:55 Unpacking legalities00:52:11 Log4J00:54:41 What JFrog does01:01:16 What can go wrong01:08:08 Getting started in this space01:14:15 Careers in JFrog01:20:23 FarewellsResources mentioned in this episode:Join the Programming Throwdown Patreon community today: https://www.patreon.com/programmingthrowdown?ty=h Subscribe to the podcast on Youtube: https://www.youtube.com/@programmingthrowdown4793Links:Bill Manning:Website: https://about.me/billmanningLinkedin: https://www.linkedin.com/in/williammanning/Twitter: https://twitter.com/williammanningJFrog:Website: https://jfrog.com/Careers: https://join.jfrog.com/Artifactory: https://jfrog.com/artifactory/Linkedin: https://www.linkedin.com/company/jfrog-ltd/Others:Liquid Software: https://liquidsoftware.com/SolarWinds hack incident: https://www.wired.com/story/the-untold-story-of-solarwinds-the-boldest-supply-chain-hack-ever/Transitive dependencies: https://en.wikipedia.org/wiki/Transitive_dependencyMore Throwdown? Check out this prior episode:153: ChatGPT: https://www.programmingthrowdown.com/2023/03/153-chatgpt.htmlIf you’ve enjoyed this episode, you can listen to more on Programming Throwdown’s website: https://www.programmingthrowdown.com/ Reach out to us via email: programmingthrowdown@gmail.com You can also follow Programming Throwdown on Facebook | Apple Podcasts | Spotify | Player.FM | Youtube Join the discussion on our DiscordHelp support Programming Throwdown through our Patreon  ★ Support this podcast on Patreon ★",
    "author": "Patrick Wheeler and Jason Gauci",
    "published": "Mon, 22 May 2023 10:00:00 -0500",
    "image": "https://pdst.fm/e/media.transistor.fm/80919dab/2d0cf689.mp3",
    "source": "http://feeds.feedburner.com/ProgrammingThrowdown",
    "categories": [
      "Programming Throwdown",
      " Programming Languages",
      "C",
      "C",
      "Java",
      "Python",
      "Objective C"
    ]
  },
  {
    "id": "79358678-7bba-4768-8523-7fdf894b65f9",
    "title": "157: Kubernetes with Craig Box",
    "link": "https://www.programmingthrowdown.com/2023/05/157-kubernetes-with-craig-box.html",
    "description": "There’s more than what meets the eye when it comes to Kubernetes, and Craig Box – ARMO’s VP of Open Source \u0026 Community –is one of several who have seen its many twists and turns since its inception. He talks with Jason and Patrick about Kubernetes’ origins in pop culture, utility in the modern workflow, and possible future in today’s episode.  00:01:31 Introductions00:03:39 Craig’s early internet speed experience00:07:46 An adventure towards Google00:16:55 Project Seven00:21:17 Mesos00:26:42 The origin of Kubernetes00:28:36 DS9’s influence on naming conventions00:37:49 Getting more results with the same resources00:47:13 IPv400:53:44 Craig’s thoughts on learning Kubernetes01:06:59 Kubescape01:18:12 Working at ARMO01:23:16 Programming Throwdown on Youtube01:23:55 FarewellsResources mentioned in this episode:Join the Programming Throwdown Patreon community today: https://www.patreon.com/programmingthrowdown?ty=h Subscribe to the podcast on Youtube: https://www.youtube.com/@programmingthrowdown4793Links:Craig Box:Substack: https://substack.com/profile/107796914-craig-boxGithub: https://github.com/craigboxLinkedin: https://www.linkedin.com/in/crbnz/Twitter: https://twitter.com/craigboxARMO:Website: https://www.armosec.io/Linkedin: https://www.linkedin.com/company/armosec/Others:The Project Seven origin story: https://cloud.google.com/blog/products/containers-kubernetes/from-google-to-the-world-the-kubernetes-origin-story7 of 9 on Memory Alpha: https://memory-alpha.fandom.com/wiki/Seven_of_Nine More Throwdown? Check out this prior episode:E135: Kubernetes with Aran Khanna: https://www.programmingthrowdown.com/2022/06/135-kubernetes-with-aran-khanna.htmlIf you’ve enjoyed this episode, you can listen to more on Programming Throwdown’s website: https://www.programmingthrowdown.com/ Reach out to us via email: programmingthrowdown@gmail.com You can also follow Programming Throwdown on Facebook | Apple Podcasts | Spotify | Player.FM | Youtube Join the discussion on our DiscordHelp support Programming Throwdown through our Patreon ★ Support this podcast on Patreon ★",
    "author": "Patrick Wheeler and Jason Gauci",
    "published": "Mon, 08 May 2023 10:47:50 -0500",
    "image": "https://pdst.fm/e/media.transistor.fm/8e3237cc/203d1fa3.mp3",
    "source": "http://feeds.feedburner.com/ProgrammingThrowdown",
    "categories": [
      "Kubernetes"
    ]
  },
  {
    "id": "c47425de-20a0-4dc7-a7d3-08c335fd5c2e",
    "title": "Generating infinite, age-appropriate Cat Crimes puzzles",
    "link": "https://robertheaton.com/cat-crimes/",
    "description": "A few weeks ago my 5-year-old and I tried playing Cat Crimes, a puzzle game in which you work out which of your cats ate your shoes. We had a wonderful time - for about 20 minutes. In each round of Cat Crimes you get a puzzle card with a list of clues on it. You have to use the clues to figure out where in your front room each of your 6 cats were sitting. This tells you which one of them was responsible for your ruined stilettos. The game comes with 40 puzzle cards, ranging from the very easy to the mind-crushingly difficult. However, the problem is that “very easy” to “mind-crushingly difficult” is a lot of ground to cover in 40 puzzles, and by the fifth puzzle the clues had become too abstract and difficult for my little man. In the first few puzzles each new clue allowed us to immediately place a new cat and then forget about it. For example, a clue might have told us that Mr. Mittens was sitting opposite Pip Squeak. We already knew where Pip Squeak was sitting, so we could work out exactly where Mr. Mittens was sitting too. This is the perfect level of complexity for a small child and his aging father at 6am. However, as the puzzles get harder the clues stopped neatly resolving like this. They still narrowed down the possible pussy permutations, but they didn’t necessarily allow us to definitively place a new cat straightway. For example, a clue might have told us that Mr Mittens was sitting next to Pip Squeak. We know that Mr Mittens must have been on either Pip Squeak’s left or right, but we couldn’t say for sure which until we’d processed more clues. We might later learn that Duchess was sitting to Pip Squeak’s left, which in turn would tell us that Mr. Mittens must be sitting to her right. To follow this extended chain of logic you need to hold multiple simultaneous superpositions in your head. This is fun and challenging and good puzzle design, but my kid hasn’t done superpositions at school yet so he didn’t get it. I tried drawing some pictures for him, but they made no sense even to me. We got angry with each other and eventually gave up on the game altogether. But we’d really had a great time with those first few puzzles, so that evening I wrote us a computer program that generated an infinite number of new beginner level Cat Crimes challenges. I ran it 20 times and printed out the challenges and their solutions. The next day we continued happily solving age-appropriate cat mysteries together. Downloads You can download: A PDF of 20 more beginner-level challenges The code for my challenge generator. You can use it to generate more challenges, or add new clue types, or update the rules used to select new challenges The program works by generating random challenges until it finds one that has a single unique solution and meets certain constraints. The constraints ensure that the challenges are easy but not too easy. For example, a maximum of 3 cats can be asleep (meaning that they are out of the round), and a maximum of 2 clues are allowed to tell you a cat’s exact position. In order to play the puzzles you’ll need to buy the Cat Crimes game. Good luck, and let me know how you get on! ChatGPT mode At first I tried asking ChatGPT to generate puzzles for me. My puzzles are guaranteed to be solvable and probably about the right difficulty, but since they’re randomly generated their solutions don’t generally have much of a careful narrative behind them. I thought that ChatGPT might be able to do better. “Absolutely!” it said when I asked it, but it kept giving me back puzzles that had either several different solutions or no solutions at all. No dice! To fix this I added a ChatGPT mode to my tool. In this mode the tool gives you a prompt to paste into ChatGPT. The prompt asks ChatGPT it to give you a Cat Crimes puzzle formatted in a specific way. You paste ChatGPT’s output back into the tool, and the tool checks whether the puzzle is valid. If it is then the tool converts the puzzle into printable card; if it’s not then it prints an error message for you to give to ChatGPT to help it fix the problem. You continue this debugging loop until you have a valid (and hopefully more fun) puzzle. Disclaimer I’m not associated with Cat Crimes in any way; this is a completely unofficial fan project. Cat Crimes is owned and published by Thinkfun Inc. Go and buy it from them!",
    "author": "",
    "published": "Mon, 02 Sep 2024 00:00:00 +0000",
    "image": "/images/cc-cards.jpg",
    "source": "https://robertheaton.com/feed.xml",
    "categories": null
  },
  {
    "id": "a834db01-dd31-4682-b4d0-9253969df36c",
    "title": "PySkyWiFi: completely free, unbelievably stupid wi-fi on long-haul flights",
    "link": "https://robertheaton.com/pyskywifi/",
    "description": "The plane reached 10,000ft. I took out my laptop, planning to peruse the internet and maybe do a little work if I got really desperate. I connected to the in-flight wi-fi and opened my browser. The network login page demanded credit card details. I fumbled for my card, which I eventually discovered had hidden itself inside my passport. As I searched I noticed that the login page was encouraging me to sign in to my airmiles account, free of charge, even though I hadn’t paid for anything yet. A hole in the firewall, I thought. It’s a long way from London to San Francisco so I decided to peer through it. I logged in to my JetStreamers Diamond Altitude account and started clicking. I went to my profile page, where I saw an edit button. It looked like a normal button: drop shadow, rounded corners, nothing special. I was supposed to use it to update my name, address, and so on. But suddenly I realised that this was no ordinary button. This clickable rascal would allow me to access the entire internet through my airmiles account. This would be slow. It would be unbelievably stupid. But it would work. Several co-workers were asking me to review their PRs because my feedback was “two weeks late” and “blocking a critical deployment.” But my ideas are important too so I put on my headphones and smashed on some focus tunes. I’d forgotten to charge my headphones so Limp Bizkit started playing out of my laptop speakers. Fortunately no one else on the plane seemed to mind so we all rocked out together. Before I could access the entire internet through my airmiles account I’d need to write a few prototypes. At first I thought that I’d write them using Go, but then I realised that if I used Python then I could call the final tool PySkyWiFi. Obviously I did that instead. Prototype 1: Instant Messaging Here’s the basic idea: suppose that I logged into my airmiles account and updated my name. If you were also logged in to my account then you could read my new name, from the ground. You could update it again, and I could read your new value. If we kept doing this then the name field of my airmiles account could serve as a tunnel through the airplane’s wi-fi firewall to the real world. This tunnel could support a simple instant messaging protocol. I could update my name to “Hello how are you.” You could read my message and then send me a reply by updating my name again to “Im fine how are you.” I could read that, and we could have a stilted conversation. This might not sound like much, but it would be the first step on the road to full internet access. I paid for the internet on my old laptop. I hadn’t finished migrating my data off this computer, so it still had to come everywhere with me. I messaged my wife to ask her to help me with my experiments. no, what are you talking about, i'm busy she replied, lovingly. So instead I took out my new laptop, which still had no internet access. I created a test airmiles account and logged into it on both computers. I found that I could indeed chat with myself by updating the name field in the UI. sequenceDiagram participant Computer1 participant AirmilesAccount as Airmiles AccountName Field participant Computer2 Computer1-\u003e\u003eAirmilesAccount: TYPE: Hello how are you AirmilesAccount-\u003e\u003eComputer2: READ: Hello how are you Computer2-\u003e\u003eAirmilesAccount: TYPE: Im fine how are you AirmilesAccount-\u003e\u003eComputer1: READ: Im fine how are you This was a lousy user experience though. So I wrote a command line tool to automate it. My tool asked the user for a message, and then behind the scenes it logged into my airmiles account via the website, using my credentials. The tool updated the name field of my test account with the user’s message. It then polled the name field every few seconds to see if my account’s name had changed again, which would indicate that the other person had sent a message back. Once the tool detected a new value it printed that value and asked the user for their next reply, and so on. sequenceDiagram actor Me participant AirmilesAccount as Airmiles AccountName Field actor You You-\u003e\u003eAirmilesAccount: (poll for new data) AirmilesAccount--\u003e\u003eYou: (no new data) Me-\u003e\u003eAirmilesAccount: WRITE: Hello how are you You-\u003e\u003eAirmilesAccount: (poll for new data) AirmilesAccount-\u003e\u003eYou: READ: Hello how are you Me-\u003e\u003eAirmilesAccount: (poll for new data) AirmilesAccount--\u003e\u003eMe: (no new data) You-\u003e\u003eAirmilesAccount: WRITE: Im fine how are you Me-\u003e\u003eAirmilesAccount: (poll for new data) AirmilesAccount-\u003e\u003eMe: READ: Im fine how are you Using this tool I could chat with someone on the ground, via my terminal. I wouldn’t have to pay for wifi, and neither of us would have to know or care that the messages were being sent via my SkyVenture Premium Gold Rewards account. I still needed to find someone who would chat with me. But this was a good start! NB: at this point I didn’t want to send any more automated data through my airmiles account in case that got me in trouble somehow. Nothing I was doing could possibly cause any damage, but some companies get jumpy about this kind of thing. I therefore proved to myself that PySkyWiFi would work on my airmiles accounts too by updating my name ten or so times in quick succession. They all succeeded, which suggested to me that my airmiles account probably wasn’t rate-limiting the speed or number of requests I could send to it. I then wrote the rest of my code by sending my data through friendly services like GitHub Gists and local files on my computer, using the same principles as if I were sending it through an airmiles account. If PySkyWiFi worked through GitHub then it would work through my Star Power UltimateBlastOff account too. This had the secondary advantage of being much faster and easier for iteration too. I’m going to keep talking about sending data through an airmiles account, because that’s the point I’m trying to make. Prototype 2: Live headlines, stock prices, and football scores The tunnel I’d constructed through my airmiles account would be useful for more than IMing. For my next prototype I wrote a program that would run on a computer back at my house or in the cloud, and would automatically send information from the real world up to me on the plane, through my airmiles account. I could deploy it before I left for my next flight and have it send me the latest stock prices or football scores while I was in the sky. To do this I wrote a daemon that would run on a computer that was on the ground and connected to the internet. The daemon constantly polled the name field in my airmiles account, looking for structured messages that I sent to it from the plane (such as STOCKPRICE: APPL or SCORE: MANUNITED). When the daemon saw a new request it parsed it, retrieved the requested information using the relevant API, and sent it back to me via my airmiles account. It worked perfectly. Now I could use my first prototype to send IMs through my airmiles account, and I could use my second prototype tio follow the markets and the sports. It was time to squeeze the entire internet through my airmiles account. The real thing: PySkyWiFi During the rest of the flight I wrote PySkyWiFi. PySkyWiFi is a highly simplified version of the TCP/IP protocol that squeezes whole HTTP requests through an airmiles account, out of the plane, and down to a computer connected to the internet on the ground. A daemon running on this ground computer makes the HTTP requests for me, and then finally squeezes the completed HTTP responses back through my airmiles account, up to me on my plane. This meant that on my next flight I could technically have full access to the internet, via my airmiles account. Depending on network conditions on the plane I might be able to hit speeds of several bytes per second. DISCLAIMER: you obviously shouldn’t actually do any of this Here’s how it works (and here’s the source code). How PySkyWiFi works PySkyWiFi has two components: The sky proxy - a proxy that runs on your laptop, on a plane The ground daemon - a daemon that runs on a computer connected to the internet, at your home on the ground or in the cloud Here’s a simplified diagram: sequenceDiagram actor Me participant SkyProxy as Sky Proxy participant AirmilesAccount1 as Airmiles Account participant GroundDaemon as Ground Daemon participant Website as example.com Me-\u003e\u003eSkyProxy: HTTP request SkyProxy-\u003e\u003eAirmilesAccount1: HTTP request AirmilesAccount1-\u003e\u003eGroundDaemon: HTTP request GroundDaemon-\u003e\u003eWebsite: HTTP request Website-\u003e\u003eGroundDaemon: HTTP response GroundDaemon-\u003e\u003eAirmilesAccount1: HTTP response AirmilesAccount1-\u003e\u003eSkyProxy: HTTP response SkyProxy-\u003e\u003eMe: HTTP response Setup starts before you leave your house. First you start up the ground daemon. Then you get a taxi to the airport, get on the plane, and connect to the plane’s wi-fi network. You boot up the sky proxy on your laptop. Your PySkyWiFi relay is now ready to go. You use a tool like curl to make an HTTP request to the sky proxy that you’ve started on your laptop. You address your request to the proxy (eg. localhost:1234/) and you put the actual URL that you want to query inside a custom HTTP header called X-PySkyWiFi. For example: curl localhost:1234 -H \"X-PySkyWiFi: example.com\"` The X-PySkyWiFi header will be stripped by the ground daemon and used to route your request to your target website. Everything else about the request (including the body and other headers) will be forwarded exactly as-is. Once you make your request it will hang for several minutes. If by some miracle nothing breaks then you’ll eventually get back an HTTP response, exactly as if you’d sent the request over the normal internet like a normal person. The only difference is that it didn’t cost you anything. You will now almost certainly pay for wi-fi, because your curiosity has been satisfied and your time on this earth is very short. Step-by-step Here’s what happens behind the scenes: sequenceDiagram actor Me participant SkyProxy as Sky Proxy participant AirmilesAccount1 as Airmiles Account 1Name Field participant AirmilesAccount2 as Airmiles Account 2Name Field participant GroundDaemon as Ground Daemon participant Website as example.com Me-\u003e\u003eSkyProxy: curl localhost:1234 \\n -H \"X-PySkYWiFi: example.com\" SkyProxy-\u003e\u003eAirmilesAccount1: Write request chunk 1 GroundDaemon--\u003e\u003eAirmilesAccount1: (poll for new data) AirmilesAccount1-\u003e\u003eGroundDaemon: Read request chunk 1 GroundDaemon-\u003e\u003eAirmilesAccount2: Ack request chunk 1 SkyProxy--\u003e\u003eAirmilesAccount2: (poll for new data) AirmilesAccount2-\u003e\u003eSkyProxy: Read ack for request chunk 1 SkyProxy-\u003e\u003eAirmilesAccount1: Write request chunk 2 GroundDaemon--\u003e\u003eAirmilesAccount1: (poll for new data) AirmilesAccount1-\u003e\u003eGroundDaemon: Read request chunk 2 Note over SkyProxy,GroundDaemon: Repeat until the whole HTTP request has been transferred GroundDaemon-\u003e\u003eWebsite: GET / HTTP/1.1Host: example.com Website-\u003e\u003eGroundDaemon: HTTP/1.1 200 OKContent-Type: text/html GroundDaemon-\u003e\u003eAirmilesAccount2: Write response chunk 1 SkyProxy--\u003e\u003eAirmilesAccount2: (poll for new data) AirmilesAccount2-\u003e\u003eSkyProxy: Read response chunk 1 SkyProxy-\u003e\u003eAirmilesAccount1: Ack request chunk 1 GroundDaemon--\u003e\u003eAirmilesAccount1: (poll for new data) AirmilesAccount1-\u003e\u003eGroundDaemon: Read ack for request chunk 1 GroundDaemon-\u003e\u003eAirmilesAccount2: Write response chunk 2 SkyProxy--\u003e\u003eAirmilesAccount2: (poll for new data) AirmilesAccount2-\u003e\u003eSkyProxy: Read response chunk 2 Note over GroundDaemon,SkyProxy: Repeat until the whole HTTP response has been transferred SkyProxy-\u003e\u003eMe: HTTP/1.1 200 OKContent-Type: text/html In order: The sky proxy receives the HTTP request from your curl call. It splits the request into chunks, because the entire request is too large to fit into you airmiles account in one go The sky proxy writes each chunk one-by-one to the name field in your airmiles account. The ground daemon polls your airmiles account. When it detects that the name field has changed to a new chunk, it reads that chunk and sends an acknowledgement to the sender so that the sender knows it’s safe to send the next chunk. The receiver sticks the chunks back together and rebuilds the original HTTP request Once the ground daemon has received and rebuilt the full HTTP request, it sends the request out over the internet. The ground daemon receives an HTTP response. The ground daemon sends the HTTP response up to the sky proxy using the same process as before, in reverse. This time the ground daemon splits the HTTP response up into chunks and writes each chunk one-by-one to the name field in your airmiles account (it actually writes these response chunks using a second airmiles account to make the protocol simpler) The sky proxy polls the second airmiles account. It reads each chunk and sticks them back together to rebuild the HTTP response The sky proxy returns the HTTP response to the original call to curl. As far as curl is concerned this is a perfectly normal HTTP response, just a little slow. curl has no idea about the silliness that just transpired The sky proxy and the ground daemon are relatively simple: they send HTTP requests and parse HTTP responses. The magic is in how they squeeze these requests and responses through an airmiles account. Let’s look closer. Squeezing HTTP requests through an airmiles account PySkyWiFi’s communication logic is split into two layers: a transport layer, and a network layer. The transport layer’s job is to decide what data clients should send to each other. It dictates how senders should split up long messages into manageable chunks, as well as how senders and receivers should signal information like “I am ready to receive another chunk.” The PySkyWiFi transport layer is somewhat similar to the TCP protocol that powers much of the internet, if you squint very hard and don’t know much about TCP. By contrast, the network layer’s job is to actually send data between clients, once the transport protocol has decided what that data should be. It’s vaguely similar to the IP protocol, if you squint even harder and know even less what you’re talking about. This division of responsibility between layers is useful because the transport layer doesn’t have to care about how the network layer sends its data, and the network layer doesn’t care what the data it sends means or where it came from. The transport layer just hands the network layer some data, and the network layer sends it however it likes. This separation makes it easy to add support for new airmiles platforms, because all we have to do is implement a new network layer that reads and writes to the new type of airmiles account. This separation also allows us to write test versions of the network protocol that write and read from local files instead of airmiles accounts. In each case the network layer changes, but the transport layer stays exactly the same. Here’s how they work. The transport layer A PySkyWiFi transport connection between two clients consists of two “pipes” (or “airmiles accounts”). Each client has a “SEND” pipe that it can write data to, and a “RECV” pipe that it can read from. Clients write to their SEND pipe by writing data to it, and they read from their RECV pipe by constantly polling it and seeing if anything has changed. flowchart LR Client1 --\u003e Client2 Client2 --\u003e Client1 From the transport layer’s point of view, a pipe is just something that it can write and read data from. Beyond that the transport layer doesn’t care how its pipes work. At any given moment a PSWF (PySkYWiFi) client can only either send or receive data, but not both. A client in send mode will not see data sent by the other client, and a client in receive mode should never send data because the other client won’t see it. This is unlike TCP, where clients can send or receive data at ay time. When squeezing HTTP requests and responses through an airmiles account, the sky proxy sends the first message and the ground daemon receives it. Once the sky proxy has finished sending its HTTP request it switches to receive mode and the ground daemon switches to send. The ground daemon makes the HTTP request and sends back the response, at which point the two switch roles again so that the sky proxy can send another HTTP request. How are long messages sent through such a small pipe? PSWF uses small pipes (such as an airmiles name field) that can’t fit much data in them at once. This means that it takes some work and care to squeeze long messages (like HTTP requests) through them. To send a long message, the sender first splits up their message into chunks that will fit into their SEND pipe. They then send each chunk down the pipe one at a time. To begin a message, a sender starts by sending its first chunk of message data inside a DATA segment: A DATA segment consists of: The letter D The sequence number of the chunk (a number that uniquely identifies the chunk, padded to 6 digits) The actual chunk of data. For example, a data segment in the middle of a message might read: D000451adline\": \"Mudslide in Wigan causes m Once the sender has sent a DATA segment, it pauses. It wants to send its next DATA segment, but it can’t overwrite the airmiles account name field until it knows that the receiver has received and processed the previous one. The receiver tells the sender that it’s safe for to send a new DATA segment by acknowledging every segment that it reads. The receiver does this by writing an ACK segment to its own SEND pipe: An ACK segment consists of: The letter A The sequence number of the segment that is being acknowledged (padded to 6 digits) For example: A000451 The sender is constantly polling its own RCV pipe to check for changes, and so it reads this new ACK segment promptly. Once the sender reads the ACK, it knows that the receiver has received the segment corresponding to the ACK’s sequence number. For example, if a sender receives an ACK segment with sequence number 000451, the sender knows that it’s safe to send the next DATA segment with sequence number 000452. The sender therefore pulls the next chunk from its message and constructs a new DATA segment using this chunk and sequence number. The sender writes the new segment to its SEND pipe, and then pauses waits for another ACK. This loop continues until the sender has sent all the data in its message. To tell the recipient that it’s finished, the sender sends an END segment. An END segment is just the letter E. When a receiver sees an END segment it knows that the sender’s message is over. The sender and the receiver swap roles. The old sender starts polling its RECV pipe for DATA segments, and the old receiver starts chunking up its response message and sending it through its pipe, exactly as before. None of this transport logic cares about the details of the network layer through which the segments are sent. The transport layer just needs the network layer to provide two pipes that it can read and write to. The network layer can pipe this data around via local files, a Discord profile, or an airmiles account. This genericness is what allows PySkyWiFi to work with any airline’s airmiles account, so long as the airline allows you to login to it from the plane without paying. Here’s how PSWF uses transport protocol segments to exchange long messages: sequenceDiagram actor Me participant SkyProxy as Sky Proxy participant AirmilesAccount1 as Airmiles Account 1Name Field participant AirmilesAccount2 as Airmiles Account 2Name Field participant GroundDaemon as Ground Daemon participant Website as robertheaton.com Me-\u003e\u003eSkyProxy: curl localhost:1234 \\n -H \"X-PySkYWiFi: robertheaton.com\" SkyProxy-\u003e\u003eAirmilesAccount1: Write DATA segmentsequence number=000000:contents=`GET / HTTP/1.1 X-PySkyW` GroundDaemon--\u003e\u003eAirmilesAccount1: (poll for new data) AirmilesAccount1-\u003e\u003eGroundDaemon: Read DATA segmentsequence number=000000:contents=`GET / HTTP/1.1 X-PySkyW` GroundDaemon-\u003e\u003eAirmilesAccount2: Write ACK segmentsequence number=000000 SkyProxy--\u003e\u003eAirmilesAccount2: (poll for new data) AirmilesAccount2-\u003e\u003eSkyProxy: Read ACK segmentsequence number=000000 SkyProxy-\u003e\u003eAirmilesAccount1: Write DATA segmentsequence number=000001contents=`iFi: www.robertheaton.co` GroundDaemon--\u003e\u003eAirmilesAccount1: (poll for new data) AirmilesAccount1-\u003e\u003eGroundDaemon: Read DATA segmentsequence number=000001contents=`iFi: www.robertheaton.co` Note over SkyProxy,GroundDaemon: Repeat until the whole HTTP request has been transferred GroundDaemon-\u003e\u003eWebsite: GET / HTTP/1.1Host: robertheaton.com Website-\u003e\u003eGroundDaemon: HTTP/1.1 200 OKContent-Type: text/html, charset=UTF-8 GroundDaemon-\u003e\u003eAirmilesAccount2: Write DATA segmentsequence number=000000contents=HTTP/1.1 200 OK\\nCont SkyProxy--\u003e\u003eAirmilesAccount2: (poll for new data) AirmilesAccount2-\u003e\u003eSkyProxy: Read DATA segmentsequence number=000000contents=HTTP/1.1 200 OK\\nCont SkyProxy-\u003e\u003eAirmilesAccount1: Write ACK segmentsequence number=000000 GroundDaemon--\u003e\u003eAirmilesAccount1: (poll for new data) AirmilesAccount1-\u003e\u003eGroundDaemon: Read ACK segmentsequence number=000000 Note over GroundDaemon,SkyProxy: Repeat until the whole HTTP response has been transferred SkyProxy-\u003e\u003eMe: HTTP/1.1 200 OKContent-Type: text/html, charset=UTF-8 The transport layer decides what data the clients should send each other, but it doesn’t say anything about how they should send it. That’s where the network protocol comes in. The network layer The network layer’s job is to send data between clients. It doesn’t care about where the data came from or what it means; it just receives some data from the transport layer and sends it to the other client (typically via an airmiles account). This means that the network layer is quite simple. It also means that adding a new network layer for a new airmiles platform is straightforward. You use the new platform to implement a few operations and a few properties (see below), and then the transport layer can automatically to use your new airmiles platform with no extra work. A network layer consists of two operations: send(msg: str) - write msg to storage. For an airmiles-based implementation, this writes the value of msg to the name field in the user’s airmiles account recv() -\u003e str - read the message from storage. For an airmiles-based implementation, this reads the value of the name field from the user’s airmiles account. A network layer implementation must also define two properties: sleep_for - the number of seconds that the transport layer should sleep for in between polling for new segments from a RECV pipe. sleep_for can be very low for test implementations like files, but it should be at least several seconds for an implementation like an airmiles account. This is in order to avoid hammering remote server with too many requests. segment_data_size - the number of characters that the transport layer should send in a single segment. Should be equal to the maximum size of the airmiles account field being used to transfer segments (often around 20 characters). A network layer implementation can also optionally provide two more operations: connect_send() - a hook called by the sender when a SEND pipe is initialised. In an airmiles-based implementation this allows the client to login to the platform using a username and password. This gives the client a cookie that it can use to authenticate future send and recv calls. connect_recv() - a hook called by the receiver when a RECV pipe is initialised If you fill in all these methods, you’ll be able to use PySkyWiFi on a new airline. But again, don’t. Tips and tricks When writing a network layer that uses a new airmiles provider, there are a couple of tricks that can make your implementation faster and more reliable. 1. Encode messages to make sure the airmiles account accepts them Airmiles HTML forms usually don’t let users include non-alphabetic characters in their name. Stephen will probably be allowed, but GET /data?id=5 will probably be rejected. To work around this, the network layer should encode segments using base26 before writing them to an airmiles account. base26 is a way of representing a string using only the letters A to Z . In order to convert a byte string to base26, you convert the bytes to a single large number, then you represent that number using a counting system with base 26 (hence the name) where the digits are the letters A to Z. def b26_encode(input_string: str) -\u003e int: # Convert input string to a base-256 integer base256_int = 0 for char in input_string: base256_int = base256_int * 256 + ord(char) # Convert base-256 integer to base26 string if base256_int == 0: return 'A' # Special case for empty input or input that equals zero base26_str = \"\" while base256_int \u003e 0: base26_str = chr(base256_int % 26 + 65) + base26_str base256_int //= 26 return base26_str b26_encode(\"Hello world\") # =\u003e 'CZEZINADXFFTZEIDPKM' The transport layer never needs to know about this encoding. The network layer receives some bytes, encodes them using base26, and writes this encoded string of A to Z to the airmiles account. When the network layer reads the base26 value back out of the airmiles account, it decodes the encoded string back into a number and then back into bytes, and then returns those bytes to the transport layer. Encoding a string using base 26 makes it significantly longer, just like how it takes many more digits to represent a number using binary than decimal. This reduces the bandwidth of our protocol. We could increase our bandwidth by using base52 (using both upper- and lower-case letters) instead of base26, which would shorten it somewhat. This is left as an enhancement for version 2. 2. Increase bandwidth by using more account fields Another way to increase our PSWF bandwidth is to increase the segment size that a network layer can handle. If we double the size of our segments, we double the bandwidth of our protocol. Fields in airmiles accounts usually have length limits. For example, you might not be allowed to set a name longer than 20 characters. However, we can maximise our bandwidth by: Using the full length of the field Spreading out a segment across multiple fields Suppose we have control over 5 fields that can each store 20 characters. Instead of using one field to transmit segments of 20 characters, we can split a 100 character segment into 5 chunks of 20 and update them all at once in a single request. The receiver can then read all 5 fields, again in a single request, and stitch them back together to reconstruct the full segment. Further enhancements HTTP CONNECT It would be better if PySkyWiFi used HTTP CONNECT requests to set up the tunnel from the sky proxy to the target site, instead of manually tossing around HTTP requests. CONNECT requests are how most HTTP proxies work, and using them would allow PySkyWiFi to act as the system-level proxy and so handle requests from a web browser. It would also mean that PySkyWiFi would negotiate TLS connections with the target website directly, so its traffic would be encrypted as it passed through the airmiles account. On the other hand, using CONNECT would also be a lot more work and I’ve already taken this joke way too far. In conclusion When I was done with all of this I used PySkyWiFi to load the homepage of my blog using curl, tunneling the data via a GitHub Gist. Several minutes later I got a response back. I scrolled around the HTML and reflected that this had been both the most and least productive flight of my life. (PySkyWiFi source code here)",
    "author": "",
    "published": "Tue, 09 Jul 2024 00:00:00 +0000",
    "image": "",
    "source": "https://robertheaton.com/feed.xml",
    "categories": null
  },
  {
    "id": "937cd2b9-575d-4640-9df2-8fbd49e35bf9",
    "title": "I've written a book about being a dad; now I want to get it published",
    "link": "https://robertheaton.com/book-draft-finished/",
    "description": "For the last eighteen months I’ve been writing a book about being a dad. Two weeks ago I finished the first draft! The book is inspired by my blog posts about parenting, but most of it is brand new and I think it might be very good. It’s about childbirth, covid, careers, old friends, new friends, kid friends, chess, pianos, screens, AI, marriage, and much more. Now that I’ve finished a draft I’m looking for an agent and a publisher. I’ve never done this before so I’d appreciate help and advice! Please get in touch if: You’ve published a book or know someone who has You are a literary agent or you know someone who is You’d be up for giving feedback on a first draft You have some words of encouragement You have any thoughts or ideas of any sort about anything If you want to find out when the book is ready, subscribe to my newsletter. If you have friends who you think would enjoy the book, tell them about it and make them subscribe too. Thanks!",
    "author": "",
    "published": "Mon, 25 Mar 2024 00:00:00 +0000",
    "image": "",
    "source": "https://robertheaton.com/feed.xml",
    "categories": null
  },
  {
    "id": "ac3c7ac2-2b9f-43cc-b45e-b31465865b32",
    "title": "Thousands of elderly twins assure me that my kids will be alright",
    "link": "https://robertheaton.com/twins/",
    "description": "I know that time spent with my kids is supposed to be its own reward, and it is. But I also want to believe that what I do in this time matters, as much as possible. Elegantly handling a tantrum feels more worthwhile if I’m helping my son learn to express his feelings, not just making it through another day. I find more contentment at the end of a long afternoon if I think that I did a good job and that this good job will echo through the ages, or at least after bedtime. I want my kids to be happy and fulfilled, skilled and accomplished, and I want to be able to help. Shouldn’t I try to pass my good habits onto them while shielding them from my dark thoughts? This shouldn’t be too hard; I’m their dad, they see me every day. My eldest child, Oscar, is only 4, but I already think he might be a little remarkable, and thick black lines seem to lead back to what Gaby (my wife) and I do with him. The spark and smarts are his, but I feel like I must surely be making a difference. However, I recently read “Selfish Reasons To Have More Kids” by Bryan Caplan, an economist and blogger, and it’s turned me a little upside-down. Caplan observes that many parents wreck themselves trying to boost and polish their children. He argues that this isn’t just a bad tradeoff, but an almost total waste of time. He presents reams of remarkable research suggesting that, in Western middle-class families, parents’ choices have almost no influence on their children’s long-term health, intelligence, happiness, success, or character. Parents achieve nothing by sending their kids to extra maths lessons, hiding the TV remote, or even teaching them the value of hard work. Caplan shows that upbringing counts for almost nil (at least within the Western middle-class), and that genetics and randomness are everything. It appears that nothing within parental control matters. Caplan presents his arguments as a gift, one that frees parents from eighteen years of guilt and wasted effort. In his telling there’s little that parents can do to influence their children in the long-run, so there’s no point and no duty for them to try. Kids have genes and free will; now let go and enjoy your time together. Caplan knows that some parents will rebel against his arguments. I certainly did. I heard him telling me that I don’t matter, at least not in the ways that I’d hoped. I want parenting to be a deep, complex vocation, and I want to spend the coming decades playing a domestic game of skill and consequence. The idea of having children who I have no influence over is scary, like living with werewolves. Randomness and outside forces are everywhere and the kids are mutating while I sleep. But even though I want to be relevant, I don’t want to waste my time. Begrudgingly, I kept reading. What’s the evidence? Caplan’s claim that parents have little long-term influence on their children seems absurd at first. Contra Caplan, I see my influence in my children every day. Oscar likes the same music as me. He used to be terrified of playgrounds but Gaby screwed a wooden ladder to his bedroom wall and now he’s mostly normal. I stubbed my toe and shouted “fuck!” and he whispered “fuck indeed daddy, you sound frustrated,” failing to calm me in the same way that I fail to calm him. This is surely common sense. But common sense grows in unscientific environments. Nature and nurture are conflated, we don’t see the aggregates, and we don’t see the long-term. Kaplan agrees that parents have huge influence over their children in the short-term, but he also argues that this influence fades, sometimes fast, sometimes slow, but it does fade, and it vanishes completely when they grow up and finish becoming whoever they are. Kids are resilient to setbacks, but they’re resilient to assistance too. In order to rigorously test theories like this, researchers study large groups of children. However, most kids are useless to them. Suppose that two happy parents have and raise a child. The child grows up with their parents, and in time they become a happy adult too. It’s impossible to know whether the child’s happiness comes from happy genes that they inherited from their happy parents, or from the happy environment that their happy parents raised them in. Their parents’ genes and choices are irreversibly mixed together. Even with a huge database of children, parents, and measurements of happiness, causalities are impossible to itemise. Fortunately, researchers can still extract good data from special children, like identical twins who were separated at birth. These kids give researchers two copies of the same genes, raised in different environments. Since separated identical twins share genes but not environments, any systematic differences between them must be due to their different upbringings. If identical twins raised separately bear no resemblance to each other but are similar to their adopted siblings, this would suggest that the twins were shaped by their divergent upbringings. If the twins remain similar, despite growing up entirely separately, this would suggest that they were made by their identical genes. Researchers slice and measure these children, pulling apart the effects of nature and nurture. Twins separated at birth are the gold standard, but non-twin adoptees and non-adopted twins can work too. The researchers find or build databases of useful children (who may now be adults), and compare their grades (perhaps from school records), income (perhaps from tax records) or personalities (perhaps from administering personality tests directly). The evidence from this data is strong and consistent: a near-zero effect of upbringing on character, happiness, and almost everything else. Should I pay attention to the evidence? The studies are clever, but are they valid? They control naturally for almost everything, but they still aren’t perfect. For example, maybe parents who choose to adopt are meaningfully different to the average parent, meaning that conclusions based solely on them don’t generalise to the rest of the population. Maybe parents who choose to adopt and then also agree to be part of a long-term study are even more different. Maybe women who have twins are different. Maybe twins themselves are different too. But even if these sampling biases are material, I doubt that they’re large enough to tear down the studies’ broad conclusions. I’d guess that adoptees and twins separated at birth are a good enough sample to represent humanity, and that even if they aren’t fully representative, they probably aren’t masking a giant effect that skips twins and applies only to the rest of us. If researchers were able to fully control for sampling biases then this might shift their estimate of the effect of parental influence from “incredibly low” to merely “very, very low”. Caplan admits that the studies are primarily focussed on the Western middle class, because that’s where the data is. This hurts the studies’ generalisability but binds me - an orthodox member of their class - even tighter. All said, I think I have to assume that the studies pointing towards the primacy of genes are valid for people like me. But do the studies definitely apply to me, or you, specifically? They find no effect of parenting style on children’s adult outcomes, within the range of normal parenting styles in middle-class Western families. That word “normal” might provide an opening for a determined parent to squeeze through in order to regain their lost gravity. The studies suggest that there’s no difference between the free-range and regimented ends of the normal spectrum, but they can’t say anything definite about what happens beyond the edges of normality. Caplan recommends that parents dissolve their fears and ambitions in the acid balm of the evidence. But there is another response that’s consistent with the data, although it might not necessarily be a good idea: redouble your efforts and head for the ambiguity beyond the well-studied centre, where the evidence might not stretch. More enrichment, more practice, more effort, fewer half-measures. This makes some common sense; think about outlandish famous families. The Williams sisters must be naturally gifted tennis players, but they surely wouldn’t be the same dominant champions without their obsessive dad. The Polgar sisters would have been unremarkable chess players without theirs. These types of childhoods are so rare that they can’t possibly be adequately represented in any of the twin datasets, so the research doesn’t have anything direct to say about them. Twin studies don’t disprove the Jackson Five. Caplan claims that kids are elastic, and that whether helped or harmed they tend to snap back to their natural state. However, I learned in physics classes that not even elastic is perfectly elastic. It pings back to its original shape after mild deformation, but it can still be altered permanently if stretched beyond a point called its elastic limit. Whilst the sum of small interventions on a child might be zero, it might still be possible to permanently deform them (in a good way) through the application of massive force. This metaphor is so perfect that it must surely be true. In fact, even Caplan is stretching his own kids like this. In a 2015 blog post (the book was written in 2011), he describes the rigorous homeschool that he runs for his two eldest (twins, coincidentally). The main reason he homeschools them, he says, is because they are particularly academic kids, and they all think that they will enjoy an uncompromising homeschool more than a conventional one. However, he also suspects that his homeschool might be so off-the-scale remarkable that it vaults over the evidence and produces better adult outcomes, despite his claims that this is usually impossible. He writes: I suspect – though I’m far from sure – that the Caplan Family School is such an exceptional experience that ordinary twin and adoption evidence isn’t relevant.  For example, my sons are plausibly the only 12-year-olds in the nation taking a college class in labor economics. Should you or I try to do this too? It’s almost always delusional to put yourself and your children in a category called “exceptional”, and this might not even be a category that you want to be in. I do wonder, though, where does “normal” end and “exceptional” begin? Where’s the elastic limit, and how weird is it really? Is anything less than the Williams sisters a waste of time? Or does the curve bend much sooner than that? Even if you don’t want to do anything too odd by modern standards, a lot of the data in these studies comes from dead twins brought up decades ago. Today’s parenting zeitgeist might not necessarily be better than the old days, but it’s certainly different. How well does data from a different era in parenting generalise to today? Is it possible that even normal parenting today is different enough from several decades ago to have a material impact? Is reading a respected parenting manual and teaching your toddler to add and multiply too normal and futile, or just crazy enough that it might work? I don’t want to be Richard Williams and I couldn’t even be Bryan Caplan, but I could be a bit weirder than average if that was worthwhile and harmless. I might be inventing straws to clutch at, but as far as I know there’s no cast iron science out here so we’re allowed to make things up again and I can assert a world in which I have agency. What should I do now? I’ve drilled a tenuous airhole in Caplan’s claims, but his evidence is still strong, spiky, and hard to digest without a rupture in my plans. Normally when confronted with new evidence you can wisely say “it’s probably a combination of everything” and then maybe do a bit more or less of something, or not. However, Caplan argues specifically that parenting is not a combination of everything. Everything is nature, at least in the long-term. His arguments are backed by simple and compelling studies that are hard to wishy-wash away and that block the easy path back to the status quo. But it’s drastic to change how you raise your kids based on a short book and some studies that you aren’t going to read. The book’s claims are extreme, at least compared to what I used to think, and it’s hard to build enough confidence to change your mind about things that matter to you. I rarely need to develop solid beliefs about messy, unsettled topics that I’m not an expert in. I’ve skimmed a few paper abstracts and some reviews of the book, but that doesn’t feel like enough. Caplan seems smart and honest but this isn’t settled science and how do I know he’s not missing or ignoring grave methodological gaffes? I can’t unread the book, and as someone who likes to consider themselves a somewhat scientific, data-driven parent, I can’t ignore it. So what should I do now? I think I value my children for who they are already, but it’s good to be reminded to start there. I don’t care whether I have any long-term influence on my friends, I just like spending time with them and being there if they need me. So why do I care about being able to shape my kids? The desire to help your children is surely natural and normal, to a degree, but that doesn’t mean it’s always helpful. Caplan says that I can stop worrying about whether I’m wrecking Oscar’s future habits and character. I try not to fret like this, but often it’s unavoidable. Does he play by himself enough? Does he watch too much TV? Are we letting him be too picky with his food? Should we use more discipline when he won’t share? Less discipline? I extrapolate today’s small behavioural decisions ten years forward into a bleak future. I fear that parenting is a system of positive feedback loops, where deviations become liberties that congeal into nightmares. But Caplan says that everything is fluid and reverts to the mean and I shouldn’t sweat the deviations. Bribe kids to behave, give them unlimited social media time, none of it matters, they’re much less of a blank slate than you think. Nothing will come back to bite you, and if you do get bitten then there was nothing you could have done to stop it. Still, I’m not ready to stop trying to help my kids flourish. I’m not confident enough that Caplan’s evidence applies to my family and my era, and in any case at the moment I don’t have to make any tradeoffs. Oscar and I do a lot that I’d previously assumed would benefit him in the longterm: maths, reading, piano. For now he enjoys nearly all of it and so do I, so nothing is being sacrificed. I’m sure that this will change as he gets older, but at the moment it’s more fun for me to talk to Oscar about multiplication and prime numbers than pretend to order another pasta with cheese from his play-dough restaurant. On some days he doesn’t want to do any sums and tells me to get lost. But even if I was certain that the long-term impact on his future earnings would be zero, I’d still take him to the science museum and try to remember how aeroplanes work. This sounds relaxed and balanced, but it’s easy to be sanguine when there aren’t any dilemmas. If he stops being interested in things that I think are valuable then I’m sure I’ll feel anxious, and I’ll struggle when he starts making decisions that I think are mistakes. I’ll reevaluate when I’m forced to, but for now I hope that it’s possible to both try to help your kids excel and to live with them in the moment. I wonder if these studies should change how I see the rest of the world too. I’m friends with my old physics teacher from high school. I went to his house for lunch and told him about Caplan’s book. He was horrified. “If that’s true, is there any point in me trying to be a good teacher?” he said. This had occurred to me too. If parents truly have no lasting influence on their children, how can schools, or local theatres, or any kind of small public policy intervention hope to have any? Maybe it’s even harder than I thought to make any long-term difference to anything. And how should I think about traits that have value but don’t show up in survey data? For example, I can take Oscar to piano lessons and encourage him to practice. Most adults who know how to play the piano probably had lessons when they were younger, and their parents probably pushed them at least a little. Does being able to play the piano matter, morally and cosmically, even if it has no impact on income, happiness, or anything else that can easily be measured? The harder you think and the more precise the questions, the more you need a detailed moral philosophy. It’s helpful to have thousands of elderly twins reminding me that my kids will probably be fine, whatever I do. Everything reverts to the mean, the twins murmur kindly. Don’t be too smug when things are going the way you hoped, and don’t despair when they aren’t. I’m not ready to fully accept my obsolescence yet. We’ll watch more TV but we’ll keep doing maths together. One day we’ll start to disagree, and then we’ll reassess. Caplan does throw me one bone: “parents [have] moderate influence over how much their children like them.” Even if nothing I do adds up to anything, the days will hopefully make a happy childhood. Read more of my essays about parenthood here. Plus, I’m writing a book about having kids! Subscribe to my newsletter for updates.",
    "author": "",
    "published": "Wed, 18 Oct 2023 00:00:00 +0000",
    "image": "/images/twins-cover.png",
    "source": "https://robertheaton.com/feed.xml",
    "categories": null
  },
  {
    "id": "f93a1365-84f1-49c5-98ff-513cc2582807",
    "title": "Hello Deep Learning",
    "link": "https://robertheaton.com/hello-deep-learning/",
    "description": "Introductions to deep learning are too complicated and spend too much time trying to thrill you with details and real-world applications. This makes them a frustrating place to start. You already know that deep learning is amazing and that it actually works on real problems. You know that most of the hard work in industry is in the data cleaning. You don’t want to set up a new environment, or play with parameters, or get dirty in the data. The actual first thing you want to do is to train a model, as soon as possible, and it doesn’t matter how simple it is. Once you’ve trained your own model you’d be more than happy to learn about overfitting, data cleaning, and splitting strategies as well. But first you just want to create something yourself and see it work. Hello Deep Learning is the missing introduction to deep learning. It’s a series of challenges, each of which gives you a task and a perfect, synthetic dataset and asks you to train and play with a trivial model. The challenges cover image generation, text classification, and tabular data, and each one: Runs on your laptop Trains in a few seconds Uses perfect, noiseless, synthetic data that takes seconds to generate Has absolutely no sidebars Hello Deep Learning allows you to rapidly experiment with simple models and take your first steps in a calm, kindhearted environment. It gets you ready to leap into the detail and chaos of the real-world. You can get the challenges, data generation scripts, and setup instructions on GitHub. Let me know how you get on; if they’re useful then I’ll make more! The challenges 1. Image classification Challenge Train a classifier that distinguishes between red squares and yellow circles. Your program should be able to: Train a model that can distinguish between squares and circles Use it to run a few individual predictions on specific images Display the confusion matrix Data generation The repo includes a script that generates 200 images of circles and 200 of rectangles and saves them in the data/shapes/ directory. Tips I did this using a fastai vision_learner based on the resnet18 pretrained model. I mostly copied and stitched together code snippets from chapter 2 of the fastai book 2. Text classification Challenge Train a classifier that distinguishes between text inputs of positive and negative words, for example \"happy chirpy awesome\" and \"awful terrible heinous\". Your program should be able to: Train a model that can distinguish between this type of positive and negative input Use it to run a few individual predictions on specific inputs Data generation The repo includes a script that generates 1000 text files containing positive words and 1000 containing negative words and saves them in the data/sentiment_text/ directory. Tips I did this using a fastai language_model_learner based on the AWD_LSTM pretrained model, and a fastai text_classifier_learner. I copied and stitched together code snippets from chapter 10 of the fastai book 3. Decision trees Challenge Train decision trees that reverse-engineer the rules from src/generators/random_tabular.py that were used to randomly generate a tabular dataset. Your program should be able to Train a decision tree that reverse-engineers the rules Train a random forest that reverse-engineers the rules Uses these models it to run a few individual predictions on specific inputs Calculates the RMS error on a validation set Visualises the decision tree, using (for example) the dtreeviz library Data generation The repo contains a script that generates 1 JSON file containing 10,000 data points and saves it in the data/random_tabular/data.json file.. Each data point contains: 6 features: a, b, c, d, e, and f. Each of these is a random integer between 0 and 100. 1 label: y. This label is derived deterministically from the features using simple rules contained in src/generators/random_tabular.py . Tips I did this using an sklearn DecisionTreeRegressor and RandomForestRegressor. I copied and stitched together code snippets from chapter 9 of the fastai book My solutions My solutions are in src/examples/ in the repo, although they’re not the only way to solve the challenges, and they’re almost certainly not the best way to solve them either. Get the challenges, data generation scripts, and setup instructions on GitHub. Let me know how you get on; if they’re useful then I’ll make more!",
    "author": "",
    "published": "Fri, 13 Oct 2023 00:00:00 +0000",
    "image": "/images/hello-deep-learning-cover.png",
    "source": "https://robertheaton.com/feed.xml",
    "categories": null
  },
  {
    "id": "dc6ebb81-bc4d-4991-8e92-a438875c0a84",
    "title": "How to pass a coding interview with me",
    "link": "https://robertheaton.com/interview/",
    "description": "In the last 10 years I’ve given more than 400 coding interviews. That’s the equivalent of 2 working months just watching strangers having a crack at the same few programming challenges. Some of my would-be colleagues solve the problems without incident, but others run into trouble for similar, easily-correctable reasons. I wish I could give better feedback, but because of legal and time constraints that’s not how the system works. So instead of personalised advice, I’ve written this cheat sheet containing 22 tips about how to pass a programming challenge interview with me. The tips can’t replace skill and practice, but they will help you calm your nerves, avoid silly mistakes, and showcase the best of your ability. Most of the tips are easy to implement, and put together they’ll increase the number of interviews that you pass. Before the interview 1. If you do Google the question beforehand, delete your tracks afterwards You might use Google to look up the questions that my company tends to ask before the interview. This does go against the spirit of the thing, but I’m not sure how much of a duty you have to uphold the integrity of my company’s interview process. Plenty of people do it, and I imagine that it’s usually very helpful. I do have to ding you if I notice that you’ve done it, though. If you’re doing the interview on the same computer you used to look up the question, make sure to close your tabs and delete your browser history before you start. I’ve interviewed several people who left a tab containing the leaked question open, although interestingly they all did quite poorly. 2. Set up a basic program and make sure you can run it If you’re using your own laptop, set up a basic hello-world program and make sure you can run it. Write your solution in this file. This makes sure that you don’t waste time at the start of the interview scrabbling around with a broken environment. I’ve interviewed several people who used a laptop belonging to their current company, but then realised that it was so customised that they didn’t know how to use it to write and run a basic program from scratch. They hacked around the problem by finding a simple part of their company’s codebase and editing it to answer the question. This cost them time and stress, looked bad, and surely violated their employment contract. Introduction 3. Keep your personal intro short It’s usually not a technical interviewer’s job to assess your experience and goals. I might start an interview by asking “My name is Rob, I work on this and that, what about you?” but this is just an icebreaker. Answer succinctly like “I’m Sarah, I work on the Infrastructure team at Badger corp. It’s our job to make sure that our servers are reliable, secure, and easy to manage.” I’ve had people go on for several minutes, which achieves nothing and wastes your time and energy. 4. Ask how much time you have to answer the question Ask how long you have to answer the question so that you can manage your time accordingly. I should tell you this unprompted, but sometimes I forget and interviewees forget to ask. When you get the question When you get the question I think it’s useful to have a repeatable script to check you understand what you’re being asked to do and to get any extra information that you need. I’d suggest: Restate the question, briefly Ask a clarifying question or two Ask how you’re being assessed Sketch a solution that works for at least the base case A few more details: 5. Restate the question, briefly I’ll either describe the question or send you a written version. Once you think you understand it, restate it briefly: “So the goal is to return all the triplets of numbers from the input list that add up to 0. Does that sound right?” This allows the interviewer to correct you if you’ve got the wrong idea, and probably helps start to establish a little rapport. I admit that it’s possible I only approve of rephrasing the question like this because it shows that you’ve read the same books saying that it’s a good habit as I have. 6. Ask a clarifying question or two Once you understand the problem, try to ask a clarifying question or two. This gives you an air of thoughtfulness and might even help you answer the question as well. Two off-the-shelf options are: “Can I assume that the input will be valid?” “What’s the largest input size that we can expect?” 7. Ask how you’re being assessed The goal of any coding interview is to write good code at a decent pace, but the details can vary. How far are you supposed to get? Some interviews have multiple parts, and some deliberately have more parts than anyone could reasonably finish in the time allowed. Ask how far you’re expected to get so that you can plan ahead. Is the interviewer looking for efficient code, clean code, or both? Some interviewers are looking for efficient code; some are looking for clean code. Most are probably looking for a bit of both. Ask them what they care about so that you can focus on the right things. Should you write tests? Simple unit tests will help you answer most questions (see below), but some interviewers might not want them, or some questions might not be easily testable (eg. those that use external dependencies like HTTP requests). You might as well clarify. 8. Sketch a solution that works for at least the base case Start by drafting your program using prose or pseudocode. Don’t start by writing actual code; even if you know that step 1 will be to read an input file, only read it once you know roughly what you’re going to do afterwards. This will probably help you get your own head in order, and will also allow a benevolent interviewer to correct any big misconceptions early, or at least know where they’ve come from. The more you say and do, the more partial credit an interviewer can give you if your code doesn’t fully work. Debugging 9. Run your code frequently Once you’ve started writing code, run it as frequently as you can. Some people start interviews by coding for 30 minutes, then execute their program for the first time with 15 minutes to go, then spend those 15 minutes drowning in bugs and faulty assumptions only now revealed. To avoid this, run your program often. Print the latest state and make sure it looks about right. If you code for 40 minutes straight, then run your code once and it works first time, that’s fine, you still pass. But running your code often gives you insurance when things go wrong. It makes it easier to give you partial credit for partial correctness, and probably helps you iterate and solve the problem faster too. 10. Use hypotheses to debug Your code won’t actually work first time. When it fails, try to state specific hypotheses about why. Try saying things like: “My hypothesis is that I’m not filtering the list correctly. To check this I’m going to print the contents of the list after my filter, and in theory it should have 5 elements. Oh actually it does have 5 elements, so the filter can’t be the problem here. In that case the problem must come after this line. The part of the code I’m least confident in is this bit, so I’m going to add some more print statements. Now…” Hypotheses make your debugging methodical and easier to follow. They’re useful in real life too, but it’s harder to have good habits when no one’s watching. 11. Common trivial mistakes People often get derailed by the same trivial mistakes. Three of the most common ones: Forgetting to save files so that they keep running the old version of their code Trying to read an input file from the wrong location, often by getting relative paths wrong. If in doubt, use the full absolute path to the file (eg. /Users/rob/interview/data/input.csv instead of ../data/input.csv). This is inelegant but forgivable and harder to mess up. Getting confused about whether a method mutates its input or returns a new output. Here’s the difference: # ---- MUTATING ---- # CORRECT # sort() sorts the list by mutating it in-place inp1 = [3,7,1,8] inp1.sort() print(inp1) # =\u003e [1,3,7,8] # WRONG # sort() doesn't return anything, so using its return value is pointless inp2 = [3,7,1,8] out2 = inp2.sort() print(out2) # =\u003e None # ---- NON-MUTATING ---- # CORRECT # sorted() sorts the list by returning a new list, so we have to use its # return value inp3 = [4,8,2,9] out3 = sorted(inp3) print(out3) # =\u003e [2,4,8,9] # WRONG # sorted() doesn't mutate the input list, so using the same input variable # will not do what you want inp4 = [4,8,2,9] sorted(inp4) print(inp4) # =\u003e [4,8,2,9] 12. Consider asking for help This is a last resort, but if you’re completely out of ideas then you can ask for help. I’ll give you a nudge anyway once this looks like the only way forward, but if you already know you’re stuck then you might as well say so now and save a minute or two. Asking for help doesn’t mean that you’ve failed unrecoverably. You might have done a good job of debugging. I might forget that it happened. You can use the time you saved to impress me elsewhere. Talking 13. Don’t badmouth languages, libraries, or anything really Some people blame their extremely popular tools when they make mistakes, presumably trying and failing to save face. They say “oh JavaScript, why do you have to do things like that?” or “that’s just one of the many things I dislike about the Ruby standard libraries.” It’s possible that they’re right, but they sound like a whiny buffoon. 14. Talk as much as you reasonably can Describe what you’re thinking and doing as much as possible. This helps me understand your work and to give you credit for your thought process, even when you make mistakes. If you solve the question perfectly without saying a word then you still pass, but running commentary gives you insurance in case things go wrong, and often helps you work better too. Writing the code 15. Don’t define lots of functions or classes unless you’re very certain it’s a good idea Functions, classes, and other forms of abstraction impose structure onto a program. If you’ve understood the true nature of the problem you’re solving then abstraction can make your code terser, more readable, and more maintainable. But if you’ve misunderstood the problem then abstraction can impose the wrong structure, forcing the rest of your code to contort awkwardly around it. If you’re not absolutely certain that a block of code should be pulled into a method or class, leave it as it is with a TODO comment saying something like TODO: probably extract this into a method. This shows that you’re thinking about structure and abstraction, without committing you to anything. “Don’t abstract too soon” is good advice for the real world, but it’s particularly important in an interview. The costs of choosing an incorrect abstraction are higher than normal, since you don’t have time to iterate. Even worse, you’re more likely than normal to choose the wrong approach, since you’ve only been thinking about the problem for a few minutes. Even worse than that, good programmers disagree about the right abstractions. Your useful logic boundary might be my unnecessary complexity. I might query your decisions during the interview, giving you a chance to explain them, but I might not. Even if I do, I might disagree with your justifications, and I might be completely wrong to do so. I started giving interviews to senior candidates after only 3 years of professional experience. I’m sure I roasted good engineers for bad reasons, and I’m sure I still do so today. If you avoid abstractions then you avoid disagreements where you can only ever lose, even if you’re right. By contrast, it’s hard to disagree with “I’d probably turn this into a function later once I’d finished the rest of the program.” Unfortunately abstraction feels fancy, and many interviewees can’t resist looking clever. Too often they instead end up with a ball of overloaded mud which slows their progress, achieves nothing, and looks ugly. You should be quick to note where an abstraction might be appropriate, but slow to implement it. 16. Use TODOs Start by getting your solution working for the base case, since this is probably the main thing you’re being judged on. Most secondary problems you encounter along the way would be better solved later, including validation, error-handling, edge-cases, and cosmetic tidyups. Don’t bother with them for now, and instead write comments describing the work still to be done, for example TODO: don't hardcode this value. Once you’ve solved the base case you can sweep back through your TODOs. You can delete the ones that have become irrelevant, and polish off the ones that still apply. By this point you’ll have 15 minutes extra understanding of the problem, and might make better decisions. If you don’t have time to address them all then you’ve still shown that you know what should be done, netting you at least partial credit. Some examples: TODO: handle empty input TODO: validate that all numbers in list are positive TODO: better variable name TODO: factor out this logic with previous block TODO: handle exceptions TODO: tidyup TODO: don't hardcode this value Testing 17. Write tests Write basic tests to help you check your code. Your program should print something like Pass,Pass,Pass if the tests pass and Pass,Pass,Fail if one of them doesn’t. # Good $ python3 interview_good.py Pass Pass Fail - expected: [3,9,2], got: [3,9,3] Don’t print the return value of your program and verify it manually (eg. [1,4,5] followed by “oh yep that looks about right”). Eyeballing is easy to get wrong, especially when you have multiple test cases. # Bad $ python interview_bad.py [1,4,5] [2] [3,9,3] 18. Don’t use a testing framework unless you’re required to, or you’re very confident with it Testing frameworks are good for producing maintainable, modular tests, but they require setup and configuration that can be easy to get wrong and time-consuming to get right. In an interview all you need is a simple way to make sure your little program is behaving correctly. This can be easily accomplished with simple code like: actual1 = my_function([1,3,5]) expected1 = [2,4,6] if actual1 == expected1: print(\"Pass\") else: print(f\"Fail - expected: {expected1}, got: {actual1}\") You could package this up into a simple assert_equal method, but I wouldn’t bother. A little repetition is fine. You can even say “in real life I’d use pytest” if you feel awkward about it. If you truly are comfortable enough with a particular testing framework to use it in an interview then go ahead. Write an example test for your hello-world program from tip 2 and make sure you can run it ahead of time. 19. If a test passes, print pass If you do use your own basic testing framework, print something showing when a test passes. If you instead continue silently, then if your program is correct it will run and exit without outputting anything. However, this could also happen if your program exits early for some erroneous reason. Does the following definitely mean your code works? $ python3 interview_bad.py $ Printing pass when a test passes means that you know your program ran properly. This output definitely means your code works: $ python3 interview_good.py Pass Pass Pass $ 20. If all your tests pass first time, try to make them fail If all your tests pass first time, it’s more likely that your testing setup is broken than you’re a genius. Add a bug into your code and make sure that some tests fail. If they don’t, something is wrong with your tests, as well as - probably - your code. 21. Don’t do full TDD unless you actually find it helpful TDD (test-driven development) is the practice of writing tests first, then writing code that passes these tests afterwards. Some swear by it; I find it laborious and unhelpful. In my experience, when someone attempts full TDD in an interview it usually takes a lot of extra time for little benefit. If you truly prefer to work this way then go for it, but don’t do it to impress me. If you haven’t heard of TDD before then don’t worry and don’t learn about it, at least for this interview. 22. Keep your tests Some people write a single test case and modify it when they want to check a different input. This means that they have no way to validate all of the other inputs that they’ve tried in one execution. This invites bugs and regressions, and makes it hard for either of us to tell if their program works for all cases or just the last one they checked. Don’t modify your test cases; write a new test for each input so that you can run them all at once. This is how to pass an interview with me. Write clean code, save your energy for what matters, and put on a bit of a performance to make sure I notice your good parts. Other interviewers will have their own views. Different companies look for different things, and even different people within the same company look for different things, despite leadership’s efforts to standardise on a consistent rubric. But even though other people might have different priorities and interviews are half-charade, I still think that the tips in this post are universally good habits that will help you pass more of them. Good luck, and let me know how you get on!",
    "author": "",
    "published": "Wed, 30 Aug 2023 00:00:00 +0000",
    "image": "/images/interview.png",
    "source": "https://robertheaton.com/feed.xml",
    "categories": null
  },
  {
    "id": "36b907ae-b76e-4bd9-9f79-758de24ae9c1",
    "title": "I thought I knew what I was doing this time: how our second son was born",
    "link": "https://robertheaton.com/second-son/",
    "description": "This is part 17 of a series about my experiences being a parent. Read the rest here. Gaby, my wife, a few weeks before the birth: Before Oscar was born, I was entirely excited that we were going to have a child. I liked my life, but it was a good time to change everything. My job was fine, but I wasn’t worried about putting it on hold or even losing it. We were about to move to London, so my social circle, hobbies, and routines were going to get warped anyway. I’d have to rebuild, with or without a baby. But my new life with Oscar is perfect as it is, and so this time I feel like I have more to lose. My love for Oscar feels so supreme that I struggle to believe I could experience the same thing with another person, even though I’m sure I will. I can’t imagine how I’ll feel about our new child, even though I already have one and I know exactly how much I love him. The baby is due soon. I’d planned a lovely day out with Oscar and Rob, one of the last with just the three of us. Then the Queen died. The theatre closed as a mark of respect, the fire station canceled its open day, the community fair shut down. I cried. They didn’t need to do that, she didn’t need that much reverence, I wanted one more day out with my little boy. I told Oscar that the queen had canceled everything and we went to the playground, like always. The next day he said “let’s pretend to be the queen and cancel things!” Rob tried to go for a walk but Oscar stood in front of the door and canceled it. There was something thrilling about giving birth to Oscar, despite the pain. I don’t get many chances for that kind of acute, exquisite experience. I had time for drugs, and I felt safe and in control. I saw labour as a test of endurance that I could win, which I did. I didn’t mind being a sleepless new mum. I had four months off work and I enjoyed being at home with my new baby. I gained a new identity instead of losing one. Oscar’s birth was exhilarating, but now I think I got lucky. I’d read some birth stories, but back then I didn’t know many women who’d had children themselves. Now every mum I meet has a story, and so do all of their friends, and many are horrendous. Septic shock for mum and baby. Days in the NICU. Thirty-six hours of labour, then a C-section anyway. Anthologies of disasters from a random sample of women, just like me, in the same place and time. I know more about what happens during a birth, so I know more about what could go wrong. I wonder if my shallow confidence helped make Oscar’s birth simple. Maybe, in some tiny way, but optimism doesn’t protect against sepsis. The part of Oscar’s birth that did rock me was the recovery. I knew that birth would be painful, but I’d never had to recover from any physical trauma worse than a broken leg, and I couldn’t imagine weeks or months of not being able to get out of bed. After Oscar was born I struggled for a long time. When he was twelve weeks old I was able to go for one last, slow bike ride round San Francisco, just before we left forever, and even that was uncomfortable. And it could have been much worse. It was summer, Rob had time off work, our families came to visit, my wounds healed. If this recovery is similar then I’ll be trapped inside for months, in winter, unable to play properly with Oscar, reliant on Rob for everything. We’ve been thinking of getting a car to help me get around and take Oscar out on my own, but I haven’t got round to taking the UK driving test, and it’s too late now. But bodies are strong, I’ll make a comeback eventually, probably. Last night I said that I had a headache and Oscar brought me an empty packet of ibuprofen. I appreciated the gesture even though I shouldn’t have left it where he could reach it. He sang a song he’d made up called “you can’t imagine how nice it is to be a bear” while I snuggled him to sleep. “I love you so much,” I said. “Me too,” he said, “I super duper superstar love you always”. I’m cautious and a little melancholy but I really am happy to be doing this again. Back to me: I met up with a child-curious friend when Gaby was six months pregnant. He asked what life was like with a child and whether I was nervous about a second. “You do have a lot less time for yourself when you have kids,” I said. “Although we’re at the pub now so I suppose it can’t always be that bad.” I hadn’t thought in much detail about the implications of another baby. They’re hard to imagine, and by this point they didn’t matter, we were all out of decisions. We’d find and reallocate time and energy, just like everyone else. We’d done well for parental leave; Gaby would be off for a year and I’d finagled seven months, part paid, part unpaid. I took an extra month off before the due date, liquidating a vacation account accumulated during a cautious year. I handed off my projects and set a frank email auto-response: “Thanks for your email. I’m not going to read it, so if it’s important then please send it again next year.” During this month Oscar and I started piano lessons, and I failed to teach him to ride a bike. I worked on hobby projects, including writing my own Game Boy emulator to let me play Pokemon on my computer, and an open source intelligence tool to work out when an audio recording was taken. Each day was slow and quiet and possibly the last of its kind. I moved Oscar from Gaby’s bed, where he’d slept for the last three years, into mine. The baby would sleep with Gaby, and if Oscar did too then the baby might keep him up or he might roll over and crush it. I filled our box room with two beds, one for me and one for Oscar, since I can’t sleep near other people. This left just enough room for a chest of drawers and the door to swing open. Oscar still sometimes wakes up during the night. He snuffles from his bed to mine, puts his hands on my face, and sacks out again. I give him a few minutes, then go to the toilet and switch to the other bed. One night I forgot how many times we’d done this disco and sat on his head. If it’s before 5am then I can usually get back to sleep, but sometimes I’m up for the day at 2am. I should probably try to move him into his own room, but I like taking care of him at midnight, when he’s at his softest. I’m happy to have more snuggles before I blink and we’re on handshakes and back slaps. Moving him would be yet another project, and I no longer think that sharing a bed with your three-year old is a failure if it more or less works for you. I took Oscar to a new playground. He climbed into a wooden house, big enough for four or five kids, and set up a shop. I pretended to buy things through the window. Three children came over, about two years older than Oscar, and started shouting at him. He’d been in the house for too long, he couldn’t play with them, he had to leave. Oscar ran out and started shouting back that no, he was allowed to be in the house, and they had to leave. I was used to kids not sharing, but this was full bullying, which I hadn’t seen for a long time. I’d forgotten the desolation of being told “you can’t play with us”. Oscar and the invaders kept yelling at each other. I wondered if I should protect him somehow, but I wasn’t sure what type of counterstrike was appropriate, or whether a playground is like a nature documentary, where you have to detach yourself and let the jungle decide. I held Oscar’s hand and asked if he wanted to go somewhere else. He insisted that he didn’t, but eventually he lost the war of words and crumpled to the colourful tarmac. He got up and buried his face in my chest and said that the children were making him feel sad. I carried him off and we ate an apple. The children moved on and we returned to our shop. Later one of them came back and said that his friends had left, could he play with us? Oscar said that he could, magnanimous in victory. When we got home he wanted to talk about what had happened, over and over. Next time I think I’ll just lead him away immediately. He’ll have to stand up for himself one day, but as long as he’s three years old, against a gang of older kids who he’ll never see again, I think it’s fine for his dad to ride shotgun. We were at 41 weeks. But it had been a routine Wednesday, it couldn’t be today. It was 3:30pm and we were getting ready to go for a walk through the common for a pizza. We’d pick up Oscar from nursery and catch the bus home. Gaby found it hard to reach her feet, so I was tying up her shoelaces. She put a hand on my head. “I’m not having contractions, but every minute or so I do feel like I’m gently splitting in half for a second,” she said. She dithered. “It’s probably nothing, I’m hungry, let’s go.” She went to the toilet. “Although my underwear looks quite pink,” she said, “and shit - I haven’t felt the baby kick for ages.” She called the hospital and they said to come in now. We don’t have a car so I called an Uber. It took ten minutes to come; Gaby kept asking how far away it was and I felt like a failure every time I answered. I don’t panic in stressful situations, but I do get serious and verbose, which Gaby finds just as distressing. “The taxi is approximately 7 minutes away and appears to be moving at a constant speed, I’ll update you when I have new information.” Still no kicks. These didn’t feel like contractions as Gaby remembered them. Contractions are usually in your belly, back, or bum. They start small and far apart and get bigger and closer as labour progresses. Gaby’s cervix felt like it was being gently prised apart for two seconds every two minutes, which the internet doesn’t discuss. Still no kicks. I called my parents and said that we weren’t exactly sure what was happening but could they pick Oscar up from nursery. They wished us good luck. I was worried that the Uber driver might refuse to take us, in case Gaby started leaking or even gave birth in his car. I thought about setting our destination to a few streets away from the hospital to disguise our destination, but under pressure I forgot. Fortunately the driver was kind, and in any case we were probably inside his car before he realised. He drove quickly and carefully and told us about his own kids. I tried to secrete gravitas and levity. Halfway to the hospital Gaby’s cervix quietened down, and she started grumbling that this was probably all nothing. I still thought that she was in labour. We agreed that either way we should get the baby looked at. I reflected on how lucky we’d been that we hadn’t left the house thirty minutes earlier like we’d planned, otherwise we’d have been in the middle of a forest. An ambulance might have been able to squeeze through, depending on which route we’d taken, but I’d have still felt unbelievably stupid. I couldn’t believe we’d been so nonchalant; due dates are only estimates, but they do mean that you’re about to have a baby. I knew that labour can be sudden. My friend had given birth in a 4-wheel drive in a hospital carpark, but yesterday I’d gone to look round a piano showroom a forty minute train ride away, at Gaby’s suggestion. While I was out Gaby went shopping and had to pause every few minutes to grunt and tell strangers that she was fine, these weren’t contractions, just a pinched nerve. We arrived at the hospital. Gaby griped to the woman at the front desk that nothing was happening but we were here now so might as well get checked out. We walked up a flight of stairs to the maternity ward, and in that minute the baby moved fast. By the time we lurched into the waiting room Gaby was in acute pain, definitely about to give birth. The receptionist was calmer than I expected. I suppose her waiting room is always full of women in acute pain and about to give birth, and she can’t spend every day in a rictus of concern. She was helpful enough and checked us in. I rubbed Gaby’s back; she asked me to stop. A student midwife came to collect us. “We’re very busy!” she said cheerfully, “Seems like everyone’s having a baby today!” Congratulations but poor scheduling to us all. We went into the triage room. No one seemed too concerned about Gaby’s red discharge, although I should have asked directly. After some poking and waiting, two midwives led us into a labour ward where the rest of the day would take place. They asked if Gaby would like to try a birthing pool and she said sure, why not. They turned on the tap and Gaby leant against the bed moaning. Then her waters broke. I was startled, I think I’d been out of the room for this bit last time. The floor was soaked; my shoes were wet. A midwife gave me a paper pot, I wasn’t sure why and assumed that it would become important later. She saw my quizzical look, pointed at me, and mimed vomiting. The day deteriorated. Gaby had a few huffs of gas and air but it made her feel sick and she wailed for stronger meds. The midwives said that the baby was nearly out and that anything they gave her now wouldn’t kick in until it was all over. She was past the event horizon. I asked what they meant by “nearly out”. “Probably just a few more minutes,” they said. It was about 5:40; we’d arrived at the hospital at 5. Another contraction. Oscar’s birth had taken 9 hours. There’d been a storyline and a chance to settle in. Gaby had had time for pain relief, so the crescendo was lower and the build-up was slower. Gaby pushed for several hours, and we all cheered her on. It was a sublime trial, a marathon with pain but also glory. But this birth was ferocious and seemed out of control. One of the midwives scrabbled around underneath Gaby with a wand and a heart monitor, trying to check on the baby. She didn’t say anything, so I hoped that everything was OK. Gaby broke character and stopped wailing, still on all-fours. “I’m sorry, but this isn’t going to work,” she said, “I’m not going to be able to do this, you’re going to have to figure out something else.” The midwives assured her that she was so strong and that she could do it. She was going to have to. The next contraction hit and Gaby burst into silent tears, which hadn’t happened last time. I started crying too. I didn’t know what to do, nothing seemed appropriate. This was so much worse than before, I just wanted it to be over, this couldn’t be worth it. I tried to act excited and positive, which Gaby said helped. “We’re going to see our baby soon!” I said. The bed was made up of interlocking pieces of foam, and I noticed that one of the slices holding Gaby’s knees was starting to slip. I held it in place and reflected that this was surely bad design. The midwives said that they could see the baby’s head. I couldn’t see anything but said that I could too. They were either telling the truth or lying for motivation. And then his head dawned, all at once, a sudden, bloody sun. I saw the umbilical cord wrapped around his neck and I choked, but the midwives had seen it too and didn’t seem concerned. They asked Gaby to roll onto her back to push out the rest of him. She told them that there was no way she could do that; she had a head sticking out of her vagina. The midwives asked if she wanted to catch the baby herself and she said no way, absolutely not. He flopped out anyway and they caught him for us. He was a boy and his name was probably Samuel. Gaby collapsed and they gave him to her. He rooted around for a few minutes, latched, fed, and passed out. One midwife turned off the birthing pool; it had filled up to ankle height. It was a few minutes after 6. I took and sent some photos. The room had fairy lights taped to the wall, which looked hokey in person but fantastic in the pictures. Several people asked if we’d gone private. I ordered too much pizza. I put down the delivery address as “Hospital, Maternity Ward”. I took our son while the midwives dealt with Gaby’s placenta. I’d forgotten how to hold a newborn. They have no muscles and it’s important not to drop them. I slouched in a chair by the window and perched him on my belly. I was glad he was here but I didn’t feel love yet. I wasn’t worried though. I hadn’t felt much when Oscar was born and now I loved him more than anything. The plughole gurgled as unused birth water trickled away. Gaby, later: I felt in control, despite the speed and pain. Sam didn’t happen to me; I birthed him myself. I remembered what my doctor in San Francisco had screamed while I was labouring with Oscar. “Poop him out, Gaby, poop him out!” This wasn’t a metaphor, those are the muscles to use. When I pushed like that again I felt Sam edge through me. But it hurt too much, I needed a break. When the next contraction came I did nothing with it, I let it wash over me. The pain was almost the same but Sam stayed where he was; wasted agony. I plunged into the next contraction and felt him move again. And now he’s here. One midwife said goodbye while the other continued to stitch Gaby back together. Workdays on a maternity ward must have a deafening rhythm. Unreasonable pain, then pizza. Repeat until 7pm, with a lunch break. After an hour of reconstruction, Gaby asked the midwife if they could pause for a few minutes, because the stitches and prodding were painful and nonstop. The midwife realised that Gaby hadn’t had any pain relief of any sort and certainly no local anaesthetic. She shot some in and finished the repairs, then wished us good luck and left to get the next baby. I turned the lights off. The sun had gone but the fairy lights flared. We ate pizza, trading our baby to keep the cheese off his head. We called Oscar and my parents. Oscar asked why we hadn’t come home yet. We’d got the baby, what was left? I started putting a nappy on Sam, but he’d already pooed in his blanket and I’d forgotten to bring any wipes. I found a jumbo pack on a counter and rubbed him down. I noticed that my fingers were tingling, and I realised that the wipes were covered in antiseptic. I told a midwife. She said that Sam would be fine but I should stop touching things that wasn’t mine. I gingerly finished putting his nappy on and wrapped him up again. Then I realised that I’d used the same blanket that he’d pooed in, and now he had syrupy black infant crap on his head, even though he wasn’t yet two hours old and I’d thought I knew what I was doing this time. The duty midwife told us that we could go home that evening if we wanted. At first that sounded silly. Sam was so fragile, and I’d already covered him in chemicals and faeces. But he’d still be fragile tomorrow, so we said yes. The midwife filled out the paperwork and Gaby asked me to sneak into the triage room and steal some biscuits that she’d seen there a few hours ago. My dad picked us up around 10. This time round Gaby could hobble herself to the car. I carried Sam in his new, unfamiliar seat and we strapped him in as best we could. We got home, hugged my parents and went to bed. Sam was comatose the whole night but Gaby lay awake shaking. She roused him every few hours to feed. The next day we introduced Oscar to his brother. Oscar said hello but was otherwise uninterested and went about his day as normal. Gaby’s parents had given him a new cuddly lion to mark the day, and I suggested that we call it Lionel Richie. Oscar liked my idea, but got confused about which animal I was talking about. Now he has a baby brother called Sam, and a penguin called Lionel Richie. This is part 17 of a series about my experiences being a parent. Read the rest here.",
    "author": "",
    "published": "Tue, 04 Apr 2023 00:00:00 +0000",
    "image": "/images/sam.jpg",
    "source": "https://robertheaton.com/feed.xml",
    "categories": null
  },
  {
    "id": "478a73eb-1857-4d63-b761-b1c066190f38",
    "title": "Gamebert: a Game Boy emulator built by Robert",
    "link": "https://robertheaton.com/gamebert/",
    "description": "I’m a professional computer programmer, but I don’t often do all that much computer programming. Instead I spend much of my time futzing around with config files, other people’s frameworks, and other people. This makes it easy to forget how much fun it is to write a long program that truly interests you and watch it do something a little bit astonishing. I write a lot of words in my spare time, but rarely any code. However, a year or so ago my wife and toddler went to America to visit her family while I stayed at home for a staycation. I’d been enjoying work and was feeling professionally inspired, so I wanted to spend some of my holiday building something. But choosing a personal project is hard. This was going to be the freest time I’d had since my son had been born two years earlier. If I was going to spend it programming instead of being outside or playing Skyrim then I wanted to be sure that I was programming something very, very compelling. I wanted a project that protruded the right distance outside of my comfort zone. I wanted to go a bit closer to the machine than I normally get. I wanted concrete outputs that would impress both me and my friends. I wanted to know what I’d learn, how it was relevant to my other interests, and where it could lead in the future. I decided to write a Game Boy emulator: a program that would run old Game Boy games on my computer. This seemed hard but achievable, and I thought it would dazzle my friends for at least a few seconds. The internals of the Game Boy seemed well-documented enough to be accessible, but poorly-documented enough to feel like I’d be the one doing the work. I’d never made anything like it before, and I loved the idea of running Pokemon Blue and catch a Pidgey using a program I’d written myself. I called the project Gamebert because it was a Game Boy and my name is Robert. I waved goodbye to my family and went home to get started. I chose to write Gamebert in Go. I guessed that an emulator would be a resource intensive program and would benefit from a fast language, especially if, as seemed likely for a first attempt, it wasn’t written very well. I anticipated making lots of mistakes, and wanted a typechecker that would catch some of them quickly. Since I’d be simulating registers (small slots in a CPU for storing temporary data) and bytes of RAM that held a specific number of bits, I wanted to be able to specify the size of my integers and have the typechecker hold me to my choice. Representing an 8-bit register using an unsigned 8-bit integer (uint8) would handle overflows and underflows for me (i.e. making sure that 255+1 looped back round to 0), and prevent me from accidentally assigning the register an oversized number that a real 8-bit register couldn’t actually hold. I watched some talks on Gameboy architecture. The talks were clear and entertaining, but I didn’t absorb enough information to actually start anything. I continued wandering the internet in search of the right type of handrail. Lots of Reddit threads mentioned the CHIP-8, a machine similar in structure to a Game Boy but much simpler. The CHIP-8 isn’t a piece of actual physical hardware; it’s a specification for a theoretical virtual machine. Writing a CHIP-8 emulator is like writing a Game Boy emulator if Nintendo had never actually manufactured any consoles. Reddit suggested that novices cut their teeth on a CHIP-8 emulator before grinding them on a Game Boy, so I did. Writing my CHIP-8 didn’t take too long (thanks in large part to this guide), and it got me used to emulator concepts like flags (slots in a CPU that store boolean values about the last operation, such as whether the result was zero) and opcodes (numerical codes representing the different operations that a CPU can perform). I was ready to apply what I’d learned from my CHIP-8 to my Game Boy. A Game Boy has a few major components, including a CPU, an LCD, a few memory banks, a game cartridge, and a motherboard. The CPU performs the machine’s calculations, using tiny instructions like “load the byte from RAM location 1234 into register D” and “add 1 to register B”. It executes about a million of these instructions every second, which miraculously add up to a game. The LCD works out which pixels to display on the screen, which in a Game Boy is surprisingly complicated. A game cartridge contains a game’s code, written by its programmers using the Game Boy’s assembly language. Some types of cartridge offer other functionality, such as allowing the Game Boy to write data back to the cartridge to save the player’s progress. Memory banks store data about the game’s intermediate state as it executes, such as “how much life does this Charmander have left?” and “which room is the player in?” All of these components plug into a motherboard, which they use to communicate with each other. For example, the CPU can write data to memory banks, and the LCD can read this data in order to work out what to display to the user. After a few days of reading and partially-understanding the documentation, I got Gamebert to load a game and scroll the Nintendo logo down the opening screen for the first time. This was a magical moment. I’d never built anything that could produce emergent output so far removed from the code I had written. Nowhere in my code did it say anything like “print an N, then an I, then…” I’d produced this animation by passing a bizarre series of bytes (a ROM file ripped from a Pokemon Blue game cartridge) through a program that I’s written entirely myself. This motivating milestone came relatively early in the project, after only a few days (although your own definition of early will depend on how much patience and free time you have). The day after I produced my first Nintendo logo I woke up at 5:30am and worked straight through until 8pm, which I’ve only ever done once before. But after the logo dropped, the screen went blank. No Pokemon appeared, and I didn’t understand my system well enough to be able to work out why. I’ve never written assembly code, and so I had no intuition for which behaviours looked right or wrong. I didn’t know which errors were there because I hadn’t finished, and which were because I’d made a mistake. The only way I could think of to test my emulator was to write the whole thing and hope it produced a Squirtle. I wasn’t sure if I had bugs in my CPU or my LCD, although with hindsight the answer was of course “both”. At the end of my week alone I was still stuck and nowhere near finished. My emulator continued to loop forever doing nothing and I had no idea why. I’d found test ROMs (like Blargg’s ROMs) that helped emulator developers like me validate our in-progress creations, but my program couldn’t execute them accurately enough to even produce an error message. My family and job came back. I still had an hour or two of discretionary brain time most days, but I couldn’t make much progress without stretches of at least half a day. Any understanding I had of how a Game Boy works fell out of my head. Fortunately, a year later I had another child. Before he was born I took a month of vacation that I hadn’t used during COVID. I spent this time playing with the toddler I already had, working on a new project, and picking up Gamebert again. I used my fresh eyes to fix some now-obvious bugs, although none of them made my emulator stop looping and start working. My new son was born, and after a few weeks we were settled enough that I could work on Gamebert while he slept, strapped to my chest. I was on parental leave and he slept a lot, so I had a lot of time. I looked for a new strategy. The clearest way to describe something as fiddly a Game Boy is often through code. I read other people’s emulators on Github, which sometimes felt like cheating, but then I remembered that this is my free time and there are no rules. I chose two reference projects written in different languages (Python and Rust) to the one I was using (Go). This meant that I had to translate between languages and architectures, which I think helped my comprehension, although sometimes I did still have to copy without understanding. There’s also a lot of community-written documentation, which is both amazing and kind of crummy. It’s extensive and detailed, but also near-impossible for a newcomer to parse. For example, here’s part of a description of an LCD screen from the PanDocs, the most comprehensive public Game Boy manual: After checking for sprites at X coordinate 0 the fetcher is advanced two steps. The first advancement lengthens mode 3 by 1 dot and the second advancement lengthens mode 3 by 3 dots. After each fetcher advancement there is a chance for a sprite fetch abortion to occur. I’m not criticising the people who wrote these docs. They are still invaluable and I doubt that it’s possible to make them accessible to novices without spending a year writing a book that would be lucky to sell a hundred copies. I found them especially handy when I was able to match a paragraph of prose to a line of someone else’s code and use each to understand the other. But as a warning for other newcomers having finding the docs hard going - it’s not just you. At the very least, it’s me as well. My big methodological breakthrough came when I joined the Emulator Developer Discord. The helpful denizens of the #gameboy channel pointed me to a GitHub repo of logfiles, in which a kind person with a working emulator had run Blargg’s ROMs and logged the state of their emulator after each instruction. I used these golden logs to validate my own emulator’s behaviour, even though it still wasn’t correct enough to get a sensible result from the ROM’s actual tests. I logged the output from Gamebert in the same format as the logfiles in the repo, and wrote a tool that compared my logs line-by-line against the repo’s until I found a discrepancy. This allowed me to identify the exact CPU cycle when my emulator started misbehaving. I called my tool Game Boy Doctor. I stopped aimlessly scrolling through my code and started using Game Boy Doctor to reliably pinpoint bugs. The Doctor found several errors in my CPU; faulty bit twiddles and and buggy half-carries. It couldn’t say how to fix the problems it uncovered, but the solutions were often obvious once I knew where to look. The biggest, most boneheaded mistake it revealed was that I had accidentally left a debug flag turned on. This flag told Gamebert to silently continue if it was asked to execute an opcode that I hadn’t implemented yet, instead of crashing. Since I had implemented fewer than half of its 501 opcodes, Gamebert was quickly getting into a nonsensical state. I lost days of my life to this stupid flag, and I don’t know why I even added it in the first place - you can’t expect a program to do anything useful if you skip half its instructions. Nonetheless, with Game Boy Doctor’s help I finished implementing every instruction in my CPU, and successfully ran all of Blargg’s CPU test ROMs. I published Game Boy Doctor on GitHub, and now it’s helping other people debug and fix their own emulators. Now I had momentum and understanding, and I swept through the remaining components of the project. I’d written enough of an LCD display to draw the Nintendo logo, and now I added the code to display the parts that I’d skipped over. The LCD was the most complex part of the project, and I think I just got lucky that it mostly worked first time. I tidied up my cartridge, joypad, and motherboard, but I stopped at implementing sound. You can tell yourself and your friends that your Game Boy works even if it doesn’t have sound, and by all accounts sound is quite difficult. I ran Tetris, and it sort of worked. The Tetris pieces were invisible until they landed, but I correctly guessed that this was due to a bug in how my LCD combined pixels from its different layers. I fixed the problem and ran Pokemon Blue. It worked. I caught a Pidgey, walked around for a few minutes, and stopped. Gamebert seemed stable, but I hadn’t added any functionality to save the game and it would probably crash before too long, so I didn’t want to spend much time training up a squad. I’d reached my goal. Gamebert was the best personal project I’ve ever worked on, and it’s one of the few I’ve actually finished. Despite this, it still sometimes felt absurd and pointless. Was I really spending 100 or so hours of my spare time on a shoddy replica of other people’s work instead of, say, playing with my family? This is of course an ungenerous way to talk to yourself, and is easy to attack from multiple angles. Who knows what zigzag professional paths my new knowledge might open up, and more to the point, who cares? Everyone needs time to themselves, and not everything has to have meaning or benefit beyond having some fun. If this project sounded interesting, then I wholly recommend making your own Game Boy emulator. Start with this talk, these docs, and this sub-Reddit, and let me know how it goes. Code for Gamebert Code for Game Boy Doctor",
    "author": "",
    "published": "Tue, 07 Feb 2023 00:00:00 +0000",
    "image": "/images/gamebert-cover.png",
    "source": "https://robertheaton.com/feed.xml",
    "categories": null
  },
  {
    "id": "2e38ca9d-dcf2-45d7-8228-8537ce62107f",
    "title": "How sad should I be about ChatGPT?",
    "link": "https://robertheaton.com/chatgpt/",
    "description": "A week ago my brother sent a message to our family group: “My team at work launched something! It’s called ChatGPT. Give it a go: https://chat.openai.com” I talked to ChatGPT for ten minutes and then had a crisis of meaning for a few days. I eventually texted my brother back to say well done, because family will still be important, whatever happens next. \"confused calvin and a robot in the style of calvin and hobbes\" - Stable Diffusion At first I thought this was the end of the world. ChatGPT is nowhere near an Artificial General Intelligence (AGI): an AI capable of performing most tasks that a human can. But until last week I thought that even ChatGPT’s level of abstract reasoning was impossible. It can already - to an extent - code, rhyme, correct, advise, and tell stories. How fast is it going to improve? When’s it going to stop? I know that GPT is just a pile of floating point numbers predicting the next token in an output sequence, but perhaps that’s all you need in order to be human enough. I suddenly thought that AGI was inevitable, and I’d never given this possibility much credit before. I found that it made me very unhappy. This is a post about feelings, not analysis. I texted everyone I could to warn them what was coming. I sounded like an uncritical AI futurist. But all the real futurists seemed excited, or at least frantic. I just felt glum. Our parents had got both the property boom and the last shreds of meaning. I cycled to a friend’s house to watch England play in the World Cup. I thought of Richard Feynman and how he felt after the Manhattan Project. He said that he saw people building a bridge in New York and thought that they were being absurd, that they didn’t understand. There were atomic bombs now, it was senseless to make anything. It would all be destroyed soon. As I pedalled I watched people through their office windows, composing unclear emails and editing buggy spreadsheets. I hadn’t played any part in GPT, but I felt like Feynman. Why were these people wasting their time? Didn’t they read the news? Human striving was over, this was all going to be annihilated. Just go home and wait. This was an overreaction. ChatGPT is impressive, but it’s not an AGI or even proof that AGI is possible. It makes more accessible some skills that I’ve worked hard to cultivate, such as writing clear sentences and decent programs. This is somewhat good for the world and probably somewhat bad for me, to the first degree. But I can still write and code better than GPT. On the other hand, whilst I can peacefully coexist with GPT as it currently stands, it won’t be standing there for long. Perhaps I should calm down; disruption is everywhere and necessary. Artists should be afraid of Stable Diffusion; master weavers are anxious about mechanised looms. But now machines are encroaching on things I care about and everyone needs to pay attention. Even if AGI isn’t imminent, I suspect that big ideas will become more important and their implementation will become more automated. But I don’t have big ideas. If I did then I’d be the kind of person who sees AI as an opportunity, not a threat. Recently there’s been a lot of VC money sloshing around Silicon Valley and not enough programmers. This has made it possible for the programmers who are there to do well in cash and cachet just by being competent implementers. We can even get another rung or two higher by lightly exaggerating the impact of our work during performance reviews. This has allowed me to have a type of success without much brilliance. It’s been a good deal, but it’s made me professionally complacent. Today’s system works for me, why would it ever change? I assumed there could never be another tech crash. I found AI think-pieces boring and didn’t have time or expertise for the maths. I ignored the boosters, the blowhards, and apparently the experts. Now I’d guess that AI is going to change everything, somehow or another. Luckily I’m allowed to be complacent. I don’t have to be right about the future; I’m not responsible for a company or a product that needed to see this coming. I’ve probably been fortunate enough in the old world that I’m more worried about what AI means for my chances of self-actualisation than for my stability. I think that AI will make programmers - and almost all other workers - much more productive, but what this means for the industry will depend on the size of the productivity gains. A 50% increase in output per programmer would be incredible (and perhaps even a wild overestimate), but I think it could be absorbed by something that looks like the current tech market. A 500% increase couldn’t. Some grunt work will get eaten by AI, probably at first as an augmentation to human programmers. What counts as grunt work will depend on how much GPT’s code runs in production. I don’t know where the people currently doing the digested tasks will end up. Perhaps this will be the dawn of a new golden age of software, with more companies, more jobs, and more pie. Perhaps they’ll have to find something else to do. If there is any kind of divide and cull then I assume - perhaps again complacently - that I’ll be on the right side of it, at least for now. But even if I am, will I enjoy my new job? I already regret not knowing much about operating systems. I’m not sure I can handle another layer of abstraction. Present-day GPT isn’t that much more than a personalised Stack Overflow, but what about in five years? Shit, shit, shit, what if I’ve been wrong about cryptocurrency too? Perhaps my distress isn’t even about the practical implications of AI. In the last week I’ve discovered that I care more about status than I thought. Status doesn’t have to mean razzle dazzle; I drive a pedal bike and my hoodies have holes in the elbows. But until now I’ve always felt like part of the main event. I already lost a sort of status when I left San Francisco. In London my industry isn’t the centre of attention. I miss the billboards advertising support desk software and telephony APIs. In SF when I told people that I work at Stripe they nodded approvingly. In London they ask what Stripe is. I’ve still always been in the growth sector, playing a small part in automating other people. I’m not on the cutting edge of technology; I plumb together libraries I didn’t write on top of AWS just like almost everyone else. But I’ve been on the cutting edge of industry, bolting together pipes that move billions of dollars a day. Now I feel like I might be part of a legacy system, being hauled into the future by AI. Perhaps I only care because it’s my own brother with his hands on my lapels. And what a privilege to be fussing about status on the morning of what I’m claiming might be the apocalypse. Pause; breathe. This might not even be the apocalypse. ChatGPT confidently hallucinates nonsense, and it can’t absorb enough context to do anything all that useful. The commentators focussing on these shortcomings are either missing or nailing the point; I’m not sure which. On the one hand, the models are going to get better. Lots of AI labs are working on them, and many are at least aiming for full AGI. Even if today’s obstacles are intractable, how many other intractable obstacles have been overcome in order to get this far? I know that most knowledge work is design, coordination, and maintenance, not turning well-specified paragraphs into short scripts or emails. But couldn’t the next version of GPT eat your company’s wiki and chat logs and take over operations from there? Obviously it couldn’t, because the docs are incomplete and out of date and not incentivised by human performance reviews, but you get the idea. On the other hand, maybe the impossible problems of the future really will be impossible. From the outside it’s easy to underestimate the size of a field’s remaining challenges and the degree of reliability required in order to be transformational. Five years ago self-driving cars were just around the bend; now most companies seem to be giving up. There’s presumably a hard theoretical limit on the power of Large Language Models like GPT, and I’d guess that this boundary is well short of AGI. Perhaps the next leap is still several lifetimes away, like I used to assume. On balance, taking both sides into account, I have no idea. So what should I do? I could try to get into AI myself. I’m sure I could help build some training tools. AI infrastructure will go the way of all other programming jobs, wherever that turns out to be, but at least I’d feel like I was on the inside again. I just checked and there are plenty of AI companies in London, if necessary. For now I’ll wait and see. Until last week I had vague plans to one day write books about teaching programming, maybe a novel, maybe work on some music, spend more time with the kids. I thought I had a plausible path to a highly circumscribed form of greatness. But I suspect that ChatGPT is in many ways already a better teacher than me; certainly it’s more patient and available. I don’t know how long until AI can write novels and synthwave, but it could be soon. That just leaves the kids. I might have to get comfortable with the idea that I have inherent value as a human beyond what I produce. That’s melodramatic, I’m sorry. But here’s something concrete - I do think I’m going to have to rely less on my blog for self-worth. I mostly write accessible explanations of complex technical topics, like Tor and Off-The-Record Messaging. These essays don’t require novel ideas; just time and interest and some facility with words. ChatGPT can’t yet write extended prose or explain fine details as well as me, but it will one day, plus it will answer follow-up questions. Even if it turns out that I have an inimitable stylistic flair that people appreciate and GPT can’t reproduce (a fanciful hope), I’m not interested in editing for hours and hours just for that. I’m not going to stop writing yet, but I expect to need an alternative sideline before too long. I know I have to listen to the techno-optimists as well as the techno-pessimists. Economic progress requires productivity gains, as melancholy as they can be for the people on the wrong end of them. I haven’t even considered the good things that will come of AI or the presumably invigorating work that will be required to deploy it. I find that much harder to visualise. I’m sure it will be begrudgingly magnificent. A possible rule of thumb until things become clearer: before getting too deep into a new field, consider whether you’d be OK if it became an old-fashioned hobby that you only do for yourself.",
    "author": "",
    "published": "Wed, 14 Dec 2022 00:00:00 +0000",
    "image": "/images/gpt-square.png",
    "source": "https://robertheaton.com/feed.xml",
    "categories": null
  },
  {
    "id": "dd3c69f5-2074-43c6-8e9f-ef037ce709dc",
    "title": "Gameboy Doctor: debug and fix your gameboy emulator",
    "link": "https://robertheaton.com/gameboy-doctor/",
    "description": "Are you building a Gameboy emulator? Are you stuck? Are you failing Blargg’s test ROMs and can’t work out why? Gameboy Doctor can help! (GitHub link) What is Gameboy Doctor? Gameboy Doctor is a tool that compares your emulator to an example emulator that passes Blargg’s test ROMs. It finds the exact tick where your emulator’s state diverges from the example, helping you isolate and fix your bugs. You don’t need to have implemented an LCD in order to use it, and you don’t even have to be able to successfully get any kind of pass/fail message back from Blargg! All you need is a minimally functional CPU and motherboard. Requirements Just Python3, no third-party libraries. How do I use Gameboy Doctor? 0. Clone the repo The tool is available on GitHub - clone it using git. 1. Choose a test ROM Choose a cpu_instrs individual test ROM (these are currently the only ones supported by Gameboy Doctor - see below) 2. Make 2 tweaks to your emulator You’ll need to make 2 changes to the internal workings of your emulator. They’ll probably take about 20 minutes to do, but they’ll save you hours and days of aimless debugging. The changes are: Initialize the CPU’s state to the state it should have immediately after executing the boot ROM: Register Value A 0x01 F 0xB0 (or CH-Z if managing flags individually) B 0x00 C 0x13 D 0x00 E 0xD8 H 0x01 L 0x4D SP 0xFFFE PC 0x0100 Hardcode your LCD (or your motherboard’s memory map if you haven’t implemented an LCD yet) to return 0x90 when the LY register is read (memory location 0xFF44). This is what I did when generating my example logs, because returning a constant prevent spurious log divergences. 3. Log the state of your CPU Next, update your emulator to write the state of the CPU after each operation to a logfile. Use a new line for each tick, and use the following format for each state (replace the example numbers with your CPU’s values): A:00 F:11 B:22 C:33 D:44 E:55 H:66 L:77 SP:8888 PC:9999 PCMEM:AA,BB,CC,DD All of the values between A and PC are the hex-encoded values of the corresponding registers. The final value (PCMEM) is the 4 bytes stored in the memory locations near PC (ie. the values at pc,pc+1,pc+2,pc+3). Run your emulator and get a log file. You can kill the program at any point - Gameboy Doctor will tell you if your log file is correct but ends before the test ROM has finished its assertions. If you pass the test then your emulator will display the word “Passed” on the LCD, and write the bytes for the word “Passed” to the serial output. However, you don’t need to pass or even finish the tests in order to use Gameboy Doctor. 4. Feed your logfile to Gameboy Doctor Once you have your logfile, feed it into Gameboy Doctor like so: ./gameboy-doctor /path/to/your/logfile $ROM_TYPE $ROM_NUMBER For example, to check the 3rd cpu_instrs ROM: ./gameboy-doctor /path/to/your/logfile cpu_instrs 3 On windows you may need to invoke the Python interpreter directly: python3 gameboy-doctor /path/to/your/logfile cpu_instrs 3 Gameboy Doctor will tell you how you’re doing and give suggestions on bugfixes. For example: $ ./gameboy-doctor ../my-emulator/logs/3.log cpu_instrs 3 ============== ERROR ============== Mismatch in CPU state at line 9997: MINE: A:3E F:C--- B:01 C:07 D:C9 E:BA H:49 L:BB SP:FFFE PC:0208 PCMEM:1C,20,FB,14 YOURS: A:3D F:C--- B:01 C:07 D:C9 E:BA H:49 L:BB SP:FFFE PC:0208 PCMEM:1C,20,FB,14 The CPU state before this (at line 9996) was: A:3E F:10 B:01 C:07 D:C9 E:BA H:49 L:BB SP:FFFE PC:0207 PCMEM:12,1C,20,FB The last operation executed (in between lines 9996 and 9997) was: 0x12 LD (DE) A Perhaps the problem is with this opcode, or with your interrupt handling? Eventually you’ll hopefully see: $ ./gameboy-doctor ../my-emulator/logs/3.log cpu_instrs 3 ============== SUCCESS ============== Your log file matched mine for all 1066160 lines - you passed the test ROM! Future Work Gameboy Doctor currently only supports Blargg’s cpu_instrs test ROMs because these are the most useful for initial debugging. It should be relatively easy to support other test ROMs, although small timing differences that don’t affect the successful running of the emulator may cause divergences in CPU states between otherwise well-functioning emulators. Let me know if you find Gameboy Doctor useful and I’ll work on expanding the ROMs and emulators it supports. Acknowledgements This tool was inspired by GitHub user wheremyfoodat. th { text-align: left; }",
    "author": "",
    "published": "Sat, 03 Dec 2022 00:00:00 +0000",
    "image": "/images/nintendo-upside-down.png",
    "source": "https://robertheaton.com/feed.xml",
    "categories": null
  },
  {
    "id": "b55f8eb2-e0b5-4c52-934c-84c70e2464a2",
    "title": "Webcam randomly pausing in OBS, Discord, and websites - LSVCam and TikTok Studio",
    "link": "http://feeds.hanselman.com/~/905963465/0/scotthanselman~Webcam-randomly-pausing-in-OBS-Discord-and-websites-LSVCam-and-TikTok-Studio",
    "description": "I use my webcam constantly for streaming and I'm pretty familiar with all the internals and how the camera model on Windows works. I also use OBS extensively, so I regularly use the OBS virtual camera and flow everything through Open Broadcasting Studio. For my podcast, I use Zencastr which is a web-based app that talks to the webcam via the browser APIs. For YouTubes, I'll use Riverside or StreamYard, also webapps. I've done this reliably for the last several years without any trouble. Yesterday, I started seeing the most weird thing and it was absolutely perplexing and almost destroyed the day. I started seeing regular pauses in my webcam stream but only in two instances. The webcam would pause for 10-15 seconds every 90 or so seconds when access the Webcam in a browser I would see a long pause/hang in OBS when double clicking on my Video Source (Webcam) to view its properties Micah initially said USB but my usb bus and hubs have worked reliably for years. Thought something might have changed in my El Gato capture device, but that has also been rock solid for 1/2 a decade. Then I started exploring virtual cameras and looked in the windows camera dialog under settings for a list of all virtual cameras. Interestingly, virtual cameras don't get listed under Cameras in Settings in Windows: From what I can tell, there's no user interface to list out all of your cameras - virtual or otherwise - in windows. Here's a quick PowerShell script you can run to list out anything 'connected' that also includes the string \"cam\" in your local devicesGet-CimInstance -Namespace root\\cimv2 -ClassName Win32_PnPEntity | Where-Object { $_.Name -match 'Cam' } | Select-Object Name, Manufacturer, PNPDeviceID and my outputName Manufacturer PNPDeviceID---- ------------ -----------Cam Link 4K Microsoft USB\\VID_0FD9\u0026PID_0066\u0026MI_00\\7\u00263768531A\u00260\u00260000Digital Audio Interface (2- Cam Link 4K) Microsoft SWD\\MMDEVAPI\\{0.0.1.00000000}.{AF1690B6-CA2A-4AD3-AAFD-8DDEBB83DD4A}Logitech StreamCam WinUSB Logitech USB\\VID_046D\u0026PID_0893\u0026MI_04\\7\u0026E36D0CF\u00260\u00260004Logitech StreamCam (Generic USB Audio) USB\\VID_046D\u0026PID_0893\u0026MI_02\\7\u0026E36D0CF\u00260\u00260002Logitech StreamCam Logitech USB\\VID_046D\u0026PID_0893\u0026MI_00\\7\u0026E36D0CF\u00260\u00260000Remote Desktop Camera Bus Microsoft UMB\\UMB\\1\u0026841921D\u00260\u0026RDCAMERA_BUSCam Link 4K (Generic USB Audio) USB\\VID_0FD9\u0026PID_0066\u0026MI_03\\7\u00263768531A\u00260\u00260003Windows Virtual Camera Device Microsoft SWD\\VCAMDEVAPI\\B486E21F1D4BC97087EA831093E840AD2177E046699EFBF62B27304F5CCAEF57 However, when I list out my cameras using JavaScript enumerateDevices() like this// Put variables in global scope to make them available to the browser console.async function listWebcams() { try { const devices = await navigator.mediaDevices.enumerateDevices(); const webcams = devices.filter(device =\u003e device.kind === 'videoinput'); if (webcams.length \u003e 0) { console.log(\"Connected webcams:\"); webcams.forEach((webcam, index) =\u003e { console.log(`${index + 1}. ${webcam.label || `Camera ${index + 1}`}`); }); } else { console.log(\"No webcams found.\"); } } catch (error) { console.error(\"Error accessing media devices:\", error); }}listWebcams(); I would get:Connected webcams: test.html:11 1. Logitech StreamCam (046d:0893) test.html:11 2. OBS Virtual Camera (Windows Virtual Camera) test.html:11 3. Cam Link 4K (0fd9:0066) test.html:11 4. LSVCam test.html:11 5. OBS Virtual Camera So, what, what's LSVCam? And depending on how I'd call it I'd get the pause and getUserMedia error: NotReadableError NotReadableError: Could not start video source Some apps could see this LSVCam and others couldn't. OBS really dislikes it, browsers really dislike it and it seemed to HANG on enumeration of cameras. Why can parts of Windows see this camera and others can't? I don't know. Do you? Regardless, it turns that it appears once in my registry, here (this is a dump of the key, you just care about the Registry PATH)Windows Registry Editor Version 5.00[HKEY_CLASSES_ROOT\\CLSID\\{860BB310-5D01-11d0-BD3B-00A0C911CE86}\\Instance\\LSVCam]\"FriendlyName\"=\"LSVCam\"\"CLSID\"=\"{BA80C4AD-8AED-4A61-B434-481D46216E45}\"\"FilterData\"=hex:02,00,00,00,00,00,20,00,01,00,00,00,00,00,00,00,30,70,69,33,\\ 08,00,00,00,00,00,00,00,01,00,00,00,00,00,00,00,00,00,00,00,30,74,79,33,00,\\ 00,00,00,38,00,00,00,48,00,00,00,76,69,64,73,00,00,10,00,80,00,00,aa,00,38,\\ 9b,71,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00 If you want to get rid of it, delete HKEY_CLASSES_ROOT\\CLSID\\{860BB310-5D01-11d0-BD3B-00A0C911CE86}\\Instance\\LSVCam WARNING: DO NOT delete the \\Instance, just the LSVCam and below. I am a random person on the internet and you got here by googling, so if you mess up your machine by going into RegEdit.exe, I'm sorry to this man, but it's above me now. Where did LSVCam.dll come from, you may ask? TikTok Live Studio, baby. Live Studio Video/Virtual Cam, I am guessing.Directory of C:\\Program Files\\TikTok LIVE Studio\\0.67.2\\resources\\app\\electron\\sdk\\lib\\MediaSDK_V109/18/2024 09:20 PM 218,984 LSVCam.dll 1 File(s) 218,984 bytes This is a regression that started recently for me, so it's my opinion that they are installing a virtual camera for their game streaming feature but they are doing it poorly. It's either not completely installed, or hangs on enumeration, but the result is you'll see hangs on camera enumeration in your apps, especually browser apps that poll for cameras changes or check on a timer. Nothing bad will happen if you delete the registry key BUT it'll show back up when you run TikTok Studio again. I still stream to TikTok, I just delete this key each time until someone on the TikTok Studio development team sees this blog post. Hope this helps!© 2021 Scott Hanselman. All rights reserved.",
    "author": "Scott Hanselman",
    "published": "Wed, 09 Oct 2024 19:32:28 GMT",
    "image": "https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/730f6664b802_E062/image_thumb.png",
    "source": "http://feeds.hanselman.com/ScottHanselman",
    "categories": [
      "Bugs"
    ]
  },
  {
    "id": "c03d9aa3-8dba-4010-8bd8-56a43c1192b4",
    "title": "Open Sourcing DOS 4",
    "link": "http://feeds.hanselman.com/~/882544025/0/scotthanselman~Open-Sourcing-DOS",
    "description": "See the canonical version of this blog post at the Microsoft Open Source Blog! Ten years ago, Microsoft released the source for MS-DOS 1.25 and 2.0 to the Computer History Museum, and then later republished them for reference purposes. This code holds an important place in history and is a fascinating read of an operating system that was written entirely in 8086 assembly code nearly 45 years ago. Today, in partnership with IBM and in the spirit of open innovation, we're releasing the source code to MS-DOS 4.00 under the MIT license. There's a somewhat complex and fascinating history behind the 4.0 versions of DOS, as Microsoft partnered with IBM for portions of the code but also created a branch of DOS called Multitasking DOS that did not see a wide release. https://github.com/microsoft/MS-DOS A young English researcher named Connor \"Starfrost\" Hyde recently corresponded with former Microsoft Chief Technical Officer Ray Ozzie about some of the software in his collection. Amongst the floppies, Ray found unreleased beta binaries of DOS 4.0 that he was sent while he was at Lotus. Starfrost reached out to the Microsoft Open Source Programs Office (OSPO) to explore releasing DOS 4 source, as he is working on documenting the relationship between DOS 4, MT-DOS, and what would eventually become OS/2. Some later versions of these Multitasking DOS binaries can be found around the internet, but these new Ozzie beta binaries appear to be much earlier, unreleased, and also include the ibmbio.com source.  Scott Hanselman, with the help of internet archivist and enthusiast Jeff Sponaugle, has imaged these original disks and carefully scanned the original printed documents from this \"Ozzie Drop\". Microsoft, along with our friends at IBM, think this is a fascinating piece of operating system history worth sharing.  Jeff Wilcox and OSPO went to the Microsoft Archives, and while they were unable to find the full source code for MT-DOS, they did find MS DOS 4.00, which we're releasing today, alongside these additional beta binaries, PDFs of the documentation, and disk images. We will continue to explore the archives and may update this release if more is discovered.  Thank you to Ray Ozzie, Starfrost, Jeff Sponaugle, Larry Osterman, our friends at the IBM OSPO, as well as the makers of such digital archeology software including, but not limited to Greaseweazle, Fluxengine, Aaru Data Preservation Suite, and the HxC Floppy Emulator. Above all, thank you to the original authors of this code, some of whom still work at Microsoft and IBM today! If you'd like to run this software yourself and explore, we have successfully run it directly on an original IBM PC XT, a newer Pentium, and within the open source PCem and 86box emulators.  © 2021 Scott Hanselman. All rights reserved.",
    "author": "Scott Hanselman",
    "published": "Thu, 25 Apr 2024 16:46:13 GMT",
    "image": "https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Open-Sourcing-DOS-4_E712/clip_image002_5b6e1c02-95d8-4ee1-87af-ca53a8b0bd56.png",
    "source": "http://feeds.hanselman.com/ScottHanselman",
    "categories": [
      "Open Source"
    ]
  },
  {
    "id": "72385365-6fa5-40ad-b0c5-c455eaac7266",
    "title": "Updating to .NET 8, updating to IHostBuilder, and running Playwright Tests within NUnit headless or headed on any OS",
    "link": "http://feeds.hanselman.com/~/873234002/0/scotthanselman~Updating-to-NET-updating-to-IHostBuilder-and-running-Playwright-Tests-within-NUnit-headless-or-headed-on-any-OS",
    "description": "I've been doing not just Unit Testing for my sites but full on Integration Testing and Browser Automation Testing as early as 2007 with Selenium. Lately, however, I've been using the faster and generally more compatible Playwright. It has one API and can test on Windows, Linux, Mac, locally, in a container (headless), in my CI/CD pipeline, on Azure DevOps, or in GitHub Actions. For me, it's that last moment of truth to make sure that the site runs completely from end to end. I can write those Playwright tests in something like TypeScript, and I could launch them with node, but I like running end unit tests and using that test runner and test harness as my jumping off point for my .NET applications. I'm used to right clicking and \"run unit tests\" or even better, right click and \"debug unit tests\" in Visual Studio or VS Code. This gets me the benefit of all of the assertions of a full unit testing framework, and all the benefits of using something like Playwright to automate my browser. In 2018 I was using WebApplicationFactory and some tricky hacks to basically spin up ASP.NET within .NET (at the time) Core 2.1 within the unit tests and then launching Selenium. This was kind of janky and would require to manually start a separate process and manage its life cycle. However, I kept on with this hack for a number of years basically trying to get the Kestrel Web Server to spin up inside of my unit tests. I've recently upgraded my main site and podcast site to .NET 8. Keep in mind that I've been moving my websites forward from early early versions of .NET to the most recent versions. The blog is happily running on Linux in a container on .NET 8, but its original code started in 2002 on .NET 1.1. Now that I'm on .NET 8, I scandalously discovered (as my unit tests stopped working) that the rest of the world had moved from IWebHostBuilder to IHostBuilder five version of .NET ago. Gulp. Say what you will, but the backward compatibility is impressive. As such my code for Program.cs changed from thispublic static void Main(string[] args){ CreateWebHostBuilder(args).Build().Run();}public static IWebHostBuilder CreateWebHostBuilder(string[] args) =\u003e WebHost.CreateDefaultBuilder(args) .UseStartup(); to this:public static void Main(string[] args){ CreateHostBuilder(args).Build().Run();}public static IHostBuilder CreateHostBuilder(string[] args) =\u003e Host.CreateDefaultBuilder(args). ConfigureWebHostDefaults(WebHostBuilder =\u003e WebHostBuilder.UseStartup()); Not a major change on the outside but tidies things up on the inside and sets me up with a more flexible generic host for my web app. My unit tests stopped working because my Kestral Web Server hack was no longer firing up my server. Here is an example of my goal from a Playwright perspective within a .NET NUnit test. [Test]public async Task DoesSearchWork(){ await Page.GotoAsync(Url); await Page.Locator(\"#topbar\").GetByRole(AriaRole.Link, new() { Name = \"episodes\" }).ClickAsync(); await Page.GetByPlaceholder(\"search and filter\").ClickAsync(); await Page.GetByPlaceholder(\"search and filter\").TypeAsync(\"wife\"); const string visibleCards = \".showCard:visible\"; var waiting = await Page.WaitForSelectorAsync(visibleCards, new PageWaitForSelectorOptions() { Timeout = 500 }); await Expect(Page.Locator(visibleCards).First).ToBeVisibleAsync(); await Expect(Page.Locator(visibleCards)).ToHaveCountAsync(5);} I love this. Nice and clean. Certainly here we are assuming that we have a URL in that first line, which will be localhost something, and then we assume that our web application has started up on its own. Here is the setup code that starts my new \"web application test builder factory,\" yeah, the name is stupid but it's descriptive. Note the OneTimeSetUp and the OneTimeTearDown. This starts my web app within the context of my TestHost. Note the :0 makes the app find a port which I then, sadly, have to dig out and put into the Url private for use within my Unit Tests. Note that the is in fact my Startup class within Startup.cs which hosts my app's pipeline and Configure and ConfigureServices get setup here so routing all works.private string Url;private WebApplication? _app = null;[OneTimeSetUp]public void Setup(){ var builder = WebApplicationTestBuilderFactory.CreateBuilder(); var startup = new Startup(builder.Environment); builder.WebHost.ConfigureKestrel(o =\u003e o.Listen(IPAddress.Loopback, 0)); startup.ConfigureServices(builder.Services); _app = builder.Build(); // listen on any local port (hence the 0) startup.Configure(_app, _app.Configuration); _app.Start(); //you are kidding me Url = _app.Services.GetRequiredService().Features.GetRequiredFeature().Addresses.Last();}[OneTimeTearDown]public async Task TearDown(){ await _app.DisposeAsync();} So what horrors are buried in WebApplicationTestBuilderFactory? The first bit is bad and we should fix it for .NET 9. The rest is actually every nice, with a hat tip to David Fowler for his help and guidance! This is the magic and the ick in one small helper class.public class WebApplicationTestBuilderFactory { public static WebApplicationBuilder CreateBuilder() where T : class { //This ungodly code requires an unused reference to the MvcTesting package that hooks up // MSBuild to create the manifest file that is read here. var testLocation = Path.Combine(AppContext.BaseDirectory, \"MvcTestingAppManifest.json\"); var json = JsonObject.Parse(File.ReadAllText(testLocation)); var asmFullName = typeof(T).Assembly.FullName ?? throw new InvalidOperationException(\"Assembly Full Name is null\"); var contentRootPath = json?[asmFullName]?.GetValue(); //spin up a real live web application inside TestHost.exe var builder = WebApplication.CreateBuilder( new WebApplicationOptions() { ContentRootPath = contentRootPath, ApplicationName = asmFullName }); return builder; }} The first 4 lines are nasty. Because the test runs in the context of a different directory and my website needs to run within the context of its own content root path, I have to force the content root path to be correct and the only way to do that is by getting the apps base directory from a file generated within MSBuild from the (aging) MvcTesting package. The package is not used, but by referencing it it gets into the build and makes that file that I then use to pull out the directory. If we can get rid of that \"hack\" and pull the directory from context elsewhere, then this helper function turns into a single line and .NET 9 gets WAY WAY more testable! Now I can run my Unit Tests AND Playwright Browser Integration Tests across all OS's, headed or headless, in docker or on the metal. The site is updated to .NET 8 and all is right with my code. Well, it runs at least. ;)© 2021 Scott Hanselman. All rights reserved.",
    "author": "Scott Hanselman",
    "published": "Thu, 07 Mar 2024 01:12:13 GMT",
    "image": "https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/78fe85887e7e_1244B/image_8b82f0d7-a3bc-4403-96c3-9dd36fc46d1f.png",
    "source": "http://feeds.hanselman.com/ScottHanselman",
    "categories": [
      "ASP.NET",
      "DotNetCore"
    ]
  },
  {
    "id": "09804f43-ace8-4a6a-9033-2734170556e0",
    "title": "Using WSL and Let's Encrypt to create Azure App Service SSL Wildcard Certificates",
    "link": "http://feeds.hanselman.com/~/749206136/0/scotthanselman~Using-WSL-and-Lets-Encrypt-to-create-Azure-App-Service-SSL-Wildcard-Certificates",
    "description": "There are many let's encrypt automatic tools for azure but I also wanted to see if I could use certbot in wsl to generate a wildcard certificate for the azure Friday website and then upload the resulting certificates to azure app service. Azure app service ultimately needs a specific format called dot PFX that includes the full certificate path and all intermediates. Per the docs, App Service private certificates must meet the following requirements: Exported as a password-protected PFX file, encrypted using triple DES. Contains private key at least 2048 bits long Contains all intermediate certificates and the root certificate in the certificate chain. If you have a PFX that doesn't meet all these requirements you can have Windows reencrypt the file. I use WSL and certbot to create the cert, then I import/export in Windows and upload the resulting PFX. Within WSL, install certbot:sudo apt updatesudo apt install python3 python3-venv libaugeas0sudo python3 -m venv /opt/certbot/sudo /opt/certbot/bin/pip install --upgrade pipsudo /opt/certbot/bin/pip install certbot Then I generate the cert. You'll get a nice text UI from certbot and update your DNS as a verification challenge. Change this to make sure it's two lines, and your domains and subdomains are correct and your paths are correct.sudo certbot certonly --manual --preferred-challenges=dns --email YOUR@EMAIL.COM --server https://acme-v02.api.letsencrypt.org/directory --agree-tos --manual-public-ip-logging-ok -d \"azurefriday.com\" -d \"*.azurefriday.com\"sudo openssl pkcs12 -export -out AzureFriday2023.pfx -inkey /etc/letsencrypt/live/azurefriday.com/privkey.pem -in /etc/letsencrypt/live/azurefriday.com/fullchain.pem I then copy the resulting file to my desktop (check your desktop path) so it's now in the Windows world.sudo cp AzureFriday2023.pfx /mnt/c/Users/Scott/OneDrive/Desktop Now from Windows, import the PFX, note the thumbprint and export that cert.Import-PfxCertificate -FilePath \"AzureFriday2023.pfx\" -CertStoreLocation Cert:\\LocalMachine\\My -Password (ConvertTo-SecureString -String 'PASSWORDHERE' -AsPlainText -Force) -ExportableExport-PfxCertificate -Cert Microsoft.PowerShell.Security\\Certificate::LocalMachine\\My\\597THISISTHETHUMBNAILCF1157B8CEBB7CA1 -FilePath 'AzureFriday2023-fixed.pfx' -Password (ConvertTo-SecureString -String 'PASSWORDHERE' -AsPlainText -Force) Then upload the cert to the Certificates section of your App Service, under Bring Your Own Cert. Then under Custom Domains, click Update Binding and select the new cert (with the latest expiration date). Next step is to make this even more automatic or select a more automated solution but for now, I'll worry about this in September and it solved my expensive Wildcard Domain issue.© 2021 Scott Hanselman. All rights reserved.",
    "author": "Scott Hanselman",
    "published": "Tue, 27 Jun 2023 17:17:25 GMT",
    "image": "https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Using-WSL-and-Lets-Encrypt-to-create-Azu_C384/image_3849c466-fcdb-4abd-96ad-8d52a5e93730.png",
    "source": "http://feeds.hanselman.com/ScottHanselman",
    "categories": [
      "Azure"
    ]
  },
  {
    "id": "efebf550-6ac0-4901-98af-a57ba64d81bb",
    "title": "GitHub Copilot for CLI for PowerShell",
    "link": "http://feeds.hanselman.com/~/737271731/0/scotthanselman~GitHub-Copilot-for-CLI-for-PowerShell",
    "description": "GitHub Next has this cool project that is basically Copilot for the CLI (command line interface). You can sign up for their waitlist at the Copilot for CLI site. Copilot for CLI provides three shell commands: ??, git? and gh? This is cool and all, but I use PowerShell. Turns out these ?? commands are just router commands to a larger EXE called github-copilot-cli. So if you go \"?? something\" you're really going \"github-copilot-cli what-the-shell something.\" So this means I should be able to to do the same/similar aliases for my PowerShell prompt AND change the injected prompt (look at me I'm a prompt engineer) to add 'use powershell to.' Now it's not perfect, but hopefully it will make the point to the Copilot CLI team that PowerShell needs love also. Here are my aliases. Feel free to suggest if these suck. Note the addition of \"user powershell to\" for the ?? one. I may make a ?? and a p? where one does bash and one does PowerShell. I could also have it use wsl.exe and shell out to bash. Lots of possibilities.function ?? { $TmpFile = New-TemporaryFile github-copilot-cli what-the-shell ('use powershell to ' + $args) --shellout $TmpFile if ([System.IO.File]::Exists($TmpFile)) { $TmpFileContents = Get-Content $TmpFile if ($TmpFileContents -ne $nill) { Invoke-Expression $TmpFileContents Remove-Item $TmpFile } }}function git? { $TmpFile = New-TemporaryFile github-copilot-cli git-assist $args --shellout $TmpFile if ([System.IO.File]::Exists($TmpFile)) { $TmpFileContents = Get-Content $TmpFile if ($TmpFileContents -ne $nill) { Invoke-Expression $TmpFileContents Remove-Item $TmpFile } }}function gh? { $TmpFile = New-TemporaryFile github-copilot-cli gh-assist $args --shellout $TmpFile if ([System.IO.File]::Exists($TmpFile)) { $TmpFileContents = Get-Content $TmpFile if ($TmpFileContents -ne $nill) { Invoke-Expression $TmpFileContents Remove-Item $TmpFile } }} It also then offers to run the command. Very smooth. Hope you like it. Lots of fun stuff happening in this space.© 2021 Scott Hanselman. All rights reserved.",
    "author": "Scott Hanselman",
    "published": "Tue, 25 Apr 2023 15:31:49 GMT",
    "image": "https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/GitHub-Copilot-for-CLI-for-PowerShell_B0E3/image_f39afdbf-04bf-4c95-a913-2404f46dc308.png",
    "source": "http://feeds.hanselman.com/ScottHanselman",
    "categories": [
      "AI",
      "PowerShell"
    ]
  },
  {
    "id": "0c316455-f1ef-44af-a7af-318a5f122756",
    "title": "Use your own user @ domain for Mastodon discoverability with the WebFinger Protocol without hosting a server",
    "link": "http://feeds.hanselman.com/~/722495722/0/scotthanselman~Use-your-own-user-domain-for-Mastodon-discoverability-with-the-WebFinger-Protocol-without-hosting-a-server",
    "description": "Mastodon is a free, open-source social networking service that is decentralized and distributed. It was created in 2016 as an alternative to centralized social media platforms such as Twitter and Facebook. One of the key features of Mastodon is the use of the WebFinger protocol, which allows users to discover and access information about other users on the Mastodon network. WebFinger is a simple HTTP-based protocol that enables a user to discover information about other users or resources on the internet by using their email address or other identifying information. The WebFinger protocol is important for Mastodon because it enables users to find and follow each other on the network, regardless of where they are hosted. WebFinger uses a \"well known\" path structure when calling an domain. You may be familiar with the robots.txt convention. We all just agree that robots.txt will sit at the top path of everyone's domain. The WebFinger protocol is a simple HTTP-based protocol that enables a user or search to discover information about other users or resources on the internet by using their email address or other identifying information. My is first name at last name .com, so...my personal WebFinger API endpoint is here https://www.hanselman.com/.well-known/webfinger The idea is that... A user sends a WebFinger request to a server, using the email address or other identifying information of the user or resource they are trying to discover. The server looks up the requested information in its database and returns a JSON object containing the information about the user or resource. This JSON object is called a \"resource descriptor.\" The user's client receives the resource descriptor and displays the information to the user. The resource descriptor contains various types of information about the user or resource, such as their name, profile picture, and links to their social media accounts or other online resources. It can also include other types of information, such as the user's public key, which can be used to establish a secure connection with the user. There's a great explainer here as well. From that page: When someone searches for you on Mastodon, your server will be queried for accounts using an endpoint that looks like this: GET https://${MASTODON_DOMAIN}/.well-known/webfinger?resource=acct:${MASTODON_USER}@${MASTODON_DOMAIN} Note that Mastodon user names start with @ so they are @username@someserver.com. Just like twiter would be @shanselman@twitter.com I can be @shanselman@hanselman.com now! So perhaps https://www.hanselman.com/.well-known/webfinger?resource=acct:FRED@HANSELMAN.COM Mine returns{ \"subject\":\"acct:shanselman@hachyderm.io\", \"aliases\": [ \"https://hachyderm.io/@shanselman\", \"https://hachyderm.io/users/shanselman\" ], \"links\": [ { \"rel\":\"http://webfinger.net/rel/profile-page\", \"type\":\"text/html\", \"href\":\"https://hachyderm.io/@shanselman\" }, { \"rel\":\"self\", \"type\":\"application/activity+json\", \"href\":\"https://hachyderm.io/users/shanselman\" }, { \"rel\":\"http://ostatus.org/schema/1.0/subscribe\", \"template\":\"https://hachyderm.io/authorize_interaction?uri={uri}\" } ]} This file should be returned as a mime type of application/jrd+json My site is an ASP.NET Razor Pages site, so I just did this in Startup.cs to map that well known URL to a page/route that returns the JSON needed.services.AddRazorPages().AddRazorPagesOptions(options =\u003e{ options.Conventions.AddPageRoute(\"/robotstxt\", \"/Robots.Txt\"); //i did this before, not needed options.Conventions.AddPageRoute(\"/webfinger\", \"/.well-known/webfinger\"); options.Conventions.AddPageRoute(\"/webfinger\", \"/.well-known/webfinger/{val?}\");}); then I made a webfinger.cshtml like this. Note I have to double escape the @@ sites because it's Razor.@page@{ Layout = null; this.Response.ContentType = \"application/jrd+json\";}{ \"subject\":\"acct:shanselman@hachyderm.io\", \"aliases\": [ \"https://hachyderm.io/@@shanselman\", \"https://hachyderm.io/users/shanselman\" ], \"links\": [ { \"rel\":\"http://webfinger.net/rel/profile-page\", \"type\":\"text/html\", \"href\":\"https://hachyderm.io/@@shanselman\" }, { \"rel\":\"self\", \"type\":\"application/activity+json\", \"href\":\"https://hachyderm.io/users/shanselman\" }, { \"rel\":\"http://ostatus.org/schema/1.0/subscribe\", \"template\":\"https://hachyderm.io/authorize_interaction?uri={uri}\" } ]} This is a static response, but if I was hosting pages for more than one person I'd want to take in the url with the user's name, and then map it to their aliases and return those correctly. Even easier, you can just use the JSON file of your own Mastodon server's webfinger response and SAVE IT as a static json file and copy it to your own server! As long as your server returns the right JSON from that well known URL then it'll work. So this is my template https://hachyderm.io/.well-known/webfinger?resource=acct:shanselman@hachyderm.io from where I'm hosted now. If you want to get started with Mastodon, start here. https://github.com/joyeusenoelle/GuideToMastodon/ it feels like Twitter circa 2007 except it's not owned by anyone and is based on web standards like ActivityPub. Hope this helps! © 2021 Scott Hanselman. All rights reserved.",
    "author": "Scott Hanselman",
    "published": "Sun, 18 Dec 2022 22:16:30 GMT",
    "image": "https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/f76e92f681b3_FC6E/image_cb60bf43-6d0a-41f9-9ff5-246f288adedf.png",
    "source": "http://feeds.hanselman.com/ScottHanselman",
    "categories": [
      "Musings"
    ]
  },
  {
    "id": "3afd4880-738d-41d0-bcbc-0919b7705090",
    "title": "I got tired",
    "link": "http://feeds.hanselman.com/~/722495724/0/scotthanselman~I-got-tired",
    "description": "I have been blogging here for the last 20 years. Every Tuesday and Thursday, quite consistently, for two decades. But last year, without planning it, I got tired and stopped. Not sure why. It didn't correspond with any life events. Nothing interesting or notable happened. I just stopped. I did find joy on TikTok and amassed a small group of like-minded followers there. I enjoy my YouTube as well, and my weekly podcast is going strong with nearly 900 (!) episodes of interviews with cool people. I've also recently started posting on Mastodon (a fediverse (federated universe)) Twitter alternative that uses the ActivityPub web standard. I see that Mark Downie has been looking at ActivityPub as well for DasBlog (the blog engine that powers this blog) so I need to spend sometime with Mark soon. Being consistent is a hard thing, and I think I did a good job. I gave many talks over many years about Personal Productivity but I always mentioned doing what \"feeds your spirit.\" For a minute here the blog took a backseat, and that's OK. I filled that (spare) time with family time, personal projects, writing more code, 3d printing, games, taekwondo, and a ton of other things. Going forward I will continue to write and share across a number of platforms, but it will continue to start here as it's super important to Own Your Words. Keep taking snapshots and backups of your keystrokes as you never know when your chosen platform might change or go away entirely. I'm still here. I hope you are too! I will see you soon. Related Links: Do they deserve the gift of your keystrokes? Do you have a digital or social media will?© 2021 Scott Hanselman. All rights reserved.",
    "author": "Scott Hanselman",
    "published": "Sun, 18 Dec 2022 18:27:11 GMT",
    "image": "https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/I-got-tired-and-I-took-a-break_C67F/tired_299ef159-a454-413b-8654-3ec136cf9f79.jpg",
    "source": "http://feeds.hanselman.com/ScottHanselman",
    "categories": [
      "Musings"
    ]
  },
  {
    "id": "b482fab0-f79b-42be-953c-03a51cc5b570",
    "title": "Using Home Assistant to integrate a Unifi Protect G4 Doorbell and Amazon Alexa to announce visitors",
    "link": "http://feeds.hanselman.com/~/676711904/0/scotthanselman~Using-Home-Assistant-to-integrate-a-Unifi-Protect-G-Doorbell-and-Amazon-Alexa-to-announce-visitors",
    "description": "I am not a Home Assistant expert, but it's clearly a massive and powerful ecosystem. I've interviewed the creator of Home Assistant on my podcast and I encourage you to check out that chat. Home Assistant can quickly become a hobby that overwhelms you. Every object (entity) in your house that is even remotely connected can become programmable. Everything. Even people! You can declare that any name:value pair that (for example) your phone can expose can be consumable by Home Assistant. Questions like \"is Scott home\" or \"what's Scott's phone battery\" can be associated with Scott the Entity in the Home Assistant Dashboard. I was amazed at the devices/objects that Home Assistant discovered that it could automate. Lights, remotes, Spotify, and more. You'll find that any internally connected device you have likely has an Integration available. Temperature, Light Status, sure, that's easy Home Automation. But integrations and 3rd party code can give you details like \"Is the Living Room dark\" or \"is there motion in the driveway.\" From these building blocks, you can then build your own IFTTT (If This Then That) automations, combining not just two systems, but any and all disparate systems. What's the best part? This all runs LOCALLY. Not in a cloud or the cloud or anyone's cloud. I've got my stuff running on a Raspberry Pi 4. Even better I put a Power Over Ethernet (PoE) hat on my Rpi so I have just one network wire into my hub that powers the Pi. I believe setting up Home Assistant on a Pi is the best and easiest way to get started. That said, you can also run in a Docker Container, on a Synology or other NAS, or just on Windows or Mac in the background. It's up to you. Optionally, you can pay Nabu Casa $5 for remote (outside your house) network access via transparent forwarding. But to be clear, it all still runs inside your house and not in the cloud. OK, to the main point. I used to have an Amazon Ring Doorbell that would integrate with Amazon Alexa and when you pressed the doorbell it would say \"Someone is at the front door\" on our all Alexas. It was a lovely little integration that worked nicely in our lives. However, I swapped out the Ring for a Unifi Protect G4 Doorbell for a number of reasons. I don't want to pump video to outside services, so this doorbell integrates nicely with my existing Unifi installation and records video to a local hard drive. However, I lose any Alexa integration and this nice little \"someone is at the door\" announcement. So this seems like a perfect job for Home Assistant. Here's the general todo list: Install Home Assistant Install Home Assistant Community Store This enables 3rd party \"untrusted\" integrations directly from GitHub. You'll need a GitHub account and it'll clone custom integrations directly into your local HA. I also recommend the Terminal \u0026 SSH (9.2.2), File editor (5.3.3) add ons so you can see what's happening. Get the UniFi Protect 3rd party integration for Home Assistant NOTE: Unifi Protect support is being promoted in Home Assistant v2022.2 so you won't need this step soon as it'll be included. \"The UniFi Protect Integration adds support for retrieving Camera feeds and Sensor data from a UniFi Protect installation on either an Ubiquiti CloudKey+, Ubiquiti UniFi Dream Machine Pro or UniFi Protect Network Video Recorder.\" Authenticate and configure this integration. Get the Alexa Media Player integration This makes all your Alexas show up in Home Assistant as \"media players\" and also allows you to tts (text to speech) to them. Authenticate and configure this integration. I recommend going into your Alexa app and making a Multi-room Speaker Group called \"everywhere.\" Not only because it's nice to be able to say \"play the music everywhere\" but you can also target that \"Everywhere\" group in Home Assistant. Go into your Home Assistant UI at http://homeassistant.local:8123/ and into Developer Tools. Under Services, try pasting in this YAML and clicking \"call service.\"service: notify.alexa_media_everywhere data: message: Someone is at the front door, this is a test data: type: announce method: speak If that works, you know you can automate Alexa and make it say things. Now, go to Configuration, Automation, and Add a new Automation. Here's mine. I used the UI to create it. Note that your Entity names may be different if you give your front doorbell camera a different name. Notice the format of Data, it's name value pairs within a single field's value. ...but it also exists in a file called Automations.yaml. Note that the \"to: 'on'\" trigger is required or you'll get double announcements, one for each state change in the doorbell. - id: '1640995128073' alias: G4 Doorbell Announcement with Alexa description: G4 Doorbell Announcement with Alexa trigger: - platform: state entity_id: binary_sensor.front_door_doorbell to: 'on' condition: [] action: - service: notify.alexa_media_everywhere data: data: type: announce method: speak message: Someone is at the front door mode: single It works! There's a ton of cool stuff I can automate now! Sponsor: Make login Auth0’s problem. Not yours. Provide the convenient login features your customers want, like social login, multi-factor authentication, single sign-on, passwordless, and more. Get started for free.© 2021 Scott Hanselman. All rights reserved.",
    "author": "Scott Hanselman",
    "published": "Tue, 14 Dec 2021 21:36:00 GMT",
    "image": "https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Using-Home-Assistant_E31C/image_c613af81-10de-49d3-aead-6e174ca870ca.png",
    "source": "http://feeds.hanselman.com/ScottHanselman",
    "categories": [
      "Home Server",
      "Musings"
    ]
  },
  {
    "id": "7d62c1c0-de0d-4556-b6e2-7f81f8fdf387",
    "title": "JavaScript and TypeScript Projects with React, Angular, or Vue in Visual Studio 2022 with or without .NET",
    "link": "http://feeds.hanselman.com/~/674283520/0/scotthanselman~JavaScript-and-TypeScript-Projects-with-React-Angular-or-Vue-in-Visual-Studio-with-or-without-NET",
    "description": "I was reading Gabby's blog post about the new TypeScript/JavaScript project experience in Visual Studio 2022. You should read the docs on JavaScript and TypeScript in Visual Studio 2022. If you're used to ASP.NET apps when you think about apps that are JavaScript heavy, \"front end apps\" or TypeScript focused, it can be confusing as to \"where does .NET fit in?\" You need to consider the responsibilities of your various projects or subsystems and the multiple totally valid ways you can build a web site or web app. Let's consider just a few: An ASP.NET Web app that renders HTML on the server but uses TS/JS This may have a Web API, Razor Pages, with or without the MVC pattern. You maybe have just added JavaScript via tags \u003cli\u003eMaybe you added a script minimizer/minifier task \u003cli\u003eCan be confusing because it can feel like your app needs to 'build both the client and the server' from one project\u003c/li\u003e\u003c/ul\u003e \u003cli\u003eA mostly JavaScript/TypeScript frontend app where the HTML could be served from any web server (node, kestrel, static web apps, nginx, etc) \u003cul\u003e \u003cli\u003eThis app may use Vue or React or Angular but it's not an \"ASP.NET app\" \u003cli\u003eIt calls backend Web APIs that may be served by ASP.NET, Azure Functions, 3rd party REST APIs, or all of the above \u003cli\u003eThis scenario has sometimes been confusing for ASP.NET developers who may get confused about responsibility. Who builds what, where do things end up, how do I build and deploy this?\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ol\u003e \u003cp\u003e\u003ca href=\"https://docs.microsoft.com/en-us/visualstudio/javascript/javascript-in-vs-2022?view=vs-2022\"\u003eVS2022\u003c/a\u003e brings JavaScript and TypeScript support into VS with a full JavaScript Language Service based on TS. It provides a TypeScript NuGet Package so you can build your whole app with MSBuild and VS will do the right thing.\u003c/p\u003e \u003cblockquote\u003e \u003cp\u003e\u003cstrong\u003eNEW: \u003c/strong\u003eStarting in Visual Studio 2022, there is a new JavaScript/TypeScript project type (.esproj) that allows you to create standalone Angular, React, and Vue projects in Visual Studio.\u003c/p\u003e\u003c/blockquote\u003e \u003cp\u003eThe .esproj concept is great for folks familiar with Visual Studio as we know that a Solution contains one or more Projects. Visual Studio manages files for a single application in a \u003cem\u003eProject\u003c/em\u003e. The project includes source code, resources, and configuration files. In this case we can have a .csproj for a backend Web API and an .esproj that uses a client side template like Angular, React, or Vue.\u003c/p\u003e \u003cp\u003eThing is, historically when Visual Studio supported Angular, React, or Vue, it's templates were out of date and not updated enough. VS2022 uses the native CLIs for these front ends, solving that problem with \u003ca href=\"https://angular.io/cli\"\u003eAngular CLI\u003c/a\u003e, \u003ca href=\"https://github.com/facebook/create-react-app\"\u003eCreate React App\u003c/a\u003e, and \u003ca href=\"https://cli.vuejs.org/\"\u003eVue CLI\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eIf I am in VS and go \"File New Project\" there are Standalone templates that solve Example 2 above. I'll pick JavaScript React.\u003c/p\u003e \u003cp\u003e\u003cimg title=\"Standalone JavaScript Templates in VS2022\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\" border=\"0\" alt=\"Standalone JavaScript Templates in VS2022\" src=\"https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/97390fb5b7df_12523/image_8fbe4808-d001-4208-a77c-614f8ed4126d.png\" width=\"567\" height=\"610\"\u003e\u003c/p\u003e \u003cp\u003eThen I'll click \"Add integration for Empty ASP.NET Web API. This will give me a frontend with javascript ready to call a ASP.NET Web API backend. I'll \u003ca href=\"https://docs.microsoft.com/en-us/visualstudio/javascript/tutorial-asp-net-core-with-react?view=vs-2022\"\u003efollow along here\u003c/a\u003e.\u003c/p\u003e \u003cp\u003e\u003cimg title=\"Standalone JavaScript React Template\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\" border=\"0\" alt=\"Standalone JavaScript React Template\" src=\"https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/97390fb5b7df_12523/image_bc274b03-19f1-4f1f-8fb8-f9d2f9dce344.png\" width=\"467\" height=\"119\"\u003e\u003c/p\u003e \u003cp\u003eIt then uses the React CLI to make the front end, which again, is cool as it's whatever version I want it to be.\u003c/p\u003e \u003cp\u003e\u003cimg title=\"React Create CLI\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\" border=\"0\" alt=\"React Create CLI\" src=\"https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/97390fb5b7df_12523/image_3b618c5d-75cd-4dc3-b9c6-78be33dbe019.png\" width=\"600\" height=\"133\"\u003e\u003c/p\u003e \u003cp\u003eThen I'll add my ASP.NET Web API backend to the same solution, so now I have an esproj and a csproj like this\u003c/p\u003e \u003cp\u003e\u003cimg title=\"frontend and backend\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\" border=\"0\" alt=\"frontend and backend\" src=\"https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/97390fb5b7df_12523/image_ecdd0c10-39eb-4eb9-aa87-6d9c712d362f.png\" width=\"221\" height=\"330\"\u003e\u003c/p\u003e \u003cp\u003eNow I have a nice clean two project system - in this case more JavaScript focused than .NET focused. This one uses npm to startup the project using their web development server and proxyMiddleware to proxy localhost:3000 calls over to the ASP.NET Web API project. \u003c/p\u003e \u003cp\u003eHere is a React app served by npm calling over to the Weather service served from Kestrel on ASP.NET.\u003c/p\u003e \u003cfigure\u003e\u003cimg title=\"npm app running in VS 2022 against an ASP.NET Web API\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\" border=\"0\" alt=\"npm app running in VS 2022 against an ASP.NET Web API\" src=\"https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/97390fb5b7df_12523/image_5d1af2f4-4754-4aa8-9e24-8ab9fa23a01c.png\" width=\"915\" height=\"986\"\u003e\u003c/figure\u003e\u003cp\u003eThis is inverted than most ASP.NET Folks are used to, and that's OK. This shows me that Visual Studio 2022 can support either development style, use the CLI that is installed for whatever Frontend Framework, and allow me to choose what web server and web browser (via Launch.json) I want.\u003c/p\u003e \u003cp\u003eIf you want to flip it, and \u003ca href=\"https://docs.microsoft.com/en-us/visualstudio/javascript/tutorial-aspnet-with-typescript?view=vs-2022\"\u003eput ASP.NET Core as the primary and then bring in some TypeScript/JavaScript, follow this tutorial because\u003c/a\u003e that's also possible!\u003c/p\u003e \u003chr\u003e \u003cp\u003e\u003cstrong\u003eSponsor: \u003c/strong\u003eMake login Auth0’s problem. Not yours. Provide the convenient login features your customers want, like social login, multi-factor authentication, single sign-on, passwordless, and more. \u003ca href=\"http://pubads.g.doubleclick.net/gampad/clk?id=5840349572\u0026iu=/6839/lqm.scotthanselman.site\"\u003eGet started for free.\u003c/a\u003e\u003c/p\u003e\u003cbr/\u003e\u003chr/\u003e© 2021 Scott Hanselman. All rights reserved. \u003cbr/\u003e\u003c/div\u003e\u003cdiv style=\"clear:both;padding-top:0.2em;\"\u003e\u003ca title=\"Like on Facebook\" href=\"http://feeds.hanselman.com/_/28/674283520/scotthanselman\"\u003e\u003cimg height=\"20\" src=\"https://assets.feedblitz.com/i/fblike20.png\" style=\"border:0;margin:0;padding:0;\"\u003e\u003c/a\u003e \u003ca title=\"Post to X.com\" href=\"http://feeds.hanselman.com/_/24/674283520/scotthanselman\"\u003e\u003cimg height=\"20\" src=\"https://assets.feedblitz.com/i/x.png\" style=\"border:0;margin:0;padding:0;\"\u003e\u003c/a\u003e \u003ca title=\"Subscribe by email\" href=\"http://feeds.hanselman.com/_/19/674283520/scotthanselman\"\u003e\u003cimg height=\"20\" src=\"https://assets.feedblitz.com/i/email20.png\" style=\"border:0;margin:0;padding:0;\"\u003e\u003c/a\u003e \u003ca title=\"Subscribe by RSS\" href=\"http://feeds.hanselman.com/_/20/674283520/scotthanselman\"\u003e\u003cimg height=\"20\" src=\"https://assets.feedblitz.com/i/rss20.png\" style=\"border:0;margin:0;padding:0;\"\u003e\u003c/a\u003e \u003c/div\u003e",
    "author": "Scott Hanselman",
    "published": "Thu, 25 Nov 2021 20:50:00 GMT",
    "image": "https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/97390fb5b7df_12523/image_8fbe4808-d001-4208-a77c-614f8ed4126d.png",
    "source": "http://feeds.hanselman.com/ScottHanselman",
    "categories": [
      "ASP.NET",
      "Javascript",
      "Web Services"
    ]
  },
  {
    "id": "046a744f-cfa8-4e6c-8992-d52a329a62fb",
    "title": "A Nightscout Segment for OhMyPosh shows my realtime Blood Sugar readings in my Git Prompt",
    "link": "http://feeds.hanselman.com/~/673947624/0/scotthanselman~A-Nightscout-Segment-for-OhMyPosh-shows-my-realtime-Blood-Sugar-readings-in-my-Git-Prompt",
    "description": "I've talked about how I love a nice pretty prompt in my Windows Terminal and made videos showing in detail how to do it. I've also worked with my buddy TooTallNate to put my real-time blood sugar into a bash or PowerShell prompt, but this was back in 2017. Now that I'm \"Team OhMyPosh\" I have been meaning to write a Nightscout \"segment\" for my prompt. Nightscout is an open source self-hosted (there are commercial hosts also like T1Pal) website and API for remote display of real-time and near-real-time glucose readings for Diabetics like myself. Since my body has an active REST API where I can just do an HTTP GET (via curl or whatever) and see my blood sugar, it clearly belongs in a place of honor, just like my current Git Branch! Oh My Posh supports configurable \"segments\" and now there's a beta (still needs mmol and stale readings support) Nightscout segment that you can setup in just a few minutes! This prompt works in ANY shell on ANY os! You can do this in zsh, PowerShell, Bash, whatever makes you happy. Here is a YouTube of Jan from OhMyPosh and I coding the segment LIVE in Go. If you have an existing OhMyPosh json config, you can just add another segment like this. Make sure your Nightscout URL includes a secure Token or is public (up to you). Note also that I setup \"if/then\" rules in my background_templates. These are optional and up to you to change to your taste. I set my background colors to red, yellow, green depending on sugar numbers. I also have a foreground template that is not really used, as you can see it always evaluates to black #000, but it shows you how you could set it to white text on a darker background if you wanted. { \"type\": \"nightscout\", \"style\": \"diamond\", \"foreground\": \"#ffffff\", \"background\": \"#ff0000\", \"background_templates\": [ \"{{ if gt .Sgv 150 }}#FFFF00{{ end }}\", \"{{ if lt .Sgv 60 }}#FF0000{{ end }}\", \"#00FF00\" ], \"foreground_templates\": [ \"{{ if gt .Sgv 150 }}#000000{{ end }}\", \"{{ if lt .Sgv 60 }}#000000{{ end }}\", \"#000000\" ], \"leading_diamond\": \"\", \"trailing_diamond\": \"\\uE0B0\", \"properties\": { \"url\": \"https://YOURNIGHTSCOUTAPP.herokuapp.com/api/v1/entries.json?count=1\u0026token=APITOKENFROMYOURADMIN\", \"http_timeout\": 1500, \"template\": \" {{.Sgv}}{{.TrendIcon}}\" }}, By default we will only go out and hit your Nightscout instance every 5 min, only when the prompt is repainted, and we'll only wait 1500ms before giving up. You can set that \"http_timeout\" (how long before we give up) if you feel this slows you down. It'll be cached for 5 min so it's unlikely  to b something you'll notice. The benefit of this new OhMyPosh segment over the previous solution is that it requires no additional services/chron jobs and can be setup extremely quickly. Note also that you can customize your template with NerdFonts. I've included a tiny syringe! Next I'll hope to improve the segment with mmol support as well as strikeout style for \"stale\" (over 15 min old) results. You're also welcome to help out by watching our YouTube and submitting a PR! Sponsor: Make login Auth0’s problem. Not yours. Provide the convenient login features your customers want, like social login, multi-factor authentication, single sign-on, passwordless, and more. Get started for free.© 2021 Scott Hanselman. All rights reserved.",
    "author": "Scott Hanselman",
    "published": "Tue, 23 Nov 2021 20:02:00 GMT",
    "image": "https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/a1ea1c6a57b0_119D3/image_d14e0906-8932-44e0-a493-86eeac62c1ae.png",
    "source": "http://feeds.hanselman.com/ScottHanselman",
    "categories": [
      "Diabetes",
      "Open Source"
    ]
  },
  {
    "id": "a6d318c3-640a-4a2b-99a8-44ab1743a330",
    "title": "Upgrading a 20 year old University Project to .NET 6 with dotnet-upgrade-assistant",
    "link": "http://feeds.hanselman.com/~/673659136/0/scotthanselman~Upgrading-a-year-old-University-Project-to-NET-with-dotnetupgradeassistant",
    "description": "I wrote a Tiny Virtual Operating System for a 300-level OS class in C# for college back in 2001 (?) and later moved it to VB.NET in 2002. This is all pre-.NET Core, and on early .NET 1.1 or 2.0 on Windows. I moved it to GitHub 5 years ago and ported it to .NET Core 2.0 at the time. At this point it was 15 years old, so it was cool to see this project running on Windows, Linux, in Docker, and on a Raspberry Pi...a machine that didn't exist when the project was originally written. NOTE: If the timeline is confusing, I had already been working in industry for years at this point but was still plugging away at my 4 year degree at night. It eventually took 11 years to complete my BS in Software Engineering. This evening, as the children slept, I wanted to see if I could run the .NET Upgrade Assistant on this now 20 year old app and get it running on .NET 6. Let's start:$ upgrade-assistant upgrade .\\TinyOS.sln-----------------------------------------------------------------------------------------------------------------Microsoft .NET Upgrade Assistant v0.3.256001+3c4e05c787f588e940fe73bfa78d7eedfe0190bdWe are interested in your feedback! Please use the following link to open a survey: https://aka.ms/DotNetUASurvey-----------------------------------------------------------------------------------------------------------------[22:58:01 INF] Loaded 5 extensions[22:58:02 INF] Using MSBuild from C:\\Program Files\\dotnet\\sdk\\6.0.100\\[22:58:02 INF] Using Visual Studio install from C:\\Program Files\\Microsoft Visual Studio\\2022\\Preview [v17][22:58:06 INF] Initializing upgrade step Select an entrypoint[22:58:07 INF] Setting entrypoint to only project in solution: C:\\Users\\scott\\TinyOS\\src\\TinyOSCore\\TinyOSCore.csproj[22:58:07 INF] Recommending executable TFM net6.0 because the project builds to an executable[22:58:07 INF] Initializing upgrade step Select project to upgrade[22:58:07 INF] Recommending executable TFM net6.0 because the project builds to an executable[22:58:07 INF] Recommending executable TFM net6.0 because the project builds to an executable[22:58:07 INF] Initializing upgrade step Back up project See how the process is interactive at the command line, with color prompts and a series of dynamic multiple-choice questions? Interestingly, it builds on the first try, no errors. When I manually look at the .csproj I can see some weird version numbers, likely from some not-quite-baked version of .NET Core 2 I used many years ago. My spidey sense says this is wrong, and I'm assuming the upgrade assistant didn't understand it. I also note a commented-out reference to ILLink.Tasks which was a preview feature in Mono's Linker to reduce the final size of apps and tree-trim them. Some of that functionality is built into .NET 6 now so I'll use that during the build and packaging process later. The reference is not needed today. I'm gonna blindly upgrade them to .NET 6 and see what happens. I could do this by just changing the numbers and seeing if it restores and builds, but I can also try dotnet outdated which remains a lovely tool in the upgrader's toolkit. This \"outdated\" tool is nice as it talks to NuGet and confirms that there are newer versions of certain packages. In my tests - which were just batch files at this early time - I was calling my dotnet app like this:dotnet netcoreapp2.0/TinyOSCore.dll 512 scott13.txt This will change to the modern form with just TinyOSCore.exe 512 scott13.txt with an exe and args and no ceremony. Publishing and trimming my TinyOS turns into just a 15 meg EXE. Nice considering that the .NET I need is in there with no separate install. I could turn this little synthetic OS into a microservice if I wanted to be totally extra.dotnet publish -r win-x64 --self-contained -p:PublishSingleFile=true -p:SuppressTrimAnalysisWarnings=true If I add -p:EnableCompressionInSingleFile=true Then it's even smaller. No code changes. Run all my tests, looks good. My project from university from .NET 1.1 is now .NET 6.0, cross platform, self-contained in 11 megs in a single EXE. Sweet. Sponsor: At Rocket Mortgage® the work you do around here will be 100% impactful but won’t take all your free time, giving you the perfect work-life balance. Or as we call it, tech/life balance! Learn more.© 2021 Scott Hanselman. All rights reserved.",
    "author": "Scott Hanselman",
    "published": "Thu, 18 Nov 2021 21:18:00 GMT",
    "image": "https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/16297583fa52_12B8A/image_102c9b35-682a-46ed-9bb3-3d313ddda313.png",
    "source": "http://feeds.hanselman.com/ScottHanselman",
    "categories": [
      "DotNetCore",
      "Open Source"
    ]
  },
  {
    "id": "16373969-72ef-4fd3-b644-997818293e8a",
    "title": "Mac vs Windows for Programming",
    "link": "https://www.thecrazyprogrammer.com/2023/11/mac-vs-windows-for-programming.html",
    "description": "The programming world is quite thrilling and daily there are many new software’s to exploit computer resources. When it comes to choosing the right operating system for your programming needs, MacOS \u0026 Windows are two operating systems that have their benefits and drawbacks. However, depending on what type of developer you are, one can be … Mac vs Windows for Programming Read More » The post Mac vs Windows for Programming appeared first on The Crazy Programmer.",
    "author": "Zainab Sutarwala",
    "published": "Mon, 06 Nov 2023 11:30:46 +0000",
    "image": "http://thecrazyprogrammer.com/wp-content/uploads/2023/11/Mac-vs-Windows-for-Programming.png",
    "source": "https://www.thecrazyprogrammer.com/category/programming/feed",
    "categories": [
      "Programming"
    ]
  },
  {
    "id": "9a2442f3-78e1-4009-ac29-63c3dc9ffce4",
    "title": "10 Best Laptops for Coding and Programming in India 2024",
    "link": "https://www.thecrazyprogrammer.com/2023/08/best-laptop-for-programming.html",
    "description": "This article will guide you to choose the best laptop for coding and programming and some of my top laptop picks for developers and students in India. I have also given the best picks based on prices under 1 Lakh, 70000, 60000, 50000, 40000, etc. As a programmer or developer, it becomes really confusing to … 10 Best Laptops for Coding and Programming in India 2024 Read More » The post 10 Best Laptops for Coding and Programming in India 2024 appeared first on The Crazy Programmer.",
    "author": "Neeraj Mishra",
    "published": "Sun, 20 Aug 2023 15:38:06 +0000",
    "image": "http://thecrazyprogrammer.com/wp-content/uploads/2016/12/How-to-Choose-Best-Laptop-for-Programming-in-2017.jpeg",
    "source": "https://www.thecrazyprogrammer.com/category/programming/feed",
    "categories": [
      "Programming"
    ]
  },
  {
    "id": "f5912712-2935-4182-979e-a96f914484ac",
    "title": "6 Reasons To Learn Programming If You Are Not A Programmer",
    "link": "https://www.thecrazyprogrammer.com/2023/02/6-reasons-to-learn-programming-if-you-are-not-a-programmer.html",
    "description": "1. It’s Freedom of Creativity Many people think you need A’s in math to program. That’s a misconception. Programming is more about logic and creativity. For example, you and your friends jokingly come up with an excellent smartphone game. You can wait for some company over the ocean to release it or make it yourself. … 6 Reasons To Learn Programming If You Are Not A Programmer Read More » The post 6 Reasons To Learn Programming If You Are Not A Programmer appeared first on The Crazy Programmer.",
    "author": "Neeraj Mishra",
    "published": "Thu, 23 Feb 2023 11:20:34 +0000",
    "image": "http://thecrazyprogrammer.com/wp-content/uploads/2023/02/6-Reasons-To-Learn-Programming-If-You-Are-Not-A-Programmer.jpeg",
    "source": "https://www.thecrazyprogrammer.com/category/programming/feed",
    "categories": [
      "Programming"
    ]
  },
  {
    "id": "6a320c3f-45f4-4452-977d-4218e9caed1a",
    "title": "5 Fundamental Concepts of Object Oriented Programming",
    "link": "https://www.thecrazyprogrammer.com/2022/12/concepts-of-object-oriented-programming.html",
    "description": "Object-oriented programming is a programming model that revolves around an object or entity. Object-oriented programming has been an enormous success for both developers and programmers. Creating a more seamless process and system for their employees and clients has benefited multi-billion dollar corporations. However, a significant amount of time must be devoted to learning programming languages … 5 Fundamental Concepts of Object Oriented Programming Read More » The post 5 Fundamental Concepts of Object Oriented Programming appeared first on The Crazy Programmer.",
    "author": "Neeraj Mishra",
    "published": "Tue, 20 Dec 2022 14:31:53 +0000",
    "image": "http://thecrazyprogrammer.com/wp-content/uploads/2022/12/Object-Oriented-Programming-1024x858.png",
    "source": "https://www.thecrazyprogrammer.com/category/programming/feed",
    "categories": [
      "Programming"
    ]
  },
  {
    "id": "74939977-f565-45e9-84d4-f68cd38a6a7d",
    "title": "A Winning Strategy for Students Learning C++",
    "link": "https://www.thecrazyprogrammer.com/2022/11/a-winning-strategy-for-students-learning-c.html",
    "description": "C++ is one of the most popular programming languages used by developers across the world. This language can be a great tool for those interested in getting into software engineering, cryptocurrency mining, or other tech-related professions. Despite its wide range of applications, this programming language is also relatively simple to learn. Nevertheless, there are a … A Winning Strategy for Students Learning C++ Read More » The post A Winning Strategy for Students Learning C++ appeared first on The Crazy Programmer.",
    "author": "Neeraj Mishra",
    "published": "Sun, 20 Nov 2022 16:06:35 +0000",
    "image": "http://thecrazyprogrammer.com/wp-content/uploads/2022/11/A-Winning-Strategy-for-Students-Learning-C.jpeg",
    "source": "https://www.thecrazyprogrammer.com/category/programming/feed",
    "categories": [
      "Programming"
    ]
  },
  {
    "id": "e073a12e-6f39-4223-9db5-0c8cc323d0c0",
    "title": "Rust vs Python – What Are The Differences",
    "link": "https://www.thecrazyprogrammer.com/2022/11/rust-vs-python.html",
    "description": "Software engineering has come a long way since the 1980s. From BASIC to C, Python, and Java, people can write much more complicated programs. Programming languages have diverged and evolved, helping to shape our current software industry. Despite all of the advances in programming languages, it is still common for new programmers to get stuck … Rust vs Python – What Are The Differences Read More » The post Rust vs Python – What Are The Differences appeared first on The Crazy Programmer.",
    "author": "Neeraj Mishra",
    "published": "Wed, 09 Nov 2022 14:49:16 +0000",
    "image": "http://thecrazyprogrammer.com/wp-content/uploads/2022/11/Rust-vs-Python.jpeg",
    "source": "https://www.thecrazyprogrammer.com/category/programming/feed",
    "categories": [
      "Programming"
    ]
  },
  {
    "id": "2d3a34d9-b70d-46bd-b35f-c3651359fb8d",
    "title": "How Long Does It Take To Learn Java?",
    "link": "https://www.thecrazyprogrammer.com/2022/10/how-long-does-it-take-to-learn-java.html",
    "description": "Do you want to master Java and land your dream job as a Java developer? You may already know that Naukri.com, the largest Indian job searching site, now has nearly 100,000 job openings looking for Java developers. But how long will it take to learn Java? The answer to that question is not as simple … How Long Does It Take To Learn Java? Read More » The post How Long Does It Take To Learn Java? appeared first on The Crazy Programmer.",
    "author": "Neeraj Mishra",
    "published": "Tue, 11 Oct 2022 17:41:04 +0000",
    "image": "http://thecrazyprogrammer.com/wp-content/uploads/2022/10/How-Long-Does-It-Take-To-Learn-Java-1-min.png",
    "source": "https://www.thecrazyprogrammer.com/category/programming/feed",
    "categories": [
      "Programming"
    ]
  },
  {
    "id": "18eff512-33ec-46b1-bd6d-2c023a232d6e",
    "title": "9 Best Codecademy Alternatives 2024",
    "link": "https://www.thecrazyprogrammer.com/2022/10/codecademy-alternatives.html",
    "description": "Codecademy is a well-known app to teach new programmers and developers the basics of coding. Since 2011, Codecademy has taught millions of developers to code, and they also launched careers for many new developers. So, what is wrong with the Codecademy app? There’re some problems that must be talked about, and learning things it doesn’t … 9 Best Codecademy Alternatives 2024 Read More » The post 9 Best Codecademy Alternatives 2024 appeared first on The Crazy Programmer.",
    "author": "Neeraj Mishra",
    "published": "Fri, 07 Oct 2022 11:58:52 +0000",
    "image": "http://thecrazyprogrammer.com/wp-content/uploads/2022/10/Codecademy-Alternatives-1024x610.jpg",
    "source": "https://www.thecrazyprogrammer.com/category/programming/feed",
    "categories": [
      "Programming"
    ]
  },
  {
    "id": "2e2edda4-3810-4149-bd57-6b70ab4add6c",
    "title": "Fourth Generation Language (4GL) – Advantages \u0026 Disadvantages",
    "link": "https://www.thecrazyprogrammer.com/2022/09/fourth-generation-language.html",
    "description": "This is a high-level programming language, which is used by database users to access the database. This is also called non-procedural language because just like other programming languages it does not follow any fixed procedure or sequence for execution. Instead, it allows users to just pass on the commands in simple English text that follow … Fourth Generation Language (4GL) – Advantages \u0026 Disadvantages Read More » The post Fourth Generation Language (4GL) – Advantages \u0026 Disadvantages appeared first on The Crazy Programmer.",
    "author": "Jitendra Ajmera",
    "published": "Sun, 11 Sep 2022 14:31:54 +0000",
    "image": "",
    "source": "https://www.thecrazyprogrammer.com/category/programming/feed",
    "categories": [
      "Programming"
    ]
  },
  {
    "id": "77d0ef21-d1d8-45a8-bb83-47f96fdfe323",
    "title": "7 Best Online Compilers 2024 – C, C++, Java, Python",
    "link": "https://www.thecrazyprogrammer.com/2022/08/best-online-compilers.html",
    "description": "An online IDE or compiler comes in quite useful especially when you are looking to compile and interpret programming code to \u0026 from different languages. There is a possibility that your computer might hang if you use a bunch of apps at one time, thus, for these scenarios, the online compiler is the best option. … 7 Best Online Compilers 2024 – C, C++, Java, Python Read More » The post 7 Best Online Compilers 2024 – C, C++, Java, Python appeared first on The Crazy Programmer.",
    "author": "Zainab Sutarwala",
    "published": "Mon, 29 Aug 2022 15:59:31 +0000",
    "image": "http://thecrazyprogrammer.com/wp-content/uploads/2022/08/GeeksforGeeks-IDE-min-1024x552.jpeg",
    "source": "https://www.thecrazyprogrammer.com/category/programming/feed",
    "categories": [
      "Programming"
    ]
  },
  {
    "id": "544997fa-e90b-4a69-a42f-40584b4486a0",
    "title": "",
    "link": "http://scripting.com/2024/10/10.html#a155959",
    "description": "Quick note about last night's Mets win over Philly. The series is over, the next game on Sunday will be against the winner in the west, either San Diego or Los Angeles. Last night's game was stressful, low scoring, until the Mets star shortstop hit a freaking grand slam home run, and that was all the scoring we needed. The Mets are the hottest team in baseball. It doesn't feel like a long time since 2015 when they got to the World Series before crashing. Who knows how far we'll get this year, honestly -- I'm surprised (and pleased) we got this far. And in the meantime, I caught a tiny bit of last night's preseason game between the Knicks and some other team I don't care about. They have two new stars to add to the roster after losing one star as a free agent, and trading two others for the second new star. All in all, very enticing. New York has some excellent sports teams, which is unusual, because it isn't just the Jankees this time, a team I will, I promise, never root for. Quite the opposite. I will root for whoever they are playing. You can probably tell I don't like them. 😄",
    "author": "",
    "published": "Thu, 10 Oct 2024 15:59:59 GMT",
    "image": "https://imgs.scripting.com/2024/10/10/ronaldMcGrimace.png",
    "source": "http://scripting.com/rss.xml",
    "categories": null
  },
  {
    "id": "3200ebe5-25f2-4a5a-a6ca-d74f064e6853",
    "title": "",
    "link": "http://scripting.com/2024/10/10.html#a184350",
    "description": "I'm posting development notes on the wordland product in my wordpress/mastodon account. I'm starting to like using the new editor. Today I switched the format we save drafts in from HTML to Markdown. More consistent with my belief that Markdown is the ideal subset of web writing features for the social web.",
    "author": "",
    "published": "Thu, 10 Oct 2024 18:43:50 GMT",
    "image": "",
    "source": "http://scripting.com/rss.xml",
    "categories": null
  },
  {
    "id": "979364bb-3a51-4666-a32a-89478f3cc316",
    "title": "",
    "link": "http://scripting.com/2024/10/10.html#a161705",
    "description": "Isn't it weird that businesses work hard to get better position on Google search, but fight the other way with AI to be excluded. At some point they could realize that one of the approaches isn't correct.",
    "author": "",
    "published": "Thu, 10 Oct 2024 16:17:05 GMT",
    "image": "",
    "source": "http://scripting.com/rss.xml",
    "categories": null
  },
  {
    "id": "3194a6e8-d8cc-47ed-99ab-08bc505b1ef0",
    "title": "Memorable TV-watching moments",
    "link": "http://scripting.com/2024/10/10/190904.html?title=memorableTvwatchingMoments",
    "description": "A tweet that says something that's obviously true until you realize it's not. \"No kid remembers their best day in front of the TV.\" In fact I have four memories from my youth, watching TV. I remember my father rolling around on the floor when the ball went through Buckner's legs. My father never rolled around on the floor, before or since. But I liked seeing him let go just that once. Another with my father. When the Beatles were on Ed Sullivan he said they were wearing wigs. He knew that because no man would actually have hair like that. I was 8 or 9 years old and remember telling him I didn't think he got that right. I remember exactly where I was when Neil Armstrong walked on the moon. At the Newport Folk Festival and about 500 people were watching a tiny TV on top of a VW bus. Somehow everyone could see. It was outdoors and it was silent, everyone was in awe. One that's only peripherally about TV. I remember every time I went to see a game at Shea Stadium as a kid I was blown away by the color, because most of the Mets games I saw were on TV, in black and white. Here's one from adulthood. Watching young Barack Obama give his victory speech on election night in 2008 in my house in Berkeley with a group of friends, with tears running down all our faces.",
    "author": "",
    "published": "Thu, 10 Oct 2024 19:09:04 GMT",
    "image": "",
    "source": "http://scripting.com/rss.xml",
    "categories": null
  },
  {
    "id": "9c0ab45c-4800-4505-a703-d1f701a6ee6c",
    "title": "",
    "link": "http://scripting.com/2024/10/09.html#a205202",
    "description": "December 2005: Biloxi/Gulfport after Katrina.",
    "author": "",
    "published": "Wed, 09 Oct 2024 20:52:02 GMT",
    "image": "",
    "source": "http://scripting.com/rss.xml",
    "categories": null
  },
  {
    "id": "f46fd7ba-eda5-4eaf-90d2-62ace81d14c9",
    "title": "",
    "link": "http://scripting.com/2024/10/09.html#a204740",
    "description": "After Katrina I went to New Orleans to see what was left, esp in the areas where there was a 15-25 foot storm surge in coastal Mississippi. If you went inland from the coast for a few miles there was nothing left. No trees, only a few skeletal all-concrete buildings where the beach used to be, otherwise everything destroyed. What you don't necessarily realize that it isn't just 15 feet of water, it's 15 feet of stormy ocean with cars and building debris being pushed around floating in the water. This video on Threads provides a visual illustration of what a 9 foot surge is like.",
    "author": "",
    "published": "Wed, 09 Oct 2024 20:47:40 GMT",
    "image": "",
    "source": "http://scripting.com/rss.xml",
    "categories": null
  },
  {
    "id": "b0341fd5-4e2e-4c62-b1ff-ae9453ef5330",
    "title": "",
    "link": "http://scripting.com/2024/10/09.html#a205632",
    "description": "Summary of my posts about New Orleans in December 2005.",
    "author": "",
    "published": "Wed, 09 Oct 2024 20:56:32 GMT",
    "image": "",
    "source": "http://scripting.com/rss.xml",
    "categories": null
  },
  {
    "id": "eb284b1d-c225-404a-888d-6e5684a98b84",
    "title": "",
    "link": "http://scripting.com/2024/10/09.html#a205740",
    "description": "Thanks for all the good wishes re the 30th anniversary of the start of blogging here. It's not the same as it was at the beginning, but it's still pretty good. And to all the friends no longer with us, and there are plenty of them -- you are appreciated, respected and missed.",
    "author": "",
    "published": "Wed, 09 Oct 2024 20:57:40 GMT",
    "image": "",
    "source": "http://scripting.com/rss.xml",
    "categories": null
  },
  {
    "id": "3b2f2f2e-ef42-4047-96ee-194b6d3e6555",
    "title": "",
    "link": "http://scripting.com/2024/10/08.html#a200539",
    "description": "Podcast: I was able to write a post that appeared on Mastodon using ActivityPub. Via the WordPress API. Congrats to the ActivtyPub community, Automattic and Mastodon. \"It just worked.\"",
    "author": "",
    "published": "Tue, 08 Oct 2024 20:05:39 GMT",
    "image": "",
    "source": "http://scripting.com/rss.xml",
    "categories": null
  },
  {
    "id": "f8df7c1f-5334-4fc9-8e1e-0e39c9fe3af4",
    "title": "",
    "link": "http://scripting.com/2024/10/08.html#a174842",
    "description": "Okay this is blowing my mind. My friends at Automattic showed me how to turn on ActivityPub on a WordPress site. I wrote a test post in my simple WordPress editor, forgetting that it would be cross-posted to Mastodon. When I just checked in on Masto, there was the freaking post. After I recovered from passing out, I wondered what happens if I update the post in my editor, and save it to the WordPress site that's hooked up to Masto via ActivityPub. So I made a change and saved it. I waited and waited, nothing happened. I got ready to add a comment saying ahh I guess it doesn't update, when -- it updated. Oh geez look at that. Folks, I did nothing here but write an app that can be used to edit WordPress posts. And I got in return an app that is part of the freaking Fediverse. And I never had to write a line of ActivityPub code. Think about that. I don't know if Automattic understands what they have, honestly.",
    "author": "",
    "published": "Tue, 08 Oct 2024 17:48:42 GMT",
    "image": "https://imgs.scripting.com/2020/04/09/santaCoke.png",
    "source": "http://scripting.com/rss.xml",
    "categories": null
  },
  {
    "id": "82a4e696-3525-4b70-8586-570d03826129",
    "title": "",
    "link": "http://scripting.com/2024/10/08.html#a175612",
    "description": "BTW, it also supports HTML pretty well, but the title does not appear on the Mastodon version. That's going to be a problem. Actually the title is visible at the bottom. Let's call that an anachronism. Of course the title should/must be at the top.",
    "author": "",
    "published": "Tue, 08 Oct 2024 17:56:12 GMT",
    "image": "",
    "source": "http://scripting.com/rss.xml",
    "categories": null
  },
  {
    "id": "f7302e99-38b1-431c-92d4-7335514d315b",
    "title": "",
    "link": "http://scripting.com/2024/10/08.html#a154014",
    "description": "Om Malik, a long-time friend, NBB and supporter: \"The best version of Dave is the Hopeful Dave.\" I agree. That's certainly when I'm happiest. Because it means someone is working with someone else. Imho, that's the only source of hope in our world.",
    "author": "",
    "published": "Tue, 08 Oct 2024 15:40:14 GMT",
    "image": "",
    "source": "http://scripting.com/rss.xml",
    "categories": null
  },
  {
    "id": "e97b6cf4-7418-4672-bb70-d80101a34bc9",
    "title": "",
    "link": "http://scripting.com/2024/10/08.html#a124723",
    "description": "I'm really proud of what John Gruber said about me as a blogger in his Daring Fireball yesterday: \"Winer is rightfully renowned for his technical achievements — outliners as an application genre, RSS in general, and RSS in the specific context of podcasting in particular — but what’s kept me reading Scripting News for the entirety of Scripting News’s 30-years-and-counting run is his writing. He has such a distinctive writing voice that is impossible to imagine in any medium other than the web. But I think that’s because he helped define what writing not just on the web, but for the web, even meant.\"",
    "author": "",
    "published": "Tue, 08 Oct 2024 12:47:23 GMT",
    "image": "https://imgs.scripting.com/2022/09/21/mets.png",
    "source": "http://scripting.com/rss.xml",
    "categories": null
  },
  {
    "id": "1e8f496b-d9a7-4167-bf9b-1b0622bf0139",
    "title": "",
    "link": "http://scripting.com/2024/10/08.html#a120618",
    "description": "I've mentioned the wpIdentity package a few times recently, and thought I should explain its purpose and history.",
    "author": "",
    "published": "Tue, 08 Oct 2024 12:06:18 GMT",
    "image": "",
    "source": "http://scripting.com/rss.xml",
    "categories": null
  },
  {
    "id": "0b792ee3-5810-46e3-a839-216c407ec1e3",
    "title": "Guy Kawasaki, proto-evangelist",
    "link": "http://scripting.com/2024/10/08/155702.html?title=guyKawasakiProtoevangelist",
    "description": "Guy Kawasaki and I have been going back and forth privately about what we want from our personal ChatGPT. Here's one thing for the list. When I go to Google and search for NBB, it should take me to this page on my blog. It shouldn't even require me to click on Feelin Lucky. Google has had 26 years to get to know me, and it still thinks I might mean National Bank of Blacksburg. Folks, this is my blog, read it and use it as context when I ask a question. And they don't have to even read my blog, NBB is defined in my glossary, which I make public and is used in rendering all my pages. A few years back, Google, when I searched for my mother, using her correctly-spelled last name, which happened to also be my last name, showed me results for Eve Wilmer. Back to Guy. I asked if he's written about what an evangelist is. To me, he is the prototypical evangelist. He's #1 and there isn't a #2 or #3. He has written about it, in the Harvard Business Review in 2015. But his story is, excuse me, bullshit. I should record a podcast about what an evangelist is, as I was very well-schooled in this by Guy. Let me try here. The evangelist for a product or organization is the person who deliberately tilts the playing field in favor of developer products that absolutely must get out there for the organization to achieve its mission. How is the tilt determined? Intuitively. If some random schmuck approaches him out of the blue at a developer conference, and explains their problem, where most BigCo people ignore them, the evangelist listens carefully. Helps without a second thought. And his door is open, if the developer wants to follow up. He helps route his needs through the organization. No developer is on their own if Guy is there. And when the killer product comes along, the one that will give Mac users something to get charged up over in 1986 when the hardware problems were being solved (they were!) and the software flow had dried up, Guy gets the developer the $400K they need to keep the doors open to ship the freaking product. The level playing field approach, which most tech companies follow, results in dead developers and platforms whose capabilities go unexplored. Users get bored, and move on to where the excitement is. I've seen products and companies fail to look around them to see what's possible. They only look inward at their own organizations who fail year after year to create products that users love. There's a reason for this, but you don't need to know it -- you just need to keep looking at every possible victory and when one comes along, do anything it takes to get it out to users. I've applied Guy's teaching in every project I've done since I got to know him in 1983 and when we, together, rode the wave of success in the Mac in 1986. He was like a member of our team inside the Mac Division at Apple. And we did have the hit product that year. And Guy pulled every string to make sure the world knew. This is how I applied the lesson. When I saw the potential in another developer and a way for their project to help me achieve my goal, I go for it. I know those things are very rare, and not to worry if it doesn't arrive in exactly the way I expected it to.",
    "author": "",
    "published": "Tue, 08 Oct 2024 15:57:02 GMT",
    "image": "https://imgs.scripting.com/2022/08/20/brilliantFriend.png",
    "source": "http://scripting.com/rss.xml",
    "categories": null
  },
  {
    "id": "cb608be8-6680-4263-9c3b-8c5513375cfb",
    "title": "",
    "link": "http://scripting.com/2024/10/07.html#a121515",
    "description": "Today is the 30th anniversary of this blog. Hola!",
    "author": "",
    "published": "Mon, 07 Oct 2024 12:15:15 GMT",
    "image": "",
    "source": "http://scripting.com/rss.xml",
    "categories": null
  },
  {
    "id": "3643e6ad-d407-4700-8ccd-3c7cc07d42c5",
    "title": "",
    "link": "http://scripting.com/2024/10/07.html#a170303",
    "description": "I did a roundup of thoughts when this blog turned 25. I stand by what I wrote then, but I'd add this. My blog started because I needed content to test a script I had written that sent emails on my Mac using Eudora, which was an early scriptable app and I had a nice scripting system that worked with it. I looked around for something to send (30 years ago today), and shot out an email to the people whose business cards I had collected at various tech conferences. It was a thrill, so I did it again, and again and three more times, before I realized hey I could use this thing to get my own ideas out there. And thus began this thing that I still do to this day. Look at the two posts I wrote about WordPress in the last few days. There may be hope to find a blogosphere buried somewhere in there. And it may be possible to give them some sweet new writing tools so they can get excited about writing on the web the way we did all those years ago. I actually am kind of optimistic about that. Maybe we can stand up something in the midst of the noise. When we booted up podcasting, approx 20 years ago, we had a slogan -- \"Users and developers party together.\" It worked! That is still the way I want to build stuff, it's the only way I know how to do it. Blogging started out as a programming adventure and eventually became a form of literature. How about that. I'm up for doing more of that if you all are. But please expect to make contributions, don't expect it all to come to you for free, because as we know nothing really is free.",
    "author": "",
    "published": "Mon, 07 Oct 2024 17:03:03 GMT",
    "image": "https://imgs.scripting.com/2023/10/25/mookieWilson.png",
    "source": "http://scripting.com/rss.xml",
    "categories": null
  },
  {
    "id": "6c6ba81d-e0f9-440a-bf23-af4afa700a23",
    "title": "",
    "link": "http://scripting.com/2024/10/07.html#a121544",
    "description": "Today's the big day. Thanks to John Naughton's wonderful piece in the Guardian, I'm hearing from people all over the world about what blogging means to them. I appreciate all of the messages, but would appreciate them even more if they were on your blog. We need to keep using the tech. Blogging is kind of lost, and I would like to see that change. Every time you post something you're proud of on a social media site, how about taking a moment and posting it to your blog too. And while there, if appropriate, link to something from some part of your post, even though the social media sites don't support linking, the web is still there and it still does.",
    "author": "",
    "published": "Mon, 07 Oct 2024 12:15:44 GMT",
    "image": "",
    "source": "http://scripting.com/rss.xml",
    "categories": null
  },
  {
    "id": "62b3bb23-bd81-42ea-b627-06998be141b6",
    "title": "",
    "link": "http://scripting.com/2024/10/07.html#a121916",
    "description": "Interestingly, the clock at the bottom of the nightly emails does not agree with the clock on the home page of Scripting News. It's a hard thing to test in real life. And it's completely fitting, given the motto of the blog is: it's even worse than it appears, which could be the motto of all programmers everywhere, and probably bloggers too. We always focus on the bad news, of course -- that's human nature -- but always remember, it could actually be worse.",
    "author": "",
    "published": "Mon, 07 Oct 2024 12:19:16 GMT",
    "image": "",
    "source": "http://scripting.com/rss.xml",
    "categories": null
  },
  {
    "id": "b5538671-ec73-4512-aceb-a4cd0a44cb88",
    "title": "Pseudo code and kitchen-table conversations",
    "link": "http://scripting.com/2024/10/07/135828.html?title=pseudoCodeAndKitchentableConversations",
    "description": "Today's podcast has nothing to do with the 30 year milestone, except that it is totally unscripted, stream of consciousness, for 30 minutes, on two topics. The idea of what a programming language is, is about to be completely overturned. The verbs and nouns will, at least at first, be pretty much exactly like we do it now, but the way you specify how they work, how they interact both in the UI and on the backend, will be done more or less as you would document the user interface. The AI system is almost ready to work at that level. With a few more iterations by human designers it should all meet up in a place where the slogging type work I've been doing for 50+ years will be obsolete. We will all become anachronisms. All of us. Get ready for it. And btw I was the biggest skeptic of the idea of a higher level more human way of programming. Scoffed at the idea. Repeatedly. Never say you can't teach an old dog new tricks. The second part is about kitchen-table conversations in families, the bored rantings of our ancestors, passed on lovingly from generation to generation. Should have realized that we did not turn a racial corner with the election of Obama, we all should have gotten prepared for the backlash from children of the slavers and fascists, who were raised alongside us as victims of slavery and fascism were raised to feel persecuted. We all revert to our comfortable roles. The question is can we rise above that and forget for a moment what our ancestors taught us as gospel and take an interest in going beyond that, or do we have to do another loop around the genocide and its consequences, which this time will be far worse than they were in the 1940s because of all the new war and computer tech and the damage done by the post-war growth. I feel good about this podcast, because it has nothing to do with the milestone. I have an idea of what it feels like to have been blogging for 30 years, but no conclusions to offer that would mean anything to me or anyone else, except perhaps a psychologist. I've been watching a lot of sports recently and the interviews with star athletes saying the same predictable bullshit after being asked how it felt to do whatever heroic thing they just did. All of TV and news is like that, none of it is news, all of it is predictable bullshit. That is probably why they have so much trouble reporting the truth about Trump and Musk. It doesn't fit into their job description, it's not in anyone's job to tell the truth. And that's the truth.",
    "author": "",
    "published": "Mon, 07 Oct 2024 13:58:28 GMT",
    "image": "https://s3.amazonaws.com/scripting.com/publicfolder/downloads/podcasts/2024/10/07/pseudoCodeAndKitchenTableConversations.m4a",
    "source": "http://scripting.com/rss.xml",
    "categories": null
  },
  {
    "id": "c0671f07-c474-4a31-9aa5-830a82ddb310",
    "title": "Testimony before the North Dakota Senate Industry, Business and Labor Committee",
    "link": "https://signalvnoise.com/svn3/testimony-before-the-north-dakota-senate-industry-business-and-labor-committee/",
    "description": "Chairman Klein and members of the Senate Industry, Business and Labor Committee- My name is David Heinemeier Hansson, and I’m the CTO and co-founder of Basecamp, a small internet company from Chicago that sells project-management software and email services. I first testified on the topic of big tech monopolies at the House Antitrust Subcommittee’s field… keep reading",
    "author": "DHH",
    "published": "Tue, 09 Feb 2021 18:04:30 +0000",
    "image": "",
    "source": "https://signalvnoise.com/posts.rss",
    "categories": [
      "Uncategorized"
    ]
  },
  {
    "id": "1b984801-16f0-499a-9d18-38aa8eb17fe9",
    "title": "Reiterating our Use Restrictions Policy",
    "link": "https://signalvnoise.com/svn3/reiterating-our-use-restrictions-policy/",
    "description": "The attack on the US Capitol, and subsequent threats of violence surrounding the inauguration of the new US administration, has moved us to reflect and reacquaint ourselves with the reality that however good the maker’s intentions, technology can amplify the ability to cause great harm. This includes us and our products at Basecamp. Therefore, we… keep reading",
    "author": "Jason Fried",
    "published": "Mon, 18 Jan 2021 17:11:00 +0000",
    "image": "",
    "source": "https://signalvnoise.com/posts.rss",
    "categories": [
      "Uncategorized"
    ]
  },
  {
    "id": "514939ed-d7af-40b1-bbf0-5f9d02a276b1",
    "title": "HTML over the wire",
    "link": "https://signalvnoise.com/svn3/html-over-the-wire/",
    "description": "You can write fast, modern, responsive web applications by generating your HTML on the server, and delivering that (with a little help) directly to the browser. You don’t need JSON as an in-between format. You don’t need client-side MVC frameworks. You don’t need complicated bundling and transpiling pipelines. But you do need to think different.… keep reading",
    "author": "DHH",
    "published": "Wed, 23 Dec 2020 13:34:04 +0000",
    "image": "",
    "source": "https://signalvnoise.com/posts.rss",
    "categories": [
      "Uncategorized"
    ]
  },
  {
    "id": "8ea6031d-82f6-4c60-a278-205cf2360e6d",
    "title": "Validation is a mirage",
    "link": "https://signalvnoise.com/svn3/validation-is-a-mirage/",
    "description": "Spend enough time talking with entrepreneurs, product people, designers, and anyone charged with proving something, and you’ll bump into questions about validation. “How do you validate if it’s going to work?”“How do you know if people will buy it to not?”“How do you validate product market fit?”“How do you validate if a feature is worth… keep reading",
    "author": "Jason Fried",
    "published": "Tue, 22 Dec 2020 17:07:56 +0000",
    "image": "",
    "source": "https://signalvnoise.com/posts.rss",
    "categories": [
      "Uncategorized"
    ]
  },
  {
    "id": "6784e839-5464-408a-8f08-9cd99b5576f6",
    "title": "The Making of a Dumpster Fire",
    "link": "https://signalvnoise.com/svn3/the-making-of-a-dumpster-fire/",
    "description": "A few weeks ago we launched a new marketing project for HEY.com at dumpsterfire.email. If you haven’t seen it yet, it’s a flaming dumpster with a printer and conveyor. You email dumpsterfire@hey.com, it prints out your email, and drops it into the rolling flames on a livestream. Simple, right? What follows is far more than… keep reading",
    "author": "Andy Didorosi",
    "published": "Tue, 15 Dec 2020 16:26:55 +0000",
    "image": "/assets/svn3/images/2020/12/dbc-dumpsterfire-022.jpg",
    "source": "https://signalvnoise.com/posts.rss",
    "categories": [
      "Marketing"
    ]
  },
  {
    "id": "43428d99-ba6c-459d-89a8-5f8b7d11592e",
    "title": "How to waste half a day by not reading RFC 1034",
    "link": "https://signalvnoise.com/svn3/how-to-waste-half-a-day-by-not-reading-rfc-1034/",
    "description": "HEY uses a branch deploy system that I’ve written about here on SvN and talked about frequently on Twitter. Plenty of other companies have implemented their own version of branch deploys (typically under a different name), but this was my own implementation, so I’m proud of it. First, a primer on how it works: Developer… keep reading",
    "author": "Blake Stoddard",
    "published": "Fri, 30 Oct 2020 20:59:44 +0000",
    "image": "",
    "source": "https://signalvnoise.com/posts.rss",
    "categories": [
      "Tech"
    ]
  },
  {
    "id": "3e9cfb03-0127-4f34-8958-5302426d6f87",
    "title": "Basecamp has offset our cumulative emissions through 2019",
    "link": "https://signalvnoise.com/svn3/basecamp-has-offset-our-cumulative-emissions-through-2019/",
    "description": "Earlier this year, we announced that Basecamp was committing to getting to carbon negative for our cumulative history and moving forward. Today, I want to share an update on that commitment. Note: I edited this post on Nov 5, 2020 to include the prices paid for all carbon offsets and explain a little more about the… keep reading",
    "author": "Jane Yang",
    "published": "Fri, 30 Oct 2020 19:07:02 +0000",
    "image": "",
    "source": "https://signalvnoise.com/posts.rss",
    "categories": [
      "Uncategorized"
    ]
  },
  {
    "id": "eff00bdc-7eeb-4560-92f8-fd2df0b31ac2",
    "title": "Introducing the Basecamp security bug bounty",
    "link": "https://signalvnoise.com/svn3/introducing-the-basecamp-security-bug-bounty/",
    "description": "We’ve run a private security bug bounty program since 2014. Invited testers reported numerous security vulnerabilities to us, many of them critical. We investigated and fixed the vulnerabilities they reported and thanked them with cash rewards. Before 2014, and concurrently with the private bounty program, we ran a public “Hall of Fame” program where we… keep reading",
    "author": "George Claghorn",
    "published": "Tue, 27 Oct 2020 18:57:41 +0000",
    "image": "",
    "source": "https://signalvnoise.com/posts.rss",
    "categories": [
      "Uncategorized"
    ]
  },
  {
    "id": "65bc2368-43cf-4e48-b672-824914363116",
    "title": "Don’t take their word for it",
    "link": "https://signalvnoise.com/svn3/dont-take-their-word-for-it/",
    "description": "A few weeks ago, we needed some hardware fast. After some back and forth with the vendor, they promised “expedited delivery”. That sounded like a good thing, but it meant nothing. To us, expedited delivery meant overnight delivery. That’s what we had in our head. Our experiences elsewhere equated expedited as overnight, but expedited isn’t… keep reading",
    "author": "Jason Fried",
    "published": "Fri, 02 Oct 2020 17:34:06 +0000",
    "image": "",
    "source": "https://signalvnoise.com/posts.rss",
    "categories": [
      "Uncategorized"
    ]
  },
  {
    "id": "563dacc6-c8b1-43a5-afa6-5514ac75cee8",
    "title": "Demand Side Sales 101, a new book on sales by Bob Moesta.",
    "link": "https://signalvnoise.com/svn3/demand-side-sales-101-a-new-book-on-sales-by-bob-moesta/",
    "description": "Bob Moesta is a dear friend, mentor, and all around original thinker. He’s helped me see around corners, shine lights on things I didn’t know were there, and approach product development from unusual angles. Every time we talk, I come away inspired and full of optimism. So when he asked me to help him with… keep reading",
    "author": "Jason Fried",
    "published": "Tue, 22 Sep 2020 21:16:39 +0000",
    "image": "",
    "source": "https://signalvnoise.com/posts.rss",
    "categories": [
      "Uncategorized"
    ]
  },
  {
    "id": "8521385f-5309-4161-9186-192c761a91b0",
    "title": "SE Radio 637: Steve Smith on Software Quality",
    "link": "http://se-radio.net/se-radio-637-steve-smith-on-software-quality",
    "description": "Steve Smith, founder and principal architect at Nimble Pros, joins host Jeff Doolittle for a conversation about software quality. The episode begins with a discussion of why software quality matters for businesses, customers, and developers. Steve explains some patterns and practices that help teams design for quality. They discuss in detail the practices of testing and quality assurance, and the conversation wraps up with suggestions for fostering a culture of quality in teams and organizations. Brought to you by IEEE Computer Society and IEEE Software magazine.",
    "author": "SE-Radio Team",
    "published": "Thu, 10 Oct 2024 21:33:00 +0000",
    "image": "https://traffic.libsyn.com/secure/seradio/637-steve-smith-software-quality.mp3?dest-id=23379",
    "source": "http://feeds.feedburner.com/se-radio",
    "categories": [
      "design",
      "quality",
      "code",
      "lean",
      "testing",
      "tests",
      "refactoring",
      "encapsulation",
      "information hiding"
    ]
  },
  {
    "id": "fc243afb-375f-4218-b0ad-45b535bf391b",
    "title": "SE Radio 636: Sriram Panyam on SaaS Control Planes",
    "link": "http://se-radio.net/se-radio-636-sriram-panyam-on-saas-control-planes",
    "description": "Sriram Panyam, CTO at DagKnows, discusses SaaS Control Planes with SE Radio host Brijesh Ammanath. The discussion starts off with the basics, examining what control planes are and why they're important. Sriram then discusses reasons for building a control plane and the challenges in designing one. They explore design and architectural considerations when building a SaaS control plane, as well as the key differences between a control plane and a data plane. This episode is sponsored by QA Wolf.",
    "author": "SE-Radio Team",
    "published": "Wed, 02 Oct 2024 07:36:00 +0000",
    "image": "https://traffic.libsyn.com/secure/seradio/636-sriram-panyam-saas-control-planes.mp3?dest-id=23379",
    "source": "http://feeds.feedburner.com/se-radio",
    "categories": [
      "Architecture",
      "saas",
      "distributed systems",
      "control plane"
    ]
  },
  {
    "id": "88635b0b-dac7-49a1-882b-75ead53b6eb3",
    "title": "SE Radio 635: Stevie Caldwell on Zero-Trust Architecture",
    "link": "http://se-radio.net/se-radio-635-stevie-caldwell-on-zero-trust-architecture",
    "description": "Stevie Caldwell, Senior Engineering Technical Lead at Fairwinds, joins host Priyanka Raghavan to discuss zero-trust network reference architecture. The episode begins with high-level definitions of zero-trust architecture, zero-trust reference architecture, and the pillars of Zero Trust. Stevie describes four open-source implementations of the Zero Trust Reference Architecture: Emissary Ingress, Cert Manager, LinkerD, and the Policy Engine Polaris. Each component is explored to help clarify their roles in the Zero Trust journey. The episode concludes with a look at the future direction of Zero Trust Network Architecture. This episode is sponsored by QA Wolf.",
    "author": "SE-Radio Team",
    "published": "Thu, 26 Sep 2024 21:33:00 +0000",
    "image": "https://traffic.libsyn.com/secure/seradio/635-stevie-caldwell-zero-trust-architecture.mp3?dest-id=23379",
    "source": "http://feeds.feedburner.com/se-radio",
    "categories": [
      "networks",
      "security",
      "OPA",
      "zerotrust",
      "zero trust"
    ]
  },
  {
    "id": "7cbd455d-175d-45ac-b578-22ee29d85e29",
    "title": "SE Radio 634: Jim Bugwadia on Kubernetes Policy as Code",
    "link": "http://se-radio.net/se-radio-634-jim-bugwadia-on-kubernetes-policy-as-code",
    "description": "Jim Bugwadia, CEO of Nirmata and a committer to the Kyverno projects, joins host Robert Blumen for a discussion of policy-as-code and the open source Kyverno project. The discussion covers the nature of policies; policies and security; policies and compliance to standards; security scans that generate reports compared to tools that allow or deny operations at run time; Kyverno as a kubernetes service; the Kyverno helm charts; the components of Kyverno; bootstrapping a kubernetes cluster with Kyverno; installing policies; implementing policies; customizing policies; packaging and installing policies; kubernetes dynamic admission controllers; the Kyverno admission controller; securing Kyverno itself; observability of Kyverno; types of reports and messages available to cluster users. This episode is sponsored by QA Wolf.",
    "author": "SE-Radio Team",
    "published": "Wed, 25 Sep 2024 23:57:00 +0000",
    "image": "https://traffic.libsyn.com/secure/seradio/634-jim-bugwadia-kubernetes-policy.mp3?dest-id=23379",
    "source": "http://feeds.feedburner.com/se-radio",
    "categories": [
      "kubernetes; security; devops; DevSecOps"
    ]
  },
  {
    "id": "131ff463-d17c-4441-9bc3-69eec1f7c05b",
    "title": "SE Radio 633: Itamar Friedman on Automated Testing with Generative AI",
    "link": "http://se-radio.net/se-radio-633-itamar-friedman-on-automated-testing-with-generative-ai",
    "description": "Itamar Friedman, the CEO and co-founder of CodiumAI, speaks with host Gregory M. Kapfhammer about how to use generative AI techniques to support automated software testing. Their discussion centers around the design and use of Cover-Agent, an open-source implementation of the automated test augmentation tool described in the Foundations of Software Engineering (FSE) paper entitled “Automated Unit Test Improvement using Large Language Models at Meta“ by Alshahwan et al. The episode explores how large-language models (LLMs) can aid testers by automatically generating test cases that increase the code coverage of an existing testing suite. They also investigate other automated testing topics, including how Cover-Agent compares to different LLM-based tools and the strengths and weaknesses of using LLM-based approaches in software testing.",
    "author": "SE-Radio Team",
    "published": "Wed, 11 Sep 2024 23:52:00 +0000",
    "image": "https://traffic.libsyn.com/secure/seradio/633-itamar-friedman-testing-generative-ai.mp3?dest-id=23379",
    "source": "http://feeds.feedburner.com/se-radio",
    "categories": [
      "testing",
      "AI",
      "LLM",
      "large language model"
    ]
  },
  {
    "id": "541403d5-f02c-422a-85cb-a8a3348c4219",
    "title": "SE Radio 632: Goran Petrovic on Mutation Testing at Google",
    "link": "http://se-radio.net/se-radio-632-goran-petrovic-on-mutation-testing-at-google",
    "description": "Goran Petrovic, a Staff Software Engineer at Google, speaks with host Gregory M. Kapfhammer about how to perform mutation testing on large software systems. They explore the design and implementation of the mutation testing infrastructure at Google, discussing the strategies for ensuring that it enhances both developer productivity and software quality. They also investigate the findings from experiments that quantify how mutation testing enables software engineers at Google to write better tests that can detect defects and increase confidence in software correctness. Brought to you by IEEE Computer Society and IEEE Software magazine.",
    "author": "SE-Radio Team",
    "published": "Thu, 05 Sep 2024 00:45:00 +0000",
    "image": "https://traffic.libsyn.com/secure/seradio/632-goran-petrovic-mutation-testing-at-google.mp3?dest-id=23379",
    "source": "http://feeds.feedburner.com/se-radio",
    "categories": [
      "software testing",
      "mutation testing"
    ]
  },
  {
    "id": "dc2884da-7b58-4796-a5bf-5e1b1db2f6b3",
    "title": "SE Radio 631: Abhay Paroha on Cloud Migration for Oil and Gas Operations",
    "link": "http://se-radio.net/se-radio-631-abhay-paroha-on-cloud-migration-for-oil-and-gas-operations",
    "description": "Abhay Paroha, an engineering leader with more than 15 years' experience in leading product dev teams, joins SE Radio's Kanchan Shringi to talk about cloud migration for oil and gas production operations. They discuss Abhay's experiences in building a cloud foundation layer that includes a canonical data model for storing bi-temporal data. They further delve into his teams' learnings from using Kubernetes for microservices, the transition from Java to Scala, and use of Akka streaming, along with tips for ensuring reliable operations. Brought to you by IEEE Computer Society and IEEE Software magazine.",
    "author": "SE-Radio Team",
    "published": "Wed, 28 Aug 2024 23:14:00 +0000",
    "image": "https://traffic.libsyn.com/secure/seradio/631-abhay-paroha-cloud-migration.mp3?dest-id=23379",
    "source": "http://feeds.feedburner.com/se-radio",
    "categories": [
      "Kubernetes",
      "KEDA",
      "cloud migration",
      "data ingestion",
      "data model",
      "cloud agnostic",
      "bi-temporal",
      "datomic",
      "bigtable",
      "time series",
      "Akka streaming",
      "actor framework"
    ]
  },
  {
    "id": "a099a047-cd9b-4ff5-967a-d8daa490099a",
    "title": "SE Radio 630: Luis Rodríguez on the SSH Backdoor Attack",
    "link": "http://se-radio.net/se-radio-630-luis-rodrguez-on-the-ssh-backdoor-attack",
    "description": "Luis Rodríguez, CTO of Xygeni.io, joins host Robert Blumen for a discussion of the recently thwarted attempt to insert a backdoor in the SSH (Secure Shell) daemon. OpenSSH is a popular implementation of the protocol used in major Linux distributions for authentication over a network. Luis describes how a backdoor in a supporting library was recently discovered and removed before the package was published to stable releases of the Linux distros. The conversation explores the mechanism of the attack through modifying a function table in the runtime; how the attack was inserted during the build; how the attack was carefully staged in a series of modifications to the lz compression library; the nature of “Jia Tan,” the entity who committed the changes to the open source project; social engineering that the entity used to gain the trust of the open source community; what forensics indicates about the location of the entity; hypotheses about whether criminal or state actors backed the entity; how the attack was detected; implications for other open source projects; why traditional methods for detecting exploits would not have helped find this; and lessons learned by the community. Brought to you by IEEE Computer Society and IEEE Software magazine.",
    "author": "SE-Radio Team",
    "published": "Thu, 22 Aug 2024 20:59:00 +0000",
    "image": "https://traffic.libsyn.com/secure/seradio/630-luis-rodriguez-ssh-backdoor-attack.mp3?dest-id=23379",
    "source": "http://feeds.feedburner.com/se-radio",
    "categories": [
      "security",
      "supply chain",
      "Open Source",
      "C language",
      "threat modeling"
    ]
  },
  {
    "id": "7ad652ef-8a7c-4261-94e0-32441137c2b6",
    "title": "SE Radio 629: Emily Bache on Katas and the Importance of Practice",
    "link": "http://se-radio.net/se-radio-629-emily-bache-on-katas-and-the-importance-of-practice",
    "description": "Emily Bache, founder of the Samman Technical Coaching Society and author of several books about technical agile coaching, talks with SE Radio host Sam Taggart about katas and the importance of practice. They discuss how practicing in a safe environment helps developers to learn new skills and build new habits. They also talk about how Samman coaching combines this sort of deliberate practice with applying the lessons learned in practice to the production code base. They also touch briefly on the advantages of working in an ensemble fashion. Brought to you by IEEE Computer Society and IEEE Software magazine.",
    "author": "SE-Radio Team",
    "published": "Tue, 13 Aug 2024 20:39:00 +0000",
    "image": "https://traffic.libsyn.com/secure/seradio/629-emily-bache-katas.mp3?dest-id=23379",
    "source": "http://feeds.feedburner.com/se-radio",
    "categories": [
      "training",
      "Agile",
      "testing",
      "refactoring",
      "kata",
      "Samman",
      "mob programming",
      "ensemble programming"
    ]
  },
  {
    "id": "e12e4c3b-8df9-41ea-bbe2-5aaa767a67c6",
    "title": "SE Radio 628: Hans Dockter on Developer Productivity",
    "link": "http://se-radio.net/se-radio-628-hans-dockter-on-developer-productivity",
    "description": "Hans Dockter, the creator of the Gradle build tool and founder of Gradle Inc, the company behind the developer productivity platform Develocity, joins SE Radio host Giovanni Asproni to talk about developer productivity. They start with some definitions and an explanation of the importance of developer productivity, its relationship with cognitive load, and the big impact that development tools have on it. Hans describes how to implement developer productivity metrics in an organization, as well as warns about some pitfalls. The episode closes with some discussion on Hans's views on the future of this discipline, as well as some near-term developments and expectations. Brought to you by IEEE Computer Society and IEEE Software magazine.",
    "author": "SE-Radio Team",
    "published": "Wed, 07 Aug 2024 18:26:00 +0000",
    "image": "https://traffic.libsyn.com/secure/seradio/628-hans-dockter-developer-productivity.mp3?dest-id=23379",
    "source": "http://feeds.feedburner.com/se-radio",
    "categories": [
      "software development",
      "software engineer",
      "Developer Productivity",
      "Cognitive Fatigue"
    ]
  },
  {
    "id": "33744341-fce9-4d32-98db-b35b3bd66d3f",
    "title": "SE Radio 627: Chuck Weindorf on Leaders and Software Engineers",
    "link": "http://se-radio.net/se-radio-627-chuck-weindorf-on-leaders-and-software-engineers",
    "description": "Chuck Weindorf, a retired IT director and chief engineer with nearly 40 years' experience in software engineering, joins host Jeff Doolittle for a conversation about the concepts in Chuck's book, Leaders \u0026 Software Engineers. Through personal anecdotes and insights gleaned from his extensive career, Chuck underscores quality assurance's critical role in building trust with users and fostering a proactive culture of defect resolution within development teams. He highlights how ethical considerations underpin trust and integrity within the software engineering profession. Chuck and Jeff examine the significance of thorough documentation and the vital role of effective communication in overcoming silos within organizations, and ensuring that projects meet their intended objectives while maintaining high standards of quality and reliability. They discuss how to cultivate a positive, innovative culture within engineering teams. Chuck shares strategies for addressing challenges and opportunities presented by change, advocating for adaptability and continuous learning as essential qualities for both new and experienced engineers navigating the evolving technological landscape. He offers advice for those transitioning into leadership roles, emphasizing the importance of developing soft skills and the ability to empathize with and inspire team members. Finally, the episode explores the potential impact of emerging technologies, such as low-code platforms and artificial intelligence. Brought to you by IEEE Computer Society and IEEE Software magazine.",
    "author": "SE-Radio Team",
    "published": "Wed, 31 Jul 2024 22:24:00 +0000",
    "image": "https://traffic.libsyn.com/secure/seradio/627-Chuck-Weindorf-leaders-and-software-engineers.mp3?dest-id=23379",
    "source": "http://feeds.feedburner.com/se-radio",
    "categories": [
      "design",
      "software",
      "systems",
      "role",
      "leadership",
      "engineering",
      "Architecture",
      "architect",
      "responsibility"
    ]
  },
  {
    "id": "1c40b39a-b245-46c2-bf17-33d807edcdb8",
    "title": "SE Radio 626: Ipek Ozkaya on Gen AI for Software Architecture",
    "link": "http://se-radio.net/se-radio-626-ipek-ozkaya-on-gen-ai-for-software-architecture",
    "description": "Ipek Ozkaya, Principal Researcher and Technical Director of the Engineering Intelligent Software Systems group at the Software Engineering Institute, Carnegie Mellon, discusses generative AI for Software Architecture with SE Radio host Priyanka Raghavan. The episode delves into fundamental definitions of software architecture and explores use cases in which gen AI can enhance architecture activities. The conversation spans from straightforward to challenging scenarios and highlights examples of relevant tooling. The episode concludes with insights on verifying the correctness of output for software architecture prompts and future trends in this domain. Brought to you by IEEE Computer Society and IEEE Software magazine.",
    "author": "SE-Radio Team",
    "published": "Tue, 23 Jul 2024 23:30:00 +0000",
    "image": "https://traffic.libsyn.com/secure/seradio/626-ipek-ozkaya-genAI-software-architecture.mp3?dest-id=23379",
    "source": "http://feeds.feedburner.com/se-radio",
    "categories": [
      "copilot",
      "LLM",
      "Generative AI",
      "Large language models",
      "gen ai",
      "software architecture"
    ]
  },
  {
    "id": "23a4dad0-435b-40fa-adf9-cdd9139a5281",
    "title": "SE Radio 625: Jonathan Schneider on Automated Refactoring with OpenRewrite",
    "link": "http://se-radio.net/se-radio-625-jonathan-schneider-on-automated-refactoring-with-openrewrite",
    "description": "Jonathan Schneider, the cofounder of Moderne and the creator of OpenRewrite, talks with SE Radio's Gregory Kapfhammer about automated software maintenance. In addition to exploring the design and implementation of OpenRewrite, Schneider explains how the tool can automatically support software maintenance tasks such as framework migration and security fixes for programs implemented in languages like Java. The episode also explores how OpenRewrite uses the lossless semantic tree to support automated refactoring though the use of recipes. Brought to you by IEEE Computer Society and IEEE Software magazine.",
    "author": "SE-Radio Team",
    "published": "Tue, 16 Jul 2024 23:17:00 +0000",
    "image": "https://traffic.libsyn.com/secure/seradio/625-jonathan-schneider-automated-refactoring.mp3?dest-id=23379",
    "source": "http://feeds.feedburner.com/se-radio",
    "categories": [
      "quality",
      "Java",
      "testing",
      "refactoring"
    ]
  },
  {
    "id": "ca163596-1cf3-4b8b-9274-75577ebae695",
    "title": "SE Radio 624: Marcelo Trylesinski on FastAPI",
    "link": "http://se-radio.net/se-radio-624-marcelo-trylesinski-on-fastapi",
    "description": "Marcelo Trylesinski, a senior software engineer at Pydantic and a maintainer of open-source Python tools including Starlette and Uvicorn, joins host Gregory M. Kapfhammer to talk about FastAPI. Their conversation focuses on the design and implementation of FastAPI and how programmers can use it to create web-based APIs. They also explore how to create and deploy a FastAPI implemented in the Python programming language. Brought to you by IEEE Computer Society and IEEE Software magazine.",
    "author": "SE-Radio Team",
    "published": "Tue, 16 Jul 2024 20:03:00 +0000",
    "image": "https://traffic.libsyn.com/secure/seradio/624-marcelo_trylesinski_on_fastAPI.mp3?dest-id=23379",
    "source": "http://feeds.feedburner.com/se-radio",
    "categories": [
      "python",
      "API",
      "Rest"
    ]
  },
  {
    "id": "13b3e390-f82d-437c-b438-87f29126b90b",
    "title": "SE Radio 623: Michael J. Freedman on TimescaleDB",
    "link": "http://se-radio.net/se-radio-623-mike-freedman-on-timescaledb",
    "description": "Michael J. Freedman, the Robert E. Kahn Professor in the Computer Science Department at Princeton University, as well as the co-founder and CTO of Timescale, spoke with SE Radio host Gavin Henry about TimescaleDB. They revisit what time series data means in 2024, the history of TimescaleDB, how it integrates with PostgreSQL, and they take the listeners through a complete setup. Freedman discusses the types of data well-suited for a timeseries database, the types of sectors that have these requirements, why PostgreSQL is the best, Pg callbacks, Pg hooks, C programming, Rust, their open source contributions and projects, data volumes, column-data, indexes, backups, why it is common to have one table for your timeseries data, when not to use timescaledb, IoT data formats, Pg indexes, how Pg works without timescaledb, sharding, and how to manage your upgrades if not using Timescale Cloud. Brought to you by IEEE Computer Society and IEEE Software magazine.",
    "author": "SE-Radio Team",
    "published": "Wed, 03 Jul 2024 00:04:00 +0000",
    "image": "https://traffic.libsyn.com/secure/seradio/623-mike_freedman_timescaleDB.mp3?dest-id=23379",
    "source": "http://feeds.feedburner.com/se-radio",
    "categories": [
      "ops",
      "scale",
      "Backups",
      "rust",
      "PostgreSQL",
      "indexes",
      "IoT",
      "timeseries",
      "Open Source",
      "c programming",
      "timescaledb",
      "timescale"
    ]
  },
  {
    "id": "b0f0c37f-8376-46fe-aab6-3bc55a87f8d1",
    "title": "SE Radio 622: Wolf Vollprecht on Python Tooling in Rust",
    "link": "http://se-radio.net/se-radio-622-wolf-vollprecht-on-python-tooling-in-rust",
    "description": "Wolf Vollprecht, the CEO and founder of Prefix.dev, speaks with host Gregory M. Kapfhammer about how to implement Python tools, such as package managers, in the Rust programming language. They discuss the challenges associated with building Python infrastructure tooling in Python and explore how using the Rust programming language addresses these concerns. They also explore the implementation details of Rust-based tooling for the Python ecosystem, focusing on the cross-platform Pixi package management tool, which enables developers to easily and efficiently install libraries and applications in a reproducible fashion. Brought to you by IEEE Computer Society and IEEE Software magazine.",
    "author": "SE-Radio Team",
    "published": "Wed, 26 Jun 2024 16:36:00 +0000",
    "image": "https://traffic.libsyn.com/secure/seradio/622-wolf_vollprecht_python_tooling_in_rust.mp3?dest-id=23379",
    "source": "http://feeds.feedburner.com/se-radio",
    "categories": [
      "python",
      "tooling",
      "rust",
      "programming languages",
      "package management"
    ]
  },
  {
    "id": "c5bb95fc-9425-41dd-b3e0-3d85ecf60334",
    "title": "SE Radio 621: Xe Iaso on Fly.io",
    "link": "http://se-radio.net/se-radio-621-xe-iaso-on-flyio",
    "description": "Xe Iaso of Fly.io discusses their hosting platform with host Jeremy Jung. They cover building globally distributed applications with Anycast, using Wireguard to encrypt inter-service communication, writing custom code to handle load balancing and scaling with fly-proxy, why serving EU customers has unique requirements, letting users use docker images without the docker runtime by converting them to firecracker and cloud hypervisor microVMs, the differences between regular VMs and microVMs, challenges of acquiring and serving GPUs to customers. when to use Kubernetes, and dealing with abuse on the platform. Brought to you by IEEE Computer Society and IEEE Software magazine.",
    "author": "SE-Radio Team",
    "published": "Wed, 19 Jun 2024 16:26:00 +0000",
    "image": "https://traffic.libsyn.com/secure/seradio/621-xe_iaso_on_fly.io.mp3?dest-id=23379",
    "source": "http://feeds.feedburner.com/se-radio",
    "categories": [
      "PaaS",
      "Firecracker",
      "Docker",
      "Kubernetes",
      "GPUs",
      "wireguard",
      "cloud hypervisor",
      "platform as a service"
    ]
  },
  {
    "id": "0be691eb-ba04-4c49-a845-b351e5673f4f",
    "title": "SE Radio 620: Parker Selbert and Shannon Selbert on Robust Job Processing in Elixir",
    "link": "http://se-radio.net/se-radio-620-parker-selbert-and-shannon-selbert-on-robust-job-processing-in-elixir",
    "description": "Shannon Selbert, co-founder of Soren and developer of Oban, and Parker Selbert, creator of the Oban background job framework, chief architect at dscout, and co-founder of Soren, speak with SE Radio host Gavin Henry about robust job processing in Elixir. They explore the reliability, consistency, and observability in relation to job processing, to understand how Oban, Elixir, and PostgreSQL deliver them. The Selberts describe why Oban was created, its history, which parts of the Elixir ecosystem they use, and why this would not be possible without PostgreSQL and Elixir. They discuss the lessons learned in the 5 years since the first release, as well as use cases, job throughput, the hardest problem to solve so far, workers, queues, CRON, distributed architectures, retry algorithms, just-once methodologies, the reliability the beam brings, consistency across nodes, how PostgreSQL is vital, telemetry data, best use cases for Oban, and the most common issues that new users face. Brought to you by IEEE Computer Society and IEEE Software magazine.",
    "author": "SE-Radio Team",
    "published": "Wed, 12 Jun 2024 18:08:00 +0000",
    "image": "https://traffic.libsyn.com/secure/seradio/620-parker_selbert_and_shannon_selbert_on_elixir.mp3?dest-id=23379",
    "source": "http://feeds.feedburner.com/se-radio",
    "categories": [
      "jobs",
      "beam",
      "workers",
      "nerves",
      "sqlite",
      "elixir",
      "consistency",
      "Reliability",
      "queues",
      "PostgreSQL",
      "nodes",
      "oban",
      "telemetry",
      "Observability",
      "retry algorithms"
    ]
  },
  {
    "id": "510c2746-4663-426b-a425-872160e5f976",
    "title": "SE Radio 619: James Strong on Kubernetes Networking",
    "link": "http://se-radio.net/se-radio-619-james-strong-on-kubernetes-networking",
    "description": "Infrastructure engineer and Kubernetes ingress-Nginx maintainer James Strong joins host Robert Blumen to discuss the Kubernetes networking layer. The discussion draws on content from Strong’s book on the topic and covers a lot of ground, including: the Kubernetes network's use of different IP ranges than the host network; overlay network with its own IP ranges compared to using expanded portions of the host network ranges; adding routes with kernel extension points; programming kernel extension points with IP tables compared to eBPF; how routes are updated as the host network gains or loses nodes, the use of the Linux network namespace to isolate each pod; routing between pods on the same host; routing between pods across the host network; the container-network interface (CNI); the CNI ecosystem; differences between CNIs; choosing a CNI when running on a public cloud service; the Kubernetes service abstraction with a cluster-wide IP address; monitoring and telemetry of the Kubernetes network; and troubleshooting the Kubernetes network. Brought to you by IEEE Software magazine and IEEE Computer Society.",
    "author": "SE-Radio Team",
    "published": "Wed, 05 Jun 2024 22:13:00 +0000",
    "image": "https://traffic.libsyn.com/secure/seradio/619_james_strong_kubernetes_networking.mp3?dest-id=23379",
    "source": "http://feeds.feedburner.com/se-radio",
    "categories": [
      "Networking",
      "linux",
      "Kubernetes",
      "eBPF",
      "operating systems",
      "distributed systems"
    ]
  },
  {
    "id": "45e02c7a-a63e-43d4-a046-ce65407cb59a",
    "title": "SE Radio 618: Andreas Møller on No-Code Platforms",
    "link": "http://se-radio.net/se-radio-618-andreas-mller-on-no-code-platforms",
    "description": "Andreas Møller, founder of Toddle, a no-code tool for building scalable performant web applications, speaks with SE Radio's Brijesh Ammanath about no-code platforms. They discuss the role of developers in a no-code ecosystem and explore scalability and performance considerations, as well as enterprise adoption of no-code tools. Andreas also expands on why he built Toddle.dev and its unique features. Brought to you by IEEE Computer Society and IEEE Software.",
    "author": "SE-Radio Team",
    "published": "Wed, 29 May 2024 20:27:00 +0000",
    "image": "https://traffic.libsyn.com/secure/seradio/618_andreas_mller_nocode_platforms.mp3?dest-id=23379",
    "source": "http://feeds.feedburner.com/se-radio",
    "categories": [
      "Performance",
      "Development",
      "scalability",
      "no-code",
      "low-code",
      "webb application"
    ]
  },
  {
    "id": "04a930b9-73bb-4b2d-aab9-0fbec448f724",
    "title": "Are You a Dalia? How We Created Data Science Personas for Spotify’s Analytics Platform",
    "link": "https://engineering.atspotify.com/2024/09/are-you-a-dalia-how-we-created-data-science-personas-for-spotifys-analytics-platform/",
    "description": "On Spotify’s Analytics Platform, we’re dedicated to building products that empower data practitioners to discover, analyze, and share insights — [...] The post Are You a Dalia? How We Created Data Science Personas for Spotify’s Analytics Platform appeared first on Spotify Engineering.",
    "author": "Spotify Engineering",
    "published": "Thu, 05 Sep 2024 19:15:45 +0000",
    "image": "",
    "source": "https://labs.spotify.com/feed/",
    "categories": [
      "Data",
      "Data Science",
      "People",
      "Platform",
      "engineering culture"
    ]
  },
  {
    "id": "d3f735af-c258-4a51-8454-a7026ec3df1a",
    "title": "Unlocking Insights with High-Quality Dashboards at Scale",
    "link": "https://engineering.atspotify.com/2024/08/unlocking-insights-with-high-quality-dashboards-at-scale/",
    "description": "We have a lot of dashboards at Spotify. Our Insight teams and analysts from across the company are constantly whipping [...] The post Unlocking Insights with High-Quality Dashboards at Scale appeared first on Spotify Engineering.",
    "author": "Spotify Engineering",
    "published": "Wed, 28 Aug 2024 19:29:39 +0000",
    "image": "",
    "source": "https://labs.spotify.com/feed/",
    "categories": [
      "Data",
      "Data Science",
      "Design",
      "Platform",
      "engineering culture"
    ]
  },
  {
    "id": "76fb36ce-43bf-432f-b6b9-ff0fbf312a93",
    "title": "Technical Decision-Making in a Fragmented Space: Spotify In-Car Case Study",
    "link": "https://engineering.atspotify.com/2024/07/technical-decision-making-in-a-fragmented-space-spotify-in-car-case-study/",
    "description": "Car rides have become connected and interactive these days with drivers jamming to music or catching up on podcasts or [...] The post Technical Decision-Making in a Fragmented Space: Spotify In-Car Case Study appeared first on Spotify Engineering.",
    "author": "Spotify Engineering",
    "published": "Wed, 10 Jul 2024 15:53:29 +0000",
    "image": "",
    "source": "https://labs.spotify.com/feed/",
    "categories": [
      "Developer Tools",
      "Product"
    ]
  },
  {
    "id": "58b599d3-5ef4-4bf0-819f-90c8b0d6b3b7",
    "title": "Data Platform Explained Part II",
    "link": "https://engineering.atspotify.com/2024/05/data-platform-explained-part-ii/",
    "description": "Check out Data Platform Explained Part I, where we started sharing the journey of building a data platform, its building [...] The post Data Platform Explained Part II  appeared first on Spotify Engineering.",
    "author": "Spotify Engineering",
    "published": "Tue, 28 May 2024 18:44:35 +0000",
    "image": "",
    "source": "https://labs.spotify.com/feed/",
    "categories": [
      "Data",
      "Data Science",
      "Platform"
    ]
  },
  {
    "id": "90ba493b-8a5d-4a01-bb31-d0ecf64e01a6",
    "title": "Fixed-Power Designs: It’s Not IF You Peek, It’s WHAT You Peek at",
    "link": "https://engineering.atspotify.com/2024/05/fixed-power-designs-its-not-if-you-peek-its-what-you-peek-at/",
    "description": "TL;DR Sometimes we cannot estimate the required sample size needed to power an experiment before starting it. To alleviate this [...] The post Fixed-Power Designs: It’s Not IF You Peek, It’s WHAT You Peek at appeared first on Spotify Engineering.",
    "author": "Spotify Engineering",
    "published": "Wed, 15 May 2024 15:07:37 +0000",
    "image": "",
    "source": "https://labs.spotify.com/feed/",
    "categories": [
      "Data",
      "Data Science",
      "experimentation"
    ]
  },
  {
    "id": "6c8c2ab6-69cc-4f66-b843-0d3968e3fdaf",
    "title": "We’re All Just Looking for Connection",
    "link": "https://slack.engineering/were-all-just-looking-for-connection/",
    "description": "We’ve been working to bring components of Quip’s technology into Slack with the canvas feature, while also maintaining the stand-alone Quip product. Quip’s backend, which powers both Quip and canvas, is written in Python. This is the story of a tricky bug we encountered last July and the lessons we learned along the way about […] The post We’re All Just Looking for Connection appeared first on Slack Engineering.",
    "author": "Brett Wines",
    "published": "Thu, 10 Oct 2024 21:39:15 +0000",
    "image": "https://slack.engineering/wp-content/uploads/sites/7/2024/10/Image.jpg?w=640",
    "source": "https://slack.engineering/feed",
    "categories": [
      "Uncategorized",
      "database",
      "infrastructure",
      "networking",
      "python"
    ]
  },
  {
    "id": "00775052-0477-495f-9ca6-0498f8afe56f",
    "title": "Driving a Project: Intern Edition",
    "link": "https://slack.engineering/driving-a-project-intern-edition/",
    "description": "After a lot of hard work, you’ve landed that coveted internship. Now comes the next big challenge: delivering a meaningful project over the summer. Leading a project independently is an opportunity to sharpen your skills, demonstrate your capabilities, and experience personal growth. As you drive the project on your own, the support from your mentor […] The post Driving a Project: Intern Edition appeared first on Slack Engineering.",
    "author": "Dylan Steen",
    "published": "Mon, 23 Sep 2024 07:00:03 +0000",
    "image": "https://slack.engineering/wp-content/uploads/sites/7/2024/09/sravya.jpeg?w=640",
    "source": "https://slack.engineering/feed",
    "categories": [
      "Uncategorized",
      "internships"
    ]
  },
  {
    "id": "615fb97f-80dd-4f47-9101-d652a7865fb8",
    "title": "Advancing Our Chef Infrastructure",
    "link": "https://slack.engineering/advancing-our-chef-infrastructure/",
    "description": "At Slack, we manage tens of thousands of EC2 instances that host a variety of services, including our Vitess databases, Kubernetes workers, and various components of the Slack application. The majority of these instances run on some version of Ubuntu, while a portion operates on Amazon Linux. With such a vast infrastructure, the critical question […] The post Advancing Our Chef Infrastructure appeared first on Slack Engineering.",
    "author": "Archie Gunasekara",
    "published": "Tue, 17 Sep 2024 07:00:57 +0000",
    "image": "https://slack.engineering/wp-content/uploads/sites/7/2024/09/dishpig_1_9a3875.png?w=640",
    "source": "https://slack.engineering/feed",
    "categories": [
      "Uncategorized",
      "aws",
      "infrastructure"
    ]
  },
  {
    "id": "c7b94c55-ffd5-4f30-8bbf-fc0ee49cfd6f",
    "title": "Engineering with Empathy: My Journey to Understanding the User Experience",
    "link": "https://slack.engineering/engineering-with-empathy-my-journey-to-understanding-the-user-experience/",
    "description": "“What are your goals for this quarter?” It’s the question every manager asks, and one that often prompts a flurry of technical objectives and project milestones. Jumping into this internship, I knew my answer. I wanted to practice making informed decisions on my project, since that was one of the challenges I faced last summer. […] The post Engineering with Empathy: My Journey to Understanding the User Experience appeared first on Slack Engineering.",
    "author": "Kaili Liang",
    "published": "Fri, 30 Aug 2024 22:54:41 +0000",
    "image": "https://slack.engineering/wp-content/uploads/sites/7/2024/08/lena.jpg?w=395",
    "source": "https://slack.engineering/feed",
    "categories": [
      "Uncategorized",
      "accessibility",
      "frontend",
      "internships"
    ]
  },
  {
    "id": "d4e5ae65-76b9-455d-a129-586111fadd0b",
    "title": "Unified Grid: How We Re-Architected Slack for Our Largest Customers",
    "link": "https://slack.engineering/unified-grid-how-we-re-architected-slack-for-our-largest-customers/",
    "description": "All software is built atop a core set of assumptions. As new code is added and new use-cases emerge, software can become unmoored from those assumptions. When this happens, a fundamental tension arises between revisiting those foundational assumptions—which usually entails a lot of work—or trying to support new behavior atop the existing architecture. The latter […] The post Unified Grid: How We Re-Architected Slack for Our Largest Customers appeared first on Slack Engineering.",
    "author": "Ian Hoffman",
    "published": "Wed, 31 Jul 2024 09:00:39 +0000",
    "image": "https://slack.engineering/wp-content/uploads/sites/7/2024/07/image1.gif?w=640",
    "source": "https://slack.engineering/feed",
    "categories": [
      "Uncategorized",
      "collaboration",
      "enterprise",
      "leadership",
      "product-engineering",
      "software-architecture"
    ]
  },
  {
    "id": "f3a3b1e6-2d32-4783-af04-ba09445d4ae4",
    "title": "Unlocking Efficiency and Performance: Navigating the Spark 3 and EMR 6 Upgrade Journey at Slack",
    "link": "https://slack.engineering/unlocking-efficiency-and-performance-navigating-the-spark-3-and-emr-6-upgrade-journey-at-slack/",
    "description": "Slack Data Engineering recently underwent data workload migration from AWS EMR 5 (Spark 2/Hive 2 processing engine) to EMR 6 (Spark 3 processing engine). In this blog, we will share our migration journey, challenges, and the performance gains we observed in the process. This blog aims to assist Data Engineers, Data Infrastructure Engineers, and Product […] The post Unlocking Efficiency and Performance: Navigating the Spark 3 and EMR 6 Upgrade Journey at Slack appeared first on Slack Engineering.",
    "author": "Nilanjana Mukherjee",
    "published": "Tue, 02 Jul 2024 09:00:00 +0000",
    "image": "https://slack.engineering/wp-content/uploads/sites/7/2024/07/entering_a_room_for_migration_left_door_says_apache_spark_right_door_says_aws_emr_science_fiction-1.jpeg?w=640",
    "source": "https://slack.engineering/feed",
    "categories": [
      "Uncategorized",
      "analytics",
      "aws",
      "big-data",
      "data-engineering",
      "data-infrastructure",
      "spark",
      "sql"
    ]
  },
  {
    "id": "465c737f-c526-46ee-93ac-f2824ffe79fe",
    "title": "Proactive Measures Against Password Breaches and Cookie Hijacking",
    "link": "https://slack.engineering/proactive-measures-against-password-breaches-and-cookie-hijacking/",
    "description": "At Slack, we’re committed to security that goes beyond the ordinary. We continuously strive to earn and maintain user trust by safeguarding critical components integral to every user’s experience. From passwords to session cookies, and tokens to webhooks, we prioritize protecting everything essential to how users log into the platform and remain authenticated. Through proactive […] The post Proactive Measures Against Password Breaches and Cookie Hijacking appeared first on Slack Engineering.",
    "author": "Nathan Lehotsky",
    "published": "Fri, 28 Jun 2024 09:00:14 +0000",
    "image": "https://slack.engineering/wp-content/uploads/sites/7/2024/06/pw-reset-blog-diagram-1.jpg?w=688",
    "source": "https://slack.engineering/feed",
    "categories": [
      "Uncategorized",
      "security"
    ]
  },
  {
    "id": "eccdf9ed-e184-4e49-a42a-b6235866e73a",
    "title": "Catching Compromised Cookies",
    "link": "https://slack.engineering/catching-compromised-cookies/",
    "description": "Slack uses cookies to track session states for users on slack.com and the Slack Desktop app. The ever-present cookie banners have made cookies mainstream, but as a quick refresher, cookies are a little piece of client-side state associated with a website that is sent up to the web server on every request. Websites use this […] The post Catching Compromised Cookies appeared first on Slack Engineering.",
    "author": "Ryan Slama",
    "published": "Mon, 24 Jun 2024 10:00:51 +0000",
    "image": "https://slack.engineering/wp-content/uploads/sites/7/2024/06/Catching-Compromised-Cookies-01.png?w=640",
    "source": "https://slack.engineering/feed",
    "categories": [
      "Uncategorized",
      "security"
    ]
  },
  {
    "id": "277799f5-6c97-40e5-9762-a3751fb0b9bd",
    "title": "Rust is evolving from system-level language to UI and frontend development",
    "link": "https://stackoverflow.blog/2024/10/08/think-you-don-t-need-observability-think-again/",
    "description": "Ben and Ryan chat with Daniela Miao, cofounder and CTO of Momento, a real-time data platform. They discuss the advantages of real-time observability, the challenges of multi-tenancy in databases and caching, the use of WebAssembly in UI development, and the benefits of Rust. Daniela also shares her experiences working at AWS and a startup focused on observability, which led to the creation of Momento.",
    "author": "Eira May",
    "published": "Tue, 08 Oct 2024 07:40:00 GMT",
    "image": "",
    "source": "https://stackoverflow.blog/feed/",
    "categories": [
      "se-tech",
      "se-stackoverflow",
      "podcast",
      "rust",
      "observability"
    ]
  },
  {
    "id": "fad7b5d2-2138-4ef9-a554-099fd13a3207",
    "title": "Meet the AI-native developers who build software through prompt engineering",
    "link": "https://stackoverflow.blog/2024/10/04/develop-software-with-ai-prompt-engineering-code-generation/",
    "description": "Crystal Xu, chief of staff at FSH Tech, explains how she works with GenAI systems like ChatGPT, Cursor, and Replit to build software through prompt engineering.",
    "author": "Ben Popper",
    "published": "Fri, 04 Oct 2024 04:15:00 GMT",
    "image": "",
    "source": "https://stackoverflow.blog/feed/",
    "categories": [
      "se-tech",
      "se-stackoverflow",
      "podcast"
    ]
  },
  {
    "id": "7891e515-1d13-487e-ac72-5f6f21f00948",
    "title": "Community Products Roadmap Update, October 2024",
    "link": "https://stackoverflow.blog/2024/10/03/community-product-update-knowledge-as-a-service/",
    "description": "We explore how our platform is evolving to support a new framework and business model, knowledge-as-a-service, and how we will incorporate this with our ongoing investment in our community.",
    "author": "Des Darilek",
    "published": "Thu, 03 Oct 2024 15:00:32 GMT",
    "image": "",
    "source": "https://stackoverflow.blog/feed/",
    "categories": [
      "community",
      "community-update",
      "knowledge-as-a-service",
      "staging-ground",
      "se-tech",
      "se-stackoverflow"
    ]
  },
  {
    "id": "21a654bd-dcce-4c6b-a7e3-89f3a98ddb44",
    "title": "A developer works to balance the data center boom with his climate change battle",
    "link": "https://stackoverflow.blog/2024/10/01/david-mytton-arcjet-console-dev-newsletter-podcast/",
    "description": "On today’s episode we chat with David Mytton, CEO of Arcjet and co-founder of Console.dev. We discuss his early work in cloud monitoring, his passion for the environment, and his love for sharing great developer tools.",
    "author": "Ben Popper",
    "published": "Tue, 01 Oct 2024 04:15:00 GMT",
    "image": "",
    "source": "https://stackoverflow.blog/feed/",
    "categories": [
      "se-tech",
      "se-stackoverflow",
      "podcast"
    ]
  },
  {
    "id": "a7765176-f63e-4b31-9efb-116b9c7d5a32",
    "title": "Ongoing community data protection",
    "link": "https://stackoverflow.blog/2024/09/30/ongoing-community-data-protection/",
    "description": "Socially responsible use of community data needs to be mutually beneficial: the more potential partners are willing to contribute to community development, the more access to community content they receive.",
    "author": "Ellen Brandenberger, Ryan Polk",
    "published": "Mon, 30 Sep 2024 15:43:00 GMT",
    "image": "",
    "source": "https://stackoverflow.blog/feed/",
    "categories": [
      "socially-responsible-ai",
      "data-ethics",
      "ai",
      "se-stackoverflow",
      "se-all"
    ]
  },
  {
    "id": "a61cff53-c78b-421f-bb62-a32b875d3f4e",
    "title": "Attribution as the foundation of developer trust",
    "link": "https://stackoverflow.blog/2024/09/30/attribution-as-the-foundation-of-developer-trust/",
    "description": "The entire AI ecosystem is at risk without trust.",
    "author": "Ellen Brandenberger, Ryan Polk",
    "published": "Mon, 30 Sep 2024 15:42:00 GMT",
    "image": "",
    "source": "https://stackoverflow.blog/feed/",
    "categories": [
      "se-all",
      "se-stackoverflow",
      "socially-responsible-ai",
      "ai",
      "knowledge-as-a-service"
    ]
  },
  {
    "id": "70b8aaff-3fb7-4f76-b6ee-30635ede7aed",
    "title": "Knowledge-as-a-service: The future of community business models",
    "link": "https://stackoverflow.blog/2024/09/30/knowledge-as-a-service-the-future-of-community-business-models/",
    "description": "The internet is changing once again: it is becoming more fragmented as the separation between sources of knowledge and how users interact with that knowledge grows.",
    "author": "Ellen Brandenberger, Ryan Polk",
    "published": "Mon, 30 Sep 2024 15:41:00 GMT",
    "image": "",
    "source": "https://stackoverflow.blog/feed/",
    "categories": [
      "socially-responsible-ai",
      "ai",
      "community",
      "knowledge-as-a-service",
      "se-all",
      "se-stackoverflow"
    ]
  },
  {
    "id": "0671b619-a7f6-43de-8b8e-498ea47f735d",
    "title": "The changing state of the Internet and related business models",
    "link": "https://stackoverflow.blog/2024/09/30/the-changing-state-of-the-internet-and-related-business-models/",
    "description": "If you’re weary of reading about the latest chatbot innovations and the nine ways AI will change your daily life next year, this series of posts may be for you.",
    "author": "Ellen Brandenberger, Ryan Polk",
    "published": "Mon, 30 Sep 2024 15:40:00 GMT",
    "image": "",
    "source": "https://stackoverflow.blog/feed/",
    "categories": [
      "socially-responsible-ai",
      "community",
      "se-all",
      "se-stackoverflow",
      "ai"
    ]
  },
  {
    "id": "62ffa95f-ec41-425a-8cd2-ee164340785f",
    "title": "Deedy Das: from coding at Meta, to search at Google, to investing with Anthropic",
    "link": "https://stackoverflow.blog/2024/09/27/deedy-das-meta-google-menlo-ventures-ai-anthropic/",
    "description": "We chat with Deedy Das, a Principal at Menlo Ventures, who began his career as a software engineer at Facebook and Google. He then dipped a toe in the startup world, spending time at the company now know as Glean. More recently he started a career as a venture capitalist, investing in AI and Infra out of the Anthology Fund, a partnership between Menlo Ventures and Anthropic.",
    "author": "Ben Popper",
    "published": "Fri, 27 Sep 2024 04:15:00 GMT",
    "image": "",
    "source": "https://stackoverflow.blog/feed/",
    "categories": [
      "se-tech",
      "se-stackoverflow",
      "podcast"
    ]
  },
  {
    "id": "3c7a024e-1381-4733-b3eb-19f7220e06db",
    "title": "Masked self-attention: How LLMs learn relationships between tokens",
    "link": "https://stackoverflow.blog/2024/09/26/masked-self-attention-how-llms-learn-relationships-between-tokens/",
    "description": "Masked self-attention is the key building block that allows LLMs to learn rich relationships and patterns between the words of a sentence. Let’s build it together from scratch.",
    "author": "Cameron R. Wolfe, PhD",
    "published": "Thu, 26 Sep 2024 16:00:00 GMT",
    "image": "",
    "source": "https://stackoverflow.blog/feed/",
    "categories": [
      "se-tech",
      "se-stackoverflow",
      "llm",
      "ai"
    ]
  },
  {
    "id": "d6d36ebc-78bf-40ae-9f4a-73ca343dcf75",
    "title": "Where developers feel AI coding tools are working—and where they’re missing the mark",
    "link": "https://stackoverflow.blog/2024/09/23/where-developers-feel-ai-coding-tools-are-working-and-where-they-re-missing-the-mark/",
    "description": "How are developers actually using GenAI-powered coding tools now that some of the initial hype has faded?",
    "author": "Eira May",
    "published": "Mon, 23 Sep 2024 16:00:00 GMT",
    "image": "",
    "source": "https://stackoverflow.blog/feed/",
    "categories": [
      "se-tech",
      "se-stackoverflow",
      "developer-survey",
      "ai-coding",
      "ai"
    ]
  },
  {
    "id": "e91f02b4-2ade-44fc-bf3d-831c8c048fd2",
    "title": "He sold his first company for billions. Now he’s building a better developer experience.",
    "link": "https://stackoverflow.blog/2024/09/23/he-sold-his-first-company-for-billions-now-he-s-building-a-better-developer-experience/",
    "description": "Founder and entrepreneur Jyoti Bansal tells Ben, Cassidy, and Eira about the developer challenges he aims to solve with his new venture, Harness, an AI-driven software development platform meant to take the pain out of DevOps. Jyoti shares his journey as a founder, his perspective on the venture capital landscape, and his reasons behind his decision to raise debt capital for Harness.",
    "author": "Eira May",
    "published": "Mon, 23 Sep 2024 16:00:00 GMT",
    "image": "",
    "source": "https://stackoverflow.blog/feed/",
    "categories": [
      "ai",
      "software-development",
      "funding",
      "startups",
      "podcast",
      "se-tech",
      "se-stackoverflow",
      "business"
    ]
  },
  {
    "id": "f3af134d-38f7-4403-8312-b3836ecbf68d",
    "title": "Detecting errors in AI-generated code",
    "link": "https://stackoverflow.blog/2024/09/20/detecting-errors-in-ai-generated-code/",
    "description": "Ben chats with Gias Uddin, an assistant professor at York University in Toronto, where he teaches software engineering, data science, and machine learning. His research focuses on designing intelligent tools for testing, debugging, and summarizing software and AI systems. He recently published a paper about detecting errors in code generated by LLMs. Gias and Ben discuss the concept of hallucinations in AI-generated code, the need for tools to detect and correct those hallucinations, and the potential for AI-powered tools to generate QA tests.",
    "author": "Eira May",
    "published": "Fri, 20 Sep 2024 07:40:00 GMT",
    "image": "",
    "source": "https://stackoverflow.blog/feed/",
    "categories": [
      "se-tech",
      "se-stackoverflow",
      "podcast",
      "ai",
      "llm"
    ]
  },
  {
    "id": "eaa6aed9-7b4d-4875-b194-158d9b92b8e7",
    "title": "Elevating your search experience: Stack Overflow for Teams ML-powered reranking experiment",
    "link": "https://stackoverflow.blog/2024/09/19/elevating-your-search-experience-stack-overflow-for-teams-ml-powered-reranking-experiment/",
    "description": "Today, we're excited to share details about our latest experiment that aims to make your search results in Stack Overflow for Teams Enterprise even more relevant and useful.",
    "author": "Adrian Brunetto",
    "published": "Thu, 19 Sep 2024 13:55:04 GMT",
    "image": "",
    "source": "https://stackoverflow.blog/feed/",
    "categories": [
      "release",
      "so-for-teams",
      "search"
    ]
  },
  {
    "id": "e09ef59f-58c2-4234-97d8-5176906a6941",
    "title": "Looking under the hood at the tech stack that powers multimodal AI",
    "link": "https://stackoverflow.blog/2024/09/17/looking-under-the-hood-of-multimodal-ai/",
    "description": "Ryan chats with Russ d’Sa, cofounder and CEO of LiveKit, about multimodal AI and the technology that makes it possible. They talk through the tech stack required, including the use of WebRTC and UDP protocols for real-time audio and video streaming. They also explore the big challenges involved in ensuring privacy and security in streaming data, namely end-to-end encryption and obfuscation.",
    "author": "Eira May",
    "published": "Tue, 17 Sep 2024 07:40:00 GMT",
    "image": "",
    "source": "https://stackoverflow.blog/feed/",
    "categories": [
      "ai",
      "se-tech",
      "se-stackoverflow",
      "podcast"
    ]
  },
  {
    "id": "9ccc7491-64fe-4b0c-a606-83a5911af4f5",
    "title": "The world’s largest open-source business has plans for enhancing LLMs",
    "link": "https://stackoverflow.blog/2024/09/13/the-world-s-largest-open-source-business-has-plans-for-enhancing-llms/",
    "description": "Ben and Ryan talk to Scott McCarty, Global Senior Principal Product Manager for Red Hat Enterprise Linux, about the intersection between LLMs (large language models) and open source. They discuss the challenges and benefits of open-source LLMs, the importance of attribution and transparency, and the revolutionary potential for LLM-driven applications. They also explore the role of LLMs in code generation, testing, and documentation.",
    "author": "Eira May",
    "published": "Fri, 13 Sep 2024 07:40:00 GMT",
    "image": "",
    "source": "https://stackoverflow.blog/feed/",
    "categories": [
      "se-tech",
      "se-stackoverflow",
      "podcast",
      "llm",
      "ai",
      "open-source"
    ]
  },
  {
    "id": "3074d83c-afe0-428d-8e8f-4ecfb9b62126",
    "title": "Enterprise 2024.6: Identify and engage your subject matter experts",
    "link": "https://stackoverflow.blog/2024/09/11/identify-and-engage-subject-matter-experts/",
    "description": "This release includes updates that improve subject matter expert (SME) visibility and engagement in Stack Overflow for Teams. It's also now easier to capture and discover SME knowledge in Microsoft Teams and Slack with the Auto-Answer App.",
    "author": "Carrie Koos, Natalie Rotnov",
    "published": "Wed, 11 Sep 2024 13:00:00 GMT",
    "image": "",
    "source": "https://stackoverflow.blog/feed/",
    "categories": [
      "release",
      "stack-overflow-for-teams"
    ]
  },
  {
    "id": "2854de55-f5e7-4d33-a827-92e2be5d4cef",
    "title": "One of the best ways to get value for AI coding tools: generating tests",
    "link": "https://stackoverflow.blog/2024/09/10/gen-ai-llm-create-test-developers-coding-software-code-quality/",
    "description": "More code isn't always a good thing, but fewer bugs is.",
    "author": "Ben Popper",
    "published": "Tue, 10 Sep 2024 12:46:52 GMT",
    "image": "",
    "source": "https://stackoverflow.blog/feed/",
    "categories": [
      "se-tech",
      "se-stackoverflow",
      "ai"
    ]
  },
  {
    "id": "9cdec588-7fb8-4af9-b1b9-f5af7c419a60",
    "title": "The evolution of fullstack engineers",
    "link": "https://stackoverflow.blog/2024/09/10/evolution-full-stack-engineers-mrina-sugosh/",
    "description": "On today’s episode we chat with Mrinalini Sugosh, Dev Rel Manager CKEditor. She discusses how modern fullstack developers have to master both front and backend skills, stitch the two together, and master adjacent skills like data analysis and security compliance.",
    "author": "Ben Popper",
    "published": "Tue, 10 Sep 2024 04:15:00 GMT",
    "image": "",
    "source": "https://stackoverflow.blog/feed/",
    "categories": [
      "se-stackoverflow",
      "se-tech",
      "podcast"
    ]
  },
  {
    "id": "b06e3b2f-0135-46f1-b573-78742dd38c15",
    "title": "The creator of Jenkins discusses CI/CD and balancing business with open source",
    "link": "https://stackoverflow.blog/2024/09/06/kohsuke-kawaguchi-jenkins-ci-cd-cloudbees/",
    "description": "On today’s episode we speak with Kohsuke Kawaguchi, who won the Google-O’Reilly Open Source award for his work on the Hudson/Jenkins project. Kohsuke began his career at Sun Microsystems. He shares insights on the balance between community-driven open source and the need to monetize through enterprise services.",
    "author": "Ben Popper",
    "published": "Fri, 06 Sep 2024 04:15:00 GMT",
    "image": "",
    "source": "https://stackoverflow.blog/feed/",
    "categories": [
      "se-stackoverflow",
      "se-tech",
      "podcast"
    ]
  },
  {
    "id": "60a71fa2-f811-40f8-9b1c-1d80c8bd8bfc",
    "title": "Sandcastle: data/AI apps for everyone",
    "link": "https://medium.com/airbnb-engineering/sandcastle-data-ai-apps-for-everyone-439f3b78b223?source=rss----53c7c27702d5---4",
    "description": "",
    "author": "Daniel Miller",
    "published": "Tue, 24 Sep 2024 17:01:45 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*eGkAsMkZXIEKQGhLiQyCTw.jpeg",
    "source": "https://medium.com/feed/airbnb-engineering",
    "categories": [
      "ai",
      "data-science",
      "technology",
      "machine-learning",
      "engineering"
    ]
  },
  {
    "id": "6b9c1ee0-5bbc-448d-8921-042e4ca18adb",
    "title": "Riverbed Data Hydration — Part 1",
    "link": "https://medium.com/airbnb-engineering/riverbed-data-hydration-part-1-e7011d62d946?source=rss----53c7c27702d5---4",
    "description": "",
    "author": "Xiangmin Liang",
    "published": "Tue, 10 Sep 2024 16:01:29 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*7kF7y_GLrhJyalhRpaHgTg.jpeg",
    "source": "https://medium.com/feed/airbnb-engineering",
    "categories": [
      "data",
      "infrastructure",
      "data-science",
      "engineering",
      "architecture"
    ]
  },
  {
    "id": "8c19a830-774c-4c66-b53b-55b81dcadd40",
    "title": "Building Postcards for “Airbnb” Scale",
    "link": "https://medium.com/airbnb-engineering/building-postcards-for-airbnb-scale-dfe0b71b12ec?source=rss----53c7c27702d5---4",
    "description": "",
    "author": "Leo Wong",
    "published": "Wed, 28 Aug 2024 16:01:39 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*2J5D7hHVULfMa9n3cTI3wA.jpeg",
    "source": "https://medium.com/feed/airbnb-engineering",
    "categories": [
      "front-end-development",
      "image-processing",
      "internationalization",
      "engineering",
      "media-processing"
    ]
  },
  {
    "id": "bdb2372b-2ffa-4e2a-a547-4ee8bade0c02",
    "title": "Personal Data Classification",
    "link": "https://medium.com/airbnb-engineering/personal-data-classification-2d816d8ea516?source=rss----53c7c27702d5---4",
    "description": "",
    "author": "Sam Kim",
    "published": "Mon, 19 Aug 2024 16:43:29 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/0*UWzBCWsCQWkrzLjV",
    "source": "https://medium.com/feed/airbnb-engineering",
    "categories": [
      "privacy",
      "data",
      "engineering",
      "security",
      "technology"
    ]
  },
  {
    "id": "f591f4a6-f939-4f90-bd53-9a9b5b56747b",
    "title": "Apache Flink® on Kubernetes",
    "link": "https://medium.com/airbnb-engineering/apache-flink-on-kubernetes-84425d66ee11?source=rss----53c7c27702d5---4",
    "description": "",
    "author": "Ran Zhang",
    "published": "Wed, 31 Jul 2024 17:04:52 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*doLL9u-uICR6OPtdXYE4sQ.jpeg",
    "source": "https://medium.com/feed/airbnb-engineering",
    "categories": [
      "kubernetes",
      "apache",
      "engineering",
      "infrastructure",
      "open-source"
    ]
  },
  {
    "id": "81674baa-18ea-45bc-bd6b-b7f483cad078",
    "title": "How Airbnb Smoothly Upgrades React",
    "link": "https://medium.com/airbnb-engineering/how-airbnb-smoothly-upgrades-react-b1d772a565fd?source=rss----53c7c27702d5---4",
    "description": "",
    "author": "Andre Wiggins",
    "published": "Tue, 23 Jul 2024 17:02:35 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*8jiO3WebwJ4aoyYFYltkOw.jpeg",
    "source": "https://medium.com/feed/airbnb-engineering",
    "categories": [
      "front-end-development",
      "engineering",
      "web-development",
      "infrastructure",
      "react"
    ]
  },
  {
    "id": "a3976d9c-ef7a-4792-968d-7978883191ae",
    "title": "Rethinking Text Resizing on Web",
    "link": "https://medium.com/airbnb-engineering/rethinking-text-resizing-on-web-1047b12d2881?source=rss----53c7c27702d5---4",
    "description": "",
    "author": "Steven Bassett",
    "published": "Thu, 16 May 2024 17:24:12 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*iM9vFw9B1-jUopP3lX1Swg.jpeg",
    "source": "https://medium.com/feed/airbnb-engineering",
    "categories": [
      "front-end-development",
      "web-development",
      "web-accessibility",
      "accessibility",
      "web"
    ]
  },
  {
    "id": "b1a045e6-7975-41bb-8873-97afafbc7800",
    "title": "Animations: Bringing the Host Passport to Life on iOS",
    "link": "https://medium.com/airbnb-engineering/animations-bringing-the-host-passport-to-life-on-ios-72856aea68a7?source=rss----53c7c27702d5---4",
    "description": "",
    "author": "Anne Lu",
    "published": "Tue, 07 May 2024 17:15:23 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*BmPtSglh_yBHzCxIn_0c_g.png",
    "source": "https://medium.com/feed/airbnb-engineering",
    "categories": [
      "engineering",
      "technology",
      "mobile",
      "ios",
      "ios-app-development"
    ]
  },
  {
    "id": "294c8c56-4235-4883-aad3-0df26c8a32aa",
    "title": "Airbnb Brandometer: Powering Brand Perception Measurement on Social Media Data with AI",
    "link": "https://medium.com/airbnb-engineering/airbnb-brandometer-powering-brand-perception-measurement-on-social-media-data-with-ai-c83019408051?source=rss----53c7c27702d5---4",
    "description": "",
    "author": "Tiantian Zhang",
    "published": "Fri, 26 Apr 2024 16:01:16 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/0*VWesH2nPt7K2bRIu",
    "source": "https://medium.com/feed/airbnb-engineering",
    "categories": [
      "machine-learning",
      "deep-learning",
      "ai",
      "engineering",
      "data-science"
    ]
  },
  {
    "id": "d9e3b92a-f22b-49e7-a4df-da2f18298434",
    "title": "Introducing Trio | Part III",
    "link": "https://medium.com/airbnb-engineering/introducing-trio-part-iii-033fbfe2171b?source=rss----53c7c27702d5---4",
    "description": "",
    "author": "Eli Hart",
    "published": "Thu, 11 Apr 2024 17:33:21 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*f5gDJHZdQ6lSewSKhZya-A.jpeg",
    "source": "https://medium.com/feed/airbnb-engineering",
    "categories": [
      "android",
      "jetpack-compose",
      "mobile",
      "engineering",
      "mobile-app-development"
    ]
  },
  {
    "id": "7ee0941f-30b3-4e9a-94f2-3e53d8b8748d",
    "title": "Episode 159 - JetBrains Space",
    "link": "https://cynical.dev/159",
    "description": "In this episode we talk about JetBrains Space, with Valerie Andrianova.   Contacting Valerie Andrianova Website: https://www.jetbrains.com/ Twitter: https://twitter.com/va_leriya LinkedIn: https://www.linkedin.com/in/valerie-andrianova-1172031a/ Blog: https://blog.jetbrains.com/author/valerie-andrianova/ Episode Editing by - RJJ Software Ltd (https://rjj-software.co.uk/ )",
    "author": "",
    "published": "Mon, 28 Jun 2021 07:00:00 +0000",
    "image": "https://archive.org/download/CynicalDeveloper/episode-159.mp3",
    "source": "https://cynicaldeveloper.com/feed/podcast",
    "categories": null
  },
  {
    "id": "690bf8a6-4f22-4ba8-b28b-fe4eba7ff0f7",
    "title": "Episode 158 - Code Reviews",
    "link": "https://cynical.dev/158",
    "description": "In this episode we talk about Code Reviews with Jordan Ambra   Contacting Jordan Ambra   Website: https://www.serenity.software Twitter: https://twitter.com/jordanambra LinkedIn: https://www.linkedin.com/in/jordanambra/   Episode Editing by - RJJ Software Ltd (https://rjj-software.co.uk/)",
    "author": "",
    "published": "Mon, 14 Jun 2021 07:00:00 +0000",
    "image": "https://archive.org/download/CynicalDeveloper/episode-158.mp3",
    "source": "https://cynicaldeveloper.com/feed/podcast",
    "categories": null
  },
  {
    "id": "b1729e7c-bc67-42f4-bed0-f8447e320566",
    "title": "Episode 157 - Developer Life Cycle",
    "link": "https://cynical.dev/157",
    "description": "In This episode we talk with Lee Mallon about the Developer Life cycle   Contacting Lee Mallon   Website: http://www.rarely.io/ Twitter: https://twitter.com/leemallon LinkedIn: https://uk.linkedin.com/in/leemallon   Episode Editing by - RJJ Software Ltd (https://rjj-software.co.uk/)   Music used during guest introduction - \"Action Time\" by Muz Station Productions (https://assetstore.unity.com/packages/audio/music/rock/action-trailer-music-pack-53553)",
    "author": "",
    "published": "Mon, 31 May 2021 07:00:00 +0000",
    "image": "https://archive.org/download/CynicalDeveloper/episode-episode-157.mp3",
    "source": "https://cynicaldeveloper.com/feed/podcast",
    "categories": null
  },
  {
    "id": "ce3c4fc7-e010-4895-8459-19e913084f00",
    "title": "Episode 156 - Deep Fakes",
    "link": "https://cynical.dev/156/",
    "description": "In this episode we talk with Nigel Cannings about Deep fakes... or do we... is this even us, are you even you? Contacting Nigel Cannings Website: http://www.dointelligentvoicewonky.com/ Twitter: https://twitter.com/intelligentvox LinkedIn: https://www.linkedin.com/in/nigelcannings Sponsor This episode is sponsored by https://configcat.com/ Episode Editing by - RJJ Software Ltd (https://rjj-software.co.uk/ )",
    "author": "",
    "published": "Mon, 17 May 2021 07:00:00 +0000",
    "image": "https://archive.org/download/CynicalDeveloper/episode-episode-156.mp3",
    "source": "https://cynicaldeveloper.com/feed/podcast",
    "categories": null
  },
  {
    "id": "e9e4af08-8423-462c-819f-2e2cda172e94",
    "title": "Episode 155 - Changes in OSS",
    "link": "https://cynical.dev/podcast/155/",
    "description": "In this returning episode we introduce a returning guest Matt Yonkovit, who was on the show back in November 2019, on episode 127 about Automation leading us astray! Matt is back to talk to us about the changes happening in the Open Source sphere... Register for Percona Live Online 2021 today for FREE! - https://www.percona.com/live/conferences Contacting Matt Yonkovit Website: http://www.dowonky.com/ Twitter: https://twitter.com/MYonkovit LinkedIn: https://www.linkedin.com/in/myonk Sponsor This episode is sponsored by ConfigCat - https://configcat.com Episode Editing by - RJJ Software Ltd - https://rjj-software.co.uk/",
    "author": "",
    "published": "Mon, 03 May 2021 08:00:00 +0000",
    "image": "https://archive.org/download/CynicalDeveloper/episode-episode-155.mp3",
    "source": "https://cynicaldeveloper.com/feed/podcast",
    "categories": null
  },
  {
    "id": "d36bfec1-da8e-4ddd-a33e-6e582d0512e0",
    "title": "Episode 154 - Pause for thought",
    "link": "https://cynical.dev/154",
    "description": "In this episode of the Cynical Developer, I wanted to pause for a thought, and make an announcement about the show...   Contacting James Studdart Website: https://JamesStuddart.co.uk/ Twitter: https://twitter.com/JamesStuddart Podcast: https://CynicalDeveloper.com/ Podcast Twitter: https://twitter.com/cynicaldevs   Episode Editing by - RJJ Software Ltd (https://rjj-software.co.uk/ )",
    "author": "",
    "published": "Mon, 23 Nov 2020 09:00:00 +0000",
    "image": "https://archive.org/download/CynicalDeveloper/episode-ep-154.mp3",
    "source": "https://cynicaldeveloper.com/feed/podcast",
    "categories": null
  },
  {
    "id": "4c57104a-5e52-4040-bdf5-547f78c6ac52",
    "title": "Episode 153 - PayPal",
    "link": "https://cynical.dev/153",
    "description": "In this episode we talk about PayPal with Drew Angell   Contacting Drew Angell Twitter: https://twitter.com/angelleye LinkedIn: https://www.linkedin.com/in/akangell/   Episode Editing by - RJJ Software Ltd (https://rjj-software.co.uk/ )",
    "author": "",
    "published": "Mon, 09 Nov 2020 09:00:00 +0000",
    "image": "https://archive.org/download/CynicalDeveloper/episode-episode-153.mp3",
    "source": "https://cynicaldeveloper.com/feed/podcast",
    "categories": null
  },
  {
    "id": "e91354f0-b825-4a78-a54b-3943b4d037af",
    "title": "Episode 152 - Spring Time",
    "link": "http://cynical.dev/152",
    "description": "In this episode with talk about Spring with Laurentiu Spilca   Contacting Laurentiu Spilca Twitter: https://twitter.com/laurspilca LinkedIn: https://www.linkedin.com/in/lauren%C5%A3iu-spilc%C4%83-01a931107/ Youtube: https://youtube.com/c/laurentiuspilca   Get Laurentiu's book on Spring Spring Security in Action: https://www.manning.com/books/spring-security-in-action?query=Laurentiu%20Spilca\u0026utm_source=podcast\u0026utm_medium=organic\u0026utm_campaign=cynicaldeveloper\u0026utm_content=raffle   Episode Editing by - RJJ Software Ltd (https://rjj-software.co.uk/ )",
    "author": "",
    "published": "Mon, 26 Oct 2020 19:39:23 +0000",
    "image": "https://archive.org/download/CynicalDeveloper/episode-episode-152.mp3",
    "source": "https://cynicaldeveloper.com/feed/podcast",
    "categories": null
  },
  {
    "id": "fc5611f5-9da1-41c4-a247-e97ed234fe54",
    "title": "Episode 151 - Svelte",
    "link": "https://cynical.dev/151",
    "description": "In this episode we talk about Svelte with Mark Volkmann.     Contacting Mark Volkmann Website: https://mvolkmann.github.io/ Blog: https://mvolkmann.github.io/blog/ LinkedIn: https://www.linkedin.com/in/mark-volkmann-28466/ Twitter: https://twitter.com/mark_volkmann   Get Mark#s book on Svelte and Sapper Svelte and Sapper in Action: https://www.manning.com/books/svelte-and-sapper-in-action   Episode Editing by - RJJ Software Ltd (https://rjj-software.co.uk/ )",
    "author": "",
    "published": "Mon, 12 Oct 2020 08:00:00 +0000",
    "image": "https://archive.org/download/CynicalDeveloper/episode-episode-151.mp3",
    "source": "https://cynicaldeveloper.com/feed/podcast",
    "categories": null
  },
  {
    "id": "ad1ca11a-44d1-4c2a-b0b6-adbac5926a18",
    "title": "Episode 150 - More than Coding",
    "link": "https://cynical.dev/150",
    "description": "In this episode we talk to Benjamin Harding about the fact that being a developer is more the coding.     Contacting Benjamin Harding Website: http://benharding.co.nz/ Github: https://github.com/BenjaminHarding LinkedIn: https://www.linkedin.com/in/benjamin-harding-10aa2360/   Episode Editing by - RJJ Software Ltd (https://rjj-software.co.uk/ )",
    "author": "",
    "published": "Mon, 28 Sep 2020 08:00:00 +0000",
    "image": "https://archive.org/download/CynicalDeveloper/episode-episode-150.mp3",
    "source": "https://cynicaldeveloper.com/feed/podcast",
    "categories": null
  },
  {
    "id": "7b57be71-cbaf-446d-ad7f-2ed9fc60f89b",
    "title": "Episode 149 - Leadership for developers",
    "link": "https://cynical.dev/149",
    "description": "In this episode we talk to Sam Schutte about leadership for developers.   Contacting Sam Schutte Website: https://samuelschutte.com/ Twitter: https://twitter.com/unstoppablesoft   Episode Editing by - RJJ Software Ltd (https://rjj-software.co.uk/ )",
    "author": "",
    "published": "Mon, 14 Sep 2020 08:00:00 +0000",
    "image": "https://archive.org/download/CynicalDeveloper/episode-episode-149.mp3",
    "source": "https://cynicaldeveloper.com/feed/podcast",
    "categories": null
  },
  {
    "id": "925114d9-c1c7-44a7-aa1c-02e42514d99b",
    "title": "Episode 148 - Letters to a new dev",
    "link": "https://cynical.dev/148",
    "description": "In this episode we talk about some truths that new developers should be aware of with Dan Moore.   Contacting Dan Moore Website: https://letterstoanewdeveloper.com/ Twitter: https://twitter.com/PatrickMcFadin   Get the book USA: https://www.apress.com/us/book/9781484260739 Rest of the World: https://www.apress.com/gp/book/9781484260739 DISCOUNT CODES FOR THE BOOK GiveMeMoore08 - good through Aug 31 2020 GiveMeMoore09 - good Sep 1 through Sep 30 2020   Other Links The Secrets of Consulting, by Gerald Weinberg: http://geraldmweinberg.com/Site/Consulting_Secrets.html The T-Shaped Developer: https://medium.com/quick-code/what-it-is-a-t-shaped-developer-and-why-you-should-be-one-e87293e4bb84   Episode Editing by - RJJ Software Ltd (https://rjj-software.co.uk/ )",
    "author": "",
    "published": "Mon, 31 Aug 2020 08:00:00 +0000",
    "image": "https://archive.org/download/CynicalDeveloper/episode-episode-148.mp3",
    "source": "https://cynicaldeveloper.com/feed/podcast",
    "categories": null
  },
  {
    "id": "14c52400-e087-4af9-8920-99469b8b81e5",
    "title": "Episode 147 - Cassandra 4.0",
    "link": "https://cynical.dev/147",
    "description": "In this episode we talk about Cassandra 4.0 with Patrick McFadin.   Contacting Patrick McFadin Website: https://cassandra.apache.org/ Twitter: https://twitter.com/PatrickMcFadin LinkedIn: https://www.linkedin.com/in/patrick-mcfadin-53a8046/ Datastax: https://www.datastax.com/   Episode Editing by - RJJ Software Ltd (https://rjj-software.co.uk/ )",
    "author": "",
    "published": "Mon, 17 Aug 2020 08:00:00 +0000",
    "image": "https://archive.org/download/CynicalDeveloper/episode-episode-147.mp3",
    "source": "https://cynicaldeveloper.com/feed/podcast",
    "categories": null
  },
  {
    "id": "6df88610-f9ce-4f21-aa74-bb59a907eee8",
    "title": "Episode 146 - Microservices",
    "link": "https://cynical.dev/146",
    "description": "In this episode we talking about Microservices with Christian Horsdal WIN A COPY OF MICROSERVICES IN .NET 2nd EDITION To win a copy enter the draw here: https://cynical.dev/microservices2ndedition   Contacting Christian Horsdal Website: https://www.horsdal-consult.dk/ Twitter: https://twitter.com/chr_horsdal LinkedIn: https://www.linkedin.com/in/christianhorsdal Book: https://www.manning.com/books/microservices-in-net-core-second-edition   Episode Editing by - RJJ Software Ltd (https://rjj-software.co.uk/ )",
    "author": "",
    "published": "Mon, 03 Aug 2020 08:00:00 +0000",
    "image": "https://archive.org/download/CynicalDeveloper/episode-episode-146.mp3",
    "source": "https://cynicaldeveloper.com/feed/podcast",
    "categories": null
  },
  {
    "id": "27f27eda-8025-4cb0-a3e8-173f722115b4",
    "title": "Episode 145 - Developer Estimates",
    "link": "http://cynical.dev/145",
    "description": "In this episode we talking about developer estimates with Aaron Upright   Contacting Aaron Upright Website: https://www.zenhub.com/ LinkedIn: https://www.linkedin.com/in/aaronupright/ Twitter: https://twitter.com/ImAaronUpright Contacting Zen Hub LinkedIn: https://www.linkedin.com/company/4820421/admin/ Twitter: https://twitter.com/ZenHubHQ   Episode Editing by - RJJ Software Ltd (https://rjj-software.co.uk/ )",
    "author": "",
    "published": "Mon, 20 Jul 2020 08:00:00 +0000",
    "image": "https://archive.org/download/CynicalDeveloper/episode-episode-145.mp3",
    "source": "https://cynicaldeveloper.com/feed/podcast",
    "categories": null
  },
  {
    "id": "77b47ada-20f4-496b-b04f-1c896e1789f6",
    "title": "Episode 144 - Writing for Developers",
    "link": "https://cynical.dev/144",
    "description": "In this episode we talking about authoring books for developers with Philip Keily   Contact Philip Keily Twitter: https://twitter.com/philip_kiely YouTube: https://www.youtube.com/channel/UCvt-DiQlQTpdVDcpPa4EjLA Website: https://philipkiely.com/   Episode Editing by - RJJ Software Ltd (https://rjj-software.co.uk/ )",
    "author": "",
    "published": "Mon, 06 Jul 2020 07:00:00 +0000",
    "image": "https://archive.org/download/CynicalDeveloper/episode-episode_144.mp3",
    "source": "https://cynicaldeveloper.com/feed/podcast",
    "categories": null
  },
  {
    "id": "16f732a0-764e-4531-b1c5-e4301958864e",
    "title": "Episode 143 - Augmented Reality",
    "link": "https://cynical.dev/143",
    "description": "In this episode we talk about Augmented Reality with Connell Gauld   Contact Connell Gauld LinkedIn: https://www.linkedin.com/in/connell-gauld-95a56b7b   Contact Zapper Website: https://www.zappar.com/ Blog: https://www.zappar.com/blog Twitter: https://twitter.com/zapparapp YouTube: https://www.youtube.com/user/zappartv LinkedIn: https://www.linkedin.com/company/zappar/   Episode Editing by - RJJ Software Ltd (https://rjj-software.co.uk/ )",
    "author": "",
    "published": "Mon, 22 Jun 2020 08:00:00 +0000",
    "image": "https://archive.org/download/CynicalDeveloper/episode-episode-143.mp3",
    "source": "https://cynicaldeveloper.com/feed/podcast",
    "categories": null
  },
  {
    "id": "dd2c556f-eccf-4a97-8d48-5ac60e6224c7",
    "title": "Episode 142 - Grafana",
    "link": "https://cynical.dev/142",
    "description": "In this episode we talk about dashboards and grafana with Raj Dutt.   Contact Raj Dutt LinkedIn: https://www.linkedin.com/in/radutt/ Twitter: https://twitter.com/nopzor Blog: https://grafana.com/author/raj/   Contact Grafana Grafana: https://grafana.com/ Facebook: https://www.facebook.com/grafana/ Twitter: https://twitter.com/grafana LinkedIn: https://www.linkedin.com/company/grafana-labs/ GitHub: https://github.com/grafana/ YouTube: https://www.youtube.com/channel/UCYCwgQAMm9sTJv0rgwQLCxw   Episode Editing by - RJJ Software Ltd (https://rjj-software.co.uk/ )",
    "author": "",
    "published": "Mon, 08 Jun 2020 08:00:00 +0000",
    "image": "https://archive.org/download/CynicalDeveloper/episode-episode-142.mp3",
    "source": "https://cynicaldeveloper.com/feed/podcast",
    "categories": null
  },
  {
    "id": "8a604fda-ed5e-41e1-8ce6-c96fb4c251bc",
    "title": "Episode 141 - OpenStack",
    "link": "https://cynical.dev/141",
    "description": "In this episode we talk about OpenStack with Tytus Kurek   Contact Tytus Kurek LinkedIn: https://www.linkedin.com/in/tkurek/   Contact Canonical Website: https://canonical.com/ Twitter: https://twitter.com/canonical",
    "author": "",
    "published": "Mon, 25 May 2020 17:13:58 +0000",
    "image": "https://archive.org/download/CynicalDeveloper/episode-episode-141.mp3",
    "source": "https://cynicaldeveloper.com/feed/podcast",
    "categories": null
  },
  {
    "id": "3fd8c635-6692-4475-9e5d-fdb80736a33a",
    "title": "Episode 140 - Software and the Apocolypse",
    "link": "https://cynical.dev/140",
    "description": "In this episode we talk about Software and the Apocolypse, with Ian Reynolds   Contact Ian Reynolds Website: https://www.zibtek.com/ Twitter: https://twitter.com/just_solve LinkedIn: https://www.linkedin.com/in/ianjhreynolds/ Github: https://github.com/IanReynolds-Zibtek",
    "author": "",
    "published": "Mon, 11 May 2020 08:00:00 +0000",
    "image": "https://archive.org/download/CynicalDeveloper/episode-episode-140.mp3",
    "source": "https://cynicaldeveloper.com/feed/podcast",
    "categories": null
  },
  {
    "id": "3101e44c-cdee-4ab4-9764-7e87819765db",
    "title": "Securing Your Email Sending With Python: Authentication and Encryption",
    "link": "https://stackabuse.com/securing-your-email-sending-with-python-authentication-and-encryption/",
    "description": "Email encryption and authentication are modern security techniques that you can use to protect your emails and their content from unauthorized access. Everyone, from individuals to business owners, uses emails for official communication, which may contain sensitive information. Therefore, securing emails is important, especially when cyberattacks like phishing, smishing, etc.",
    "author": "Ivan Djuric",
    "published": "Thu, 19 Sep 2024 02:29:13 GMT",
    "image": "",
    "source": "https://stackabuse.com/rss/",
    "categories": [
      "python",
      "email"
    ]
  },
  {
    "id": "1ba9c4b6-7fcd-46ed-bf3b-8f4c533a2151",
    "title": "Using Proxies in Web Scraping – All You Need to Know",
    "link": "https://stackabuse.com/using-proxies-in-web-scraping-all-you-need-to-know/",
    "description": "Introduction Web scraping typically refers to an automated process of collecting data from websites. On a high level, you're essentially making a bot that visits a website, detects the data you're interested in, and then stores it into some appropriate data structure, so you can easily analyze and access it",
    "author": "Leonardo Rodriguez",
    "published": "Thu, 12 Sep 2024 13:23:00 GMT",
    "image": "/assets/images/icon-information-circle-solid.svg",
    "source": "https://stackabuse.com/rss/",
    "categories": [
      "node",
      "web scraping"
    ]
  },
  {
    "id": "098d3c24-5828-436d-aa1a-53c22076395d",
    "title": "Building Custom Email Templates with HTML and CSS in Python",
    "link": "https://stackabuse.com/building-custom-email-templates-with-html-and-css-in-python/",
    "description": "An HTML email utilizes HTML code for presentation. Its design is heavy and looks like a modern web page, rich with visual elements like images, videos, etc., to emphasize different parts of an email's content. Building email templates tailored to your brand is useful for various email marketing purposes such",
    "author": "Ivan Djuric",
    "published": "Tue, 20 Aug 2024 19:04:44 GMT",
    "image": "",
    "source": "https://stackabuse.com/rss/",
    "categories": [
      "python",
      "email"
    ]
  },
  {
    "id": "ce38ae98-9651-4e72-86a8-591d9149a00a",
    "title": "Changelog",
    "link": "https://stackabuse.com/changelog/",
    "description": "August 2024 August 16, 2024: Added Changelog page. Added feedback modal to tool pages. August 14, 2024: Auto-save tool settings in local storage. August 13, 2024: Fixed logic for displaying login/signup buttons in nav. Added captcha to newsletter signup. August 2, 2024: Added LD+JSON schema markup for tools.",
    "author": "Scott Robinson",
    "published": "Sat, 17 Aug 2024 03:36:14 GMT",
    "image": "",
    "source": "https://stackabuse.com/rss/",
    "categories": null
  },
  {
    "id": "43f37623-d191-4641-b957-32de2332a3fb",
    "title": "Gracefully Handling Third Party API Failures",
    "link": "https://stackabuse.com/gracefully-handling-third-party-api-failures/",
    "description": "Software isn't what it used to be. That's not necessarily a bad thing, but it does come with its own set of challenges. In the past, if you wanted to build a feature, you'd have to build it from scratch, without AI 😱 Fast forward from the dark ages of just",
    "author": "Scott Robinson",
    "published": "Thu, 13 Jun 2024 20:50:59 GMT",
    "image": "https://s3.stackabuse.com/media/articles/gracefully-handling-third-party-api-failures.png",
    "source": "https://stackabuse.com/rss/",
    "categories": [
      "devops",
      "api"
    ]
  },
  {
    "id": "951e4198-7567-488f-9260-4058bf4f7dac",
    "title": "Simplify Regular Expressions with RegExpBuilderJS",
    "link": "https://stackabuse.com/simplify-regular-expressions-with-regexpbuilderjs/",
    "description": "Regular expressions are on of the most powerful tools in a developer's toolkit. But let's be honest, regex kind of sucks to write. Not only is it hard to write, but it's also hard to read and debug too. So how can we make it easier to use? In its",
    "author": "Scott Robinson",
    "published": "Thu, 06 Jun 2024 18:37:25 GMT",
    "image": "/assets/images/icon-information-circle-solid.svg",
    "source": "https://stackabuse.com/rss/",
    "categories": [
      "regex",
      "javascript",
      "node"
    ]
  },
  {
    "id": "efa959e8-3ec8-4af6-aca0-de87f748bfe4",
    "title": "Guide to Strings in Python",
    "link": "https://stackabuse.com/guide-to-strings-in-python/",
    "description": "A string in Python is a sequence of characters. These characters can be letters, numbers, symbols, or whitespace, and they are enclosed within quotes. Python supports both single (' ') and double (\" \") quotes to define a string, providing flexibility based on the coder's preference or specific requirements of the application.",
    "author": "Dimitrije Stamenic",
    "published": "Thu, 25 Jan 2024 19:10:44 GMT",
    "image": "/assets/images/icon-information-circle-solid.svg",
    "source": "https://stackabuse.com/rss/",
    "categories": [
      "python"
    ]
  },
  {
    "id": "02365d3e-c3ab-4e8c-a1e2-aabdd6cd9cc3",
    "title": "Behind the Scenes: Never Trust User Input",
    "link": "https://stackabuse.com/behind-the-scenes-never-trust-user-input/",
    "description": "This article is the first in a series of posts I'm writing about running various SaaS products and websites for the last 8 years. I'll be sharing some of the issues I've dealt with, lessons I've learned, mistakes I've made, and maybe a few things that went right. Let me",
    "author": "Scott Robinson",
    "published": "Thu, 14 Dec 2023 19:27:59 GMT",
    "image": "https://s3.stackabuse.com/media/articles/behind-the-scenes-never-trust-user-input-1.gif",
    "source": "https://stackabuse.com/rss/",
    "categories": [
      "SaaS"
    ]
  },
  {
    "id": "1b81e604-859c-4ef2-855d-aadf31893f1b",
    "title": "Guide to Heaps in Python",
    "link": "https://stackabuse.com/guide-to-heaps-in-python/",
    "description": "Explore the intricacies of heaps, a tree-based data structure adept at maintaining order and hierarchy. Dive into Python's' heapq module, offering a rich set of functionalities for managing dynamic data sets where priority elements are frequently accessed. Learn how heaps stand out in the world of data structures and their seamless integration in Python.",
    "author": "Dimitrije Stamenic",
    "published": "Wed, 15 Nov 2023 19:21:52 GMT",
    "image": "https://s3.stackabuse.com/media/articles/guide-to-heaps-in-python-1.png",
    "source": "https://stackabuse.com/rss/",
    "categories": [
      "python",
      "data structures"
    ]
  },
  {
    "id": "5129b570-16fb-4644-8ddd-512fda6cca87",
    "title": "Guide to Hash Tables in Python",
    "link": "https://stackabuse.com/hash-tables-in-python/",
    "description": "While Python doesn't have a built-in data structure explicitly called a \"hash table\", it provides the dictionary, which is a form of a hash table. Python dictionaries are unordered collections of key-value pairs, where the key is unique and holds a corresponding value. Thanks to a process known as \"hashing\"",
    "author": "Dimitrije Stamenic",
    "published": "Thu, 09 Nov 2023 20:19:44 GMT",
    "image": "/assets/images/icon-information-circle-solid.svg",
    "source": "https://stackabuse.com/rss/",
    "categories": [
      "python",
      "data structures"
    ]
  },
  {
    "id": "647c190d-c72e-450c-bedf-32e46cf71870",
    "title": "Guide to Queues in Python",
    "link": "https://stackabuse.com/guide-to-queues-in-python/",
    "description": "From storing simple integers to managing complex workflows, data structures lay the groundwork for robust applications. Among them, the queue often emerges as both intriguing and ubiquitous. Think about it - a line at the bank, waiting for your turn at a fast-food counter, or buffering tasks in a computer",
    "author": "Dimitrije Stamenic",
    "published": "Wed, 08 Nov 2023 20:28:07 GMT",
    "image": "https://s3.stackabuse.com/media/articles/guide-to-queues-in-python-1.png",
    "source": "https://stackabuse.com/rss/",
    "categories": [
      "python",
      "data structures"
    ]
  },
  {
    "id": "310062d8-5fd2-4386-bf14-c1e3e99ac241",
    "title": "Guide to Stacks in Python",
    "link": "https://stackabuse.com/guide-to-stacks-in-python/",
    "description": "At its core, a stack is a linear data structure that follows the LIFO (Last In First Out) principle. Think of it as a stack of plates in a cafeteria; you only take the plate that's on top, and when placing a new plate, it goes to the top of",
    "author": "Dimitrije Stamenic",
    "published": "Thu, 02 Nov 2023 15:49:18 GMT",
    "image": "https://s3.stackabuse.com/media/articles/guide-to-stacks-in-python-1.png",
    "source": "https://stackabuse.com/rss/",
    "categories": [
      "python",
      "data structures"
    ]
  },
  {
    "id": "4594236a-3a97-4ed3-b1e7-49e7c1dd9af0",
    "title": "Building Resilient Systems: Disaster Recovery Planning in Database Services",
    "link": "https://stackabuse.com/building-resilient-systems-disaster-recovery-planning-in-database-services/",
    "description": "In the realm of database offerings, where data is the lifeblood of modern businesses, constructing resilient systems isn't just a best practice; it's a strategic imperative. Disaster recovery planning has become a cornerstone in ensuring the continuity of operations, safeguarding valuable data, and minimizing the impact of unexpected events. This",
    "author": "Guest Contributor",
    "published": "Tue, 31 Oct 2023 00:55:00 GMT",
    "image": "",
    "source": "https://stackabuse.com/rss/",
    "categories": [
      "database"
    ]
  },
  {
    "id": "6da1e469-8e14-4da5-bcac-3868f108ab09",
    "title": "Linear Search in Python",
    "link": "https://stackabuse.com/linear-search-in-python/",
    "description": "Linear Search, also known as Sequential Search, operates by traversing through the dataset, element by element until the desired item is found or the algorithm reaches the end of the collection. Its simplicity and ease of implementation make it a go-to choice for small datasets and lists where items are",
    "author": "Dimitrije Stamenic",
    "published": "Thu, 26 Oct 2023 15:47:00 GMT",
    "image": "/assets/images/icon-information-circle-solid.svg",
    "source": "https://stackabuse.com/rss/",
    "categories": [
      "python",
      "algorithms",
      "search"
    ]
  },
  {
    "id": "a4c24f9f-bfee-4a44-8c89-51db09c7ad36",
    "title": "How to Delete a File or Folder in Python",
    "link": "https://stackabuse.com/how-to-delete-a-file-or-folder-in-python/",
    "description": "Deleting a file in Python is fairly easy to do. Let's discuss two methods to accomplish this task using different Python modules. Using the 'os' Module The os module in Python provides a method called os.remove() that can be used to delete a file. Here's a simple example: import",
    "author": "Scott Robinson",
    "published": "Mon, 23 Oct 2023 14:12:00 GMT",
    "image": "/assets/images/icon-information-circle-solid.svg",
    "source": "https://stackabuse.com/rss/",
    "categories": [
      "python"
    ]
  },
  {
    "id": "7d01ccc5-d9c8-4954-83bc-94502ca1a678",
    "title": "GitHub Availability Report: September 2024",
    "link": "https://github.blog/news-insights/company-news/github-availability-report-september-2024/",
    "description": "In September, we experienced three incidents that resulted in degraded performance across GitHub services. The post GitHub Availability Report: September 2024 appeared first on The GitHub Blog.",
    "author": "Jakub Oleksy",
    "published": "Thu, 10 Oct 2024 20:54:17 +0000",
    "image": "",
    "source": "https://github.blog/feed/",
    "categories": [
      "Company news",
      "News \u0026 insights",
      "GitHub Availability Report"
    ]
  },
  {
    "id": "ad21f0ff-b679-48cf-8527-0e98f03293ca",
    "title": "5 tips and tricks when using GitHub Copilot Workspace",
    "link": "https://github.blog/ai-and-ml/github-copilot/5-tips-and-tricks-when-using-github-copilot-workspace/",
    "description": "GitHub Next launched the technical preview for GitHub Copilot Workspace in April 2024. Since then, we’ve been listening to the community, learning, and have some tips to share on how to get the most out of it! The post 5 tips and tricks when using GitHub Copilot Workspace appeared first on The GitHub Blog.",
    "author": "Chris Reddington",
    "published": "Wed, 09 Oct 2024 16:00:44 +0000",
    "image": "https://github.blog/wp-content/uploads/2024/10/rust-example.png?w=1024\u0026resize=1024%2C575",
    "source": "https://github.blog/feed/",
    "categories": [
      "AI \u0026 ML",
      "GitHub Copilot",
      "AI",
      "artificial intelligence",
      "GitHub Copilot Workspace"
    ]
  },
  {
    "id": "dc76c6b0-313f-4434-a3f7-e1faff028390",
    "title": "The second half of software supply chain security on GitHub",
    "link": "https://github.blog/security/supply-chain-security/the-second-half-of-software-supply-chain-security-on-github/",
    "description": "Learn about a community-developed framework for how to think about this problem holistically and how to use GitHub, particularly, to improve the security in the second half of your software supply chain. The post The second half of software supply chain security on GitHub appeared first on The GitHub Blog.",
    "author": "Zachary Steindler",
    "published": "Tue, 08 Oct 2024 18:54:34 +0000",
    "image": "https://github.blog/wp-content/uploads/2024/10/software-supply-chain.png?w=784\u0026resize=784%2C285",
    "source": "https://github.blog/feed/",
    "categories": [
      "Security",
      "Supply chain security",
      "CLI",
      "GitHub Actions"
    ]
  },
  {
    "id": "8974d9ee-2bf7-4068-bff5-1786c07738ae",
    "title": "Highlights from Git 2.47",
    "link": "https://github.blog/open-source/git/highlights-from-git-2-47/",
    "description": "Git 2.47 is here, with features like incremental multi-pack indexes and more. Check out our coverage of some of the highlights here. The post Highlights from Git 2.47 appeared first on The GitHub Blog.",
    "author": "Taylor Blau",
    "published": "Mon, 07 Oct 2024 15:59:17 +0000",
    "image": "https://github.blog/wp-content/uploads/2024/10/image1.png?w=1024\u0026resize=1024%2C453",
    "source": "https://github.blog/feed/",
    "categories": [
      "Git",
      "Open Source"
    ]
  },
  {
    "id": "dbd4b5f8-8335-458f-96a6-723657e34883",
    "title": "How students teamed up to decode 2,000-year-old texts using AI",
    "link": "https://github.blog/ai-and-ml/machine-learning/how-students-teamed-up-to-decode-2000-year-old-texts-using-ai/",
    "description": "Students used GitHub Copilot to decode ancient texts buried in Mount Vesuvius, achieving a groundbreaking historical breakthrough. This is their journey, the technology behind it, and the power of collaboration. The post How students teamed up to decode 2,000-year-old texts using AI appeared first on The GitHub Blog.",
    "author": "Juan Pablo Flores Cortés",
    "published": "Thu, 03 Oct 2024 17:51:58 +0000",
    "image": "https://github.blog/wp-content/uploads/2024/10/Screenshot-2024-10-02-at-11.20.08%E2%80%AFAM.png?w=1024\u0026resize=1024%2C543",
    "source": "https://github.blog/feed/",
    "categories": [
      "AI \u0026 ML",
      "Machine learning",
      "Collaboration",
      "education",
      "GitHub Copilot",
      "GitHub Education",
      "open source"
    ]
  },
  {
    "id": "6e438091-a234-4ec3-b71f-a863f87c0496",
    "title": "Leading the way: 10 projects in the Open Source Zone at GitHub Universe 2024",
    "link": "https://github.blog/open-source/10-projects-in-the-open-source-zone-at-github-universe-2024/",
    "description": "Let’s take a closer look at some of the stars of the Open Source Zone at GitHub Universe 2024 🔎 The post Leading the way: 10 projects in the Open Source Zone at GitHub Universe 2024 appeared first on The GitHub Blog.",
    "author": "Lee Reilly",
    "published": "Thu, 03 Oct 2024 00:05:08 +0000",
    "image": "https://s.w.org/images/core/emoji/15.0.3/72x72/1f50e.png",
    "source": "https://github.blog/feed/",
    "categories": [
      "Open Source",
      "GitHub Accelerator",
      "GitHub Fund",
      "GitHub Sponsors"
    ]
  },
  {
    "id": "337024aa-699c-4f9e-a8ab-848a7f66310b",
    "title": "Cybersecurity spotlight on bug bounty researcher @imrerad",
    "link": "https://github.blog/security/vulnerability-research/cybersecurity-spotlight-on-bug-bounty-researcher-imrerad/",
    "description": "For this year’s Cybersecurity Awareness Month, the GitHub Bug Bounty team is excited to feature another spotlight on a talented security researcher who participates in the GitHub Security Bug Bounty Program—@imrerad! The post Cybersecurity spotlight on bug bounty researcher @imrerad appeared first on The GitHub Blog.",
    "author": "Brandon Szymanski",
    "published": "Tue, 01 Oct 2024 16:00:45 +0000",
    "image": "",
    "source": "https://github.blog/feed/",
    "categories": [
      "Security",
      "Vulnerability research",
      "bug bounty",
      "Cybersecurity Awareness Month"
    ]
  },
  {
    "id": "44aede27-afa1-4e98-bc3f-84c4fc091978",
    "title": "Code referencing now generally available in GitHub Copilot and with Microsoft Azure AI",
    "link": "https://github.blog/news-insights/product-news/code-referencing-now-generally-available-in-github-copilot-and-with-microsoft-azure-ai/",
    "description": "Announcing the general availability of code referencing in GitHub Copilot and Microsoft Azure AI, allowing developers to permit code suggestions containing public code matches while receiving detailed information about the match. The post Code referencing now generally available in GitHub Copilot and with Microsoft Azure AI appeared first on The GitHub Blog.",
    "author": "Yalini Prabhakaran",
    "published": "Mon, 30 Sep 2024 20:14:08 +0000",
    "image": "https://github.blog/wp-content/uploads/2024/09/code-referencing.png?w=1024\u0026resize=1024%2C664",
    "source": "https://github.blog/feed/",
    "categories": [
      "News \u0026 insights",
      "Product",
      "GitHub Copilot",
      "VS Code"
    ]
  },
  {
    "id": "9dadc9c8-6561-4325-8f49-1f9a17602a7c",
    "title": "The nuances and challenges of moderating a code collaboration platform",
    "link": "https://github.blog/news-insights/policy-news-and-insights/the-nuances-and-challenges-of-moderating-a-code-collaboration-platform/",
    "description": "Sharing the latest data update to our Transparency Center alongside a new research article on what makes moderating a code collaboration platform unique. The post The nuances and challenges of moderating a code collaboration platform appeared first on The GitHub Blog.",
    "author": "Margaret Tucker",
    "published": "Mon, 30 Sep 2024 16:00:20 +0000",
    "image": "https://github.blog/wp-content/uploads/2024/09/Screenshot-2024-10-01-at-10.51.41 AM.png?w=788\u0026resize=1400%2C1820",
    "source": "https://github.blog/feed/",
    "categories": [
      "News \u0026 insights",
      "Policy",
      "code moderation",
      "transparency"
    ]
  },
  {
    "id": "23b7245d-f366-4470-9ec3-c40243d20d28",
    "title": "GitHub Copilot now available in github.com for Copilot Individual and Copilot Business plans",
    "link": "https://github.blog/news-insights/product-news/github-copilot-now-available-in-github-com-for-copilot-individual-and-copilot-business-plans/",
    "description": "With this public preview, we’re unlocking the context of your code and collaborators—and taking the next step in infusing AI into every developer’s workflow. The post GitHub Copilot now available in github.com for Copilot Individual and Copilot Business plans appeared first on The GitHub Blog.",
    "author": "Mario Rodriguez",
    "published": "Thu, 26 Sep 2024 18:01:17 +0000",
    "image": "",
    "source": "https://github.blog/feed/",
    "categories": [
      "News \u0026 insights",
      "Product",
      "GitHub Copilot",
      "GitHub Copilot Chat",
      "GitHub Mobile"
    ]
  },
  {
    "id": "60881dc7-eec1-4e8d-82bc-47b79ce59486",
    "title": "More Pro Apps for Non-Pros - WWDC Keynote Recap with Kathy Campbell",
    "link": "https://share.transistor.fm/s/88e9d51b",
    "description": "Follow Kathy Campbell@mrssoupCheck out the Productivity in Tech YouTube Channelhttps://www.youtube.com/c/kjaymillerFollow Jay@kjaymillerMore Episodes and Things at https://podcast.productivityintech.com.Want to Support the Show?While you can't support the show directly you can support all the things Jay is up to by sponsoring him on GitHub!https://github.com/sponsors/kjaymiller/",
    "author": "Jay Miller",
    "published": "Tue, 08 Jun 2021 16:55:08 -0700",
    "image": "https://media.transistor.fm/88e9d51b/25d5dd7b.mp3",
    "source": "https://feeds.transistor.fm/productivity-in-tech-podcast",
    "categories": [
      "Productivity",
      " Technology"
    ]
  },
  {
    "id": "58672459-0285-4d76-80a0-d7f0f46888cb",
    "title": "The Queen of Apple Automation: Rosemary Orchard",
    "link": "https://share.transistor.fm/s/f6991b0b",
    "description": "Markers---00:00:00 - Rosemary Orchard00:04:54 - iOS Today00:06:50 - Nested Folders00:10:10 - Automator and Automating00:17:40 - Automating as a Developer00:31:38 - Closing00:34:24 - AftershowLinks iOS TodayNested FoldersAutomators.fmThe Podcast AnswermanBunches of Automation - AutomatorszapierIntegromatStreamDeckBunchFollow Rose- @Rosemaryorchard- WebsiteFollow Jayhttps://www.youtube.com/c/kjaymiller@kjaymillerMore Episodes and Things at https://podcast.productivityintech.com.Want to Support the Show?Support all the things Jay is up to by sponsoring him on GitHub!https://github.com/sponsors/kjaymiller/",
    "author": "Jay Miller",
    "published": "Tue, 01 Jun 2021 20:21:14 -0700",
    "image": "https://media.transistor.fm/f6991b0b/03be8858.mp3",
    "source": "https://feeds.transistor.fm/productivity-in-tech-podcast",
    "categories": [
      "Productivity",
      " Technology"
    ]
  },
  {
    "id": "490f7d0f-3782-424e-81a4-c95d4dc7e980",
    "title": "Creating Shortcuts from Text w/ Zachary Lineman",
    "link": "https://share.transistor.fm/s/621e051c",
    "description": "Check out Jellycuts- App store- Website link Follow Zachary Lineman - Zach on Twitter Follow Jay @kjaymiller Check out the My YouTube Channel More Episodes and Things at https://podcast.productivityintech.com. Want to Support the Show? Support all the things Jay is up to by sponsoring him on GitHub! https://github.com/sponsors/kjaymiller/",
    "author": "Jay Miller",
    "published": "Tue, 25 May 2021 09:11:54 -0700",
    "image": "https://media.transistor.fm/621e051c/232caccb.mp3",
    "source": "https://feeds.transistor.fm/productivity-in-tech-podcast",
    "categories": [
      "Productivity",
      " Technology"
    ]
  },
  {
    "id": "5466e3a0-7741-4adc-bc67-e148eaf1d92e",
    "title": "Developing Microskills with Tiny Experiments with Sam Julien",
    "link": "https://share.transistor.fm/s/7e6b2c54",
    "description": "Check My YouTube Channel https://www.youtube.com/channel/UCjoJU65IbXkKXsNqydro05QFollow Jay @kjaymillerFollow Sam @samjulienCheck out Sam's ProjectsDeveloper Microskillssamjulien.comMore Episodes and Things at https://podcast.productivityintech.comWant to Support the Show? While you can't support the show directly you can support all the things Jay is up to by sponsoring him on GitHub! https://github.com/sponsors/kjaymiller/",
    "author": "Jay Miller",
    "published": "Tue, 11 May 2021 05:00:00 -0700",
    "image": "https://media.transistor.fm/7e6b2c54/0f1fc121.mp3",
    "source": "https://feeds.transistor.fm/productivity-in-tech-podcast",
    "categories": [
      "Productivity",
      " Technology"
    ]
  },
  {
    "id": "5a64a07f-833b-4968-8234-8495c1008ce9",
    "title": "The PIT Show finally no longer about Productivity (Changes Coming)",
    "link": "https://share.transistor.fm/s/11aecce7",
    "description": "Check out the Productivity in Tech YouTube Channelhttps://www.youtube.com/channel/UCjoJU65IbXkKXsNqydro05QFollow Jay@kjaymillerMore Episodes and Things at https://podcast.productivityintech.com.Want to Support the Show?While you can't support the show directly you can support all the things Jay is up to by sponsoring him on GitHub!https://github.com/sponsors/kjaymiller/",
    "author": "Jay Miller",
    "published": "Sun, 02 May 2021 10:14:32 -0700",
    "image": "https://media.transistor.fm/11aecce7/63f7061d.mp3",
    "source": "https://feeds.transistor.fm/productivity-in-tech-podcast",
    "categories": [
      "Productivity",
      " Technology"
    ]
  },
  {
    "id": "bb5f13af-7ee3-44f3-b6cf-3b1b03014c28",
    "title": "Has Tech Made the World Better",
    "link": "https://share.transistor.fm/s/0a3d1961",
    "description": "Check out the Productivity in Tech YouTube Channelhttps://www.youtube.com/channel/UCjoJU65IbXkKXsNqydro05QFollow Jay@kjaymillerMore Episodes and Things at https://podcast.productivityintech.com.Want to Support the Show?While you can't support the show directly you can support all the things Jay is up to by sponsoring him on GitHub!https://github.com/sponsors/kjaymiller/",
    "author": "Jay Miller",
    "published": "Tue, 20 Apr 2021 09:05:36 -0700",
    "image": "https://media.transistor.fm/0a3d1961/f5147cb3.mp3",
    "source": "https://feeds.transistor.fm/productivity-in-tech-podcast",
    "categories": [
      "Productivity",
      " Technology"
    ]
  },
  {
    "id": "b9fb7cb4-c055-415d-a147-805d4dc40267",
    "title": "Your Daily Internet Radio Friend: Kelly Guimont (@verso)",
    "link": "https://share.transistor.fm/s/cb3ebc35",
    "description": "Check out my YouTube Channelhttps://www.youtube.com/channel/UCjoJU65IbXkKXsNqydro05QFollow KellyThe AftershowMCU TVTDOKelly on the IncomparableFollow Jay@kjaymillerMore Episodes and Things at https://podcast.productivityintech.comWant to Support the Show? While you can't support the show directly you can support all the things Jay is up to by sponsoring him on GitHub!https://github.com/sponsors/kjaymiller/",
    "author": "Jay Miller",
    "published": "Tue, 13 Apr 2021 05:30:00 -0700",
    "image": "https://media.transistor.fm/cb3ebc35/f92c1a99.mp3",
    "source": "https://feeds.transistor.fm/productivity-in-tech-podcast",
    "categories": [
      "Productivity",
      " Technology"
    ]
  },
  {
    "id": "9ff1f1f8-a07b-4a2d-90ab-bc09db2532d3",
    "title": "Information Management Apps and Library Awesomeness /w Cecily Walker",
    "link": "https://share.transistor.fm/s/dfad402e",
    "description": "Information Management, Vespas, and - Cecily WalkerLinks and thingsFLCLDecksetThe Dewey Evidence of Racism and Misogynyhttps://cecily.infoCheck out the Productivity in Tech YouTube Channelhttps://www.youtube.com/channel/UCjoJU65IbXkKXsNqydro05QFollow Jay@kjaymillerMore Episodes and Things at https://podcast.productivityintech.com.Want to Support the Show?While you can’t support the show directly you can support all the things Jay is up to by sponsoring him on GitHub!https://github.com/sponsors/kjaymiller/",
    "author": "Jay Miller",
    "published": "Tue, 06 Apr 2021 05:30:00 -0700",
    "image": "https://media.transistor.fm/dfad402e/ae62aaca.mp3",
    "source": "https://feeds.transistor.fm/productivity-in-tech-podcast",
    "categories": [
      "Productivity",
      " Technology"
    ]
  },
  {
    "id": "817891c3-40c6-4fb9-b1ac-193340e554c6",
    "title": "Context",
    "link": "https://share.transistor.fm/s/87390472",
    "description": "Check out the Productivity in Tech YouTube Channelhttps://www.youtube.com/channel/UCjoJU65IbXkKXsNqydro05QFollow Jay@kjaymillerMore Episodes and Things at https://podcast.productivityintech.com.Want to Support the Show?While you can't support the show directly you can support all the things Jay is up to by sponsoring him on GitHub!https://github.com/sponsors/kjaymiller/",
    "author": "Jay Miller",
    "published": "Tue, 30 Mar 2021 22:29:20 -0700",
    "image": "https://media.transistor.fm/87390472/0fecf54c.mp3",
    "source": "https://feeds.transistor.fm/productivity-in-tech-podcast",
    "categories": [
      "Productivity",
      " Technology"
    ]
  },
  {
    "id": "331642a1-042b-4dc9-92c6-683856e1b71e",
    "title": "Talking Productivity and Widgets (Yes On this Show...) with Scotty Jackson",
    "link": "https://share.transistor.fm/s/6e8786b8",
    "description": "Be sure to stay after the music for the After Show where Scotty Interviews Jay!Follow Scotty@HeyScottyJhttps://heyscottyj.comFollow Jay@kjaymillerMore Episodes and Things at https://podcast.productivityintech.com.Want to Support the Show?While you can't support the show directly you can support all the things Jay is up to by sponsoring him on GitHub!https://github.com/sponsors/kjaymiller/",
    "author": "Jay Miller",
    "published": "Tue, 23 Mar 2021 08:34:06 -0700",
    "image": "https://media.transistor.fm/6e8786b8/34ba3d89.mp3",
    "source": "https://feeds.transistor.fm/productivity-in-tech-podcast",
    "categories": [
      "Productivity",
      " Technology"
    ]
  },
  {
    "id": "f1376295-f1d1-4f70-b63d-25b5c4517f55",
    "title": "Advocating for yourself: ADHD and Dyslexia for Underrepresented Folks w/ Wesley Faulkner",
    "link": "https://share.transistor.fm/s/243b9705",
    "description": "Check out the Productivity in Tech YouTube Channelhttps://www.youtube.com/channel/UCjoJU65IbXkKXsNqydro05QFollow Jay@kjaymillerFollow Wesley@wesley83More Episodes and Things at https://podcast.productivityintech.com.Want to Support the Show?While you can't support the show directly you can support all the things Jay is up to by sponsoring him on GitHub!https://github.com/sponsors/kjaymiller/",
    "author": "Jay Miller",
    "published": "Tue, 16 Mar 2021 09:11:02 -0700",
    "image": "https://media.transistor.fm/243b9705/5ad08bb0.mp3",
    "source": "https://feeds.transistor.fm/productivity-in-tech-podcast",
    "categories": [
      "Productivity",
      " Technology"
    ]
  },
  {
    "id": "15bdebec-0f5c-4254-8692-2fdd8a6a25fe",
    "title": "From IT to Photography: Ant Pruitt's Career Journey",
    "link": "https://share.transistor.fm/s/af268525",
    "description": "Check out the Productivity in Tech YouTube Channelhttps://www.youtube.com/channel/UCjoJU65IbXkKXsNqydro05QFollow Ant@ant_pruittFollow Jay@kjaymillerMore Episodes and Things at https://podcast.productivityintech.com.Want to Support the Show?While you can't support the show directly you can support all the things Jay is up to by sponsoring him on GitHub!https://github.com/sponsors/kjaymiller/",
    "author": "Jay Miller",
    "published": "Tue, 09 Mar 2021 04:50:07 -0800",
    "image": "https://media.transistor.fm/af268525/96afa6de.mp3",
    "source": "https://feeds.transistor.fm/productivity-in-tech-podcast",
    "categories": [
      "Productivity",
      " Technology"
    ]
  },
  {
    "id": "892fe315-89a7-44ef-a631-bb7b5b0294c5",
    "title": "Expect More, Say Less, Do Less - Bullet Journal Monthly Migration Insights",
    "link": "https://share.transistor.fm/s/024eabd1",
    "description": "Check out the Productivity in Tech YouTube Channelhttps://www.youtube.com/channel/UCjoJU65IbXkKXsNqydro05QFollow Jay@kjaymillerMore Episodes and Things at https://podcast.productivityintech.com.Want to Support the Show?While you can't support the show directly you can support all the things Jay is up to by sponsoring him on GitHub!https://github.com/sponsors/kjaymiller/",
    "author": "Jay Miller",
    "published": "Tue, 02 Mar 2021 14:58:08 -0800",
    "image": "https://media.transistor.fm/024eabd1/c4ac134b.mp3",
    "source": "https://feeds.transistor.fm/productivity-in-tech-podcast",
    "categories": [
      "Productivity",
      " Technology"
    ]
  },
  {
    "id": "c9c9249e-b146-4f4c-853a-4ce0e59523e0",
    "title": "Lessons from a Senior Developer - Jono Yeong",
    "link": "https://share.transistor.fm/s/67e47095",
    "description": "Check out Jonathan's 5 Lessons he's learned as a developerhttps://www.youtube.com/watch?v=5ASt-kdy-pYCheck out the Productivity in Tech YouTube Channelhttps://www.youtube.com/channel/UCw9MKaVM-8EPNyhW3VYVacQFollow Jono@JonoYeongFollow Jay@kjaymillerMore Episodes and Things at https://podcast.productivityintech.com.Want to Support the Show?While you can't support the show directly you can support all the things Jay is up to by sponsoring him on GitHub!https://github.com/sponsors/kjaymiller/",
    "author": "Jay Miller",
    "published": "Mon, 22 Feb 2021 07:30:00 -0800",
    "image": "https://media.transistor.fm/67e47095/92414788.mp3",
    "source": "https://feeds.transistor.fm/productivity-in-tech-podcast",
    "categories": [
      "Productivity",
      " Technology"
    ]
  },
  {
    "id": "d8329242-9b65-431d-9f34-25e8051274ed",
    "title": "Understanding your ADHD Superpowers w/ ADHD Coach Brittany Smith",
    "link": "https://share.transistor.fm/s/fddb0555",
    "description": "Links and Things:Home Game (Freediving Reference)Check out Follow Brittany ADHD Guild!https://conquer.consulting/join-the-adhd-guildFollow Brittany@addliberatordeviseandconquer.comFollow Jay@kjaymillerhttps://kjaymiller.com Check out my YouTube ChannelMore Episodes and Things at https://podcast.productivityintech.com.Want to Support the Show?While you can’t support the show directly you can support all the things Jay is up to by sponsoring him on GitHub!https://github.com/sponsors/kjaymiller/",
    "author": "Jay Miller",
    "published": "Tue, 16 Feb 2021 07:15:00 -0800",
    "image": "https://media.transistor.fm/fddb0555/2bac7633.mp3",
    "source": "https://feeds.transistor.fm/productivity-in-tech-podcast",
    "categories": [
      "Productivity",
      " Technology"
    ]
  },
  {
    "id": "6246b467-14f9-4fce-91b6-cbee2c611f20",
    "title": "The Hidden Costs of Supporting Your Little Projects",
    "link": "https://share.transistor.fm/s/b0b8d1df",
    "description": "Follow Brett - BrettTerpstra.comFollow Nikema - nikemawrites.comFollow Jeff - https://django-news.comFollow Jay - https://kjaymiller.comSubscribe to my YouTube ChannelMore Episodes and Things at https://podcast.productivityintech.com.Want to Support the Show?Support all the things Jay is up to by sponsoring him on GitHub!https://github.com/sponsors/kjaymiller/",
    "author": "Jay Miller",
    "published": "Sun, 07 Feb 2021 19:34:06 -0800",
    "image": "https://media.transistor.fm/b0b8d1df/fd6c50e6.mp3",
    "source": "https://feeds.transistor.fm/productivity-in-tech-podcast",
    "categories": [
      "Productivity",
      " Technology"
    ]
  },
  {
    "id": "7f9c338c-f489-44bf-a935-badb962d655b",
    "title": "Making it as a Full-Time YouTuber",
    "link": "https://share.transistor.fm/s/c3e4908e",
    "description": "Check out the Productivity in Tech YouTube Channelhttps://www.youtube.com/channel/UCw9MKaVM-8EPNyhW3VYVacQFollow Chris' YouTube Channel- And Everywhere Else - The Untitled SiteFollow Jay@kjaymillerFollow Productivity in Tech@prod_in_techhttps://productivityintech.comMore Episodes and Things at https://podcast.productivityintech.com.Want to Support the Show?While you can't support the show directly you can support all the things Jay is up to by sponsoring him on GitHub!https://github.com/sponsors/kjaymiller/",
    "author": "Jay Miller",
    "published": "Tue, 02 Feb 2021 16:32:39 -0800",
    "image": "https://media.transistor.fm/c3e4908e/2d6ca57f.mp3",
    "source": "https://feeds.transistor.fm/productivity-in-tech-podcast",
    "categories": [
      "Productivity",
      " Technology"
    ]
  },
  {
    "id": "69ee9213-4c5e-429a-a7e0-536850b7b221",
    "title": "OODA Looping All Over the Place",
    "link": "https://share.transistor.fm/s/a10ff007",
    "description": "OODA LoopOSMEACCheck out the Productivity in Tech YouTube Channelhttps://www.youtube.com/channel/UCw9MKaVM-8EPNyhW3VYVacQFollow Jay@kjaymillerFollow Productivity in Tech@prod_in_techhttps://productivityintech.comMore Episodes and Things at https://podcast.productivityintech.com.Want to Support the Show?While you can't support the show directly you can support all the things Jay is up to by sponsoring him on GitHub!https://github.com/sponsors/kjaymiller/",
    "author": "Jay Miller",
    "published": "Tue, 26 Jan 2021 22:11:55 -0800",
    "image": "https://media.transistor.fm/a10ff007/69963e8f.mp3",
    "source": "https://feeds.transistor.fm/productivity-in-tech-podcast",
    "categories": [
      "Productivity",
      " Technology"
    ]
  },
  {
    "id": "5fdb4167-e61a-4d8e-9cc5-20c45c7ea52a",
    "title": "Conference Driven Development with Brian Douglas",
    "link": "https://share.transistor.fm/s/1683fd63",
    "description": "Check out the Productivity in Tech YouTube Channelhttps://www.youtube.com/channel/UCw9MKaVM-8EPNyhW3VYVacQFollow Jay@kjaymillerFollow Productivity in Tech@prod_in_techhttps://productivityintech.comMore Episodes and Things at https://podcast.productivityintech.com.Want to Support the Show?While you can't support the show directly you can support all the things Jay is up to by sponsoring him on GitHub!https://github.com/sponsors/kjaymiller/",
    "author": "Jay Miller",
    "published": "Mon, 18 Jan 2021 14:33:51 -0800",
    "image": "https://media.transistor.fm/1683fd63/9ccc73b9.mp3",
    "source": "https://feeds.transistor.fm/productivity-in-tech-podcast",
    "categories": [
      "Productivity",
      " Technology"
    ]
  },
  {
    "id": "17400561-d015-4018-8399-d6763b729c8d",
    "title": "BrainDumps: Why I do them regularly (and you should too!)",
    "link": "https://share.transistor.fm/s/be442e56",
    "description": "Check out the Productivity in Tech YouTube Channelhttps://www.youtube.com/channel/UCw9MKaVM-8EPNyhW3VYVacQFollow Jay@kjaymillerFollow Productivity in Tech@prod_in_techhttps://productivityintech.comMore Episodes and Things at https://podcast.productivityintech.com.Want to Support the Show?While you can't support the show directly you can support all the things Jay is up to by sponsoring him on GitHub!https://github.com/sponsors/kjaymiller/",
    "author": "Jay Miller",
    "published": "Mon, 11 Jan 2021 21:25:46 -0800",
    "image": "https://media.transistor.fm/be442e56/e3ff05a2.mp3",
    "source": "https://feeds.transistor.fm/productivity-in-tech-podcast",
    "categories": [
      "Productivity",
      " Technology"
    ]
  },
  {
    "id": "b09b7db3-9af8-40cf-aa1b-45f1fe21a74e",
    "title": "Think you don’t need observability? Think again",
    "link": "https://stackoverflow.blog/podcast/",
    "description": "Memento is a real-time data platform designed to help developers ship better products faster. Explore the platform here or get started in the docs. Connect with Daniela on LinkedIn and follow Momento on X.Stack Overflow user Simon Juhl won a Lifeboat badge for dropping some knowledge on HTMLCSS change Date input highlight color.",
    "author": "Ben Popper, Ryan Donovan, Daniela Miao",
    "published": "Tue, 8 Oct 2024 04:20:00 +0000",
    "image": "https://chrt.fm/track/G8F1AF/pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/a76a8c55-2430-44e1-9537-4708424aaab3/audio/128/default.mp3?aid=rss_feed\u0026awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b\u0026awEpisodeId=a76a8c55-2430-44e1-9537-4708424aaab3\u0026feed=XA_851k3",
    "source": "https://feeds.simplecast.com/XA_851k3",
    "categories": [
      "rust",
      " momento",
      " availability",
      " observability",
      " uptime",
      " data platform",
      " aws",
      " real-time observability",
      " multi-tenancy",
      " webassembly",
      " ui",
      " caching"
    ]
  },
  {
    "id": "fe1b1020-2df3-4729-98d3-2cb45c6ceedb",
    "title": "Meet the AI native developers who build software through prompt engineering",
    "link": "https://stackoverflow.blog/podcast/",
    "description": "You can find Crystal on LinkedIn.You can learn more about FSH Tech here.Congrats to Stack OVerflow user David Conrad, who earned a lifeboat badge for answering the question: How do I create a map with key and value in one line in Java?",
    "author": "Stack Overflow",
    "published": "Fri, 4 Oct 2024 04:05:00 +0000",
    "image": "https://chrt.fm/track/G8F1AF/pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/072ab662-1dac-42d3-bd5a-a5e4d8030703/audio/128/default.mp3?aid=rss_feed\u0026awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b\u0026awEpisodeId=072ab662-1dac-42d3-bd5a-a5e4d8030703\u0026feed=XA_851k3",
    "source": "https://feeds.simplecast.com/XA_851k3",
    "categories": null
  },
  {
    "id": "3b03c4ca-31e2-4f03-a8bb-95bb57685ced",
    "title": "A developer works to balance the data center boom with his climate change battle",
    "link": "https://stackoverflow.blog/podcast/",
    "description": "You can find David on LinkedIn.You can learn more about Arcjet here.You can subscribe to to the console.dev newsletter and podcast here.Congrats to Stack Overflow user Greg Hewgill who earned a Populist badge for his answer to the question: What’s a good tool to determine the lowest version of Python required? Greg is getting close to the magic one million rep mark!",
    "author": "Stack Overflow",
    "published": "Tue, 1 Oct 2024 04:05:00 +0000",
    "image": "https://chrt.fm/track/G8F1AF/pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/8d605370-d3dd-4cf6-8a4b-957926e41f32/audio/128/default.mp3?aid=rss_feed\u0026awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b\u0026awEpisodeId=8d605370-d3dd-4cf6-8a4b-957926e41f32\u0026feed=XA_851k3",
    "source": "https://feeds.simplecast.com/XA_851k3",
    "categories": null
  },
  {
    "id": "7509fc2f-00d4-4f43-ac67-9896a9ab7665",
    "title": "This dev went from coding at Meta, to search at Google, to investing in AI with Anthropic",
    "link": "https://stackoverflow.blog/podcast/",
    "description": "You can find Deedy on Twitter and LinkedIn.You can learn more about the Anthology Fund here.You can learn more about Menlo Ventures here.Congrats to Stack Overflow users Bobince for earning a Populist badge with their answer to the question: What does sorting mean in non-alphabetic languages?",
    "author": "Stack Overflow",
    "published": "Fri, 27 Sep 2024 04:05:00 +0000",
    "image": "https://chrt.fm/track/G8F1AF/pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/3deb464e-82fc-4cf2-a4f5-416e0b0eca41/audio/128/default.mp3?aid=rss_feed\u0026awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b\u0026awEpisodeId=3deb464e-82fc-4cf2-a4f5-416e0b0eca41\u0026feed=XA_851k3",
    "source": "https://feeds.simplecast.com/XA_851k3",
    "categories": null
  },
  {
    "id": "efe29cf3-c2aa-4cbf-871b-efcb64f0c0c3",
    "title": "He sold his first company for billions. Now he’s building a better developer experience.",
    "link": "https://stackoverflow.blog/podcast/",
    "description": "Jyoti is a cofounder and CEO of Harness, a software delivery platform meant to modernize your DevOps tooling and take the friction out of CI/CD. Devs can get started with the developer portal. In addition to Harness, Jyoti is a cofounder and entrepreneur partner at Unusual Ventures, which specializes in working with early-stage startups (pre-seed to Series A).Connect with Jyoti on LinkedIn. Shoutout to Stack Overflow user kukuh, who won a Lifeboat badge for dishing out some wisdom on Android productFlavors in gradle-kotlin-dsl.",
    "author": "Ben Popper, Jyoti Bansal, Cassidy Williams, Eira May",
    "published": "Tue, 24 Sep 2024 04:20:00 +0000",
    "image": "https://chrt.fm/track/G8F1AF/pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/1c120dbf-a329-4228-85ba-04f6390b0792/audio/128/default.mp3?aid=rss_feed\u0026awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b\u0026awEpisodeId=1c120dbf-a329-4228-85ba-04f6390b0792\u0026feed=XA_851k3",
    "source": "https://feeds.simplecast.com/XA_851k3",
    "categories": [
      "harness",
      " vc",
      " venture capital",
      " ai",
      " software development",
      " vc funding"
    ]
  },
  {
    "id": "0d0fc405-1c90-479b-9ca6-ebd3c034bea4",
    "title": "How to detect errors in AI-generated code",
    "link": "https://stackoverflow.blog/podcast/",
    "description": "Read the paper Gias coauthored about incorrectness in AI-generated code or explore more of his research. You can connect with Gias via his website.We previously covered research on Stack Overflow code snippets that Gias was involved in and spoke to his team about deriving sentiment from SO comments.  Shoutout to Stack Overflow user Adhi Ardiansyah for an excellent explanation of How to update a GitHub access token via command line.",
    "author": "Ben Popper, Gias Uddin",
    "published": "Fri, 20 Sep 2024 04:20:00 +0000",
    "image": "https://chrt.fm/track/G8F1AF/pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/18670583-8fce-4f92-a03c-b5dacae5d123/audio/128/default.mp3?aid=rss_feed\u0026awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b\u0026awEpisodeId=18670583-8fce-4f92-a03c-b5dacae5d123\u0026feed=XA_851k3",
    "source": "https://feeds.simplecast.com/XA_851k3",
    "categories": [
      "code generation",
      " testing",
      " ai",
      " llm",
      " hallucinations",
      " qa"
    ]
  },
  {
    "id": "d8137da2-0f47-486b-a6ec-80e48ad67175",
    "title": "Looking under the hood of multimodal AI",
    "link": "https://stackoverflow.blog/podcast/",
    "description": "Multimodal AI combines different modalities—audio, video, text, etc.—to enable more humanlike engagement and higher-quality responses from the AI model. WebRTC is a free, open-source project that allows developers to add real-time communication capabilities that work on top of an open standard to their applications. It supports video, voice, and generic data.LiveKit is an open-source project that provides scalable, multi-user conferencing based on WebRTC. It’s designed to provide everything developers need to build real-time voice and video applications. Check them out on GitHub.Connect with Russ on LinkedIn or X and explore his posts on the LiveKit blog.Stack Overflow user Kristi Jorgji threw inquiring minds a lifejacket (badge) by answering their own question: Error trying to import dump from mysql 5.7 into 8.0.23.",
    "author": "Ryan Donovan, Russ d’Sa",
    "published": "Tue, 17 Sep 2024 04:20:00 +0000",
    "image": "https://chrt.fm/track/G8F1AF/pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/8971cd14-91e1-4ef1-a5ca-9a8123741aeb/audio/128/default.mp3?aid=rss_feed\u0026awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b\u0026awEpisodeId=8971cd14-91e1-4ef1-a5ca-9a8123741aeb\u0026feed=XA_851k3",
    "source": "https://feeds.simplecast.com/XA_851k3",
    "categories": [
      "udp",
      " ai",
      " multimodal ai",
      " webrtc",
      " security",
      " tech stack",
      " privacy",
      " infrastructure",
      " streaming data"
    ]
  },
  {
    "id": "28a8f454-f92c-48bc-829a-c62b1c9b160a",
    "title": "The world’s largest open-source business has plans for enhancing LLMs",
    "link": "https://stackoverflow.blog/podcast/",
    "description": "Red Hat Enterprise Linux may be the world’s largest open-source software business. You can dive into the docs here.Created by IBM and Red Hat, InstructLab is an open-source project for enhancing LLMs. Learn more here or join the community on GitHub.Connect with Scott on LinkedIn.  User AffluentOwl earned a Great Question badge by wondering How to force JavaScript to deep copy a string?.",
    "author": "Scott McCarty, Ryan Donovan, Ben Popper",
    "published": "Fri, 13 Sep 2024 04:20:00 +0000",
    "image": "https://chrt.fm/track/G8F1AF/pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/42bab346-f76d-4b19-bc08-0474fdf98be5/audio/128/default.mp3?aid=rss_feed\u0026awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b\u0026awEpisodeId=42bab346-f76d-4b19-bc08-0474fdf98be5\u0026feed=XA_851k3",
    "source": "https://feeds.simplecast.com/XA_851k3",
    "categories": [
      "llms",
      " open source",
      " red hat"
    ]
  },
  {
    "id": "8e0ca37e-54ee-4234-9a18-9a1d5a01517f",
    "title": "The evolution of full stack engineers",
    "link": "https://stackoverflow.blog/podcast/",
    "description": "From her early days coding on a TI-84 calculator, to working as an engineer at IBM, to pivoting over to her new role in DevRel, speaking, and community, Mrina has seen the world of coding from many angles. You can follow her on Twitter here and on LinkedIn here.You can learn more about CK editor here and TinyMCE here.Congrats to Stack Overflow user NYI for earning a great question badge by asking: How do I convert a bare git repository into a normal one (in-place)?",
    "author": "Stack Overflow",
    "published": "Tue, 10 Sep 2024 04:05:00 +0000",
    "image": "https://chrt.fm/track/G8F1AF/pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/b6659adf-867f-445e-93d3-cbe1701480c6/audio/128/default.mp3?aid=rss_feed\u0026awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b\u0026awEpisodeId=b6659adf-867f-445e-93d3-cbe1701480c6\u0026feed=XA_851k3",
    "source": "https://feeds.simplecast.com/XA_851k3",
    "categories": null
  },
  {
    "id": "b13c72c9-52a2-46c0-99c2-c8738cde29ec",
    "title": "The creator of Jenkins discusses CI/CD and balancing business with open source",
    "link": "https://stackoverflow.blog/podcast/",
    "description": "You can learn more about Kohsuke on his website.You can read more about Jenkins here.You can read more about Cloudbees here.Shout to Mossmyr for contributing a question that's now part of our CI/CD Collective:  Is there a way to call a Jenkins Shared Library method from another Jenkins Shared Library?",
    "author": "Stack Overflow",
    "published": "Fri, 6 Sep 2024 04:05:00 +0000",
    "image": "https://chrt.fm/track/G8F1AF/pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/4e33faad-0cb5-4a3f-8623-add49e6b8cf1/audio/128/default.mp3?aid=rss_feed\u0026awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b\u0026awEpisodeId=4e33faad-0cb5-4a3f-8623-add49e6b8cf1\u0026feed=XA_851k3",
    "source": "https://feeds.simplecast.com/XA_851k3",
    "categories": null
  },
  {
    "id": "c707d964-db25-4fc3-a39e-34186bfd2220",
    "title": "At scale, anything that could fail definitely will",
    "link": "https://stackoverflow.blog/podcast/",
    "description": "Pradeep talks about building at global scale and preparing for inevitable system failures. He talks about extra layers of security, including viewing your own VMs as untrustworthy. And he lays out where he thinks the world of cloud computing is headed as GenAI becomes a bigger piece of many company’s tech stack. You can find Pradeep on LinkedIn. He also writes a blog and hosts a podcast over at Oracle First Principles. Congrats to Stack Overflow user shantanu, who earned a Great Question badge for asking: Which shell I am using in mac? Over 100,000 people have benefited from your curiosity.",
    "author": "Stack Overflow",
    "published": "Tue, 3 Sep 2024 04:05:00 +0000",
    "image": "https://chrt.fm/track/G8F1AF/pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/abe444d2-8fad-42d4-b82b-bcf9afa56d61/audio/128/default.mp3?aid=rss_feed\u0026awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b\u0026awEpisodeId=abe444d2-8fad-42d4-b82b-bcf9afa56d61\u0026feed=XA_851k3",
    "source": "https://feeds.simplecast.com/XA_851k3",
    "categories": null
  },
  {
    "id": "b8069141-fceb-4567-bddf-390575db1f43",
    "title": "Mobile Observability: monitoring performance through cracked screens, old batteries, and crappy Wi-Fi",
    "link": "https://stackoverflow.blog/podcast/",
    "description": "You can learn more about Austin on LinkedIn and check out a blog he wrote on building the SDK for Open Telemetry here.You can find Austin at the CNCF Slack community, in the OTel SIG channel, or the client-side SIG channels. The calendar is public on opentelemetry.io. Embrace has its own Slack community to talk all things Embrace or all things mobile observability. You can join that by going to embrace.io as well.Congrats to Stack Overflow user Cottentail for earning an Illuminator badge, awarded when a user edits and answers 500 questions, both actions within 12 hours.",
    "author": "Stack Overflow",
    "published": "Fri, 30 Aug 2024 04:05:00 +0000",
    "image": "https://chrt.fm/track/G8F1AF/pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/4e92947f-034b-4a22-bb0b-fa5f9a10e432/audio/128/default.mp3?aid=rss_feed\u0026awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b\u0026awEpisodeId=4e92947f-034b-4a22-bb0b-fa5f9a10e432\u0026feed=XA_851k3",
    "source": "https://feeds.simplecast.com/XA_851k3",
    "categories": null
  },
  {
    "id": "7130f7c6-e388-4298-8ffb-27179bf2fd37",
    "title": "Where does Postgres fit in a world of GenAI and vector databases?",
    "link": "https://stackoverflow.blog/podcast/",
    "description": "For the last two years, Postgres has been the most popular database among respondents to our Annual Developer Survey. Timescale is a startup working on an open-source PostgreSQEL stack for AI applications. You can follow the company on X and check out their work on GitHub. You can learn more about Avthar on his website and on LinkedIn. Congrats to Stack Overflow user Haymaker for earning a Great Question badge. They asked: How Can I Override the Default SQLConnection Timeout? Nearly 250,000 other people have been curious about this same question.",
    "author": "Stack Overflow",
    "published": "Tue, 27 Aug 2024 04:05:00 +0000",
    "image": "https://chrt.fm/track/G8F1AF/pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/0da2ebc4-eee8-4ef5-9b8d-7373ef793270/audio/128/default.mp3?aid=rss_feed\u0026awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b\u0026awEpisodeId=0da2ebc4-eee8-4ef5-9b8d-7373ef793270\u0026feed=XA_851k3",
    "source": "https://feeds.simplecast.com/XA_851k3",
    "categories": null
  },
  {
    "id": "2ef1a8a5-34c6-4e0e-87c4-0f84bd3b994f",
    "title": "From PHP to JavaScript to Kubernetes: how backend engineering evolved",
    "link": "https://stackoverflow.blog/podcast/",
    "description": "You can learn more about Geshan on his website or check him out on LinkedIn.Geshan also shared the slide decks for a few of his talks on serverless and containers.Congrats to Stack Overflow user Matthew Reed for earning a populist badge with his answer to the question: GitHub: How to do case sensitive search for the code in repository?",
    "author": "Stack Overflow",
    "published": "Fri, 23 Aug 2024 04:05:00 +0000",
    "image": "https://chrt.fm/track/G8F1AF/pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/a3018675-5592-4c43-9daa-61014b57f5d8/audio/128/default.mp3?aid=rss_feed\u0026awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b\u0026awEpisodeId=a3018675-5592-4c43-9daa-61014b57f5d8\u0026feed=XA_851k3",
    "source": "https://feeds.simplecast.com/XA_851k3",
    "categories": null
  },
  {
    "id": "8568ced3-b67f-4018-8809-25f9a3cdcf95",
    "title": "Ryan Dahl explains why Deno had to evolve with version 2.0",
    "link": "https://stackoverflow.blog/podcast/",
    "description": "If you’ve never seen it, check out Ryan’s classic talk, 10 Things I Regret About Node.JS, which gives a great overview of the reasons he felt compelled to create Deno.You can learn more about Ryan on Wikipedia, his website, and his Github page.To learn more about Deno 2.0, listen to Ryan talk about it here and check out the project’s Github page here.Congrats to Hugo G, who earned a Great Answer Badge for his input on the following question: How can I declare and use Boolean variables in a shell script?",
    "author": "Stack Overflow",
    "published": "Tue, 20 Aug 2024 04:05:00 +0000",
    "image": "https://chrt.fm/track/G8F1AF/pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/1424eec2-873a-4b40-8a46-ff6d33c17f20/audio/128/default.mp3?aid=rss_feed\u0026awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b\u0026awEpisodeId=1424eec2-873a-4b40-8a46-ff6d33c17f20\u0026feed=XA_851k3",
    "source": "https://feeds.simplecast.com/XA_851k3",
    "categories": null
  },
  {
    "id": "eb85c612-567d-4c07-a783-07094bc4245b",
    "title": "Battling ticket bots and untangling taxes at the frontiers of e-commerce",
    "link": "https://stackoverflow.blog/podcast/",
    "description": "You can find Ilya on LinkedIn here.You can listen to Ilya talk about Commerce Components here, a system he describes as a \"modern way to approach your commerce architecture without reducing it to a (false) binary choice between microservices and monoliths.\"As Ilya notes, “there are a lot of interesting implications for runtime and how we're solving it at Shopify. There is a direct bridge there to a performance conversation as well: moving untrusted scripts off the main thread, sandboxing UI extensions, and more.” No badge winner today. Instead, user Kaizen has a question about Shopify that still needs an answer. Maybe you can help! How to Activate Shopify Web Pixel Extension on Production Store?",
    "author": "Ryan Donovan",
    "published": "Fri, 16 Aug 2024 04:05:00 +0000",
    "image": "https://chrt.fm/track/G8F1AF/pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/2831a1c2-b1d4-4a5e-b662-a444e6596a90/audio/128/default.mp3?aid=rss_feed\u0026awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b\u0026awEpisodeId=2831a1c2-b1d4-4a5e-b662-a444e6596a90\u0026feed=XA_851k3",
    "source": "https://feeds.simplecast.com/XA_851k3",
    "categories": null
  },
  {
    "id": "a7281af6-f013-4533-9e36-723101003502",
    "title": "Scaling systems to manage the data about the data",
    "link": "https://stackoverflow.blog/podcast/",
    "description": "Coalesce is a solution to transform data at scale. You can find Satish on LinkedIn. We previously spoke to Satish for a Q\u0026A on the blog: AI is only as good as the data: Q\u0026A with Satish Jayanthi of CoalesceWe previously covered metadata on the blog: Metadata, not data, is what drags your database downCongrats to Lifeboat winner nwinkler for saving this question with a great answer: Docker run hello-world not working",
    "author": "Stack Overflow",
    "published": "Tue, 13 Aug 2024 04:05:00 +0000",
    "image": "https://chrt.fm/track/G8F1AF/pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/fa65ba39-dd71-436f-bbcb-2e8f93c8a057/audio/128/default.mp3?aid=rss_feed\u0026awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b\u0026awEpisodeId=fa65ba39-dd71-436f-bbcb-2e8f93c8a057\u0026feed=XA_851k3",
    "source": "https://feeds.simplecast.com/XA_851k3",
    "categories": null
  },
  {
    "id": "b2f57253-f87e-41a0-9586-ffc138b0a4a8",
    "title": "How we’re making Stack Overflow more accessible",
    "link": "https://stackoverflow.blog/podcast/",
    "description": "Read Dan’s blog post about the process of making Stack Overflow more accessible.We followed the Web Content Accessibility Guidelines (WCAG), with a few exceptions. For example, we chose to measure color contrast using the Accessible Perceptual Contrast Algorithm (APCA). We quantified the accessibility of our products using the Axe accessibility testing engine.Our accessibility dashboard helps our internal teams and the community track the accessibility of our products: Stacks (our design system), the public platform (Stack Overflow and all Stack Exchange sites), and Stack Overflow for Teams (including Stack Overflow for Teams Enterprise products). We also implemented robust accessibility testing and made those rules open-source in a comprehensive package you can find here.Shoutout to user Beejor for an excellent answer to the question What is the largest safe UDP packet size on the internet?.",
    "author": "Dan Cormier, Giamir Buoncristiani, Ryan Donovan",
    "published": "Fri, 9 Aug 2024 04:20:00 +0000",
    "image": "https://chrt.fm/track/G8F1AF/pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/bc16251a-60b5-4587-85c0-37069c8e7dc4/audio/128/default.mp3?aid=rss_feed\u0026awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b\u0026awEpisodeId=bc16251a-60b5-4587-85c0-37069c8e7dc4\u0026feed=XA_851k3",
    "source": "https://feeds.simplecast.com/XA_851k3",
    "categories": [
      "front end development",
      " accessibility",
      " design"
    ]
  },
  {
    "id": "cf1418d6-e6c1-47bf-8d03-662b629d01ef",
    "title": "Unpacking the 2024 Developer Survey results",
    "link": "https://stackoverflow.blog/podcast/",
    "description": "Read the blog post or dive into the results of our 2024 Developer Survey.A few highlights to get you started: most popular technologies,most admired and desired programming languages,feelings about/use of AI coding tools, andwhat we know about the global developer community.Speaking of our developer community, Stack Overflow user Frank earned a Stellar Question badge by wondering How to use C++ in Go.",
    "author": "Ryan Donovan, Eira May, Erin Yepis",
    "published": "Tue, 6 Aug 2024 04:20:00 +0000",
    "image": "https://chrt.fm/track/G8F1AF/pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/4feb8208-db7d-47dd-9dd4-5caa0d455fcc/audio/128/default.mp3?aid=rss_feed\u0026awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b\u0026awEpisodeId=4feb8208-db7d-47dd-9dd4-5caa0d455fcc\u0026feed=XA_851k3",
    "source": "https://feeds.simplecast.com/XA_851k3",
    "categories": [
      "developer experience",
      " ai coding tools",
      " developer survey",
      " community",
      " programming languages",
      " research",
      " coding"
    ]
  },
  {
    "id": "5e0202e0-6979-4c92-b95f-b4d746b47be5",
    "title": "How developer experience can escape the spreadsheet",
    "link": "https://stackoverflow.blog/podcast/",
    "description": "Cortex is an internal developer portal that cuts noise and helps devs build and continuously improve software. Explore their docs or see what’s happening on their blog.Cortex is also hiring, so if you’re an engineer who wants to work on these kinds of problems, check out their careers page.Connect with Anish on LinkedIn or X.Ganesh is also on LinkedIn and X.Shoutout to Alex Chesters, who earned a Great Question badge with How to count occurrences of an element in a Swift array?.",
    "author": "Anish Dhar, Ryan Donovan, Ben Popper, Ganesh Datta",
    "published": "Fri, 2 Aug 2024 04:20:00 +0000",
    "image": "https://chrt.fm/track/G8F1AF/pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/3acc52db-c3b8-448b-8ac7-6323b338c1a8/audio/128/default.mp3?aid=rss_feed\u0026awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b\u0026awEpisodeId=3acc52db-c3b8-448b-8ac7-6323b338c1a8\u0026feed=XA_851k3",
    "source": "https://feeds.simplecast.com/XA_851k3",
    "categories": [
      "developer experience",
      " developer productivity"
    ]
  },
  {
    "id": "7c073fad-cc8d-4121-9749-f4843578ef58",
    "title": "315. Happy Holidays from the definitive developers podcast",
    "link": "https://sites.libsyn.com/96306/315-happy-holidays-from-the-definitive-developers-podcast",
    "description": "In this special holiday episode, we reflect on the year gone by. In a time full of challenges, we extend warm holiday wishes to our listeners, acknowledging the turmoil present in the tech industry and the world at large.",
    "author": "",
    "published": "Fri, 22 Dec 2023 12:00:00 +0000",
    "image": "https://chtbl.com/track/25G9BG/traffic.libsyn.com/secure/therabbithole/EP_315_Happy_Holidays_from_the_definitive_developers_podcast.mp3?dest-id=495327",
    "source": "http://therabbithole.libsyn.com/rss",
    "categories": null
  },
  {
    "id": "318c10c4-1edb-4c26-944c-eea04732b9fd",
    "title": "314. XP Value - Respect",
    "link": "https://sites.libsyn.com/96306/314-xp-value-respect",
    "description": "Following our series of discussions on XP values, this conversation covers the idea of respect and how things change when it is upheld. Tune in to hear a breakdown of why it is so integral to success and what it means for our relationship with code as well as one another.",
    "author": "",
    "published": "Tue, 12 Dec 2023 08:00:00 +0000",
    "image": "https://chtbl.com/track/25G9BG/traffic.libsyn.com/secure/therabbithole/EP_314_XP_Value_--_Respect.mp3?dest-id=495327",
    "source": "http://therabbithole.libsyn.com/rss",
    "categories": null
  },
  {
    "id": "62317ed0-40f3-4660-96ac-1442dd3c380b",
    "title": "313. XP Values - Courage",
    "link": "https://sites.libsyn.com/96306/313-xp-value-courage",
    "description": "In today’s episode, we explore the crucial concept of courage in programming. It may be a far cry from slaying dragons, but courage in programming is not for the faint of heart. You need to be able to make bold decisions, such as discarding flawed code and initiating architectural changes, even if you and your team have spent weeks working on it.",
    "author": "",
    "published": "Tue, 14 Nov 2023 08:00:00 +0000",
    "image": "https://chtbl.com/track/25G9BG/traffic.libsyn.com/secure/therabbithole/EP_313_XP_Value_--_Courage_episode.mp3?dest-id=495327",
    "source": "http://therabbithole.libsyn.com/rss",
    "categories": null
  },
  {
    "id": "ff67496d-1534-4a43-a3d7-fe24626c1161",
    "title": "312. Feedback From Humans and Non-Humans Alike",
    "link": "https://sites.libsyn.com/96306/312-feedback-from-humans-and-non-humans-alike",
    "description": "In this episode, we delve into the world of feedback in software development. We explore how feedback, in the context of Extreme Programming (XP) values, goes beyond traditional human communication. We uncover the various sources of feedback, from pair programming to CI/CD pipelines, and how it plays a pivotal role in improving code quality and project management.",
    "author": "",
    "published": "Tue, 24 Oct 2023 07:00:00 +0000",
    "image": "https://chtbl.com/track/25G9BG/traffic.libsyn.com/secure/therabbithole/EP_312_Feedback_From_Humans_and_Non-Humans_Alike.mp3?dest-id=495327",
    "source": "http://therabbithole.libsyn.com/rss",
    "categories": null
  },
  {
    "id": "0c4c254c-61f7-4573-b24f-87aaa94bdb31",
    "title": "311. XP Values - Simplicity",
    "link": "https://sites.libsyn.com/96306/311-xp-values-simplicity",
    "description": "Extreme programming (XP) continues to gain popularity as more and more teams are using it to enhance their development procedures. In today’s episode of The Rabbit Hole, we explore one of the core values of XP: simplicity. Tuning in, you’ll find out how keeping things as simple as possible can reduce complexity and make the delivery of high-quality software easier, enabling your team to not only deliver a better product faster but stay sane in the process!",
    "author": "",
    "published": "Wed, 04 Oct 2023 17:57:00 +0000",
    "image": "https://chtbl.com/track/25G9BG/traffic.libsyn.com/secure/therabbithole/EP_311_XP_Values_-_Simplicity.mp3?dest-id=495327",
    "source": "http://therabbithole.libsyn.com/rss",
    "categories": null
  },
  {
    "id": "7b75baf7-40a1-470e-8360-41c5a9e7f106",
    "title": "310. XP Values - Communication",
    "link": "https://sites.libsyn.com/96306/310-xp-values-communication",
    "description": "In this episode, we delve into the world of Extreme Programming (XP) values, with a particular focus on communication as key. We discuss the importance of effective communication in software development, especially in a remote work environment.",
    "author": "",
    "published": "Wed, 20 Sep 2023 17:00:00 +0000",
    "image": "https://chtbl.com/track/25G9BG/traffic.libsyn.com/secure/therabbithole/EP_310_XP_Values_-_Communication.mp3?dest-id=495327",
    "source": "http://therabbithole.libsyn.com/rss",
    "categories": null
  },
  {
    "id": "4aa0c317-a1ed-4a72-ab82-71e377e82e41",
    "title": "309. 9 Roles for Creating Results or Growing a Team w/ Esther Derby (Replay)",
    "link": "https://sites.libsyn.com/96306/309-9-roles-for-creating-results-or-growing-a-team-w-esther-derby-replay",
    "description": "On today's episode, Dave, William and Steven have a conversation with the esteemed Esther Derby about the various roles that we take on as Team Members and Leaders when we're responsible for the team's results ORRR for the team's growth. Plus, an update straight out of the Bronx by our very own Michael Nunez about babies, software and otherwise, and the long road to 100. Regardless if you're Pair Programming, Mentoring the team, Mob programming, or Reviewing Code, these nine roles described by Champion, Kiel \u0026 McLendon really sum up ways that we can help our teammates. The roles include: Counselor, Coach, Parther Facilitator, Teacher, Modeler Reflective Observer, Technical adviser, Hands-on Expert. ^ Growth, Results \u003e References: 6 Rules for Change (Esther Derby) - soon to be 7 rules! https://www.youtube.com/watch?v=BDyoUdVHwbg 9 Consulting Roles (Kiel, McLendon) https://www.researchgate.net/figure/Typical-Role-Statements-from-the-Consulting-Role-Grid-Champion-Kiel-Mclendon-1990_fig3_281781473",
    "author": "",
    "published": "Tue, 05 Sep 2023 17:45:00 +0000",
    "image": "https://chtbl.com/track/25G9BG/traffic.libsyn.com/secure/therabbithole/EP_309_Esther_Derby_Replay.mp3?dest-id=495327",
    "source": "http://therabbithole.libsyn.com/rss",
    "categories": null
  },
  {
    "id": "c4408ff3-c6c9-4c51-89a2-f40e70198045",
    "title": "308. BDD (Replay)",
    "link": "https://sites.libsyn.com/96306/308-bdd-replay",
    "description": "On today's replay episode, our host Dave Anderson and producer William Jeffries discuss end to end testing.",
    "author": "",
    "published": "Tue, 22 Aug 2023 07:00:00 +0000",
    "image": "https://chtbl.com/track/25G9BG/traffic.libsyn.com/secure/therabbithole/EP_308_BDD_Replay.mp3?dest-id=495327",
    "source": "http://therabbithole.libsyn.com/rss",
    "categories": null
  },
  {
    "id": "2a3a74ff-03b4-498f-a7f2-59bda5f23446",
    "title": "307. Motivation (Replay)",
    "link": "https://sites.libsyn.com/96306/307-motivation-replay",
    "description": "In today’s episode, we are talking about motivation — what keeps us up at night and what gets us out of bed every single day? We are joined by a special return guest and friend of the show, Kevin Thomas.",
    "author": "",
    "published": "Tue, 08 Aug 2023 07:00:00 +0000",
    "image": "https://chtbl.com/track/25G9BG/traffic.libsyn.com/secure/therabbithole/EP_307_Motivation_Replay.mp3?dest-id=495327",
    "source": "http://therabbithole.libsyn.com/rss",
    "categories": null
  },
  {
    "id": "62381bd9-92e8-410d-99dd-4ddda14398a5",
    "title": "306. Imposter Syndrome (Replay)",
    "link": "https://sites.libsyn.com/96306/306-imposter-syndrome-replay",
    "description": "Today on the show we are joined by none other than our host, Michael Nuñez’s brother, Steven Nuñez! Steven will be helping us in our discussion about a very special topic and one that is very common amongst developers, imposter’s syndrome! Sound familiar? Feel familiar? Well, chances are at some point in your professional career (and beyond) you have probably felt like an imposter.",
    "author": "",
    "published": "Tue, 25 Jul 2023 14:56:00 +0000",
    "image": "https://chtbl.com/track/25G9BG/traffic.libsyn.com/secure/therabbithole/EP_306_Imposter_Syndrome_replay.mp3?dest-id=495327",
    "source": "http://therabbithole.libsyn.com/rss",
    "categories": null
  },
  {
    "id": "471680c9-62e4-4222-84be-be4d12a3c355",
    "title": "305. Mastering the Art of Closure- Conquering WIPs in Life and Work with Brian Lam",
    "link": "https://sites.libsyn.com/96306/305-mastering-the-art-of-closure-conquering-wips-in-life-and-work-with-brian-lam",
    "description": "In agile development, it’s important to eliminate work in progress (WIP) as much as possible, since it can reduce productivity, scatter focus, and increase wait time for new functionality. But what if the same were true for WIP challenges we face in life? That was the revelation of today’s guest, Brian Lam, whose recent new role as the father of a newborn has presented him with some tricky WIP issues in his daily life.",
    "author": "",
    "published": "Tue, 11 Jul 2023 07:00:00 +0000",
    "image": "https://chtbl.com/track/25G9BG/traffic.libsyn.com/secure/therabbithole/EP_305_Mastering_the_Art_of_Closure-_Conquering_WIPs_in_Life_and_Work_with_Brian_Lam.mp3?dest-id=495327",
    "source": "http://therabbithole.libsyn.com/rss",
    "categories": null
  },
  {
    "id": "0913c0e5-4f42-4eab-a17b-5da7cb970069",
    "title": "304. Testing Tango — Arrange, Act, and Assert",
    "link": "https://sites.libsyn.com/96306/304-testing-tango-arrange-act-and-assert",
    "description": "In today's episode, we delve into the testing tango and the art of Arrange, Act, and Assert (AAA), a practice that is essential when writing tests in order to structure them in a way that is coherent to other developers who may come across them. We discuss how to go about Arranging variables, how to use those variables (or Act), and then Asserting those specific behaviors. You’ll learn about the importance of having only one assertion per test and the benefits of leaving blank spaces or new lines for future reference.",
    "author": "",
    "published": "Tue, 27 Jun 2023 07:00:00 +0000",
    "image": "https://chtbl.com/track/25G9BG/traffic.libsyn.com/secure/therabbithole/EP_304_Testing_Tango_-_Arrange_Act_and_Assert.mp3?dest-id=495327",
    "source": "http://therabbithole.libsyn.com/rss",
    "categories": null
  },
  {
    "id": "720d5c06-6a66-47c9-91f0-77f418d0c473",
    "title": "303. Testing Tango: Red, Green, Refactor, and Why It’s Important To Follow Those Steps",
    "link": "https://sites.libsyn.com/96306/303-testing-tango-red-green-refactor-and-why-its-important-to-follow-those-steps",
    "description": "The red, green, refactor approach helps streamline testing and development processes, improve code quality, and foster collaboration. It promotes a disciplined and iterative approach to software development, resulting in more reliable and maintainable systems. Join us in this captivating episode as we explore this mysterious testing approach that transforms software development.",
    "author": "",
    "published": "Tue, 20 Jun 2023 07:00:00 +0000",
    "image": "https://chtbl.com/track/25G9BG/traffic.libsyn.com/secure/therabbithole/EP_303_Testing_Tango_-_Red_Green_Refactor_and_why_its_important_to_follow_those_steps.mp3?dest-id=495327",
    "source": "http://therabbithole.libsyn.com/rss",
    "categories": null
  },
  {
    "id": "aecad26f-a941-4b89-901d-241e79a44ef5",
    "title": "302. Is AI a Friend or Foe? Can We Get Ahead of It??",
    "link": "https://sites.libsyn.com/96306/302-is-ai-a-friend-or-foe-can-we-get-ahead-of-it",
    "description": "Artificial Intelligence (AI) has the potential to bring significant benefits and advancements to various fields, including healthcare, transportation, education, and more. It can automate tedious tasks, improve efficiency, and enhance decision-making processes. However, AI also presents challenges and risks that need to be addressed. It is crucial to promote responsible AI development, ethical guidelines, and appropriate regulations to harness the benefits of AI while mitigating its risks.",
    "author": "",
    "published": "Tue, 06 Jun 2023 07:00:00 +0000",
    "image": "https://chtbl.com/track/25G9BG/traffic.libsyn.com/secure/therabbithole/EP_302_Is_AI_a_friend_or_Foe_-_Can_we_get_ahead_of_it.mp3?dest-id=495327",
    "source": "http://therabbithole.libsyn.com/rss",
    "categories": null
  },
  {
    "id": "19b5fd47-cdb7-49a7-9d89-efd008e4b974",
    "title": "301. Introducing a New Podcast - Scaling Tech with Debbie Madden!",
    "link": "https://sites.libsyn.com/96306/301-introducing-a-new-podcast-scaling-tech-with-debbie-madden",
    "description": "Today on The Rabbit Hole we are sharing an episode from Scaling Tech with Debbie Madden, who is the Founder and Chairwoman here at Stride. The podcast is well worth checking out and listeners can expect to hear some great conversations between Debbie and top tech leaders and experts on a wide variety of contemporary issues facing the industry. Here we are airing the chat that Debbie had with Josh Seiden, in which they cover the valuable idea of outcomes over output, a subject on which Josh has literally written the book!",
    "author": "",
    "published": "Tue, 23 May 2023 07:00:00 +0000",
    "image": "https://chtbl.com/track/25G9BG/traffic.libsyn.com/secure/therabbithole/EP_301_Introducing_a_New_Podcast_-_Scaling_Tech_with_Debbie_Madden.mp3?dest-id=495327",
    "source": "http://therabbithole.libsyn.com/rss",
    "categories": null
  },
  {
    "id": "e1994b18-fc48-4d81-b5e3-58ae441494c1",
    "title": "300. GitHub... And Actions!",
    "link": "https://sites.libsyn.com/96306/300-github-and-actions",
    "description": "Have you tried GitHub Actions? In this episode, we talk about experimenting with GitHub Actions and why YAML will be the programming language of the future. You’ll hear what GitHub Actions is and how it works, using the example of the creation of a pull request. We discuss other things that GitHub Actions can do and the biggest problem we’ve run into with it when it comes to testing.",
    "author": "",
    "published": "Wed, 10 May 2023 20:51:00 +0000",
    "image": "https://chtbl.com/track/25G9BG/traffic.libsyn.com/secure/therabbithole/EP_300_Github_and_actions.mp3?dest-id=495327",
    "source": "http://therabbithole.libsyn.com/rss",
    "categories": null
  },
  {
    "id": "a2e1e792-09b2-40b1-8441-c87aa7ec91ff",
    "title": "299. Seven Senses and Software Development",
    "link": "https://sites.libsyn.com/96306/299-seven-senses-and-software-development",
    "description": "Created by occupational therapists, a “sensory diet” is a treatment strategy designed to help children feel calm, ready to learn, and in control of their bodies. Do you ever fidget with a pen during a meeting? Or take a walk to combat the after-lunch lull?",
    "author": "",
    "published": "Tue, 25 Apr 2023 19:59:00 +0000",
    "image": "https://chtbl.com/track/25G9BG/traffic.libsyn.com/secure/therabbithole/EP_299_Seven_Senses_and_Software_Development.mp3?dest-id=495327",
    "source": "http://therabbithole.libsyn.com/rss",
    "categories": null
  },
  {
    "id": "0ab1ff82-45e1-48e3-bc9a-946fc22d4a3a",
    "title": "298. When the application development is no longer Juicy",
    "link": "https://sites.libsyn.com/96306/298-when-the-application-development-is-no-longer-juicy",
    "description": "As we continue to learn from the XP book, Extreme Programming Explained, today we discuss what it means for software systems to go sour and how to prevent this from happening. We talk about what happens when the cost of making changes or defects rises so much that the system must be replaced and how XP creates and maintains a comprehensive suite of tests to counteract this risk. Tune in to learn more about how pair programming can help prevent the system from going sour, what to do when you are writing legacy code, the types of tests you should write and focus on, and so much more!",
    "author": "",
    "published": "Wed, 12 Apr 2023 20:09:00 +0000",
    "image": "https://chtbl.com/track/25G9BG/traffic.libsyn.com/secure/therabbithole/EP_298_When_the_application_development_is_no_longer_Juicy.mp3?dest-id=495327",
    "source": "http://therabbithole.libsyn.com/rss",
    "categories": null
  },
  {
    "id": "ffb00ea7-3e6d-407c-99fa-6eaaaf7054cd",
    "title": "297. False Feature Rich may make you poor!",
    "link": "https://sites.libsyn.com/96306/297-false-feature-rich-may-make-you-poor",
    "description": "Continuing in the series of XP explained, today we discuss false feature rich, the idea that software has many potentially interesting features that are fun to program but don't provide much value to the customer.",
    "author": "",
    "published": "Wed, 29 Mar 2023 20:58:00 +0000",
    "image": "https://chtbl.com/track/25G9BG/traffic.libsyn.com/secure/therabbithole/EP_297_False_Feature_Rich_may_make_you_poor.mp3?dest-id=495327",
    "source": "http://therabbithole.libsyn.com/rss",
    "categories": null
  },
  {
    "id": "7faead32-3ddf-443a-aa6d-a52b6aa967db",
    "title": "296. Schedule Slippin’, Fallin’, Can't Get Up? Use XP to Prevent That!",
    "link": "https://sites.libsyn.com/96306/296-schedule-slippin-fallin-cant-get-up-use-xp-to-prevent-that",
    "description": "According to the book Extreme Programming Explained: Embrace Change by Kent Beck, “The basic problem of software development is risk.” One of these risks is that of the schedule slip. In this episode, we discuss how to use XP to prevent schedule slips when developing software. Tuning in, you’ll hear about how XP addresses the problem of schedule slips through short-release cycles, what a Big Bang release is and why you want to avoid this, and the value of prioritizing the most important features in your schedule first.",
    "author": "",
    "published": "Wed, 15 Mar 2023 07:00:00 +0000",
    "image": "https://chtbl.com/track/25G9BG/traffic.libsyn.com/secure/therabbithole/EP_296_Schedule_Slippin_fallin_cant_get_up_-_Use_XP_to_prevent_that.mp3?dest-id=495327",
    "source": "http://therabbithole.libsyn.com/rss",
    "categories": null
  },
  {
    "id": "54d7c4b0-1d89-4347-84f6-8c5a74a73bc8",
    "title": "Migration to Oauth 2.1",
    "link": "https://developers.soundcloud.com/blog/oauth-migration",
    "description": "Earlier this year, we updated our API Guide to let developers know that SoundCloud authentication is now operating on the OAuth 2.1 protocol…",
    "author": "",
    "published": "Tue, 23 Apr 2024 00:00:00 GMT",
    "image": "",
    "source": "https://developers.soundcloud.com/blog/blog.rss",
    "categories": null
  },
  {
    "id": "21704fdb-6cd0-4692-8d81-3642c35b980d",
    "title": "Android Large Screen Optimization",
    "link": "https://developers.soundcloud.com/blog/soundcloud-android-large-screen",
    "description": "Large Screen Devices - The New Frontier SoundCloud large screen optimized Recently, the Android team at SoundCloud took on a project to…",
    "author": "",
    "published": "Mon, 31 Jul 2023 00:00:00 GMT",
    "image": "/blog/49926d7e44d44ca3f84a67148412ba7b/after_vid_.gif",
    "source": "https://developers.soundcloud.com/blog/blog.rss",
    "categories": null
  },
  {
    "id": "c9416f70-7f1c-4b9d-97b0-cafce2196d4e",
    "title": "An update on our API: Changes to access for inactive apps",
    "link": "https://developers.soundcloud.com/blog/an-empty-blogpost",
    "description": "We’re working on improving our API offering. In order to do that, a few changes are coming: We need to revoke access for some of you with…",
    "author": "",
    "published": "Fri, 02 Jun 2023 00:00:00 GMT",
    "image": "",
    "source": "https://developers.soundcloud.com/blog/blog.rss",
    "categories": null
  },
  {
    "id": "383dafc7-35ab-4270-930d-906078441ff5",
    "title": "What I Learned in One Year as an SRE Trainee",
    "link": "https://developers.soundcloud.com/blog/sre-trainee",
    "description": "I recently celebrated my one year anniversary as a Site Reliability Engineering (SRE) trainee at SoundCloud. Looking back, I had very little…",
    "author": "",
    "published": "Fri, 06 Jan 2023 00:00:00 GMT",
    "image": "",
    "source": "https://developers.soundcloud.com/blog/blog.rss",
    "categories": null
  },
  {
    "id": "6a10963f-3e6e-4dae-88b9-7c525a3ca8ec",
    "title": "What's New with SoundCloud, November 2022",
    "link": "https://developers.soundcloud.com/blog/new-with-soundcloud-november-22",
    "description": "We recently made updates to our SoundCloud iOS and Android apps to address key user experience (UX) fixes according to user feedback. We’ll…",
    "author": "",
    "published": "Fri, 11 Nov 2022 00:00:00 GMT",
    "image": "/blog/static/f83b7065fef10daa1c46730436a0ac34/c7805/new-creator-subscription-names.png",
    "source": "https://developers.soundcloud.com/blog/blog.rss",
    "categories": null
  },
  {
    "id": "3d4f7e1f-3cac-43d7-ac3b-a6afd58723d7",
    "title": "Bar Raiser Interview",
    "link": "https://developers.soundcloud.com/blog/bar-raiser",
    "description": "In an earlier blog post, we talked about how we changed the interview process during remote working as a way of improving our recruiting…",
    "author": "",
    "published": "Tue, 25 Oct 2022 00:00:00 GMT",
    "image": "",
    "source": "https://developers.soundcloud.com/blog/blog.rss",
    "categories": null
  },
  {
    "id": "6ca7c320-00f0-4f3f-8706-b0c8e4e0166d",
    "title": "What's New with SoundCloud, October 2022",
    "link": "https://developers.soundcloud.com/blog/new-with-soundcloud-october-22",
    "description": "We recently made updates to our SoundCloud iOS and Android apps to address key user experience (UX) fixes according to user feedback. We’ll…",
    "author": "",
    "published": "Mon, 17 Oct 2022 00:00:00 GMT",
    "image": "/blog/static/8b2447df95e05166237651a8a8407673/07e28/track-cell-size-reduction.png",
    "source": "https://developers.soundcloud.com/blog/blog.rss",
    "categories": null
  },
  {
    "id": "35de110d-bef5-4832-bf69-ac7168d16785",
    "title": "Android Image Loading at SoundCloud",
    "link": "https://developers.soundcloud.com/blog/android-images-at-soundcloud",
    "description": "The SoundCloud Android app recently got a significant makeover: a “new year, new me” type of thing. Our remarkable design team and…",
    "author": "",
    "published": "Thu, 13 Oct 2022 00:00:00 GMT",
    "image": "/blog/static/c18857cf1ce1b71115fc5dbf032f1ef7/8ff1e/old-design.png",
    "source": "https://developers.soundcloud.com/blog/blog.rss",
    "categories": null
  },
  {
    "id": "28dff5ca-0bca-4482-932d-43a37162a293",
    "title": "SoundCloud Echo: Next-Level Humane Registry with Backstage",
    "link": "https://developers.soundcloud.com/blog/soundcloud-echo-next-level-backstage",
    "description": "We’ve seen considerable adoption of our internal humane registry, Services Directory, since we sanitized ownership definition and introduced…",
    "author": "",
    "published": "Mon, 19 Sep 2022 00:00:00 GMT",
    "image": "/blog/static/9d4acf0fb6371670e9a76109a8cadfd4/e49a9/SC-BS.png",
    "source": "https://developers.soundcloud.com/blog/blog.rss",
    "categories": null
  },
  {
    "id": "5a1e180c-a1db-4d49-a3d9-1ce11161ac57",
    "title": "WINE Workshop",
    "link": "https://developers.soundcloud.com/blog/wine-workshop",
    "description": "SoundCloud has a variety of resource groups, and one such group is called Women in Engineering, or WINE. The mission statement of the group…",
    "author": "",
    "published": "Tue, 02 Aug 2022 00:00:00 GMT",
    "image": "",
    "source": "https://developers.soundcloud.com/blog/blog.rss",
    "categories": null
  },
  {
    "id": "fe6dc1a6-11eb-4d31-9b48-69a5bcb5ac44",
    "title": "PR Templates for Effective Pull Requests",
    "link": "https://developers.soundcloud.com/blog/pr-templates-for-effective-pull-requests",
    "description": "The first step to any code review is understanding what the code does and why. Although the author is by far the most qualified person to…",
    "author": "",
    "published": "Tue, 12 Jul 2022 00:00:00 GMT",
    "image": "/blog/static/96d72cecf52c936dcdcdba62c19cadb0/8ff1e/before-pr.png",
    "source": "https://developers.soundcloud.com/blog/blog.rss",
    "categories": null
  },
  {
    "id": "dae242d5-0363-435c-9b9f-5ba6c0dc1703",
    "title": "Learning Scala at SoundCloud",
    "link": "https://developers.soundcloud.com/blog/learning-scala-at-soundcloud",
    "description": "I’m a backend developer who worked extensively writing code in Golang before joining SoundCloud. SoundCloud mostly uses Scala for its…",
    "author": "",
    "published": "Tue, 19 Apr 2022 00:00:00 GMT",
    "image": "",
    "source": "https://developers.soundcloud.com/blog/blog.rss",
    "categories": null
  },
  {
    "id": "d3f174fe-e7b4-4202-a464-627c6debd41b",
    "title": "The End of the Public API Strangler",
    "link": "https://developers.soundcloud.com/blog/end-of-the-strangler",
    "description": "This is the story of how we used the Strangler pattern to migrate our public API from a monolithic codebase to a fully fledged BFF over the…",
    "author": "",
    "published": "Mon, 14 Mar 2022 00:00:00 GMT",
    "image": "/blog/static/39f04214a9c8fbada5f8f3fd1eafafd7/8ff1e/strangler-pattern.png",
    "source": "https://developers.soundcloud.com/blog/blog.rss",
    "categories": null
  },
  {
    "id": "8b10d90b-2c1c-4e67-a92a-a79f4cd01b96",
    "title": "What Is New with Periskop in 2022",
    "link": "https://developers.soundcloud.com/blog/periskop-in-2022",
    "description": "In a previous blog post, we explained how we built an internal pull-based exception monitoring service called Periskop — which is heavily…",
    "author": "",
    "published": "Tue, 01 Feb 2022 00:00:00 GMT",
    "image": "/blog/static/3add9dc6c52ee89743575e673459c0a8/8ff1e/periskop_logo.png",
    "source": "https://developers.soundcloud.com/blog/blog.rss",
    "categories": null
  },
  {
    "id": "d08e1d4d-37ac-435d-8d89-0fa7b24c2867",
    "title": "Obvious Ownership: A Sensible Humane Registry",
    "link": "https://developers.soundcloud.com/blog/obvious-ownership-humane-registry",
    "description": "Imagine yourself as an engineer who just joined SoundCloud. Besides meeting your colleagues and getting your new laptop, badge, and that…",
    "author": "",
    "published": "Thu, 06 Jan 2022 00:00:00 GMT",
    "image": "/blog/static/51e0fc700e6ab0fd2406bd6ccd16a4c2/8ff1e/early-days-services-directory.png",
    "source": "https://developers.soundcloud.com/blog/blog.rss",
    "categories": null
  },
  {
    "id": "37109b7f-0cab-41fa-a6c1-dc7f6c957df0",
    "title": "Tiny Letter from Kafka",
    "link": "https://developers.soundcloud.com/blog/tiny-letter-from-kafka",
    "description": "This article discusses the powerful design choice of Apache Kafka, “an open-source distributed event streaming platform,” and gives a sneak…",
    "author": "",
    "published": "Wed, 13 Oct 2021 00:00:00 GMT",
    "image": "/blog/static/acf8326884a68d863fb43267147b82a4/8ff1e/pubsub-system.png",
    "source": "https://developers.soundcloud.com/blog/blog.rss",
    "categories": null
  },
  {
    "id": "246781e6-78d8-4862-bea8-a8214dd477d4",
    "title": "Service Architecture at SoundCloud — Part 3: Domain Gateways",
    "link": "https://developers.soundcloud.com/blog/service-architecture-3",
    "description": "This article is the last part in a series of posts aiming to cast some light onto how service architecture has evolved at SoundCloud over…",
    "author": "",
    "published": "Fri, 17 Sep 2021 00:00:00 GMT",
    "image": "/blog/static/b61d5a86fd6620f6033bfba9950d83b6/8ff1e/aggregates.png",
    "source": "https://developers.soundcloud.com/blog/blog.rss",
    "categories": null
  },
  {
    "id": "56192b85-79df-4157-80c6-bd9c2b3eaac9",
    "title": "Service Architecture at SoundCloud — Part 2: Value-Added Services",
    "link": "https://developers.soundcloud.com/blog/service-architecture-2",
    "description": "This article is part of a series of posts aiming to cast some light onto how service architecture has evolved at SoundCloud over the past…",
    "author": "",
    "published": "Fri, 20 Aug 2021 00:00:00 GMT",
    "image": "/blog/static/42ae04f82d33d92ff6716a3fd6892bd4/8ff1e/Top_Level_Architecture.png",
    "source": "https://developers.soundcloud.com/blog/blog.rss",
    "categories": null
  },
  {
    "id": "25c685bf-b38c-4d83-ae4f-f08431f9929e",
    "title": "Service Architecture at SoundCloud — Part 1: Backends for Frontends",
    "link": "https://developers.soundcloud.com/blog/service-architecture-1",
    "description": "This article is part of a series of posts aiming to cast some light onto how service architecture has evolved at SoundCloud over the past…",
    "author": "",
    "published": "Thu, 29 Jul 2021 00:00:00 GMT",
    "image": "/blog/static/93d127fab948bea0b04e8fba97d22f5a/8ff1e/bff-overview.png",
    "source": "https://developers.soundcloud.com/blog/blog.rss",
    "categories": null
  },
  {
    "id": "62cbb13a-177a-42d5-9a40-1280e34d7708",
    "title": "How We Share Knowledge as a Web Collective",
    "link": "https://developers.soundcloud.com/blog/how-we-share-knowledge-as-a-web-collective",
    "description": "There’s no single platform team that consists of only web engineers at SoundCloud, even though we consider ourselves to be part of the “Web…",
    "author": "",
    "published": "Wed, 14 Jul 2021 00:00:00 GMT",
    "image": "/blog/static/3db6d79de3a79b4f76a1abbb4525a622/a296c/knowledge-sharing-web-collective.jpg",
    "source": "https://developers.soundcloud.com/blog/blog.rss",
    "categories": null
  },
  {
    "id": "d8cf9944-2dce-42e7-ab81-a1e9b80faf78",
    "title": "Microsoft Build: Responsible AI (Sarah Bird)",
    "link": "https://thewomenintechshow.com/2023/08/01/microsoft-build-responsible-ai-sarah-bird/",
    "description": "Sarah Bird, Engineering Lead at Microsoft talked about what responsible AI is and its main components and best practices. Sarah also explained what generative AI is and example metrics to evaluate systems that use it. At the end we talked about existing tools that can assist in developing AI systems.",
    "author": "edaena",
    "published": "Tue, 01 Aug 2023 15:18:20 +0000",
    "image": "http://media.blubrry.com/thewomenintechshow/wintshow.files.wordpress.com/2023/08/5-sarah-bird.mp3",
    "source": "https://thewomenintechshow.com/category/podcast/feed/",
    "categories": [
      "Microsoft",
      "podcast",
      "Artificial Intelligence",
      "Generative AI",
      "Microsoft Build",
      "Program Manager",
      "Software Development"
    ]
  },
  {
    "id": "edd59c3c-ed7a-45b4-aa4c-093aa633ff28",
    "title": "Microsoft Build: Application Security with Redis Cache (Shruti Pathak)",
    "link": "https://thewomenintechshow.com/2023/07/24/microsoft-build-application-security-with-redis-cache-shruti-pathak/",
    "description": "Shruti Pathak, Senior Product Manager at Microsoft, talked about optimizing web applications by using Redis cache and things to consider to make it secure. Shruti also explained what in-memory databases are and how they improve performance. At the end we also talked about the program manager and her experience transitioning from a software development role.",
    "author": "edaena",
    "published": "Tue, 25 Jul 2023 01:42:17 +0000",
    "image": "http://media.blubrry.com/thewomenintechshow/wintshow.files.wordpress.com/2023/07/4_shruti_pathak.mp3",
    "source": "https://thewomenintechshow.com/category/podcast/feed/",
    "categories": [
      "Microsoft",
      "podcast",
      "Microsoft Build",
      "Program Manager",
      "Software Development"
    ]
  },
  {
    "id": "2b31ef35-66ca-4fe0-81a0-eb8d53484856",
    "title": "Microsoft Build: Security in DevOps (Laura Jiang)",
    "link": "https://thewomenintechshow.com/2023/07/17/microsoft-build-security-in-devops-laura-jiang/",
    "description": "Laura Jiang, Product Manager at Microsoft, talked about what DevOps is and security vulnerabilities in this area. Laura also explained how to dentify and address security threats within the GitHub ecosystem.",
    "author": "edaena",
    "published": "Tue, 18 Jul 2023 02:09:24 +0000",
    "image": "http://media.blubrry.com/thewomenintechshow/wintshow.files.wordpress.com/2023/07/3-laura-jiang.mp3",
    "source": "https://thewomenintechshow.com/category/podcast/feed/",
    "categories": [
      "Microsoft",
      "podcast",
      "Microsoft Build",
      "Program Manager",
      "Software Development"
    ]
  },
  {
    "id": "b269efab-5aa5-4635-8c54-a42949b8b5ec",
    "title": "Microsoft Build: Software Development and .NET (Kathleen Dollard)",
    "link": "https://thewomenintechshow.com/2023/07/11/microsoft-build-software-development-and-net-kathleen-dollard/",
    "description": "Kathleen has been writing software in .NET and other Microsoft technologies for over 20 years. We talked about how systems have evolved and how the process of developing software has improved. Kathleen also talked about different programming languages such as C#, F# and Visual Basic.",
    "author": "edaena",
    "published": "Tue, 11 Jul 2023 12:51:55 +0000",
    "image": "http://media.blubrry.com/thewomenintechshow/wintshow.files.wordpress.com/2023/07/2-msbuild-kathleen-dollard.mp3",
    "source": "https://thewomenintechshow.com/category/podcast/feed/",
    "categories": [
      "podcast",
      "Microsoft",
      "Microsoft Build",
      "Software Development"
    ]
  },
  {
    "id": "838d45d6-f08c-43ef-aee4-dc6c783f39d3",
    "title": "Microsoft Build: Security and Product Management (Mia Reyes)",
    "link": "https://thewomenintechshow.com/2023/07/03/microsoft-build-security-and-product-management-mia-reyes/",
    "description": "Mia Reyes, Director of Foundational Security at Microsoft started working in tech after several years of experience in foreign policy. We talked about how her past experience relates to her role in security product management. Mia also gave a general overview on what built in security is and examples of common vulnerabilities. Mia also talked about challenges she’s faced throughout her career and how she’s tackled them.",
    "author": "edaena",
    "published": "Mon, 03 Jul 2023 23:03:29 +0000",
    "image": "http://media.blubrry.com/thewomenintechshow/wintshow.files.wordpress.com/2023/07/1-msbuild-mia-reyes.mp3",
    "source": "https://thewomenintechshow.com/category/podcast/feed/",
    "categories": [
      "podcast",
      "Microsoft",
      "Microsoft Build"
    ]
  },
  {
    "id": "626e91a7-b2f8-4006-97e0-195670c0f067",
    "title": "Program Manager (Jhansi Reddy)",
    "link": "https://thewomenintechshow.com/2021/05/25/s4e2-program-manager-jhansy-reddy/",
    "description": "There are different roles related to the execution of a project. Some examples are: program manager, project manager, and product manager. Jhansi Reddy, principal technical program manager at microsoft, explained the differences between these roles. We also talked about how to transition from a developer role into a program manager role. Other topics that were covered are: conflict resolution and building trust with customers.",
    "author": "edaena",
    "published": "Tue, 25 May 2021 20:52:07 +0000",
    "image": "http://media.blubrry.com/thewomenintechshow/wintshow.files.wordpress.com/2021/05/s4e2-jhansi-reddy-1.mp3",
    "source": "https://thewomenintechshow.com/category/podcast/feed/",
    "categories": [
      "podcast",
      "Microsoft",
      "Program Manager"
    ]
  },
  {
    "id": "c6ff0f20-b765-4c85-ab86-b363318b2804",
    "title": "Customer-Driven Engineering (Lara Rubbelke)",
    "link": "https://thewomenintechshow.com/2021/05/04/s4e1-customer-driven-engineering-lara-rubbelke/",
    "description": "As technology evolves, more organizations across different industries are looking to adopt new technologies. Lara Rubbelke, Partner Engineering Manager at Microsoft, talked about how engineers at Microsoft collaborate with other organizations to build technical solutions. Lara explained that through customer engineering engagements, they are able to contribute to real world scenarios and help improve products. We also talked about her trajectory to a leadership role and career advice.",
    "author": "edaena",
    "published": "Tue, 04 May 2021 15:07:48 +0000",
    "image": "http://media.blubrry.com/thewomenintechshow/wintshow.files.wordpress.com/2021/05/s4e1-lara-rubbelke.mp3",
    "source": "https://thewomenintechshow.com/category/podcast/feed/",
    "categories": [
      "podcast",
      "Data Driven",
      "Leadership",
      "Microsoft",
      "SQL"
    ]
  },
  {
    "id": "f6b0d92b-a6a4-4d95-be85-9502ca3a253d",
    "title": "WordPress and Open Source (Helen Hou Sandí)",
    "link": "https://thewomenintechshow.com/2021/04/14/s3e6-wordpress-and-open-source-helen-hou-sandi/",
    "description": "Open source software is behind a lot of systems we interact with. One example is Wordpress, a system that powers over 30% of the internet. In this episode Helen Hou-Sandi, explained what Wordpress is and how it’s used to create websites. We also talked about the characteristics of open source projects and best practices. Helen Hou-Sandí is Lead Developer at Wordpress and Director of Open Source Initiatives at 10up.",
    "author": "edaena",
    "published": "Wed, 14 Apr 2021 14:00:00 +0000",
    "image": "http://media.blubrry.com/thewomenintechshow/wintshow.files.wordpress.com/2021/05/s3e6-helen-hou-sandi-2.mp3",
    "source": "https://thewomenintechshow.com/category/podcast/feed/",
    "categories": [
      "podcast",
      "Open Source"
    ]
  },
  {
    "id": "354ecc75-bd0a-43ee-8f9b-2ca875072422",
    "title": "Storytelling in Tech (Miri Rodriguez)",
    "link": "https://thewomenintechshow.com/2021/04/06/s4e5-storytelling-in-tech-miri-rodriguez/",
    "description": "Marketing and storytelling are important components of product development because they allow companies to reach their audience and share their message. Miri Rodriguez, Head of Global Intern Programs at Microsoft, explained what storytelling is and its role in brand development. Miri is the author of the book “Brand storytelling: put your customers at the heart of your brand story”.",
    "author": "edaena",
    "published": "Wed, 07 Apr 2021 01:52:10 +0000",
    "image": "http://media.blubrry.com/thewomenintechshow/wintshow.files.wordpress.com/2021/03/s3e5-miri-rodriguez.mp3",
    "source": "https://thewomenintechshow.com/category/podcast/feed/",
    "categories": [
      "podcast",
      "Journalism",
      "Podcasting"
    ]
  },
  {
    "id": "add07fc6-c16f-42b1-837d-87c807e39f25",
    "title": "Technology in Education (Mickey Revenaugh)",
    "link": "https://thewomenintechshow.com/2021/03/24/s3e4-technology-in-education-mickey-revenaugh/",
    "description": "Technology changes the way we learn and engage with content. Throughout her career, Mickey Revenaugh has worked on bringing technological advancements to education. We talked about her experience in the 80s when computers were just starting to appear in classrooms. Mickey also talked about bringing the internet to schools in the 90s and how educational content has evolved. At the end we talked about how big data and artificial intelligence are used in education. Mickey is currently Vice President of Business Development in Global Online Learning at Pearson.",
    "author": "edaena",
    "published": "Wed, 24 Mar 2021 14:00:00 +0000",
    "image": "http://media.blubrry.com/thewomenintechshow/wintshow.files.wordpress.com/2021/03/s3e4-mickey-revenaugh-2.mp3",
    "source": "https://thewomenintechshow.com/category/podcast/feed/",
    "categories": [
      "podcast",
      "Education",
      "Leadership"
    ]
  },
  {
    "id": "41c20cda-7054-466c-a892-5522ffd9b513",
    "title": "Leadership and Software Development (Shobana Krishnamoorthy)",
    "link": "https://thewomenintechshow.com/2021/03/16/s3e2-leadership-and-software-development-shobana-krishnamoorthy/",
    "description": "There are many paths to a career in technology. Shobana Krishnamoorthy, Senior Software Developer Lead at Microsoft, talked about her time growing up and learning to code with limited access to a computer. We also talked about her work and trajectory as a Software Developer Lead. At the end, we covered topics around the Grace Hopper Celebration, and open source mentorship.",
    "author": "edaena",
    "published": "Tue, 16 Mar 2021 19:30:00 +0000",
    "image": "http://media.blubrry.com/thewomenintechshow/wintshow.files.wordpress.com/2021/03/s3e3-shobana-krishnamoorthy.mp3",
    "source": "https://thewomenintechshow.com/category/podcast/feed/",
    "categories": [
      "podcast",
      "Grace Hopper Celebration",
      "Leadership",
      "Software Development"
    ]
  },
  {
    "id": "701adc6a-7ea0-421d-9fd8-19a07f827327",
    "title": "Product Management (Tracy Mahnken)",
    "link": "https://thewomenintechshow.com/2021/03/09/s3e2-tracy-mahnken/",
    "description": "Product management is a core area that helps us build software products. Tracy Mahnken, Vice President of Product at NerdWallet, explained the different areas of product management. We talked about product experimentation, cross-discipline collaboration and market research. Tracy also talked about important skills to have in product management and leadership positions.",
    "author": "edaena",
    "published": "Tue, 09 Mar 2021 18:00:00 +0000",
    "image": "http://media.blubrry.com/thewomenintechshow/wintshow.files.wordpress.com/2021/03/s3e2-tracy-mahnken.mp3",
    "source": "https://thewomenintechshow.com/category/podcast/feed/",
    "categories": [
      "podcast"
    ]
  },
  {
    "id": "31817314-7ca0-4fef-9e92-de691c0a12c8",
    "title": "Technology in Language Learning (Maya Goodall)",
    "link": "https://thewomenintechshow.com/2021/03/02/s3e1-technology-in-language-learning-maya-goodall/",
    "description": "Technology impacts the way we learn new languages. Maya Goodall, Senior Director at Rosetta Stone, explained how different technologies are used in language learning. We talked about Lingual Learning, a company she co-founded to help students learn English. Maya explained the challenges students face and the importance of embracing heritage languages and diverse backgrounds. We also talked about her current work at Rosetta Stone, and how they’re using Artificial Intelligence in tools for language learning.",
    "author": "edaena",
    "published": "Tue, 02 Mar 2021 18:00:00 +0000",
    "image": "http://media.blubrry.com/thewomenintechshow/wintshow.files.wordpress.com/2021/03/s3e1-maya-goodall.mp3",
    "source": "https://thewomenintechshow.com/category/podcast/feed/",
    "categories": [
      "podcast",
      "Artificial Intelligence",
      "Language Learning"
    ]
  },
  {
    "id": "faa1eccf-7e27-4cde-9904-432634e2a75e",
    "title": "Advertising at Google (Sissie Hsiao)",
    "link": "https://thewomenintechshow.com/2020/09/21/advertising-at-google-sissie-hsiao/",
    "description": "Google’s main source of revenue is digital advertising. Sissie Hsiao, VP of Display, Video and App Advertising at Google, explained what digital advertising is and its workflow. We also talked about the role of Machine Learning in advertising and tackling invalid activity. Sissie then explained her path to a leadership role.",
    "author": "edaena",
    "published": "Mon, 21 Sep 2020 13:00:00 +0000",
    "image": "http://media.blubrry.com/thewomenintechshow/wintshow.files.wordpress.com/2020/09/s2e5-sissie-hsiao-1.mp3",
    "source": "https://thewomenintechshow.com/category/podcast/feed/",
    "categories": [
      "podcast",
      "Advertising",
      "Google",
      "Machine Learning",
      "Product Development"
    ]
  },
  {
    "id": "85717e3d-3730-43a9-8752-9732daac284a",
    "title": "Technology and Engineering at Intel (Huma Abidi)",
    "link": "https://thewomenintechshow.com/2020/09/15/technology-and-engineering-at-intel-huma-abidi/",
    "description": "Intel Corporation is one of the largest semiconductor chip manufacturers in the world. Since then, it has expanded and built technologies in other domains. Huma Abidi, Senior Director of AI Software Products at Intel, talked about the semiconductor and microprocessor. We also talked about technologies developed in Artificial Intelligence and Machine Learning. At the end, Huma explained her path to an Engineering Manager role.",
    "author": "edaena",
    "published": "Wed, 16 Sep 2020 04:12:43 +0000",
    "image": "http://media.blubrry.com/thewomenintechshow/wintshow.files.wordpress.com/2020/09/s2e4-huma-abidi.mp3",
    "source": "https://thewomenintechshow.com/category/podcast/feed/",
    "categories": [
      "podcast",
      "Artificial Intelligence",
      "Hardware Engineering",
      "Leadership",
      "Machine Learning"
    ]
  },
  {
    "id": "6f626d85-5f68-497f-8527-dfbc61557e78",
    "title": "Engineering Leadership (Kate Reading)",
    "link": "https://thewomenintechshow.com/2020/09/08/s2e3-engineering-leadership-kate-reading/",
    "description": "Leadership in engineering is about driving product development, helping engineers elevate their careers, mentoring, managing conflict, among many other things. Kate Reading, Engineering Manager at Asana explained her path from Software Engineer to Engineering Manager. We talked about her experience in this role and its characteristics. Kate also explained the transition to a remote team because of the COVID-19 pandemic. We also talked about her work in the Platform Integrations team at Asana.",
    "author": "edaena",
    "published": "Wed, 09 Sep 2020 02:45:19 +0000",
    "image": "http://media.blubrry.com/thewomenintechshow/wintshow.files.wordpress.com/2020/09/s2e3-kate-reading.mp3",
    "source": "https://thewomenintechshow.com/category/podcast/feed/",
    "categories": [
      "podcast",
      "Engineering",
      "Leadership",
      "Management"
    ]
  },
  {
    "id": "6c310fc5-1c37-4d0f-bf91-b1f1cb94f7b9",
    "title": "Design Principles to Combat Domestic Abuse (Lesley Nuttall)",
    "link": "https://thewomenintechshow.com/2020/08/31/s2e2-design-principles-to-combat-domestic-abuse-lesley-nuttall/",
    "description": "Since the outbreak of COVID-19, domestic violence against women and girls has increased. UN Women released a report with this information earlier this year. Lesley Nuttall, who works at IBM Security Labs, gave an overview of the statistics for domestic abuse. She also explained how technology is misused to intensify domestic abuse. Later we talked about her article “Five Technology Design Principles to Combat Domestic Abuse”. Lesley highlighted the importance of thinking about these concepts when we work on software and other technologies.",
    "author": "edaena",
    "published": "Tue, 01 Sep 2020 01:12:00 +0000",
    "image": "http://media.blubrry.com/thewomenintechshow/wintshow.files.wordpress.com/2020/08/s2e2-lesley-nuttall.mp3",
    "source": "https://thewomenintechshow.com/category/podcast/feed/",
    "categories": [
      "podcast",
      "Software Architecture",
      "Software Design"
    ]
  },
  {
    "id": "c478f4eb-0cc9-4c3a-85b8-97c2222c58e1",
    "title": "Podcast Technology (Brenda Salinas)",
    "link": "https://thewomenintechshow.com/2020/08/25/s2e1-podcast-technology-brenda-salinas/",
    "description": "Digital journalism enables us to reach a wider audience that traditionally we might not have been able to reach. Brenda Salinas, Audio Content Strategist at Google explained what digital journalism is and its impact. We talked about advancements in audio technology particularly in podcasting. Brenda explained how artificial intelligence can be used to index podcast topics an allow people to discover content. We also talked about several software systems in podcasting and how the field has improved. Brenda also gave an overview about her trajectory in digital journalism.",
    "author": "edaena",
    "published": "Tue, 25 Aug 2020 15:57:11 +0000",
    "image": "http://media.blubrry.com/thewomenintechshow/wintshow.files.wordpress.com/2020/08/s2e1-brenda-salinas.mp3",
    "source": "https://thewomenintechshow.com/category/podcast/feed/",
    "categories": [
      "podcast",
      "Journalism",
      "Podcasting"
    ]
  },
  {
    "id": "2083f8f3-aa76-4d56-a5d1-cc8a41480a60",
    "title": "Technology Journalism (Kara Swisher)",
    "link": "https://thewomenintechshow.com/2020/07/21/s1e6-technology-journalism-kara-swisher/",
    "description": "Technology has a big impact in our society. Some examples from the last decades are, the internet, personal computers, smart phones, and social media. Kara Swisher, a Technology Journalist, has been covering tech since the 1990s. We talked about what the panorama was like when she was first starting out as a reporter back then in Silicon Valley. We also talked about the impact of technology in journalism. Kara also talked about the lack of underrepresented folks in tech, and observations she’s made throughout her career.",
    "author": "edaena",
    "published": "Tue, 21 Jul 2020 19:00:25 +0000",
    "image": "http://media.blubrry.com/thewomenintechshow/wintshow.files.wordpress.com/2020/07/s1e6-kara-swisher.mp3",
    "source": "https://thewomenintechshow.com/category/podcast/feed/",
    "categories": [
      "podcast",
      "featured",
      "Journalism",
      "Silicon Valley"
    ]
  },
  {
    "id": "2e0aaec3-3bd6-46ee-be10-77dd43d552d0",
    "title": "Abie Award Series: Cyber Crime (Laura Mather)",
    "link": "https://thewomenintechshow.com/2020/07/15/s1e5-abie-award-series-cyber-crime-laura-mather/",
    "description": "Fighting cyber criminals is a challenging task. Laura Mather, Cyber Security expert, talked about her time at eBay fighting cyber criminals in the early 2000s. Laura explained different attacks that she saw and how these were being tackled back then. We also talked about Silver Tail Systems, a company she co-founded in 2008 to build systems that other companies could use to fight cyber criminals. Laura also explained the challenges of getting funding and how the panorama is changing for entrepreneurs.",
    "author": "edaena",
    "published": "Wed, 15 Jul 2020 16:36:01 +0000",
    "image": "http://media.blubrry.com/thewomenintechshow/wintshow.files.wordpress.com/2020/07/s1e5-laura-mather.mp3",
    "source": "https://thewomenintechshow.com/category/podcast/feed/",
    "categories": [
      "podcast",
      "AbieAward",
      "AbieWinner",
      "Cybersecurity",
      "Entrepreneur"
    ]
  },
  {
    "id": "085e16d2-5b1e-46bc-b884-3957c02c87dc",
    "title": "Deeper Dive into NX with Juri Strumpflohner",
    "link": "https://6figuredev.com/podcast/deeper-dive-into-nx-with-juri-strumpflohner/",
    "description": "Episode 250 Juri has been working as a software developer and architect for 10+ years, with technologies like Java, .Net, Node.js on the desktop, mobile as well as web. Lately he has mostly been focusing on frontend web development with JavaScript, on writing technical articles, and teaching.   Links https://juristr.com/ https://github.com/juristr https://twitter.com/juristr https://www.linkedin.com/in/juristr/ https://www.youtube.com/c/JuriStrumpflohner […] The post Deeper Dive into NX with Juri Strumpflohner appeared first on The 6 Figure Developer.",
    "author": "John Callaway",
    "published": "Mon, 15 Aug 2022 13:11:40 +0000",
    "image": "https://media.blubrry.com/6figuredev/content.blubrry.com/6figuredev/6_Figure_Developer-250-Juri_Strumpflohner.mp3",
    "source": "http://6figuredev.com/feed/rss/",
    "categories": [
      "Podcast",
      ".net",
      "dotnet",
      "Juri Strumpflohner",
      "lerna",
      "nx"
    ]
  },
  {
    "id": "2bc6100c-f157-4e80-b1c2-e3a105320e0b",
    "title": "4 Essential AWS Solutions with Chris Judd",
    "link": "https://6figuredev.com/podcast/4-essential-aws-solutions-with-chris-judd/",
    "description": "Episode 249 Chris is CTO and partner at Manifest Solutions, Author, Java User Group leader, Java Champion, Trusted Technical Advisor, and Talent Developer.   Links https://javajudd.net/ https://twitter.com/javajudd https://www.juddsolutions.com/ https://www.linkedin.com/in/christophermjudd/   Resources https://aws.amazon.com/ https://aws.amazon.com/cdk/ https://aws.amazon.com/lambda/ https://aws.amazon.com/step-functions/ https://aws.amazon.com/ecs/ https://aws.amazon.com/eks/ https://www.terraform.io/ https://docs.aws.amazon.com/ https://docs.aws.amazon.com/wellarchitected/latest/framework/welcome.html   “Tempting Time” by Animals As Leaders used with permissions – All Rights Reserved […] The post 4 Essential AWS Solutions with Chris Judd appeared first on The 6 Figure Developer.",
    "author": "John Callaway",
    "published": "Mon, 01 Aug 2022 13:11:00 +0000",
    "image": "https://media.blubrry.com/6figuredev/content.blubrry.com/6figuredev/6_Figure_Developer-249-Chris_Judd.mp3",
    "source": "http://6figuredev.com/feed/rss/",
    "categories": [
      "Podcast",
      "aws",
      "chris judd",
      "java"
    ]
  },
  {
    "id": "ab3d31e4-5fa2-4c59-806b-659f22afc220",
    "title": "Colum Ferry: Microfrontend, Module Federation, Monorepo",
    "link": "https://6figuredev.com/podcast/colum-ferry-microfrontend-module-federation-monorepo/",
    "description": "Episode 248 Colum is a Senior Software Engineer at Narwhal Technologies. He enjoys speaking about #nx, #angular, #monorepos, #javascript, and #typescript. He’s joining us from Northern Ireland.   Links https://columferry.co.uk/ https://github.com/Coly010 https://twitter.com/FerryColum https://colum-ferry.medium.com/ https://www.linkedin.com/in/colum-ferry-3a36a9169/   Resources https://nx.dev/ https://nrwl.io/ https://lerna.js.org/ https://micro-frontends.org/ https://webpack.js.org/concepts/module-federation/ https://blog.nrwl.io/lerna-is-dead-long-live-lerna-61259f97dbd9   “Tempting Time” by Animals As Leaders used with permissions – All […] The post Colum Ferry: Microfrontend, Module Federation, Monorepo appeared first on The 6 Figure Developer.",
    "author": "John Callaway",
    "published": "Mon, 25 Jul 2022 13:11:19 +0000",
    "image": "https://media.blubrry.com/6figuredev/content.blubrry.com/6figuredev/6_Figure_Developer-248-Colum_Ferry.mp3",
    "source": "http://6figuredev.com/feed/rss/",
    "categories": [
      "Podcast",
      "microfrontends",
      "module federation",
      "monorepo",
      "nx",
      "webpack"
    ]
  },
  {
    "id": "2149407b-2101-426a-8a8d-98ea0e0f9129",
    "title": "Remix with Kent C. Dodds",
    "link": "https://6figuredev.com/podcast/remix-with-kent-c-dodds/",
    "description": "Episode 247 Kent C. Dodds is a world renowned speaker, teacher, and trainer and he’s actively involved in the open source community as a maintainer and contributor of hundreds of popular npm packages. Kent is a Co-Founder and Director of Developer Experience at Remix. He is the creator of EpicReact.Dev and TestingJavaScript.com. He’s an […] The post Remix with Kent C. Dodds appeared first on The 6 Figure Developer.",
    "author": "John Callaway",
    "published": "Mon, 18 Jul 2022 13:11:22 +0000",
    "image": "https://media.blubrry.com/6figuredev/content.blubrry.com/6figuredev/6_Figure_Developer-247-Kent_C_Dodds.mp3",
    "source": "http://6figuredev.com/feed/rss/",
    "categories": [
      "Podcast",
      "kent c. dodds",
      "remix"
    ]
  },
  {
    "id": "56aa55c2-6562-4b7e-822e-f848648801ec",
    "title": "VS and VS Code Extensibility with Calvin Allen",
    "link": "https://6figuredev.com/podcast/vs-and-vs-code-extensibility-with-calvin-allen/",
    "description": "Episode 246 Calvin is a Microsoft MVP, Software Engineer @newrelic on @TeamCodeStream and Host of @dotnetbytes podcast.   Links https://twitter.com/_CalvinAllen https://www.codingwithcalvin.net/ https://www.linkedin.com/in/calvin-allen/ https://github.com/CalvinAllen   Resources https://newrelic.com https://www.codestream.com/ https://twitter.com/dotNETBytes https://docs.microsoft.com/en-us/visualstudio/extensibility/?view=vs-2022 https://github.com/microsoft/VSSDK-Extensibility-Samples https://docs.microsoft.com/en-us/dotnet/framework/mef/ https://docs.microsoft.com/en-us/dotnet/api/streamjsonrpc https://marketplace.visualstudio.com/items?itemName=coding-with-calvin.OpenInNotepadPP2022 Visual Studio Extensibility Development   “Tempting Time” by Animals As Leaders used with permissions – All Rights Reserved × Subscribe now! […] The post VS and VS Code Extensibility with Calvin Allen appeared first on The 6 Figure Developer.",
    "author": "John Callaway",
    "published": "Mon, 11 Jul 2022 13:11:07 +0000",
    "image": "https://media.blubrry.com/6figuredev/content.blubrry.com/6figuredev/6_Figure_Developer-246-CalvinAllen.mp3",
    "source": "http://6figuredev.com/feed/rss/",
    "categories": [
      "Podcast",
      "calvin allen",
      "Visual Studio",
      "visual studio code",
      "vs code"
    ]
  },
  {
    "id": "80ec1c6c-37ad-4117-a833-1a8271e6f5d7",
    "title": "Releasing Software with Tommy McClung",
    "link": "https://6figuredev.com/podcast/releasing-software-with-tommy-mcclung/",
    "description": "Episode 245 A software engineer by trade and multiple time entrepreneur, Tommy was the CTO at TrueCar for a number of years and is Co-founder and CEO of Release.   Links https://releasehub.com/ https://twitter.com/tommymcclung https://twitter.com/release_hub https://www.linkedin.com/in/tmcclung/   Resources https://releasehub.com/ https://docs.releasehub.com/ https://github.com/awesome-release https://releasehub.com/blog/kubernetes-how-to-debug-crashloopbackoff-in-a-container   “Tempting Time” by Animals As Leaders used with permissions – All Rights […] The post Releasing Software with Tommy McClung appeared first on The 6 Figure Developer.",
    "author": "John Callaway",
    "published": "Mon, 20 Jun 2022 13:13:44 +0000",
    "image": "https://media.blubrry.com/6figuredev/content.blubrry.com/6figuredev/6_Figure_Developer-245-TommyMcclung.mp3",
    "source": "http://6figuredev.com/feed/rss/",
    "categories": [
      "Podcast",
      "release",
      "tommy mcclung"
    ]
  },
  {
    "id": "97a6eb5a-550e-4087-bffb-9387c4ab4a14",
    "title": "Eric Potter on F# and .NET Interactive Notebooks",
    "link": "https://6figuredev.com/podcast/eric-potter-on-f-and-net-interactive-notebooks/",
    "description": "Episode 244 Eric helps companies succeed by finding the right custom software solutions to their business problems. He has been a Microsoft MVP since 2015, and is currently Director of Technical Education at Sweetwater.   Links https://twitter.com/pottereric https://humbletoolsmith.com/ https://www.linkedin.com/in/ericbpotter/ https://dotnetfoundation.org/community/speakers/eric-potter   Resources https://fsharp.org/ https://fsharpforfunandprofit.com/ https://github.com/dotnet/interactive https://docs.microsoft.com/en-us/dotnet/fsharp/what-is-fsharp https://devblogs.microsoft.com/dotnet/net-interactive-is-here-net-notebooks-preview-2/ https://lefthandedgoat.github.io/canopy/ https://github.com/lefthandedgoat/canopy https://ionide.io/   Books Stylish F# […] The post Eric Potter on F# and .NET Interactive Notebooks appeared first on The 6 Figure Developer.",
    "author": "John Callaway",
    "published": "Mon, 13 Jun 2022 13:47:10 +0000",
    "image": "https://media.blubrry.com/6figuredev/content.blubrry.com/6figuredev/6_Figure_Developer-244-EricPotter.mp3",
    "source": "http://6figuredev.com/feed/rss/",
    "categories": [
      "Podcast",
      ".net interactive notebooks",
      "eric potter",
      "f#"
    ]
  },
  {
    "id": "78a064c0-ef13-4a63-bdca-aa73f1f053b1",
    "title": "Azure Cosmos DB Repository .NET SDK with Billy Mumby",
    "link": "https://6figuredev.com/podcast/azure-cosmos-db-repository-net-sdk-with-billy-mumby/",
    "description": "Episode 243 Billy is a Senior Developer working @ Next PLC in the Warehouse \u0026 Distribution Systems Team.   Links https://twitter.com/billydev5 https://billy-mumby-dev.com/ https://github.com/mumby0168   Resources https://discord.com/invite/qMXrX4shAv https://mumby0168.github.io/cosmos-event-sourcing-docs/ https://ievangelist.github.io/azure-cosmos-dotnet-repository/ https://github.com/IEvangelist/azure-cosmos-dotnet-repository https://devblogs.microsoft.com/cosmosdb/azure-cosmos-db-repository-net-sdk-v-1-0-4/   Videos https://www.youtube.com/watch?v=izdnmBrTweA https://www.youtube.com/watch?v=_rsVwc4n8Ps   “Tempting Time” by Animals As Leaders used with permissions – All Rights Reserved × Subscribe now! Never miss a […] The post Azure Cosmos DB Repository .NET SDK with Billy Mumby appeared first on The 6 Figure Developer.",
    "author": "John Callaway",
    "published": "Mon, 06 Jun 2022 13:13:59 +0000",
    "image": "https://media.blubrry.com/6figuredev/content.blubrry.com/6figuredev/6_Figure_Developer-243-BillyMumby.mp3",
    "source": "http://6figuredev.com/feed/rss/",
    "categories": [
      "Podcast",
      ".net",
      "azure",
      "cosmos db",
      "Repository",
      "SDK"
    ]
  },
  {
    "id": "89b13ed0-ca6e-4d15-b6cf-9d20d964eebb",
    "title": "Temporal with Maxim Fateev \u0026 Dominik Tornow",
    "link": "https://6figuredev.com/podcast/temporal-with-maxim-fateev-dominik-tornow/",
    "description": "Episode 242 Maxim has worked at companies such as Microsoft, Google, and Amazon, and is currently CEO and cofounder of Temporal. Dominik is a Principal Engineer at Temporal. He focuses on systems modeling, specifically conceptual and formal modeling, to support the design and documentation of complex software systems.   Links https://twitter.com/mfateev https://www.linkedin.com/in/fateev/ https://twitter.com/DominikTornow https://www.linkedin.com/in/dtornow/ […] The post Temporal with Maxim Fateev \u0026 Dominik Tornow appeared first on The 6 Figure Developer.",
    "author": "John Callaway",
    "published": "Mon, 23 May 2022 13:11:46 +0000",
    "image": "https://media.blubrry.com/6figuredev/content.blubrry.com/6figuredev/6_Figure_Developer-242-Temporal.mp3",
    "source": "http://6figuredev.com/feed/rss/",
    "categories": [
      "Podcast",
      "dominik Tornow",
      "maxim fateev",
      "temporal",
      "workflow"
    ]
  },
  {
    "id": "772e5b2b-e37e-4499-8835-7fab7482c177",
    "title": "gRPC in .NET 6 with Anthony Giretti",
    "link": "https://6figuredev.com/podcast/grpc-in-net-6-with-anthony-giretti/",
    "description": "Episode 241 Anthony is a passionated developer, Microsoft MVP, and MCSD. He is currently senior developer @ Sigma-HR, specializing in Web technologies. We’re giving away several copies of Anthony’s new book, “Beginning gRPC with ASP.NET Core 6”. Leave a comment below for your chance to win!   Links https://anthonygiretti.com/ https://twitter.com/anthonygiretti https://github.com/AnthonyGiretti https://www.linkedin.com/in/anthony-g-98670426/ https://anthonygiretti.com/2020/05/18/grpc-asp-net-core-3-1-model-validation/ https://anthonygiretti.com/2021/01/17/grpc-asp-net-core-5-discover-grpcui-the-gui-alternative-to-grpcurl/ […] The post gRPC in .NET 6 with Anthony Giretti appeared first on The 6 Figure Developer.",
    "author": "John Callaway",
    "published": "Mon, 02 May 2022 13:11:51 +0000",
    "image": "https://media.blubrry.com/6figuredev/content.blubrry.com/6figuredev/6_Figure_Developer-241-AnthonyGiretti.mp3",
    "source": "http://6figuredev.com/feed/rss/",
    "categories": [
      "Podcast",
      ".net 6",
      ".net core",
      "Anthony Giretti",
      "asp.net",
      "grpc"
    ]
  },
  {
    "id": "3ca5ddfa-ac8b-4758-a98b-3fb344c8d3f5",
    "title": "The Latest on RavenDB with Dejan Milicic",
    "link": "https://6figuredev.com/podcast/the-latest-on-ravendb-with-dejan-milicic/",
    "description": "Episode 240 Dejan is a Software Craftsman from Novi Sad, Serbia and Developer Advocate for RavenDB.   Links https://twitter.com/dejanmilicic https://www.linkedin.com/in/dejanmilicic https://github.com/DejanMilicic   Resources https://ravendb.net/ https://demo.ravendb.net/ https://cloud.ravendb.net/ http://live-test.ravendb.net https://github.com/ayende/libgavran   “Tempting Time” by Animals As Leaders used with permissions – All Rights Reserved × Subscribe now! Never miss a post, subscribe to The 6 Figure […] The post The Latest on RavenDB with Dejan Milicic appeared first on The 6 Figure Developer.",
    "author": "John Callaway",
    "published": "Tue, 26 Apr 2022 13:11:20 +0000",
    "image": "https://media.blubrry.com/6figuredev/content.blubrry.com/6figuredev/6_Figure_Developer-240-DejanMilicic.mp3",
    "source": "http://6figuredev.com/feed/rss/",
    "categories": [
      "Podcast",
      "dejan milicic",
      "ravendb"
    ]
  },
  {
    "id": "e93668bd-a1af-47c1-9b95-1a62f52df2c2",
    "title": "Postman with Nate Taylor",
    "link": "https://6figuredev.com/podcast/postman-with-nate-taylor/",
    "description": "Episode 239 Nate is Director of Software Engineering at Pluralsight \u0026 Co-Organizer at Connectaha in Omaha, NE. He joins us to talk about Postman, an API platform for building and using APIs. Postman simplifies each step of the API lifecycle and streamlines collaboration so you can create better APIs—faster.   Links https://twitter.com/taylonr https://www.linkedin.com/in/taylonr https://connectaha.com/ […] The post Postman with Nate Taylor appeared first on The 6 Figure Developer.",
    "author": "John Callaway",
    "published": "Mon, 11 Apr 2022 13:11:08 +0000",
    "image": "https://media.blubrry.com/6figuredev/content.blubrry.com/6figuredev/6_Figure_Developer-239-NateTaylor.mp3",
    "source": "http://6figuredev.com/feed/rss/",
    "categories": [
      "Podcast",
      "api",
      "development",
      "nate taylor",
      "pluralsight",
      "postman"
    ]
  },
  {
    "id": "86b39e70-9eff-4885-8299-044da5f4c52f",
    "title": "DevSecOps with Sandy Carielli \u0026 Janet Worthington",
    "link": "https://6figuredev.com/podcast/devsecops-with-sandy-carielli-janet-worthington/",
    "description": "Episode 238 Sandy is a principal analyst at Forrester advising security and risk professionals on application security, with a particular emphasis on the collaboration among security and risk, application development, operations, and business teams. Janet is a senior analyst at Forrester advising security and risk professionals. She covers product security, proactive security design, securing […] The post DevSecOps with Sandy Carielli \u0026 Janet Worthington appeared first on The 6 Figure Developer.",
    "author": "John Callaway",
    "published": "Mon, 04 Apr 2022 13:11:28 +0000",
    "image": "https://media.blubrry.com/6figuredev/content.blubrry.com/6figuredev/6_Figure_Developer-238-SandyCarielliJanetWorthington.mp3",
    "source": "http://6figuredev.com/feed/rss/",
    "categories": [
      "Podcast",
      "devsecops",
      "Janet Worthington",
      "Sandy Carielli",
      "security"
    ]
  },
  {
    "id": "9c05908a-340b-4544-9a55-9d7e8c502285",
    "title": "WireMock with Andrew Morgan",
    "link": "https://6figuredev.com/podcast/wiremock-with-andrew-morgan/",
    "description": "Episode 237 Andrew is an independent consultant with cross-functional expertise in the design, development, and deployment of enterprise level software systems. Working with various clients, Andrew has been exposed to many different technology stacks, most recently specializing in Java microservices and continuous delivery.   Links https://twitter.com/mogronalol https://github.com/mogronalol https://www.linkedin.com/in/andrewmorganjava/ https://www.pluralsight.com/authors/andrew-morgan   Resources https://wiremock.org/ https://wiremock.org/docs/ https://wiremock.org/docs/proxying/ […] The post WireMock with Andrew Morgan appeared first on The 6 Figure Developer.",
    "author": "John Callaway",
    "published": "Mon, 28 Mar 2022 13:11:20 +0000",
    "image": "https://media.blubrry.com/6figuredev/content.blubrry.com/6figuredev/6_Figure_Developer-237-AndrewMorgan.mp3",
    "source": "http://6figuredev.com/feed/rss/",
    "categories": [
      "Podcast",
      "andrew morgan",
      "integration testing",
      "wiremock"
    ]
  },
  {
    "id": "f9bba0ef-e9a3-4df4-b3f4-f184f1f3b16c",
    "title": "Fundamentals of Software Architecture with Neal Ford",
    "link": "https://6figuredev.com/podcast/fundamentals-of-software-architecture-with-neal-ford/",
    "description": "Episode 236 Neal is Director, Software Architect, and Meme Wrangler at ThoughtWorks, a global IT consultancy with a focus on end-to-end software development and delivery. His professional focus includes designing and building of large-scale enterprise applications.   Links https://nealford.com/ https://twitter.com/neal4d   Resources Fundamentals of Software Architecture https://www.thoughtworks.com/radar https://www.developertoarchitect.com/ https://evolutionaryarchitecture.com/ https://github.com/BenMorris/NetArchTest https://www.thoughtworks.com/en-us/insights/podcasts https://www.enterpriseintegrationpatterns.com/ramblings/18_starbucks.html   “Tempting […] The post Fundamentals of Software Architecture with Neal Ford appeared first on The 6 Figure Developer.",
    "author": "John Callaway",
    "published": "Mon, 14 Mar 2022 13:11:49 +0000",
    "image": "https://media.blubrry.com/6figuredev/content.blubrry.com/6figuredev/6_Figure_Developer-236-NealFord.mp3",
    "source": "http://6figuredev.com/feed/rss/",
    "categories": [
      "Podcast",
      "neal ford",
      "software architecture",
      "thoughtworks"
    ]
  },
  {
    "id": "a400f081-b05c-4cfd-861f-2a37734e4cc2",
    "title": "Accessibility First with Alexander Lemkin",
    "link": "https://6figuredev.com/podcast/accessibility-first-with-alexander-lemkin/",
    "description": "Episode 235 Alexander is a Web Engineer and Architect focused on accessible and extensible solutions.   Links https://www.alemkin.com/ https://www.flapjacktech.com/ https://www.linkedin.com/in/alexander-lemkin-63663749/ https://github.com/alemkin   Resources https://www.ada.gov/ https://www.w3.org/WAI/WCAG2AA-Conformance https://www.a11yproject.com/ https://accessibilityinsights.io/   “Tempting Time” by Animals As Leaders used with permissions – All Rights Reserved × Subscribe now! Never miss a post, subscribe to The 6 Figure Developer […] The post Accessibility First with Alexander Lemkin appeared first on The 6 Figure Developer.",
    "author": "John Callaway",
    "published": "Mon, 07 Mar 2022 14:11:46 +0000",
    "image": "https://media.blubrry.com/6figuredev/content.blubrry.com/6figuredev/6_Figure_Developer-235-Alexander_Lemkin.mp3",
    "source": "http://6figuredev.com/feed/rss/",
    "categories": [
      "Podcast",
      "accessibility",
      "alexander lemkin"
    ]
  },
  {
    "id": "dbc6686b-fd36-4924-945a-5fa1d31e7157",
    "title": "Jerome Pascua: Rootines using Azure Apps, Azure Functions, Cosmos DB and more!",
    "link": "https://6figuredev.com/podcast/jerome-pascua-rootines-using-azure-apps-azure-functions-cosmos-db-and-more/",
    "description": "Episode 234 Jerome is a voice actor, musician, coder, parent, husband, and Senior VP of Software for Asd.ai. Rootines is a mobile journal for the caregivers of children on the Autism spectrum built with Azure based serverless architecture using Azure Applications, Azure functions, App Insights, CosmosDB, and the Azure Event Grid.   Links https://twitter.com/jeromepascua […] The post Jerome Pascua: Rootines using Azure Apps, Azure Functions, Cosmos DB and more! appeared first on The 6 Figure Developer.",
    "author": "John Callaway",
    "published": "Mon, 28 Feb 2022 14:11:02 +0000",
    "image": "https://media.blubrry.com/6figuredev/content.blubrry.com/6figuredev/6_Figure_Developer-234-JeromePascua.mp3",
    "source": "http://6figuredev.com/feed/rss/",
    "categories": [
      "Podcast",
      "application insights",
      "azure app service",
      "blazor",
      "jerome pascua",
      "rootines"
    ]
  },
  {
    "id": "adfeb841-b851-452d-9cd9-0a508331512d",
    "title": ".NET Turns 20 and Clean Architecture with Steve Smith",
    "link": "https://6figuredev.com/podcast/net-turns-20-and-clean-architecture-with-steve-smith/",
    "description": "Episode 233 Steve works with companies that want to avoid the trap of technical debt by helping their teams deliver quality software, quickly. Steve and his team have been described by clients as a “force multiplier”, amplifying the value of existing development teams. Steve’s client list includes Microsoft, Quicken Loans, Celina Insurance, and many […] The post .NET Turns 20 and Clean Architecture with Steve Smith appeared first on The 6 Figure Developer.",
    "author": "John Callaway",
    "published": "Mon, 21 Feb 2022 14:11:42 +0000",
    "image": "https://media.blubrry.com/6figuredev/content.blubrry.com/6figuredev/6_Figure_Developer-233-SteveSmith.mp3",
    "source": "http://6figuredev.com/feed/rss/",
    "categories": [
      "Podcast",
      ".net",
      ".net 20 years",
      ".net turns 20",
      "clean architecture",
      "eshop on web",
      "steve smith",
      "webforms"
    ]
  },
  {
    "id": "e19e41c0-5d6a-4cb6-aced-c4412af8e426",
    "title": "SecOps with Allie Mellen",
    "link": "https://6figuredev.com/podcast/secops-with-allie-mellen/",
    "description": "Episode 232 Allie Mellen is a Forrester analyst covering security operations. She has been in the technology industry for over a decade in various engineering roles, running her own engineering consultancy for a number of years before becoming a hacker. She advises enterprise clients on their security operations practice and is a frequent speaker […] The post SecOps with Allie Mellen appeared first on The 6 Figure Developer.",
    "author": "John Callaway",
    "published": "Mon, 14 Feb 2022 14:11:11 +0000",
    "image": "https://media.blubrry.com/6figuredev/content.blubrry.com/6figuredev/6_Figure_Developer-232-AllieMellen.mp3",
    "source": "http://6figuredev.com/feed/rss/",
    "categories": [
      "Podcast",
      "allie mellen",
      "secops"
    ]
  },
  {
    "id": "561281c4-64c2-4880-bd50-18fa26119b59",
    "title": "Pro Microservices in .NET 6 with Whitesell, Rich, and Groves",
    "link": "https://6figuredev.com/podcast/pro-microservices-in-net-6-with-whitesell-rich-and-groves/",
    "description": "Episode 231 Sean Whitesell is a Microsoft MVP and cloud architect at TokenEx, where he designs cloud-based architectural solutions for hosting internal services for TokenEx. He serves as President of the Tulsa Developers Association. He regularly presents in the community at developer events, conferences, and local MeetUps. Rob Richardson is a software craftsman, building […] The post Pro Microservices in .NET 6 with Whitesell, Rich, and Groves appeared first on The 6 Figure Developer.",
    "author": "John Callaway",
    "published": "Tue, 08 Feb 2022 14:11:19 +0000",
    "image": "https://media.blubrry.com/6figuredev/content.blubrry.com/6figuredev/6_Figure_Developer-231-ProMicroservices.mp3",
    "source": "http://6figuredev.com/feed/rss/",
    "categories": [
      "Podcast",
      ".net",
      "docker",
      "k8s",
      "kubernetes",
      "masstransit",
      "microservices",
      "opentelemetry"
    ]
  },
  {
    "id": "1d22f69e-f84b-49ed-8cf4-d97d5ddada58",
    "title": "Let a thousand programming publications bloom.",
    "link": "https://betterprogramming.pub/let-a-thousand-programming-publications-bloom-bf37baef8f27?source=rss----d0b105d10f0a---4",
    "description": "",
    "author": "Tony Stubblebine",
    "published": "Fri, 10 Nov 2023 18:18:10 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*tKikPWjE4MZ5WgdfZuyvEg.png",
    "source": "https://medium.com/feed/better-programming",
    "categories": null
  },
  {
    "id": "348cb586-5744-42c3-95a9-b96e308b2fb1",
    "title": "Calling AWS Bedrock from code",
    "link": "https://betterprogramming.pub/calling-aws-bedrock-from-code-3f456a51ff99?source=rss----d0b105d10f0a---4",
    "description": "Using Python in a Jupyter notebookContinue reading on Better Programming »",
    "author": "Thomas Reid",
    "published": "Fri, 10 Nov 2023 17:35:02 GMT",
    "image": "https://cdn-images-1.medium.com/max/600/1*iltZoO6rmWj_AnfNpJ1m-A.png",
    "source": "https://medium.com/feed/better-programming",
    "categories": [
      "bedrock",
      "python",
      "llm",
      "boto3",
      "ai"
    ]
  },
  {
    "id": "b6599c01-35c8-48a7-a8d5-810488c95aec",
    "title": "Pandas v Psycopg:",
    "link": "https://betterprogramming.pub/pandas-v-psycopg-a-postgres-database-speed-test-who-wins-3e51432ae0e9?source=rss----d0b105d10f0a---4",
    "description": "A Postgres database speed test. Who wins?Continue reading on Better Programming »",
    "author": "Thomas Reid",
    "published": "Fri, 10 Nov 2023 17:34:53 GMT",
    "image": "https://cdn-images-1.medium.com/max/600/1*bPG-zBkV4q14mCPJsD21jg.png",
    "source": "https://medium.com/feed/better-programming",
    "categories": [
      "speed-test",
      "psycopg2",
      "postgres",
      "performance",
      "pandas"
    ]
  },
  {
    "id": "477e0861-c297-4ec7-8235-39af9d7aedba",
    "title": "Automating Your DevOps: Writing Scripts that Save Time and Headaches",
    "link": "https://betterprogramming.pub/automating-your-devops-writing-scripts-that-save-time-and-headaches-e1f66a3b0530?source=rss----d0b105d10f0a---4",
    "description": "Or, how scripting revolutionized my workflowContinue reading on Better Programming »",
    "author": "Ulas Can Cengiz",
    "published": "Fri, 10 Nov 2023 17:34:20 GMT",
    "image": "https://cdn-images-1.medium.com/max/2600/0*rYKCg6zXR4ibpKfI",
    "source": "https://medium.com/feed/better-programming",
    "categories": [
      "software-development",
      "development",
      "devops",
      "engineering",
      "automation"
    ]
  },
  {
    "id": "0c6042bc-eb25-4f00-960b-6a52d3f9a02c",
    "title": "Integrating Psychology into Software Development",
    "link": "https://betterprogramming.pub/integrating-psychology-into-software-development-c5f79fc8019e?source=rss----d0b105d10f0a---4",
    "description": "Emotional Architecture in Software DesignContinue reading on Better Programming »",
    "author": "Ulas Can Cengiz",
    "published": "Fri, 10 Nov 2023 17:34:07 GMT",
    "image": "https://cdn-images-1.medium.com/max/2600/0*YZT1r-TMIRks5bXk",
    "source": "https://medium.com/feed/better-programming",
    "categories": [
      "engineering",
      "architecture",
      "software-design",
      "software-development",
      "psychology"
    ]
  },
  {
    "id": "a4f5d78f-312b-4a18-8f7b-637d3253c325",
    "title": "GPT Function Calling: 5 Underrated Use Cases",
    "link": "https://betterprogramming.pub/gpt-function-calling-5-underrated-use-cases-ccbd1d3f9fd7?source=rss----d0b105d10f0a---4",
    "description": "",
    "author": "Max Brodeur-Urbas",
    "published": "Fri, 10 Nov 2023 17:33:58 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*doghMb44J43LgPYtkUCByw.jpeg",
    "source": "https://medium.com/feed/better-programming",
    "categories": [
      "automation",
      "llm",
      "gpt",
      "chatgpt",
      "openai"
    ]
  },
  {
    "id": "a68ce4b4-e267-41a5-9fd7-14c1ffd623aa",
    "title": "WebAssembly with Go: Taking Web Apps to the Next Level",
    "link": "https://betterprogramming.pub/webassembly-with-go-taking-web-apps-to-the-next-level-8d81fccd8250?source=rss----d0b105d10f0a---4",
    "description": "",
    "author": "Ege Aytin",
    "published": "Fri, 10 Nov 2023 17:31:06 GMT",
    "image": "https://cdn-images-1.medium.com/max/1000/1*b4sFFT3X6e0dVCvKAAtMIg.png",
    "source": "https://medium.com/feed/better-programming",
    "categories": [
      "javascript",
      "golang",
      "tutorial"
    ]
  },
  {
    "id": "80537dc8-9a05-4a04-9812-09f495bca0b4",
    "title": "3 Fundamental Concepts to Fully Understand how the Fetch API Works",
    "link": "https://betterprogramming.pub/3-fundamental-concepts-to-fully-understand-how-the-fetch-api-works-3ee5d41f81a4?source=rss----d0b105d10f0a---4",
    "description": "Understanding the Fetch API can be challenging, particularly for those new to JavaScript’s unique approach to handling asynchronous…Continue reading on Better Programming »",
    "author": "Jay Cruz",
    "published": "Fri, 10 Nov 2023 17:30:24 GMT",
    "image": "https://cdn-images-1.medium.com/max/1024/1*FtWwyPg7HHUBk-TPPG4__w.png",
    "source": "https://medium.com/feed/better-programming",
    "categories": [
      "fetch-api",
      "software-development",
      "javascript",
      "web-development",
      "programming"
    ]
  },
  {
    "id": "3a15e88e-db55-46e1-8255-a4122e40a764",
    "title": "Deploy CoreML Models on the Server with Vapor",
    "link": "https://betterprogramming.pub/deploy-coreml-models-on-the-server-with-vapor-48809a853fae?source=rss----d0b105d10f0a---4",
    "description": "Get the benefits of Apple’s ML tools server-side.Continue reading on Better Programming »",
    "author": "Drew Althage",
    "published": "Fri, 10 Nov 2023 17:30:15 GMT",
    "image": "https://cdn-images-1.medium.com/max/2266/1*XMjKfWYZYPikQ0pJ391YaA.png",
    "source": "https://medium.com/feed/better-programming",
    "categories": [
      "swift",
      "programming",
      "ios",
      "machine-learning",
      "apple"
    ]
  },
  {
    "id": "e03d2f0d-a051-4561-accb-5dfb707b2fed",
    "title": "Full Stack Engineers Don’t Exist!",
    "link": "https://betterprogramming.pub/full-stack-engineers-dont-exist-37afb7a6b26c?source=rss----d0b105d10f0a---4",
    "description": "There’s a problem with those thousands of jobs available for Full Stack Engineers or Developers on LinkedIn, like a unicorn, that person…Continue reading on Better Programming »",
    "author": "Stephen Walsh",
    "published": "Fri, 10 Nov 2023 17:28:33 GMT",
    "image": "https://cdn-images-1.medium.com/max/2600/0*UoE2n9aNS2wNYXpv",
    "source": "https://medium.com/feed/better-programming",
    "categories": [
      "software-development",
      "software-engineering",
      "programming",
      "careers",
      "technology"
    ]
  }
]
