{
  "id": "465c737f-c526-46ee-93ac-f2824ffe79fe",
  "title": "Proactive Measures Against Password Breaches and Cookie Hijacking",
  "link": "https://slack.engineering/proactive-measures-against-password-breaches-and-cookie-hijacking/",
  "description": "At Slack, we’re committed to security that goes beyond the ordinary. We continuously strive to earn and maintain user trust by safeguarding critical components integral to every user’s experience. From passwords to session cookies, and tokens to webhooks, we prioritize protecting everything essential to how users log into the platform and remain authenticated. Through proactive […] The post Proactive Measures Against Password Breaches and Cookie Hijacking appeared first on Slack Engineering.",
  "author": "Nathan Lehotsky",
  "published": "Fri, 28 Jun 2024 09:00:14 +0000",
  "source": "https://slack.engineering/feed",
  "categories": [
    "Uncategorized",
    "security"
  ],
  "byline": "Nathan Lehotsky Senior Software Engineer, Security",
  "length": 7455,
  "excerpt": "At Slack, we’re committed to security that goes beyond the ordinary. We continuously strive to earn and maintain user trust by safeguarding critical components integral to every user’s experience. From passwords to session cookies, and tokens to webhooks, we prioritize protecting everything essential to how users log into the platform and remain authenticated. Through proactive …",
  "siteName": "Slack Engineering",
  "favicon": "https://slack.engineering/wp-content/uploads/sites/7/2020/05/cropped-octothrope-1.png?w=192",
  "text": "At Slack, we’re committed to security that goes beyond the ordinary. We continuously strive to earn and maintain user trust by safeguarding critical components integral to every user’s experience. From passwords to session cookies, and tokens to webhooks, we prioritize protecting everything essential to how users log into the platform and remain authenticated. Through proactive measures and innovative automations that leverage cutting-edge threat intelligence, we’re dedicated to shielding users from potential breaches, cookie hijacking malware, and inadvertent exposure of sensitive information and secrets. Secrets should remain secret Slack’s strategy has always been to anticipate and mitigate threats before they can impact our users. Since 20161, we have worked to proactively invalidate credentials exposed on the internet based on regular expressions2 tailored to the specifics of our tokens and webhooks. Oftentimes these secrets get inadvertently exposed when they get hard-coded into development code and then published somewhere like GitHub. Since these secrets provide varying levels of access to a user’s workspace, our tooling automatically and immediately invalidates tokens and webhooks upon discovery and notifies their respective owners. Following this, we aimed to extend the same level of protection and automation to Slack passwords and session cookies. Password reuse across multiple platforms poses a significant risk to user security. A 2023 study on account takeovers found that 70% of victims reported that they reused the same password across multiple sites and services, leading to 53% of them having had multiple accounts taken over.3 Put in numbers, 29% of American adults experienced an account takeover by 2023, equating to roughly 77.5 million victims according to government population figures.4 At the same time, passwords and session cookies are also susceptible to malware that is built to steal it from a user’s browser, something we’ll get into below. Exposed password detection and rotation This led us to collaborate with strategic threat intelligence partners who collect data from diverse sources such as breaches, dark web forums, botnets, and malware. These partnerships provide us with high-fidelity, actionable data in real-time that lets us stay ahead of threat actors, while also making Slack a less appealing target by rendering credentials stolen by those threat actors invalid and useless. We continuously ingest this threat intelligence via our partners’ APIs and proactively find matches between the credentials of our users and those appearing in threat actor datastreams. When a match is found, that credential is immediately reset and blocked from being reused by the associated user in the future now that it’s compromised. Oftentimes we can catch these vulnerable passwords so quickly that we’re able to reset them before a threat actor is able to use them to gain unauthorized access to an account. This process of comparing passwords provided by our threat intelligence partners with entries in our database isn’t straightforward, however. While credential breach data is available in plaintext, allowing bad actors to use it, Slack passwords are securely stored as salted hashes, making a direct comparison impossible. To solve this, we created a data pipeline that automatically ingests candidate credentials from our threat intelligence data sources and then salts and hashes each password so that a comparison to Slack’s database can be made before the datapoint is purposefully—and permanently—discarded. Although the process of salting and hashing each candidate password is deliberately time consuming, we’re able to process millions of credentials5 in a reasonable amount of time within the secure confines of Slack’s backend. We accomplish this by dividing them into smaller batches and processing them in parallel in a job queue. When our backend process identifies a match, the associated user’s password is immediately reset and the user is notified via an email explaining this activity, alongside some follow-up actions they can take to improve the security of their account going forward. At this point or if no match is found, the pipeline discards the datapoint so threat intelligence data is never accumulated or stored by Slack. Invalidating hijacked cookies All cookies of any app or service, including the Slack session cookie each Slack user possesses, are locally stored on a user’s device. This local storage affords benefits like speed, efficiency, scalability, and offline functionality, but it also produces a security risk. If a threat actor is able to compromise that user’s device, they could also gain access to the cookies on that device and use the Slack cookies to gain access to the user’s workspaces. To proactively guard against this possibility, apart from monitoring for signs of cookie misuse within Slack, we also constantly monitor threat intelligence datastreams and invalidate exfiltrated Slack cookies in a timely manner, balancing security with user experience. This extends the initial system we implemented that discovers and invalidates user session tokens on a Slack user’s behalf so the cookies are also protected from malicious use. Oftentimes, our threat intelligence partners uncover hijacked Slack cookies so quickly6 that we’re able to not only invalidate each before a bad actor could have the chance to misuse them, but in a way that’s tailored to each respective user’s geography and timezone. When a Slack cookie is invalidated, its associated session gets marked for termination, which once complete logs the user out of their workspace. That’s a good thing, in terms of protecting the user’s accounts from unauthorized access, but we also know no one wants to lose access to Slack during a critical conversation or in the middle of presenting in a huddle. During runtime, our automation reviews each compromised cookie to evaluate whether the associated user’s geography means it’s during their typical weekday working hours. If so, the invalidation of that specific cookie is scheduled to occur in a time window outside of that range, while cookies belonging to users who are not currently within their weekday working hours are invalidated immediately. This lets us provide a positive user experience that considers each user’s timezone while calculating the most efficient and timely invalidation for the exfiltrated cookie. As with exposed passwords, when a cookie gets invalidated we notify the impacted user via email. Additionally, if that user’s workspace is on an Enterprise plan supporting Slack Audit Logs, we also add an event for the cookie invalidation into their audit logs for transparency. Conclusion Our dedication to security at Slack extends beyond conventional measures by leveraging cutting edge threat intelligence with innovative automations for discovering and invalidating vulnerable user credentials at scale. We firmly believe that proactively safeguarding against existing and emerging threats is not only a necessity for fostering a secure platform, but critical for sustaining user trust in our brand. We also pride ourselves on designing approaches that emphasize a seamless and transparent user experience, all while simultaneously implementing robust security protocols to thwart unauthorized access attempts by threat actors. Interested in helping us protect Slack users? Apply now",
  "image": "https://slack.engineering/wp-content/uploads/sites/7/2024/06/pexels-padrinan-2882630.jpg?resize=1280,851",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"content-area\"\u003e\n\t\t\u003cmain id=\"primary\"\u003e\n\t\t\t\u003carticle id=\"post-16717\"\u003e\n\t\t\t\t\n\n\t\t\t\t\t\t\t\t\t\u003cdiv\u003e\n\t\t\t\t\t\t\u003cp\u003eAt Slack, we’re committed to security that goes beyond the ordinary. We continuously strive to earn and maintain user trust by safeguarding critical components integral to every user’s experience. From passwords to session cookies, and tokens to webhooks, we prioritize protecting everything essential to how users log into the platform and remain authenticated. Through proactive measures and innovative automations that leverage cutting-edge threat intelligence, we’re dedicated to shielding users from potential breaches, cookie hijacking malware, and inadvertent exposure of sensitive information and secrets.\u003c/p\u003e\n\u003ch2\u003eSecrets should remain secret\u003c/h2\u003e\n\u003cp\u003eSlack’s strategy has always been to anticipate and mitigate threats before they can impact our users. Since 2016\u003csup id=\"fnref1\"\u003e\u003ca href=\"#fn1\"\u003e1\u003c/a\u003e\u003c/sup\u003e, we have worked to proactively invalidate credentials exposed on the internet based on regular expressions\u003csup id=\"fnref2\"\u003e\u003ca href=\"#fn2\"\u003e2\u003c/a\u003e\u003c/sup\u003e tailored to the specifics of our tokens and webhooks. Oftentimes these secrets get inadvertently exposed when they get hard-coded into development code and then published somewhere like GitHub. Since these secrets provide varying levels of access to a user’s workspace, our tooling automatically and immediately invalidates tokens and webhooks upon discovery and notifies their respective owners.\u003c/p\u003e\n\u003cp\u003eFollowing this, we aimed to extend the same level of protection and automation to Slack passwords and session cookies. Password reuse across multiple platforms poses a significant risk to user security. A 2023 study on account takeovers found that 70% of victims reported that they reused the same password across multiple sites and services, leading to 53% of them having had multiple accounts taken over.\u003csup id=\"fnref3\"\u003e\u003ca href=\"#fn3\"\u003e3\u003c/a\u003e\u003c/sup\u003e\u003cspan\u003e Put in numbers, 29% of American adults experienced an account takeover by 2023, equating to roughly 77.5 million victims according to government population figures.\u003csup id=\"fnref4\"\u003e\u003ca href=\"#fn4\"\u003e4\u003c/a\u003e\u003c/sup\u003e At the same time, passwords and session cookies are also susceptible to malware that is built to steal it from a user’s browser, something we’ll get into below.\u003c/span\u003e\u003c/p\u003e\n\u003ch2\u003eExposed password detection and rotation\u003c/h2\u003e\n\u003cp\u003eThis led us to collaborate with strategic threat intelligence partners who collect data from diverse sources such as breaches, dark web forums, botnets, and malware. These partnerships provide us with high-fidelity, actionable data in real-time that lets us stay ahead of threat actors, while also making Slack a less appealing target by rendering credentials stolen by those threat actors invalid and useless.\u003c/p\u003e\n\u003cp\u003eWe continuously ingest this threat intelligence via our partners’ APIs and proactively find matches between the credentials of our users and those appearing in threat actor datastreams. When a match is found, that credential is immediately reset and blocked from being reused by the associated user in the future now that it’s compromised. Oftentimes we can catch these vulnerable passwords so quickly that we’re able to reset them before a threat actor is able to use them to gain unauthorized access to an account.\u003c/p\u003e\n\u003cp\u003eThis process of comparing passwords provided by our threat intelligence partners with entries in our database isn’t straightforward, however. While credential breach data is available in plaintext, allowing bad actors to use it, Slack passwords are securely stored as salted hashes, making a direct comparison impossible. To solve this, we created a data pipeline that automatically ingests candidate credentials from our threat intelligence data sources and then salts and hashes each password so that a comparison to Slack’s database can be made before the datapoint is purposefully—and permanently—discarded.\u003cbr/\u003e\n\u003cimg decoding=\"async\" width=\"4001\" height=\"3998\" src=\"https://slack.engineering/wp-content/uploads/sites/7/2024/06/pw-reset-blog-diagram-1.jpg?w=688\" alt=\"\" srcset=\"https://slack.engineering/wp-content/uploads/sites/7/2024/06/pw-reset-blog-diagram-1.jpg 4001w, https://slack.engineering/wp-content/uploads/sites/7/2024/06/pw-reset-blog-diagram-1.jpg?resize=160,160 160w, https://slack.engineering/wp-content/uploads/sites/7/2024/06/pw-reset-blog-diagram-1.jpg?resize=640,640 640w, https://slack.engineering/wp-content/uploads/sites/7/2024/06/pw-reset-blog-diagram-1.jpg?resize=768,767 768w, https://slack.engineering/wp-content/uploads/sites/7/2024/06/pw-reset-blog-diagram-1.jpg?resize=1280,1279 1280w, https://slack.engineering/wp-content/uploads/sites/7/2024/06/pw-reset-blog-diagram-1.jpg?resize=1536,1536 1536w, https://slack.engineering/wp-content/uploads/sites/7/2024/06/pw-reset-blog-diagram-1.jpg?resize=2048,2046 2048w, https://slack.engineering/wp-content/uploads/sites/7/2024/06/pw-reset-blog-diagram-1.jpg?resize=1920,1919 1920w\" sizes=\"(max-width: 959px) 688px, (max-width: 1023px) 768px, 1172px\"/\u003e\u003c/p\u003e\n\u003cp\u003eAlthough the process of salting and hashing each candidate password is deliberately time consuming, we’re able to process millions of credentials\u003csup id=\"fnref5\"\u003e\u003ca href=\"#fn5\"\u003e5\u003c/a\u003e\u003c/sup\u003e in a reasonable amount of time within the secure confines of Slack’s backend. We accomplish this by dividing them into smaller batches and processing them in parallel in a job queue. When our backend process identifies a match, the associated user’s password is immediately reset and the user is notified via an email explaining this activity, alongside some follow-up actions they can take to improve the security of their account going forward. At this point or if no match is found, the pipeline discards the datapoint so threat intelligence data is never accumulated or stored by Slack.\u003c/p\u003e\n\u003ch2\u003eInvalidating hijacked cookies\u003c/h2\u003e\n\u003cp\u003eAll cookies of any app or service, including the Slack session cookie each Slack user possesses, are locally stored on a user’s device. This local storage affords benefits like speed, efficiency, scalability, and offline functionality, but it also produces a security risk. If a threat actor is able to compromise that user’s device, they could also gain access to the cookies on that device and use the Slack cookies to gain access to the user’s workspaces.\u003c/p\u003e\n\u003cp\u003eTo proactively guard against this possibility, apart from \u003ca href=\"https://slack.engineering/catching-compromised-cookies/\"\u003emonitoring for signs of cookie misuse within Slack\u003c/a\u003e, we also constantly monitor threat intelligence datastreams and invalidate exfiltrated Slack cookies in a timely manner, balancing security with user experience. This extends the initial system we implemented that discovers and invalidates user session tokens on a Slack user’s behalf so the cookies are also protected from malicious use.\u003c/p\u003e\n\u003cp\u003eOftentimes, our threat intelligence partners uncover hijacked Slack cookies so quickly\u003csup id=\"fnref6\"\u003e\u003ca href=\"#fn6\"\u003e6\u003c/a\u003e\u003c/sup\u003e that we’re able to not only invalidate each before a bad actor could have the chance to misuse them, but in a way that’s tailored to each respective user’s geography and timezone. When a Slack cookie is invalidated, its associated session gets marked for termination, which once complete logs the user out of their workspace. That’s a good thing, in terms of protecting the user’s accounts from unauthorized access, but we also know no one wants to lose access to Slack during a critical conversation or in the middle of presenting in a huddle.\u003cbr/\u003e\n\u003cimg decoding=\"async\" src=\"https://slack.engineering/wp-content/uploads/sites/7/2024/06/cookie-monster-diagram-1.jpg?w=688\" alt=\"\"/\u003e\u003cbr/\u003e\nDuring runtime, our automation reviews each compromised cookie to evaluate whether the associated user’s geography means it’s during their typical weekday working hours. If so, the invalidation of that specific cookie is scheduled to occur in a time window outside of that range, while cookies belonging to users who are not currently within their weekday working hours are invalidated immediately. This lets us provide a positive user experience that considers each user’s timezone while calculating the most efficient and timely invalidation for the exfiltrated cookie.\u003c/p\u003e\n\u003cp\u003eAs with exposed passwords, when a cookie gets invalidated we notify the impacted user via email. Additionally, if that user’s workspace is on an Enterprise plan supporting Slack Audit Logs, we also add an event for the cookie invalidation into their audit logs for transparency.\u003c/p\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eOur dedication to security at Slack extends beyond conventional measures by leveraging cutting edge threat intelligence with innovative automations for discovering and invalidating vulnerable user credentials at scale. We firmly believe that proactively safeguarding against existing and emerging threats is not only a necessity for fostering a secure platform, but critical for sustaining user trust in our brand. We also pride ourselves on designing approaches that emphasize a seamless and transparent user experience, all while simultaneously implementing robust security protocols to thwart unauthorized access attempts by threat actors.\u003c/p\u003e\n\t\t\u003cp\u003e\n\t\t\tInterested in helping us protect Slack users?\t\t\t\u003ca href=\"https://slack.com/careers\" target=\"_blank\" data-clog-click=\"\" data-clog-trigger=\"trigger=\" data-clog-ui-element=\"\" data-clog-ui-component=\"\"\u003eApply now\u003c/a\u003e\n\t\t\u003c/p\u003e\n\t\n\n\t\t\t\t\t\u003c/div\u003e\n\t\t\t\t\n\t\t\t\u003c/article\u003e\n\n\t\t\n\t\t\u003c/main\u003e\n\n\t\t\n\n\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "8 min read",
  "publishedTime": "2024-06-28T09:00:14Z",
  "modifiedTime": "2024-07-03T14:55:46Z"
}
