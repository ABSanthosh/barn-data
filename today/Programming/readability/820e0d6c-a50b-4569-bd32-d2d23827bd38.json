{
  "id": "820e0d6c-a50b-4569-bd32-d2d23827bd38",
  "title": "Mastering Controlled Generation with Gemini 1.5: Schema Adherence for Developers",
  "link": "https://developers.googleblog.com/en/mastering-controlled-generation-with-gemini-15-schema-adherence/",
  "description": "Controlled Generation for Gemini 1.5 Pro and Flash improves the handoff from data science teams to developers, enhancing the integration of AI output and ensuring AI-generated responses adhere to a defined schema.",
  "author": "",
  "published": "",
  "source": "http://feeds.feedburner.com/GDBcode",
  "categories": null,
  "byline": "Lewis Liu, Terry Koo",
  "length": 12486,
  "excerpt": "Controlled Generation for Gemini 1.5 Pro and Flash improves the handoff from data science teams to developers, enhancing the integration of AI output and ensuring AI-generated responses adhere to a defined schema.",
  "siteName": "",
  "favicon": "",
  "text": "Lewis Liu Group Product Manager Gemini Terry Koo Research Scientist Google Deepmind Much of the current excitement surrounding generative AI focuses on the \"what could be\" — the potential experiments and breakthroughs with foundational models. But at Google, we have always been committed to providing a comprehensive AI ecosystem that helps you not only try the best-in-class models but also adopt them in practical applications.As part of that journey, we introduced Controlled Generation for Gemini 1.5 Pro at Google I/O earlier this year, and we’ve been thrilled by the rapid adoption and positive feedback we've received. Today, we're taking another step forward by introducing Controlled Generation for Gemini 1.5 Flash and adding \"enum\" support. This equips developers with a robust tool to reliably generate responses that adhere to a defined schema. Additionally, controlled generation is also automatically enabled in ANY mode when you use function calling on Gemini 1.5.What is Controlled Generation and why is it important?Think of controlled generation as providing a blueprint for the model's output. By defining a response schema, you dictate the precise format and structure of the AI's responses. Whether it's extracting entities in JSON format for seamless downstream processing or classifying news articles within your own taxonomy, controlled generation helps ensure consistency and reduces the need for time-consuming post-processing.To fully integrate AI into software development, two things need to happen: a seamless handoff from data science and machine learning teams to application developers, and seamless integration of the model's output within existing systems. With controlled generation, you can:Enable AI to produce readily usable, machine-readable data reducing the need for cumbersome post-processing and parsing.Generate outputs in formats like JSON, making your AI a first-class citizen in the API economy. It can seamlessly plug into existing workflows.Inject a dose of predictability into AI outputs, reliably anticipating the format and structure of the data your AI model produces.In the words of Chris Curro, principal machine learning engineer at The Estée Lauder Companies — one of our earliest testers — \"We're designing complex reasoning workflows on top of Gemini 1.5 to build consumer and employee experiences that would otherwise be impossible. The developer-friendly nature of controlled generation has allowed our team to move rapidly and drive business value.\"The feature is built on top of our recent advancement Google team has developed called controlled decoding. You can learn more about our underlying techniques in this paper.In Gemini API and Vertex AI API, we introduce the concept of \"response schema\". A response schema acts as a template, dictating the elements, data types, and overall structure of the AI's output. The schema is built based on OpenAPI 3.0 schema definition, so you always know you are building things on an open and compatible standard. By including a response schema with your prompt, you instruct the model to adhere to your defined rules, resulting in predictable and structured results.Google secret sauceGemini’s controlled generation adds minimal latency to your existing API calls, even on the first API callGemini supports enum as a type, with more to comeGemini enforces schemas does not require storing any of your dataHow to get startedThe controlled generation feature is available on both Gemini 1.5 Pro and Gemini 1.5 Flash on Google AI Studio and Vertex AI.Example: Building a meal planning app with JSON schemaImagine you are building an app to suggest recipes for different scenarios. The recipes must be generated in structured format to be easily ingested by the app and visually presented to the user. The following example illustrates how controlled generation can be used to generate a set of recipes for a multi-course meal. from vertexai.generative_models import GenerationConfig, GenerativeModel vertexai.init(project=project_id, location=\"us-central1\") response_schema = { \"type\": \"array\", \"items\": { \"type\": \"object\", \"properties\": { \"course\": { \"type\": \"string\", \"enum\": [ \"appetizer\", \"salad\", \"soup\", \"main\", \"dessert\", ], }, \"name\": { \"type\": \"string\", }, \"ingredients\": { \"type\": \"array\", \"items\": { \"type\": \"object\", \"properties\": { \"unit\": { \"type\": \"string\", \"enum\": [ \"count\", \"cup\", \"tablespoon\", \"teaspoon\", \"pound\", \"ounce\", ], }, \"amount\": { \"type\": \"number\", }, \"name\": { \"type\": \"string\", }, }, \"required\": [\"name\"], }, }, \"steps\": { \"type\": \"array\", \"items\": { \"type\": \"string\", }, }, }, \"required\": [\"course\", \"name\"], }, } prompt = ( \"Some friends are in town and I want to host them for dinner. \" \"Can you plan a three-course meal for me? \" \"I'm not an experienced cook so I need simple recipes.\" ) model = GenerativeModel(\"gemini-1.5-pro-001\") response = model.generate_content( prompt, generation_config=GenerationConfig( response_mime_type=\"application/json\", response_schema=response_schema ), ) The output of this model really confirms the schema specified in the request body, and can be directly used by the application. [ { \"course\": \"appetizer\", \"name\": \"Caprese Skewers\", \"ingredients\": [ { \"name\": \"cherry tomatoes\", \"amount\": 1, \"unit\": \"cup\" }, { \"name\": \"fresh mozzarella balls\", \"amount\": 1, \"unit\": \"cup\" }, { \"name\": \"fresh basil leaves\", \"amount\": 12, \"unit\": \"count\" }, { \"name\": \"olive oil\", \"amount\": 2, \"unit\": \"tablespoon\" }, { \"name\": \"balsamic glaze\", \"amount\": 2, \"unit\": \"tablespoon\" }, { \"name\": \"salt\", \"amount\": 1, \"unit\": \"teaspoon\" }, { \"name\": \"black pepper\", \"amount\": 1, \"unit\": \"teaspoon\" } ], \"steps\": [ \"Thread cherry tomatoes, mozzarella balls, and basil leaves onto skewers.\", \"Drizzle with olive oil and balsamic glaze.\", \"Season with salt and pepper to taste.\" ] }, { \"course\": \"main\", \"name\": \"One-Pan Lemon Herb Salmon\", \"ingredients\": [ { \"name\": \"salmon fillets\", \"amount\": 4, \"unit\": \"count\" }, { \"name\": \"asparagus\", \"amount\": 1, \"unit\": \"pound\" }, { \"name\": \"cherry tomatoes\", \"amount\": 1, \"unit\": \"cup\" }, { \"name\": \"lemon\", \"amount\": 1, \"unit\": \"count\" }, { \"name\": \"dried oregano\", \"amount\": 1, \"unit\": \"teaspoon\" }, { \"name\": \"dried thyme\", \"amount\": 1, \"unit\": \"teaspoon\" }, { \"name\": \"salt\", \"amount\": 1, \"unit\": \"teaspoon\" }, { \"name\": \"black pepper\", \"amount\": 1, \"unit\": \"teaspoon\" }, { \"name\": \"olive oil\", \"amount\": 2, \"unit\": \"tablespoon\" } ], \"steps\": [ \"Preheat oven to 400 degrees F (200 degrees C).\", \"Line a baking sheet with parchment paper.\", \"Place salmon fillets on one side of the baking sheet and spread asparagus and cherry tomatoes on the other side.\", \"Squeeze lemon juice over the salmon and vegetables.\", \"Sprinkle with oregano, thyme, salt, and pepper.\", \"Drizzle with olive oil.\", \"Bake for 15-20 minutes, or until salmon is cooked through and vegetables are tender.\" ] }, { \"course\": \"dessert\", \"name\": \"Fruit Salad with Honey Yogurt\", \"ingredients\": [ { \"name\": \"strawberries\", \"amount\": 1, \"unit\": \"cup\" }, { \"name\": \"blueberries\", \"amount\": 1, \"unit\": \"cup\" }, { \"name\": \"raspberries\", \"amount\": 1, \"unit\": \"cup\" }, { \"name\": \"greek yogurt\", \"amount\": 1, \"unit\": \"cup\" }, { \"name\": \"honey\", \"amount\": 2, \"unit\": \"tablespoon\" } ], \"steps\": [ \"In a large bowl, combine strawberries, blueberries, and raspberries.\", \"In a separate bowl, mix together greek yogurt and honey.\", \"Serve fruit salad with a dollop of honey yogurt.\" ] } ] Classify product condition with Enum schemaTo constrain the model output in a set of predefined values, you can use “text/x.enum”. import vertexai from vertexai.generative_models import GenerationConfig, GenerativeModel vertexai.init(project=project_id, location=\"us-central1\") model = GenerativeModel(\"gemini-1.5-flash-001\") response_schema = { \"type\": \"STRING\", \"enum\": [\"new in package\", \"like new\", \"gently used\", \"used\", \"damaged\", \"soiled\"] } prompt = [ \"Item description: The item is a long winter coat that has many tears all around the seams and is falling apart. It has large questionable stains on it.\" ] response = model.generate_content( prompt, generation_config=GenerationConfig( response_mime_type=\"text/x.enum\", response_schema=response_schema ), ) print(response.candidates[0]) The model output contains the simple classification of the product as “damaged”. content { role: \"model\" parts { text: \"damaged\" } } LimitationsControlled generation supports a subset of OpenAPI3.0 schema.The output content still depends on model capability to reason and extract. Using controlled generation enforces output format, but not the actual responseIf the prompt has insufficient information for a required field, controlled generation may output a response based on the data it was trained on. Setting the nullable to True on the field can mitigate this limitation.SummaryWith controlled generation, you now have a robust tool to generate responses that adhere to a defined schema. You can apply it to many of your existing workflows to make it more reliable and predictive. We’re committed to providing developers with easy-to-use API features to better steer and control model behavior. Controlled Generation is just a start.To get started with this feature, you can read more from Google AI Studio or Vertex AI documentation page.",
  "image": "https://storage.googleapis.com/gweb-developer-goog-blog-assets/images/Gemini-Social-2_1.2e16d0ba.fill-1200x600.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\n    \n      \n    \n\n    \n\n    \n\n    \u003csection\u003e\n      \n        \n          \u003cp\u003e\u003ca href=\"https://developers.googleblog.com/en/search/?author=Lewis+Liu\"\u003eLewis Liu\u003c/a\u003e\n            \n              \u003cspan\u003eGroup Product Manager\u003c/span\u003e\n            \n            \n              \u003cspan\u003eGemini\u003c/span\u003e\n            \n          \u003c/p\u003e\n        \n          \u003cp\u003e\u003ca href=\"https://developers.googleblog.com/en/search/?author=Terry+Koo\"\u003eTerry Koo\u003c/a\u003e\n            \n              \u003cspan\u003eResearch Scientist\u003c/span\u003e\n            \n            \n              \u003cspan\u003eGoogle Deepmind\u003c/span\u003e\n            \n          \u003c/p\u003e\n        \n\n      \n      \u003c/section\u003e\n\n    \n    \u003cdiv\u003e\n          \n\n\u003cdiv\u003e\n    \u003cp data-block-key=\"b62o5\"\u003eMuch of the current excitement surrounding generative AI focuses on the \u0026#34;what could be\u0026#34; — the potential experiments and breakthroughs with foundational models. But at Google, we have always been committed to providing a comprehensive AI ecosystem that helps you not only try the best-in-class models but also adopt them in practical applications.\u003c/p\u003e\u003cp data-block-key=\"60qgp\"\u003eAs part of that journey, we introduced Controlled Generation for Gemini 1.5 Pro at Google I/O earlier this year, and we’ve been thrilled by the rapid adoption and positive feedback we\u0026#39;ve received. Today, we\u0026#39;re taking another step forward by introducing Controlled Generation for Gemini 1.5 Flash and adding \u0026#34;enum\u0026#34; support. This equips developers with a robust tool to reliably generate responses that adhere to a defined schema. Additionally, controlled generation is also automatically enabled in ANY mode when you use function calling on Gemini 1.5.\u003c/p\u003e\u003ch2 data-block-key=\"1tjb\"\u003e\u003cb\u003e\u003cbr/\u003e\u003c/b\u003eWhat is Controlled Generation and why is it important?\u003c/h2\u003e\u003cp data-block-key=\"45vqk\"\u003eThink of controlled generation as providing a blueprint for the model\u0026#39;s output. By defining a response schema, you dictate the precise format and structure of the AI\u0026#39;s responses. Whether it\u0026#39;s extracting entities in JSON format for seamless downstream processing or classifying news articles within your own taxonomy, controlled generation helps ensure consistency and reduces the need for time-consuming post-processing.\u003c/p\u003e\u003cp data-block-key=\"dl54b\"\u003eTo fully integrate AI into software development, two things need to happen: a seamless handoff from data science and machine learning teams to application developers, and seamless integration of the model\u0026#39;s output within existing systems. With controlled generation, you can:\u003c/p\u003e\u003cul\u003e\u003cli data-block-key=\"eibgs\"\u003eEnable AI to produce readily usable, machine-readable data reducing the need for cumbersome post-processing and parsing.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"c1j6n\"\u003eGenerate outputs in formats like JSON, making your AI a first-class citizen in the API economy. It can seamlessly plug into existing workflows.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"5o5f2\"\u003eInject a dose of predictability into AI outputs, reliably anticipating the format and structure of the data your AI model produces.\u003c/li\u003e\u003c/ul\u003e\u003cp data-block-key=\"cqtpu\"\u003eIn the words of Chris Curro, principal machine learning engineer at The Estée Lauder Companies — one of our earliest testers — \u003ci\u003e\u0026#34;We\u0026#39;re designing complex reasoning workflows on top of Gemini 1.5 to build consumer and employee experiences that would otherwise be impossible. The developer-friendly nature of controlled generation has allowed our team to move rapidly and drive business value.\u0026#34;\u003c/i\u003e\u003c/p\u003e\u003cp data-block-key=\"3edrp\"\u003eThe feature is built on top of our recent advancement Google team has developed called controlled decoding. You can learn more about our underlying techniques in this \u003ca href=\"https://arxiv.org/abs/2407.08103\"\u003epaper\u003c/a\u003e.\u003c/p\u003e\u003cp data-block-key=\"6544d\"\u003eIn Gemini API and Vertex AI API, we introduce the concept of \u0026#34;response schema\u0026#34;. A \u003ca href=\"https://cloud.google.com/vertex-ai/docs/reference/rest/v1/Schema\"\u003eresponse schema\u003c/a\u003e acts as a template, dictating the elements, data types, and overall structure of the AI\u0026#39;s output. The schema is built based on \u003ca href=\"https://spec.openapis.org/oas/v3.0.3#schema\"\u003eOpenAPI 3.0 schema\u003c/a\u003e definition, so you always know you are building things on an open and compatible standard. By including a response schema with your prompt, you instruct the model to adhere to your defined rules, resulting in predictable and structured results.\u003c/p\u003e\u003ch3 data-block-key=\"fhrm8\"\u003e\u003cb\u003e\u003cbr/\u003eGoogle secret sauce\u003c/b\u003e\u003c/h3\u003e\u003cul\u003e\u003cli data-block-key=\"7tceo\"\u003eGemini’s controlled generation adds minimal latency to your existing API calls, even on the first API call\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"eoga7\"\u003eGemini supports enum as a type, with more to come\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"3c71d\"\u003eGemini enforces schemas does not require storing any of your data\u003c/li\u003e\u003c/ul\u003e\u003ch2 data-block-key=\"ms65\"\u003e\u003cb\u003e\u003cbr/\u003e\u003c/b\u003eHow to get started\u003c/h2\u003e\u003cp data-block-key=\"95jl0\"\u003eThe controlled generation feature is available on both Gemini 1.5 Pro and Gemini 1.5 Flash on \u003ca href=\"https://ai.google.dev/gemini-api/docs/json-mode\"\u003eGoogle AI Studio\u003c/a\u003e and \u003ca href=\"https://cloud.google.com/vertex-ai/generative-ai/docs/multimodal/control-generated-output\"\u003eVertex AI\u003c/a\u003e.\u003c/p\u003e\u003cp data-block-key=\"6lr2h\"\u003e\u003cb\u003e\u003cbr/\u003eExample: Building a meal planning app with JSON schema\u003c/b\u003e\u003c/p\u003e\u003cp data-block-key=\"aki7i\"\u003eImagine you are building an app to suggest recipes for different scenarios. The recipes must be generated in structured format to be easily ingested by the app and visually presented to the user. The following example illustrates how controlled generation can be used to generate a set of recipes for a multi-course meal.\u003c/p\u003e\n\u003c/div\u003e   \n\n\u003cdiv\u003e\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003cspan\u003efrom\u003c/span\u003e \u003cspan\u003evertexai.generative_models\u003c/span\u003e \u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003eGenerationConfig\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003eGenerativeModel\u003c/span\u003e\n\u003cspan\u003evertexai\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003einit\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eproject\u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003eproject_id\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003elocation\u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e\u0026#34;us-central1\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\n\u003cspan\u003eresponse_schema\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;array\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n    \u003cspan\u003e\u0026#34;items\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;object\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n        \u003cspan\u003e\u0026#34;properties\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n            \u003cspan\u003e\u0026#34;course\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;string\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;enum\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003e\n                    \u003cspan\u003e\u0026#34;appetizer\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                    \u003cspan\u003e\u0026#34;salad\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                    \u003cspan\u003e\u0026#34;soup\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                    \u003cspan\u003e\u0026#34;main\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                    \u003cspan\u003e\u0026#34;dessert\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e],\u003c/span\u003e\n            \u003cspan\u003e},\u003c/span\u003e\n            \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;string\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n            \u003cspan\u003e},\u003c/span\u003e\n            \u003cspan\u003e\u0026#34;ingredients\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;array\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;items\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n                    \u003cspan\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;object\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                    \u003cspan\u003e\u0026#34;properties\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n                        \u003cspan\u003e\u0026#34;unit\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n                            \u003cspan\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;string\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                            \u003cspan\u003e\u0026#34;enum\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003e\n                                \u003cspan\u003e\u0026#34;count\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                                \u003cspan\u003e\u0026#34;cup\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                                \u003cspan\u003e\u0026#34;tablespoon\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                                \u003cspan\u003e\u0026#34;teaspoon\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                                \u003cspan\u003e\u0026#34;pound\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                                \u003cspan\u003e\u0026#34;ounce\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                            \u003cspan\u003e],\u003c/span\u003e\n                        \u003cspan\u003e},\u003c/span\u003e\n                        \u003cspan\u003e\u0026#34;amount\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n                            \u003cspan\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;number\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                        \u003cspan\u003e},\u003c/span\u003e\n                        \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n                            \u003cspan\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;string\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                        \u003cspan\u003e},\u003c/span\u003e\n                    \u003cspan\u003e},\u003c/span\u003e\n                    \u003cspan\u003e\u0026#34;required\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003e\u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e],\u003c/span\u003e\n                \u003cspan\u003e},\u003c/span\u003e\n            \u003cspan\u003e},\u003c/span\u003e\n            \u003cspan\u003e\u0026#34;steps\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;array\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;items\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n                    \u003cspan\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;string\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e},\u003c/span\u003e\n            \u003cspan\u003e},\u003c/span\u003e\n        \u003cspan\u003e},\u003c/span\u003e\n        \u003cspan\u003e\u0026#34;required\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003e\u003cspan\u003e\u0026#34;course\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e],\u003c/span\u003e\n    \u003cspan\u003e},\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\n\u003cspan\u003eprompt\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\n    \u003cspan\u003e\u0026#34;Some friends are in town and I want to host them for dinner.  \u0026#34;\u003c/span\u003e\n    \u003cspan\u003e\u0026#34;Can you plan a three-course meal for me?  \u0026#34;\u003c/span\u003e\n    \u003cspan\u003e\u0026#34;I\u0026#39;m not an experienced cook so I need simple recipes.\u0026#34;\u003c/span\u003e\n\u003cspan\u003e)\u003c/span\u003e\n\n\u003cspan\u003emodel\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eGenerativeModel\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;gemini-1.5-pro-001\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\n\u003cspan\u003eresponse\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003emodel\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egenerate_content\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n    \u003cspan\u003eprompt\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n    \u003cspan\u003egeneration_config\u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003eGenerationConfig\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n        \u003cspan\u003eresponse_mime_type\u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e\u0026#34;application/json\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n        \u003cspan\u003eresponse_schema\u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003eresponse_schema\u003c/span\u003e\n    \u003cspan\u003e),\u003c/span\u003e\n\u003cspan\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e  \u003cp data-block-key=\"b62o5\"\u003eThe output of this model really confirms the schema specified in the request body, and can be directly used by the application.\u003c/p\u003e   \n\n\u003cdiv\u003e\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003cspan\u003e[\u003c/span\u003e\n    \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003e\u0026#34;course\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;appetizer\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n        \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;Caprese Skewers\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n        \u003cspan\u003e\u0026#34;ingredients\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003e\n            \u003cspan\u003e{\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;cherry tomatoes\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;amount\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;unit\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;cup\u0026#34;\u003c/span\u003e\n            \u003cspan\u003e},\u003c/span\u003e\n            \u003cspan\u003e{\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;fresh mozzarella balls\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;amount\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;unit\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;cup\u0026#34;\u003c/span\u003e\n            \u003cspan\u003e},\u003c/span\u003e\n            \u003cspan\u003e{\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;fresh basil leaves\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;amount\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e12\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;unit\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;count\u0026#34;\u003c/span\u003e\n            \u003cspan\u003e},\u003c/span\u003e\n            \u003cspan\u003e{\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;olive oil\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;amount\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e2\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;unit\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;tablespoon\u0026#34;\u003c/span\u003e\n            \u003cspan\u003e},\u003c/span\u003e\n            \u003cspan\u003e{\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;balsamic glaze\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;amount\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e2\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;unit\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;tablespoon\u0026#34;\u003c/span\u003e\n            \u003cspan\u003e},\u003c/span\u003e\n            \u003cspan\u003e{\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;salt\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;amount\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;unit\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;teaspoon\u0026#34;\u003c/span\u003e\n            \u003cspan\u003e},\u003c/span\u003e\n            \u003cspan\u003e{\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;black pepper\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;amount\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;unit\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;teaspoon\u0026#34;\u003c/span\u003e\n            \u003cspan\u003e}\u003c/span\u003e\n        \u003cspan\u003e],\u003c/span\u003e\n        \u003cspan\u003e\u0026#34;steps\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003e\n            \u003cspan\u003e\u0026#34;Thread cherry tomatoes, mozzarella balls, and basil leaves onto skewers.\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n            \u003cspan\u003e\u0026#34;Drizzle with olive oil and balsamic glaze.\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n            \u003cspan\u003e\u0026#34;Season with salt and pepper to taste.\u0026#34;\u003c/span\u003e\n        \u003cspan\u003e]\u003c/span\u003e\n    \u003cspan\u003e},\u003c/span\u003e\n    \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003e\u0026#34;course\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;main\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n        \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;One-Pan Lemon Herb Salmon\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n        \u003cspan\u003e\u0026#34;ingredients\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003e\n            \u003cspan\u003e{\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;salmon fillets\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;amount\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e4\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;unit\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;count\u0026#34;\u003c/span\u003e\n            \u003cspan\u003e},\u003c/span\u003e\n            \u003cspan\u003e{\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;asparagus\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;amount\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;unit\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;pound\u0026#34;\u003c/span\u003e\n            \u003cspan\u003e},\u003c/span\u003e\n            \u003cspan\u003e{\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;cherry tomatoes\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;amount\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;unit\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;cup\u0026#34;\u003c/span\u003e\n            \u003cspan\u003e},\u003c/span\u003e\n            \u003cspan\u003e{\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;lemon\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;amount\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;unit\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;count\u0026#34;\u003c/span\u003e\n            \u003cspan\u003e},\u003c/span\u003e\n            \u003cspan\u003e{\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;dried oregano\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;amount\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;unit\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;teaspoon\u0026#34;\u003c/span\u003e\n            \u003cspan\u003e},\u003c/span\u003e\n            \u003cspan\u003e{\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;dried thyme\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;amount\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;unit\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;teaspoon\u0026#34;\u003c/span\u003e\n            \u003cspan\u003e},\u003c/span\u003e\n            \u003cspan\u003e{\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;salt\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;amount\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;unit\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;teaspoon\u0026#34;\u003c/span\u003e\n            \u003cspan\u003e},\u003c/span\u003e\n            \u003cspan\u003e{\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;black pepper\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;amount\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;unit\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;teaspoon\u0026#34;\u003c/span\u003e\n            \u003cspan\u003e},\u003c/span\u003e\n            \u003cspan\u003e{\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;olive oil\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;amount\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e2\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;unit\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;tablespoon\u0026#34;\u003c/span\u003e\n            \u003cspan\u003e}\u003c/span\u003e\n        \u003cspan\u003e],\u003c/span\u003e\n        \u003cspan\u003e\u0026#34;steps\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003e\n            \u003cspan\u003e\u0026#34;Preheat oven to 400 degrees F (200 degrees C).\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n            \u003cspan\u003e\u0026#34;Line a baking sheet with parchment paper.\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n            \u003cspan\u003e\u0026#34;Place salmon fillets on one side of the baking sheet and spread asparagus and cherry tomatoes on the other side.\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n            \u003cspan\u003e\u0026#34;Squeeze lemon juice over the salmon and vegetables.\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n            \u003cspan\u003e\u0026#34;Sprinkle with oregano, thyme, salt, and pepper.\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n            \u003cspan\u003e\u0026#34;Drizzle with olive oil.\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n            \u003cspan\u003e\u0026#34;Bake for 15-20 minutes, or until salmon is cooked through and vegetables are tender.\u0026#34;\u003c/span\u003e\n        \u003cspan\u003e]\u003c/span\u003e\n    \u003cspan\u003e},\u003c/span\u003e\n    \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003e\u0026#34;course\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;dessert\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n        \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;Fruit Salad with Honey Yogurt\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n        \u003cspan\u003e\u0026#34;ingredients\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003e\n            \u003cspan\u003e{\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;strawberries\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;amount\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;unit\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;cup\u0026#34;\u003c/span\u003e\n            \u003cspan\u003e},\u003c/span\u003e\n            \u003cspan\u003e{\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;blueberries\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;amount\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;unit\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;cup\u0026#34;\u003c/span\u003e\n            \u003cspan\u003e},\u003c/span\u003e\n            \u003cspan\u003e{\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;raspberries\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;amount\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;unit\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;cup\u0026#34;\u003c/span\u003e\n            \u003cspan\u003e},\u003c/span\u003e\n            \u003cspan\u003e{\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;greek yogurt\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;amount\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;unit\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;cup\u0026#34;\u003c/span\u003e\n            \u003cspan\u003e},\u003c/span\u003e\n            \u003cspan\u003e{\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;honey\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;amount\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e2\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;unit\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;tablespoon\u0026#34;\u003c/span\u003e\n            \u003cspan\u003e}\u003c/span\u003e\n        \u003cspan\u003e],\u003c/span\u003e\n        \u003cspan\u003e\u0026#34;steps\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003e\n            \u003cspan\u003e\u0026#34;In a large bowl, combine strawberries, blueberries, and raspberries.\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n            \u003cspan\u003e\u0026#34;In a separate bowl, mix together greek yogurt and honey.\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n            \u003cspan\u003e\u0026#34;Serve fruit salad with a dollop of honey yogurt.\u0026#34;\u003c/span\u003e\n        \u003cspan\u003e]\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e]\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e  \u003cdiv\u003e\n    \u003ch3 data-block-key=\"b62o5\"\u003e\u003cb\u003eClassify product condition with Enum schema\u003c/b\u003e\u003c/h3\u003e\u003cp data-block-key=\"3o072\"\u003eTo constrain the model output in a set of predefined values, you can use “text/x.enum”.\u003c/p\u003e\n\u003c/div\u003e   \n\n\u003cdiv\u003e\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003evertexai\u003c/span\u003e\n\u003cspan\u003efrom\u003c/span\u003e \u003cspan\u003evertexai.generative_models\u003c/span\u003e \u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003eGenerationConfig\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003eGenerativeModel\u003c/span\u003e\n\n\u003cspan\u003evertexai\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003einit\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eproject\u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003eproject_id\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003elocation\u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e\u0026#34;us-central1\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003cspan\u003emodel\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eGenerativeModel\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;gemini-1.5-flash-001\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\n\u003cspan\u003eresponse_schema\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n     \u003cspan\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;STRING\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n     \u003cspan\u003e\u0026#34;enum\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003e\u003cspan\u003e\u0026#34;new in package\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e\u0026#34;like new\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e\u0026#34;gently used\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e\u0026#34;used\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e\u0026#34;damaged\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e\u0026#34;soiled\u0026#34;\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\n\u003cspan\u003eprompt\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003e\n     \u003cspan\u003e\u0026#34;Item description: The item is a long winter coat that has many tears all around the seams and is falling apart. It has large questionable stains on it.\u0026#34;\u003c/span\u003e\n\u003cspan\u003e]\u003c/span\u003e\n\n\n\u003cspan\u003eresponse\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003emodel\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egenerate_content\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n     \u003cspan\u003eprompt\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n     \u003cspan\u003egeneration_config\u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003eGenerationConfig\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n         \u003cspan\u003eresponse_mime_type\u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e\u0026#34;text/x.enum\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003eresponse_schema\u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003eresponse_schema\u003c/span\u003e\n     \u003cspan\u003e),\u003c/span\u003e\n\u003cspan\u003e)\u003c/span\u003e\n\u003cspan\u003eprint\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eresponse\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ecandidates\u003c/span\u003e\u003cspan\u003e[\u003c/span\u003e\u003cspan\u003e0\u003c/span\u003e\u003cspan\u003e])\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e  \u003cp data-block-key=\"b62o5\"\u003eThe model output contains the simple classification of the product as “damaged”.\u003c/p\u003e   \n\n\u003cdiv\u003e\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003cspan\u003econtent\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n  \u003cspan\u003erole\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;model\u0026#34;\u003c/span\u003e\n  \u003cspan\u003eparts\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003etext\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;damaged\u0026#34;\u003c/span\u003e\n  \u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e  \u003cdiv\u003e\n    \u003ch3 data-block-key=\"b62o5\"\u003e\u003cb\u003eLimitations\u003c/b\u003e\u003c/h3\u003e\u003cul\u003e\u003cli data-block-key=\"c62hn\"\u003eControlled generation supports a subset of OpenAPI3.0 \u003ca href=\"https://cloud.google.com/vertex-ai/docs/reference/rest/v1/Schema\"\u003eschema\u003c/a\u003e.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"bjm28\"\u003eThe output content still depends on model capability to reason and extract. Using controlled generation enforces output format, but not the actual response\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"3ugmq\"\u003eIf the prompt has insufficient information for a required field, controlled generation may output a response based on the data it was trained on. Setting the nullable to True on the field can mitigate this limitation.\u003c/li\u003e\u003c/ul\u003e\u003ch2 data-block-key=\"1kr4s\"\u003e\u003cbr/\u003eSummary\u003c/h2\u003e\u003cp data-block-key=\"6iac2\"\u003eWith controlled generation, you now have a robust tool to generate responses that adhere to a defined schema. You can apply it to many of your existing workflows to make it more reliable and predictive. We’re committed to providing developers with easy-to-use API features to better steer and control model behavior. Controlled Generation is just a start.\u003c/p\u003e\u003cp data-block-key=\"s898\"\u003eTo get started with this feature, you can read more from \u003ca href=\"https://ai.google.dev/gemini-api/docs/json-mode\"\u003eGoogle AI Studio\u003c/a\u003e or \u003ca href=\"https://cloud.google.com/vertex-ai/generative-ai/docs/multimodal/control-generated-output\"\u003eVertex AI\u003c/a\u003e documentation page.\u003c/p\u003e\n\u003c/div\u003e \n      \u003c/div\u003e\n    \n\n    \n\n    \n    \n    \n  \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "14 min read",
  "publishedTime": "2024-09-03T00:00:00Z",
  "modifiedTime": null
}
