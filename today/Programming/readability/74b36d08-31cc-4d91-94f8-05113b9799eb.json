{
  "id": "74b36d08-31cc-4d91-94f8-05113b9799eb",
  "title": "S26:E4 - The Ins and Outs of LinkedIn (Laura Thorson)",
  "link": "https://www.codenewbie.org/podcast/the-ins-and-outs-of-linkedin",
  "description": "Saron chats with Laura Thorson, Program Manager at GitHub. Laura talks about how she was always interested in singing, dancing and music growing up which led her to UCLA on a scholarship to play the oboe. She tells us about her experience at UCLA and her decision to go to a coding bootcamp after graduation as opposed to searching for a job with her English Lit degree. Laura then describes the jobs she landed after bootcamp at Salesforce, Twitter, Meta and now GitHub and how LinkedIn played a huge role in helping her land these opportunities. Show Links Partner with Dev \u0026 CodeNewbie! (sponsor) STK AdTech Laura's GitHub Laura's Twitter",
  "author": "CodeNewbie",
  "published": "Wed, 22 Nov 2023 03:00:00 -0500",
  "source": "http://feeds.codenewbie.org/cnpodcast.xml",
  "categories": [
    "Podcast"
  ],
  "byline": "",
  "length": 48442,
  "excerpt": "[00:00:05] SY: Welcome to the CodeNewbie Podcast where we talk to people on their coding journey in hopes of helping you on yours. I’m your host, Saron, and today we’re talking about the ins and outs of LinkedIn with Laura Thorson, Program Manager at GitHub.",
  "siteName": "",
  "favicon": "https://www.codenewbie.org/assets/favicon-180-b6d80e4d946988dd84ac70aca4f458997d945d020597dcd414e0a1f0c6133b74.png",
  "text": "[00:00:05] SY: Welcome to the CodeNewbie Podcast where we talk to people on their coding journey in hopes of helping you on yours. I’m your host, Saron, and today we’re talking about the ins and outs of LinkedIn with Laura Thorson, Program Manager at GitHub. [00:00:19] LT: LinkedIn is your resume, just on display for everybody to see. So you can work really hard on your resume, and you can get it just right, and it’s one page, and it’s all fancy free and whatever, but it’s sitting there on your desktop, right? And then the next time you finally send it to somebody, they’ve got a hundred that all look the same. [00:00:36] SY: Laura talks about how she made the switch from music and English to software and coding. I also discuss with Laura why she credits so much of her technical career to the initial bootcamp she signed up for after this. [MUSIC BREAK] [00:00:54] SY: Thank you so much for being here. [00:00:55] LT: Thank you for having me. [00:00:56] SY: So tell me, what was it like for you growing up? Were you big into computers as a kid? [00:01:00] LT: Actually, not at all. [00:01:02] SY: All right! [00:01:03] LT: Yeah. I mean, I’m a kid of the ’90s, the early ’90s, so computers, we didn’t even have one for a long time, but I was always really into singing and dancing around the living room to all of the Disney princess songs that would come out every single year. [00:01:20] SY: Nice. [00:01:21] LT: Yeah, and being outside. And so, yeah, I actually was not super familiar with computers or coding or anything like that for a very long time, I would say. I don’t know if anybody’s like that anymore. [00:01:32] SY: Yeah. No, I’m with you completely. When I was a kid, I was also into singing and dancing and being on stage and all that stuff. [00:01:39] LT: Same. [00:01:39] SY: I didn’t know much about tech and also grew up in the ’90s. So I completely understand. So I know that you went to UCLA and you majored in English Lit, which I also relate to because I was an English and psychology major at Maryland, and it was very confusing to my immigrant parents why I would major in English. But I’m curious, what was your thinking behind majoring in English literature? What were you hoping to do with that? [00:02:01] LT: Well, what’s really funny is I went to UCLA as an oboe performance major, so I took the singing and dancing all the way to the end. [00:02:09] SY: All of the way. Love it. [00:02:10] LT: Yeah. So I actually was a double major for a little while. I got a full ride scholarship to UCLA to play the oboe, and then I was an opera major as well. So I did a little bit of singing and playing instruments and playing in orchestras and all of that. I did that for a few years, I tried psychology actually for a little bit, I still am passionate about psychology in general, but English kind of just, I mean, I’ve always been an avid reader and love language and books and just comprehension of language and all that kind of stuff. So English just kind of became a good place to finally settle down because I was like three years into my degree and I needed to graduate at some point. So I honestly didn’t really know what I was going to do with my English degree. I was in my senior year of college, and it’s finally, you should really start thinking about what you want to do afterwards at that point. And my mom found a magazine article in Time Magazine about Dev Bootcamp and this coding bootcamp phenomenon. It was kind of the first of its kind at the time and she sent it to me and was like, “I don’t know. I really think this could be something of interest to you. I don’t know. Maybe check it out.” And so I looked into it and I kind of gathered from the article. Again, I still have not yet had experience with computers at this, I mean, with tech and coding at this point, aside from just like using computers to type up papers. But it kind of seemed to me like another language, like coding could be just like learning a different language versus… I used to always think of coding as being really mathematical or like I need to really know my math in order to do this and I’m not a huge fan of math personally. I’m obviously a lot more interested in understanding the nuances of language and with all the different syntax and how things work and how you could write stuff together that really spoke and to the computer in a way, I found that really fascinating. So I applied to the bootcamp and got in and that was, at the time, my big post-grad plan was just that I was going to go to this bootcamp in San Francisco and kind of figure it out from there. [00:04:17] SY: What made you decide to kind of switch direction? Because you had this oboe scholarship, you were doing opera, you were doing English, and going into tech feels like quite a big difference, quite a big jump from what you were initially set out to do. So what made you decide to make the switch? [00:04:35] LT: I think at the time, I didn’t really have a plan, so there wasn’t really anything set in stone yet. I mean, with music, I loved music. My experience at UCLA as a music major, I was the only person that was accepted my graduating class as an oboe performance major in the entire university. [00:04:53] SY: Wow! [00:04:54] LT: So there was just a lot of pressure. And as such, you’re playing in all these different orchestras. Every band that needs an oboist, you have to be there and you have to do all these rehearsals and then practices and never mind that you’re taking lessons and making your own reeds and all of these different things. And I was young, obviously. I was only 17, 18. I wanted to go to college to go to football games. [00:05:21] SY: Have a life. [00:05:23] LT: Yeah, and I wanted to be in an a cappella group and being an opera singer they said, “No, you can’t be in a cappella group because that’ll change your voice and how you perform.” And so it felt very restrictive. I kind of felt like I was already doing a job and I was only 17 or 18. And I was like, “Well, I’ve got the rest of my life to like do a job.” So it’s a great and rigorous program and that really works for some people. But I had kind of different ambitions about what I was hoping to experience in my college life. So that’s part of why I walked away from doing that. I actually also kind of was concerned because back then, this is like 2010’s time frame, but I remember reading an article in the New York Times that orchestras were kind of in danger because recordings were getting so good and actually AI was getting better. And this is back then, of course, now the conversation’s even more important around AI, but that AI was basically going to replace orchestras because while orchestras are made up of humans who make mistakes, computers don’t ever make a mistake. You could have the computer do it as many times as you wanted to and they would never get tired and they would never complain or have a union that will revolt or any of these different things. And so I kind of got worried, honestly, that I was going to be working so hard to be the best oboist I could be, and then I would just get replaced by a computer. [00:06:48] SY: Yeah. That’s a real concern. [00:06:48] TL: So I kind of just decided to switch to something else instead. [00:06:52] SY: Got you. So at what point in your college career did you decide, “You know what, this is a little too much. This is too much pressure. This isn’t necessarily the life that I want. Let me move into something else”? Did that happen in your senior year or did it start happening before that? [00:07:07] TL: Yeah, it was mostly like sophomore year, I’d say. [00:07:10] SY: Okay. [00:07:11] TL: I was already pretty burnt out from music and just kind of deciding that this wasn’t really feeling like the right fit. And I didn’t know how to say that it wasn’t the right fit at the time. And I kind of just started not applying myself the way that I could have applied myself. And my oboe teacher finally just sent me an email, and I actually still have the email. Sometimes I go back and look at it again because he basically called it out. He was just like, “Look, if you don’t really want to be here, that’s fine, but then let’s just stop wasting each other’s time. Let’s go maybe figure out what will be a better fit for you.” And he was right. It was hard and I have regrets about how I handled it. I also have compassion for the fact that I was I was young and I had no idea how to set boundaries. I had no idea how to communicate that something wasn’t working for me. So I wish I could go back to college and do it again as a 30 something because I think I would do a much better job. [00:08:11] SY: Yeah, me too, girl. Me too. [00:08:13] TL: But it is what it was. It was a good learning experience and it made a big impact on me and I’m grateful in the long run because I’m definitely doing something now that I think is a much better fit for me. [00:08:24] SY: Right. Right. Okay. Makes sense. So you heard about Dev Bootcamp, you applied, got accepted, you joined. I’m curious about how the rigor of a bootcamp, which is no joke either, right? [00:08:37] TL: Right. [00:08:37] SY: I remember when I did it, it was just a constant fire hose of information over a very short amount of time. How did it compare to your training and the rigor of being a musician and a music student at UCLA? [00:08:53] TL: I think it was just so exciting and new at the time that, you’re right, it’s definitely a fire hose. You’re basically working day and night all day. I’d go in on the weekend, everyone in my cohort, we’d all go in on the weekends too. We didn’t really have anything else to do since we had just moved to the city for a little while and only knew each other. And so in some ways, yes, it was rigorous, but also I knew it was temporary. And again, it was so new to me. I’ve been playing music for over 10 years at that point in my life. And so there’s a lot of it that can get pretty repetitive. But with coding and discovery, and frankly, what I loved most about coding in a bootcamp was the camaraderie. Being a musician can actually be pretty lonely. You have to sit in your practice room by yourself and just run the same stuff over and over again, and then maybe occasionally you’ll play with people and that’s fun. But with coding, especially in the bootcamp capacity, we did a lot of pair programming and that was honestly my favorite. I got so excited just like talking things out and using my brain in collaboration with other people and then we would try something and it wouldn’t work or we’d try something and it would work, but then we’d have another bug instead that we had to fix. It felt like this journey that we were on together to discover together how we could make something better and that was just really exhilarating and exciting. Again, also you knew it was going to end. It wasn’t going to be forever that I was going to be in this room from 8 AM to 9 or 10 PM at night. And nobody forced us to stay there. We wanted to be there. So it felt different, honestly, to me. [00:10:37] SY: I’m very curious what it felt like to do something new because I think for a lot of folks, even though most of us have not been oboe players and didn’t study music and opera, I think that a lot of folks doing career changes can relate to this idea of essentially being really good at something, really being good at a first career, maybe even a second career, and then having to kind of start fresh, be a newbie, be a beginner all over again when they’re learning how to code. So considering that you were really good at music and had been doing it for so much of your childhood and so much of your early adulthood, what was it like to be new again? [00:11:16] TL: Yeah. I think that sometimes being new gets like a bad connotation or bad rap. It’s like, “Oh, she’s new.” And when I look back on it, my whole career in tech has been being thrown into new situations almost all the time. And I actually think being new can be a superpower of sorts. When you come in as like a staff engineer or something like that, there’s a lot of pressure. It’s like, “Well, you’ve earned this title and so we have expectations of you.” Whereas I actually find being new is more empowering in some ways because like no one has expectations. And so I encourage newbies, myself included, to be more curious and to be more open to finding the people who are willing to take you under their wing because they’re always there and who are willing to be the people that you can ask questions to no matter how silly or dumb you think the question might be. I actually find that to be a really wonderful place to be because there are people who have just wells of information, like so much experience, and they’re open and willing to share. You can tell who those people are. There are going to be some people who are really short with you and then they’re going to be some people who are like, “Oh, you didn’t know how this worked? Yeah. Let me tell you this. So this was the history of that and this is how it came to be here.” I find that those people can be your best allies. And when you are new, there’s a lot of power in being able to kind of be like, “I don’t know that yet, do you mind sharing with me or can I grab some time on your calendar? Can I buy you a coffee and learn more from you here about this?” I think saying you don’t know, but I want to know more or do you know where I could find more information is actually like one of the most powerful statements and questions you could ask as a new person. And I think being open to acknowledging that you don’t know everything and that you’re here to learn and that you’re willing to kind of be a sponge and have someone kind of share what they know with you, I credit that to being one of my secret powers, I guess, in my tech career or my kind of like tool that I use everywhere and anywhere I go. And I think the bootcamp is a big reason why I feel confident saying that because the bootcamp really showed me that I could learn anything if I really put my mind to it. Even something as new as coding that I’d never done before and computers and technology and all this stuff. The bootcamp really taught me like, “Oh, you know, I literally could learn anything. I just need to take time and ask good questions and find the people who are willing to help me.” And when I do that, I can soak it up. I can take it in. I can learn something new. And my whole career, I’ve bounced around a lot of different companies. I’ve done a ton of different industries within technology. Every time people have hired me when I had no idea, what ad tech was or I didn’t know anything about live video and video streaming and hardware encoders and all these different things and yet people hired me because I always said in my interviews, like, “Look, I might not know this thing about tech or about this particular part of the industry, but I guarantee you that I will learn it and I will take the time it takes to learn and I’m going to be open and curious like the whole time.” And I think I’ve experienced people really appreciating and valuing that more than if you have all the answers. [00:14:45] SY: Absolutely. Love that answer. Absolutely love that. I’m curious about your decision to do bootcamp at all. I feel like at that point, because I learned how to code through bootcamp around the same time, it’s like 2013, when I joined Flatiron School, and I’m curious about what went into your decision to pick a bootcamp as the way to break into the industry? Because you could have gone back to school, maybe gone back and got a CS degree, maybe tried the self-taught route, tried to get a master’s, although that’s a lot harder if you don’t have a technical background already. But what made you decide that a bootcamp was the right choice for you? [00:15:22] TL: It honestly seemed like the fastest way to get to a career in tech. I just finished my degree, and I hadn’t gotten a CS degree. And actually, a funny joke, or I don’t know, I think it’s funny. Maybe other people won’t find it funny, but I took a class at an intro to C class at UCLA and I failed. [00:15:43] SY: Oh, okay. [00:15:44] TL: So my one attempt at a computer science class didn’t go so well at UCLA. And this is no shade to people who are CS degrees. But I’ve heard from many people who have taken the time to get a computer science degree, it’s actually very different than learning how to code. You can learn a lot of theory. You can learn, again, a lot more math and very highly mathematical concepts. But the actual basics of learning how to code, learning how to debug something, learning how to go back to the tests and figure out what’s not working and what’s breaking, how to write a test in the first place, all of that sort of stuff, a coding bootcamp just seemed like the clearest way and the fastest way to learn and see and test if this was going to work for me, if I liked it or not. If I did, then just like try and see if I could get a job, see if someone would be willing to hire me. And at the time, most coding bootcamps were still pretty new back in 2013. And so a lot of people were taking interviews with me, mostly because they wanted to hear, like, “What is this thing that you did?” I remember I talked to somebody at Heroku, and he was just like, “I don’t know if you’re going to be a good fit for this role, but I really just want to hear, like, what is it that you did.” I was like, “All right, that’s fair.” But I think that was part of it. It is expensive, but getting a degree is even more expensive and takes even more time. And it’s also just, frankly, not necessary to be in the technology industry. You don’t need to have a CS degree to be here. A lot of people sometimes don’t even have college degrees and are doing just great being in technology. So I really do think there’s a lot of places for people to be in the tech space and there are so many different ways to get here, which I think is actually really cool and find it really empowering for folks. [00:17:28] SY: It is really empowering. Yeah, absolutely. So you did the bootcamp and your first job out of bootcamp was at Salesforce, which sounds really impressive. How did you end up there? [00:17:39] TL: Yeah. So I was in my final week at my bootcamp of a nine-week program and they basically were like, “You should start getting your LinkedIn ready for people to hopefully find you and recruit you for interviews and things like that.” So I just started putting my information on my LinkedIn. I just said what I had done, which at the time was only Dev Bootcamp. And I shared the projects that I participated in. I linked to the projects. I made sure that those projects were ones I was proud of so that people could check it out and see what the work that I had done in collaboration with other folks at the cohort. And basically just started kind of beefing up the LinkedIn as best as I could. There wasn’t a lot to work with at the time, but just kind of filling in the basics, my education and that “About Me” section and all of that good stuff and just like letting people kind of know who I was and what I was open to doing for work. And then, honestly, it came to me, a recruiter messaged me on LinkedIn and was just like, “Hey, I was looking at your LinkedIn and I have this opportunity and I’m kind of curious if you’d be interested.” And at the time, I was just like, “Wow, Salesforce recruiter? Sure! I’ll talk to you.” [00:18:48] SY: Pretty cool! Yeah. [00:18:50] TL: And he invited me to Dreamforce, which was their conference that was happening around the same time that I was about to graduate. So I went to Dreamforce with a few of my cohort friends, and then I took the interview, and we just kind of kept moving along from there, and I got hired, which was pretty cool. [00:19:07] SY: That’s very cool. What was the interview process like? [00:19:10] TL: I think it was speaking with a recruiter and then I talked to the hiring manager and then I came in for like an in-person interview and I met a bunch of people on the team. I did, I think, like a little technical exercise with one of the engineering managers and then I think that was it. The recruiter reached out to me again and then that was kind of it. [00:19:32] SY: That doesn’t sound too bad. [00:19:34] TL: Yeah. Some of them can be worse. [00:19:36] SY: Yeah. [00:19:37] TL: But this one wasn’t too bad. [00:19:38] SY: Okay. And then after Salesforce, I know you went to Twitter. What was your experience like at Twitter? How did you learn that one? [00:19:45] TL: Yeah. So far, basically every job I’ve ever gotten, I’ve gotten through LinkedIn. Don’t get me wrong, I’ve applied to jobs, I have received some interviews with some applications and crickets with others. But yeah, every job I’ve received has been through LinkedIn or through a recruiter reaching out to me there. So same with Twitter, a recruiter reached out to me from Twitter, interested in talking to me. I had been working at Salesforce almost a year at that point, and I actually wasn’t very happy at Salesforce. It wasn’t a great experience for me. I think it was just the team environment wasn’t really working because I know plenty of people who work there who are lovely. But yeah, so I was ready for a change anyways. And this particular opportunity was with this company that had been acquired by Twitter called MoPub. And they were an ad technology, basically, managing advertisements on Twitter, but also advertisements that were happening on like different apps, just regular mobile apps and stuff like that. I had never done ad tech. And this was like true mobile development, so iOS, Android, programming in Java and Objective C and all this stuff and I was like, “I’ve never done this before.” But they were looking for a solutions engineer and so I was like, “Sure.” So I started the interview process there as well and got hired and was like kind of thrown into this ad technology space that I’d never been in before. I was building Android network mediation test apps that were like shared with Google AdMob and InMobi and all these big ad publishers. And yeah, like just building a lot of SDKs, custom SDKs for customers and helping them kind of manage their inventory and their monetization strategies and all that kind of stuff. So very different than building demo applications on the Salesforce platform, which was working in Apex, which is a programming language that Salesforce created. So again, I went to this bootcamp at the time Ruby and Ruby on Rails and my first job out of bootcamp, I’m not doing a single Rails application and just building on this Apex platform with JavaScript and Visualforce and all this weird stuff and then my next job I’m learning Java and Objective C and Python. It’s just like, “Okay.” And then my next job after that, I wasn’t doing any of those either. [00:22:13] SY: Coming up next, Laura and I talk about how she’s continually set herself up for success, even in roles where the tech takes her outside her comfort zone after this.” [MUSIC BREAK] [00:22:29] SY: How did you manage, two things, one, getting a job where you don’t know the language and you don’t know the framework, which kind of leads me to asking, how do they decide that you’d be a good fit, like how do they know that you could do the job if you don’t know the stack that you’re about to work in? How do they figure that out? [00:22:46] LT: Well, I think in this case, I’m working on custom SDKs, right? So they’re their own kind of package. So it’s different than working on like a code base. And I think that’s an important distinction is that my career has mostly been in a partner engineer, support engineer, solutions engineer kind of capacity. I am not a full stack true software engineer. I’ve never been a true software engineer. So I really carved my path out by being kind of an engineer who can talk to people and specifically customers, partners, stakeholders, that’s really been my kind of bread and butter. And honestly, what I’m more passionate about, I’m an introvert, but I’m a social person, and I like to talk to people and collaborate. That was something that I loved about the bootcamp. And so getting to explain technical concepts to non-technical people is something that I love doing as well. And so these particular situations, I think, I was hired, it was like, well, I mean, the way I saw it was like, “Yeah, do I know the ins and outs and the intricacies of iOS development?” Absolutely not. If I really needed to build a true mobile iOS app, you would not hire me because I don’t know how to do that. But can I build like a custom SDK where there’s already kind of a scaffold and a template and I can kind of figure out the basics of iOS development? Yeah, sure. Is it just being used as a test for stuff? That’s fine. I’ve already learned all these other different languages, like what’s one more? At the end of the day, languages, it’s kind of like somebody who knows a bunch of real speaking languages. Like, “Oh, I speak Spanish and English and French and Italian.” It’s like, “How do you know all of these?” After a while, it’s like, well, it’s just language. Everybody’s got a verb. Everyone’s got a subject. You just have to figure out what the verbs and subjects are for these particular languages. But once you get the syntax right, the general gist of it, it’s not that funky, and sure there’s going to be some nuance to different languages. But in these situations, I didn’t need to know all of the nuances because I was kind of building rudimentary stuff that wasn’t to… nothing was in prod, let’s just say that much. Nothing was going to production and it was all just like for testing and debugging stuff so a lot of this isn’t working, so I need to figure out why it’s not working and help someone and explain what’s not working about it. A lot more support and solutions engineer kind of work, which is a different kind of technical job than like being a software engineer. [00:25:19] SY: Absolutely. Yep. Makes sense. So after Twitter, you then worked at Facebook. How did you land that one? [00:25:25] LT: Same process. I had a recruiter reach out on LinkedIn and I accepted the interview. This one’s actually kind of interesting because they hit me right off the bat with a technical interview. And at the time, I had been doing a lot less coding. I was doing a lot more partner work and like communicating with customers and things like that and kind of high level technical stuff. So I wasn’t working in code as much and I didn’t even know it was going to be a technical interview until about 30 minutes before the interview. The recruiter was like, “Hey, you’re going to meet with the hiring manager and he’s going to give you a technical interview.” And I just started kind of panicking. And I went for it and I tried, but I couldn’t even figure out what language, and I think this was one of the downfalls of having done so many different languages over the course of the last few years, was that I knew enough about all of them, but I didn’t I didn’t know that much about any of them, and I hadn’t really gotten to know one language really well. It had been years now since I had done any Ruby work. And so I felt kind of comfortable with Ruby, but then I hadn’t practiced it in like three years. And then nobody knows what Apex is, because that’s just in Salesforce. And then I certainly should not be doing any coding exercise in Android or iOS languages. I’m just not expert enough to do that. And so I was kind of like, “JavaScript? I don’t know. What should I take this test in?” And he was like, “You can do it in whatever language you want.” And I was like, “Great. I don’t really know which one I should do.” But the truth is, is I totally bombed that technical interview. And he was gracious, but we both knew this was not going well and I sent him an email afterwards, not immediately after because I needed to take a moment to kind of recoup, but I did send him an email after and I just said, “Hey, you know what? Thank you so much for the time. I am well aware that that was not my best showing and I wasn’t frankly prepared and I’m sorry and I want you to know that I really do value this opportunity. I’d love to be given another shot if you’re willing. I promise you I would come much more prepared. Again, just thank you for the time and I appreciated your willingness to meet with me.” I didn’t hear from him for like three months and I didn’t hear from anybody at Facebook for three months. So I just assumed that that just was not going to happen. And then suddenly, I heard from a recruiter and she was like, “Hey, we’d love to welcome you to the campus and do a three-hour interview down in Menlo Park.” And I was like, “Oh, okay.” Suddenly, I’m coming on site for a three-hour interview with like three or four different people. And so I obviously prepared for that one. They did tell me that I was going to have another technical interview. And so I was able to actually get prepared for that one. So I went to Menlo Park and met with people who were going to be on my team. I met the person who ended up becoming my manager and he was the one that ended up giving me the technical interview and we did actually more of like a white boarding kind of theoretical interview. Again, that’s kind of more my bread and butter of what I’d been doing in my career anyway. And so that was like a no brainer and was a good experience for me. And then they hired me and so I joined as a, technically I think I was a developer support engineer when I started. [00:28:41] SY: So what I’m picking up on is this theme of LinkedIn recruiters seem to just love you. People are just reaching out to you, offering interviews and that’s the dream. It’s so funny because for years I’ve seen so many very established, senior engineers complain about recruiters and complain about, “Oh, this random recruiter reached out to me for a language I don’t even know, for a stack that doesn’t even make sense,” and it can feel very spammy when you get to a certain level and you’re just so desirable. But when you’re early in your career and you’re in your first couple of jobs, I think it’s really flattering to be able to have people reach out to you. And that’s kind of the place that a lot of early career developers want to get to. We want to get to a place where we are sought after. So what is it do you think about your background, about your LinkedIn that made you so attractive to these recruiters? What was it that you think made a difference? [00:29:34] LT: I think actually, ironically, this is where my English major comes into play, because the biggest thing is, yes, we want to know your skills and we want to know your experience, but You really only have your words to be able to explain, and sure, you can show a website or you can show your projects or things like that. Those are all valuable and important. But I go on people’s LinkedIn sometimes and it’s just like nothing is there, no information, or it’s just your title and how many years you’ve worked there, and that’s it. There’s no information about you or the work you’ve done or any experience you’ve had. So when you show up in a LinkedIn recruiter’s search, they could click on you because, “Oh, it’s cool that you worked at this company.” But if there’s no information about what you’ve done there or who you are or anything like that, then I think you’re not very memorable. And I think something people maybe don’t realize or they don’t know this is LinkedIn is your resume, just on display for everybody to see. So you can work really hard on your resume and you can get it just right and it’s one page and it’s all fancy free and whatever. But it’s sitting there on your desktop. And then the next time you finally send it to somebody, they’ve got a hundred that all look the same. What I think is cool about LinkedIn and I don’t work for LinkedIn. I’m not paid by LinkedIn, but it is the one thing that has gotten me all of my jobs. So I’m grateful to it is that I actually kind of see it as like a college application that anybody can access and then figure out if they want to get to know you more, if they want to talk to you. And I think the key parts are, yes, it’s your experience. So if you only have one or two jobs or if maybe you’re just getting in your career, so you don’t really have a lot share yet about places you’ve worked at, sharing about your projects. So I’ve taken my projects that I worked on at the bootcamp off of my LinkedIn because that’s not really what’s most important about my work anymore. But when that was the only thing that I had done, that was like the first, I had like Dev Bootcamp. Here’s what I did while I was at Dev Bootcamp. And then here are the exact projects. There’s actually a section now in LinkedIn where you can put in like projects that you worked on and how long you worked on them and links to them. And then I think the key part is actually your About Section. So using your About Section to tell people more about who you are that isn’t just what you do and that’s where I kind of liken it to a college application. You’ve got your GPA and you’ve got all the classes you’ve taken, you’ve got all your grades. But at the end of the day, the essay is really how we get to know who Laura is and who is this person and do I like her as a person or is she kind of like somebody maybe I don’t really want to get to know more. And I like the About Section is an opportunity to give a quick summary, an elevator pitch, if you will, of who you are. What are your greatest strengths? So not necessarily just putting in a bunch of buzzwords, but what are some qualities about you that I think would make you really valuable as a teammate, make you someone I want to work with? All of those things I think are really valuable parts of kind of beefing up your LinkedIn in a way that helps people want to start a conversation with you and get to know you more. It’s just a way to kind of get the door open. It’s not necessarily going to get you the job, but it’ll at least get someone hopefully interested in talking to you, and I think that’s kind of the key. I always thought that, like, “Once someone just gets a chance to talk to me, I think that we could really hit it off.” But there’s so many people out there, so many people interested in tech, so many different kinds of engineers and experience levels. How do you make yourself stand out and how do you make yourself compelling to someone is I think identifying, why would I want to work with you? Well, sure, it’s great that you know Ruby, or you know Rails, or you know the full stack, and that’s important, but are you a team player? Are you someone who’s curious about things? Are you willing to help people who are younger in their journey? Or if you’re new in your journey, are you curious about learning? Are you willing to put in the time to learn whatever it is you don’t know? Stuff like that, I think, are what makes you a more compelling hire, and someone worth having a recruiter be like, “You know, I want to talk to you,” and just like kind of see if this might be a good fit. [00:33:56] SY: One of the things that’s been really fascinating for me to see over the last 10 years is the evolution of LinkedIn from an accessible resume placeholder to a full-blown social network. It’s been really fascinating to see the way people use it to start newsletters, to be content creators, to offer support, to talk about not just work, but oftentimes a lot about personal life. And there’s so much more to LinkedIn than I remember there being when it was first launched, I think it’s been like 20, 25 years or something, as a place to just put up your resume. So when you think about the way that you would recommend people use LinkedIn today compared to maybe where it started for you and I, 10 years ago, how do we leverage the other stuff that LinkedIn now offers? How do we leverage the networking, the connections, the content creation? What’s your advice to kind of taking advantage of these tools to make us stand out for recruiters? [00:34:54] LT: Yeah. I think at the end of the day, doing what feels most authentic to you is going to what’s actually be most powerful in terms of content. So there are some people who just love making tech content. They just love making videos. They do it on their own time. They’re really passionate about it. So if that’s you, share your YouTube videos on your LinkedIn. Especially if you’re new and trying to break into the industry, I think showing people how you learn and showing people what you’re learning is one of the most powerful tools you can do when you’re getting started and you don’t have a big resume behind you to kind of show your experience yet. So if you like to make videos and you want to show people what you’re learning about X, Y, Z thing, and it can be basic stuff, like how to, I don’t know, something like on GitHub or whatever, like educating people, showing people what you’re learning and being willing to teach other people. I think that’s great content to put on your LinkedIn. If you’re more of a wordsmith and maybe you like to blog and you want to blog about your learning experience, you could put that on a blog or you could put it on your LinkedIn and post something that you’re learning about there. I do think that familiarizing yourself with what LinkedIn has to offer because they do have a lot more like creator tools now than they’ve ever had before. You can create events. You can write articles. There’s so many different things you can do now on LinkedIn to express yourself. Finding what feels like an authentic expression I think is one of the most important ways you can leverage the platform. And if that doesn’t feel authentic to you, then at the very least, using your actual profile page to be a first impression of yourself for recruiters, I think, is the bare bones basic. If you want to find opportunities through LinkedIn is look at your About Section, figure out what you can say there that is different than what you say on your resume portion. Fill out that project part as clearly as you can while also letting people know what are you thinking about, how do you think, how do you solve problems, so people can kind of get to know you, frankly. I think that’s the bare minimum. And then expressing yourself authentically, people can always tell. I mean, you can see the posts on LinkedIn where you’re just like, “Ugh, that was a total sales pitch.” And then you see the ones where it’s just like, “Hey, I don’t know about you, but I forget how to solve X kind of errors. And here’s the way that I’m using this product, this tool to kind of help me figure that out. It’s like, “Oh, I struggle with solving these errors too. Maybe I’ll click on this video or read this article.” And that’s how you kind of get more people who are engaging with you in an authentic way. When you’re engaging there, then you show up more in searches and you can kind of see more about who you are. And I think that’s actually a really valuable thing to show people. [MUSIC BREAK] [00:37:53] SY: I’m curious, what are some obvious things that people get wrong? When you’re reviewing these profiles, what do you find yourself kind of repeating over and over again of things to avoid and things to fix? You mentioned a little bit earlier, using bullet points is a good idea instead of using long paragraphs. Are there other kind of low hanging fruit like that that we can watch out for? [00:38:15] LT: Yeah. The biggest one is honestly typos. Please proofread your work. And if you are not great at proofreading, please have somebody else proofread your work. I catch so many errors there. Maybe it’s the English major in me, I don’t know. I catch errors everywhere that I go. But yeah, typos are basic. What that tells me when you’ve got typos is you don’t pay attention to detail and that’s not going to work. That’s just the basics of like good communication skills. So checking that, first of all. Second of all, I’ve seen a lot of people write their about pages, it just does not look like you care at all. It would almost be better if you don’t have anything to say there to just take it away and not say anything at all than say something like, “I like to code and rock climb on the weekends.” Honestly, I’m sure you do, and maybe you’re a lovely person, but that doesn’t really tell me anything different. How are you any different than this other person who likes to code and rock climb on the weekends? Really leveraging the space to take the time and don’t write it maybe in LinkedIn and maybe take it on to like a Google Doc or Word Doc or notes app on your phone or whatever, but actually work on that portion of your paragraph about you or whatever to really like say maybe four to five sentences, doesn’t have to be crazy because that’s the other thing. Sometimes you see people who just like write super verbose language and it’s like, “Okay, now I’m just kind of tired.” We’re on the third paragraph of this thing that you’ve accomplished, that’s not it either, like four to five sentences, but make them powerful, punchy sentences, like realizing that you’re About Section, yes, it tells people about you, but just like when you’re working with customers or partners or you’re thinking about your audience for your applications, your users, how is this going to help them? How is it that something you have or something you can do is going to solve a problem for somebody else? So for me, I say, one of my greatest strengths is identifying and optimizing systems. That’s something that I know that I do really well. Well, that’s great because say you’re a hiring manager and you need someone who’s going to kind of help bring order and organization to your system, whatever that system may be, “Oh, that sounds like a solution. I want to talk more to this person.” Or again, being a quick learner, enthusiastic teammate, all of these things I think are kind of buzzwords, but they’re authentic for me and what I feel like I can contribute to a team. So finding ways to contribute to somebody else’s problem, how is it that the skills that you have or the things that you know or the way that you work with people, how is that going to improve that hiring manager’s situation or their experience or your future team’s experience? And then yeah, with the jobs and things like that, I find it valuable to use bullet points and kind of almost like a peer review or kind of like a review of your work that you would do for quarterly reviews or half reviews, yearly reviews, whatever, just kind of giving me the bullet points and leading with the most important ones first. So leading with if you’ve contributed money to the pipeline based on your coding work like sharing that first or something to that effect where you can kind of ideally, use numbers, if possible, and percentages and things like that to help people understand the scope or how you have impacted your team or how you’ve impacted the company, but really thinking about your impact and how is it that you can communicate to somebody your experience, but also how you’re going to help them ultimately. [00:41:59] SY: Absolutely. So if there’s one piece of advice you have for people in terms of making their LinkedIn more attractive to recruiters or just being recruiter ready and they’re early in their careers, so they may not have a great resume, they may not have the ton of experience that you have at this point, what’s one thing you think everyone should do to really maximize their chances of getting hired? [00:42:23] LT: Just put information on your LinkedIn that lets people know who you are. And maybe think outside the box if you don’t have a resume to show for it just yet. Start getting creative about what you could show people. Show people the project you worked on in your bootcamp, where you’d like to take that project, even if you don’t take it that far. Let people know who you are, how you think, how you problem solve, and then communicate that, either in words or on a website, on your LinkedIn. That’s it. [00:42:54] SY: Wonderful. Now at the end of every episode, we ask our guests to fill in the blanks of some very important questions. Laura, are you ready to fill in the blanks? [00:43:07] LT: Yes. [00:43:08] SY: Number one, worst advice I’ve ever received is? [00:43:12] LT: Never let the sun go down on your anger. [00:43:14] SY: Oh, interesting. That’s the worst advice. Tell me more about that. [00:43:19] LT: I think that is horrible advice that’s usually given to married couples or people who are engaged and about to be married. Gosh, trying to figure out a fight at 11 o’clock at night, nobody is in their best mind. You’re tired. Nothing’s making sense. You’re just going in circles. I found the most freeing was to have someone, literally, I think it was my therapist, who was just like, “You know what? Just let the sun go down on your anger and go to bed. Go to bed and try again in the morning.” [00:43:47] SY: Yeah. Yeah. [00:43:48] LT: And that has honestly been the most valuable. Suddenly you wake up and you’re like, “Wow, I had a nice rest. Is it actually that big of a deal?” Generally, it’s not. [00:43:57] SY: Nice. Very cool. All right. Number two, best advice I’ve ever received is? [00:44:02] LT: Ninety-five percent of what people say to you is actually about them. [00:44:06] SY: Oh, tell me more. [00:44:08] LT: People will, I mean, ironically advice. Someone will say, “Oh, you should never do X, Y, Z thing.” That’s because they did X, Y, Z thing and they maybe have regrets about it. Or, “Oh, I loved doing this thing and this is why you should do it exactly the way I did it.” Yeah. My husband actually heard that from someone and told me that, and it is so true and especially when someone says something that might upset you or offend you or something, I’ve found that oftentimes it actually has almost everything to do with them and what’s going on for them and has very little to do with me and what’s going on for me. [00:44:45] SY: Very good. I like that one. Number three, my first coding project was about? [00:44:49] LT: We did a Star Wars typewriter project at my Dev Bootcamp. I think that was the first one we did. I can’t remember. But yeah, it was really fun. Honestly, there’s one guy there who’s like a CSS wizard. He found a way to like get the words to float back, like the yellow words to float back just like in the Star Wars movies. [00:45:10] SY: Oh, cool. [00:45:11] LT: And you had to try to type the words out as fast as you could otherwise, you would lose or whatever or you’d win if you did it. And so yeah, so that was like a really fun project that we did. [00:45:23] SY: That’s really cool. Neat. Number four, one thing I wish I knew when I first started to code is? [00:45:28] LT: I wish I knew that there are so many resources out there to help me when I’m stuck, like even more content than I think it was even possible. But Google is your best friend when you first start to code. Because when you don’t know the answers, or you got an error message you don’t understand, I literally popped those error messages right into Google. I guess now you could pop them into ChatGPT if you wanted to, but I just love Stack Overflow, and there’s YouTube, and there’s all these different blog posts and articles and things people have written. There’s so much content out there to kind of help you figure out how to get unstuck. So I think one thing I wish I knew was that you could just put your error messages and your questions straight into Google and generally find an answer pretty quickly. [00:46:15] SY: Absolutely. Wonderful. Well, thank you so much, Laura, for joining us today. [00:46:19] LT: Yeah. Thank you for having me. [00:46:27] SY: Want to be in the CodeNewbie Podcast? Know someone who I should interview next? Reach out on Twitter at Code Newbies or send me an email, hello@codenewbie.org. For more info on the podcast, check out www.codenewbie.org/podcast. And if you like the show, make sure to follow us and leave a review on your preferred platform so we can keep making the pod. Thanks for listening. See you next week. [END]",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n              \u003cp\u003e[00:00:05] SY: Welcome to the CodeNewbie Podcast where we talk to people on their coding journey in hopes of helping you on yours. I’m your host, Saron, and today we’re talking about the ins and outs of LinkedIn with Laura Thorson, Program Manager at GitHub.\u003c/p\u003e\u003cp\u003e [00:00:19] LT: LinkedIn is your resume, just on display for everybody to see. So you can work really hard on your resume, and you can get it just right, and it’s one page, and it’s all fancy free and whatever, but it’s sitting there on your desktop, right? And then the next time you finally send it to somebody, they’ve got a hundred that all look the same.\u003c/p\u003e\u003cp\u003e [00:00:36] SY: Laura talks about how she made the switch from music and English to software and coding. I also discuss with Laura why she credits so much of her technical career to the initial bootcamp she signed up for after this.\u003c/p\u003e\u003cp\u003e [MUSIC BREAK]\u003c/p\u003e\u003cp\u003e [00:00:54] SY: Thank you so much for being here.\u003c/p\u003e\u003cp\u003e [00:00:55] LT: Thank you for having me.\u003c/p\u003e\u003cp\u003e [00:00:56] SY: So tell me, what was it like for you growing up? Were you big into computers as a kid?\u003c/p\u003e\u003cp\u003e [00:01:00] LT: Actually, not at all.\u003c/p\u003e\u003cp\u003e [00:01:02] SY: All right!\u003c/p\u003e\u003cp\u003e [00:01:03] LT: Yeah. I mean, I’m a kid of the ’90s, the early ’90s, so computers, we didn’t even have one for a long time, but I was always really into singing and dancing around the living room to all of the Disney princess songs that would come out every single year.\u003c/p\u003e\u003cp\u003e [00:01:20] SY: Nice.\u003c/p\u003e\u003cp\u003e [00:01:21] LT: Yeah, and being outside. And so, yeah, I actually was not super familiar with computers or coding or anything like that for a very long time, I would say. I don’t know if anybody’s like that anymore.\u003c/p\u003e\u003cp\u003e [00:01:32] SY: Yeah. No, I’m with you completely. When I was a kid, I was also into singing and dancing and being on stage and all that stuff.\u003c/p\u003e\u003cp\u003e [00:01:39] LT: Same.\u003c/p\u003e\u003cp\u003e [00:01:39] SY: I didn’t know much about tech and also grew up in the ’90s. So I completely understand. So I know that you went to UCLA and you majored in English Lit, which I also relate to because I was an English and psychology major at Maryland, and it was very confusing to my immigrant parents why I would major in English. But I’m curious, what was your thinking behind majoring in English literature? What were you hoping to do with that?\u003c/p\u003e\u003cp\u003e [00:02:01] LT: Well, what’s really funny is I went to UCLA as an oboe performance major, so I took the singing and dancing all the way to the end.\u003c/p\u003e\u003cp\u003e [00:02:09] SY: All of the way. Love it.\u003c/p\u003e\u003cp\u003e [00:02:10] LT: Yeah. So I actually was a double major for a little while. I got a full ride scholarship to UCLA to play the oboe, and then I was an opera major as well. So I did a little bit of singing and playing instruments and playing in orchestras and all of that. I did that for a few years, I tried psychology actually for a little bit, I still am passionate about psychology in general, but English kind of just, I mean, I’ve always been an avid reader and love language and books and just comprehension of language and all that kind of stuff. So English just kind of became a good place to finally settle down because I was like three years into my degree and I needed to graduate at some point. So I honestly didn’t really know what I was going to do with my English degree. I was in my senior year of college, and it’s finally, you should really start thinking about what you want to do afterwards at that point. And my mom found a magazine article in Time Magazine about Dev Bootcamp and this coding bootcamp phenomenon. It was kind of the first of its kind at the time and she sent it to me and was like, “I don’t know. I really think this could be something of interest to you. I don’t know. Maybe check it out.” And so I looked into it and I kind of gathered from the article. Again, I still have not yet had experience with computers at this, I mean, with tech and coding at this point, aside from just like using computers to type up papers. But it kind of seemed to me like another language, like coding could be just like learning a different language versus… I used to always think of coding as being really mathematical or like I need to really know my math in order to do this and I’m not a huge fan of math personally. I’m obviously a lot more interested in understanding the nuances of language and with all the different syntax and how things work and how you could write stuff together that really spoke and to the computer in a way, I found that really fascinating. So I applied to the bootcamp and got in and that was, at the time, my big post-grad plan was just that I was going to go to this bootcamp in San Francisco and kind of figure it out from there.\u003c/p\u003e\u003cp\u003e [00:04:17] SY: What made you decide to kind of switch direction? Because you had this oboe scholarship, you were doing opera, you were doing English, and going into tech feels like quite a big difference, quite a big jump from what you were initially set out to do. So what made you decide to make the switch?\u003c/p\u003e\u003cp\u003e [00:04:35] LT: I think at the time, I didn’t really have a plan, so there wasn’t really anything set in stone yet. I mean, with music, I loved music. My experience at UCLA as a music major, I was the only person that was accepted my graduating class as an oboe performance major in the entire university.\u003c/p\u003e\u003cp\u003e [00:04:53] SY: Wow!\u003c/p\u003e\u003cp\u003e [00:04:54] LT: So there was just a lot of pressure. And as such, you’re playing in all these different orchestras. Every band that needs an oboist, you have to be there and you have to do all these rehearsals and then practices and never mind that you’re taking lessons and making your own reeds and all of these different things. And I was young, obviously. I was only 17, 18. I wanted to go to college to go to football games.\u003c/p\u003e\u003cp\u003e [00:05:21] SY: Have a life.\u003c/p\u003e\u003cp\u003e [00:05:23] LT: Yeah, and I wanted to be in an a cappella group and being an opera singer they said, “No, you can’t be in a cappella group because that’ll change your voice and how you perform.” And so it felt very restrictive. I kind of felt like I was already doing a job and I was only 17 or 18. And I was like, “Well, I’ve got the rest of my life to like do a job.” So it’s a great and rigorous program and that really works for some people. But I had kind of different ambitions about what I was hoping to experience in my college life. So that’s part of why I walked away from doing that. I actually also kind of was concerned because back then, this is like 2010’s time frame, but I remember reading an article in the New York Times that orchestras were kind of in danger because recordings were getting so good and actually AI was getting better. And this is back then, of course, now the conversation’s even more important around AI, but that AI was basically going to replace orchestras because while orchestras are made up of humans who make mistakes, computers don’t ever make a mistake. You could have the computer do it as many times as you wanted to and they would never get tired and they would never complain or have a union that will revolt or any of these different things. And so I kind of got worried, honestly, that I was going to be working so hard to be the best oboist I could be, and then I would just get replaced by a computer.\u003c/p\u003e\u003cp\u003e [00:06:48] SY: Yeah. That’s a real concern.\u003c/p\u003e\u003cp\u003e [00:06:48] TL: So I kind of just decided to switch to something else instead.\u003c/p\u003e\u003cp\u003e [00:06:52] SY: Got you. So at what point in your college career did you decide, “You know what, this is a little too much. This is too much pressure. This isn’t necessarily the life that I want. Let me move into something else”? Did that happen in your senior year or did it start happening before that?\u003c/p\u003e\u003cp\u003e [00:07:07] TL: Yeah, it was mostly like sophomore year, I’d say.\u003c/p\u003e\u003cp\u003e [00:07:10] SY: Okay.\u003c/p\u003e\u003cp\u003e [00:07:11] TL: I was already pretty burnt out from music and just kind of deciding that this wasn’t really feeling like the right fit. And I didn’t know how to say that it wasn’t the right fit at the time. And I kind of just started not applying myself the way that I could have applied myself. And my oboe teacher finally just sent me an email, and I actually still have the email. Sometimes I go back and look at it again because he basically called it out. He was just like, “Look, if you don’t really want to be here, that’s fine, but then let’s just stop wasting each other’s time. Let’s go maybe figure out what will be a better fit for you.” And he was right. It was hard and I have regrets about how I handled it. I also have compassion for the fact that I was I was young and I had no idea how to set boundaries. I had no idea how to communicate that something wasn’t working for me. So I wish I could go back to college and do it again as a 30 something because I think I would do a much better job.\u003c/p\u003e\u003cp\u003e [00:08:11] SY: Yeah, me too, girl. Me too.\u003c/p\u003e\u003cp\u003e [00:08:13] TL: But it is what it was. It was a good learning experience and it made a big impact on me and I’m grateful in the long run because I’m definitely doing something now that I think is a much better fit for me.\u003c/p\u003e\u003cp\u003e [00:08:24] SY: Right. Right. Okay. Makes sense. So you heard about Dev Bootcamp, you applied, got accepted, you joined. I’m curious about how the rigor of a bootcamp, which is no joke either, right?\u003c/p\u003e\u003cp\u003e [00:08:37] TL: Right.\u003c/p\u003e\u003cp\u003e [00:08:37] SY: I remember when I did it, it was just a constant fire hose of information over a very short amount of time. How did it compare to your training and the rigor of being a musician and a music student at UCLA?\u003c/p\u003e\u003cp\u003e [00:08:53] TL: I think it was just so exciting and new at the time that, you’re right, it’s definitely a fire hose. You’re basically working day and night all day. I’d go in on the weekend, everyone in my cohort, we’d all go in on the weekends too. We didn’t really have anything else to do since we had just moved to the city for a little while and only knew each other. And so in some ways, yes, it was rigorous, but also I knew it was temporary. And again, it was so new to me. I’ve been playing music for over 10 years at that point in my life. And so there’s a lot of it that can get pretty repetitive. But with coding and discovery, and frankly, what I loved most about coding in a bootcamp was the camaraderie. Being a musician can actually be pretty lonely. You have to sit in your practice room by yourself and just run the same stuff over and over again, and then maybe occasionally you’ll play with people and that’s fun. But with coding, especially in the bootcamp capacity, we did a lot of pair programming and that was honestly my favorite. I got so excited just like talking things out and using my brain in collaboration with other people and then we would try something and it wouldn’t work or we’d try something and it would work, but then we’d have another bug instead that we had to fix. It felt like this journey that we were on together to discover together how we could make something better and that was just really exhilarating and exciting. Again, also you knew it was going to end. It wasn’t going to be forever that I was going to be in this room from 8 AM to 9 or 10 PM at night. And nobody forced us to stay there. We wanted to be there. So it felt different, honestly, to me.\u003c/p\u003e\u003cp\u003e [00:10:37] SY: I’m very curious what it felt like to do something new because I think for a lot of folks, even though most of us have not been oboe players and didn’t study music and opera, I think that a lot of folks doing career changes can relate to this idea of essentially being really good at something, really being good at a first career, maybe even a second career, and then having to kind of start fresh, be a newbie, be a beginner all over again when they’re learning how to code. So considering that you were really good at music and had been doing it for so much of your childhood and so much of your early adulthood, what was it like to be new again?\u003c/p\u003e\u003cp\u003e [00:11:16] TL: Yeah. I think that sometimes being new gets like a bad connotation or bad rap. It’s like, “Oh, she’s new.” And when I look back on it, my whole career in tech has been being thrown into new situations almost all the time. And I actually think being new can be a superpower of sorts. When you come in as like a staff engineer or something like that, there’s a lot of pressure. It’s like, “Well, you’ve earned this title and so we have expectations of you.” Whereas I actually find being new is more empowering in some ways because like no one has expectations. And so I encourage newbies, myself included, to be more curious and to be more open to finding the people who are willing to take you under their wing because they’re always there and who are willing to be the people that you can ask questions to no matter how silly or dumb you think the question might be. I actually find that to be a really wonderful place to be because there are people who have just wells of information, like so much experience, and they’re open and willing to share. You can tell who those people are. There are going to be some people who are really short with you and then they’re going to be some people who are like, “Oh, you didn’t know how this worked? Yeah. Let me tell you this. So this was the history of that and this is how it came to be here.” I find that those people can be your best allies. And when you are new, there’s a lot of power in being able to kind of be like, “I don’t know that yet, do you mind sharing with me or can I grab some time on your calendar? Can I buy you a coffee and learn more from you here about this?” I think saying you don’t know, but I want to know more or do you know where I could find more information is actually like one of the most powerful statements and questions you could ask as a new person. And I think being open to acknowledging that you don’t know everything and that you’re here to learn and that you’re willing to kind of be a sponge and have someone kind of share what they know with you, I credit that to being one of my secret powers, I guess, in my tech career or my kind of like tool that I use everywhere and anywhere I go. And I think the bootcamp is a big reason why I feel confident saying that because the bootcamp really showed me that I could learn anything if I really put my mind to it. Even something as new as coding that I’d never done before and computers and technology and all this stuff. The bootcamp really taught me like, “Oh, you know, I literally could learn anything. I just need to take time and ask good questions and find the people who are willing to help me.” And when I do that, I can soak it up. I can take it in. I can learn something new. And my whole career, I’ve bounced around a lot of different companies. I’ve done a ton of different industries within technology. Every time people have hired me when I had no idea, what ad tech was or I didn’t know anything about live video and video streaming and hardware encoders and all these different things and yet people hired me because I always said in my interviews, like, “Look, I might not know this thing about tech or about this particular part of the industry, but I guarantee you that I will learn it and I will take the time it takes to learn and I’m going to be open and curious like the whole time.” And I think I’ve experienced people really appreciating and valuing that more than if you have all the answers.\u003c/p\u003e\u003cp\u003e [00:14:45] SY: Absolutely. Love that answer. Absolutely love that. I’m curious about your decision to do bootcamp at all. I feel like at that point, because I learned how to code through bootcamp around the same time, it’s like 2013, when I joined Flatiron School, and I’m curious about what went into your decision to pick a bootcamp as the way to break into the industry? Because you could have gone back to school, maybe gone back and got a CS degree, maybe tried the self-taught route, tried to get a master’s, although that’s a lot harder if you don’t have a technical background already. But what made you decide that a bootcamp was the right choice for you?\u003c/p\u003e\u003cp\u003e [00:15:22] TL: It honestly seemed like the fastest way to get to a career in tech. I just finished my degree, and I hadn’t gotten a CS degree. And actually, a funny joke, or I don’t know, I think it’s funny. Maybe other people won’t find it funny, but I took a class at an intro to C class at UCLA and I failed.\u003c/p\u003e\u003cp\u003e [00:15:43] SY: Oh, okay.\u003c/p\u003e\u003cp\u003e [00:15:44] TL: So my one attempt at a computer science class didn’t go so well at UCLA. And this is no shade to people who are CS degrees. But I’ve heard from many people who have taken the time to get a computer science degree, it’s actually very different than learning how to code. You can learn a lot of theory. You can learn, again, a lot more math and very highly mathematical concepts. But the actual basics of learning how to code, learning how to debug something, learning how to go back to the tests and figure out what’s not working and what’s breaking, how to write a test in the first place, all of that sort of stuff, a coding bootcamp just seemed like the clearest way and the fastest way to learn and see and test if this was going to work for me, if I liked it or not. If I did, then just like try and see if I could get a job, see if someone would be willing to hire me. And at the time, most coding bootcamps were still pretty new back in 2013. And so a lot of people were taking interviews with me, mostly because they wanted to hear, like, “What is this thing that you did?” I remember I talked to somebody at Heroku, and he was just like, “I don’t know if you’re going to be a good fit for this role, but I really just want to hear, like, what is it that you did.” I was like, “All right, that’s fair.” But I think that was part of it. It is expensive, but getting a degree is even more expensive and takes even more time. And it’s also just, frankly, not necessary to be in the technology industry. You don’t need to have a CS degree to be here. A lot of people sometimes don’t even have college degrees and are doing just great being in technology. So I really do think there’s a lot of places for people to be in the tech space and there are so many different ways to get here, which I think is actually really cool and find it really empowering for folks.\u003c/p\u003e\u003cp\u003e [00:17:28] SY: It is really empowering. Yeah, absolutely. So you did the bootcamp and your first job out of bootcamp was at Salesforce, which sounds really impressive. How did you end up there?\u003c/p\u003e\u003cp\u003e [00:17:39] TL: Yeah. So I was in my final week at my bootcamp of a nine-week program and they basically were like, “You should start getting your LinkedIn ready for people to hopefully find you and recruit you for interviews and things like that.” So I just started putting my information on my LinkedIn. I just said what I had done, which at the time was only Dev Bootcamp. And I shared the projects that I participated in. I linked to the projects. I made sure that those projects were ones I was proud of so that people could check it out and see what the work that I had done in collaboration with other folks at the cohort. And basically just started kind of beefing up the LinkedIn as best as I could. There wasn’t a lot to work with at the time, but just kind of filling in the basics, my education and that “About Me” section and all of that good stuff and just like letting people kind of know who I was and what I was open to doing for work. And then, honestly, it came to me, a recruiter messaged me on LinkedIn and was just like, “Hey, I was looking at your LinkedIn and I have this opportunity and I’m kind of curious if you’d be interested.” And at the time, I was just like, “Wow, Salesforce recruiter? Sure! I’ll talk to you.” [00:18:48] SY: Pretty cool! Yeah.\u003c/p\u003e\u003cp\u003e [00:18:50] TL: And he invited me to Dreamforce, which was their conference that was happening around the same time that I was about to graduate. So I went to Dreamforce with a few of my cohort friends, and then I took the interview, and we just kind of kept moving along from there, and I got hired, which was pretty cool.\u003c/p\u003e\u003cp\u003e [00:19:07] SY: That’s very cool. What was the interview process like?\u003c/p\u003e\u003cp\u003e [00:19:10] TL: I think it was speaking with a recruiter and then I talked to the hiring manager and then I came in for like an in-person interview and I met a bunch of people on the team. I did, I think, like a little technical exercise with one of the engineering managers and then I think that was it. The recruiter reached out to me again and then that was kind of it.\u003c/p\u003e\u003cp\u003e [00:19:32] SY: That doesn’t sound too bad.\u003c/p\u003e\u003cp\u003e [00:19:34] TL: Yeah. Some of them can be worse.\u003c/p\u003e\u003cp\u003e [00:19:36] SY: Yeah.\u003c/p\u003e\u003cp\u003e [00:19:37] TL: But this one wasn’t too bad.\u003c/p\u003e\u003cp\u003e [00:19:38] SY: Okay. And then after Salesforce, I know you went to Twitter. What was your experience like at Twitter? How did you learn that one?\u003c/p\u003e\u003cp\u003e [00:19:45] TL: Yeah. So far, basically every job I’ve ever gotten, I’ve gotten through LinkedIn. Don’t get me wrong, I’ve applied to jobs, I have received some interviews with some applications and crickets with others. But yeah, every job I’ve received has been through LinkedIn or through a recruiter reaching out to me there. So same with Twitter, a recruiter reached out to me from Twitter, interested in talking to me. I had been working at Salesforce almost a year at that point, and I actually wasn’t very happy at Salesforce. It wasn’t a great experience for me. I think it was just the team environment wasn’t really working because I know plenty of people who work there who are lovely. But yeah, so I was ready for a change anyways. And this particular opportunity was with this company that had been acquired by Twitter called MoPub. And they were an ad technology, basically, managing advertisements on Twitter, but also advertisements that were happening on like different apps, just regular mobile apps and stuff like that. I had never done ad tech. And this was like true mobile development, so iOS, Android, programming in Java and Objective C and all this stuff and I was like, “I’ve never done this before.” But they were looking for a solutions engineer and so I was like, “Sure.” So I started the interview process there as well and got hired and was like kind of thrown into this ad technology space that I’d never been in before. I was building Android network mediation test apps that were like shared with Google AdMob and InMobi and all these big ad publishers. And yeah, like just building a lot of SDKs, custom SDKs for customers and helping them kind of manage their inventory and their monetization strategies and all that kind of stuff. So very different than building demo applications on the Salesforce platform, which was working in Apex, which is a programming language that Salesforce created. So again, I went to this bootcamp at the time Ruby and Ruby on Rails and my first job out of bootcamp, I’m not doing a single Rails application and just building on this Apex platform with JavaScript and Visualforce and all this weird stuff and then my next job I’m learning Java and Objective C and Python. It’s just like, “Okay.” And then my next job after that, I wasn’t doing any of those either.\u003c/p\u003e\u003cp\u003e [00:22:13] SY: Coming up next, Laura and I talk about how she’s continually set herself up for success, even in roles where the tech takes her outside her comfort zone after this.”\u003c/p\u003e\u003cp\u003e [MUSIC BREAK]\u003c/p\u003e\u003cp\u003e [00:22:29] SY: How did you manage, two things, one, getting a job where you don’t know the language and you don’t know the framework, which kind of leads me to asking, how do they decide that you’d be a good fit, like how do they know that you could do the job if you don’t know the stack that you’re about to work in? How do they figure that out?\u003c/p\u003e\u003cp\u003e [00:22:46] LT: Well, I think in this case, I’m working on custom SDKs, right? So they’re their own kind of package. So it’s different than working on like a code base. And I think that’s an important distinction is that my career has mostly been in a partner engineer, support engineer, solutions engineer kind of capacity. I am not a full stack true software engineer. I’ve never been a true software engineer. So I really carved my path out by being kind of an engineer who can talk to people and specifically customers, partners, stakeholders, that’s really been my kind of bread and butter. And honestly, what I’m more passionate about, I’m an introvert, but I’m a social person, and I like to talk to people and collaborate. That was something that I loved about the bootcamp. And so getting to explain technical concepts to non-technical people is something that I love doing as well. And so these particular situations, I think, I was hired, it was like, well, I mean, the way I saw it was like, “Yeah, do I know the ins and outs and the intricacies of iOS development?” Absolutely not. If I really needed to build a true mobile iOS app, you would not hire me because I don’t know how to do that. But can I build like a custom SDK where there’s already kind of a scaffold and a template and I can kind of figure out the basics of iOS development? Yeah, sure. Is it just being used as a test for stuff? That’s fine. I’ve already learned all these other different languages, like what’s one more? At the end of the day, languages, it’s kind of like somebody who knows a bunch of real speaking languages. Like, “Oh, I speak Spanish and English and French and Italian.” It’s like, “How do you know all of these?” After a while, it’s like, well, it’s just language. Everybody’s got a verb. Everyone’s got a subject. You just have to figure out what the verbs and subjects are for these particular languages. But once you get the syntax right, the general gist of it, it’s not that funky, and sure there’s going to be some nuance to different languages. But in these situations, I didn’t need to know all of the nuances because I was kind of building rudimentary stuff that wasn’t to… nothing was in prod, let’s just say that much. Nothing was going to production and it was all just like for testing and debugging stuff so a lot of this isn’t working, so I need to figure out why it’s not working and help someone and explain what’s not working about it. A lot more support and solutions engineer kind of work, which is a different kind of technical job than like being a software engineer.\u003c/p\u003e\u003cp\u003e [00:25:19] SY: Absolutely. Yep. Makes sense. So after Twitter, you then worked at Facebook. How did you land that one?\u003c/p\u003e\u003cp\u003e [00:25:25] LT: Same process. I had a recruiter reach out on LinkedIn and I accepted the interview. This one’s actually kind of interesting because they hit me right off the bat with a technical interview. And at the time, I had been doing a lot less coding. I was doing a lot more partner work and like communicating with customers and things like that and kind of high level technical stuff. So I wasn’t working in code as much and I didn’t even know it was going to be a technical interview until about 30 minutes before the interview. The recruiter was like, “Hey, you’re going to meet with the hiring manager and he’s going to give you a technical interview.” And I just started kind of panicking. And I went for it and I tried, but I couldn’t even figure out what language, and I think this was one of the downfalls of having done so many different languages over the course of the last few years, was that I knew enough about all of them, but I didn’t I didn’t know that much about any of them, and I hadn’t really gotten to know one language really well. It had been years now since I had done any Ruby work. And so I felt kind of comfortable with Ruby, but then I hadn’t practiced it in like three years. And then nobody knows what Apex is, because that’s just in Salesforce. And then I certainly should not be doing any coding exercise in Android or iOS languages. I’m just not expert enough to do that. And so I was kind of like, “JavaScript? I don’t know. What should I take this test in?” And he was like, “You can do it in whatever language you want.” And I was like, “Great. I don’t really know which one I should do.” But the truth is, is I totally bombed that technical interview. And he was gracious, but we both knew this was not going well and I sent him an email afterwards, not immediately after because I needed to take a moment to kind of recoup, but I did send him an email after and I just said, “Hey, you know what? Thank you so much for the time. I am well aware that that was not my best showing and I wasn’t frankly prepared and I’m sorry and I want you to know that I really do value this opportunity. I’d love to be given another shot if you’re willing. I promise you I would come much more prepared. Again, just thank you for the time and I appreciated your willingness to meet with me.” I didn’t hear from him for like three months and I didn’t hear from anybody at Facebook for three months. So I just assumed that that just was not going to happen. And then suddenly, I heard from a recruiter and she was like, “Hey, we’d love to welcome you to the campus and do a three-hour interview down in Menlo Park.” And I was like, “Oh, okay.” Suddenly, I’m coming on site for a three-hour interview with like three or four different people. And so I obviously prepared for that one. They did tell me that I was going to have another technical interview. And so I was able to actually get prepared for that one. So I went to Menlo Park and met with people who were going to be on my team. I met the person who ended up becoming my manager and he was the one that ended up giving me the technical interview and we did actually more of like a white boarding kind of theoretical interview. Again, that’s kind of more my bread and butter of what I’d been doing in my career anyway. And so that was like a no brainer and was a good experience for me. And then they hired me and so I joined as a, technically I think I was a developer support engineer when I started.\u003c/p\u003e\u003cp\u003e [00:28:41] SY: So what I’m picking up on is this theme of LinkedIn recruiters seem to just love you. People are just reaching out to you, offering interviews and that’s the dream. It’s so funny because for years I’ve seen so many very established, senior engineers complain about recruiters and complain about, “Oh, this random recruiter reached out to me for a language I don’t even know, for a stack that doesn’t even make sense,” and it can feel very spammy when you get to a certain level and you’re just so desirable. But when you’re early in your career and you’re in your first couple of jobs, I think it’s really flattering to be able to have people reach out to you. And that’s kind of the place that a lot of early career developers want to get to. We want to get to a place where we are sought after. So what is it do you think about your background, about your LinkedIn that made you so attractive to these recruiters? What was it that you think made a difference?\u003c/p\u003e\u003cp\u003e [00:29:34] LT: I think actually, ironically, this is where my English major comes into play, because the biggest thing is, yes, we want to know your skills and we want to know your experience, but You really only have your words to be able to explain, and sure, you can show a website or you can show your projects or things like that. Those are all valuable and important. But I go on people’s LinkedIn sometimes and it’s just like nothing is there, no information, or it’s just your title and how many years you’ve worked there, and that’s it. There’s no information about you or the work you’ve done or any experience you’ve had. So when you show up in a LinkedIn recruiter’s search, they could click on you because, “Oh, it’s cool that you worked at this company.” But if there’s no information about what you’ve done there or who you are or anything like that, then I think you’re not very memorable. And I think something people maybe don’t realize or they don’t know this is LinkedIn is your resume, just on display for everybody to see. So you can work really hard on your resume and you can get it just right and it’s one page and it’s all fancy free and whatever. But it’s sitting there on your desktop. And then the next time you finally send it to somebody, they’ve got a hundred that all look the same. What I think is cool about LinkedIn and I don’t work for LinkedIn. I’m not paid by LinkedIn, but it is the one thing that has gotten me all of my jobs. So I’m grateful to it is that I actually kind of see it as like a college application that anybody can access and then figure out if they want to get to know you more, if they want to talk to you. And I think the key parts are, yes, it’s your experience. So if you only have one or two jobs or if maybe you’re just getting in your career, so you don’t really have a lot share yet about places you’ve worked at, sharing about your projects. So I’ve taken my projects that I worked on at the bootcamp off of my LinkedIn because that’s not really what’s most important about my work anymore. But when that was the only thing that I had done, that was like the first, I had like Dev Bootcamp. Here’s what I did while I was at Dev Bootcamp. And then here are the exact projects. There’s actually a section now in LinkedIn where you can put in like projects that you worked on and how long you worked on them and links to them. And then I think the key part is actually your About Section. So using your About Section to tell people more about who you are that isn’t just what you do and that’s where I kind of liken it to a college application. You’ve got your GPA and you’ve got all the classes you’ve taken, you’ve got all your grades. But at the end of the day, the essay is really how we get to know who Laura is and who is this person and do I like her as a person or is she kind of like somebody maybe I don’t really want to get to know more. And I like the About Section is an opportunity to give a quick summary, an elevator pitch, if you will, of who you are. What are your greatest strengths? So not necessarily just putting in a bunch of buzzwords, but what are some qualities about you that I think would make you really valuable as a teammate, make you someone I want to work with? All of those things I think are really valuable parts of kind of beefing up your LinkedIn in a way that helps people want to start a conversation with you and get to know you more. It’s just a way to kind of get the door open. It’s not necessarily going to get you the job, but it’ll at least get someone hopefully interested in talking to you, and I think that’s kind of the key. I always thought that, like, “Once someone just gets a chance to talk to me, I think that we could really hit it off.” But there’s so many people out there, so many people interested in tech, so many different kinds of engineers and experience levels. How do you make yourself stand out and how do you make yourself compelling to someone is I think identifying, why would I want to work with you? Well, sure, it’s great that you know Ruby, or you know Rails, or you know the full stack, and that’s important, but are you a team player? Are you someone who’s curious about things? Are you willing to help people who are younger in their journey? Or if you’re new in your journey, are you curious about learning? Are you willing to put in the time to learn whatever it is you don’t know? Stuff like that, I think, are what makes you a more compelling hire, and someone worth having a recruiter be like, “You know, I want to talk to you,” and just like kind of see if this might be a good fit.\u003c/p\u003e\u003cp\u003e [00:33:56] SY: One of the things that’s been really fascinating for me to see over the last 10 years is the evolution of LinkedIn from an accessible resume placeholder to a full-blown social network. It’s been really fascinating to see the way people use it to start newsletters, to be content creators, to offer support, to talk about not just work, but oftentimes a lot about personal life. And there’s so much more to LinkedIn than I remember there being when it was first launched, I think it’s been like 20, 25 years or something, as a place to just put up your resume. So when you think about the way that you would recommend people use LinkedIn today compared to maybe where it started for you and I, 10 years ago, how do we leverage the other stuff that LinkedIn now offers? How do we leverage the networking, the connections, the content creation? What’s your advice to kind of taking advantage of these tools to make us stand out for recruiters?\u003c/p\u003e\u003cp\u003e [00:34:54] LT: Yeah. I think at the end of the day, doing what feels most authentic to you is going to what’s actually be most powerful in terms of content. So there are some people who just love making tech content. They just love making videos. They do it on their own time. They’re really passionate about it. So if that’s you, share your YouTube videos on your LinkedIn. Especially if you’re new and trying to break into the industry, I think showing people how you learn and showing people what you’re learning is one of the most powerful tools you can do when you’re getting started and you don’t have a big resume behind you to kind of show your experience yet. So if you like to make videos and you want to show people what you’re learning about X, Y, Z thing, and it can be basic stuff, like how to, I don’t know, something like on GitHub or whatever, like educating people, showing people what you’re learning and being willing to teach other people. I think that’s great content to put on your LinkedIn. If you’re more of a wordsmith and maybe you like to blog and you want to blog about your learning experience, you could put that on a blog or you could put it on your LinkedIn and post something that you’re learning about there. I do think that familiarizing yourself with what LinkedIn has to offer because they do have a lot more like creator tools now than they’ve ever had before. You can create events. You can write articles. There’s so many different things you can do now on LinkedIn to express yourself. Finding what feels like an authentic expression I think is one of the most important ways you can leverage the platform. And if that doesn’t feel authentic to you, then at the very least, using your actual profile page to be a first impression of yourself for recruiters, I think, is the bare bones basic. If you want to find opportunities through LinkedIn is look at your About Section, figure out what you can say there that is different than what you say on your resume portion. Fill out that project part as clearly as you can while also letting people know what are you thinking about, how do you think, how do you solve problems, so people can kind of get to know you, frankly. I think that’s the bare minimum. And then expressing yourself authentically, people can always tell. I mean, you can see the posts on LinkedIn where you’re just like, “Ugh, that was a total sales pitch.” And then you see the ones where it’s just like, “Hey, I don’t know about you, but I forget how to solve X kind of errors. And here’s the way that I’m using this product, this tool to kind of help me figure that out. It’s like, “Oh, I struggle with solving these errors too. Maybe I’ll click on this video or read this article.” And that’s how you kind of get more people who are engaging with you in an authentic way. When you’re engaging there, then you show up more in searches and you can kind of see more about who you are. And I think that’s actually a really valuable thing to show people.\u003c/p\u003e\u003cp\u003e [MUSIC BREAK]\u003c/p\u003e\u003cp\u003e [00:37:53] SY: I’m curious, what are some obvious things that people get wrong? When you’re reviewing these profiles, what do you find yourself kind of repeating over and over again of things to avoid and things to fix? You mentioned a little bit earlier, using bullet points is a good idea instead of using long paragraphs. Are there other kind of low hanging fruit like that that we can watch out for?\u003c/p\u003e\u003cp\u003e [00:38:15] LT: Yeah. The biggest one is honestly typos. Please proofread your work. And if you are not great at proofreading, please have somebody else proofread your work. I catch so many errors there. Maybe it’s the English major in me, I don’t know. I catch errors everywhere that I go. But yeah, typos are basic. What that tells me when you’ve got typos is you don’t pay attention to detail and that’s not going to work. That’s just the basics of like good communication skills. So checking that, first of all. Second of all, I’ve seen a lot of people write their about pages, it just does not look like you care at all. It would almost be better if you don’t have anything to say there to just take it away and not say anything at all than say something like, “I like to code and rock climb on the weekends.” Honestly, I’m sure you do, and maybe you’re a lovely person, but that doesn’t really tell me anything different. How are you any different than this other person who likes to code and rock climb on the weekends? Really leveraging the space to take the time and don’t write it maybe in LinkedIn and maybe take it on to like a Google Doc or Word Doc or notes app on your phone or whatever, but actually work on that portion of your paragraph about you or whatever to really like say maybe four to five sentences, doesn’t have to be crazy because that’s the other thing. Sometimes you see people who just like write super verbose language and it’s like, “Okay, now I’m just kind of tired.” We’re on the third paragraph of this thing that you’ve accomplished, that’s not it either, like four to five sentences, but make them powerful, punchy sentences, like realizing that you’re About Section, yes, it tells people about you, but just like when you’re working with customers or partners or you’re thinking about your audience for your applications, your users, how is this going to help them? How is it that something you have or something you can do is going to solve a problem for somebody else? So for me, I say, one of my greatest strengths is identifying and optimizing systems. That’s something that I know that I do really well. Well, that’s great because say you’re a hiring manager and you need someone who’s going to kind of help bring order and organization to your system, whatever that system may be, “Oh, that sounds like a solution. I want to talk more to this person.” Or again, being a quick learner, enthusiastic teammate, all of these things I think are kind of buzzwords, but they’re authentic for me and what I feel like I can contribute to a team. So finding ways to contribute to somebody else’s problem, how is it that the skills that you have or the things that you know or the way that you work with people, how is that going to improve that hiring manager’s situation or their experience or your future team’s experience? And then yeah, with the jobs and things like that, I find it valuable to use bullet points and kind of almost like a peer review or kind of like a review of your work that you would do for quarterly reviews or half reviews, yearly reviews, whatever, just kind of giving me the bullet points and leading with the most important ones first. So leading with if you’ve contributed money to the pipeline based on your coding work like sharing that first or something to that effect where you can kind of ideally, use numbers, if possible, and percentages and things like that to help people understand the scope or how you have impacted your team or how you’ve impacted the company, but really thinking about your impact and how is it that you can communicate to somebody your experience, but also how you’re going to help them ultimately.\u003c/p\u003e\u003cp\u003e [00:41:59] SY: Absolutely. So if there’s one piece of advice you have for people in terms of making their LinkedIn more attractive to recruiters or just being recruiter ready and they’re early in their careers, so they may not have a great resume, they may not have the ton of experience that you have at this point, what’s one thing you think everyone should do to really maximize their chances of getting hired?\u003c/p\u003e\u003cp\u003e [00:42:23] LT: Just put information on your LinkedIn that lets people know who you are. And maybe think outside the box if you don’t have a resume to show for it just yet. Start getting creative about what you could show people. Show people the project you worked on in your bootcamp, where you’d like to take that project, even if you don’t take it that far. Let people know who you are, how you think, how you problem solve, and then communicate that, either in words or on a website, on your LinkedIn. That’s it.\u003c/p\u003e\u003cp\u003e [00:42:54] SY: Wonderful. Now at the end of every episode, we ask our guests to fill in the blanks of some very important questions. Laura, are you ready to fill in the blanks?\u003c/p\u003e\u003cp\u003e [00:43:07] LT: Yes.\u003c/p\u003e\u003cp\u003e [00:43:08] SY: Number one, worst advice I’ve ever received is?\u003c/p\u003e\u003cp\u003e [00:43:12] LT: Never let the sun go down on your anger.\u003c/p\u003e\u003cp\u003e [00:43:14] SY: Oh, interesting. That’s the worst advice. Tell me more about that.\u003c/p\u003e\u003cp\u003e [00:43:19] LT: I think that is horrible advice that’s usually given to married couples or people who are engaged and about to be married. Gosh, trying to figure out a fight at 11 o’clock at night, nobody is in their best mind. You’re tired. Nothing’s making sense. You’re just going in circles. I found the most freeing was to have someone, literally, I think it was my therapist, who was just like, “You know what? Just let the sun go down on your anger and go to bed. Go to bed and try again in the morning.” [00:43:47] SY: Yeah. Yeah.\u003c/p\u003e\u003cp\u003e [00:43:48] LT: And that has honestly been the most valuable. Suddenly you wake up and you’re like, “Wow, I had a nice rest. Is it actually that big of a deal?” Generally, it’s not.\u003c/p\u003e\u003cp\u003e [00:43:57] SY: Nice. Very cool. All right. Number two, best advice I’ve ever received is?\u003c/p\u003e\u003cp\u003e [00:44:02] LT: Ninety-five percent of what people say to you is actually about them.\u003c/p\u003e\u003cp\u003e [00:44:06] SY: Oh, tell me more.\u003c/p\u003e\u003cp\u003e [00:44:08] LT: People will, I mean, ironically advice. Someone will say, “Oh, you should never do X, Y, Z thing.” That’s because they did X, Y, Z thing and they maybe have regrets about it. Or, “Oh, I loved doing this thing and this is why you should do it exactly the way I did it.” Yeah. My husband actually heard that from someone and told me that, and it is so true and especially when someone says something that might upset you or offend you or something, I’ve found that oftentimes it actually has almost everything to do with them and what’s going on for them and has very little to do with me and what’s going on for me.\u003c/p\u003e\u003cp\u003e [00:44:45] SY: Very good. I like that one. Number three, my first coding project was about?\u003c/p\u003e\u003cp\u003e [00:44:49] LT: We did a Star Wars typewriter project at my Dev Bootcamp. I think that was the first one we did. I can’t remember. But yeah, it was really fun. Honestly, there’s one guy there who’s like a CSS wizard. He found a way to like get the words to float back, like the yellow words to float back just like in the Star Wars movies.\u003c/p\u003e\u003cp\u003e [00:45:10] SY: Oh, cool.\u003c/p\u003e\u003cp\u003e [00:45:11] LT: And you had to try to type the words out as fast as you could otherwise, you would lose or whatever or you’d win if you did it. And so yeah, so that was like a really fun project that we did.\u003c/p\u003e\u003cp\u003e [00:45:23] SY: That’s really cool. Neat. Number four, one thing I wish I knew when I first started to code is?\u003c/p\u003e\u003cp\u003e [00:45:28] LT: I wish I knew that there are so many resources out there to help me when I’m stuck, like even more content than I think it was even possible. But Google is your best friend when you first start to code. Because when you don’t know the answers, or you got an error message you don’t understand, I literally popped those error messages right into Google. I guess now you could pop them into ChatGPT if you wanted to, but I just love Stack Overflow, and there’s YouTube, and there’s all these different blog posts and articles and things people have written. There’s so much content out there to kind of help you figure out how to get unstuck. So I think one thing I wish I knew was that you could just put your error messages and your questions straight into Google and generally find an answer pretty quickly.\u003c/p\u003e\u003cp\u003e [00:46:15] SY: Absolutely. Wonderful. Well, thank you so much, Laura, for joining us today.\u003c/p\u003e\u003cp\u003e [00:46:19] LT: Yeah. Thank you for having me.\u003c/p\u003e\u003cp\u003e [00:46:27] SY: Want to be in the CodeNewbie Podcast? Know someone who I should interview next? Reach out on Twitter at Code Newbies or send me an email, hello@codenewbie.org. For more info on the podcast, check out www.codenewbie.org/podcast. And if you like the show, make sure to follow us and leave a review on your preferred platform so we can keep making the pod. Thanks for listening. See you next week.\u003c/p\u003e\u003cp\u003e [END]\u003c/p\u003e\n            \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "50 min read",
  "publishedTime": null,
  "modifiedTime": null
}
