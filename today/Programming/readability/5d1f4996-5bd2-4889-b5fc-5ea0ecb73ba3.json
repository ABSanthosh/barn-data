{
  "id": "5d1f4996-5bd2-4889-b5fc-5ea0ecb73ba3",
  "title": "AWS Introduces Vector Capabilities on Amazon S3",
  "link": "https://www.infoq.com/news/2025/07/aws-s3-vectors/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "At the recent AWS Summit in New York City, AWS announced the preview of Amazon S3 Vectors, claiming to be the first cloud object store with native support for storing large vector datasets. The new option offers subsecond query performance, reducing the cost of storing AI-ready data compared to traditional vector databases. By Renato Losio",
  "author": "Renato Losio",
  "published": "Sat, 26 Jul 2025 13:50:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "vector databases",
    "S3",
    "Cloud",
    "OpenSearch",
    "AI, ML \u0026 Data Engineering",
    "Development",
    "news"
  ],
  "byline": "Renato Losio",
  "length": 4066,
  "excerpt": "At the recent AWS Summit in New York City, AWS announced the preview of Amazon S3 Vectors, claiming to be the first cloud object store with native support for storing large vector datasets. The new",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s2_20250724113909/apple-touch-icon.png",
  "text": "At the recent AWS Summit in New York City, AWS announced the preview of Amazon S3 Vectors, claiming to be the first cloud object store with native support for storing large vector datasets. The new option offers subsecond query performance, reducing the cost of storing AI-ready data compared to traditional vector databases. S3 Vectors introduces the concept of vector buckets, a new bucket type with a dedicated set of APIs that differs from the existing S3 standard buckets and S3 Tables. Channy Yun, principal developer advocate at AWS, explains: With S3 Vectors, you can now economically store the vector embeddings that represent massive amounts of unstructured data such as images, videos, documents, and audio files, enabling scalable generative AI applications including semantic and similarity search, RAG, and build agent memory. Once an S3 vector bucket is created, developers can organize vector data within vector indexes and run similarity search queries against the dataset. According to the documentation, each vector bucket can have up to 10,000 vector indexes, and each vector index can hold tens of millions of vectors. Source: AWS blog Developers can attach metadata as key-value pairs to vectors, and by default all metadata is filterable, with vector indexes supporting string, number, boolean, and list types. As a standalone solution, S3 Vectors is designed for workloads where queries are not frequent. To build RAG applications on AWS, S3 Vectors integrates with Bedrock Knowledge Bases and OpenSearch. Yun adds: Through its integration with Amazon OpenSearch Service, you can lower storage costs by keeping infrequent queried vectors in S3 Vectors and then quickly move them to OpenSearch as demands increase or to support real-time, low-latency search operations. Andrew Warfield, VP and distinguished engineer at Amazon, clarifies the goal on LinkedIn: This is an exciting time for the S3 team because we are actively watching as the workloads on S3 change (...) S3 Vectors costs considerably less than traditional vector stores. It also, at least for the moment, doesn't offer the same levels of high-TPS and low latency that are common in DRAM-based stores. Our reasoning was that, just like with other data types, builders would appreciate a highly durable and low-cost foundation layer for vectors, and would be happy to move data up into higher-performance, and more feature-rich layers as necessary. To simplify the process of working with vector embeddings in S3 Vectors, the cloud provider released the S3 Vectors Embed CLI repository, a standalone command-line tool to create, store, and query vector embeddings on S3. A tutorial \"getting started with S3 Vectors\" using the SDK for Python is available as well. On a popular Reddit thread, most developers appreciate the new feature, with Travis Cunningham writing: This move turns every S3 bucket into a mini vector store, fattens margins on hardware Amazonâ€™s already amortized, and slams the door on competitors trying to siphon off AI workloads. On Hacker News, user bob1029 comments instead: I still contend that what most people want is traditional full text search, not another layer of black box weirdness behind the LLM. You already have a model with incredibly powerful semantic understanding. Why do we need the document store to also be a smartass? The model can project multiple OR clauses into the search term based upon its interpretation of the context. In a separate announcement, Amazon S3 Metadata introduced live inventory tables for all objects in a bucket. A managed Apache Iceberg table provides a complete and current snapshot of the objects and their metadata in a bucket, including existing objects. Leaked by mistake a few days ahead of the conference, S3 Vectors is currently in preview in a subset of regions, including Northern Virginia, Ohio, and Frankfurt in Europe. About the Author Renato Losio",
  "image": "https://res.infoq.com/news/2025/07/aws-s3-vectors/en/headerimage/generatedHeaderImage-1752836130567.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eAt the recent AWS Summit in New York City, AWS announced the preview of Amazon S3 Vectors, claiming to be the first cloud object store with native support for storing large vector datasets. The new option offers subsecond query performance, reducing the cost of storing AI-ready data compared to traditional vector databases.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://aws.amazon.com/s3/features/vectors/\"\u003eS3 Vectors\u003c/a\u003e introduces the concept of vector buckets, a new bucket type with a dedicated set of APIs that differs from the existing S3 standard buckets and \u003ca href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-tables.html\"\u003eS3 Tables\u003c/a\u003e. \u003ca href=\"https://www.linkedin.com/in/channy/\"\u003eChanny Yun\u003c/a\u003e, principal developer advocate at AWS, \u003ca href=\"https://aws.amazon.com/blogs/aws/introducing-amazon-s3-vectors-first-cloud-storage-with-native-vector-support-at-scale/\"\u003eexplains\u003c/a\u003e:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eWith S3 Vectors, you can now economically store the vector embeddings that represent massive amounts of unstructured data such as images, videos, documents, and audio files, enabling scalable generative AI applications including semantic and similarity search, RAG, and build agent memory.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eOnce an S3 vector bucket is created, developers can organize vector data within vector indexes and run similarity search queries against the dataset. According to the documentation, each vector bucket can have up to 10,000 vector indexes, and each vector index can hold tens of millions of vectors.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003e\u003cimg alt=\"S3 vector bucket\" data-src=\"news/2025/07/aws-s3-vectors/en/resources/12025-s3-vector-1-overview-1-1752836286920.png\" src=\"https://imgopt.infoq.com/fit-in/3000x4000/filters:quality(85)/filters:no_upscale()/news/2025/07/aws-s3-vectors/en/resources/12025-s3-vector-1-overview-1-1752836286920.png\" rel=\"share\"/\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eSource: AWS blog\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eDevelopers can attach metadata as key-value pairs to vectors, and by default all metadata is filterable, with vector indexes supporting string, number, boolean, and list types.\u003c/p\u003e\n\n\u003cp\u003eAs a standalone solution, S3 Vectors is designed for workloads where queries are not frequent. To build RAG applications on AWS, S3 Vectors integrates with Bedrock Knowledge Bases and \u003ca href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-vectors-opensearch.html\"\u003eOpenSearch\u003c/a\u003e. Yun adds:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThrough its integration with Amazon OpenSearch Service, you can lower storage costs by keeping infrequent queried vectors in S3 Vectors and then quickly move them to OpenSearch as demands increase or to support real-time, low-latency search operations.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.linkedin.com/in/andywarfield/\"\u003eAndrew Warfield\u003c/a\u003e, VP and distinguished engineer at Amazon, \u003ca href=\"https://www.linkedin.com/pulse/s3-vectors-andrew-warfield-kauzc\"\u003eclarifies\u003c/a\u003e the goal on LinkedIn:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis is an exciting time for the S3 team because we are actively watching as the workloads on S3 change (...) S3 Vectors costs considerably less than traditional vector stores. It also, at least for the moment, doesn\u0026#39;t offer the same levels of high-TPS and low latency that are common in DRAM-based stores. Our reasoning was that, just like with other data types, builders would appreciate a highly durable and low-cost foundation layer for vectors, and would be happy to move data up into higher-performance, and more feature-rich layers as necessary.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eTo simplify the process of working with vector embeddings in S3 Vectors, the cloud provider released the \u003ca href=\"https://github.com/awslabs/s3vectors-embed-cli\"\u003eS3 Vectors Embed CLI\u003c/a\u003e repository, a standalone command-line tool to create, store, and query vector embeddings on S3. A tutorial \u0026#34;\u003ca href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-vectors-getting-started.html\"\u003egetting started with S3 Vectors\u003c/a\u003e\u0026#34; using the SDK for Python is available as well.\u003c/p\u003e\n\n\u003cp\u003eOn a \u003ca href=\"https://www.reddit.com/r/aws/comments/1m12r14/announcing_amazon_s3_vectors_previewfirst_cloud/\"\u003epopular Reddit thread\u003c/a\u003e, most developers appreciate the new feature, with Travis Cunningham writing:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis move turns every S3 bucket into a mini vector store, fattens margins on hardware Amazonâ€™s already amortized, and slams the door on competitors trying to siphon off AI workloads.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eOn \u003ca href=\"https://news.ycombinator.com/item?id=44577483\"\u003eHacker News\u003c/a\u003e, user \u003cem\u003ebob1029\u003c/em\u003e comments instead:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eI still contend that what most people want is traditional full text search, not another layer of black box weirdness behind the LLM. You already have a model with incredibly powerful semantic understanding. Why do we need the document store to also be a smartass? The model can project multiple OR clauses into the search term based upon its interpretation of the context.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eIn a separate announcement, \u003ca href=\"https://aws.amazon.com/blogs/aws/amazon-s3-metadata-now-supports-metadata-for-all-your-s3-objects/\"\u003eAmazon S3 Metadata\u003c/a\u003e introduced live inventory tables for all objects in a bucket. A managed Apache Iceberg table provides a complete and current snapshot of the objects and their metadata in a bucket, including existing objects.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://bsky.app/profile/frichetten.com/post/3ltutil7rhk2e\"\u003eLeaked\u003c/a\u003e by mistake a few days ahead of the conference, S3 Vectors is currently in preview in a subset of regions, including Northern Virginia, Ohio, and Frankfurt in Europe.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Renato-Losio\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eRenato Losio\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": "2025-07-26T00:00:00Z",
  "modifiedTime": null
}
