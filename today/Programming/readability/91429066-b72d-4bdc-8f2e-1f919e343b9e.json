{
  "id": "91429066-b72d-4bdc-8f2e-1f919e343b9e",
  "title": "Cloudflare Upgrades D1 Database with Global Read Replication",
  "link": "https://www.infoq.com/news/2025/05/cloudflare-d1-global-replication/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "During the recent Developer Week 2025, Cloudflare announced the beta of global read replication for its serverless SQL database D1, providing a globally distributed option without sacrificing consistency. With automatically provisioned replicas in every region, applications can now serve read queries faster while maintaining strong sequential consistency across requests. By Renato Losio",
  "author": "Renato Losio",
  "published": "Sat, 03 May 2025 05:51:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Database",
    "Cloudflare",
    "Cloud",
    "SQL",
    "Development",
    "AI, ML \u0026 Data Engineering",
    "news"
  ],
  "byline": "Renato Losio",
  "length": 4059,
  "excerpt": "During the recent Developer Week 2025, Cloudflare announced the beta of global read replication for its serverless SQL database D1, providing a globally distributed option without sacrificing consiste",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s1_20250422123038_u1/apple-touch-icon.png",
  "text": "During the recent Developer Week 2025, Cloudflare announced the beta of global read replication for its serverless SQL database D1, providing a globally distributed option without sacrificing consistency. With automatically provisioned replicas in every region, applications can now serve read queries faster while maintaining strong sequential consistency across requests. When replication for a D1 database is enabled, the D1 service maintains read replicas in multiple regions and routes requests to an appropriate copy of the database according to performance heuristics, the type of queries made in those requests, and query consistency needs. In the article \"Sequential consistency without borders: how D1 implements global read replication,\" Justin Mazzola Paluska and Lambros Petrou explain how the feature was implemented: D1’s read replication feature is built around the concept of database sessions. A session encapsulates all the queries representing one logical session for your application. For example, a session might represent all requests coming from a particular web browser or all requests coming from a mobile app used by one of your users (...) The sessions implementation ensures sequential consistency for all queries in the session, no matter what copy of the database each query is routed to. Source: Cloudflare blog As with any database cluster, read replication on Cloudflare D1 reduces average latency by routing user requests to read replicas in nearby regions and increases overall throughput by offloading read queries to read replicas. In the technical deep dive of the read replication implementation, Paluska and Petrou clarify why there is a need for a Sessions API and why it is not possible to query replicas directly: D1 runs on Cloudflare’s global network and there’s no way to ensure that requests from the same client get routed to the same replica for every request (...) D1’s read replication is asynchronous, so it’s possible that when you switch between replicas, the replica you switch to lags behind the replica you were using. The withSession method takes a bookmark as a parameter, instructing D1 where to forward the first query of the session. While the first-unconstrained option allows the first query to be processed anywhere, the first-primary option ensures that the first query of the session will be forwarded to the primary. When possible, the authors suggest continuing sessions across requests by passing previously received bookmarks, allowing all of a client's requests to be in the same session. The addition of global read replication to Cloudflare D1 addresses a concern and adds a feature that the community was asking for. In a recent Reddit thread, James Ross, CTO at Nodecraft, wrote: D1 isn’t that popular today because it has a few gotchas that make it hard to recommend for broader use-cases. (...) It exists in a single region. Their marketing sometimes claim otherwise, and they will hopefully soon get read replicas to improve this, but D1 today is essentially SQLite deployed to a single server. Read Replication for D1 was just one of the main Cloudflare announcements during Developer Week 2025. As separately reported on InfoQ, the cloud provider launched the public beta of Cloudflare Secrets Store for secure credential management. Furthermore, Cloudflare Snippets and Cloudflare Workflow, a durable execution engine built on top of Workers, are both now generally available. It is also now possible to deploy static sites and full-stack applications on Cloudflare Workers thanks to support for React Router v7, Astro, Vue, and the Cloudflare Vite plugin. The new read replication feature is currently in beta, with global replica creation and request routing available at no additional cost. The team anticipates additional capabilities in the future, including more advanced replica placement policies. About the Author Renato Losio",
  "image": "https://res.infoq.com/news/2025/05/cloudflare-d1-global-replication/en/headerimage/generatedHeaderImage-1745261670620.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eDuring the recent Developer Week 2025, Cloudflare announced the beta of global read replication for its serverless SQL database D1, providing a globally distributed option without sacrificing consistency. With automatically provisioned replicas in every region, applications can now serve read queries faster while maintaining strong sequential consistency across requests.\u003c/p\u003e\n\n\u003cp\u003eWhen replication for a D1 database is enabled, the D1 service maintains read replicas in multiple regions and routes requests to an appropriate copy of the database according to performance heuristics, the type of queries made in those requests, and query consistency needs. In the article \u0026#34;\u003ca href=\"https://blog.cloudflare.com/d1-read-replication-beta/\"\u003eSequential consistency without borders: how D1 implements global read replication,\u003c/a\u003e\u0026#34; Justin Mazzola Paluska and Lambros Petrou explain how the feature was implemented:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eD1’s read replication feature is built around the concept of database sessions. A session encapsulates all the queries representing one logical session for your application. For example, a session might represent all requests coming from a particular web browser or all requests coming from a mobile app used by one of your users (...) The sessions implementation ensures sequential consistency for all queries in the session, no matter what copy of the database each query is routed to.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cimg alt=\"\" data-src=\"news/2025/05/cloudflare-d1-global-replication/en/resources/16-1745261830088.png\" src=\"https://imgopt.infoq.com/fit-in/3000x4000/filters:quality(85)/filters:no_upscale()/news/2025/05/cloudflare-d1-global-replication/en/resources/16-1745261830088.png\" rel=\"share\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eSource: Cloudflare blog\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eAs with any database cluster, read replication on \u003ca href=\"https://developers.cloudflare.com/d1/\"\u003eCloudflare D1\u003c/a\u003e reduces average latency by routing user requests to read replicas in nearby regions and increases overall throughput by offloading read queries to read replicas. In the technical deep dive of the read replication implementation, Paluska and Petrou clarify why there is a need for a Sessions API and why it is not possible to query replicas directly:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eD1 runs on Cloudflare’s global network and there’s no way to ensure that requests from the same client get routed to the same replica for every request (...) D1’s read replication is asynchronous, so it’s possible that when you switch between replicas, the replica you switch to lags behind the replica you were using.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe \u003ccode\u003ewithSession\u003c/code\u003e method takes a bookmark as a parameter, instructing D1 where to forward the first query of the session. While the \u003ccode\u003efirst-unconstrained\u003c/code\u003e option allows the first query to be processed anywhere, the \u003ccode\u003efirst-primary\u003c/code\u003e option ensures that the first query of the session will be forwarded to the primary. When possible, the authors suggest continuing sessions across requests by passing previously received bookmarks, allowing all of a client\u0026#39;s requests to be in the same session.\u003c/p\u003e\n\n\u003cp\u003eThe addition of global read replication to Cloudflare D1 \u003ca href=\"https://news.ycombinator.com/item?id=39976207\"\u003eaddresses a concern\u003c/a\u003e and adds a feature that the community was asking for. In a recent \u003ca href=\"https://www.reddit.com/r/CloudFlare/comments/1iqne1i/why_cloudflares_database_not_popular/\"\u003eReddit thread\u003c/a\u003e, James Ross, CTO at Nodecraft, \u003ca href=\"https://www.reddit.com/r/CloudFlare/comments/1iqne1i/comment/md2ikx1/?utm_source=share\u0026amp;utm_medium=web3x\u0026amp;utm_name=web3xcss\u0026amp;utm_term=1\u0026amp;utm_content=share_button\"\u003ewrote\u003c/a\u003e:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eD1 isn’t that popular today because it has a few gotchas that make it hard to recommend for broader use-cases. (...) It exists in a single region. Their marketing sometimes claim otherwise, and they will hopefully soon get read replicas to improve this, but D1 today is essentially SQLite deployed to a single server.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eRead Replication for D1 was just one of the main Cloudflare announcements during \u003ca href=\"https://blog.cloudflare.com/developer-week-2025-wrap-up/\"\u003eDeveloper Week 2025\u003c/a\u003e. As separately reported on InfoQ, the cloud provider launched the \u003ca href=\"https://www.infoq.com/news/2025/04/cloudflare-secrets-store-beta/\"\u003epublic beta of Cloudflare Secrets Store\u003c/a\u003e for secure credential management. Furthermore, \u003ca href=\"https://blog.cloudflare.com/snippets/\"\u003eCloudflare Snippets\u003c/a\u003e and \u003ca href=\"https://developers.cloudflare.com/workflows/\"\u003eCloudflare Workflow\u003c/a\u003e, a durable execution engine built on top of Workers, are both now generally available. It is also now possible to \u003ca href=\"https://blog.cloudflare.com/full-stack-development-on-cloudflare-workers/\"\u003edeploy static sites\u003c/a\u003e and full-stack applications on Cloudflare Workers thanks to support for React Router v7, Astro, Vue, and the Cloudflare Vite plugin.\u003c/p\u003e\n\n\u003cp\u003eThe new read replication feature is currently in beta, with global replica creation and request routing available at no additional cost. The team anticipates additional capabilities in the future, including more advanced replica placement policies.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Renato-Losio\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eRenato Losio\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": "2025-05-03T00:00:00Z",
  "modifiedTime": null
}
