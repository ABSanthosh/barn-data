{
  "id": "2f528a69-d7d5-4081-8b31-1d22d329266e",
  "title": "S26:E8 - Being Open to the Unexpected (Katherine Evans)",
  "link": "https://www.codenewbie.org/podcast/being-open-to-the-unexpected",
  "description": "Meet Katherine Evans, Lead Engineering Instructor at Actualize Coding Bootcamp and Senior Software Engineer at Neon One. Katherine walks us through her journey from bootcamp student to bootcamp teacher, sharing tips for recent grads looking to land their first role. Saron and Katherine also talk about whether Katherine thinks it’s still worth learning to code given the economic climate and what she would tell others who might be interested in learning to code. Show Links Partner with Dev \u0026 CodeNewbie! (sponsor) Actualize Coding Bootcamp Podium Education CAD PHP Katherine's GitHub Katherine's Website Katherine's Instagram",
  "author": "CodeNewbie",
  "published": "Wed, 20 Dec 2023 03:00:00 -0500",
  "source": "http://feeds.codenewbie.org/cnpodcast.xml",
  "categories": [
    "Podcast"
  ],
  "byline": "",
  "length": 48731,
  "excerpt": "[00:00:05] SY: Welcome to the CodeNewbie Podcast where we talk to people on their coding journey in hopes of helping you on yours. I’m your host, Saron, and today we’re talking about being open to the unexpected with Katherine Evans, Lead Engineering Instructor at Actualize Coding Bootcamp, Live Lab Instructor at Podium Education, and Senior Engineer at Neon One.",
  "siteName": "",
  "favicon": "https://www.codenewbie.org/assets/favicon-180-b6d80e4d946988dd84ac70aca4f458997d945d020597dcd414e0a1f0c6133b74.png",
  "text": "[00:00:05] SY: Welcome to the CodeNewbie Podcast where we talk to people on their coding journey in hopes of helping you on yours. I’m your host, Saron, and today we’re talking about being open to the unexpected with Katherine Evans, Lead Engineering Instructor at Actualize Coding Bootcamp, Live Lab Instructor at Podium Education, and Senior Engineer at Neon One.[00:00:24] KE: They wanted someone who had three years of PHP experience. Well, I had never touched PHP. I had zero years of programming experience. I just graduated from a Ruby on Rails and a Vue.js bootcamp. And, you know, I said, “Why did you hire me?” And he said, “You were excited. You were willing to learn. You wanted to learn. I could tell.” And I think that is so, so, so important because this is a career path that you need to keep learning. There is never a point where you say, “Oh, I know everything. Great!” [00:00:55] SY: Katherine walks us through her journey from bootcamp student to bootcamp teacher, and shares her tips for recent grads looking to land their first role after this.[MUSIC BREAK][00:01:11] SY: Thank you so much for being here.[00:01:13] KE: Thank you so much for having me. This is an honor. I love Code Newbie.[00:01:16] SY: Oh, wonderful! Glad to have you on the show. So you are currently doing a lot, really excited to get to unpacking and exploring all the things that you do. Three jobs is not easy. Kudos to you for having all those opportunities. I’m sure some of them were a little unexpected, but let’s start all the way at the beginning. Tell me what it was like for you growing up. Was tech part of your childhood at all?[00:01:38] KE: It really wasn’t. I grew up early ’90s, dial up, your mom and dad yelling down to get off the internet because they have to make a phone call. Back then, I didn’t really understand tech. I didn’t really use the computer that often. In school, it was never made apparent that this was something that I could pursue. To be frank, I really didn’t start using the computer until high school for essays, papers you had to write. And coding came much, much later down the line. I think the first exposure to anything STEM-related was a CAD class I took in middle school, if you can believe it. And it’s weird. I remember absolutely loving that class. It was the first real technical class that I took, and then I remember switching to home ec after that and I was a little disappointed.[00:02:30] SY: And when you were doing that, when you exploring CAT, and CAT, that’s the one where you like design and build stuff, right?[00:02:35] KE: Yes.[00:02:36] SY: Yeah. What did you build? Do you remember?[00:02:39] KE: I do actually. So I still have it. It’s a metal toolbox. IT’S like hexagonal. And so it’s a lot of interesting folds and we got to put metal clasps on it, a metal handle. And I remember storing my nail polish in it, and I was super proud.[00:02:54] SY: Very cool. Very cool. Oh, that sounds like fun. Did it ever occur to you that tech might be a career or something that you study, or was it just kind of these random electives that you took as part of school?[00:03:07] KE: Just some random electives. It wasn’t even on my radar. Funnily enough, my brother really wanted to get into tech. I went to school for a nonprofit work. And we’ve kind of flip flopped later in life. I’m now in tech and he does nonprofit work, political work.[00:03:25] SY: That’s funny.[00:03:25] KE: We looked at each other and it’s that Spider Man meme.[00:03:28] SY: Yeah. Got you. So I know that you went to college for, I think it was art history. Is that right?[00:03:35] KE: I got a minor in art history. The degree was in arts management.[00:03:39] SY: So you graduate school with your art management degree, decide that that probably wasn’t for you. So what did you do next?[00:03:47] KE: So I graduate with an arts management degree. I spent some time getting a certificate in fundraising development. So one of the constants throughout my career and my education has also been a love of writing. And so I transitioned to working for nonprofits for these institutions where I became a grant writer. So for a couple of years, I like to say professionally begged for money. Yeah, writing these really large grants to different foundations.[00:04:18] SY: And did you like that? Was that fun for you?[00:04:20] KE: It was at the time. I was fulfilled working for nonprofits. It really does give you at the end of the day that warm, fuzzy feeling. They don’t pay the bills, warm, fuzzy feelings, but I did enjoy the work and it was rewarding when the grant writing paid off. I slowly started picking up some additional responsibilities. Nonprofit work is a lot like startup work. You have a shoestring budget. You have a small staff. You have to get a lot done with very few resources. And so in addition to grant writing, I started working on the events team. So I was planning special events, athletic events, big galas, and they also, being the youngest one at many of these nonprofits, they said, “Oh, you’re young. You must know tech. We’re going to give you all the tech stuff. You’re going to write our newsletter. You’re going to update our website.” So my first exposure to code was in an email template, writing some HTML and some CSS.[00:05:25] SY: Okay. And how did you learn how to do that? Or was that just a lot of Googling? Did you ask for help? How’d you figure that out?[00:05:31] KE: Oh yeah. It was a lot of trial and error, a lot of Googling. I didn’t really have anyone I could ask for help at my current company. They didn’t know what they were doing, let alone being able to come in and provide technical guidance. And so Google became one of my best friends during that time. And trial and error troubleshooting, I don’t even think I knew if Stack Overflow existed early 2000. I’m sure it did. But yeah, just a lot of Googling. I think I checked out some books at the library too, if you can believe it, on HTML and CSS. It was great.[00:06:01] SY: And how did you feel about it? Did you start thinking, “Oh, maybe this is a fun avenue to explore”? Or was it just kind of another job duty for the job that you already had?[00:06:09] KE: It was just another job duty. It hadn’t yet solidified as something that might be interesting to pursue. This was pretty early on in my nonprofit career. And so before going into tech, I fully made the transition to planning events. And I was working with our largest donors. They’ve donated half a million dollars or more. And so we throw them these lavish gala events. And still, tech wasn’t on my radar, which is unfortunate because I did not like event planning. It was not for me.[00:06:44] SY: So you got this exposure to tech. It still feels like it’s just part of your job, not really something you’re considering as a career. What was it that made you finally look at it differently? Because I imagine at some point you said, “Hmm, maybe there’s something more to this. When did that moment happen for you?” [00:07:01] KE: That moment, it happened at my very last nonprofit job. I didn’t have a great team. Management was difficult to work with. I was not loving the work. I vividly remember driving into the office one day and I started crying. I was listening to a book on tape and it wasn’t even a particularly sad part and I just started sobbing and I realized, “Oh God, I hate my job, I hate my career. What am I going to do?” And I started to panic. Even then, tech was one of two options I was considering. I was also really interested in the healthcare field. I had some friends who were nurses. And so I was weighing these two options in my hand. And if I’m going to be honest, it came down to the fact that nursing required a lot more schooling. And I didn’t think I could stick it out in a job that I just abjectly hated for like two years while I got a nursing degree. And it actually turned out to be the best decision I ever made. I am just thrilled that I somehow found my way to coding.[00:08:13] SY: When did you realize that it was going to be something you stuck with? What was the moment when it went from maybe this is a cool thing I’m investigating, I’m interested in, I’m feeling it out, trying to see if there’s a fit to, “Oh, yeah, this is for me, this is what I’m going to do”?[00:08:28] KE: I don’t know that there was like a watershed moment. Tech, I know I’m not alone in this, but I’m not sure how many other people feel this way. But there are a lot of ups and downs where, still to this day when I’m dealing with bugs or issues, I’m questioning my entire career choice, but then you have a win and you finally see it succeed, your build succeeds or you build this feature and you release it and you see it on production and you see people using it. And it is just this satisfaction and this elation. And I think that it’s the satisfaction of building something that really solidified it for me. Writing a grant is nice planning, special event is nice, but they all feel very transitory. The event is over and what do you have to show for it? Nothing. Everything’s gone. But coding, you’re building something and it kind of lasts.[00:09:24] SY: Absolutely. Absolutely. Tell me about the decision to do a bootcamp because when it comes to learning to code and making that transition, we can do bootcamp. We can go back to get our associates or our bachelor’s degree in computer science. We can just do the self-taught route, take a bunch of free courses or just cost effective, cheaper courses online, and just kind of do it on our own. There’s so many ways to get there, but you decided to do bootcamp. Tell me more about how you came to that conclusion.[00:09:56] KE: Sure. So right away, I kind of ruled out like an associate degree or another bachelor’s degree. It was a little expensive. And again, I didn’t really necessarily have that time commitment to make. I did try the self-paced self, self-teaching route. But at that time, I was undiagnosed ADHD and my Udemy platform and a bunch of other software platforms that teach you to code, it just littered with courses that are like 10 percent done, 15 percent done.[00:10:27] SY: Yeah. Yeah. I know the feeling.[00:10:29] KE: Yeah. These are incredible resources, don’t get me wrong, but they are great resources for teaching you something new. They are not the best for reinforcing something that you already know, for this like deliberate practice mentality. It’s great for trying something new and exciting, but it’s never repetitive enough that anything sticks. And so I would take the course, I would feel really excited, but something would happen or I would get stuck at a certain point. And there was no one to really ask for help. And you just kind of forget if you don’t have that repetition and the consistency or the practice. And so self-pace just wasn’t cutting it for me. And the bootcamp kind of felt like an in between, sort of a bridge between like a traditional associates or a bachelor’s degree and really this self-paced, self-taught approach. It was not inexpensive, but I signed up and. And thankfully, there were grants for women in programming at the time. So it was great to make use of that. And it was wonderful to be in a group of students who were also making this career transition. It felt like I had found people who come from, even though we have different backgrounds, just sort of a similar recent life experience. And so it was really nice. It was bonding. And I still talk to my bootcamp cohort today.[00:11:59] SY: Absolutely. I did a bootcamp as well after doing self-taught for a couple of months. And that cohort is everything, just having that group of people to understand the highs and the lows and to get through the tears with and high five with. This was just absolutely wonderful. Was your bootcamp in person? Was it online? What was the structure of it?[00:12:19] KE: It was in person in the evenings and on the weekends. And so it was three and a half hours every weeknight, except for Friday and then it was an all day Sunday experience.[00:12:30] SY: Very cool. How did you decide which bootcamp to go with? Because especially now there’s so many different ones. They teach slightly different things. There’s some that are in person, some that are daytime, evening, online, async. How did you pick the one that you went with?[00:12:47] KE: Sure. I think I ended up where I went Actualize Coding Bootcamp because of the reviews that I found online. And even back then, it was kind of hard to pick a bootcamp because first of all, it’s a lot of money. And second of all, in addition to researching bootcamps, you also have these voices online saying, “Oh, don’t do a bootcamp. They’re not worth it.” Or, “These bootcamps are bad. They don’t teach you what you need to know,” or, “This bootcamp is a scam.” And so you’re just kind of paralyzed a little bit, at least initially. And so I tried to do as much research as possible. So I looked up all the reviews. I found people who had attended a couple of different bootcamps. And so I reached out to them to ask them questions about their experience. I reached out to a couple of teachers as well to see what is your teaching style, what is the teaching philosophy. And so it really helped me make an informed decision about where I went.[00:13:44] SY: And what are your thoughts on the fact that it was in person? Because I’m wondering, for a lot of people, that’s just simply not an option. But if you have the opportunity to go in person, did it add anything to the experience or do you feel like it would have been fine if you were learning via Zoom and learning remotely?[00:14:02] KE: I think that it would have been fine had it been remote. I actually don’t know that it was an option at that time for the bootcamp that I chose. And so in person was really the only choice. I didn’t mind it. The energy was really, really great. And I think I could focus a little bit more. But I teach at a bootcamp now, and so I teach all virtual classes. And so I try to make it as community driven as possible and still have time to socialize and engage with each other and work in different groups together. So I’m hoping that really nothing is lacking in that regard.[00:14:39] SY: Absolutely. Tell me about what happened when the bootcamp ended. I’m assuming on your job search, you’re hunting for your first role, trying to figure all that out. How much time passed between the end of the bootcamp and you actually landing that first job?[00:14:54] KE: Sure. So I graduated mid-September, I want to say like September 15th. My birthday is in November. And so I said, “You know what? I’m going to get a job by my birthday.” And everybody turned to me and they said, “Katherine that’s like two months. That’s no time. You need to give yourself more time.” [00:15:10] SY: That’s tight. Yeah.[00:15:11] KE: It is. Yes. I got so, so, so lucky. I think it was a combination of the market at the time and the fact that I had so many hours a day to just apply, apply, apply. I employed what I affectionately call the spray-and-pray method, which is apply to as many jobs as possible, really to just get your resume out there. And it was difficult because I don’t know if it’s being a woman or coming from a different career path, but not fully fitting a job description really gave me like an uncomfortable feeling, like I was going to be found out or that they’re going to email me and say, “Well, you don’t fit every attribute that we’re looking for. How dare you apply to this job?” So that was a really hard hurdle to get over. But once I did, I was no looking back.[00:16:03] SY: How did you end up getting that first job? Who is it with? How did it go?[00:16:07] KE: Sure. So I got my first job through the platform AngelList, although I think it’s called something different now. I think it’s called Wellfound.[00:16:14] SY: Wellfound.[00:16:15] KE: Yeah.[00:16:15] SY: Yeah. I don’t know why they did that. I think AngelList is great.[00:16:18] KE: I don’t either. Yeah. AngelList is awesome. It was a great platform name. So I made myself a profile there. I had a profile on LinkedIn. I made one on Indeed. So I was looking at like four or five different job platforms and I was really surprised at the response rate I got from AngelList. It was certainly not high, but it was higher than every other platform. And this is going to sound really, really bad, and I apologize to Clay Johnson, who hired me for my first job, incredible man, incredible mentor, but I don’t remember applying to my first job.[00:16:55] SY: Really?[00:16:56] KE: I was applying to so many.[00:16:59] SY: Like hundreds?[00:17:00] KE: Yeah. Oh yeah.[00:17:01] SY: What number are we?[00:17:02] KE: Hundreds, yeah.[00:17:02] SY: Yeah. Okay. Wow![00:17:03] KE: And so I was getting interviews and some of them were way above my technical ability and it was just kind of laughable. I’m sitting there in these testing environments online thinking, “Oh my God, what have I gotten myself into?” Then Car Lease came along, a small startup, a car leasing platform. Unfortunately, they are now defunct. Yeah, I got an email from Clay Johnson, who was CTO, the only developer at the company. And he asked to set up an interview. And so I go to the interview. Of course, I’m late because I could not find the office. It was on a very weird industrial street. And so inwardly panicking, I called the receptionist and she could tell the panic in my voice and she said, “It’s okay. Let me guide you.” I get into the office and I sit down and we have a fantastic conversation and I walk him through the code that I wrote. I even record a video of myself demoing it and I send it to him later. And the rest, as they say, is history. He offered me the role and he apologized that the salary was a little low, but I wasn’t going to tell him that I would have almost worked for free just to get my foot in the door.[00:18:15] SY: Just to get that first job. Yeah, I know the feeling. Yeah, absolutely. So tell me about what you think it was about your application, about your interviewing that got you that job. What was it that you feel worked to your advantage?[00:18:30] KE: Oh, great question. So it’s interesting because this is one of those applications. Like I went back and I looked at the job posting and they wanted someone who had three years of PHP experience. Well, I had never touched PHP. I had zero years of programming experience. I just graduated from a Ruby on Rails and a Vue.js bootcamp and no idea what PHP is at the time. I actually asked my manager, I actually asked Clay about three or four months into my tenure with Car Lease. I said, “Why did you hire me?” And he said, “You were excited. You were willing to learn. You wanted to learn. I could tell.” And I think that is so, so, so important. It’s not even about a passion for code, per se. It’s just this insatiable need to learn and finding interest in that process because it’s not an easy process. There are times where you feel really, really dumb while you’re trying to learn something. And if you could only see my Google history of silly things that I don’t remember, as far as programming goes, it would shock you, I’m sure. But it’s really, really important because this is a career path that you need to keep learning. There is never a point where you say, “Oh, I know everything. Great.” So yeah, having that drive, that love of learning is really crucial.[00:19:51] SY: How do you think you displayed that in your interactions with your manager, with the company? Where are opportunities? When we’re applying the jobs and we’re communicating with people, we can show that enthusiasm and show that excitement, where does that show up?[00:20:09] KE: Sure. So I think it shows up, first of all, in the portfolio that you build, the work that you display. The project that I had built was a travel website. So it was a CRUD app for planning travel itinerary, as well as tracking budget and finance for that trip. And so I integrated with Chart .js. I had these cute little graphs. I integrated with the Twilio API where you could send text messages from the platform. And I was so proud of it and I was so excited. And I think that that was what showed too, that excitement and that enthusiasm while I was talking about my work. And before the interview, I definitely looked up PHP a little bit. And so I wrote down some questions that I had regarding the language. They were using the Laravel framework. And so I found Laracasts, the website, amazing. And so I did a little research beforehand and tried to come up with some sort of salient questions to ask and show that I was genuinely interested in not only programming in this role, but in just learning the language in general. One of the questions that I always like to ask in an interview and that I encourage students to ask too, and this is especially true if you’re talking with someone in the tech field, if you’re talking to someone in the engineering division, I like to ask, “How do you keep learning? What resources do you like?” I’ll rattle off some of the resources that I use, ones that I really love, and then I’ll say, “I would love some more. What are your favorites?” [MUSIC BREAK][00:21:52] SY: So you get that job and I understand that in about two years, you moved up in the company and you became an engineering manager, which is very exciting, and you had engineers reporting to you. Is that right?[00:22:03] KE: Close. So I worked for Car Lease for about a year. Unfortunately, at that year mark, the company ran out of money, as startups are wanted to.[00:22:12] SY: As happens. Yeah, totally.[00:22:13] KE: As happens. And so I panicked a little bit, started looking for another job. This time I found it on Indeed. And I was reading this job posting. And you know that point in the movie when the sky opens up and like the doves come down and the ray of sun is shining? It was this watershed moment. I’m like, “Oh my God! This job posting is perfect for me.” It was the tech stack that I worked with. And it was a company that built software for nonprofits. And I had this history… [00:22:46] SY: Oh, perfect![00:22:47] KE: Yeah, I had this history of like writing grants and planning events. And so I just said to myself, “Oh my God! I would be perfect for this role.” And I kid you not, I put that word for word in my cover letter. Two hours later, I got a phone call and the woman on the other end said, “Oh my God! You would be perfect for this role. When can we get you into interview?” [00:23:07] SY: Oh, that’s wonderful. Oh my goodness! Oh, don’t you love when that aligns? I feel like one of my favorite moments when I’m interviewing people on this show is hearing about their past lives, their past careers intersecting with their current role as developers. So hearing that you came from this nonprofit background and were able to use that as an asset, as something that helped you stand out in a great way is really exciting. So that’s really inspiring to hear.[00:23:34] KE: Honestly, I think it’s that diversity that makes someone a good engineer, having a non-traditional background. Some people, I don’t think it’s as prevalent these days where people kind of look down on it if you don’t have a traditional computer science degree, but it certainly still happens. All I know is all the developers I’ve met, we come from such different disparate career paths. And it’s really interesting to see how those different individuals really approach problem solving. And I think different career paths really lend themselves well to transitioning to tech. And so this one just happened to be like the perfect job at the perfect time. And I was absolutely thrilled to come onto the team.[00:24:14] SY: Absolutely. So you joined, was it as an engineering manager? Was that the role you…?[00:24:19] KE: No, so I actually joined as an individual contributor. I think web developer I think was my original title or software engineer level one. They put me in charge of, A, as yet to be released product, a small like CRM platform for really, really small nonprofits to raise money. And so I was able to get that over the finish line and release to production. And then I started working with another engineer on the team. His name’s Joshua. Awesome dude. And we were building out a peer-to-peer fundraising platform. And so that was a wild ride. They wanted it out in like three or four months and it was just such a huge undertaking and a few sleepless nights here and there. But we did it and it was great. And about I would say a year and a half working for Neon One, I was, yeah, promoted to engineering manager.[00:25:16] SY: That’s exciting.[00:25:17] KE: It was. Very early though. It was kind of a surprise. To be honest with you, I had three engineers reporting to me and they were all older than me. They all had years more experience than I did under their belts. And so it was really intimidating. And I’m kind of sitting in these meetings thinking, “Well, what can I provide? What can I help you with?” [00:25:38] SY: What do you think it was about your background, maybe your personality that got you to that manager position, especially if you don’t have as much experience as these engineers and you’re kind of in charge of them? You’re, I’m assuming, telling them what to do to some extent. What do you think made them feel that you’d be good at that role, given that discrepancy in experience?[00:25:59] KE: Sure. I think it’s probably two things. Because trust me, I have spent some time thinking about this, like, “Oh my God, why did they pick me?” Imposter syndrome is very, very real. I think, first and foremost, one of the reasons that they promoted me was my ability to translate technical speak into, for lack of better terms, like layman’s terms. Coming from a non-traditional background, it is a big challenge to learn the lingo. Coding in and of itself is hard, but keeping all of these acronyms straight and understanding what is the cloud, what do all of these different things mean, and how do they relate to each other. I spent a lot of time trying to draw some parallels so that I could understand it better. And so that allowed me to work across different departments, like the marketing department, the product department, the design department, and really communicate our needs as a development team, I think, a little bit clearer. And my background in working with these special events, I was working with these really, really large donors, I’m talking like multi-million dollars. And so I got really good at talking to people and trying to be engaging and social. And so I think that is another reason why I was put into the engineering manager track.[00:27:21] SY: And eventually you ended up getting a very different role as an instructor at your old bootcamp, Actualize Coding Bootcamp, where I believe you did that on a part-time basis. Is that right?[00:27:31] KE: So it started off as part time. I would teach the graduate program. So after they went through the bootcamp, we were trying to keep them engaged with Actualize with the organization and keep them coding because that is really, really important. You don’t want to stop coding. It’s really easy to take a break for a weekend. Well, and that weekend soon becomes a week and that week soon becomes a month. And then pretty soon it’s been four months and you’re just sitting there, “Oh, God, I haven’t coded.” And so in an effort to keep people coding and engaged, we created a graduate program that taught technical interview preparation. So HackerRank, Leetcode style preparation, what to do when you get a take home assessment, how to build a project that you’re asked to build, what elements should you include, how to create a readme, polish your project. And so I was doing that on a part-time basis. They called me up one day and said, “Hey, have you ever thought about teaching full time?” And at that point, I really hadn’t. I enjoyed what I was doing, but they just made me an offer I couldn’t refuse. I’ve always loved the mentorship element of it and it was a great decision at the time. It’s been a wonderful two years, really, really a lot of fun.[00:28:58] SY: How did it feel from going from an individual contributor where you’re coding, you’re building product, you’re building features, you’re shipping, to one where you’re teaching? It feels like it’s such a fundamental shift in goals and the way you approach your day. What was that transition like?[00:29:15] KE: Oh, yeah. It was a little jarring and not necessarily in a bad way, but in addition to moving away from that individual contributor and that traditional nine-to-five schedule, I took over the evenings and the weekend program. So the very class that I myself took back in 2018, I found myself teaching. And so not only was I reorienting what it meant to go to work, but how I scheduled my day. And so as much as I love teaching, there was that small piece that I missed, that piece that I always felt was missing of coding every single day. And so I really tried to up my personal project game. What did I want to build? Where would my imagination take me? Because teaching the basics, the beginning, over and over again, I genuinely got worried that some of those “higher level skills” would begin to atrophy.[00:30:07] SY: Right. Right.[00:30:08] KE: Yeah, you get a little worried. And so I had to start inventing challenges for myself, HackerRank, Leetcode, doing algorithms, building out projects in Laravel to keep those skills alive, Vue, React, Ruby on Rails, since that’s what I was teaching now, really trying to build as many projects as possible so that I didn’t lose, first of all, the ability to build a project or contribute to a project, and second of all, so that I was happy. I love coding. Honestly, it feels like someone’s paying me to play a video game all day. It’s great.[00:30:40] SY: Oh, wow! Oh, that’s beautiful. That’s absolutely beautiful. So I’m wondering when you became a teacher, what did you notice or learn about the learning journey from that perspective? Because I’m assuming you got to see the perspective of not just your own journey learning to code, but the experience of dozens of other students going through that same journey. What did you pick up on as things to either avoid or maybe double down on if you’re a student learning how to code?[00:31:11] KE: Sure. So one of the main things that I notice, and it’s something that I have to continually remind students of, when you’re at the ground level, when you are in it and you are coding, it is really hard to see how far you have come because you’re getting stuck error after error and these semicolons, you just keep forgetting them or there’s one tiny little mistake, really it kind of sends your terminal into overdrive and you see red, literally all the error messages printing out. But if you take a step back and you look at where you started and how far you have come on your coding journey, it is so impressive and it is really good to do that every so often, because when you’re constantly learning something new and you’re troubleshooting errors left and right, you do have wins, don’t get me wrong, but it is hard. It’s hard to keep that level of enthusiasm up. And so just reminding them that this is not an easy task and that they are crushing it is really, really important. There is also something to be said for consistency and deliberate practice. I would much rather a student find 20 minutes a day to practice algorithms than spend like six or seven hours cranking them out like the day before class. This repetition and this daily practice and this daily habit is going to serve you well.[00:32:45] SY: Tell me more about how we can reflect on our journey and really appreciate how far we’ve come. What does that look like? If we wanted to make that actionable, is that writing one thing I learned at the end of each day? Is it reflecting on a weekly basis? What does it look like to take it all in and really see the forest for the trees?[00:33:09] KE: Oh, that’s a great question. I think it’s a combination of looking back at your GitHub history, looking at all the projects that you’ve built. I think it’s also keeping track of your wins, your successes. You mentioned writing something down every single day or every single week. We encourage our students. In the class that I’m teaching, I encourage them to keep a work journal. Not only to document what they’re currently learning, but to document their wins, their successes. And so it really works as this like brag document. I encourage people to keep it outside of the bootcamp. Like, “You should keep one for work, for your day-to-day at the office.” Hell, I think you should keep one every day, like in your personal life as well. It’s not a bad thing to record these personal triumphs and to record just the sheer amount that you are contributing and that you are learning. It’s really impressive when you look back on it and you take it all in. And so I think that that is one of the things that will keep you coding, that will keep you moving forward, having this history to look back on and say, “Oh wow, no, I really have learned a lot.” So that’s a great suggestion. I’m happy you brought that up.[00:34:20] SY: So you are teaching at Actualize Coding Bootcamp and then you have an opportunity to actually teach at Podium Education. What is Podium Education and what made you decide to take that on as well?[00:34:32] KE: Sure. So Podium Education is actually a part-time position and my class for this semester has just ended. They partner with universities across the country that may not have a robust tech program. And I teach the web development track, the intro to web development, and so it’s split up into two different sections. The first section is HTML, CSS, and Bootstrap, although I’m really pushing for some Tailwind integration, because I love it. And the latter half of the program is JavaScript. And so it’s learning how to write a loop, how to write an if conditional, different data types, how to work with objects, how to work with arrays. It’s a lot of people’s first exposure to tech. And I love seeing that lightbulb moment or that look of success and just unbridled joy on their face when their program is actually working. They’ve troubleshot the errors and it’s rendering on the page and they can click a button and it actually does something. And it’s awesome. Absolutely awesome.[00:35:38] SY: Absolutely. So now that you have been a teacher of a bootcamp, a student of a bootcamp, I’m wondering, when does a bootcamp not make sense? What is the situation that a student would be in where you might say, “You know what? I don’t think a bootcamp is a good fit”?[00:35:57] KE: That is the million-dollar question. So my current manager, Peter, he explained it to me this way and it makes a lot of sense. So there are some people who look at a coding bootcamp as a way to get rich quick. People think, “Oh, tech, money.” They’re not wrong. This is a very lucrative career path. But a coding bootcamp is not like a get-rich-quick scheme. He says, “Get upper-middle-class slowly scheme.” [00:36:33] SY: I like that. Yeah.[00:36:35] KE: It takes time. If you are someone who needs a job in like two or three months and you think, “Okay, coding bootcamp, and then I’m just going to get a job,” I don’t think it’d be an amazing fit. It takes some time, especially today’s job market. It’s really weird and it’s kind of stressful to look on LinkedIn and just see all these people, all these different layoffs. We are consistently finding that it is taking 6 to 12 months to get your first programming job. And so you need to have like the longevity in mind. You need to play the long game. And I would even say, I don’t want to be discouraging in any way, shape, or form, but the job search I think is harder than the bootcamp itself. You feel like you’re yelling into a void. You’re sending out application after application, you’re not hearing back or it’s just no thank you before you even get your foot in the door to say something to them. And so you really need to have some fortitude. It’s not even bootcamp students, just anybody in today’s job market. It’s rough out there.[00:37:43] SY: So you got into tech, into coding in 2018, before the pandemic, before all the recent layoffs we’ve been seeing. Spotify just laid people off. Salesforce happen recently. I feel like a bunch of them, it’s just layoff after layoff. And there feels like there’s a big crunch happening in tech.[00:38:02] KE: Yeah.[00:38:03] SY: I’m wondering, do you still recommend people learn to code? Do you still recommend this career path for people, given the economic climate, given how hard it is to break in? I mean, when I was learning to code, it took weeks to get a job. Now it takes, as you yourself said, 6 to 12 months. Is it still worth the work and the effort to learn to code?[00:38:28] KE: Yes. And I’m going to caveat that by saying, this is something that you are really interested in and you’re taking these programming courses and you’re loving it. Yeah, of course. Yes, I would definitely encourage you to still get into tech. I think a lot of people are worried with ChatGPT and all this AI software out there now that can write code that it’s going to come for our jobs. I don’t necessarily see that happening. I think that we’re only going to move into a more digital world. And so I certainly think there is still a market for people who want to learn to code, but you need to come into it with both eyes open. This is not going to be a quick and snappy process that it’s going to take some time. When I graduated, I could just send my resume out to a ton of different companies. But now we’re kind of seeing a little bit of a shift. The students who I’ve worked with who have gotten jobs recently, they have gotten those jobs through networking. That has really been a big player in 2022, 2023, networking to get your job. You don’t know who has a connection in tech that you may not have thought of.[00:39:39] SY: Absolutely. How do you network if you don’t have a network?[00:39:45] KE: There are so many different communities that exist now for people who are interested in programming. There are tons of different Slack channels, different Discord channels, different groups on Reddit. I am only scratching the surface. There’s meetup.com. All of these platforms have different organizations that you can join that are free to join where you can network with people. It’s location based. I’m in Chicago. You can find tech in Chicago, coding in Chicago. I’m a woman. I’m part of a group called Women and Non-Binary Individuals in Ruby. They have for different diversity groups. There are a lot of online resources for finding a network, but I’m also going to say, it doesn’t necessarily have to be tech people that you’re talking to because truly, there are connections that we haven’t even covered yet, like Six Degrees of Separation from Kevin Bacon. Everybody is connected to someone in tech somehow.[00:40:52] SY: Six Degrees of Tech Connection.[00:40:53] KE: Yeah.[00:40:54] SY: For sure. For sure. Coming up next, Katherine shares her advice for others who are just starting their coding journey after this.[MUSIC BREAK][00:41:18] SY: Any advice for people who are navigating this economic climate, who are in the middle of their learning journey, trying to figure it out, maybe feeling a little discouraged, a little overwhelmed? Any advice for those folks?[00:41:31] KE: My advice is truly, if it is something that you love to stick it out, to find a community that you can be a part of, whether it’s on Slack, whether it’s on Discord, whether it’s your friend group, to talk about these struggles, it might be a little bit more applicable to find other people who are learning to code and to really connect with them through, whether it’s a meetup, whether it’s your coding bootcamp, like we said, your fellow bootcamp students are some of your best resources. They’re your family for a little while. I strongly encourage students to keep coding with consistency. That’s another thing. I mentioned earlier on in this conversation where it’s easy to take a break and to let that break drag on for too long. I am all for taking a mental rest and for taking a physical rest. I truly think that there should be at least one day a week where you are not coding. Get outside, do something different, but always, always, always come back to coding because that consistency matters, that consistency day over day. If you are a hiring manager and you’re looking between two resumes, are you going to hire the person that is consistently coding or the person who you look at their GitHub and they haven’t made a commit in five months? But it’s hard. It is so hard, especially with the discouragement of this industry and this time. I don’t think we’ve ever seen more layoffs in the tech sector. I could be wrong.[00:43:04] SY: Yeah, it’s been a long time.[00:43:05] KE: I was born in the late ’80s. I don’t know what really happened before then, but it’s not easy. And I’m happy to talk to anyone. I will make myself available to talk to people about getting a job. I love it. I love looking at resumes. I love looking at cover letters. That’s another thing. I have had really great success in customizing my resume. And this may seem like a tired advice, but truly updating the title to match the job description. If I’m applying for a senior engineer role, I’m going to write, “I’m a senior engineer.” If I’m applying for a manager role, I’m going to write that I’m a manager. And then really highlighting your skills and putting emphasis on the ones that you find in the job description. It feels gross that you kind of have to reduce your resume to like a like a plug-and-play… [00:43:54] SY: A keyword search. Yeah.[00:43:55] KE: Yeah, like a keyword search. But that’s how people are getting interviews.[00:44:10] SY: Now at the end of every episode, we ask our guests to fill in the blanks of some very important questions. Katherine, are you ready to fill in the blanks?[00:44:17] KE: I am.[00:44:18] SY: Number one, worst advice I’ve ever received is?[00:44:21] KE: The worst advice I’ve ever received is you should sell your art.[00:44:25] SY: Oh, that’s very random. That’s not what I was expecting. Tell me more about that.[00:44:30] KE: So in addition to software engineering, I really like painting and I really like ceramics. It’s just the act of making something, whether it’s art, whether it’s programming, I took woodworking before too, I like making something. And so I love art and all these people are like, “Oh my God, this is so good! You should sell it.” And I thought about it for a little while, but then I started spiraling a little bit thinking, “Oh, but I really like doing it this way, but this is what sells. Should I change everything that I’m doing to make it sell?” And it stopped being fun for me. It stopped being a respite from my job and something that I do for just pure enjoyment. And so I’ve sort of stepped back. I now take it as a compliment and say, “Oh, not really interested. Thanks though.” [00:45:21] SY: Yeah. Yeah. Yeah. That makes a lot of sense. As soon as money gets involved, a lot of things stop being fun. So yeah, I understand that. Number two, best advice I’ve ever received is?[00:45:32] KE: The best advice I’ve ever received is from my very first manager in tech, Clay Johnson. He said, “Don’t try to learn everything all at once.” He saw me trying to learn PHP, trying to learn Laravel, trying to learn AWS. There is too much to know and you will 100 percent burn out. Do not try to learn everything all at once. And this goes, especially for people who are just getting into programming, focus on one or two things that really, really interest you. Maybe you’re interested in front-end development, so focus on CSS and JavaScript or focus on JavaScript in a particular framework. Maybe you’re interested in like data in the back end, pick a language, pick a framework or pick some sort of database to really dive into and go from there. But I see students all the time saying, “Okay, well, we’re learning Ruby and I want to get better at that,” but I’m also trying to learn Python and we’ve learned React, but Vue is really interesting too. And I’ve taken this course on Angular, but I’m also trying to get into AWS. And so I just have to slow them down and say, “Look, I love that enthusiasm, but you will burn out fast.” [00:46:44] SY: Absolutely. Focus is such an important skill in all areas of life, but especially when you’re learning to code for sure. Number three, my first coding project was about?[00:46:55] KE: My first coding project, at least the first one that I built end to end and was really proud of, it’s that travel website, Traveling on a Budget, that CRUD app in Ruby on Rails and Vue.js, where we got to plan a travel itinerary and track budget with Chart.js, Twilio. I got to demo it for all the parents that came to see people graduate.[00:47:19] SY: Very cool. Number four, one thing I wish I knew when I first started to code is?[00:47:24] KE: One thing I wish I knew was how to ask for help. I really struggle with asking for help. I don’t like the feeling of not knowing an answer or not knowing how to solve a problem. So it’s a real struggle for me. It’s an uncomfortable feeling to sit with too. But knowing how to ask for help and knowing when to ask for help is a really vital skill to learn, especially when you are just starting out, rather than saying, “Oh, please help me. This web request isn’t working and I don’t know what’s wrong.” Instead, share the ways that you’ve already tried to solve the problem when you’re hitting a roadblock. Maybe you’re saying, “Well, I’m getting this 404 error message in my terminal, but I’ve looked at my routes file and I see that the route exists, so I’ve restarted my server. I’ve cleared my cache, but I’m still seeing that error.” That is a much more interesting problem to solve. And now the senior dev you’re talking to is curious about it as well. So you’re kind of engaging them with the problem solving process as well. The other side of that is don’t wait too long to ask for help either. My general rule of thumb, especially for junior developers, is that 30-to-60 minute mark of struggling, spend some time trying to solve it yourself, but I would much rather have someone ask me a bunch of questions than find out three days later that no progress has been made because they’re still stuck at the same place.[00:48:58] SY: And especially I feel like at that level, when you’re just starting out, the risk is not just that you waste time, but that you waste time in completely the wrong thing.[00:49:10] KE: Oh, yeah. You could be running down the wrong path, like full speed.[00:49:13] SY: Completely wrong rabbit hole. Yeah, exactly. And you think you’re making progress. It sounds like you’re on the right track, but you are nowhere near the actual core of the problem. You’re debugging and just looking at all the wrong places because you just don’t have enough context. You just don’t know enough to know where you should even begin to look and begin to problem solve. So that’s, I feel, the biggest risk when you’re just starting out. So having those initial questions. Or even just spending the 20 minutes trying to debug and you don’t necessarily have to ask for the solution, but you can say, “This is where I’m stuck. This is what I’m investigating. Should I keep going or am I totally off?” [00:49:51] KE: Yeah. “Can you point me to the right direction?” Yes.[00:49:53] SY: Exactly. That alone can kind of help you save face a little bit if you’re feeling self-conscious, which hopefully you don’t. But if you do, that’s understandable. But also make sure that you’re not spending three days doing something that makes absolutely no sense.[00:50:05] KE: Exactly. Yeah.[00:50:07] SY: Well, thank you again so much, Katherine, for joining us. This was great.[00:50:09] KE: Thank you. I really appreciate it. This was awesome.[00:50:18] SY: Want to be in the CodeNewbie Podcast? Know someone who I should interview next? Reach out on Twitter at CodeNewbies or send me an email, hello@codenewbie.org. For more info on the podcast, check out www.codenewbie.org/podcast. And if you like the show, make sure to follow us and leave a review on your preferred platform so we can keep making the pod. Thanks for listening. See you next week.[END]",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n              \u003cp\u003e[00:00:05] SY: Welcome to the CodeNewbie Podcast where we talk to people on their coding journey in hopes of helping you on yours. I’m your host, Saron, and today we’re talking about being open to the unexpected with Katherine Evans, Lead Engineering Instructor at Actualize Coding Bootcamp, Live Lab Instructor at Podium Education, and Senior Engineer at Neon One.\u003c/p\u003e\u003cp\u003e[00:00:24] KE: They wanted someone who had three years of PHP experience. Well, I had never touched PHP. I had zero years of programming experience. I just graduated from a Ruby on Rails and a Vue.js bootcamp. And, you know, I said, “Why did you hire me?” And he said, “You were excited. You were willing to learn. You wanted to learn. I could tell.” And I think that is so, so, so important because this is a career path that you need to keep learning. There is never a point where you say, “Oh, I know everything. Great!” [00:00:55] SY: Katherine walks us through her journey from bootcamp student to bootcamp teacher, and shares her tips for recent grads looking to land their first role after this.\u003c/p\u003e\u003cp\u003e[MUSIC BREAK]\u003c/p\u003e\u003cp\u003e[00:01:11] SY: Thank you so much for being here.\u003c/p\u003e\u003cp\u003e[00:01:13] KE: Thank you so much for having me. This is an honor. I love Code Newbie.\u003c/p\u003e\u003cp\u003e[00:01:16] SY: Oh, wonderful! Glad to have you on the show. So you are currently doing a lot, really excited to get to unpacking and exploring all the things that you do. Three jobs is not easy. Kudos to you for having all those opportunities. I’m sure some of them were a little unexpected, but let’s start all the way at the beginning. Tell me what it was like for you growing up. Was tech part of your childhood at all?\u003c/p\u003e\u003cp\u003e[00:01:38] KE: It really wasn’t. I grew up early ’90s, dial up, your mom and dad yelling down to get off the internet because they have to make a phone call. Back then, I didn’t really understand tech. I didn’t really use the computer that often. In school, it was never made apparent that this was something that I could pursue. To be frank, I really didn’t start using the computer until high school for essays, papers you had to write. And coding came much, much later down the line. I think the first exposure to anything STEM-related was a CAD class I took in middle school, if you can believe it. And it’s weird. I remember absolutely loving that class. It was the first real technical class that I took, and then I remember switching to home ec after that and I was a little disappointed.\u003c/p\u003e\u003cp\u003e[00:02:30] SY: And when you were doing that, when you exploring CAT, and CAT, that’s the one where you like design and build stuff, right?\u003c/p\u003e\u003cp\u003e[00:02:35] KE: Yes.\u003c/p\u003e\u003cp\u003e[00:02:36] SY: Yeah. What did you build? Do you remember?\u003c/p\u003e\u003cp\u003e[00:02:39] KE: I do actually. So I still have it. It’s a metal toolbox. IT’S like hexagonal. And so it’s a lot of interesting folds and we got to put metal clasps on it, a metal handle. And I remember storing my nail polish in it, and I was super proud.\u003c/p\u003e\u003cp\u003e[00:02:54] SY: Very cool. Very cool. Oh, that sounds like fun. Did it ever occur to you that tech might be a career or something that you study, or was it just kind of these random electives that you took as part of school?\u003c/p\u003e\u003cp\u003e[00:03:07] KE: Just some random electives. It wasn’t even on my radar. Funnily enough, my brother really wanted to get into tech. I went to school for a nonprofit work. And we’ve kind of flip flopped later in life. I’m now in tech and he does nonprofit work, political work.\u003c/p\u003e\u003cp\u003e[00:03:25] SY: That’s funny.\u003c/p\u003e\u003cp\u003e[00:03:25] KE: We looked at each other and it’s that Spider Man meme.\u003c/p\u003e\u003cp\u003e[00:03:28] SY: Yeah. Got you. So I know that you went to college for, I think it was art history. Is that right?\u003c/p\u003e\u003cp\u003e[00:03:35] KE: I got a minor in art history. The degree was in arts management.\u003c/p\u003e\u003cp\u003e[00:03:39] SY: So you graduate school with your art management degree, decide that that probably wasn’t for you. So what did you do next?\u003c/p\u003e\u003cp\u003e[00:03:47] KE: So I graduate with an arts management degree. I spent some time getting a certificate in fundraising development. So one of the constants throughout my career and my education has also been a love of writing. And so I transitioned to working for nonprofits for these institutions where I became a grant writer. So for a couple of years, I like to say professionally begged for money. Yeah, writing these really large grants to different foundations.\u003c/p\u003e\u003cp\u003e[00:04:18] SY: And did you like that? Was that fun for you?\u003c/p\u003e\u003cp\u003e[00:04:20] KE: It was at the time. I was fulfilled working for nonprofits. It really does give you at the end of the day that warm, fuzzy feeling. They don’t pay the bills, warm, fuzzy feelings, but I did enjoy the work and it was rewarding when the grant writing paid off. I slowly started picking up some additional responsibilities. Nonprofit work is a lot like startup work. You have a shoestring budget. You have a small staff. You have to get a lot done with very few resources. And so in addition to grant writing, I started working on the events team. So I was planning special events, athletic events, big galas, and they also, being the youngest one at many of these nonprofits, they said, “Oh, you’re young. You must know tech. We’re going to give you all the tech stuff. You’re going to write our newsletter. You’re going to update our website.” So my first exposure to code was in an email template, writing some HTML and some CSS.\u003c/p\u003e\u003cp\u003e[00:05:25] SY: Okay. And how did you learn how to do that? Or was that just a lot of Googling? Did you ask for help? How’d you figure that out?\u003c/p\u003e\u003cp\u003e[00:05:31] KE: Oh yeah. It was a lot of trial and error, a lot of Googling. I didn’t really have anyone I could ask for help at my current company. They didn’t know what they were doing, let alone being able to come in and provide technical guidance. And so Google became one of my best friends during that time. And trial and error troubleshooting, I don’t even think I knew if Stack Overflow existed early 2000. I’m sure it did. But yeah, just a lot of Googling. I think I checked out some books at the library too, if you can believe it, on HTML and CSS. It was great.\u003c/p\u003e\u003cp\u003e[00:06:01] SY: And how did you feel about it? Did you start thinking, “Oh, maybe this is a fun avenue to explore”? Or was it just kind of another job duty for the job that you already had?\u003c/p\u003e\u003cp\u003e[00:06:09] KE: It was just another job duty. It hadn’t yet solidified as something that might be interesting to pursue. This was pretty early on in my nonprofit career. And so before going into tech, I fully made the transition to planning events. And I was working with our largest donors. They’ve donated half a million dollars or more. And so we throw them these lavish gala events. And still, tech wasn’t on my radar, which is unfortunate because I did not like event planning. It was not for me.\u003c/p\u003e\u003cp\u003e[00:06:44] SY: So you got this exposure to tech. It still feels like it’s just part of your job, not really something you’re considering as a career. What was it that made you finally look at it differently? Because I imagine at some point you said, “Hmm, maybe there’s something more to this. When did that moment happen for you?” [00:07:01] KE: That moment, it happened at my very last nonprofit job. I didn’t have a great team. Management was difficult to work with. I was not loving the work. I vividly remember driving into the office one day and I started crying. I was listening to a book on tape and it wasn’t even a particularly sad part and I just started sobbing and I realized, “Oh God, I hate my job, I hate my career. What am I going to do?” And I started to panic. Even then, tech was one of two options I was considering. I was also really interested in the healthcare field. I had some friends who were nurses. And so I was weighing these two options in my hand. And if I’m going to be honest, it came down to the fact that nursing required a lot more schooling. And I didn’t think I could stick it out in a job that I just abjectly hated for like two years while I got a nursing degree. And it actually turned out to be the best decision I ever made. I am just thrilled that I somehow found my way to coding.\u003c/p\u003e\u003cp\u003e[00:08:13] SY: When did you realize that it was going to be something you stuck with? What was the moment when it went from maybe this is a cool thing I’m investigating, I’m interested in, I’m feeling it out, trying to see if there’s a fit to, “Oh, yeah, this is for me, this is what I’m going to do”?\u003c/p\u003e\u003cp\u003e[00:08:28] KE: I don’t know that there was like a watershed moment. Tech, I know I’m not alone in this, but I’m not sure how many other people feel this way. But there are a lot of ups and downs where, still to this day when I’m dealing with bugs or issues, I’m questioning my entire career choice, but then you have a win and you finally see it succeed, your build succeeds or you build this feature and you release it and you see it on production and you see people using it. And it is just this satisfaction and this elation. And I think that it’s the satisfaction of building something that really solidified it for me. Writing a grant is nice planning, special event is nice, but they all feel very transitory. The event is over and what do you have to show for it? Nothing. Everything’s gone. But coding, you’re building something and it kind of lasts.\u003c/p\u003e\u003cp\u003e[00:09:24] SY: Absolutely. Absolutely. Tell me about the decision to do a bootcamp because when it comes to learning to code and making that transition, we can do bootcamp. We can go back to get our associates or our bachelor’s degree in computer science. We can just do the self-taught route, take a bunch of free courses or just cost effective, cheaper courses online, and just kind of do it on our own. There’s so many ways to get there, but you decided to do bootcamp. Tell me more about how you came to that conclusion.\u003c/p\u003e\u003cp\u003e[00:09:56] KE: Sure. So right away, I kind of ruled out like an associate degree or another bachelor’s degree. It was a little expensive. And again, I didn’t really necessarily have that time commitment to make. I did try the self-paced self, self-teaching route. But at that time, I was undiagnosed ADHD and my Udemy platform and a bunch of other software platforms that teach you to code, it just littered with courses that are like 10 percent done, 15 percent done.\u003c/p\u003e\u003cp\u003e[00:10:27] SY: Yeah. Yeah. I know the feeling.\u003c/p\u003e\u003cp\u003e[00:10:29] KE: Yeah. These are incredible resources, don’t get me wrong, but they are great resources for teaching you something new. They are not the best for reinforcing something that you already know, for this like deliberate practice mentality. It’s great for trying something new and exciting, but it’s never repetitive enough that anything sticks. And so I would take the course, I would feel really excited, but something would happen or I would get stuck at a certain point. And there was no one to really ask for help. And you just kind of forget if you don’t have that repetition and the consistency or the practice. And so self-pace just wasn’t cutting it for me. And the bootcamp kind of felt like an in between, sort of a bridge between like a traditional associates or a bachelor’s degree and really this self-paced, self-taught approach. It was not inexpensive, but I signed up and. And thankfully, there were grants for women in programming at the time. So it was great to make use of that. And it was wonderful to be in a group of students who were also making this career transition. It felt like I had found people who come from, even though we have different backgrounds, just sort of a similar recent life experience. And so it was really nice. It was bonding. And I still talk to my bootcamp cohort today.\u003c/p\u003e\u003cp\u003e[00:11:59] SY: Absolutely. I did a bootcamp as well after doing self-taught for a couple of months. And that cohort is everything, just having that group of people to understand the highs and the lows and to get through the tears with and high five with. This was just absolutely wonderful. Was your bootcamp in person? Was it online? What was the structure of it?\u003c/p\u003e\u003cp\u003e[00:12:19] KE: It was in person in the evenings and on the weekends. And so it was three and a half hours every weeknight, except for Friday and then it was an all day Sunday experience.\u003c/p\u003e\u003cp\u003e[00:12:30] SY: Very cool. How did you decide which bootcamp to go with? Because especially now there’s so many different ones. They teach slightly different things. There’s some that are in person, some that are daytime, evening, online, async. How did you pick the one that you went with?\u003c/p\u003e\u003cp\u003e[00:12:47] KE: Sure. I think I ended up where I went Actualize Coding Bootcamp because of the reviews that I found online. And even back then, it was kind of hard to pick a bootcamp because first of all, it’s a lot of money. And second of all, in addition to researching bootcamps, you also have these voices online saying, “Oh, don’t do a bootcamp. They’re not worth it.” Or, “These bootcamps are bad. They don’t teach you what you need to know,” or, “This bootcamp is a scam.” And so you’re just kind of paralyzed a little bit, at least initially. And so I tried to do as much research as possible. So I looked up all the reviews. I found people who had attended a couple of different bootcamps. And so I reached out to them to ask them questions about their experience. I reached out to a couple of teachers as well to see what is your teaching style, what is the teaching philosophy. And so it really helped me make an informed decision about where I went.\u003c/p\u003e\u003cp\u003e[00:13:44] SY: And what are your thoughts on the fact that it was in person? Because I’m wondering, for a lot of people, that’s just simply not an option. But if you have the opportunity to go in person, did it add anything to the experience or do you feel like it would have been fine if you were learning via Zoom and learning remotely?\u003c/p\u003e\u003cp\u003e[00:14:02] KE: I think that it would have been fine had it been remote. I actually don’t know that it was an option at that time for the bootcamp that I chose. And so in person was really the only choice. I didn’t mind it. The energy was really, really great. And I think I could focus a little bit more. But I teach at a bootcamp now, and so I teach all virtual classes. And so I try to make it as community driven as possible and still have time to socialize and engage with each other and work in different groups together. So I’m hoping that really nothing is lacking in that regard.\u003c/p\u003e\u003cp\u003e[00:14:39] SY: Absolutely. Tell me about what happened when the bootcamp ended. I’m assuming on your job search, you’re hunting for your first role, trying to figure all that out. How much time passed between the end of the bootcamp and you actually landing that first job?\u003c/p\u003e\u003cp\u003e[00:14:54] KE: Sure. So I graduated mid-September, I want to say like September 15th. My birthday is in November. And so I said, “You know what? I’m going to get a job by my birthday.” And everybody turned to me and they said, “Katherine that’s like two months. That’s no time. You need to give yourself more time.” [00:15:10] SY: That’s tight. Yeah.\u003c/p\u003e\u003cp\u003e[00:15:11] KE: It is. Yes. I got so, so, so lucky. I think it was a combination of the market at the time and the fact that I had so many hours a day to just apply, apply, apply. I employed what I affectionately call the spray-and-pray method, which is apply to as many jobs as possible, really to just get your resume out there. And it was difficult because I don’t know if it’s being a woman or coming from a different career path, but not fully fitting a job description really gave me like an uncomfortable feeling, like I was going to be found out or that they’re going to email me and say, “Well, you don’t fit every attribute that we’re looking for. How dare you apply to this job?” So that was a really hard hurdle to get over. But once I did, I was no looking back.\u003c/p\u003e\u003cp\u003e[00:16:03] SY: How did you end up getting that first job? Who is it with? How did it go?\u003c/p\u003e\u003cp\u003e[00:16:07] KE: Sure. So I got my first job through the platform AngelList, although I think it’s called something different now. I think it’s called Wellfound.\u003c/p\u003e\u003cp\u003e[00:16:14] SY: Wellfound.\u003c/p\u003e\u003cp\u003e[00:16:15] KE: Yeah.\u003c/p\u003e\u003cp\u003e[00:16:15] SY: Yeah. I don’t know why they did that. I think AngelList is great.\u003c/p\u003e\u003cp\u003e[00:16:18] KE: I don’t either. Yeah. AngelList is awesome. It was a great platform name. So I made myself a profile there. I had a profile on LinkedIn. I made one on Indeed. So I was looking at like four or five different job platforms and I was really surprised at the response rate I got from AngelList. It was certainly not high, but it was higher than every other platform. And this is going to sound really, really bad, and I apologize to Clay Johnson, who hired me for my first job, incredible man, incredible mentor, but I don’t remember applying to my first job.\u003c/p\u003e\u003cp\u003e[00:16:55] SY: Really?\u003c/p\u003e\u003cp\u003e[00:16:56] KE: I was applying to so many.\u003c/p\u003e\u003cp\u003e[00:16:59] SY: Like hundreds?\u003c/p\u003e\u003cp\u003e[00:17:00] KE: Yeah. Oh yeah.\u003c/p\u003e\u003cp\u003e[00:17:01] SY: What number are we?\u003c/p\u003e\u003cp\u003e[00:17:02] KE: Hundreds, yeah.\u003c/p\u003e\u003cp\u003e[00:17:02] SY: Yeah. Okay. Wow!\u003c/p\u003e\u003cp\u003e[00:17:03] KE: And so I was getting interviews and some of them were way above my technical ability and it was just kind of laughable. I’m sitting there in these testing environments online thinking, “Oh my God, what have I gotten myself into?” Then Car Lease came along, a small startup, a car leasing platform. Unfortunately, they are now defunct. Yeah, I got an email from Clay Johnson, who was CTO, the only developer at the company. And he asked to set up an interview. And so I go to the interview. Of course, I’m late because I could not find the office. It was on a very weird industrial street. And so inwardly panicking, I called the receptionist and she could tell the panic in my voice and she said, “It’s okay. Let me guide you.” I get into the office and I sit down and we have a fantastic conversation and I walk him through the code that I wrote. I even record a video of myself demoing it and I send it to him later. And the rest, as they say, is history. He offered me the role and he apologized that the salary was a little low, but I wasn’t going to tell him that I would have almost worked for free just to get my foot in the door.\u003c/p\u003e\u003cp\u003e[00:18:15] SY: Just to get that first job. Yeah, I know the feeling. Yeah, absolutely. So tell me about what you think it was about your application, about your interviewing that got you that job. What was it that you feel worked to your advantage?\u003c/p\u003e\u003cp\u003e[00:18:30] KE: Oh, great question. So it’s interesting because this is one of those applications. Like I went back and I looked at the job posting and they wanted someone who had three years of PHP experience. Well, I had never touched PHP. I had zero years of programming experience. I just graduated from a Ruby on Rails and a Vue.js bootcamp and no idea what PHP is at the time. I actually asked my manager, I actually asked Clay about three or four months into my tenure with Car Lease. I said, “Why did you hire me?” And he said, “You were excited. You were willing to learn. You wanted to learn. I could tell.” And I think that is so, so, so important. It’s not even about a passion for code, per se. It’s just this insatiable need to learn and finding interest in that process because it’s not an easy process. There are times where you feel really, really dumb while you’re trying to learn something. And if you could only see my Google history of silly things that I don’t remember, as far as programming goes, it would shock you, I’m sure. But it’s really, really important because this is a career path that you need to keep learning. There is never a point where you say, “Oh, I know everything. Great.” So yeah, having that drive, that love of learning is really crucial.\u003c/p\u003e\u003cp\u003e[00:19:51] SY: How do you think you displayed that in your interactions with your manager, with the company? Where are opportunities? When we’re applying the jobs and we’re communicating with people, we can show that enthusiasm and show that excitement, where does that show up?\u003c/p\u003e\u003cp\u003e[00:20:09] KE: Sure. So I think it shows up, first of all, in the portfolio that you build, the work that you display. The project that I had built was a travel website. So it was a CRUD app for planning travel itinerary, as well as tracking budget and finance for that trip. And so I integrated with Chart .js. I had these cute little graphs. I integrated with the Twilio API where you could send text messages from the platform. And I was so proud of it and I was so excited. And I think that that was what showed too, that excitement and that enthusiasm while I was talking about my work. And before the interview, I definitely looked up PHP a little bit. And so I wrote down some questions that I had regarding the language. They were using the Laravel framework. And so I found Laracasts, the website, amazing. And so I did a little research beforehand and tried to come up with some sort of salient questions to ask and show that I was genuinely interested in not only programming in this role, but in just learning the language in general. One of the questions that I always like to ask in an interview and that I encourage students to ask too, and this is especially true if you’re talking with someone in the tech field, if you’re talking to someone in the engineering division, I like to ask, “How do you keep learning? What resources do you like?” I’ll rattle off some of the resources that I use, ones that I really love, and then I’ll say, “I would love some more. What are your favorites?” [MUSIC BREAK]\u003c/p\u003e\u003cp\u003e[00:21:52] SY: So you get that job and I understand that in about two years, you moved up in the company and you became an engineering manager, which is very exciting, and you had engineers reporting to you. Is that right?\u003c/p\u003e\u003cp\u003e[00:22:03] KE: Close. So I worked for Car Lease for about a year. Unfortunately, at that year mark, the company ran out of money, as startups are wanted to.\u003c/p\u003e\u003cp\u003e[00:22:12] SY: As happens. Yeah, totally.\u003c/p\u003e\u003cp\u003e[00:22:13] KE: As happens. And so I panicked a little bit, started looking for another job. This time I found it on Indeed. And I was reading this job posting. And you know that point in the movie when the sky opens up and like the doves come down and the ray of sun is shining? It was this watershed moment. I’m like, “Oh my God! This job posting is perfect for me.” It was the tech stack that I worked with. And it was a company that built software for nonprofits. And I had this history… [00:22:46] SY: Oh, perfect!\u003c/p\u003e\u003cp\u003e[00:22:47] KE: Yeah, I had this history of like writing grants and planning events. And so I just said to myself, “Oh my God! I would be perfect for this role.” And I kid you not, I put that word for word in my cover letter. Two hours later, I got a phone call and the woman on the other end said, “Oh my God! You would be perfect for this role. When can we get you into interview?” [00:23:07] SY: Oh, that’s wonderful. Oh my goodness! Oh, don’t you love when that aligns? I feel like one of my favorite moments when I’m interviewing people on this show is hearing about their past lives, their past careers intersecting with their current role as developers. So hearing that you came from this nonprofit background and were able to use that as an asset, as something that helped you stand out in a great way is really exciting. So that’s really inspiring to hear.\u003c/p\u003e\u003cp\u003e[00:23:34] KE: Honestly, I think it’s that diversity that makes someone a good engineer, having a non-traditional background. Some people, I don’t think it’s as prevalent these days where people kind of look down on it if you don’t have a traditional computer science degree, but it certainly still happens. All I know is all the developers I’ve met, we come from such different disparate career paths. And it’s really interesting to see how those different individuals really approach problem solving. And I think different career paths really lend themselves well to transitioning to tech. And so this one just happened to be like the perfect job at the perfect time. And I was absolutely thrilled to come onto the team.\u003c/p\u003e\u003cp\u003e[00:24:14] SY: Absolutely. So you joined, was it as an engineering manager? Was that the role you…?\u003c/p\u003e\u003cp\u003e[00:24:19] KE: No, so I actually joined as an individual contributor. I think web developer I think was my original title or software engineer level one. They put me in charge of, A, as yet to be released product, a small like CRM platform for really, really small nonprofits to raise money. And so I was able to get that over the finish line and release to production. And then I started working with another engineer on the team. His name’s Joshua. Awesome dude. And we were building out a peer-to-peer fundraising platform. And so that was a wild ride. They wanted it out in like three or four months and it was just such a huge undertaking and a few sleepless nights here and there. But we did it and it was great. And about I would say a year and a half working for Neon One, I was, yeah, promoted to engineering manager.\u003c/p\u003e\u003cp\u003e[00:25:16] SY: That’s exciting.\u003c/p\u003e\u003cp\u003e[00:25:17] KE: It was. Very early though. It was kind of a surprise. To be honest with you, I had three engineers reporting to me and they were all older than me. They all had years more experience than I did under their belts. And so it was really intimidating. And I’m kind of sitting in these meetings thinking, “Well, what can I provide? What can I help you with?” [00:25:38] SY: What do you think it was about your background, maybe your personality that got you to that manager position, especially if you don’t have as much experience as these engineers and you’re kind of in charge of them? You’re, I’m assuming, telling them what to do to some extent. What do you think made them feel that you’d be good at that role, given that discrepancy in experience?\u003c/p\u003e\u003cp\u003e[00:25:59] KE: Sure. I think it’s probably two things. Because trust me, I have spent some time thinking about this, like, “Oh my God, why did they pick me?” Imposter syndrome is very, very real. I think, first and foremost, one of the reasons that they promoted me was my ability to translate technical speak into, for lack of better terms, like layman’s terms. Coming from a non-traditional background, it is a big challenge to learn the lingo. Coding in and of itself is hard, but keeping all of these acronyms straight and understanding what is the cloud, what do all of these different things mean, and how do they relate to each other. I spent a lot of time trying to draw some parallels so that I could understand it better. And so that allowed me to work across different departments, like the marketing department, the product department, the design department, and really communicate our needs as a development team, I think, a little bit clearer. And my background in working with these special events, I was working with these really, really large donors, I’m talking like multi-million dollars. And so I got really good at talking to people and trying to be engaging and social. And so I think that is another reason why I was put into the engineering manager track.\u003c/p\u003e\u003cp\u003e[00:27:21] SY: And eventually you ended up getting a very different role as an instructor at your old bootcamp, Actualize Coding Bootcamp, where I believe you did that on a part-time basis. Is that right?\u003c/p\u003e\u003cp\u003e[00:27:31] KE: So it started off as part time. I would teach the graduate program. So after they went through the bootcamp, we were trying to keep them engaged with Actualize with the organization and keep them coding because that is really, really important. You don’t want to stop coding. It’s really easy to take a break for a weekend. Well, and that weekend soon becomes a week and that week soon becomes a month. And then pretty soon it’s been four months and you’re just sitting there, “Oh, God, I haven’t coded.” And so in an effort to keep people coding and engaged, we created a graduate program that taught technical interview preparation. So HackerRank, Leetcode style preparation, what to do when you get a take home assessment, how to build a project that you’re asked to build, what elements should you include, how to create a readme, polish your project. And so I was doing that on a part-time basis. They called me up one day and said, “Hey, have you ever thought about teaching full time?” And at that point, I really hadn’t. I enjoyed what I was doing, but they just made me an offer I couldn’t refuse. I’ve always loved the mentorship element of it and it was a great decision at the time. It’s been a wonderful two years, really, really a lot of fun.\u003c/p\u003e\u003cp\u003e[00:28:58] SY: How did it feel from going from an individual contributor where you’re coding, you’re building product, you’re building features, you’re shipping, to one where you’re teaching? It feels like it’s such a fundamental shift in goals and the way you approach your day. What was that transition like?\u003c/p\u003e\u003cp\u003e[00:29:15] KE: Oh, yeah. It was a little jarring and not necessarily in a bad way, but in addition to moving away from that individual contributor and that traditional nine-to-five schedule, I took over the evenings and the weekend program. So the very class that I myself took back in 2018, I found myself teaching. And so not only was I reorienting what it meant to go to work, but how I scheduled my day. And so as much as I love teaching, there was that small piece that I missed, that piece that I always felt was missing of coding every single day. And so I really tried to up my personal project game. What did I want to build? Where would my imagination take me? Because teaching the basics, the beginning, over and over again, I genuinely got worried that some of those “higher level skills” would begin to atrophy.\u003c/p\u003e\u003cp\u003e[00:30:07] SY: Right. Right.\u003c/p\u003e\u003cp\u003e[00:30:08] KE: Yeah, you get a little worried. And so I had to start inventing challenges for myself, HackerRank, Leetcode, doing algorithms, building out projects in Laravel to keep those skills alive, Vue, React, Ruby on Rails, since that’s what I was teaching now, really trying to build as many projects as possible so that I didn’t lose, first of all, the ability to build a project or contribute to a project, and second of all, so that I was happy. I love coding. Honestly, it feels like someone’s paying me to play a video game all day. It’s great.\u003c/p\u003e\u003cp\u003e[00:30:40] SY: Oh, wow! Oh, that’s beautiful. That’s absolutely beautiful. So I’m wondering when you became a teacher, what did you notice or learn about the learning journey from that perspective? Because I’m assuming you got to see the perspective of not just your own journey learning to code, but the experience of dozens of other students going through that same journey. What did you pick up on as things to either avoid or maybe double down on if you’re a student learning how to code?\u003c/p\u003e\u003cp\u003e[00:31:11] KE: Sure. So one of the main things that I notice, and it’s something that I have to continually remind students of, when you’re at the ground level, when you are in it and you are coding, it is really hard to see how far you have come because you’re getting stuck error after error and these semicolons, you just keep forgetting them or there’s one tiny little mistake, really it kind of sends your terminal into overdrive and you see red, literally all the error messages printing out. But if you take a step back and you look at where you started and how far you have come on your coding journey, it is so impressive and it is really good to do that every so often, because when you’re constantly learning something new and you’re troubleshooting errors left and right, you do have wins, don’t get me wrong, but it is hard. It’s hard to keep that level of enthusiasm up. And so just reminding them that this is not an easy task and that they are crushing it is really, really important. There is also something to be said for consistency and deliberate practice. I would much rather a student find 20 minutes a day to practice algorithms than spend like six or seven hours cranking them out like the day before class. This repetition and this daily practice and this daily habit is going to serve you well.\u003c/p\u003e\u003cp\u003e[00:32:45] SY: Tell me more about how we can reflect on our journey and really appreciate how far we’ve come. What does that look like? If we wanted to make that actionable, is that writing one thing I learned at the end of each day? Is it reflecting on a weekly basis? What does it look like to take it all in and really see the forest for the trees?\u003c/p\u003e\u003cp\u003e[00:33:09] KE: Oh, that’s a great question. I think it’s a combination of looking back at your GitHub history, looking at all the projects that you’ve built. I think it’s also keeping track of your wins, your successes. You mentioned writing something down every single day or every single week. We encourage our students. In the class that I’m teaching, I encourage them to keep a work journal. Not only to document what they’re currently learning, but to document their wins, their successes. And so it really works as this like brag document. I encourage people to keep it outside of the bootcamp. Like, “You should keep one for work, for your day-to-day at the office.” Hell, I think you should keep one every day, like in your personal life as well. It’s not a bad thing to record these personal triumphs and to record just the sheer amount that you are contributing and that you are learning. It’s really impressive when you look back on it and you take it all in. And so I think that that is one of the things that will keep you coding, that will keep you moving forward, having this history to look back on and say, “Oh wow, no, I really have learned a lot.” So that’s a great suggestion. I’m happy you brought that up.\u003c/p\u003e\u003cp\u003e[00:34:20] SY: So you are teaching at Actualize Coding Bootcamp and then you have an opportunity to actually teach at Podium Education. What is Podium Education and what made you decide to take that on as well?\u003c/p\u003e\u003cp\u003e[00:34:32] KE: Sure. So Podium Education is actually a part-time position and my class for this semester has just ended. They partner with universities across the country that may not have a robust tech program. And I teach the web development track, the intro to web development, and so it’s split up into two different sections. The first section is HTML, CSS, and Bootstrap, although I’m really pushing for some Tailwind integration, because I love it. And the latter half of the program is JavaScript. And so it’s learning how to write a loop, how to write an if conditional, different data types, how to work with objects, how to work with arrays. It’s a lot of people’s first exposure to tech. And I love seeing that lightbulb moment or that look of success and just unbridled joy on their face when their program is actually working. They’ve troubleshot the errors and it’s rendering on the page and they can click a button and it actually does something. And it’s awesome. Absolutely awesome.\u003c/p\u003e\u003cp\u003e[00:35:38] SY: Absolutely. So now that you have been a teacher of a bootcamp, a student of a bootcamp, I’m wondering, when does a bootcamp not make sense? What is the situation that a student would be in where you might say, “You know what? I don’t think a bootcamp is a good fit”?\u003c/p\u003e\u003cp\u003e[00:35:57] KE: That is the million-dollar question. So my current manager, Peter, he explained it to me this way and it makes a lot of sense. So there are some people who look at a coding bootcamp as a way to get rich quick. People think, “Oh, tech, money.” They’re not wrong. This is a very lucrative career path. But a coding bootcamp is not like a get-rich-quick scheme. He says, “Get upper-middle-class slowly scheme.” [00:36:33] SY: I like that. Yeah.\u003c/p\u003e\u003cp\u003e[00:36:35] KE: It takes time. If you are someone who needs a job in like two or three months and you think, “Okay, coding bootcamp, and then I’m just going to get a job,” I don’t think it’d be an amazing fit. It takes some time, especially today’s job market. It’s really weird and it’s kind of stressful to look on LinkedIn and just see all these people, all these different layoffs. We are consistently finding that it is taking 6 to 12 months to get your first programming job. And so you need to have like the longevity in mind. You need to play the long game. And I would even say, I don’t want to be discouraging in any way, shape, or form, but the job search I think is harder than the bootcamp itself. You feel like you’re yelling into a void. You’re sending out application after application, you’re not hearing back or it’s just no thank you before you even get your foot in the door to say something to them. And so you really need to have some fortitude. It’s not even bootcamp students, just anybody in today’s job market. It’s rough out there.\u003c/p\u003e\u003cp\u003e[00:37:43] SY: So you got into tech, into coding in 2018, before the pandemic, before all the recent layoffs we’ve been seeing. Spotify just laid people off. Salesforce happen recently. I feel like a bunch of them, it’s just layoff after layoff. And there feels like there’s a big crunch happening in tech.\u003c/p\u003e\u003cp\u003e[00:38:02] KE: Yeah.\u003c/p\u003e\u003cp\u003e[00:38:03] SY: I’m wondering, do you still recommend people learn to code? Do you still recommend this career path for people, given the economic climate, given how hard it is to break in? I mean, when I was learning to code, it took weeks to get a job. Now it takes, as you yourself said, 6 to 12 months. Is it still worth the work and the effort to learn to code?\u003c/p\u003e\u003cp\u003e[00:38:28] KE: Yes. And I’m going to caveat that by saying, this is something that you are really interested in and you’re taking these programming courses and you’re loving it. Yeah, of course. Yes, I would definitely encourage you to still get into tech. I think a lot of people are worried with ChatGPT and all this AI software out there now that can write code that it’s going to come for our jobs. I don’t necessarily see that happening. I think that we’re only going to move into a more digital world. And so I certainly think there is still a market for people who want to learn to code, but you need to come into it with both eyes open. This is not going to be a quick and snappy process that it’s going to take some time. When I graduated, I could just send my resume out to a ton of different companies. But now we’re kind of seeing a little bit of a shift. The students who I’ve worked with who have gotten jobs recently, they have gotten those jobs through networking. That has really been a big player in 2022, 2023, networking to get your job. You don’t know who has a connection in tech that you may not have thought of.\u003c/p\u003e\u003cp\u003e[00:39:39] SY: Absolutely. How do you network if you don’t have a network?\u003c/p\u003e\u003cp\u003e[00:39:45] KE: There are so many different communities that exist now for people who are interested in programming. There are tons of different Slack channels, different Discord channels, different groups on Reddit. I am only scratching the surface. There’s meetup.com. All of these platforms have different organizations that you can join that are free to join where you can network with people. It’s location based. I’m in Chicago. You can find tech in Chicago, coding in Chicago. I’m a woman. I’m part of a group called Women and Non-Binary Individuals in Ruby. They have for different diversity groups. There are a lot of online resources for finding a network, but I’m also going to say, it doesn’t necessarily have to be tech people that you’re talking to because truly, there are connections that we haven’t even covered yet, like Six Degrees of Separation from Kevin Bacon. Everybody is connected to someone in tech somehow.\u003c/p\u003e\u003cp\u003e[00:40:52] SY: Six Degrees of Tech Connection.\u003c/p\u003e\u003cp\u003e[00:40:53] KE: Yeah.\u003c/p\u003e\u003cp\u003e[00:40:54] SY: For sure. For sure. Coming up next, Katherine shares her advice for others who are just starting their coding journey after this.\u003c/p\u003e\u003cp\u003e[MUSIC BREAK]\u003c/p\u003e\u003cp\u003e[00:41:18] SY: Any advice for people who are navigating this economic climate, who are in the middle of their learning journey, trying to figure it out, maybe feeling a little discouraged, a little overwhelmed? Any advice for those folks?\u003c/p\u003e\u003cp\u003e[00:41:31] KE: My advice is truly, if it is something that you love to stick it out, to find a community that you can be a part of, whether it’s on Slack, whether it’s on Discord, whether it’s your friend group, to talk about these struggles, it might be a little bit more applicable to find other people who are learning to code and to really connect with them through, whether it’s a meetup, whether it’s your coding bootcamp, like we said, your fellow bootcamp students are some of your best resources. They’re your family for a little while. I strongly encourage students to keep coding with consistency. That’s another thing. I mentioned earlier on in this conversation where it’s easy to take a break and to let that break drag on for too long. I am all for taking a mental rest and for taking a physical rest. I truly think that there should be at least one day a week where you are not coding. Get outside, do something different, but always, always, always come back to coding because that consistency matters, that consistency day over day. If you are a hiring manager and you’re looking between two resumes, are you going to hire the person that is consistently coding or the person who you look at their GitHub and they haven’t made a commit in five months? But it’s hard. It is so hard, especially with the discouragement of this industry and this time. I don’t think we’ve ever seen more layoffs in the tech sector. I could be wrong.\u003c/p\u003e\u003cp\u003e[00:43:04] SY: Yeah, it’s been a long time.\u003c/p\u003e\u003cp\u003e[00:43:05] KE: I was born in the late ’80s. I don’t know what really happened before then, but it’s not easy. And I’m happy to talk to anyone. I will make myself available to talk to people about getting a job. I love it. I love looking at resumes. I love looking at cover letters. That’s another thing. I have had really great success in customizing my resume. And this may seem like a tired advice, but truly updating the title to match the job description. If I’m applying for a senior engineer role, I’m going to write, “I’m a senior engineer.” If I’m applying for a manager role, I’m going to write that I’m a manager. And then really highlighting your skills and putting emphasis on the ones that you find in the job description. It feels gross that you kind of have to reduce your resume to like a like a plug-and-play… [00:43:54] SY: A keyword search. Yeah.\u003c/p\u003e\u003cp\u003e[00:43:55] KE: Yeah, like a keyword search. But that’s how people are getting interviews.\u003c/p\u003e\u003cp\u003e[00:44:10] SY: Now at the end of every episode, we ask our guests to fill in the blanks of some very important questions. Katherine, are you ready to fill in the blanks?\u003c/p\u003e\u003cp\u003e[00:44:17] KE: I am.\u003c/p\u003e\u003cp\u003e[00:44:18] SY: Number one, worst advice I’ve ever received is?\u003c/p\u003e\u003cp\u003e[00:44:21] KE: The worst advice I’ve ever received is you should sell your art.\u003c/p\u003e\u003cp\u003e[00:44:25] SY: Oh, that’s very random. That’s not what I was expecting. Tell me more about that.\u003c/p\u003e\u003cp\u003e[00:44:30] KE: So in addition to software engineering, I really like painting and I really like ceramics. It’s just the act of making something, whether it’s art, whether it’s programming, I took woodworking before too, I like making something. And so I love art and all these people are like, “Oh my God, this is so good! You should sell it.” And I thought about it for a little while, but then I started spiraling a little bit thinking, “Oh, but I really like doing it this way, but this is what sells. Should I change everything that I’m doing to make it sell?” And it stopped being fun for me. It stopped being a respite from my job and something that I do for just pure enjoyment. And so I’ve sort of stepped back. I now take it as a compliment and say, “Oh, not really interested. Thanks though.” [00:45:21] SY: Yeah. Yeah. Yeah. That makes a lot of sense. As soon as money gets involved, a lot of things stop being fun. So yeah, I understand that. Number two, best advice I’ve ever received is?\u003c/p\u003e\u003cp\u003e[00:45:32] KE: The best advice I’ve ever received is from my very first manager in tech, Clay Johnson. He said, “Don’t try to learn everything all at once.” He saw me trying to learn PHP, trying to learn Laravel, trying to learn AWS. There is too much to know and you will 100 percent burn out. Do not try to learn everything all at once. And this goes, especially for people who are just getting into programming, focus on one or two things that really, really interest you. Maybe you’re interested in front-end development, so focus on CSS and JavaScript or focus on JavaScript in a particular framework. Maybe you’re interested in like data in the back end, pick a language, pick a framework or pick some sort of database to really dive into and go from there. But I see students all the time saying, “Okay, well, we’re learning Ruby and I want to get better at that,” but I’m also trying to learn Python and we’ve learned React, but Vue is really interesting too. And I’ve taken this course on Angular, but I’m also trying to get into AWS. And so I just have to slow them down and say, “Look, I love that enthusiasm, but you will burn out fast.” [00:46:44] SY: Absolutely. Focus is such an important skill in all areas of life, but especially when you’re learning to code for sure. Number three, my first coding project was about?\u003c/p\u003e\u003cp\u003e[00:46:55] KE: My first coding project, at least the first one that I built end to end and was really proud of, it’s that travel website, Traveling on a Budget, that CRUD app in Ruby on Rails and Vue.js, where we got to plan a travel itinerary and track budget with Chart.js, Twilio. I got to demo it for all the parents that came to see people graduate.\u003c/p\u003e\u003cp\u003e[00:47:19] SY: Very cool. Number four, one thing I wish I knew when I first started to code is?\u003c/p\u003e\u003cp\u003e[00:47:24] KE: One thing I wish I knew was how to ask for help. I really struggle with asking for help. I don’t like the feeling of not knowing an answer or not knowing how to solve a problem. So it’s a real struggle for me. It’s an uncomfortable feeling to sit with too. But knowing how to ask for help and knowing when to ask for help is a really vital skill to learn, especially when you are just starting out, rather than saying, “Oh, please help me. This web request isn’t working and I don’t know what’s wrong.” Instead, share the ways that you’ve already tried to solve the problem when you’re hitting a roadblock. Maybe you’re saying, “Well, I’m getting this 404 error message in my terminal, but I’ve looked at my routes file and I see that the route exists, so I’ve restarted my server. I’ve cleared my cache, but I’m still seeing that error.” That is a much more interesting problem to solve. And now the senior dev you’re talking to is curious about it as well. So you’re kind of engaging them with the problem solving process as well. The other side of that is don’t wait too long to ask for help either. My general rule of thumb, especially for junior developers, is that 30-to-60 minute mark of struggling, spend some time trying to solve it yourself, but I would much rather have someone ask me a bunch of questions than find out three days later that no progress has been made because they’re still stuck at the same place.\u003c/p\u003e\u003cp\u003e[00:48:58] SY: And especially I feel like at that level, when you’re just starting out, the risk is not just that you waste time, but that you waste time in completely the wrong thing.\u003c/p\u003e\u003cp\u003e[00:49:10] KE: Oh, yeah. You could be running down the wrong path, like full speed.\u003c/p\u003e\u003cp\u003e[00:49:13] SY: Completely wrong rabbit hole. Yeah, exactly. And you think you’re making progress. It sounds like you’re on the right track, but you are nowhere near the actual core of the problem. You’re debugging and just looking at all the wrong places because you just don’t have enough context. You just don’t know enough to know where you should even begin to look and begin to problem solve. So that’s, I feel, the biggest risk when you’re just starting out. So having those initial questions. Or even just spending the 20 minutes trying to debug and you don’t necessarily have to ask for the solution, but you can say, “This is where I’m stuck. This is what I’m investigating. Should I keep going or am I totally off?” [00:49:51] KE: Yeah. “Can you point me to the right direction?” Yes.\u003c/p\u003e\u003cp\u003e[00:49:53] SY: Exactly. That alone can kind of help you save face a little bit if you’re feeling self-conscious, which hopefully you don’t. But if you do, that’s understandable. But also make sure that you’re not spending three days doing something that makes absolutely no sense.\u003c/p\u003e\u003cp\u003e[00:50:05] KE: Exactly. Yeah.\u003c/p\u003e\u003cp\u003e[00:50:07] SY: Well, thank you again so much, Katherine, for joining us. This was great.\u003c/p\u003e\u003cp\u003e[00:50:09] KE: Thank you. I really appreciate it. This was awesome.\u003c/p\u003e\u003cp\u003e[00:50:18] SY: Want to be in the CodeNewbie Podcast? Know someone who I should interview next? Reach out on Twitter at CodeNewbies or send me an email, hello@codenewbie.org. For more info on the podcast, check out www.codenewbie.org/podcast. And if you like the show, make sure to follow us and leave a review on your preferred platform so we can keep making the pod. Thanks for listening. See you next week.\u003c/p\u003e\u003cp\u003e[END]\u003c/p\u003e\n            \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "51 min read",
  "publishedTime": null,
  "modifiedTime": null
}
