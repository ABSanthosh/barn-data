{
  "id": "7d80052c-e6e3-4aaa-9967-d580df36078d",
  "title": "How Data Contracts Support Collaboration between Data Teams",
  "link": "https://www.infoq.com/news/2025/02/data-contracts-collaboration/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "Data contracts define the interface between data providers and consumers, specifying things like data models, quality guarantees, and ownership. They are essential for distributed data ownership in data mesh, ensuring data is discoverable, interoperable, and governed. Data contracts improve communication between teams and enhance the reliability and quality of data products. By Ben Linders",
  "author": "Ben Linders",
  "published": "Thu, 06 Feb 2025 11:47:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Data Mesh",
    "Specification",
    "Collaboration",
    "Agile Conferences",
    "Team Collaboration",
    "Big Data",
    "AI, ML \u0026 Data Engineering",
    "Culture \u0026 Methods",
    "news"
  ],
  "byline": "Ben Linders",
  "length": 6818,
  "excerpt": "Data contracts define the interface between data providers and consumers, specifying things like data models, quality guarantees, and ownership. They are essential for distributed data ownership in da",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s1_20250205131451/apple-touch-icon.png",
  "text": "Data contracts define the interface between data providers and consumers, specifying things like data models, quality guarantees, and ownership. According to Jochen Christ, they are essential for distributed data ownership in data mesh, ensuring data is discoverable, interoperable, and governed. Data contracts improve communication between teams and enhance the reliability and quality of data products. Jochen Christ spoke about data contracts at OOP conference. Data contracts are what APIs are for software systems, Christ said. They are an interface specification between a data provider and their data consumers. Data contracts specify the provided data model with the syntax, format, and semantics, but also contain data quality guarantees, service-level objectives, and terms and conditions for using the data, Christ mentioned. They also define the owner of the provided data product that is responsible if there are any questions or issues, he added. Data mesh is an important driver for data contracts, as data mesh introduces distributed ownership of data products, Christ said. Before that, we usually had just one central team that was responsible for all data and BI activities, with no need to specify interfaces with other teams. With a data mesh, we have multiple teams that exchange their data products over a shared infrastructure. This shift requires clear, standardized interfaces between teams to ensure data is discoverable, interoperable, and governed effectively, Christ explained: Data contracts provide a way to formalize these interfaces, enabling teams to independently develop, maintain, and consume data products while adhering to platform-wide standards. Christ mentioned that the main challenge teams face when exchanging data sets is to understand domain semantics. He gave some examples: If there is a field called \"order_timestamp\", is it the timestamp when the customer clicked on \"buy now\", is it the payment succeeded event, or is it the order confirmation email? Another example is enumerations, such as a \"status\" field, which highly depends on the implemented business process and exception-handling routines. Data contracts are written in YAML, so they are machine-readable, Christ said. Tools like Data Contract CLI can extract syntax, format, and quality checks from the data contract, connect to the data product, and test that the data product complies with the data contract specification. When these checks are included in a CI/CD deployment pipeline or data pipeline, data engineers can ensure that their data products are valid, Christ mentioned. Data users can rely on data contracts when consuming data from other teams, especially when data contracts are automatically tested and enforced, Christ said. This is a significant improvement compared to earlier practices, where data engineers had to manually trace the entire lineage of a field using lineage attributes to determine whether it was appropriate and trustworthy for their use case, he explained: By formalizing and automating these guarantees, data contracts make data consumption more efficient and reliable. Data providers benefit by gaining visibility into which consumers are accessing their data. Permissions can be automated accordingly, and when changes need to be implemented in a data product, a new version of the data contract can be introduced and communicated with the consumers, Christ said. With data contracts, we have very high-quality metadata, Christ said. This metadata can be further leveraged to optimize governance processes or build an enterprise data marketplace, enabling better discoverability, transparency, and automated access management across the organization to make data available for more teams. Data contracts are transforming the way data teams collaborate, Christ explained: For example, we can use data contracts as a tool for requirements engineering. A data consumer team can propose a draft data contract specifying the information they need for a particular use case. This draft serves as a basis for discussions with the data providers about whether the information is available in the required semantics or what alternatives might be feasible. Christ called this contract-first development. In this way, data contracts foster better communication between teams, he concluded. InfoQ interviewed Jochen Christ about data contracts. InfoQ: How do data contracts look? Jochen Christ: Data contracts are usually expressed as YAML documents, similar to OpenAPI specifications. dataContractSpecification: 1.1.0 info: title: Orders Latest owner: Checkout Team terms: usage: Data can be used for AI use cases. models: orders: type: table description: All webshop orders since 2020 fields: order_id: type: text format: uuid order_total: description: Total amount in cents. type: long required: true examples: - 9999 InfoQ: How do data contracts support exchanging data sets between teams? Christ: With data contracts, we have a technology-neutral way to express the semantics, and we can define data quality checks in the contract to test these guarantees and expectations. Here is a quick example: order_total: description: | Total amount in the smallest monetary unit (e.g., cents). The amount includes all discounts and shipping costs. The amount can be zero, but never negative. type: long required: true minimum: 0 examples: - 9999 classification: restricted quality: - type: sql description: 95% of all values are expected to be between 10 and 499 EUR. query: | SELECT quantile_cont(order_total, 0.95) AS percentile_95 FROM orders mustBeBetween: [1000, 49900] This is the metadata specification of a field \"order_total\" which not only defines the technical type (long), but also the business semantics that help to understand the values, e.g., it is important to understand that the amount is not in EUR, but in cents. There is a security classification defined (\"restricted\"), and the quality attribute defines business expectations that we can use to validate whether a dataset is valid or probably corrupt. InfoQ: How can we use data contracts to generate code and automated tests? Christ: In the previous \"order_total\" example, the data quality SQL query can be used by data quality tools (such as the Data Contract CLI) to execute data quality checks in deployment pipelines. In the same way, the CLI can generate code, such as SQL DDL statements, language-specific data models, or HTML exports from the data model in the data contract. About the Author Ben Linders",
  "image": "https://res.infoq.com/news/2025/02/data-contracts-collaboration/en/headerimage/how-data-contracts+-support-collaboration-header-1737369099516.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eData contracts define the interface between data providers and consumers, specifying things like data models, quality guarantees, and ownership. According to Jochen Christ, they are essential for distributed data ownership in data mesh, ensuring data is discoverable, interoperable, and governed. Data contracts improve communication between teams and enhance the reliability and quality of data products.\u003c/p\u003e\n\n\u003cp\u003eJochen Christ spoke about data contracts at \u003ca href=\"https://www.oop-konferenz.de/en\"\u003eOOP conference\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eData contracts are what APIs are for software systems, Christ said. They are an interface specification between a data provider and their data consumers. Data contracts specify the provided data model with the syntax, format, and semantics, but also contain data quality guarantees, service-level objectives, and terms and conditions for using the data, Christ mentioned. They also define the owner of the provided data product that is responsible if there are any questions or issues, he added.\u003c/p\u003e\n\n\u003cp\u003eData mesh is an important driver for data contracts, as data mesh introduces distributed ownership of data products, Christ said. Before that, we usually had just one central team that was responsible for all data and BI activities, with no need to specify interfaces with other teams.\u003c/p\u003e\n\n\u003cp\u003eWith a data mesh, we have multiple teams that exchange their data products over a shared infrastructure. This shift requires clear, standardized interfaces between teams to ensure data is discoverable, interoperable, and governed effectively, Christ explained:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eData contracts provide a way to formalize these interfaces, enabling teams to independently develop, maintain, and consume data products while adhering to platform-wide standards.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eChrist mentioned that the main challenge teams face when exchanging data sets is to understand domain semantics. He gave some examples:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIf there is a field called \u0026#34;order_timestamp\u0026#34;, is it the timestamp when the customer clicked on \u0026#34;buy now\u0026#34;, is it the payment succeeded event, or is it the order confirmation email?\u003c/p\u003e\n\n\u003cp\u003eAnother example is enumerations, such as a \u0026#34;status\u0026#34; field, which highly depends on the implemented business process and exception-handling routines.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eData contracts are written in YAML, so they are machine-readable, Christ said. Tools like \u003ca href=\"https://cli.datacontract.com\"\u003eData Contract CLI\u003c/a\u003e can extract syntax, format, and quality checks from the data contract, connect to the data product, and test that the data product complies with the data contract specification. When these checks are included in a CI/CD deployment pipeline or data pipeline, data engineers can ensure that their data products are valid, Christ mentioned.\u003c/p\u003e\n\n\u003cp\u003eData users can rely on data contracts when consuming data from other teams, especially when data contracts are automatically tested and enforced, Christ said. This is a significant improvement compared to earlier practices, where data engineers had to manually trace the entire lineage of a field using lineage attributes to determine whether it was appropriate and trustworthy for their use case, he explained:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eBy formalizing and automating these guarantees, data contracts make data consumption more efficient and reliable.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eData providers benefit by gaining visibility into which consumers are accessing their data. Permissions can be automated accordingly, and when changes need to be implemented in a data product, a new version of the data contract can be introduced and communicated with the consumers, Christ said.\u003c/p\u003e\n\n\u003cp\u003eWith data contracts, we have very high-quality metadata, Christ said. This metadata can be further leveraged to optimize governance processes or build an enterprise data marketplace, enabling better discoverability, transparency, and automated access management across the organization to make data available for more teams.\u003c/p\u003e\n\n\u003cp\u003eData contracts are transforming the way data teams collaborate, Christ explained:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eFor example, we can use data contracts as a tool for requirements engineering. A data consumer team can propose a draft data contract specifying the information they need for a particular use case. This draft serves as a basis for discussions with the data providers about whether the information is available in the required semantics or what alternatives might be feasible.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eChrist called this contract-first development. In this way, data contracts foster better communication between teams, he concluded.\u003c/p\u003e\n\n\u003cp\u003eInfoQ interviewed \u003ca href=\"https://www.linkedin.com/in/jochenchrist/\"\u003eJochen Christ\u003c/a\u003e about data contracts.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eInfoQ: How do data contracts look?\u003c/strong\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eJochen Christ\u003c/strong\u003e: Data contracts are usually expressed as YAML documents, similar to OpenAPI specifications.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003edataContractSpecification: 1.1.0\ninfo:\n title: Orders Latest\n owner: Checkout Team\nterms:\n usage: Data can be used for AI use cases.\nmodels:\n orders:\n   type: table\n   description: All webshop orders since 2020\n   fields:\n     order_id:\n       type: text\n       format: uuid\n     order_total:\n       description: Total amount in cents.\n       type: long\n       required: true\n       examples:\n         - 9999\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003eInfoQ: How do data contracts support exchanging data sets between teams?\u003c/strong\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eChrist\u003c/strong\u003e: With data contracts, we have a technology-neutral way to express the semantics, and we can define data quality checks in the contract to test these guarantees and expectations.\u003c/p\u003e\n\n\u003cp\u003eHere is a quick example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eorder_total:\n description: |\n   Total amount in the smallest monetary unit (e.g., cents).\n   The amount includes all discounts and shipping costs.\n   The amount can be zero, but never negative.\n type: long\n required: true\n minimum: 0\n examples:\n   - 9999\n classification: restricted\n quality:\n   - type: sql\n     description: 95% of all values are expected to be between 10 and 499 EUR.\n     query: |\n       SELECT quantile_cont(order_total, 0.95) AS percentile_95\n       FROM orders\n     mustBeBetween: [1000, 49900]\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis is the metadata specification of a field \u0026#34;order_total\u0026#34; which not only defines the technical type (long), but also the business semantics that help to understand the values, e.g., it is important to understand that the amount is not in EUR, but in cents. There is a security classification defined (\u0026#34;restricted\u0026#34;), and the quality attribute defines business expectations that we can use to validate whether a dataset is valid or probably corrupt.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003eInfoQ: How can we use data contracts to generate code and automated tests?\u003c/strong\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eChrist\u003c/strong\u003e: In the previous \u0026#34;order_total\u0026#34; example, the data quality SQL query can be used by data quality tools (such as the Data Contract CLI) to execute data quality checks in deployment pipelines.\u003c/p\u003e\n\n\u003cp\u003eIn the same way, the CLI can generate code, such as SQL DDL statements, language-specific data models, or HTML exports from the data model in the data contract.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Ben-Linders\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eBen Linders\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "8 min read",
  "publishedTime": "2025-02-06T00:00:00Z",
  "modifiedTime": null
}
