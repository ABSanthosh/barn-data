{
  "id": "d66fed04-6565-4e4f-96cf-cc4f6436dd9f",
  "title": "📣 Action required: Upcoming Update to SoundCloud API id fields",
  "link": "https://developers.soundcloud.com/blog/urn-num-to-string",
  "description": "To all developers using SoundCloud’s public API — we’re introducing an important change that will affect how you reference resources like…",
  "author": "",
  "published": "Tue, 29 Apr 2025 00:00:00 GMT",
  "source": "https://developers.soundcloud.com/blog/blog.rss",
  "categories": null,
  "byline": "",
  "length": 2450,
  "excerpt": "We’re introducing an important change that will affect how you reference resources like tracks, playlists, users and comments!",
  "siteName": "",
  "favicon": "",
  "text": "To all developers using SoundCloud’s public API — we’re introducing an important change that will affect how you reference resources like tracks, playlists, users and comments. 🧠 What’s Changing? SoundCloud’s resource identifiers (id) have always been numeric. As the platform grows, some of these numbers will soon exceed the maximum value of a 32-bit integer. To ensure forward compatibility and prevent broken integrations, we’re deprecating the id field and introducing a new field: urn — a string-based unique identifier. 🚨 As a result, the id field in API responses is now deprecated. We strongly recommend switching to the new urn field — a string-based unique identifier. 🗓️ Timeline Effective immediately: The id field is deprecated. By June 30th, 2025: Clients must switch to using the urn field. After June 30th: Services relying on the id field may experience degraded behavior: Partial data loss (e.g., new resources may not appear) Full API response failures in some cases ✅ What You Should Do Update your integrations to rely on the urn field instead of the id. The urn is a stable, unique string that will not be affected by integer limitations. 💡 Example Changes Here’s what the change looks like for different resource types: 🎵 Track Before: { \"id\": 12345678, \"title\": \"My Track\" } After: { \"urn\": \"soundcloud:tracks:12345678\", \"title\": \"My Track\" } 📁 Playlist Before: { \"id\": 98765432, \"title\": \"My Playlist\" } After: { \"urn\": \"soundcloud:playlists:98765432\", \"title\": \"My Playlist\" } 💬 Comment Before: { \"id\": 87654321, \"body\": \"Great track!\" } After: { \"urn\": \"soundcloud:comments:87654321\", \"body\": \"Great track!\" } Accessing resources via URN All the endpoints are ready to take either id or urn! Before: https://api.soundcloud.com/tracks/12345678 After: https://api.soundcloud.com/tracks/soundcloud:tracks:12345678 We recommend to move always URN going forward. Accessing via id is deprecated immediately! 📦 Bonus Tip To extract the numeric part of the URN for legacy support or internal mapping, you can parse the URN string — but we strongly discourage from doing, isntead treat the URN as the primary key moving forward. 💬 Need Help? If you have questions or run into issues, please reach out through our developer support channels, open issues on GitHub or check the updated documentation here. Let’s make this transition smooth — thanks for building with us ❤️",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cp\u003eTo all developers using SoundCloud’s public API — we’re introducing an important change that will affect how you reference resources like tracks, playlists, users and comments.\u003c/p\u003e\n\u003ch2\u003e🧠 What’s Changing?\u003c/h2\u003e\n\u003cp\u003eSoundCloud’s resource identifiers (id) have always been numeric. As the platform grows, some of these numbers will soon exceed the maximum value of a 32-bit integer.\nTo ensure forward compatibility and prevent broken integrations, we’re deprecating the id field and introducing a new field: urn — a string-based unique identifier.\u003c/p\u003e\n\u003cp\u003e🚨 As a result, the id field in API responses is now deprecated. We strongly recommend switching to the new urn field — a string-based unique identifier.\u003c/p\u003e\n\u003ch2\u003e🗓️ Timeline\u003c/h2\u003e\n\u003cp\u003eEffective immediately: The id field is deprecated.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBy June 30th, 2025:\u003c/strong\u003e Clients must switch to using the urn field.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eAfter June 30th\u003c/strong\u003e: Services relying on the id field may experience degraded behavior:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePartial data loss (e.g., new resources may not appear)\u003c/li\u003e\n\u003cli\u003eFull API response failures in some cases\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e✅ What You Should Do\u003c/p\u003e\n\u003cp\u003eUpdate your integrations to rely on the urn field instead of the id. The urn is a stable, unique string that will not be affected by integer limitations.\u003c/p\u003e\n\u003ch2\u003e💡 Example Changes\u003c/h2\u003e\n\u003cp\u003eHere’s what the change looks like for different resource types:\u003c/p\u003e\n\u003ch3\u003e🎵 Track\u003c/h3\u003e\n\u003cp\u003eBefore:\u003c/p\u003e\n\u003cdiv data-language=\"text\"\u003e\u003cpre\u003e\u003ccode\u003e  {\n    \u0026#34;id\u0026#34;: 12345678,\n    \u0026#34;title\u0026#34;: \u0026#34;My Track\u0026#34;\n  }\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter:\u003c/p\u003e\n\u003cdiv data-language=\"text\"\u003e\u003cpre\u003e\u003ccode\u003e  {\n    \u0026#34;urn\u0026#34;: \u0026#34;soundcloud:tracks:12345678\u0026#34;,\n    \u0026#34;title\u0026#34;: \u0026#34;My Track\u0026#34;\n  }\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003e📁 Playlist\u003c/h3\u003e\n\u003cp\u003eBefore:\u003c/p\u003e\n\u003cdiv data-language=\"text\"\u003e\u003cpre\u003e\u003ccode\u003e{\n  \u0026#34;id\u0026#34;: 98765432,\n  \u0026#34;title\u0026#34;: \u0026#34;My Playlist\u0026#34;\n}\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter:\u003c/p\u003e\n\u003cdiv data-language=\"text\"\u003e\u003cpre\u003e\u003ccode\u003e{\n  \u0026#34;urn\u0026#34;: \u0026#34;soundcloud:playlists:98765432\u0026#34;,\n  \u0026#34;title\u0026#34;: \u0026#34;My Playlist\u0026#34;\n}\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003e💬 Comment\u003c/h3\u003e\n\u003cp\u003eBefore:\u003c/p\u003e\n\u003cdiv data-language=\"text\"\u003e\u003cpre\u003e\u003ccode\u003e  {\n    \u0026#34;id\u0026#34;: 87654321,\n    \u0026#34;body\u0026#34;: \u0026#34;Great track!\u0026#34;\n  }\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter:\u003c/p\u003e\n\u003cdiv data-language=\"text\"\u003e\u003cpre\u003e\u003ccode\u003e  {\n    \u0026#34;urn\u0026#34;: \u0026#34;soundcloud:comments:87654321\u0026#34;,\n    \u0026#34;body\u0026#34;: \u0026#34;Great track!\u0026#34;\n  }\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3\u003eAccessing resources via URN\u003c/h3\u003e\n\u003cp\u003eAll the endpoints are ready to take \u003cstrong\u003eeither\u003c/strong\u003e id \u003cstrong\u003eor\u003c/strong\u003e urn!\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eBefore:\n\u003ccode\u003ehttps://api.soundcloud.com/tracks/12345678\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eAfter: \u003ccode\u003ehttps://api.soundcloud.com/tracks/soundcloud:tracks:12345678\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWe recommend to move always URN going forward. Accessing via id is deprecated immediately! \u003c/p\u003e\n\u003ch2\u003e📦 Bonus Tip\u003c/h2\u003e\n\u003cp\u003eTo extract the numeric part of the URN for legacy support or internal mapping, you can parse the URN string — but we strongly discourage from doing, isntead treat the URN as the primary key moving forward.\u003c/p\u003e\n\u003ch2\u003e💬 Need Help?\u003c/h2\u003e\n\u003cp\u003eIf you have questions or run into issues, please reach out through our developer support channels, open issues on GitHub or check the updated documentation \u003ca href=\"https://developers.soundcloud.com/docs/api/explorer/\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eLet’s make this transition smooth — thanks for building with us ❤️\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": null,
  "modifiedTime": null
}
