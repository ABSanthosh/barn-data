{
  "id": "56ec38d4-95ba-44ac-a507-1fb83b2b16c2",
  "title": "ClickHouse Reports 25% Performance Gain After Migrating Cloud Workloads to AWS ARM Instances",
  "link": "https://www.infoq.com/news/2025/02/clickhouse-arm-graviton/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "ClickHouse recently shared its migration strategy to AWS Graviton over the past six months, reporting a 25% performance improvement for end users. The engineering team outlines the steps taken to establish a performance baseline and transition the managed ClickHouse Cloud service to the new ARM deployment while handling large-scale production workloads. By Renato Losio",
  "author": "Renato Losio",
  "published": "Sat, 15 Feb 2025 06:29:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "EC2",
    "ClickHouse",
    "Cloud",
    "ARM",
    "DevOps",
    "Architecture \u0026 Design",
    "news"
  ],
  "byline": "Renato Losio",
  "length": 3621,
  "excerpt": "ClickHouse recently shared its migration strategy to AWS Graviton over the past six months, reporting a 25% performance improvement for end users. The engineering team outlines the steps taken to esta",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s1_20250213201515/apple-touch-icon.png",
  "text": "ClickHouse recently shared its migration strategy to AWS Graviton over the past six months, reporting a 25% performance improvement for end users. The engineering team outlines the steps taken to establish a performance baseline and transition the managed ClickHouse Cloud service to the new ARM deployment while handling large-scale production workloads. Starting with a deployment primarily on x86-based instances like M5 and R5, ClickHouse highlights the challenges of migrating data-intensive applications and the performance and cost benefits of adopting Graviton instances. Summarizing the compatibility assessment, benchmarking strategy, and risk analysis and mitigation, Kaushik Iska, engineering manager at ClickHouse, and Francesco Ciocchetti, senior cloud infrastructure engineer, write: We had to migrate some instances that were relying on intel only codecs such as deflate_qpl and zstd_qat. (...) To accurately measure the impact of the migration, we used a ClickBench \"like\" benchmark to test performance across both arm64 and amd64. Source: ClickHouse blog Released in 2016 under an Apache 2.0 license, ClickHouse is a popular open-source, column-oriented database for real-time workloads, with ClickHouse Cloud as its managed cloud-based offering. Due to limitations in the availability of larger Graviton instances, the ClickHouse team adopted a mixed-instance strategy, combining Graviton2 and Graviton3 general-purpose instances with local NVMe-based SSD block storage (m7gd and m6gd). All Graviton instances were managed using AWS Auto Scaling Groups and a custom ClickHouse autoscaler. Iska and Ciocchetti explain: To ensure smooth autoscaling with mixed instance types, we adjusted memory allocation on m6gd instances to match m7gd, preventing unschedulable pods. We also implemented dynamic pod allocation, directing those under 236Gi to ARM instances using a webhook with node selection changes. Furthermore, we overprovisioned capacity and optimized autoscaler logic to manage the \"architecture jump\" where pods might initially be scheduled on larger x86 instances and then potentially downsized to smaller ARM instances. Since its debut in 2018, AWS Graviton has evolved from the early Graviton1 instances with 16 Cortex-A72 cores to the latest Graviton4, which features 96 Neoverse-V2 cores and 12 channels of DDR5-5600 memory, providing significantly improved throughput and reduced latency. Reflecting on ClickHouse's article, Corey Quinn, chief cloud economist at The Duckbill Group, writes: Graviton is interesting, because for a while AWS was pushing it so hard that you just by default assumed that anyone talking about it was being required to do so by some contractual term or other. The reality is that it's insanely cost effective and you should be using it. Analyzing three different testing scenarios, the benchmarking plan demonstrated an overall 25% performance improvement across a wide range of queries. While performance gains on the CI logs cluster were modest, primarily due to being network-bound when reading from S3, ClickBench, a standardized benchmark simulating analytics workloads, showed more significant improvements, particularly in the Graviton4 scenario (r8g instances). According to the article, nearly 80% of ClickHouse's production vCPUs now run on Graviton3 general-purpose (m7gd or m7g) and memory-intensive (r7g and r7gd) instances. Meanwhile, AMD instances have declined to 17.32%. About the Author Renato Losio",
  "image": "https://res.infoq.com/news/2025/02/clickhouse-arm-graviton/en/headerimage/generatedHeaderImage-1739449850443.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eClickHouse recently shared its\u003ca href=\"https://clickhouse.com/blog/graviton-boosts-clickhouse-cloud-performance\"\u003e migration strategy to AWS Graviton\u003c/a\u003e over the past six months, reporting a 25% performance improvement for end users. The engineering team outlines the steps taken to establish a performance baseline and transition the managed ClickHouse Cloud service to the new ARM deployment while handling large-scale production workloads.\u003c/p\u003e\n\n\u003cp\u003eStarting with a deployment primarily on x86-based instances like M5 and R5, ClickHouse highlights the challenges of migrating data-intensive applications and the performance and cost benefits of adopting Graviton instances.\u003c/p\u003e\n\n\u003cp\u003eSummarizing the compatibility assessment, benchmarking strategy, and risk analysis and mitigation, \u003ca href=\"https://www.linkedin.com/in/kaushikiska/\"\u003eKaushik Iska\u003c/a\u003e, engineering manager at ClickHouse, and \u003ca href=\"https://www.linkedin.com/in/francesco-ciocchetti-70522a2/\"\u003eFrancesco Ciocchetti\u003c/a\u003e, senior cloud infrastructure engineer, write:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eWe had to migrate some instances that were relying on intel only codecs such as deflate_qpl and zstd_qat. (...) To accurately measure the impact of the migration, we used a ClickBench \u0026#34;like\u0026#34; benchmark to test performance across both arm64 and amd64.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cimg alt=\"\" data-src=\"news/2025/02/clickhouse-arm-graviton/en/resources/11_graviton_1071f52532-1739450042437.png\" src=\"https://imgopt.infoq.com/fit-in/3000x4000/filters:quality(85)/filters:no_upscale()/news/2025/02/clickhouse-arm-graviton/en/resources/11_graviton_1071f52532-1739450042437.png\" rel=\"share\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eSource: ClickHouse blog\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eReleased in 2016 under an Apache 2.0 license, \u003ca href=\"https://clickhouse.com/\"\u003eClickHouse\u003c/a\u003e is a popular open-source, column-oriented database for real-time workloads, with ClickHouse Cloud as its managed cloud-based offering.\u003c/p\u003e\n\n\u003cp\u003eDue to limitations in the availability of larger Graviton instances, the ClickHouse team adopted a mixed-instance strategy, combining Graviton2 and Graviton3 general-purpose instances with local NVMe-based SSD block storage (m7gd and m6gd). All Graviton instances were managed using AWS Auto Scaling Groups and a custom ClickHouse autoscaler. Iska and Ciocchetti explain:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eTo ensure smooth autoscaling with mixed instance types, we adjusted memory allocation on m6gd instances to match m7gd, preventing unschedulable pods. We also implemented dynamic pod allocation, directing those under 236Gi to ARM instances using a webhook with node selection changes. Furthermore, we overprovisioned capacity and optimized autoscaler logic to manage the \u0026#34;architecture jump\u0026#34; where pods might initially be scheduled on larger x86 instances and then potentially downsized to smaller ARM instances.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eSince its debut in 2018, AWS Graviton has evolved from the early Graviton1 instances with 16 Cortex-A72 cores to the latest Graviton4, which features 96 Neoverse-V2 cores and 12 channels of DDR5-5600 memory, providing significantly improved throughput and reduced latency. Reflecting on ClickHouse\u0026#39;s article, Corey Quinn, chief cloud economist at The Duckbill Group, \u003ca href=\"https://www.lastweekinaws.com/\"\u003ewrites\u003c/a\u003e:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eGraviton is interesting, because for a while AWS was pushing it so hard that you just by default assumed that anyone talking about it was being required to do so by some contractual term or other. The reality is that it\u0026#39;s insanely cost effective and you should be using it.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAnalyzing three different testing scenarios, the benchmarking plan demonstrated an overall 25% performance improvement across a wide range of queries. While performance gains on the CI logs cluster were modest, primarily due to being network-bound when reading from S3, \u003ca href=\"https://benchmark.clickhouse.com/hardware\"\u003eClickBench\u003c/a\u003e, a standardized benchmark simulating analytics workloads, showed more \u003ca href=\"https://pastila.nl/?000b1ba6/c224ddf960900f4f2d0d9e100cef5445.html\"\u003esignificant improvements\u003c/a\u003e, particularly in the Graviton4 scenario (r8g instances).\u003c/p\u003e\n\n\u003cp\u003eAccording to the article, nearly 80% of ClickHouse\u0026#39;s production vCPUs now run on Graviton3 general-purpose (m7gd or m7g) and memory-intensive (r7g and r7gd) instances. Meanwhile, AMD instances have declined to 17.32%.\u003c/p\u003e\n\n\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Renato-Losio\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eRenato Losio\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": "2025-02-15T00:00:00Z",
  "modifiedTime": null
}
