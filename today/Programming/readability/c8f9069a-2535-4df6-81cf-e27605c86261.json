{
  "id": "c8f9069a-2535-4df6-81cf-e27605c86261",
  "title": "Microsoft Announces AI Agent and Platform Updates at Build 2025",
  "link": "https://www.infoq.com/news/2025/05/microsoft-build-2025/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "At its annual developer conference, Build 2025, Microsoft introduced a set of updates focused on expanding the role of AI agents across Windows, GitHub, Azure, and Microsoft 365. By Daniel Dominguez",
  "author": "Daniel Dominguez",
  "published": "Fri, 30 May 2025 10:33:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Azure",
    "MSBuild",
    "Windows",
    "github",
    "Artificial Intelligence",
    "Agents",
    "Microsoft",
    "Microsoft Azure",
    "AI, ML \u0026 Data Engineering",
    "news"
  ],
  "byline": "Daniel Dominguez",
  "length": 4941,
  "excerpt": "At its annual developer conference, Build 2025, Microsoft introduced a set of updates focused on expanding the role of AI agents across Windows, GitHub, Azure, and Microsoft 365.",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s1_20250527074915/apple-touch-icon.png",
  "text": "At Build 2025, Microsoft announced updates aimed at extending the use of AI agents across Windows, GitHub, Azure, and Microsoft 365. The releases align with the company’s vision for an Agentic Web, where AI agents function more independently across platforms and services. GitHub Copilot Adds Autonomous Coding Agent Microsoft announced an upgrade to GitHub Copilot that transforms it from a code suggestion tool into an autonomous agent. The new Copilot agent can be assigned GitHub issues, generate pull requests, and revise code based on user feedback. It works asynchronously by creating isolated development environments, using reasoning to analyze code and propose changes. Security features include respect for branch protections and requirements for human approval before triggering automated workflows. The agent is available for GitHub Copilot Enterprise and Pro+ subscribers. Windows 11 Integrates Model Context Protocol Microsoft is integrating the Model Context Protocol (MCP), developed by Anthropic, directly into Windows 11. This allows AI agents to interact with native applications, system services, and external tools. Additionally, Microsoft launched Windows AI Foundry, a framework for running AI models locally on Windows devices. It supports both open-source and proprietary models across CPUs, GPUs, and NPUs, and is intended for use on Copilot+ PCs. These tools are designed to facilitate local AI processing for improved speed and privacy. Copilot Tuning Offers Low-Code Customization Microsoft 365 now includes a feature called Copilot Tuning, which allows organizations to tailor AI agents to their internal data and processes using a low-code interface. Built into Copilot Studio, the feature lets users fine-tune models without requiring technical expertise. It supports custom agents built on organizational knowledge, language, and workflows. Copilot Tuning will include prebuilt templates for tasks such as expert Q\u0026A, document generation, and summarization. Azure AI Foundry Expands Agent Tools Azure AI Foundry introduced updates aimed at simplifying the development and management of AI agents. The platform now supports models like Grok 3 from xAI, Flux Pro 1.1 from Black Forest Labs, and over 10,000 open-source models via Hugging Face. Developers can fine-tune these models using techniques such as LoRA, QLoRA, and DPO. Foundry Agent Service is now generally available, offering ready-to-use components for secure AI agent creation. Additional tools include a model leaderboard and a router that selects the most appropriate model per task. Microsoft Discovery Targets Scientific Research Microsoft unveiled a new platform called Microsoft Discovery, aimed at supporting scientific research using AI agents. The platform is designed to automate steps throughout the research lifecycle, from hypothesis generation to data analysis. Discovery uses modular components and integrates with domain-specific data sources and plugins. It relies on a graph-based knowledge engine to map and analyze relationships across scientific data sets, enabling collaboration between researchers and AI agents on routine and analytical tasks. Discussions about Microsoft Build 2025 reflect a mix of excitement, skepticism, and frustration, largely centered on the event’s AI-heavy focus, technical demos, and disruptions. In X, developers expressed excitement about GitHub Copilot’s new agent features, saying  They were thrilled about how it streamlines debugging and coding tasks. A user on r/AIAssisted was enthusiastic about the agentic web’s potential, particularly praising the revamped GitHub Copilot as an asynchronous coding agent, saying: It could transform how developers handle tasks like bug fixes, and appreciated Microsoft’s open-sourcing of Copilot Chat in VS Code for collaborative development. On r/dotnet, a user expressed disappointment, calling Build 2025 noting that even prominent presenters struggled with AI features, and felt Microsoft was overly focused on AI at the expense of other .NET advancements The era of failed AI demos Meanwhile Christiaan Brinkhoff, Product and Community Leader for Windows Cloud \u0026 AI shared: This is just the beginning... The future of #AI is being built right now across the cloud, on the edge and on Windows. From working with Windows 11 on the client to #Windows365 in the cloud, we’re building to support a broad range of scenarios, from AI development to core IT workflows, all with a security-first mindset. In summary, Microsoft’s updates reflect a broader push to embed AI agents across its platforms while supporting open standards and local execution. The company aims to make AI development more accessible and modular, with a focus on practical integration over hype. About the Author Daniel Dominguez",
  "image": "https://res.infoq.com/news/2025/05/microsoft-build-2025/en/headerimage/generatedHeaderImage-1748536687856.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eAt \u003ca href=\"https://news.microsoft.com/build-2025/\"\u003eBuild 2025\u003c/a\u003e, Microsoft announced updates aimed at extending the use of AI agents across Windows, GitHub, Azure, and Microsoft 365. The releases align with the company’s vision for an Agentic Web, where AI agents function more independently across platforms and services.\u003c/p\u003e\n\n\u003cp\u003e\u003cb\u003eGitHub Copilot Adds Autonomous Coding Agent\u003c/b\u003e\u003c/p\u003e\n\n\u003cp\u003eMicrosoft announced an upgrade to \u003ca href=\"https://github.blog/news-insights/product-news/github-copilot-meet-the-new-coding-agent/\"\u003eGitHub Copilot that transforms it from a code suggestion tool into an autonomous agent\u003c/a\u003e. The new Copilot agent can be assigned GitHub issues, generate pull requests, and revise code based on user feedback. It works asynchronously by creating isolated development environments, using reasoning to analyze code and propose changes. Security features include respect for branch protections and requirements for human approval before triggering automated workflows. The agent is available for GitHub Copilot Enterprise and Pro+ subscribers.\u003c/p\u003e\n\n\u003cp\u003e\u003cb\u003eWindows 11 Integrates Model Context Protocol\u003c/b\u003e\u003c/p\u003e\n\n\u003cp\u003eMicrosoft is integrating the \u003ca href=\"https://blogs.windows.com/windowsexperience/2025/05/19/securing-the-model-context-protocol-building-a-safer-agentic-future-on-windows/\"\u003eModel Context Protocol (MCP)\u003c/a\u003e, developed by Anthropic, directly into Windows 11. This allows AI agents to interact with native applications, system services, and external tools. Additionally, Microsoft launched \u003ca href=\"https://azure.microsoft.com/en-us/products/ai-foundry\"\u003eWindows AI Foundry\u003c/a\u003e, a framework for running AI models locally on Windows devices. It supports both open-source and proprietary models across CPUs, GPUs, and NPUs, and is intended for use on Copilot+ PCs. These tools are designed to facilitate local AI processing for improved speed and privacy.\u003c/p\u003e\n\n\u003cp\u003e\u003cb\u003eCopilot Tuning Offers Low-Code Customization\u003c/b\u003e\u003c/p\u003e\n\n\u003cp\u003eMicrosoft 365 now includes a feature called \u003ca href=\"https://www.microsoft.com/en-us/microsoft-365/blog/2025/05/19/introducing-microsoft-365-copilot-tuning-multi-agent-orchestration-and-more-from-microsoft-build-2025/\"\u003eCopilot Tuning\u003c/a\u003e, which allows organizations to tailor AI agents to their internal data and processes using a low-code interface. Built into Copilot Studio, the feature lets users fine-tune models without requiring technical expertise. It supports custom agents built on organizational knowledge, language, and workflows. Copilot Tuning will include prebuilt templates for tasks such as expert Q\u0026amp;A, document generation, and summarization.\u003c/p\u003e\n\n\u003cp\u003e\u003cb\u003eAzure AI Foundry Expands Agent Tools\u003c/b\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://azure.microsoft.com/en-us/blog/azure-ai-foundry-your-ai-app-and-agent-factory/\"\u003eAzure AI Foundry\u003c/a\u003e introduced updates aimed at simplifying the development and management of AI agents. The platform now supports models like Grok 3 from xAI, Flux Pro 1.1 from Black Forest Labs, and over 10,000 open-source models via Hugging Face. Developers can fine-tune these models using techniques such as LoRA, QLoRA, and DPO. Foundry Agent Service is now generally available, offering ready-to-use components for secure AI agent creation. Additional tools include a model leaderboard and a router that selects the most appropriate model per task.\u003c/p\u003e\n\n\u003cp\u003e\u003cb\u003eMicrosoft Discovery Targets Scientific Research\u003c/b\u003e\u003c/p\u003e\n\n\u003cp\u003eMicrosoft unveiled a new platform called \u003ca href=\"https://azure.microsoft.com/en-us/blog/transforming-rd-with-agentic-ai-introducing-microsoft-discovery/\"\u003eMicrosoft Discovery\u003c/a\u003e, aimed at supporting scientific research using AI agents. The platform is designed to automate steps throughout the research lifecycle, from hypothesis generation to data analysis. Discovery uses modular components and integrates with domain-specific data sources and plugins. It relies on a graph-based knowledge engine to map and analyze relationships across scientific data sets, enabling collaboration between researchers and AI agents on routine and analytical tasks.\u003c/p\u003e\n\n\u003cp\u003eDiscussions about Microsoft Build 2025 reflect a mix of excitement, skepticism, and frustration, largely centered on the event’s AI-heavy focus, technical demos, and disruptions.\u003c/p\u003e\n\n\u003cp\u003eIn \u003ca href=\"https://x.com/ashtom/status/1924496497543901407\"\u003eX\u003c/a\u003e, developers expressed excitement about GitHub Copilot’s new agent features, saying \u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThey were thrilled about how it streamlines debugging and coding tasks.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eA user on \u003ca href=\"https://www.reddit.com/r/AIAssisted/comments/1kr1j0d/microsofts_open_agentic_web_vision/\"\u003er/AIAssisted\u003c/a\u003e was enthusiastic about the agentic web’s potential, particularly praising the revamped GitHub Copilot as an asynchronous coding agent, saying:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIt could transform how developers handle tasks like bug fixes, and appreciated Microsoft’s open-sourcing of Copilot Chat in VS Code for collaborative development.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eOn \u003ca href=\"https://www.reddit.com/r/dotnet/comments/1ksziy3/microsoft_build_2025_the_era_of_failed_ai_demos/?utm_source=share\u0026amp;utm_medium=web3x\u0026amp;utm_name=web3xcss\u0026amp;utm_term=1\u0026amp;utm_content=share_button\"\u003er/dotnet\u003c/a\u003e, a user expressed disappointment, calling Build 2025 noting that even prominent presenters struggled with AI features, and felt Microsoft was overly focused on AI at the expense of other .NET advancements\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe era of failed AI demos\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eMeanwhile \u003ca href=\"https://x.com/Brinkhoff_C/status/1926993704620904707\"\u003eChristiaan Brinkhoff\u003c/a\u003e, Product and Community Leader for Windows Cloud \u0026amp; AI shared:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis is just the beginning... The future of #AI is being built right now across the cloud, on the edge and on Windows. From working with Windows 11 on the client to #Windows365 in the cloud, we’re building to support a broad range of scenarios, from AI development to core IT workflows, all with a security-first mindset.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eIn summary, Microsoft’s updates reflect a broader push to embed AI agents across its platforms while supporting open standards and local execution. The company aims to make AI development more accessible and modular, with a focus on practical integration over hype.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Daniel-Dominguez\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eDaniel Dominguez\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": "2025-05-30T00:00:00Z",
  "modifiedTime": null
}
