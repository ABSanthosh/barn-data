{
  "id": "0f2b242d-571f-451f-b3c2-af36edd77545",
  "title": "",
  "link": "http://scripting.com/2025/07/06.html#a154211",
  "description": "Kos is moving to WordPress. Very cool. It means people who write for Kos will be able to use my writing tools. I am sold on the idea of WordPress being the OS for the social web. That's the point of having a platform, we used to call it \"users and developers party together.\"",
  "author": "",
  "published": "Sun, 06 Jul 2025 15:42:11 GMT",
  "source": "http://scripting.com/rss.xml",
  "categories": null,
  "byline": "",
  "length": 3716,
  "excerpt": "Dave Winer, OG blogger, podcaster, developed first apps in many categories. Old enough to know better. It's even worse than it appears.",
  "siteName": "Scripting News",
  "favicon": "",
  "text": "It's even worse than it appears.. Kos is moving to WordPress. Very cool. It means people who write for Kos will be able to use my writing tools. I am sold on the idea of WordPress being the OS for the social web. That's the point of having a platform, we used to call it \"users and developers party together.\"# I saw that Matt backed off from porting Tumblr to run on top of WordPress, basically turning WP into an OS. I thought it was a brilliant idea, but probably overwhelming in complexity. But it was the right idea. We need fewer runtimes. If you can merge two runtimes, go for it. Anyway, this is all related to the \"open social web\" -- in fact it's central to it. We've got all these philosophically compatible platforms that are technologically unable to work with each other. But what if they all were really on the web? What could we build then? Everything. We would go back to the potential the web had before Twitter and Google Reader split the blogging world in two. I swear the answer is make it so that all these networks can do inbound and outbound RSS and build on the reality of the open social web, not just the hype. # I asked ChatGPT for two sentences on the Innovator's Dilemma -- \"[It] describes how successful companies can fail by focusing too heavily on sustaining innovations—improvements to existing products for current customers—while ignoring disruptive innovations that initially serve smaller markets but eventually overtake the mainstream. These disruptions often seem inferior at first, so established companies dismiss them, leaving space for new entrants to rise and dominate.\"# I've been playing a little game, trying to answer the question -- if I had a modern implementation of Frontier that ran on Linux and new Macs, just as it was in 1992 when we released it for the pre-OS/X Mac, what apps would I want to hook up to it right away? What would the verb set look like? # I'd start with the native verb set we had in Frontier for accessing the file system. And HTTP verbs of course. # Then I would add glue for WordPress, GitHub, Mastodon and Bluesky, just because I think having really simple scripting for each of those would make (some) people's brains explode. # I once had a young fellow challenge me on whether there was such a thing as scriptable apps. I was reminded of the days when I had to explain it but no one got it, then one day everyone got it as if they always did, and now we're back at the beginning again. There is such a thing. You can think of an app as a toolkit. What's behind the UI? Let me call it from outside your app. Let me combine the features of your product with other people's product. And you can do the exact same thing for apps that are running on the web. It was something a lot of people tried to do, like Magic Cap at General Magic, but we got it working and had regular nerds writing apps as if it was not amazing. It was, and it's now a long lost art. # If a version of Frontier came up that I could run on a Linux system, I would wish for a really simple interface to Node packages. I've got a great collection. I'd want to use them right away asap. # I also would like to be able to write code in Frontier in JavaScript. I'm very fluent in it these days. I can still program in UserTalk, the two languages are basically the same thing, though UserTalk has some nice affordances they haven't thought of yet in JavaScriptLand, and vice versa -- there are even more things JS can do that we hadn't thought of, which is only fair, they've been working on it a lot longer than we did. The language was basically frozen in the late 90s, and the verb set shortly after that. # Oh what would I do? It's fun to dream. #",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"idPageTopText\"\u003e\n\t\n\t\u003cp\u003eIt\u0026#39;s even worse than it appears..\u003c/p\u003e\n\t\u003c/div\u003e\u003cdiv id=\"idDayContainer\"\u003e\n\t\t\t\t\n\u003cp\u003e\u003ca name=\"a154211\"\u003e\u003c/a\u003e\u003cimg src=\"https://imgs.scripting.com/2024/05/17/innovatorsDilemma.png\"/\u003e\u003ca href=\"https://www.dailykos.com/story/2025/7/6/2331527/-Daily-Kos-is-moving-to-WordPress\"\u003eKos is moving to WordPress\u003c/a\u003e. Very cool. It means people who write for Kos will be able to use my writing tools. I am sold on the idea of WordPress being the OS for the social web. That\u0026#39;s the point of having a platform, we used to call it \u0026#34;users and developers party together.\u0026#34;\u003cspan\u003e\u003ca href=\"http://scripting.com/2025/07/06.html#a154211\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca name=\"a130724\"\u003e\u003c/a\u003eI saw that \u003ca href=\"https://techcrunch.com/2025/07/01/automattic-puts-tumblr-migration-to-wordpress-on-hold/\"\u003eMatt backed off\u003c/a\u003e from porting \u003ca href=\"https://daytona.scripting.com/search?q=tumblr\"\u003eTumblr\u003c/a\u003e to run on top of WordPress, basically turning WP into an OS. I thought it was a brilliant idea, but probably overwhelming in complexity. But it was the right idea. We need fewer runtimes. If you can merge two runtimes, go for it. Anyway, this is all related to the \u0026#34;open social web\u0026#34; -- in fact it\u0026#39;s central to it. We\u0026#39;ve got all these philosophically compatible platforms that are technologically unable to work with each other. But what if they all were really on the web? What could we build then? Everything. We would go back to the potential the web had before Twitter and Google Reader split the blogging world in two. I swear the answer is make it so that all these networks can do \u003ca href=\"http://scripting.com/2025/04/14/121946.html\"\u003einbound\u003c/a\u003e and outbound RSS and build on the reality of the open social web, not just the hype. \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/07/06.html#a130724\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca name=\"a142617\"\u003e\u003c/a\u003eI asked ChatGPT for two sentences on the \u003ca href=\"https://en.wikipedia.org/wiki/The_Innovator%27s_Dilemma\"\u003eInnovator\u0026#39;s Dilemma\u003c/a\u003e -- \u0026#34;[It] describes how successful companies can fail by focusing too heavily on sustaining innovations—improvements to existing products for current customers—while ignoring disruptive innovations that initially serve smaller markets but eventually overtake the mainstream. These disruptions often seem inferior at first, so established companies dismiss them, leaving space for new entrants to rise and dominate.\u0026#34;\u003cspan\u003e\u003ca href=\"http://scripting.com/2025/07/06.html#a142617\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cdiv\u003e\n\t\n\t\u003cul\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a004708\"\u003e\u003c/a\u003eI\u0026#39;ve been playing a little game, trying to answer the question -- if I had a modern implementation of Frontier that ran on Linux and new Macs, just as it was in 1992 when we released it for the pre-OS/X Mac, what apps would I want to hook up to it right away? What would the \u003ca href=\"https://docserver.scripting.com/\"\u003everb set\u003c/a\u003e look like? \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/07/06/004700.html#a004708\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a004755\"\u003e\u003c/a\u003eI\u0026#39;d start with the native verb set we had in Frontier for accessing the file system. And HTTP verbs of course.  \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/07/06/004700.html#a004755\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a004816\"\u003e\u003c/a\u003eThen I would add glue for WordPress, GitHub, Mastodon and Bluesky, just because I think having really simple scripting for each of those would make (some) people\u0026#39;s \u003ca href=\"https://daytona.scripting.com/search?q=%22mind%20bomb%22\"\u003ebrains explode\u003c/a\u003e. \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/07/06/004700.html#a004816\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-image=\"https://imgs.scripting.com/2023/09/14/kitchenComputer.png\" data-flincalendar=\"true\"\u003e\u003ca name=\"a004846\"\u003e\u003c/a\u003e\u003cimg src=\"https://imgs.scripting.com/2023/09/14/kitchenComputer.png\"/\u003eI once had a young fellow challenge me on whether there was such a thing as scriptable apps. I was reminded of the days when I had to explain it but no one got it, then one day everyone got it as if they always did, and now we\u0026#39;re back at the beginning again. There is such a thing. You can think of an app as a toolkit. What\u0026#39;s behind the UI? Let me call it from outside your app. Let me combine the features of your product with other people\u0026#39;s product. And you can do the exact same thing for apps that are running on the web. It was something a lot of people tried to do, like Magic Cap at General Magic, but we got it working and had regular nerds writing apps as if it was not amazing. It was, and it\u0026#39;s now a long lost art. \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/07/06/004700.html#a004846\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a005003\"\u003e\u003c/a\u003eIf a version of Frontier came up that I could run on a Linux system, I would wish for a really simple interface to Node packages. I\u0026#39;ve got a great \u003ca href=\"https://github.com/scripting?tab=repositories\"\u003ecollection\u003c/a\u003e. I\u0026#39;d want to use them right away asap. \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/07/06/004700.html#a005003\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a005052\"\u003e\u003c/a\u003eI also would like to be able to write code in Frontier in JavaScript. I\u0026#39;m very fluent in it these days. I can still program in UserTalk, the two languages are basically the same thing, though UserTalk has some nice affordances they haven\u0026#39;t thought of yet in JavaScriptLand, and vice versa -- there are even more things JS can do that we hadn\u0026#39;t thought of, which is only fair, they\u0026#39;ve been working on it a lot longer than we did. The language was basically frozen in the late 90s, and the verb set shortly after that. \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/07/06/004700.html#a005052\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a005235\"\u003e\u003c/a\u003eOh what would I do? It\u0026#39;s fun to dream. \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/07/06/004700.html#a005235\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003c/ul\u003e\n\n\t\u003c/div\u003e\n\n\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": null,
  "modifiedTime": null
}
