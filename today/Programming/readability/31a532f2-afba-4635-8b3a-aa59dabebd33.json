{
  "id": "31a532f2-afba-4635-8b3a-aa59dabebd33",
  "title": "GitLab Pages features review apps and multiple website deployment",
  "link": "https://about.gitlab.com/blog/2024/09/23/gitlab-pages-features-review-apps-and-multiple-website-deployment",
  "description": "",
  "author": "Matthew Macfarlane",
  "published": "2024-09-23T00:00:00.000Z",
  "source": "https://about.gitlab.com/atom.xml",
  "categories": null,
  "byline": "Matthew Macfarlane, Janis Altherr",
  "length": 7750,
  "excerpt": "GitLab Pages helps organizations reap the rewards of knowledge management, including better collaboration and accessibility. Learn how to use a new feature, Parallel Deployments.",
  "siteName": "GitLab",
  "favicon": "https://about.gitlab.com/blog/nuxt-images/ico/favicon-192x192.png?cache=2022041",
  "text": "GitLab Pages has long been a popular choice for hosting static websites, allowing users to showcase their projects, blogs, and documentation directly from their repositories. Before GitLab 17.4, you could only have a single version of your GitLab Pages website. So you couldn’t preview your changes or have multiple versions of your website deployed simultaneously. Now, with a Premium or Ultimate license, you can do both! Introducing Parallel Deployments With Parallel Deployments, users can now easily preview changes and manage multiple environments for their GitLab Pages sites. This enhancement allows seamless experimentation with new ideas, enabling users to confidently test and refine their sites. By catching any issues early, users can ensure the live site remains stable and polished, building on the already great foundation of GitLab Pages. Why Parallel Deployments is a game-changer Version control made easy If your project involves software development or documentation that covers multiple versions (such as user guides for different software releases), Parallel Deployments makes it easy to manage. Or you can use the feature to localize your website for different languages. Flexibility to experiment Want to try out a new design or feature? Parallel Deployments lets you experiment freely. You can create a separate version of your site to test new ideas without impacting the current site. This flexibility encourages creativity and continuous improvement. How to add review apps to your GitLab Pages project To add a review app to your GitLab Pages project, first enable the Parallel Deployments feature in your project: On the left sidebar, select \"Search\" or \"Go to\" and find your project. Select Deploy \u003e Pages. Under Settings, check the box near “Enable Parallel deployments.” Note: If you see the “Get started with Pages” screen instead of your Pages settings, you’ll need to create a (primary) deployment first. Either follow the steps on this page to set up your .gitlab-ci.yml from scratch. Or, if you already have one in your repository, run the pipeline manually by visiting Build \u003e Pipelines and clicking Run Pipeline. The next step is to edit your .gitlab-ci.yml file to create a deployment for each merge request (MR). Let’s assume you start with a .gitlab-ci.yml file somewhat like this: pages: stage: deploy script: - npm run build artifacts: paths: - public rules: - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH # only run this job when there's a commit to the default branch To also run the pages pipeline when there’s an MR being opened or updated, we can add another rule to pages.rules: - if: $CI_PIPELINE_SOURCE == \"merge_request_event\" If we only add this rule, however, each Pages job will always replace the main deployment – each time an MR is opened! You likely don’t want that to happen. To provide each individual deployment with its own URL, we’ve introduced the new pages.pages.path_prefix property. A Pages deployment with this configuration... pages: script: - ... artifacts: paths: - public pages: path_prefix: my-review-app ...will be available at https://my-pages-app-7fe824.gitlab.io/my-review-app, or, with unique domains disabled, https://my-group.gitlab.io/my-project/my-review-app. But there’s no need to hardcode the path_prefix. You can dynamically generate it using CI variables. That’s particularly useful for review apps – to create a path for each MR, use the CI_MERGE_REQUEST_IID variable: pages: script: - ... artifacts: paths: - public pages: path_prefix: mr-$CI_MERGE_REQUEST_IID An MR with the ID 114 would then automatically create a deployment at https://my-pages-app-7fe824.gitlab.io/mr-114. With those concepts at hand, we’d like our Pages job from above to dynamically create either a main deployment for the default branch, or a path_prefixed-review app for MR events. Let’s leverage job variables for this. First, let’s add a PAGES_PREFIX variable to the job: pages: stage: deploy script: - npm run build variables: PAGES_PREFIX: \"\" # No prefix by default pages: path_prefix: \"$PAGES_PREFIX\" # use whatever value is set in the variable artifacts: paths: - public rules: - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH By default, it’s an empty string. This is what we want for our default branch. Next, we’ll add said rule to the deployment. But this time, we can update the job variable if (and only if) said rule applies: pages: stage: deploy script: - npm run build variables: PAGES_PREFIX: \"\" # No prefix by default pages: path_prefix: \"$PAGES_PREFIX\" # use whatever value is set in the variable artifacts: paths: - public rules: - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH - if: $CI_PIPELINE_SOURCE == \"merge_request_event\" variables: PAGES_PREFIX: 'mr-$CI_MERGE_REQUEST_IID' # Prefix with the mr-\u003ciid\u003e, like `mr-123` Now you’re creating a deployment both when pushing to the default branch, and prefixed parallel deployments when creating or updating MRs! For the best experience, add the URL to the environment job property. This will add a link to the review app to the MR page: pages: stage: deploy script: - npm run build variables: PAGES_PREFIX: \"\" # No prefix by default pages: path_prefix: \"$PAGES_PREFIX\" # use whatever value is set in the variable environment: name: \"Pages ${PAGES_PREFIX}\" url: \"${CI_PAGES_URL}/${PAGES_PREFIX}\" artifacts: paths: - public rules: - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH - if: $CI_PIPELINE_SOURCE == \"merge_request_event\" variables: PAGES_PREFIX: 'mr-$CI_MERGE_REQUEST_IID' # Prefix with the mr-\u003ciid\u003e, like `mr-123` Congratulations, you’ve now set up MR review apps for your Pages site. How to deploy documentation for different versions of your product The Parallel Deployments feature is also a useful tool if you maintain the documentation of multiple versions of your software simultaneously. The below CI config will not only create a pages deployment when there is a commit to the default branch, but also for any commit to branches named “v1”, “v2,” or “v3”. pages: stage: deploy script: - ... variables: PAGES_PREFIX: \"$CI_COMMIT_BRANCH\" # Use the branch name by default pages: path_prefix: \"$PAGES_PREFIX\" # use whatever value is set in the variable environment: name: \"Pages ${PAGES_PREFIX}\" url: \"${CI_PAGES_URL}/${PAGES_PREFIX}\" artifacts: paths: - public rules: - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH variables: PAGES_PREFIX: '' # No prefix - if: $CI_COMMIT_BRANCH == 'v1' - if: $CI_COMMIT_BRANCH == 'v2' - if: $CI_COMMIT_BRANCH == 'v3' By using the $CI_COMMIT_BRANCH variable as the path_prefix value, each of these branches will deploy their documentation to their own sub-path of your website: The branch named v1 has its docs published to \u003cmy-domain\u003e/v1. The branch named v2 has its docs published to \u003cmy-domain\u003e/v2. The branch named v3 has its docs published to \u003cmy-domain\u003e/v3. A new commit to one of these branches will then trigger a new deployment to its respective path, keeping the documentation of multiple versions up to date. The Parallel Deployments feature is a significant upgrade to GitLab Pages, offering a more flexible and efficient way to manage your knowledge. Whether you're working on a small project or a large-scale site with multiple versions, this new capability will make your workflow smoother and more efficient. Visit our Parallel Deployments documentation to get started today! Feedback Share your ideas and other comments in our feedback issue!",
  "image": "https://images.ctfassets.net/r9o86ar0p03f/7c3TDgNgct9xQbmTJSw0de/3d8622af7ea29538e7f0d269f29bf715/blog-image-template-1800x945__1_.png?fm=webp\u0026w=820\u0026h=500",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv data-v-b794d8fe=\"\" data-v-7488832a=\"\" data-v-74bd29c6=\"\"\u003e\u003cp\u003e\u003ca href=\"https://docs.gitlab.com/ee/user/project/pages/\"\u003eGitLab Pages\u003c/a\u003e has long been a popular choice for hosting static websites, allowing users to showcase their projects, blogs, and documentation directly from their repositories.\u003c/p\u003e\n\u003cp\u003eBefore GitLab 17.4, you could only have a single version of your GitLab Pages website. So you couldn’t preview your changes or have multiple versions of your website deployed simultaneously. Now, with a Premium or Ultimate license, you can do both!\u003c/p\u003e\n\u003ch3 id=\"introducing-parallel-deployments\" tabindex=\"-1\"\u003eIntroducing Parallel Deployments \u003ca href=\"#introducing-parallel-deployments\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eWith Parallel Deployments, users can now easily preview changes and manage multiple environments for their GitLab Pages sites. This enhancement allows seamless experimentation with new ideas, enabling users to confidently test and refine their sites. By catching any issues early, users can ensure the live site remains stable and polished, building on the already great foundation of GitLab Pages.\u003c/p\u003e\n\u003ch3 id=\"why-parallel-deployments-is-a-game-changer\" tabindex=\"-1\"\u003eWhy Parallel Deployments is a game-changer \u003ca href=\"#why-parallel-deployments-is-a-game-changer\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eVersion control made easy\u003c/strong\u003e\u003cbr/\u003e\nIf your project involves software development or documentation that covers multiple versions (such as user guides for different software releases), Parallel Deployments makes it easy to manage. Or you can use the feature to localize your website for different languages.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eFlexibility to experiment\u003c/strong\u003e\u003cbr/\u003e\nWant to try out a new design or feature? Parallel Deployments lets you experiment freely. You can create a separate version of your site to test new ideas without impacting the current site. This flexibility encourages creativity and continuous improvement.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"how-to-add-review-apps-to-your-gitlab-pages-project\" tabindex=\"-1\"\u003eHow to add review apps to your GitLab Pages project \u003ca href=\"#how-to-add-review-apps-to-your-gitlab-pages-project\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eTo add a review app to your GitLab Pages project, first enable the Parallel Deployments feature in your project:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eOn the left sidebar, select \u0026#34;Search\u0026#34; or \u0026#34;Go to\u0026#34; and find your project.\u003c/li\u003e\n\u003cli\u003eSelect Deploy \u0026gt; Pages.\u003c/li\u003e\n\u003cli\u003eUnder Settings, check the box near “Enable Parallel deployments.”\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e If you see the “Get started with Pages” screen instead of your Pages settings, you’ll need to create a (primary) deployment first. Either follow the steps on this page to set up your \u003ccode\u003e.gitlab-ci.yml\u003c/code\u003e from scratch. Or, if you already have one in your repository, run the pipeline manually by visiting \u003cstrong\u003eBuild \u0026gt; Pipelines\u003c/strong\u003e and clicking \u003cstrong\u003eRun Pipeline\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eThe next step is to edit your \u003ccode\u003e.gitlab-ci.yml\u003c/code\u003e file to create a deployment for each merge request (MR). Let’s assume you start with a \u003ccode\u003e.gitlab-ci.yml\u003c/code\u003e file somewhat like this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003epages:\n  stage: deploy\n  script:\n    - npm run build\n  artifacts:\n    paths:\n    - public\n  rules:\n    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH # only run this job when there\u0026#39;s a commit to the default branch\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eTo also run the \u003ccode\u003epages\u003c/code\u003e pipeline when there’s an MR being opened or updated, we can add another rule to \u003ccode\u003epages.rules\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e- if: $CI_PIPELINE_SOURCE == \u0026#34;merge_request_event\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIf we only add this rule, however, each Pages job will always replace the main deployment – each time an MR is opened! You likely don’t want that to happen.\u003c/p\u003e\n\u003cp\u003eTo provide each individual deployment with its own URL, we’ve introduced the new \u003ccode\u003epages.pages.path_prefix\u003c/code\u003e property.\u003c/p\u003e\n\u003cp\u003eA Pages deployment with this configuration...\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003epages:\n  script:\n    - ...\n  artifacts:\n    paths:\n    - public\n  pages:\n    path_prefix: my-review-app\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e...will be available at \u003ccode\u003ehttps://my-pages-app-7fe824.gitlab.io/my-review-app\u003c/code\u003e, or, with unique domains disabled,  \u003ccode\u003ehttps://my-group.gitlab.io/my-project/my-review-app\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eBut there’s no need to hardcode the \u003ccode\u003epath_prefix\u003c/code\u003e. You can dynamically generate it using CI variables. That’s particularly useful for review apps – to create a path for each MR, use the \u003ccode\u003eCI_MERGE_REQUEST_IID\u003c/code\u003e variable:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003epages:\n  script:\n    - ...\n  artifacts:\n    paths:\n    - public\n  pages:\n    path_prefix: mr-$CI_MERGE_REQUEST_IID\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eAn MR with the ID 114 would then automatically create a deployment at \u003ccode\u003ehttps://my-pages-app-7fe824.gitlab.io/mr-114\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eWith those concepts at hand, we’d like our Pages job from above to dynamically create either a main deployment for the default branch, or a \u003ccode\u003epath_prefix\u003c/code\u003eed-review app for MR events. Let’s leverage job variables for this.\u003c/p\u003e\n\u003cp\u003eFirst, let’s add a \u003ccode\u003ePAGES_PREFIX\u003c/code\u003e variable to the job:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003epages:\n  stage: deploy\n  script:\n    - npm run build\n  variables:\n    PAGES_PREFIX: \u0026#34;\u0026#34; # No prefix by default\n  pages:\n    path_prefix: \u0026#34;$PAGES_PREFIX\u0026#34; # use whatever value is set in the variable\n  artifacts:\n    paths:\n    - public\n  rules:\n    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eBy default, it’s an empty string. This is what we want for our default branch.\u003c/p\u003e\n\u003cp\u003eNext, we’ll add said rule to the deployment. But this time, we can update the job variable if (and only if) said rule applies:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003epages:\n  stage: deploy\n  script:\n    - npm run build\n  variables:\n    PAGES_PREFIX: \u0026#34;\u0026#34; # No prefix by default\n  pages:\n    path_prefix: \u0026#34;$PAGES_PREFIX\u0026#34; # use whatever value is set in the variable\n  artifacts:\n    paths:\n    - public\n  rules:\n    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH\n    - if: $CI_PIPELINE_SOURCE == \u0026#34;merge_request_event\u0026#34;\n      variables:\n        PAGES_PREFIX: \u0026#39;mr-$CI_MERGE_REQUEST_IID\u0026#39; # Prefix with the mr-\u0026lt;iid\u0026gt;, like `mr-123`\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eNow you’re creating a deployment both when pushing to the default branch, and prefixed parallel deployments when creating or updating MRs!\u003c/p\u003e\n\u003cp\u003eFor the best experience, add the URL to the \u003ccode\u003eenvironment\u003c/code\u003e job property. This will add a link to the review app to the MR page:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003epages:\n  stage: deploy\n  script:\n    - npm run build\n  variables:\n    PAGES_PREFIX: \u0026#34;\u0026#34; # No prefix by default\n  pages:\n    path_prefix: \u0026#34;$PAGES_PREFIX\u0026#34; # use whatever value is set in the variable\n  environment:\n    name: \u0026#34;Pages ${PAGES_PREFIX}\u0026#34;\n    url: \u0026#34;${CI_PAGES_URL}/${PAGES_PREFIX}\u0026#34;\n  artifacts:\n    paths:\n    - public\n  rules:\n    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH\n    - if: $CI_PIPELINE_SOURCE == \u0026#34;merge_request_event\u0026#34;\n      variables:\n        PAGES_PREFIX: \u0026#39;mr-$CI_MERGE_REQUEST_IID\u0026#39; # Prefix with the mr-\u0026lt;iid\u0026gt;, like `mr-123`\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eCongratulations, you’ve now set up MR review apps for your Pages site.\u003c/p\u003e\n\u003ch3 id=\"how-to-deploy-documentation-for-different-versions-of-your-product\" tabindex=\"-1\"\u003eHow to deploy documentation for different versions of your product \u003ca href=\"#how-to-deploy-documentation-for-different-versions-of-your-product\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eThe Parallel Deployments feature is also a useful tool if you maintain the documentation of multiple versions of your software simultaneously.\u003c/p\u003e\n\u003cp\u003eThe below CI config will not only create a pages deployment when there is a commit to the default branch, but also for any commit to branches named “v1”, “v2,” or “v3”.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003epages:\n  stage: deploy\n  script:\n    - ...\n  variables:\n    PAGES_PREFIX: \u0026#34;$CI_COMMIT_BRANCH\u0026#34; # Use the branch name by default\n  pages:\n    path_prefix: \u0026#34;$PAGES_PREFIX\u0026#34; # use whatever value is set in the variable\n  environment:\n    name: \u0026#34;Pages ${PAGES_PREFIX}\u0026#34;\n    url: \u0026#34;${CI_PAGES_URL}/${PAGES_PREFIX}\u0026#34;\n  artifacts:\n    paths:\n    - public\n  rules:\n    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH\n      variables:\n        PAGES_PREFIX: \u0026#39;\u0026#39; # No prefix\n    - if: $CI_COMMIT_BRANCH == \u0026#39;v1\u0026#39;\n    - if: $CI_COMMIT_BRANCH == \u0026#39;v2\u0026#39;\n    - if: $CI_COMMIT_BRANCH == \u0026#39;v3\u0026#39;\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eBy using the \u003ccode\u003e$CI_COMMIT_BRANCH\u003c/code\u003e variable as the path_prefix value, each of these branches will deploy their documentation to their own sub-path of your website:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe branch named \u003ccode\u003ev1\u003c/code\u003e has its docs published to \u003ccode\u003e\u0026lt;my-domain\u0026gt;/v1\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eThe branch named \u003ccode\u003ev2\u003c/code\u003e has its docs published to \u003ccode\u003e\u0026lt;my-domain\u0026gt;/v2\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eThe branch named \u003ccode\u003ev3\u003c/code\u003e has its docs published to \u003ccode\u003e\u0026lt;my-domain\u0026gt;/v3\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eA new commit to one of these branches will then trigger a new deployment to its respective path, keeping the documentation of multiple versions up to date.\u003c/p\u003e\n\u003cp\u003eThe Parallel Deployments feature is a significant upgrade to GitLab Pages, offering a more flexible and efficient way to manage your knowledge. Whether you\u0026#39;re working on a small project or a large-scale site with multiple versions, this new capability will make your workflow smoother and more efficient.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eVisit our \u003ca href=\"https://docs.gitlab.com/ee/user/project/pages/#create-multiple-deployments\"\u003eParallel Deployments documentation\u003c/a\u003e to get started today!\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"feedback\" tabindex=\"-1\"\u003eFeedback \u003ca href=\"#feedback\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eShare your ideas and other comments in our \u003ca href=\"https://gitlab.com/gitlab-org/gitlab/-/issues/482040\"\u003efeedback issue\u003c/a\u003e!\u003c/p\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "9 min read",
  "publishedTime": "2024-09-23T00:00:00Z",
  "modifiedTime": null
}
