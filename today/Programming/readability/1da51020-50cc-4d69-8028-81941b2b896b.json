{
  "id": "1da51020-50cc-4d69-8028-81941b2b896b",
  "title": "Workaround for MySQL’s “can’t specify target table for update in FROM clause” Error",
  "link": "https://blog.jooq.org/workaround-for-mysqls-cant-specify-target-table-for-update-in-from-clause-error/",
  "description": "In MySQL, you cannot do this: The UPDATE statement will raise an error as follows: SQL Error [1093] [HY000]: You can’t specify target table ‘t’ for update in FROM clause People have considered this to be a bug in MySQL for ages, as most other RDBMS can do this without any issues, including MySQL clones: … Continue reading Workaround for MySQL’s “can’t specify target table for update in FROM clause” Error →",
  "author": "lukaseder",
  "published": "Wed, 20 Dec 2023 14:20:29 +0000",
  "source": "https://blog.jooq.org/feed",
  "categories": [
    "jooq-in-use",
    "sql",
    "FOR UPDATE",
    "from clause",
    "mysql",
    "target table"
  ],
  "byline": "Published by lukaseder I made jOOQ View all posts by lukaseder",
  "length": 995,
  "excerpt": "\"can't specify target table for update in FROM clause\" is an annoying limitation in MySQL, for which jOOQ automatically implements a workaround.",
  "siteName": "Java, SQL and jOOQ.",
  "favicon": "https://i0.wp.com/blog.jooq.org/wp-content/uploads/2021/08/jooq-logo-white-750x750-padded.png?fit=180%2C180\u0026ssl=1",
  "text": "In MySQL, you cannot do this: create table t (i int primary key, j int); insert into t values (1, 1); update t set j = (select max(j) from t) + 1; The UPDATE statement will raise an error as follows: SQL Error [1093] [HY000]: You can’t specify target table ‘t’ for update in FROM clause People have considered this to be a bug in MySQL for ages, as most other RDBMS can do this without any issues, including MySQL clones: MariaDB 10.2 SingleStore 6 (previously known as MemSQL) Luckily, jOOQ can easily transform such queries for you, whenever you’re trying to UPDATE or DELETE a target table, with a predicate that depends on the target table itself. In those cases, jOOQ will just apply the following workaround: update t set j = ( select * from ( select max(j) from t ) t ) + 1; Now, the query works without any syntactic issues. Similar workarounds are documented in the MySQL docs, but with jOOQ, you simply don’t have to think about this limitation.",
  "image": "https://i0.wp.com/blog.jooq.org/wp-content/uploads/2021/08/jooq-logo-white-750x750-padded.png?fit=750%2C750\u0026ssl=1",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003carticle id=\"post-12315\"\u003e\n\t\n\t\n\t\u003cdiv\u003e\n\t\t\n\u003cp\u003eIn MySQL, you cannot do this:\u003c/p\u003e\n\n\n\u003cdiv\u003e\u003cpre title=\"\"\u003ecreate table t (i int primary key, j int);\ninsert into t values (1, 1);\n\nupdate t\nset j = (select max(j) from t) + 1;\n\u003c/pre\u003e\u003c/div\u003e\n\n\n\u003cp\u003eThe \u003ccode\u003eUPDATE\u003c/code\u003e statement will raise an error as follows:\u003c/p\u003e\n\n\n\n\u003cblockquote\u003e\n\u003cp\u003eSQL Error [1093] [HY000]: You can’t specify target table ‘t’ for update in FROM clause\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\n\n\u003cp\u003ePeople have considered this to be a \u003ca href=\"https://bugs.mysql.com/bug.php?id=66455\" data-type=\"link\" data-id=\"https://bugs.mysql.com/bug.php?id=66455\"\u003ebug in MySQL\u003c/a\u003e for ages, as most other RDBMS can do this without any issues, including MySQL clones:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eMariaDB 10.2\u003c/li\u003e\n\n\n\n\u003cli\u003eSingleStore 6 (previously known as MemSQL)\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eLuckily, jOOQ can easily transform such queries for you, whenever you’re trying to \u003ccode\u003eUPDATE\u003c/code\u003e or \u003ccode\u003eDELETE\u003c/code\u003e a target table, with a predicate that depends on the target table itself. In those cases, jOOQ will just apply the following workaround:\u003c/p\u003e\n\n\n\u003cdiv\u003e\u003cpre title=\"\"\u003eupdate t\nset j = (\n  select *\n  from (\n    select max(j) from t\n  ) t\n) + 1;\n\u003c/pre\u003e\u003c/div\u003e\n\n\n\u003cp\u003eNow, the query works without any syntactic issues. \u003ca href=\"https://dev.mysql.com/doc/refman/8.0/en/update.html\" data-type=\"link\" data-id=\"https://dev.mysql.com/doc/refman/8.0/en/update.html\"\u003eSimilar workarounds are documented in the MySQL docs\u003c/a\u003e, but with jOOQ, you simply don’t have to think about this limitation. \u003c/p\u003e\n\t\u003c/div\u003e\n\t\n\n\t\t\t\n\t\t\u003c/article\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": "2023-12-20T14:20:29Z",
  "modifiedTime": "2023-12-04T14:27:31Z"
}
