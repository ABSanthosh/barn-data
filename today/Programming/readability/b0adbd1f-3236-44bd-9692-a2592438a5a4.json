{
  "id": "b0adbd1f-3236-44bd-9692-a2592438a5a4",
  "title": "Getting Started with GitLab: Understanding CI/CD",
  "link": "https://about.gitlab.com/blog/2025/04/25/getting-started-with-gitlab-understanding-ci-cd",
  "description": "",
  "author": "GitLab",
  "published": "2025-04-25T00:00:00.000Z",
  "source": "https://about.gitlab.com/atom.xml",
  "categories": null,
  "byline": "GitLab",
  "length": 6690,
  "excerpt": "Learn the basics of continuous integration/continuous delivery in this beginner's guide, including what CI/CD components are and how to create them.",
  "siteName": "GitLab",
  "favicon": "https://about.gitlab.com/blog/nuxt-images/ico/favicon-192x192.png?cache=2022041",
  "text": "Imagine a workflow where every code change is automatically built, tested, and deployed to your users. That's the power of Continuous Integration/Continuous Delivery (CI/CD)! CI/CD helps you catch bugs early, ensures code quality, and delivers software faster and more frequently. What is CI/CD? Continuous Integration is a development practice where developers integrate code changes into a shared repository frequently, preferably several times a day. Each integration is then verified by an automated build and test process, allowing teams to detect problems early. Continuous Delivery extends CI by automating the release pipeline, ensuring that your code is always in a deployable state. You can deploy your application to various environments (e.g., staging, production) with a single click or automatically. Continuous Deployment takes it a step further by automatically deploying every successful build to production. This requires a high degree of confidence in your automated tests and deployment process. Why GitLab CI/CD? GitLab CI/CD is a powerful, integrated system that comes built-in with GitLab. It offers a seamless experience for automating your entire software development lifecycle. With GitLab CI/CD, you can: Automate everything: Build, test, and deploy your applications with ease. Catch bugs early: Detect and fix errors before they reach production. Get faster feedback: Receive immediate feedback on your code changes. Improve collaboration: Work together more effectively with automated workflows. Accelerate delivery: Release software faster and more frequently. Reduce risk: Minimize deployment errors and rollbacks. The elements of GitLab CI/CD .gitlab-ci.yml: This YAML file, located in your project's root directory, defines your CI/CD pipeline, including stages, jobs, and runners. GitLab Runner: This agent executes your CI/CD jobs on your infrastructure (e.g. physical machines, virtual machines, Docker containers, or Kubernetes clusters). Stages: Stages define the order of execution for your jobs (e.g. build, test, and deploy). Jobs: Jobs are individual units of work within a stage (e.g. compile code, run tests, and deploy to staging). Setting up GitLab CI Getting started with GitLab CI is simple. Here's a basic example of a .gitlab-ci.yml file: stages: - build - test - deploy build_job: stage: build script: - echo \"Building the application...\" test_job: stage: test script: - echo \"Running tests...\" deploy_job: stage: deploy script: - echo \"Deploying to production...\" environment: name: production This configuration defines three stages: \"build,\" \"test,\" and \"deploy.\" Each stage contains a job that executes a simple script. CI/CD configuration examples Let's explore some more realistic examples. Building and deploying a Node.js application The pipeline definition below outlines using npm to build and test a Node.js application and dpl to deploy the application to Heroku. The deploy stage of the pipeline makes use of GitLab CI/CD variables, which allow developers to store sensitive information (e.g. credentials) and securely use them in CI/CD processes. In this example, an API key to deploy to Heroku is stored under the variable key name $HEROKU_API_KEY used by the dpl tool. stages: - build - test - deploy build: stage: build image: node:latest script: - npm install - npm run build test: stage: test image: node:latest script: - npm run test deploy: stage: deploy image: ruby:latest script: - gem install dpl - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY Deploying to different environments (staging and production) GitLab also offers the idea of Environments with CI/CD. This feature allows users to track deployments from CI/CD to infrastructure targets. In the example below, the pipeline adds stages with an environment property for a staging and production environment. While the deploy_staging stage will always run its script, the deploy_production stage requires manual approval to prevent accidental deployment to production. stages: - build - test - deploy_staging - deploy_production build: # ... test: # ... deploy_staging: stage: deploy_staging script: - echo \"Deploying to staging...\" environment: name: staging deploy_production: stage: deploy_production script: - echo \"Deploying to production...\" environment: name: production when: manual # Requires manual approval GitLab Auto DevOps GitLab Auto DevOps simplifies CI/CD by providing a pre-defined configuration that automatically builds, tests, and deploys your applications. It leverages best practices and industry standards to streamline your workflow. To enable Auto DevOps: Go to your project's Settings \u003e CI/CD \u003e General pipelines. Enable the Auto DevOps option. Auto DevOps automatically detects your project's language and framework and configures the necessary build, test, and deployment stages. You donâ€™t even need to create a .gitlab-ci.yml file. CI/CD Catalog The CI/CD Catalog is a list of projects with published CI/CD components you can use to extend your CI/CD workflow. Anyone can create a component project and add it to the CI/CD Catalog or contribute to an existing project to improve the available components. You can find published components in the CI/CD Catalog on GitLab.com. Tutorial: How to set up your first GitLab CI/CD component CI templates You can also create your own CI templates to standardize and reuse CI/CD configurations across multiple projects. This promotes consistency and reduces duplication. To create a CI template: Create a .gitlab-ci.yml file in a dedicated project or repository. Define your CI/CD configuration in the template. In your project's .gitlab-ci.yml file, use the include keyword to include the template. Take your development to the next level GitLab CI/CD is a powerful tool that can transform your development workflow. By understanding the concepts of CI/CD, configuring your pipelines, and leveraging features like Auto DevOps, the CI/CD Catalog, and CI templates, you can automate your entire software development lifecycle and deliver high-quality software faster and more efficiently. Want to take your learning to the next level? Sign up for GitLab University courses. Or you can get going right away with a free 60-day trial of GitLab Ultimate. \"Getting Started with GitLab\" series Check out more articles in our \"Getting Started with GitLab\" series: How to manage users How to import your projects to GitLab Mastering project management Automating Agile workflows with the gitlab-triage gem",
  "image": "https://images.ctfassets.net/r9o86ar0p03f/cFwd8DYFLekdnOLmbbChp/5514b1d9934fad010f5bf4968a38a15b/blog-getting-started-with-gitlab-banner-0497-option4-fy25.png?fm=webp\u0026w=820\u0026h=500",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv data-v-37f1022b=\"\" data-v-53094866=\"\" data-v-74bd29c6=\"\"\u003e\u003cp\u003eImagine a workflow where every code change is automatically built, tested, and deployed to your users. That\u0026#39;s the power of \u003ca href=\"https://about.gitlab.com/topics/ci-cd/\"\u003eContinuous Integration/Continuous Delivery (CI/CD)\u003c/a\u003e! CI/CD helps you catch bugs early, ensures code quality, and delivers software faster and more frequently.\u003c/p\u003e\n\u003ch3 id=\"what-is-cicd%3F\" tabindex=\"-1\"\u003eWhat is CI/CD? \u003ca href=\"#what-is-cicd%3F\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eContinuous Integration\u003c/strong\u003e is a development practice where developers integrate code changes into a shared repository frequently, preferably several times a day. Each integration is then verified by an automated build and test process, allowing teams to detect problems early.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eContinuous Delivery\u003c/strong\u003e extends CI by automating the release pipeline, ensuring that your code is \u003cem\u003ealways\u003c/em\u003e in a deployable state. You can deploy your application to various environments (e.g., staging, production) with a single click or automatically.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eContinuous Deployment\u003c/strong\u003e takes it a step further by automatically deploying \u003cem\u003eevery successful build\u003c/em\u003e to production. This requires a high degree of confidence in your automated tests and deployment process.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"why-gitlab-cicd%3F\" tabindex=\"-1\"\u003eWhy GitLab CI/CD? \u003ca href=\"#why-gitlab-cicd%3F\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eGitLab CI/CD is a powerful, integrated system that comes built-in with GitLab. It offers a seamless experience for automating your entire software development lifecycle. With GitLab CI/CD, you can:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eAutomate everything:\u003c/strong\u003e Build, test, and deploy your applications with ease.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eCatch bugs early:\u003c/strong\u003e Detect and fix errors before they reach production.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eGet faster feedback:\u003c/strong\u003e Receive immediate feedback on your code changes.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eImprove collaboration:\u003c/strong\u003e Work together more effectively with automated workflows.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eAccelerate delivery:\u003c/strong\u003e Release software faster and more frequently.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eReduce risk:\u003c/strong\u003e Minimize deployment errors and rollbacks.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"the-elements-of-gitlab-cicd\" tabindex=\"-1\"\u003eThe elements of GitLab CI/CD \u003ca href=\"#the-elements-of-gitlab-cicd\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e.gitlab-ci.yml\u003c/code\u003e\u003cstrong\u003e:\u003c/strong\u003e This \u003ca href=\"https://docs.gitlab.com/ee/ci/yaml/\"\u003eYAML file\u003c/a\u003e, located in your project\u0026#39;s root directory, defines your CI/CD pipeline, including stages, jobs, and runners.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.gitlab.com/runner/\"\u003e\u003cstrong\u003eGitLab Runner\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e:\u003c/strong\u003e This agent executes your CI/CD jobs on your infrastructure (e.g. physical machines, virtual machines, Docker containers, or Kubernetes clusters).\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.gitlab.com/ee/ci/yaml/#stages\"\u003e\u003cstrong\u003eStages\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e:\u003c/strong\u003e Stages define the order of execution for your jobs (e.g. build, test, and deploy).\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.gitlab.com/ee/ci/yaml/#job-keywords\"\u003e\u003cstrong\u003eJobs\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e:\u003c/strong\u003e Jobs are individual units of work within a stage (e.g. compile code, run tests, and deploy to staging).\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"setting-up-gitlab-ci\" tabindex=\"-1\"\u003eSetting up GitLab CI \u003ca href=\"#setting-up-gitlab-ci\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eGetting started with GitLab CI is simple. Here\u0026#39;s a basic example of a \u003ccode\u003e.gitlab-ci.yml\u003c/code\u003e file:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\nstages:\n  - build\n  - test\n  - deploy\n\nbuild_job:\n  stage: build\n  script:\n    - echo \u0026#34;Building the application...\u0026#34;\n\ntest_job:\n  stage: test\n  script:\n    - echo \u0026#34;Running tests...\u0026#34;\n\ndeploy_job:\n  stage: deploy\n  script:\n    - echo \u0026#34;Deploying to production...\u0026#34;\n  environment:\n    name: production\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis configuration defines three stages: \u0026#34;build,\u0026#34; \u0026#34;test,\u0026#34; and \u0026#34;deploy.\u0026#34; Each stage contains a job that executes a simple script.\u003c/p\u003e\n\u003ch3 id=\"cicd-configuration-examples\" tabindex=\"-1\"\u003eCI/CD configuration examples \u003ca href=\"#cicd-configuration-examples\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eLet\u0026#39;s explore some more realistic examples.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBuilding and deploying a Node.js application\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eThe pipeline definition below outlines using npm to build and test a Node.js application and \u003ca href=\"https://docs.gitlab.com/ci/examples/deployment/\"\u003edpl\u003c/a\u003e to deploy the application to Heroku. The deploy stage of the pipeline makes use of \u003ca href=\"https://docs.gitlab.com/ci/variables/\"\u003eGitLab CI/CD variables\u003c/a\u003e, which allow developers to store sensitive information (e.g. credentials) and securely use them in CI/CD processes. In this example, an API key to deploy to Heroku is stored under the variable key name \u003ccode\u003e$HEROKU_API_KEY\u003c/code\u003e used by the dpl tool.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\nstages:\n  - build\n  - test\n  - deploy\n\nbuild:\n  stage: build\n  image: node:latest\n  script:\n    - npm install\n    - npm run build\n\ntest:\n  stage: test\n  image: node:latest\n  script:\n    - npm run test\n\ndeploy:\n  stage: deploy\n  image: ruby:latest\n  script:\n    - gem install dpl\n    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003cstrong\u003eDeploying to different environments (staging and production)\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eGitLab also offers the idea of \u003ca href=\"https://docs.gitlab.com/ci/environments/\"\u003eEnvironments\u003c/a\u003e with CI/CD. This feature allows users to track deployments from CI/CD to infrastructure targets. In the example below, the pipeline adds stages with an environment property for a staging and production environment. While the deploy_staging stage will always run its script, the deploy_production stage requires manual approval to prevent accidental deployment to production.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\nstages:\n  - build\n  - test\n  - deploy_staging\n  - deploy_production\n\nbuild:\n  # ...\n\ntest:\n  # ...\n\ndeploy_staging:\n  stage: deploy_staging\n  script:\n    - echo \u0026#34;Deploying to staging...\u0026#34;\n  environment:\n    name: staging\n\ndeploy_production:\n  stage: deploy_production\n  script:\n    - echo \u0026#34;Deploying to production...\u0026#34;\n  environment:\n    name: production\n  when: manual  # Requires manual approval\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id=\"gitlab-auto-devops\" tabindex=\"-1\"\u003eGitLab Auto DevOps \u003ca href=\"#gitlab-auto-devops\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://docs.gitlab.com/ee/topics/autodevops/\"\u003eGitLab Auto DevOps\u003c/a\u003e simplifies CI/CD by providing a pre-defined configuration that automatically builds, tests, and deploys your applications. It leverages best practices and industry standards to streamline your workflow.\u003c/p\u003e\n\u003cp\u003eTo enable Auto DevOps:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eGo to your project\u0026#39;s \u003cstrong\u003eSettings \u0026gt; CI/CD \u0026gt; General pipelines\u003c/strong\u003e.\u003c/li\u003e\n\u003cli\u003eEnable the \u003cstrong\u003eAuto DevOps\u003c/strong\u003e option.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eAuto DevOps automatically detects your project\u0026#39;s language and framework and configures the necessary build, test, and deployment stages. You donâ€™t even need to create a \u003ccode\u003e.gitlab-ci.yml\u003c/code\u003e file.\u003c/p\u003e\n\u003ch3 id=\"cicd-catalog\" tabindex=\"-1\"\u003eCI/CD Catalog \u003ca href=\"#cicd-catalog\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eThe \u003ca href=\"https://about.gitlab.com/blog/2024/08/01/faq-gitlab-ci-cd-catalog/\"\u003eCI/CD Catalog\u003c/a\u003e is a list of projects with published \u003ca href=\"https://docs.gitlab.com/ee/ci/components/\"\u003eCI/CD components\u003c/a\u003e you can use to extend your CI/CD workflow. Anyone can create a component project and add it to the CI/CD Catalog or contribute to an existing project to improve the available components. You can find published components in the \u003ca href=\"https://gitlab.com/explore/catalog\"\u003eCI/CD Catalog\u003c/a\u003e on GitLab.com.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"https://about.gitlab.com/blog/2024/11/12/tutorial-how-to-set-up-your-first-gitlab-ci-cd-component/\"\u003eTutorial: How to set up your first GitLab CI/CD component\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"ci-templates\" tabindex=\"-1\"\u003eCI templates \u003ca href=\"#ci-templates\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eYou can also create your own \u003ca href=\"https://docs.gitlab.com/ee/ci/examples/\"\u003eCI templates\u003c/a\u003e to standardize and reuse CI/CD configurations across multiple projects. This promotes consistency and reduces duplication.\u003c/p\u003e\n\u003cp\u003eTo create a CI template:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eCreate a \u003ccode\u003e.gitlab-ci.yml\u003c/code\u003e file in a dedicated project or repository.\u003c/li\u003e\n\u003cli\u003eDefine your CI/CD configuration in the template.\u003c/li\u003e\n\u003cli\u003eIn your project\u0026#39;s \u003ccode\u003e.gitlab-ci.yml\u003c/code\u003e file, use the \u003ccode\u003einclude\u003c/code\u003e keyword to include the template.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"take-your-development-to-the-next-level\" tabindex=\"-1\"\u003eTake your development to the next level \u003ca href=\"#take-your-development-to-the-next-level\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eGitLab CI/CD is a powerful tool that can transform your development workflow. By understanding the concepts of CI/CD, configuring your pipelines, and leveraging features like Auto DevOps, the CI/CD Catalog, and CI templates, you can automate your entire software development lifecycle and deliver high-quality software faster and more efficiently.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWant to take your learning to the next level? Sign up for \u003ca href=\"https://university.gitlab.com/\"\u003eGitLab University courses\u003c/a\u003e. Or you can get going right away with a \u003ca href=\"https://about.gitlab.com/free-trial/\"\u003efree 60-day trial of GitLab Ultimate\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"%22getting-started-with-gitlab%22-series\" tabindex=\"-1\"\u003e\u0026#34;Getting Started with GitLab\u0026#34; series \u003ca href=\"#%22getting-started-with-gitlab%22-series\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eCheck out more articles in our \u0026#34;Getting Started with GitLab\u0026#34; series:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://about.gitlab.com/blog/2025/01/14/getting-started-with-gitlab-how-to-manage-users/\"\u003eHow to manage users\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://about.gitlab.com/blog/2025/01/28/getting-started-with-gitlab-how-to-import-your-projects-to-gitlab/\"\u003eHow to import your projects to GitLab\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://about.gitlab.com/blog/2025/02/11/getting-started-with-gitlab-mastering-project-management/\"\u003eMastering project management\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://about.gitlab.com/blog/2025/03/13/automating-agile-workflows-with-the-gitlab-triage-gem/\"\u003eAutomating Agile workflows with the gitlab-triage gem\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "8 min read",
  "publishedTime": "2025-04-25T00:00:00Z",
  "modifiedTime": null
}
