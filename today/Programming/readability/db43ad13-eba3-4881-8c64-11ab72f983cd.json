{
  "id": "db43ad13-eba3-4881-8c64-11ab72f983cd",
  "title": "What’s next for Junie: building a smart and controllable AI coding agent",
  "link": "https://blog.jetbrains.com/junie/2025/05/what-s-next-for-junie-building-a-smart-and-controllable-ai-coding-agent/",
  "description": "For the last few months, our team has been on a thrilling journey, building the next generation of AI-assisted tools – Junie, the coding agent by JetBrains. After countless hours of experiments, collecting your feedback, and using Junie internally, we are convinced that coding agents bring a paradigm shift in how software is built. Today, […]",
  "author": "Andrew Zakonov",
  "published": "Tue, 20 May 2025 16:14:24 +0000",
  "source": "https://blog.jetbrains.com/feed",
  "categories": [
    "news"
  ],
  "byline": "",
  "length": 8193,
  "excerpt": "For the last few months, our team has been on a thrilling journey, building the next generation of AI-assisted tools – Junie, the coding agent by JetBrains. After countless hours of experiments, colle",
  "siteName": "The JetBrains Blog",
  "favicon": "https://blog.jetbrains.com/wp-content/uploads/2024/01/cropped-mstile-310x310-1-180x180.png",
  "text": "NewsWhat’s next for Junie: building a smart and controllable AI coding agent For the last few months, our team has been on a thrilling journey, building the next generation of AI-assisted tools – Junie, the coding agent by JetBrains. After countless hours of experiments, collecting your feedback, and using Junie internally, we are convinced that coding agents bring a paradigm shift in how software is built. Today, we want to share our vision and priorities for Junie, built for developers who love to code. Increased end-to-end development speed We believe true speed isn’t measured in how fast an AI generates lines of code – it’s measured from the moment you conceive an idea to the moment your code is merged, until it is deployed, delivering value to users. That’s why we are investing lots of product and technical effort into every step of the developer workflow: Formulating tasks, following up on recent tasks, or even brainstorming new ideas: Ask mode was released in April, so you could discuss ideas with Junie, provide better follow-ups, and improve collaboration with our agent. Understanding and controlling Junie better: The Plan feature provides clear reasoning and a two-column interface so you can see the high-level direction and the specific steps being done. If you want to change the plan, you can stop Junie, add new hints in the follow-up, and continue the task with better guidance. We are now investing in stop-continue mode improvements and are also planning to implement support for real-time steering mode. Reviewing code effectively and quickly: Developing both Code mode and Ask mode helps you to provide follow-ups, discuss the changes, and implement them as quickly as possible – and exactly in the way you want them. Much-improved terminal-based integration: Ask Junie to run scripts, read logs, or deploy. Open the interactive Junie terminal to see and control what’s going on. Manual approval mode and brave mode offer more autonomous execution, with many improvements coming to brave mode to give you greater flexibility and granular control. Quality of generated code: The efforts here will reduce the probability that you’ll discard generated code, rewrite it, or need to deal with introduced technical debt that slows you down later. A manageable and developer-centric AI agent We dislike black-box AI as much as anyone. Our goal with Junie is simple: We don’t want you playing a turn-based game with a coding agent where, when an agent makes a move, you spend 10 minutes reading code trying to figure out what happened, then you comment or roll back, and the agent continues.  This is not an effective approach, which is why we’re investing in the Plan feature, a clear and structured overview of steps. Junie proposes solutions clearly, always showing you the plan and intermediate steps, as well as the reasoning behind them. Work with Junie as your collaborator and save time. Read the explanation, see if tests were performed, and review test code – or stop at any moment if you disagree, provide guidance in the follow-up input, and continue moving in a good direction. Automatic gear-shift approach for models In a rapidly evolving AI industry, new models emerge all the time, which is why Junie isn’t locked into a single AI model. Instead, we test multiple models and configurations, including new ones, evaluating them against real coding benchmarks, real-world tasks, and user feedback. Our philosophy is simple: It’s our job, not yours, to determine which model performs best for a given task. This data-driven approach ensures Junie’s model choices consistently remain top-tier without requiring guesswork on your end.  This year, we will definitely ship an advanced mode that allows the manual selection of models and custom model endpoints (we use this internally for our experiments). But in most cases, if we’ve done our job right, Junie will use the best model (or combination of models) for your task, like driving an automatic transmission vehicle instead of a manual. Customizing Junie for any task, developer, or team One size never fits all in software development. We understand that every developer and team has preferences for the behavior of the coding agent. Junie is different for everyone. Some might want Junie to be conservative and only make changes when it’s very sure about them; others might prefer it to be aggressive and creative. Currently, .junie/guidelines.md provides basic solutions and customization, and we recommend actively using it for maximum value.  At the same time, we’re working on implementing better configurable settings for customizing Junie’s behavior, for example, adjustable dials for creativity, risk tolerance, coding style strictness, etc. Additionally, some configurations are purely guideline-based, while others could be deterministic, such as a setting to always run tests before submitting – another area we’re actively exploring. Scaling to bigger tasks Right now, Junie is good for tasks with five or ten files and up to a few dozen steps. But we’re building it capable of breaking large coding tasks into smaller ones, completing them in parallel, and seamlessly connecting them. Our goal is to help you delegate complex tasks to Junie, even when they take hundreds of files and steps.  We see this as the logical next step in collaboration with the coding agents: Today developers understand the limits of coding agents, breaking large tasks into smaller, manageable pieces. Tomorrow Junie will handle this autonomously, allowing you to focus on more important problems and searching for solutions. Introducing new pricing tiers Our goal is to make Junie available to as many developers as we can, while offering a worry-free pricing model for those who use it regularly. Junie should never force you to count tokens, limit runs, or second-guess your usage. To do this, we introduced two main tiers: JetBrains AI Pro, which gives you a chance to evaluate Junie and use it from time to time, and JetBrains AI Ultimate, which covers most of the needs and requests of users.  At the same time, we’ve noticed some confusion from JetBrains AI Pro users about usage limits that are being reached too fast. We are working on both optimizing context usage and improving transparency around the quota spent for Junie so you can control it better.  An agent for developers who love to code A year ago, our first prototype scored about 20% on SWEBench. By January, we improved that score to 53%. Today, we’re at 60.8%. The result is currently one of the highest in the industry. It shows how well the AI produces correct code for real-world coding tasks – and how much you can trust your coding agent. However, our most important metric is not the highest benchmark, nor the amount of code generated for the project, nor its speed. We value your feedback and prioritize the quality of UX. The best car isn’t necessarily the fastest car, and being a good collaborator involves more than just completing coding tasks quickly. During the EAP phase, we worked closely with initial user feedback, made dozens of improvements, and added several major features. We’ve seen clear progress in how our coding agent is perceived, and our plan is to develop Junie based on our vision, objective evaluations, and your feedback.  Make it happen. With code. With Junie Discover more",
  "image": "https://blog.jetbrains.com/wp-content/uploads/2025/05/Blog_head_1280x720-1.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"main\"\u003e\n    \u003cdiv\u003e\n                        \u003ca href=\"https://blog.jetbrains.com/junie/\"\u003e\n                            \u003cimg src=\"https://blog.jetbrains.com/wp-content/uploads/2025/01/Junie.svg\" alt=\"Junie logo\"/\u003e\n                                                                                                \n                                                                                    \u003c/a\u003e\n                                            \u003c/div\u003e\n                            \u003csection data-clarity-region=\"article\"\u003e\n                \u003cdiv\u003e\n                    \t\t\t\t\u003cp\u003e\u003ca href=\"https://blog.jetbrains.com/junie/category/news/\"\u003eNews\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"major-updates\"\u003eWhat’s next for Junie: building a smart and controllable AI coding agent\u003c/h2\u003e                    \u003cdiv\u003e\n                            \u003cp\u003e\u003cimg src=\"https://blog.jetbrains.com/wp-content/uploads/2025/01/photo1_square2.jpg\" width=\"200\" height=\"200\" alt=\"Andrew Zakonov\" loading=\"lazy\"/\u003e\n                                                                                                                    \u003cimg src=\"https://blog.jetbrains.com/wp-content/uploads/2025/05/3RwT4I3kF1mY-e1747657885666-200x200.jpeg\" width=\"200\" height=\"200\" alt=\"Anastasia Krivosheeva\" loading=\"lazy\"/\u003e\n                                                                                                \u003c/p\u003e\n                            \n                        \u003c/div\u003e\n                    \n\u003cp\u003eFor the last few months, our team has been on a thrilling journey, building the next generation of AI-assisted tools – \u003cstrong\u003eJunie, the coding agent by JetBrains\u003c/strong\u003e. After countless hours of experiments, collecting your feedback, and using Junie internally, we are convinced that coding agents bring a paradigm shift in how software is built.\u003c/p\u003e\n\n\n\n\u003cp\u003eToday, we want to share our vision and priorities for Junie, built for developers who love to code.\u003c/p\u003e\n\n\n\n\u003ch2\u003eIncreased end-to-end development speed\u003c/h2\u003e\n\n\n\n\u003cp\u003eWe believe true speed isn’t measured in how fast an AI generates lines of code – it’s measured from the moment you conceive an idea to the moment your code is merged, until it is deployed, delivering value to users.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXcAV8YhhB1iwwWfk__LeWjgJ2YYAek321V2WDH4ncSv4uV7CxY_mJ59Z_UWkgZBKT_-Ir_KpQssKaqrIwgWjA0UjR3zwHh_urgIzrRxuYivZo3WpNwxNzzM22k6FuPLhPsvBAZESw?key=d05SWh_ah8tvd9Y-PzdWAm20\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eThat’s why we are investing lots of product and technical effort into every step of the developer workflow:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eFormulating tasks, following up on recent tasks, or even brainstorming new ideas\u003c/strong\u003e: Ask\u003cem\u003e \u003c/em\u003emode was released in April, so you could discuss ideas with Junie, provide better follow-ups, and improve collaboration with our agent.\u003cbr/\u003e\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eUnderstanding and controlling Junie better\u003c/strong\u003e:\u003cstrong\u003e \u003c/strong\u003eThe\u003cstrong\u003e \u003c/strong\u003e\u003cem\u003ePlan\u003c/em\u003e feature provides clear reasoning and a two-column interface so you can see the high-level direction and the specific steps being done. If you want to change the plan, you can stop Junie, add new hints in the follow-up, and continue the task with better guidance. We are now investing in stop-continue mode improvements and are also planning to implement support for real-time steering mode.\u003cbr/\u003e\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eReviewing code effectively and quickly\u003c/strong\u003e:\u003cstrong\u003e \u003c/strong\u003eDeveloping both Code\u003cem\u003e mode \u003c/em\u003eand Ask\u003cem\u003e mode \u003c/em\u003ehelps you to provide follow-ups, discuss the changes, and implement them as quickly as possible – and exactly in the way you want them.\u003cbr/\u003e\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eMuch-improved terminal-based integration\u003c/strong\u003e: Ask Junie to run scripts, read logs, or deploy. Open the interactive Junie terminal to see and control what’s going on. Manual approval mode and brave mode offer more autonomous execution, with many improvements coming to brave mode to give you greater flexibility and granular control.\u003cbr/\u003e\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eQuality of generated code\u003c/strong\u003e: The efforts here will reduce the probability that you’ll discard generated code, rewrite it, or need to deal with introduced technical debt that slows you down later.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXfjXDHFszzSYOha6A_ggPqXMbccPHpa3WZEKOzXfWLpxT32l5gG2fG_nEMOrJr6owER3QJ6U8GoMXTSy2eer0MtAhK8YpFl3dL22zrtxoC-qKdigA4niHCb1A-kGAcGhU8HU140bQ?key=d05SWh_ah8tvd9Y-PzdWAm20\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003ch2\u003eA manageable and developer-centric AI agent\u003c/h2\u003e\n\n\n\n\u003cp\u003eWe dislike black-box AI as much as anyone. Our goal with Junie is simple: We don’t want you playing a turn-based game with a coding agent where, when an agent makes a move, you spend 10 minutes reading code trying to figure out what happened, then you comment or roll back, and the agent continues. \u003c/p\u003e\n\n\n\n\u003cp\u003eThis is not an effective approach, which is why we’re investing in the Plan feature, a clear and structured overview of steps. Junie proposes solutions clearly, always showing you the plan and intermediate steps, as well as the reasoning behind them. Work with Junie as your collaborator and save time. Read the explanation, see if tests were performed, and review test code – or stop at any moment if you disagree, provide guidance in the follow-up input, and continue moving in a good direction.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXdPx7c_uu-XYPUcdvUHnK4mQCeEp9Zb25SpwVgXCBXTA9txETUmbO-BJmHPgMY-K_-G1RqC5L_1cGNbq0GLmzLuEeog_1Yu7Z2mhgn0kmHssXiMCLfAnfyBCJtfDyMb56D2-9924g?key=d05SWh_ah8tvd9Y-PzdWAm20\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003ch2\u003eAutomatic gear-shift approach for models\u003c/h2\u003e\n\n\n\n\u003cp\u003eIn a rapidly evolving AI industry, new models emerge all the time, which is why Junie isn’t locked into a single AI model. Instead, we test multiple models and configurations, including new ones, evaluating them against real coding benchmarks, real-world tasks, and user feedback.\u003c/p\u003e\n\n\n\n\u003cp\u003eOur philosophy is simple: It’s our job, not yours, to determine which model performs best for a given task. This data-driven approach ensures Junie’s model choices consistently remain top-tier without requiring guesswork on your end. \u003c/p\u003e\n\n\n\n\u003cp\u003eThis year, we will definitely ship an advanced mode that allows the manual selection of models and custom model endpoints (we use this internally for our experiments). But in most cases, if we’ve done our job right, Junie will use the best model (or combination of models) for your task, like driving an automatic transmission vehicle instead of a manual.\u003c/p\u003e\n\n\n\n\u003ch2\u003eCustomizing Junie for any task, developer, or team\u003c/h2\u003e\n\n\n\n\u003cp\u003eOne size never fits all in software development. We understand that every developer and team has preferences for the behavior of the coding agent. Junie is different for everyone. Some might want Junie to be conservative and only make changes when it’s very sure about them; others might prefer it to be aggressive and creative. Currently, .junie/guidelines.md provides basic solutions and customization, and we recommend actively using it for maximum value. \u003c/p\u003e\n\n\n\n\u003cp\u003eAt the same time, we’re working on implementing better configurable settings for customizing Junie’s behavior, for example, adjustable dials for creativity, risk tolerance, coding style strictness, etc. Additionally, some configurations are purely guideline-based, while others could be deterministic, such as a setting to always run tests before submitting – another area we’re actively exploring.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXdhqtyIZNH5Ld2AfSYo7qhbWCVG_JBQjpgH8C4Sehde3kuKReqcs576vbap0WrUUGmR9ER9X8tX0ubyGST7IRWcWrh9KCfDopcshLeOD2mzLl3N6tVwYgoaO0kS6-sFwdYmQ2dkNA?key=d05SWh_ah8tvd9Y-PzdWAm20\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003ch2\u003eScaling to bigger tasks\u003c/h2\u003e\n\n\n\n\u003cp\u003eRight now, Junie is good for tasks with five or ten files and up to a few dozen steps. But we’re building it capable of breaking large coding tasks into smaller ones, completing them in parallel, and seamlessly connecting them. Our goal is to help you delegate complex tasks to Junie, even when they take hundreds of files and steps. \u003c/p\u003e\n\n\n\n\u003cp\u003eWe see this as the logical next step in collaboration with the coding agents: Today developers understand the limits of coding agents, breaking large tasks into smaller, manageable pieces. Tomorrow Junie will handle this autonomously, allowing you to focus on more important problems and searching for solutions.\u003c/p\u003e\n\n\n\n\u003ch2\u003e\u003cstrong\u003eIntroducing new pricing tiers\u003c/strong\u003e\u003c/h2\u003e\n\n\n\n\u003cp\u003eOur goal is to make Junie available to as many developers as we can, while offering a worry-free pricing model for those who use it regularly. Junie should never force you to count tokens, limit runs, or second-guess your usage. To do this, we introduced two main tiers:\u003cstrong\u003e JetBrains AI Pro\u003c/strong\u003e, which gives you a chance to evaluate Junie and use it from time to time, and \u003cstrong\u003eJetBrains AI Ultimate\u003c/strong\u003e,\u003cstrong\u003e \u003c/strong\u003ewhich covers most of the needs and requests of users. \u003c/p\u003e\n\n\n\n\u003cp\u003eAt the same time, we’ve noticed some confusion from JetBrains AI Pro users about usage limits that are being reached too fast. We are working on both optimizing context usage and improving transparency around the quota spent for Junie so you can control it better. \u003c/p\u003e\n\n\n\n\u003ch2\u003eAn agent for developers who love to code\u003c/h2\u003e\n\n\n\n\u003cdiv\u003e\u003cp\u003eA year ago, our first prototype scored about 20% on SWEBench. By January, we improved that score to 53%. Today, we’re at 60.8%. The result is currently one of the highest in the industry. It shows how well the AI produces correct code for real-world coding tasks – and how much you can trust your coding agent.\u003c/p\u003e\u003cp\u003e\u003cimg decoding=\"async\" fetchpriority=\"high\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXcJrBLuCst8JFY7PepT_PMLcanhE1e0vRH-Sk7colAFxUZfAYCarinjR7WFwO9kvGSwsFGGNaRvIQRV3mKVSsepaOf1nIFMWatQmsuL5ETBco5Z0w_bUwA1VrypFLtI3yMMdMyF?key=d05SWh_ah8tvd9Y-PzdWAm20\" width=\"2048\" height=\"966\"/\u003e\u003c/p\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eHowever, our most important metric is not the highest benchmark, nor the amount of code generated for the project, nor its speed. We value your feedback and prioritize the quality of UX.\u003c/p\u003e\n\n\n\n\u003cp\u003eThe best car isn’t necessarily the fastest car, and being a good collaborator involves more than just completing coding tasks quickly. During the EAP phase, we worked closely with initial user feedback, made dozens of improvements, and added several major features. We’ve seen clear progress in how our coding agent is perceived, and our plan is to develop Junie based on our vision, objective evaluations, and your feedback. \u003c/p\u003e\n\n\n\n\u003cp\u003eMake it happen. With code.\u003c/p\u003e\n\n\n\n\u003cp\u003eWith Junie\u003c/p\u003e\n                    \n                                                                                                                                                                                                                                    \u003c/div\u003e\n                \u003ca href=\"#\"\u003e\u003c/a\u003e\n                \n                \n            \u003c/section\u003e\n                    \u003cdiv\u003e\n                \u003cp\u003e\n                    \u003ch2\u003eDiscover more\u003c/h2\u003e\n                \u003c/p\u003e\n                \n            \u003c/div\u003e\n                \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "9 min read",
  "publishedTime": null,
  "modifiedTime": null
}
