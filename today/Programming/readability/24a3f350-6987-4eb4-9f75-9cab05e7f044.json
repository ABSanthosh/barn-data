{
  "id": "24a3f350-6987-4eb4-9f75-9cab05e7f044",
  "title": "Secure and safe login and commits with GitLab + Yubico",
  "link": "https://about.gitlab.com/blog/2025/04/02/secure-and-safe-login-and-commits-with-gitlab-yubico",
  "description": "",
  "author": "Fernando Diaz",
  "published": "2025-04-02T00:00:00.000Z",
  "source": "https://about.gitlab.com/atom.xml",
  "categories": null,
  "byline": "Fernando Diaz",
  "length": 9465,
  "excerpt": "Learn how GitLab and Yubico have partnered to strengthen software development security through robust authentication measures.",
  "siteName": "GitLab",
  "favicon": "https://about.gitlab.com/blog/nuxt-images/ico/favicon-192x192.png?cache=2022041",
  "text": "We live in a time where data breaches and phishing attacks make daily headlines. These breaches can cause harm to an organization, such as regulatory fines, business downtime, or even worse, reputational damage. In terms of authentication, passwords have been the backbone of online security for decades, however, they're increasingly proving inadequate against sophisticated cyber threats. GitLab and Yubico have partnered to strengthen software development security through robust authentication measures. Yubico is the inventor of the YubiKey, a hardware security key that delivers phishing-resistant multi-factor authentication (MFA). By implementing FIDO Universal 2nd Factor (U2F) and YubiKey hardware protection, GitLab offers developers a powerful defense against phishing attacks and other cyber threats, ensuring their code and projects remain secure. This collaboration expands enterprise-grade authentication in the GitLab platform, allowing programmers to focus on creating software while maintaining confidence in their account's integrity. This article explains how to configure GitLab to use YubiKeys to protect developers from online threats. You’ll also learn how to further prevent tampering with GitLab verified commits. How YubiKeys work At their core, YubiKeys function as cryptographic hardware tokens that generate and store private keys in a secure element. These keys implement FIDO2/WebAuthn authentication protocols, which can be used as an additional factor to login to GitLab. Here's how it works when logging in: You enter your username and password. GitLab sends a cryptographic challenge to your browser. Your browser requests the YubiKey to sign this challenge. You physically touch the YubiKey to approve. The YubiKey creates a unique cryptographic signature for that specific service and challenge. GitLab verifies the signature using your public key stored during setup. Most major security breaches involve compromised passwords. Adding a YubiKey secures your account from a remote breach, even if your password is stolen, so you can rest assured that your GitLab account is secure. Additional key security benefits of using YubiKey for authentication with GitLab include: Phishing protection: Fake sites won't have the correct cryptographic keys to verify the response. No secrets to steal: The private key never leaves the YubiKey. Physical security: Physical presence is required to use it (you must touch the YubiKey). Setting up YubiKey multifactor authentication in GitLab Now let’s go over how to set up a Yubikey for multifactor authentication in GitLab. Make sure you're using a supported browser and operating system as they have better WebAuthn support for hardware security keys. First, log in to your GitLab account and go to your user settings (click your avatar in the top left corner and select Preferences). In the left sidebar, click on Account and navigate to the Two-factor Authentication section. If you haven't already enabled 2FA, you'll need to do that first. a. Click Enable two-factor authentication. b. Scan the QR code with your authenticator app. c. Enter the code from your authenticator app. d. Enter your GitLab password. If you ever need to access your GitLab account without using Google authentication, you may need to: Use the Forgot password option on the GitLab login page to set up a separate GitLab password. Contact your GitLab administrator to help you set up alternative login methods. e. Save your recovery codes in a safe place. Once 2FA is enabled, go back to the previous screen by pressing Manage two-factor authentication and scroll down to the Register hardware token section. Press the Set up new device button. a. A popup from your browser should appear. Note: This image may look different depending on your browser. You may also get popups from password managers feel free to ignore them.     b. Select Use a phone, tablet, or security key. A new popup will appear.     a. Insert your YubiKey into your computer's USB port.     b. Touch the metal contact/button on your YubiKey when prompted. The field will automatically fill with a one-time code. Enter your GitLab Password and provide a name for your Hardware Key. Click Register to add the YubiKey to your account. Congratulations, your YubiKey is now registered and can be used as a second factor when logging into GitLab! You can register multiple YubiKeys to your account for backup purposes. Note: The process may vary slightly among browsers. YubiKey registered successfully Signing in with a YubiKey Now that we have our YubiKey configured, we can log in as follows: Go to GitLab.com. Provide your username and password and then press the Sign in button. You will be sent to the following screen.     a. A popup, like the one below, should come up. Note: This image may look different depending on your browser. You may also get popups from password managers; feel free to ignore them.     b. Insert your YubiKey into your computer's USB port.     c. Touch the metal contact/button on your YubiKey when prompted. The field will automatically fill with a one-time code. Now, you should be logged in and taken to your GitLab page. Note: The process may vary slightly among browsers. What happens if I lose my YubiKey? Yubico recommends that you use and keep a backup YubiKey. When considering your home, car, or office, you wouldn’t think twice about having a backup key to keep in a safe place. Your digital self should get the same level of consideration. A backup YubiKey kept in a safe place provides a quick and safe backup if your primary YubiKey is lost. Keeping a backup will also easily enable you to deactivate the lost YubiKey and add a new primary or secondary YubiKey. If you do not have an additional YubiKey added, it is recommended to have another form of 2FA added to your accounts. In either case, you should be able to get access to your account and remove the lost key from the account. Please note that if a spare key or another authentication method hasn’t been added, you will need to contact the service/website for help with recovering your account. GitLab verified commits To further prevent tampering, you can also configure verified commits. Verified commits in GitLab use GPG (GNU Privacy Guard) signatures to prove that a commit actually came from you. This adds another layer of security on top of authentication by ensuring that not only is your account secure, but every code change can be cryptographically verified as coming from you. Your YubiKey can store GPG keys: The private key is stored securely on the YubiKey. The public key is shared with GitLab. The key pair is used to sign your commits. Once the GPG keys have been set up: When you make a commit, Git uses your private key to create a signature. The GPG key is accessed from the attached YubiKey. The signature is stored with the commit metadata. GitLab verifies the signature using your public key. Setting up verified commits Let’s go over how to configure verified commits. In this example, the GPG key will live inside your YubiKey, providing an extra layer of security. Install required software. # On macOS brew install --cask yubico-yubikey-manager brew install gnupg gpg yubikey-manager # On Ubuntu/Debian sudo apt install gnupg gpg yubikey-personalization # On Windows # Download and install Gpg4win from https://gpg4win.org Check YubiKey GPG status. gpg --card-status Generate GPG keys directly on YubiKey (more secure). # Start GPG edit mode gpg --card-edit # Enter admin mode admin # Generate key directly on card # PIN = '123456' | Admin PIN = '12345678' generate # Follow prompts # See documentation for more info # https://support.yubico.com/hc/en-us/articles/360013790259-Using-Your-YubiKey-with-OpenPGP Export your public key. # Get your key ID gpg --list-secret-keys --keyid-format LONG # Export the public key gpg --armor --export YOUR_KEY_ID Add the public key to GitLab. a. Click on your GitLab Avatar and select Preferences. b. On the side tab select GPG Keys. c. Click Add new key. d. Paste your public key. e. Click Add key. Configure Git. # Set signing key git config --global user.signingkey YOUR_KEY_ID # Enable automatic signing git config --global commit.gpgsign true # Tell GPG which key to use echo \"default-key YOUR_KEY_ID\" \u003e\u003e ~/.gnupg/gpg.conf Now let’s test the configuration by creating a test commit in a project: # Make a change in the project # Add changes git add . # Make a test commit git commit -S -m \"Test signed commit\" # Verify signature git verify-commit HEAD # Push the change git push The git verify-commit HEAD command should show the GPG key used: gpg: Signature made Wed Feb 26 11:45:00 2025 CST gpg: using RSA key YOUR_KEY_ID gpg: Good signature from “NAME (DESCRIPTION) \u003cEMAIL\u003e\" [ultimate] Then, when viewing the commit in GitLab, you should now see that the commit is verified as follows: Commit verified with GPG key You can also use the commits API to check a commit’s signature allowing you to further operationalize the verification workflow. Learn more To learn more about GitLab, Yubico, and the solutions each provides, check out these resources: Why GitLab Why Yubico GitLab Security and Compliance Solutions GitLab listing in the \"Works with YubiKey\" catalog Verified Commits - GitLab documentation Push Rules in GitLab Sign Commit with GPG Keys documentation",
  "image": "https://images.ctfassets.net/r9o86ar0p03f/3JZq9vkFc2zoOsqNaoNRqm/0a0dc9ea9d669abb673df8b2f81b3ea1/REFERENCE_-_display_preview_for_blog_images__3_.png?fm=webp\u0026w=820\u0026h=500",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv data-v-37f1022b=\"\" data-v-53094866=\"\" data-v-74bd29c6=\"\"\u003e\u003cp\u003eWe live in a time where data breaches and phishing attacks make daily headlines. These breaches can cause harm to an organization, such as regulatory fines, business downtime, or even worse, reputational damage. In terms of authentication, passwords have been the backbone of online security for decades, however, they\u0026#39;re increasingly proving inadequate against sophisticated cyber threats.\u003c/p\u003e\n\u003cp\u003eGitLab and \u003ca href=\"https://www.yubico.com/\"\u003eYubico\u003c/a\u003e have partnered to strengthen software development security through robust authentication measures. Yubico is the inventor of the YubiKey, a hardware security key that delivers phishing-resistant multi-factor authentication (MFA). By implementing FIDO Universal 2nd Factor (U2F) and YubiKey hardware protection, GitLab offers developers a powerful defense against phishing attacks and other cyber threats, ensuring their code and projects remain secure. This collaboration expands enterprise-grade authentication in the GitLab platform, allowing programmers to focus on creating software while maintaining confidence in their account\u0026#39;s integrity.\u003c/p\u003e\n\u003cp\u003eThis article explains how to configure GitLab to use YubiKeys to protect developers from online threats. You’ll also learn how to further prevent tampering with GitLab verified commits.\u003c/p\u003e\n\u003ch2 id=\"how-yubikeys-work\" tabindex=\"-1\"\u003eHow YubiKeys work \u003ca href=\"#how-yubikeys-work\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eAt their core, YubiKeys function as cryptographic hardware tokens that generate and store private keys in a secure element. These keys implement FIDO2/WebAuthn authentication protocols, which can be used as an additional factor to login to GitLab.\u003c/p\u003e\n\u003cp\u003eHere\u0026#39;s how it works when logging in:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eYou enter your username and password.\u003c/li\u003e\n\u003cli\u003eGitLab sends a cryptographic challenge to your browser.\u003c/li\u003e\n\u003cli\u003eYour browser requests the YubiKey to sign this challenge.\u003c/li\u003e\n\u003cli\u003eYou physically touch the YubiKey to approve.\u003c/li\u003e\n\u003cli\u003eThe YubiKey creates a unique cryptographic signature for that specific service and challenge.\u003c/li\u003e\n\u003cli\u003eGitLab verifies the signature using your public key stored during setup.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMost major security breaches involve compromised passwords. Adding a YubiKey secures your account from a remote breach, even if your password is stolen, so you can rest assured that your GitLab account is secure. Additional key security benefits of using YubiKey for authentication with GitLab include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003ePhishing protection:\u003c/strong\u003e Fake sites won\u0026#39;t have the correct cryptographic keys to verify the response.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eNo secrets to steal:\u003c/strong\u003e The private key never leaves the YubiKey.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePhysical security:\u003c/strong\u003e Physical presence is required to use it (you must touch the YubiKey).\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"setting-up-yubikey-multifactor-authentication-in-gitlab\" tabindex=\"-1\"\u003eSetting up YubiKey multifactor authentication in GitLab \u003ca href=\"#setting-up-yubikey-multifactor-authentication-in-gitlab\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eNow let’s go over how to set up a Yubikey for multifactor authentication in GitLab. Make sure you\u0026#39;re using a \u003ca href=\"https://support.yubico.com/hc/en-us/articles/360016615020-Operating-system-and-web-browser-support-for-FIDO2-and-U2F\"\u003esupported browser and operating system\u003c/a\u003e as they have better WebAuthn support for hardware security keys.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eFirst, log in to your GitLab account and go to your user settings (click your avatar in the top left corner and select \u003cstrong\u003ePreferences\u003c/strong\u003e).\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIn the left sidebar, click on \u003cstrong\u003eAccount\u003c/strong\u003e and navigate to the \u003cstrong\u003eTwo-factor Authentication\u003c/strong\u003e section.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIf you haven\u0026#39;t already enabled 2FA, you\u0026#39;ll need to do that first.\u003c/p\u003e\n\u003cp\u003ea. Click \u003cstrong\u003eEnable two-factor authentication\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eb. Scan the QR code with your authenticator app.\u003c/p\u003e\n\u003cp\u003ec. Enter the code from your authenticator app.\u003c/p\u003e\n\u003cp\u003ed. Enter your GitLab password. If you ever need to access your GitLab account without using Google authentication, you may need to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse the \u003cstrong\u003eForgot password\u003c/strong\u003e option on the GitLab login page to set up a separate GitLab password.\u003c/li\u003e\n\u003cli\u003eContact your GitLab administrator to help you set up alternative login methods.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003ee. Save your recovery codes in a safe place.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eOnce 2FA is enabled, go back to the previous screen by pressing \u003cstrong\u003eManage two-factor authentication\u003c/strong\u003e and scroll down to the \u003cstrong\u003eRegister hardware token\u003c/strong\u003e section.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePress the \u003cstrong\u003eSet up new device\u003c/strong\u003e button.\u003cbr/\u003e\na. A popup from your browser should appear. \u003cstrong\u003eNote:\u003c/strong\u003e This image may look different depending on your browser. You may also get popups from password managers feel free to ignore them.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/1bdGDGg4cptIdWMMecaJd5/515aec550d1333d4e1e75b97bd853e5f/browser_auth_request.png\" alt=\"Browser (Brave) Auth Request\"/\u003e\u003c/p\u003e\n\u003cp\u003e    b. Select \u003cstrong\u003eUse a phone, tablet, or security key\u003c/strong\u003e.\u003c/p\u003e\n\u003col start=\"6\"\u003e\n\u003cli\u003eA new popup will appear.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/6OJCfSUnw8dA0kVGKF89vk/35b27daeb5cb4b5cd965e314f9c8bb5d/browser_security_key_request.png\" alt=\"browser security key request\"/\u003e\u003c/p\u003e\n\u003cp\u003e    a. Insert your YubiKey into your computer\u0026#39;s USB port.\u003c/p\u003e\n\u003cp\u003e    b. Touch the metal contact/button on your YubiKey when prompted. The field will automatically fill with a one-time code.\u003c/p\u003e\n\u003col start=\"7\"\u003e\n\u003cli\u003eEnter your GitLab Password and provide a name for your Hardware Key.\u003c/li\u003e\n\u003cli\u003eClick \u003cstrong\u003eRegister\u003c/strong\u003e to add the YubiKey to your account.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eCongratulations, your YubiKey is now registered and can be used as a second factor when logging into GitLab! You can register multiple YubiKeys to your account for backup purposes. \u003cstrong\u003eNote:\u003c/strong\u003e The process may vary slightly among browsers.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/PsEFw5ITY3ipv8SLNrBhd/7010d709e42050545dfffc49de41aa8c/yubikey_registered.png\" alt=\"yubikey registered\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eYubiKey registered successfully\u003c/i\u003e\u003c/center\u003e\n\u003ch2 id=\"signing-in-with-a-yubikey\" tabindex=\"-1\"\u003eSigning in with a YubiKey \u003ca href=\"#signing-in-with-a-yubikey\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eNow that we have our YubiKey configured, we can log in as follows:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eGo to GitLab.com.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/5Ql7JwSl9PXAVBkqziO8AV/18365ce14df31f6419a25066c1b8f2db/gitlab_login.png\" alt=\"GitLab login\"/\u003e\u003c/p\u003e\n\u003col start=\"2\"\u003e\n\u003cli\u003eProvide your username and password and then press the \u003cstrong\u003eSign in\u003c/strong\u003e button.\u003c/li\u003e\n\u003cli\u003eYou will be sent to the following screen.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/38gfH18Fzv7RL13vVPG47Y/0166348804e1577d788ec6b3cb4d9522/2fa_login.png\" alt=\"GitLab 2fa login\"/\u003e\u003c/p\u003e\n\u003cp\u003e    a. A popup, like the one below, should come up. \u003cstrong\u003eNote:\u003c/strong\u003e This image may look different depending on your browser. You may also get popups from password managers; feel free to ignore them.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/6OJCfSUnw8dA0kVGKF89vk/35b27daeb5cb4b5cd965e314f9c8bb5d/browser_security_key_request.png\" alt=\"Browser security key request\"/\u003e\u003c/p\u003e\n\u003cp\u003e    b. Insert your YubiKey into your computer\u0026#39;s USB port.\u003c/p\u003e\n\u003cp\u003e    c. Touch the metal contact/button on your YubiKey when prompted. The field will automatically fill with a one-time code.\u003c/p\u003e\n\u003cp\u003eNow, you should be logged in and taken to your GitLab page. \u003cstrong\u003eNote:\u003c/strong\u003e The process may vary slightly among browsers.\u003c/p\u003e\n\u003ch2 id=\"what-happens-if-i-lose-my-yubikey%3F\" tabindex=\"-1\"\u003eWhat happens if I lose my YubiKey? \u003ca href=\"#what-happens-if-i-lose-my-yubikey%3F\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eYubico recommends that you use and keep a backup YubiKey. When considering your home, car, or office, you wouldn’t think twice about having a backup key to keep in a safe place. Your digital self should get the same level of consideration. A backup YubiKey kept in a safe place provides a quick and safe backup if your primary YubiKey is lost. Keeping a backup will also easily enable you to deactivate the lost YubiKey and add a new primary or secondary YubiKey.\u003c/p\u003e\n\u003cp\u003eIf you do not have an additional YubiKey added, it is recommended to have another form of 2FA added to your accounts. In either case, you should be able to get access to your account and remove the lost key from the account. Please note that if a spare key or another authentication method hasn’t been added, you will need to contact the service/website for help with recovering your account.\u003c/p\u003e\n\u003ch2 id=\"gitlab-verified-commits\" tabindex=\"-1\"\u003eGitLab verified commits \u003ca href=\"#gitlab-verified-commits\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eTo further prevent tampering, you can also configure verified commits. Verified commits in GitLab use GPG (GNU Privacy Guard) signatures to prove that a commit actually came from you. This adds another layer of security on top of authentication by ensuring that not only is your account secure, but every code change can be cryptographically verified as coming from you.\u003c/p\u003e\n\u003cp\u003eYour YubiKey can store GPG keys:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe private key is stored securely on the YubiKey.\u003c/li\u003e\n\u003cli\u003eThe public key is shared with GitLab.\u003c/li\u003e\n\u003cli\u003eThe key pair is used to sign your commits.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOnce the GPG keys have been set up:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWhen you make a commit, Git uses your private key to create a signature.\u003c/li\u003e\n\u003cli\u003eThe GPG key is accessed from the attached YubiKey.\u003c/li\u003e\n\u003cli\u003eThe signature is stored with the commit metadata.\u003c/li\u003e\n\u003cli\u003eGitLab verifies the signature using your public key.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"setting-up-verified-commits\" tabindex=\"-1\"\u003eSetting up verified commits \u003ca href=\"#setting-up-verified-commits\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eLet’s go over how to configure verified commits. In this example, the GPG key will live inside your YubiKey, providing an extra layer of security.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eInstall required software.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre\u003e\u003ccode\u003e# On macOS\nbrew install --cask yubico-yubikey-manager\nbrew install gnupg gpg yubikey-manager\n\n# On Ubuntu/Debian\nsudo apt install gnupg gpg yubikey-personalization\n\n# On Windows\n# Download and install Gpg4win from https://gpg4win.org\n\u003c/code\u003e\u003c/pre\u003e\n\u003col start=\"2\"\u003e\n\u003cli\u003eCheck YubiKey GPG status.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre\u003e\u003ccode\u003egpg --card-status\n\u003c/code\u003e\u003c/pre\u003e\n\u003col start=\"3\"\u003e\n\u003cli\u003eGenerate GPG keys directly on YubiKey (more secure).\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre\u003e\u003ccode\u003e# Start GPG edit mode\ngpg --card-edit\n\n# Enter admin mode\nadmin\n\n# Generate key directly on card\n# PIN = \u0026#39;123456\u0026#39; | Admin PIN = \u0026#39;12345678\u0026#39;\ngenerate\n\n# Follow prompts\n# See documentation for more info \n# https://support.yubico.com/hc/en-us/articles/360013790259-Using-Your-YubiKey-with-OpenPGP\n\u003c/code\u003e\u003c/pre\u003e\n\u003col start=\"4\"\u003e\n\u003cli\u003eExport your public key.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre\u003e\u003ccode\u003e# Get your key ID\ngpg --list-secret-keys --keyid-format LONG\n\n# Export the public key\ngpg --armor --export YOUR_KEY_ID\n\u003c/code\u003e\u003c/pre\u003e\n\u003col start=\"5\"\u003e\n\u003cli\u003e\n\u003cp\u003eAdd the public key to GitLab.\u003c/p\u003e\n\u003cp\u003ea. Click on your GitLab Avatar and select \u003cstrong\u003ePreferences\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eb. On the side tab select \u003cstrong\u003eGPG Keys\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003ec. Click \u003cstrong\u003eAdd new key\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003ed. Paste your public key.\u003c/p\u003e\n\u003cp\u003ee. Click \u003cstrong\u003eAdd key\u003c/strong\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eConfigure Git.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre\u003e\u003ccode\u003e# Set signing key\ngit config --global user.signingkey YOUR_KEY_ID\n\n# Enable automatic signing\ngit config --global commit.gpgsign true\n\n# Tell GPG which key to use\necho \u0026#34;default-key YOUR_KEY_ID\u0026#34; \u0026gt;\u0026gt; ~/.gnupg/gpg.conf\n\u003c/code\u003e\u003c/pre\u003e\n\u003col start=\"7\"\u003e\n\u003cli\u003eNow let’s test the configuration by creating a test commit in a project:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre\u003e\u003ccode\u003e# Make a change in the project\n# Add changes\ngit add .\n\n# Make a test commit\ngit commit -S -m \u0026#34;Test signed commit\u0026#34;\n\n# Verify signature\ngit verify-commit HEAD\n\n# Push the change\ngit push\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe \u003ccode\u003egit verify-commit HEAD\u003c/code\u003e command should show the GPG key used:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003egpg: Signature made Wed Feb 26 11:45:00 2025 CST\ngpg:                using RSA key YOUR_KEY_ID\ngpg: Good signature from “NAME (DESCRIPTION) \u0026lt;EMAIL\u0026gt;\u0026#34; [ultimate]\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThen, when viewing the commit in GitLab, you should now see that the commit is verified as follows:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/r9o86ar0p03f/2avAGeAyJadOubrlgv7lbR/6974815d9e8a79649f6a679321a5c822/verified.png\" alt=\"Commit is verified\"/\u003e\u003c/p\u003e\n\u003ccenter\u003e\u003ci\u003eCommit verified with GPG key\u003c/i\u003e\u003c/center\u003e\n\u003cp\u003eYou can also use the \u003ca href=\"https://docs.gitlab.com/api/commits/#get-signature-of-a-commit\"\u003ecommits API\u003c/a\u003e to check a commit’s signature allowing you to further operationalize the verification workflow.\u003c/p\u003e\n\u003ch2 id=\"learn-more\" tabindex=\"-1\"\u003eLearn more \u003ca href=\"#learn-more\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eTo learn more about GitLab, Yubico, and the solutions each provides, check out these resources:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://about.gitlab.com/why-gitlab/\"\u003eWhy GitLab\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.yubico.com/why-yubico/\"\u003eWhy Yubico\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://about.gitlab.com/solutions/security-compliance/\"\u003eGitLab Security and Compliance Solutions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.yubico.com/works-with-yubikey/catalog/gitlab/\"\u003eGitLab listing in the \u0026#34;Works with YubiKey\u0026#34; catalog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.gitlab.com/ee/user/project/repository/signed_commits/\"\u003eVerified Commits - GitLab documentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.gitlab.com/user/project/repository/push_rules/\"\u003ePush Rules in GitLab\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.gitlab.com/user/project/repository/signed_commits/gpg/\"\u003eSign Commit with GPG Keys documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "10 min read",
  "publishedTime": "2025-04-02T00:00:00Z",
  "modifiedTime": null
}
