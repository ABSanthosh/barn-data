{
  "id": "a6c4aef4-d4db-4030-94ab-65eb4fb12b9d",
  "title": "The Linux Kernel to Support Real-time Scheduling Out-of-the-Box",
  "link": "https://www.infoq.com/news/2024/10/linux-6-12-real-time/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "Linux 6.12 will officially include support for real-time processing in its mainline thanks to a PR that enables PREEMPT_RT on all supported architectures. While aimed at applications requiring deterministic time guarantees, like avionics, robotics, automotive, and communications, it could bring improvements to user experience on the desktop, too. By Sergio De Simone",
  "author": "Sergio De Simone",
  "published": "Thu, 10 Oct 2024 16:00:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Real Time",
    "Linux",
    "Embedded Software Dev",
    "Open Source",
    "Development",
    "news"
  ],
  "byline": "Sergio De Simone",
  "length": 3210,
  "excerpt": "Linux 6.12 will officially include support for real-time processing in its mainline thanks to a PR that enables PREEMPT_RT on all supported architectures. While aimed at applications requiring determi",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s2_20241001113644/apple-touch-icon.png",
  "text": "Linux 6.12 will officially include support for real-time processing in its mainline thanks to a PR that enables PREEMPT_RT on all supported architectures. While aimed at applications requiring deterministic time guarantees, like avionics, robotics, automotive, and communications, it could bring improvements to user experience on the desktop, too. In development since 2005, PREEMPT_RT is a set of patches for Linux implementing both hard and soft real-time computing capabilities. It makes the Linux kernel fully preemptible and able to respond to external events in deterministic time and with low-latency on the x86, x86_64, RISC-V, and ARM64 architectures. While PREEMPT_RT could already be used on its own to patch a Linux kernel, its introduction in the mainline means it is now just a matter of enabling the CONFIG_PREEMPT* options at compile time to build a real-time Linux kernel. But, most importantly, integrating PREEMPT_RT into the mainline has also meant polishing a number of things to make it play nicely under most circumstances. One significant bit of work concerned the printk function, which is critical for kernel development and was not entirely ready for real-time. Developed by Linus Torvalds, this function ensures developers know exactly where a crash occurred. Its old implementation, though, introduced a delay which has been now removed, breaking the goal of low-latency. Previous to PREEMPT_RT being part of the kernel, the easiest way to run real-time Linux was using Ubuntu Pro, available for free for personal and small-scale commercial use but at a premium for more than five machines. It is important to stress that being real-time has nothing to do with performance but all with predictable (i.e. deterministic) task preemption, which is key for applications that depend on actions happening within a maximum time after an external event. The plain-vanilla Linux kernel is optimized instead to guarantee maximum hardware utilization and fair time allocation to all processes, but it can also be configured for example to minimize energy consumption, or to adapt to specific tasks' requirements (aka, utilization clamping). According to Hacker News user femto, running real-time Linux can bring interrupt latency for each CPU core down to single digit milliseconds from double digit milliseconds. This requires, though, that you also run the scheduler with a real-time policy (SCHED_FIFO or SCHED_RR) to prevent hardware events like trackpad touches to come in the way of real-time tasks such as playing audio or 3D gaming. Others also mention that using a real-time kernel seems to improve UX by avoiding the occasional freezes of Gnome and makes it possible to synthesize more musical instruments while running Chrome and games. The Mixxx audio player also suggests to enable real-time scheduling (among other things) to reduce audio latency and avoid audible glitches. The final release of Linux 6.12 is expected in mid or end of November 2024, while release candidate 2 is currently available for testing. About the Author Sergio De Simone",
  "image": "https://res.infoq.com/news/2024/10/linux-6-12-real-time/en/headerimage/linux-6-12-real-time-1728574798424.jpeg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eLinux 6.12 will officially include support for real-time processing in its mainline thanks to a \u003ca href=\"https://marc.info/?l=linux-kernel\u0026amp;m=172679265718247\u0026amp;w=2\"\u003ePR that enables PREEMPT_RT on all supported architectures\u003c/a\u003e. While aimed at applications requiring deterministic time guarantees, like avionics, robotics, automotive, and communications, it could bring improvements to user experience on the desktop, too.\u003c/p\u003e\n\n\u003cp\u003eIn development since 2005, \u003ca href=\"https://en.wikipedia.org/wiki/PREEMPT_RT\"\u003ePREEMPT_RT\u003c/a\u003e is a set of patches for Linux implementing both hard and soft real-time computing capabilities. It makes the Linux kernel fully preemptible and able to respond to external events in deterministic time and with low-latency on the x86, x86_64, RISC-V, and ARM64 architectures.\u003c/p\u003e\n\n\u003cp\u003eWhile PREEMPT_RT could already be used on its own to patch a Linux kernel, its introduction in the mainline means it is now just a matter of enabling the \u003ccode\u003eCONFIG_PREEMPT*\u003c/code\u003e options at compile time to build a real-time Linux kernel. But, most importantly, integrating PREEMPT_RT into the mainline has also meant \u003ca href=\"https://git.kernel.org/pub/scm/linux/kernel/git/rt/linux-rt-devel.git/log/?h=v6.11-rt7-rebase\"\u003epolishing a number of things to make it play nicely under most circumstances\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eOne significant bit of \u003ca href=\"https://git.kernel.org/pub/scm/linux/kernel/git/printk/linux.git/log/?h=for-6.12\"\u003ework concerned the \u003ccode\u003eprintk\u003c/code\u003e function\u003c/a\u003e, which is critical for kernel development and was not entirely ready for real-time. Developed by Linus Torvalds, \u003ca href=\"https://www.kernel.org/doc/html/next/core-api/printk-basics.html\"\u003ethis function ensures developers know exactly where a crash occurred\u003c/a\u003e. Its old implementation, though, introduced a delay which has been now removed, breaking the goal of low-latency.\u003c/p\u003e\n\n\u003cp\u003ePrevious to PREEMPT_RT being part of the kernel, the easiest way to run real-time Linux was using \u003ca href=\"https://ubuntu.com/blog/real-time-24.04\"\u003eUbuntu Pro\u003c/a\u003e, available for free for personal and small-scale commercial use but at a premium for more than five machines.\u003c/p\u003e\n\n\u003cp\u003eIt is important to stress that being real-time has nothing to do with performance but all with predictable (i.e. deterministic) task preemption, which is key for applications that depend on actions happening within a maximum time after an external event. The \u003ca href=\"https://kernel.org/doc/html/latest/scheduler/index.html\"\u003eplain-vanilla Linux kernel is optimized\u003c/a\u003e instead to guarantee \u003ca href=\"https://man7.org/linux/man-pages/man7/sched.7.html\"\u003emaximum hardware utilization and fair time allocation to all processes\u003c/a\u003e, but it can also be configured for example to minimize energy consumption, or to adapt to specific tasks\u0026#39; requirements (aka, utilization clamping).\u003c/p\u003e\n\n\u003cp\u003eAccording to Hacker News user femto, running \u003ca href=\"https://news.ycombinator.com/item?id=41598108\"\u003ereal-time Linux can bring interrupt latency for each CPU core down to single digit milliseconds from double digit milliseconds\u003c/a\u003e. This requires, though, that you also run the scheduler with a real-time policy (\u003ccode\u003eSCHED_FIFO\u003c/code\u003e or \u003ccode\u003eSCHED_RR\u003c/code\u003e) to prevent hardware events like trackpad touches to come in the way of real-time tasks such as playing audio or \u003ca href=\"https://news.ycombinator.com/item?id=41603816\"\u003e3D gaming\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eOthers also mention that using a real-time kernel seems to improve UX by \u003ca href=\"https://news.ycombinator.com/item?id=41598154\"\u003eavoiding the occasional freezes of Gnome\u003c/a\u003e and makes it possible to \u003ca href=\"https://news.ycombinator.com/item?id=41597259\"\u003esynthesize more musical instruments while running Chrome and games\u003c/a\u003e. The \u003ca href=\"https://github.com/mixxxdj/mixxx/wiki/Adjusting-Audio-Latency#enable-realtime-scheduling\"\u003eMixxx audio player also suggests to enable real-time scheduling (among other things) to reduce audio latency and avoid audible glitches\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe final release of Linux 6.12 is expected in mid or end of November 2024, while \u003ca href=\"https://lkml.org/lkml/2024/10/6/423\"\u003erelease candidate 2 is currently available for testing\u003c/a\u003e.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Sergio-De-Simone\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eSergio De Simone\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": "2024-10-10T00:00:00Z",
  "modifiedTime": null
}
