{
  "id": "17ac6e5c-0307-4880-b7b4-5517f3b5cdc2",
  "title": "Redis 8 Targets AI Applications with New Data Type for Vector Similarity",
  "link": "https://www.infoq.com/news/2025/04/redis-vector-sets/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "Redis has recently announced the addition of Vector Set, a data type designed for vector similarity and a new option for AI applications. This new data type marks the first major contribution from Salvatore Sanfilippo (aka ‘antirez’), the creator of Redis, since rejoining the company. By Renato Losio",
  "author": "Renato Losio",
  "published": "Sun, 20 Apr 2025 09:40:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "vector databases",
    "Redis",
    "AI, ML \u0026 Data Engineering",
    "Development",
    "news"
  ],
  "byline": "Renato Losio",
  "length": 3416,
  "excerpt": "Redis has recently announced the addition of Vector Set, a data type designed for vector similarity and a new option for AI applications. This new data type marks the first major contribution from Sal",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s1_20250413214448/apple-touch-icon.png",
  "text": "Redis has recently announced the addition of Vector Set, a data type designed for vector similarity and a new option for AI applications. This new data type marks the first major contribution from Salvatore Sanfilippo (aka ‘antirez’), the creator of Redis, since rejoining the company. Vector Sets are a new data type similar to Sorted Sets but have string elements associated with a vector instead of a score, making it possible to add items and retrieve a subset of the added items that are most similar to a specified vector. Filtered search capabilities are also supported, allowing vector similarity and scalar filters at the same time. Sanfilippo explains in his blog: The goal of the new data structure is, in short, to create a new \"Set alike\" data type, similar to Sorted Sets, where instead of having a scalar as a score, you have a vector, and you can add and remove elements the Redis way, without caring about anything except the properties of the abstract data structure Redis implements, ask for elements similar to a given query vector (or a vector associated to some element already in the set), and so forth. Vector Sets are based on the hnsw.c implementation of the HNSW data structure, with extensions for speed and functionality. Rowan Trollope, CEO of Redis, praises Sanfilippo’s contribution: His expertise has led to the creation of an API that is both simple and intuitive, reflecting Redis’s philosophy of delivering high-performance solutions with minimal complexity. Vector databases are critical for applications backed by GenAI to retrieve semantically relevant information to enrich the context of LLMs (RAG). Other use cases include semantic caching for chatbots, recommender systems, and face recognition. Mirko Ortensi, product manager at Redis, explains in a separate article how to use Vector Sets for face recognition. Ortensi writes: Face recognition is all about vectors. It’s about modeling known faces using a specialized embedding model, storing them in Redis, and performing face recognition by running a vector search of a test identity against the vectors stored in the database. Source: Mirco Ortensi Sanfilippo adds: I decided that a fundamental requirement for implementing vector similarity was to also reimplement from scratch HNSWs (you can see my implementation in hnsw.c), because that was going to be my core data structure, and I didn’t want to grab some random code from GitHub and be happy with it. With a focus on high-speed performance, Sanfilippo introduced not only modifications to HNSW but also multithreading for all vector similarity requests, along with support for both 8-bit and binary quantization. He highlights the main difference in his implementation: The most interesting part of Vector Sets is the data model and the API supporting it. Many databases propose vector similarity as a kind of index, but that’s Redis, and things in Redis are data structures: no exception this time. Vector Sets are not the only new Redis feature: LangCache, a semantic caching service for AI apps and agents, is designed to reduce costly, latency-prone calls to LLMs by caching their responses. Vector Sets are available in preview with Redis 8 RC1 under RSALv2 or SSPLv1 license. About the Author Renato Losio",
  "image": "https://res.infoq.com/news/2025/04/redis-vector-sets/en/headerimage/generatedHeaderImage-1744544727048.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eRedis has recently announced the \u003ca href=\"https://redis.io/blog/announcing-vector-sets-a-new-redis-data-type-for-vector-similarity/\"\u003eaddition of Vector Set\u003c/a\u003e, a data type designed for vector similarity and a new option for AI applications. This new data type marks the first major contribution from \u003ca href=\"https://www.linkedin.com/in/salvatore-sanfilippo-b52b47249/\"\u003eSalvatore Sanfilippo\u003c/a\u003e (aka ‘antirez’), the creator of Redis, since \u003ca href=\"https://antirez.com/news/144\"\u003erejoining\u003c/a\u003e the company.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/redis/redis/blob/unstable/modules/vector-sets/README.md\"\u003eVector Sets\u003c/a\u003e are a new data type similar to Sorted Sets but have string elements associated with a vector instead of a score, making it possible to add items and retrieve a subset of the added items that are most similar to a specified vector. Filtered search capabilities are also supported, allowing vector similarity and scalar filters at the same time. Sanfilippo \u003ca href=\"https://antirez.com/news/149\"\u003eexplains\u003c/a\u003e in his blog:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe goal of the new data structure is, in short, to create a new \u0026#34;Set alike\u0026#34; data type, similar to Sorted Sets, where instead of having a scalar as a score, you have a vector, and you can add and remove elements the Redis way, without caring about anything except the properties of the abstract data structure Redis implements, ask for elements similar to a given query vector (or a vector associated to some element already in the set), and so forth.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eVector Sets are based on the \u003ccode\u003ehnsw.c\u003c/code\u003e implementation of the HNSW data structure, with extensions for speed and functionality. \u003ca href=\"https://www.linkedin.com/in/rowant/\"\u003eRowan Trollope\u003c/a\u003e, CEO of Redis, praises Sanfilippo’s contribution:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eHis expertise has led to the creation of an API that is both simple and intuitive, reflecting Redis’s philosophy of delivering high-performance solutions with minimal complexity.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eVector databases are critical for applications backed by GenAI to retrieve semantically relevant information to enrich the context of LLMs (RAG). Other use cases include semantic caching for chatbots, recommender systems, and face recognition. Mirko Ortensi, product manager at Redis, explains in a separate article how to \u003ca href=\"https://medium.com/@mortensi/redis-vector-sets-for-face-recognition-4f0c17665f26\"\u003euse Vector Sets for face recognition\u003c/a\u003e. Ortensi writes:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eFace recognition is all about vectors. It’s about modeling known faces using a specialized embedding model, storing them in Redis, and performing face recognition by running a vector search of a test identity against the vectors stored in the database.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cimg alt=\"\" data-src=\"news/2025/04/redis-vector-sets/en/resources/11_nOA6GIuaVmfTskE_m4MkAQ-1744545460330.jpg\" src=\"https://imgopt.infoq.com/fit-in/3000x4000/filters:quality(85)/filters:no_upscale()/news/2025/04/redis-vector-sets/en/resources/11_nOA6GIuaVmfTskE_m4MkAQ-1744545460330.jpg\" rel=\"share\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eSource: \u003ca href=\"https://medium.com/@mortensi\"\u003eMirco Ortensi\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSanfilippo adds:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eI decided that a fundamental requirement for implementing vector similarity was to also reimplement from scratch HNSWs (you can see my implementation in hnsw.c), because that was going to be my core data structure, and I didn’t want to grab some random code from GitHub and be happy with it.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eWith a focus on high-speed performance, Sanfilippo introduced not only modifications to HNSW but also multithreading for all vector similarity requests, along with support for both 8-bit and binary quantization. He highlights the main difference in his implementation:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe most interesting part of Vector Sets is the data model and the API supporting it. Many databases propose vector similarity as a kind of index, but that’s Redis, and things in Redis are data structures: no exception this time.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eVector Sets are not the only new Redis feature: \u003ca href=\"https://redis.io/langcache/\"\u003eLangCache\u003c/a\u003e, a semantic caching service for AI apps and agents, is designed to reduce costly, latency-prone calls to LLMs by caching their responses.\u003c/p\u003e\n\n\u003cp\u003eVector Sets are available in preview with \u003ca href=\"https://redis.io/docs/latest/develop/whats-new/8-0-rc-1/\"\u003eRedis 8 RC1\u003c/a\u003e under RSALv2 or SSPLv1 \u003ca href=\"https://redis.io/legal/licenses/\"\u003elicense\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Renato-Losio\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eRenato Losio\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": "2025-04-20T00:00:00Z",
  "modifiedTime": null
}
