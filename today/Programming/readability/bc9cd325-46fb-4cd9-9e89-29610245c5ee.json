{
  "id": "bc9cd325-46fb-4cd9-9e89-29610245c5ee",
  "title": "How I do Django APIs in PyCharm",
  "link": "https://blog.jetbrains.com/pycharm/2024/10/how-i-do-django-apis-in-pycharm/",
  "description": "I learn so much from watching conference talks, especially live, when I’m vibing with the crowd. But sometimes I watch and think: “Wow, I wish I could show you how awesome that would be in PyCharm.” That just happened. Here’s the explainer, with a little special something at the end. Hello, DjangoConf I recently attended […]",
  "author": "Paul Everitt",
  "published": "Thu, 10 Oct 2024 11:21:47 +0000",
  "source": "https://blog.jetbrains.com/feed",
  "categories": [
    "all-things-web",
    "pycharm",
    "web-development",
    "api",
    "debugger",
    "django",
    "live-preview"
  ],
  "byline": "Paul Everitt",
  "length": 4882,
  "excerpt": "Join Paul Everitt for an overview of Django API development in PyCharm. From navigating through the project's endpoints to utilizing the debugger, testing the application, and even previewing it live.",
  "siteName": "The JetBrains Blog",
  "favicon": "https://blog.jetbrains.com/wp-content/uploads/2024/01/cropped-mstile-310x310-1-180x180.png",
  "text": "The Python IDE for data science and web development All Things Web PyCharm Web DevelopmentHow I do Django APIs in PyCharm I learn so much from watching conference talks, especially live, when I’m vibing with the crowd. But sometimes I watch and think: “Wow, I wish I could show you how awesome that would be in PyCharm.” That just happened. Here’s the explainer, with a little special something at the end. Hello, DjangoConf I recently attended DjangoConf 2024 which kicked off this year’s DSF-PyCharm fundraiser. I attended Felipe’s DRF tutorial where he showed off using PyCharm and even a little bit about endpoints. Afterwards, I ran into a PyCharm fan who told me what he really likes when using PyCharm for Django. It matched what I really like. Hence, a blog post. The end is the point My superfan friend was an early adopter of endpoints, our feature for rethinking the API developer experience (DX) in Django, FastAPI, and Flask. Me too. It’s cool to have a listing of endpoints, jumping to the definition, and most of all – issuing an HTTP request right there in the IDE. No going out to Postman.  I covered endpoints and the HTTP client in my previous blog post. One extra point: he said Postman pricing is going up. I guess I should talk more about the HTTP Client. Always be debugging Most folks know that I’m a debugger stan, probably because I just won’t shut up about it. It turns out that he also uses the debugger first, meaning he runs the Django server, under the debugger, all the time, even when he isn’t debugging. Why? First, it’s so fast, you don’t notice the speed hit. As he also knew, Python 3.12 lowers the impact of debugging and PyCharm uses this automatically. The bigger point though: when you want to poke around, you don’t need to stop the regular “run”, launch under “debug”, then return to “run.” That’s disruptive, so people just do print. Which makes me a sad panda. If you’re always debugging, then poking around is already RIGHT THERE. Even if you don’t have a bug and just want to investigate. Even if you are in a template. This is great with endpoints, as you can click a breakpoint in your code and issue a request without leaving the tool. He made one last point – PyCharm’s Django support and debugger is more mature and polished. We’ve been doing this for a while! I didn’t know there would be a test There’s one more step to the higher-zen of using PyCharm to the fullest with Django. Why use the browser or an HTTP client at all? Why not just sit in a test module and let PyCharm + pytest bring joy to your world? In fact – don’t even run Django. No server process, less hassle. Django makes it really easy to issue fake requests in a test, get the results back, and make sure things are cool. I like having my code on the left, my test on the right, and the test output on the bottom. In fact, I also like combining Always Be Testing with Always Be Debugging, which makes it crazy-easy to stop in the middle of a view and see what’s going on. I like it so much, here’s a little video: This works great for how code works. You can skip going to the browser, reloading, and poking around. You stay in the IDE, the flow. But there’s a catch. Seeing is believing Sometimes you need to see how the page looks. In the browser. With your eyeballs. Any chance PyCharm can improve the DX for this? As it turns out, in 2023.3 we shipped Django Preview, a feature-rich browser in the IDE that keeps up as you type. A love letter to Django This concludes my speaking from the heart about my way of doing Django API development in PyCharm: endpoints, debugger, testing, and preview. But I’d like to close by speaking from the heart about Django, leading with an odd little twist of fate about Django killing my project. Subscribe to PyCharm Blog updates Discover more",
  "image": "https://resources.jetbrains.com/storage/products/pycharm/img/meta/preview.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"main\"\u003e\n    \u003cdiv\u003e\n                        \u003ca href=\"https://blog.jetbrains.com/pycharm/\"\u003e\n                            \u003cimg src=\"https://blog.jetbrains.com/wp-content/uploads/2019/01/PyCharm-1.svg\" alt=\"Pycharm logo\"/\u003e\n                                                                                                \n                                                                                    \u003c/a\u003e\n                                                    \u003cp\u003eThe Python IDE for data science and web development\u003c/p\u003e\n                                            \u003c/div\u003e\n                            \u003csection data-clarity-region=\"article\"\u003e\n                \u003cdiv\u003e\n                    \t\t\t\t\u003cp\u003e\u003ca href=\"https://blog.jetbrains.com/pycharm/category/all-things-web/\"\u003eAll Things Web\u003c/a\u003e\n\t\t\t\u003ca href=\"https://blog.jetbrains.com/pycharm/category/pycharm/\"\u003ePyCharm\u003c/a\u003e\n\t\t\t\u003ca href=\"https://blog.jetbrains.com/pycharm/category/web-development/\"\u003eWeb Development\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"major-updates\"\u003eHow I do Django APIs in PyCharm\u003c/h2\u003e                    \n                    \n\u003cp\u003eI learn so much from watching conference talks, especially live, when I’m vibing with the crowd. But sometimes I watch and think: “Wow, I wish I could show you how awesome that would be in PyCharm.”\u003c/p\u003e\n\n\n\n\u003cp\u003eThat just happened. Here’s the explainer, with a little \u003cem\u003especial something\u003c/em\u003e at the end.\u003c/p\u003e\n\n\n\n\u003ch2\u003eHello, DjangoConf\u003c/h2\u003e\n\n\n\n\u003cp\u003eI recently attended \u003ca href=\"https://2024.djangocon.us\" target=\"_blank\" rel=\"noopener\"\u003eDjangoConf 2024\u003c/a\u003e which kicked off this year’s \u003ca href=\"https://www.jetbrains.com/pycharm/promo/support-django/\" target=\"_blank\" rel=\"noopener\"\u003eDSF-PyCharm fundraiser\u003c/a\u003e. I attended \u003ca href=\"https://felipedemorais.com.br\" target=\"_blank\" rel=\"noopener\"\u003eFelipe’s\u003c/a\u003e \u003ca href=\"https://www.django-rest-framework.org\" target=\"_blank\" rel=\"noopener\"\u003eDRF\u003c/a\u003e \u003ca href=\"https://2024.djangocon.us/tutorials/building-your-first-api-with-django-and-django-rest-framework/\" target=\"_blank\" rel=\"noopener\"\u003etutorial\u003c/a\u003e where he showed off using PyCharm and even a little bit about \u003ca href=\"https://blog.jetbrains.com/pycharm/2024/09/python-web-development/\"\u003eendpoints\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cp\u003e\n\u003ciframe title=\"Working efficiently with APIs in Python\" width=\"500\" height=\"281\" src=\"https://www.youtube.com/embed/cF0cN3JgU4M?start=32\u0026amp;feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\u003c/p\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eAfterwards, I ran into a PyCharm fan who told me what he really likes when using \u003ca href=\"https://www.jetbrains.com/pycharm/web-development/django/\" target=\"_blank\" rel=\"noopener\"\u003ePyCharm for Django\u003c/a\u003e. It matched what I really like. Hence, a blog post.\u003c/p\u003e\n\n\u003ch2\u003eThe end is the point\u003c/h2\u003e\n\n\n\n\u003cp\u003eMy superfan friend was an early adopter of endpoints, our feature for rethinking the API developer experience (DX) in Django, FastAPI, and Flask. Me too. It’s cool to have a listing of endpoints, jumping to the definition, and most of all – \u003ca href=\"https://www.jetbrains.com/help/pycharm/http-client-in-product-code-editor.html\" target=\"_blank\" rel=\"noopener\"\u003eissuing an HTTP request\u003c/a\u003e right there in the IDE. No going out to Postman. \u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" fetchpriority=\"high\" width=\"1988\" height=\"1148\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/10/httpclient.png\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eI covered endpoints and the HTTP client in \u003ca href=\"https://blog.jetbrains.com/pycharm/2024/09/python-web-development/\"\u003emy previous blog post\u003c/a\u003e. One extra point: he said Postman pricing is going up. I guess I should talk more about the HTTP Client.\u003c/p\u003e\n\n\n\n\u003ch2\u003eAlways be debugging\u003c/h2\u003e\n\n\n\n\u003cp\u003eMost folks know that I’m a debugger stan, probably because I just \u003ca href=\"https://blog.jetbrains.com/pycharm/2017/04/webinar-recording-visual-debugging/\"\u003ewon’t\u003c/a\u003e \u003ca href=\"https://blog.jetbrains.com/pycharm/2020/01/webinar-advanced-debugging-in-pycharm/\"\u003eshut up\u003c/a\u003e \u003ca href=\"https://blog.jetbrains.com/pycharm/2020/03/webinar-django-and-pycharm-tips-and-tricks-with-paul-everitt/\"\u003eabout it\u003c/a\u003e. It turns out that he also uses the debugger first, meaning he runs the Django server, \u003ca href=\"https://www.jetbrains.com/help/pycharm/run-debug-configuration-django-server.html\" target=\"_blank\" rel=\"noopener\"\u003eunder the debugger\u003c/a\u003e, all the time, even when he isn’t debugging.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" width=\"1988\" height=\"1148\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/10/debugger.png\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eWhy? First, it’s so fast, you don’t notice the speed hit. As he also knew, Python 3.12 lowers the impact of debugging and \u003ca href=\"https://blog.jetbrains.com/pycharm/2024/01/new-low-impact-monitoring-api-in-python-3-12/\"\u003ePyCharm uses this automatically\u003c/a\u003e. The bigger point though: when you want to poke around, you don’t need to stop the regular “run”, launch under “debug”, then return to “run.” That’s disruptive, so people just do print. Which makes me a sad panda.\u003c/p\u003e\n\n\n\n\u003cp\u003eIf you’re always debugging, then poking around is already RIGHT THERE. Even if you don’t have a bug and just want to investigate. Even if you are in a template.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cvideo controls=\"\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/10/debugger_template.mp4\"\u003e\u003c/video\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eThis is great with endpoints, as you can click a breakpoint in your code and issue a request without leaving the tool.\u003c/p\u003e\n\n\n\n\u003cp\u003eHe made one last point – PyCharm’s Django support and debugger is more mature and polished. We’ve been doing this for a while!\u003c/p\u003e\n\n\n\n\u003ch2\u003eI didn’t know there would be a test\u003c/h2\u003e\n\n\n\n\u003cp\u003eThere’s one more step to the higher-zen of using PyCharm to the fullest with Django. Why use the browser or an HTTP client at all? Why not just sit in a test module and let PyCharm + pytest bring joy to your world? In fact – don’t even run Django. No server process, less hassle.\u003c/p\u003e\n\n\n\n\u003cp\u003eDjango makes it really easy to issue fake requests in a test, get the results back, and make sure things are cool. I like having my code on the left, my test on the right, and the test output on the bottom. In fact, I also like combining Always Be Testing with Always Be Debugging, which makes it crazy-easy to stop in the middle of a view and see what’s going on.\u003c/p\u003e\n\n\n\n\u003cp\u003eI like it so much, here’s a little video:\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cvideo controls=\"\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/10/debugger_test.mp4\"\u003e\u003c/video\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eThis works great for how code \u003cem\u003eworks\u003c/em\u003e. You can skip going to the browser, reloading, and poking around. You stay in the IDE, the flow. But there’s a catch.\u003c/p\u003e\n\n\n\n\u003ch2\u003eSeeing is believing\u003c/h2\u003e\n\n\n\n\u003cp\u003eSometimes you need to see how the page \u003cem\u003elooks\u003c/em\u003e. In the browser. With your eyeballs. Any chance PyCharm can improve the DX for this?\u003c/p\u003e\n\n\n\n\u003cp\u003eAs it turns out, in 2023.3 we shipped \u003ca href=\"https://blog.jetbrains.com/pycharm/2023/12/new-django-features-in-pycharm/#live-preview-for-django-templates\"\u003eDjango Preview\u003c/a\u003e, a feature-rich browser in the IDE that keeps up as you type.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cvideo controls=\"\" src=\"https://blog.jetbrains.com/wp-content/uploads/2024/10/live_preview.mp4\"\u003e\u003c/video\u003e\u003c/figure\u003e\n\n\n\n\u003ch2\u003eA love letter to Django\u003c/h2\u003e\n\n\n\n\u003cp\u003eThis concludes my speaking from the heart about my way of doing Django API development in PyCharm: endpoints, debugger, testing, and preview.\u003c/p\u003e\n\n\n\n\u003cp\u003eBut I’d like to close by speaking from the heart about Django, leading with an odd little twist of fate about Django killing my project.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cp\u003e\n\u003ciframe loading=\"lazy\" title=\"My love letter to Django\" width=\"500\" height=\"281\" src=\"https://www.youtube.com/embed/nZIK696NPCg?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\u003c/p\u003e\u003c/figure\u003e\n                    \n                                                                \n                                                                                                                                \u003cdiv\u003e\n                                \u003cdiv\u003e\n                                                                            \u003ch4\u003eSubscribe to PyCharm Blog updates\u003c/h4\u003e\n                                                                                                            \n                                \u003c/div\u003e\n                                \n                                \u003cp\u003e\u003cimg src=\"https://blog.jetbrains.com/wp-content/themes/jetbrains/assets/img/img-form.svg\" alt=\"image description\"/\u003e\n                                                                    \u003c/p\u003e\n                            \u003c/div\u003e\n                                                            \u003c/div\u003e\n                \u003ca href=\"#\"\u003e\u003c/a\u003e\n                \n                \n            \u003c/section\u003e\n                    \u003cdiv\u003e\n                \u003cp\u003e\n                    \u003ch2\u003eDiscover more\u003c/h2\u003e\n                \u003c/p\u003e\n                \n            \u003c/div\u003e\n                \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": null,
  "modifiedTime": null
}
