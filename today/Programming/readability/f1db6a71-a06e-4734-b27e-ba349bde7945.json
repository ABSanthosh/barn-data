{
  "id": "f1db6a71-a06e-4734-b27e-ba349bde7945",
  "title": "Optimizing Uber's Search Infrastructure: Upgrading to Apache Lucene 9.5",
  "link": "https://www.infoq.com/news/2024/11/uber-search-infra-lucene-upgrade/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "Uber Engineering recently announced an upgrade to their search infrastructure, transitioning from Apache Lucene 8.0 to version 9.5. This upgrade improves Uber's search capabilities, performance and efficiency across their various services. By Aditya Kulkarni",
  "author": "Aditya Kulkarni",
  "published": "Fri, 08 Nov 2024 19:30:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Search",
    "Apache",
    "Uber",
    "DevOps",
    "news"
  ],
  "byline": "Aditya Kulkarni",
  "length": 3271,
  "excerpt": "Uber Engineering recently announced an upgrade to their search infrastructure, transitioning from Apache Lucene 8.0 to version 9.5. This upgrade improves Uber's search capabilities, performance and ef",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s2_20241105073656/apple-touch-icon.png",
  "text": "Uber Engineering recently announced an upgrade to their search infrastructure, transitioning from Apache Lucene 8.0 to version 9.5. This upgrade improves Uber's search capabilities, performance and efficiency across their various services. Anand Kotriwal, Aparajita Pandey, Charu Jain and Yupeng Fu from Uber's Search Platform and Data engineering team elaborated on the upgrade effort in a blog post. Uber’s search platform is built on a solid architecture that includes both a serving layer (read path) and an ingestion layer (write path), along with components for offline processing. The serving layer handles user queries and retrieves information from Lucene indices. It consists of two main parts: the Routing Service, which directs incoming queries to the appropriate search nodes and manages load balancing, and the Search Service, which executes queries against Lucene indices to retrieve results in real-time. The ingestion layer updates Lucene indices when there are changes in the data. The Ingestion Service, powered by Apache Flink, processes real-time updates to ensure the search indices remain up-to-date. For offline processing, Uber uses Offline Jobs. These are Apache Spark jobs that handle bulk index creation and reconstruction, efficiently processing large volumes of data to build or rebuild Lucene indices. Source: Lucene: Uber’s Search Platform Version Upgrade The engineering team made changes in a separate feature branch, affecting over 400 files in the monorepo, which were incompatible with the current codebase. To manage this, the team opted for a phased rollout of the Lucene update. They began by deploying it to lower-priority internal use cases and gradually expanded to higher tiers. The entire process took around six months, involving thorough code reviews, validations, collaboration with customer teams, and a tiered rollout before merging the branch. Apache Lucene is a Java-based search engine library. It supports various search needs, including structured and full-text search, faceting, nearest-neighbor searches, spell correction, and query suggestions. They also have a sub-project PyLucene, which provides Python bindings for Lucene Core. Recently they have released version 10, that adds a new IndexInput prefetch API, support for sparse indexing on doc values, and upgraded Snowball dictionaries resulting in improved tokenization. The upgrade has improved Uber's search speed and efficiency. Searches run faster and use less resources, which means quicker results for app users. The team has reported some searches are now up to 30% faster than before. This speed boost affects both riders and drivers using the app. Another benefit of this upgrade is its impact on Uber's infrastructure. Uber's search requests rely heavily on CPU power, so lowering CPU usage is critical. This reduction helps cut infrastructure costs and allows Uber to reduce the number of machines needed to serve multiple customers. Uber's Lucene version upgrade underscores the importance of keeping core technologies up-to-date in large-scale, technology-driven operations. About the Author Aditya Kulkarni",
  "image": "https://res.infoq.com/news/2024/11/uber-search-infra-lucene-upgrade/en/headerimage/generatedHeaderImage-1731051363378.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eUber Engineering recently announced an upgrade to their search infrastructure, transitioning from Apache Lucene 8.0 to version 9.5. This upgrade improves Uber\u0026#39;s search capabilities, performance and efficiency across their various services.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.linkedin.com/in/anand-kotriwal-18ba321a/\"\u003eAnand Kotriwal\u003c/a\u003e, \u003ca href=\"https://www.linkedin.com/in/aparajita-pandey-5b60a216a/\"\u003eAparajita Pandey\u003c/a\u003e, \u003ca href=\"https://www.linkedin.com/in/charu-jain-50538622/\"\u003eCharu Jain\u003c/a\u003e and \u003ca href=\"https://www.linkedin.com/in/yupeng-fu-593115b/\"\u003eYupeng Fu\u003c/a\u003e from Uber\u0026#39;s Search Platform and Data engineering team elaborated on \u003ca href=\"https://www.uber.com/en-AU/blog/lucene-version-upgrade/\"\u003ethe upgrade effort in a blog post\u003c/a\u003e. Uber’s search platform is built on a solid architecture that includes both a serving layer (read path) and an ingestion layer (write path), along with components for offline processing.\u003c/p\u003e\n\n\u003cp\u003eThe serving layer handles user queries and retrieves information from Lucene indices. It consists of two main parts: the Routing Service, which directs incoming queries to the appropriate search nodes and manages load balancing, and the Search Service, which executes queries against Lucene indices to retrieve results in real-time.\u003c/p\u003e\n\n\u003cp\u003eThe ingestion layer updates Lucene indices when there are changes in the data. The Ingestion Service, powered by \u003ca href=\"https://flink.apache.org/\"\u003eApache Flink\u003c/a\u003e, processes real-time updates to ensure the search indices remain up-to-date.\u003c/p\u003e\n\n\u003cp\u003eFor offline processing, Uber uses Offline Jobs. These are \u003ca href=\"https://spark.apache.org/\"\u003eApache Spark\u003c/a\u003e jobs that handle bulk index creation and reconstruction, efficiently processing large volumes of data to build or rebuild Lucene indices.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"\" data-src=\"news/2024/11/uber-search-infra-lucene-upgrade/en/resources/1figure-2-17253630865571-1731051256224.avif\" src=\"https://res.infoq.com/news/2024/11/uber-search-infra-lucene-upgrade/en/resources/1figure-2-17253630865571-1731051256224.avif\" rel=\"share\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eSource: \u003ca href=\"https://www.uber.com/en-AU/blog/lucene-version-upgrade/\"\u003eLucene: Uber’s Search Platform Version Upgrade\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eThe engineering team made changes in a separate feature branch, affecting over 400 files in the monorepo, which were incompatible with the current codebase. To manage this, the team opted for a phased rollout of the Lucene update. They began by deploying it to lower-priority internal use cases and gradually expanded to higher tiers.\u003c/p\u003e\n\n\u003cp\u003eThe entire process took around six months, involving thorough code reviews, validations, collaboration with customer teams, and a tiered rollout before merging the branch.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://lucene.apache.org/\"\u003eApache Lucene\u003c/a\u003e is a Java-based search engine library. It supports various search needs, including structured and full-text search, faceting, nearest-neighbor searches, spell correction, and query suggestions. They also have a sub-project \u003ca href=\"https://lucene.apache.org/pylucene/\"\u003ePyLucene\u003c/a\u003e, which provides Python bindings for Lucene Core.\u003c/p\u003e\n\n\u003cp\u003eRecently they have \u003ca href=\"https://lucene.apache.org/core/corenews.html#apache-lucenetm-1000-available\"\u003ereleased version 10\u003c/a\u003e, that adds a new \u003ccode\u003eIndexInput\u003c/code\u003e prefetch API, support for sparse indexing on doc values, and upgraded Snowball dictionaries resulting in improved tokenization.\u003c/p\u003e\n\n\u003cp\u003eThe upgrade has improved Uber\u0026#39;s search speed and efficiency. Searches run faster and use less resources, which means quicker results for app users. The team has reported some searches are now up to 30% faster than before. This speed boost affects both riders and drivers using the app.\u003c/p\u003e\n\n\u003cp\u003eAnother benefit of this upgrade is its impact on Uber\u0026#39;s infrastructure. Uber\u0026#39;s search requests rely heavily on CPU power, so lowering CPU usage is critical. This reduction helps cut infrastructure costs and allows Uber to reduce the number of machines needed to serve multiple customers.\u003c/p\u003e\n\n\u003cp\u003eUber\u0026#39;s Lucene version upgrade underscores the importance of keeping core technologies up-to-date in large-scale, technology-driven operations.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Aditya-Kulkarni\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eAditya Kulkarni\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": "2024-11-08T00:00:00Z",
  "modifiedTime": null
}
