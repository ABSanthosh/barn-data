{
  "id": "56120d08-0f86-47d8-a94e-8403d77bf0e6",
  "title": "JFrog Integrates Runtime Security for Enhanced DevSecOps Platform",
  "link": "https://www.infoq.com/news/2024/10/jfrog-devsecops-platform/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "JFrog has introduced JFrog Runtime to its suite of security capabilities, adding real-time vulnerability detection to its software supply chain platform. This update is aimed at developers and DevSecOps teams working with Kubernetes clusters and cloud-native applications. By Mohit Palriwal",
  "author": "Mohit Palriwal",
  "published": "Thu, 10 Oct 2024 09:05:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "DevSecOps",
    "Security",
    "Kubernetes",
    "Cloud-Native",
    "Software Supply Chain",
    "DevOps",
    "news"
  ],
  "byline": "Mohit Palriwal",
  "length": 4472,
  "excerpt": "JFrog has introduced JFrog Runtime to its suite of security capabilities, adding real-time vulnerability detection to its software supply chain platform. This update is aimed at developers and DevSecO",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s1_20241001113528/apple-touch-icon.png",
  "text": "JFrog has introduced JFrog Runtime to its suite of security capabilities, adding real-time vulnerability detection to its software supply chain platform. This update is aimed at developers and DevSecOps teams working with Kubernetes clusters and cloud-native applications. JFrog Runtime enhances the security of a Kubernetes cluster by providing real-time monitoring. This allows the team to detect and prioritize security incidents based on actual risk, ensuring that they promptly address vulnerabilities. By integrating security into the development process, JFrog Runtime helps maintain the integrity of container images and ensures compliance with regulatory requirements. JFrog Runtime complements JFrog’s existing suite of advanced security capabilities by enhancing the security measures in place for software development and deployment. A key feature, AI/ML Model Curation, allows organizations to protect their software supply chain by detecting and blocking potentially malicious ML models from open-source repositories like Hugging Face before they enter the organization. JFrog’s scalable security platform natively proxies Hugging Face, enabling developers to access open-source AI/ML models while simultaneously providing the ability to detect and block any malicious models and enforce license compliance, ensuring a safer use of AI. Additionally, the Secure OSS Catalog functions as a \"search engine for software packages\", accessible through the JFrog UI or API. Supported by both public and proprietary JFrog data, this catalog offers users rapid insights into the security and risk metadata associated with all open-source software packages, thereby enhancing the security and reliability of software deployments. Industry research shows that one in five applications contain runtime exposure, with 20 percent of all applications having high, critical, or apocalyptic issues during the execution stage. By automating security for fast-moving, dynamic applications like those that run in containers, JFrog Runtime addresses the visibility and insight needs of cloud-native environments. One of the important challenges in cloud-native environments is managing the complexity of security across various stages of the development lifecycle. JFrog Runtime simplifies this by offering advanced triage and prioritization features. These features help security teams quickly identify and mitigate risks, allowing developers to focus on coding rather than security-related tasks. The update also improves the handling of Google IDs and IAM binding for external resources. This makes it easier for teams to secure applications running in the cloud. Here, tools like Terraform play a crucial role. Terraform is an open-source infrastructure as code (IaC) tool that allows developers to define and provision data center infrastructure using a declarative configuration language. By parsing Google IDs when adding IAM binding to resources managed outside of Terraform, JFrog Runtime simplifies the process and reduces the potential for errors, making cloud security more accessible and reliable. In addition to these enhancements, JFrog Runtime addresses the common issue of runtime exposure in applications. By automating security for dynamic, containerized applications, it ensures that vulnerabilities are detected and mitigated during the execution stage. This is particularly important for organizations that rely on fast-moving, dynamic applications where manual security checks are not feasible. The integration of JFrog Runtime into software supply-chain platforms also improves collaboration among R\u0026D, DevOps and security teams. At its core, the platform deploys real-time monitoring agents across a Kubernetes cluster, continuously scanning for potential threats. These agents feed data into an incident response engine, which prioritizes security incidents based on their severity and potential impact. This prioritization is powered by advanced machine-learning algorithms, ensuring that the most critical vulnerabilities are addressed first. Additionally, the compliance manager ensures that all container images and running instances adhere to regulatory and organizational policy. The platform’s centralized dashboard views security posture, enhancing collaboration and response times. About the Author Mohit Palriwal",
  "image": "https://res.infoq.com/news/2024/10/jfrog-devsecops-platform/en/headerimage/jfrog-integrates-runtime-header-1728462017852.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003e\u003ca href=\"https://jfrog.com/?utm_source=swampup\u0026amp;utm_medium=businesswire\u0026amp;utm_campaign=Runtime\u0026amp;utm_content=pr\"\u003eJFrog\u003c/a\u003e has introduced \u003ca href=\"https://jfrog.com/press-room/jfrog-unveils-first-runtime-security-solution-to-deliver-complete-software-integrity-and-lineage-from-code-to-cloud/\"\u003eJFrog Runtime to its suite of security capabilities\u003c/a\u003e, adding real-time vulnerability detection to its software supply chain platform. This update is aimed at developers and DevSecOps teams working with Kubernetes clusters and cloud-native applications.\u003c/p\u003e\n\n\u003cp\u003eJFrog Runtime enhances the security of a Kubernetes cluster by providing real-time monitoring. This allows the team to detect and prioritize security incidents based on actual risk, ensuring that they promptly address vulnerabilities. By integrating security into the development process, JFrog Runtime helps maintain the integrity of container images and ensures compliance with regulatory requirements.\u003c/p\u003e\n\n\u003cp\u003eJFrog Runtime complements JFrog’s existing suite of advanced security capabilities by enhancing the security measures in place for software development and deployment. A key feature, AI/ML Model Curation, allows organizations to protect their software supply chain by detecting and blocking potentially malicious ML models from open-source repositories like Hugging Face before they enter the organization. JFrog’s scalable security platform natively proxies Hugging Face, enabling developers to access open-source AI/ML models while simultaneously providing the ability to detect and block any malicious models and enforce license compliance, ensuring a safer use of AI.\u003c/p\u003e\n\n\u003cp\u003eAdditionally, the Secure OSS Catalog functions as a \u0026#34;search engine for software packages\u0026#34;, accessible through the JFrog UI or API. Supported by both public and proprietary JFrog data, this catalog offers users rapid insights into the security and risk metadata associated with all open-source software packages, thereby enhancing the security and reliability of software deployments.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://securityboulevard.com/2024/07/oscr-report-95-of-organizations-face-severe-software-supply-chain-risk/\"\u003eIndustry research shows\u003c/a\u003e that one in five applications contain runtime exposure, with 20 percent of all applications having high, critical, or apocalyptic issues during the execution stage. By automating security for fast-moving, dynamic applications like those that run in containers, JFrog Runtime addresses the visibility and insight needs of cloud-native environments.\u003c/p\u003e\n\n\u003cp\u003eOne of the important challenges in cloud-native environments is managing the complexity of security across various stages of the development lifecycle. JFrog Runtime simplifies this by offering advanced triage and prioritization features. These features help security teams quickly identify and mitigate risks, allowing developers to focus on coding rather than security-related tasks.\u003c/p\u003e\n\n\u003cp\u003eThe update also improves the handling of Google IDs and IAM binding for external resources. This makes it easier for teams to secure applications running in the cloud. Here, tools like Terraform play a crucial role. Terraform is an open-source infrastructure as code (IaC) tool that allows developers to define and provision data center infrastructure using a declarative configuration language. By parsing Google IDs when adding IAM binding to resources managed outside of Terraform, JFrog Runtime simplifies the process and reduces the potential for errors, making cloud security more accessible and reliable.\u003c/p\u003e\n\n\u003cp\u003eIn addition to these enhancements, JFrog Runtime addresses the common issue of runtime exposure in applications. By automating security for dynamic, containerized applications, it ensures that vulnerabilities are detected and mitigated during the execution stage. This is particularly important for organizations that rely on fast-moving, dynamic applications where manual security checks are not feasible. The integration of JFrog Runtime into software supply-chain platforms also improves collaboration among R\u0026amp;D, DevOps and security teams.\u003c/p\u003e\n\n\u003cp\u003eAt its core, the platform deploys real-time monitoring agents across a Kubernetes cluster, continuously scanning for potential threats. These agents feed data into an incident response engine, which prioritizes security incidents based on their severity and potential impact. This prioritization is powered by advanced machine-learning algorithms, ensuring that the most critical vulnerabilities are addressed first. Additionally, the compliance manager ensures that all container images and running instances adhere to regulatory and organizational policy. The platform’s centralized dashboard views security posture, enhancing collaboration and response times.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Mohit-Palriwal\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eMohit Palriwal\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": "2024-10-10T00:00:00Z",
  "modifiedTime": null
}
