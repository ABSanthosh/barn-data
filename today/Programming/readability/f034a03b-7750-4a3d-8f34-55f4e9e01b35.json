{
  "id": "f034a03b-7750-4a3d-8f34-55f4e9e01b35",
  "title": "Prepare now: Docker Hub rate limits will impact GitLab CI/CD",
  "link": "https://about.gitlab.com/blog/2025/03/24/prepare-now-docker-hub-rate-limits-will-impact-gitlab-ci-cd",
  "description": "",
  "author": "Tim Rizzi",
  "published": "2025-03-24T00:00:00.000Z",
  "source": "https://about.gitlab.com/atom.xml",
  "categories": null,
  "byline": "Tim Rizzi",
  "length": 6723,
  "excerpt": "Learn how Docker Hub's upcoming pull rate limits will affect GitLab pipelines and what you can do to avoid disruptions.",
  "siteName": "GitLab",
  "favicon": "https://about.gitlab.com/blog/nuxt-images/ico/favicon-192x192.png?cache=2022041",
  "text": "On April 1, 2025, Docker will implement new pull rate limits to Docker Hub that may significantly impact CI/CD pipelines across the industry, including those running on GitLab. The most significant change is the 10 pulls-per-hour limit for unauthenticated users. What's changing? Starting April 1, Docker will enforce the following pull rate limits: User type Pull rate limit per hour Number of public repositories Number of private repositories Business, Team, Pro (authenticated) Unlimited (fair use) Unlimited Unlimited Personal (authenticated) 100 Unlimited Up to 1 Unauthenticated users 10 per IPv4 address or IPv6 /64 subnet Not applicable Not applicable This is particularly important because: GitLab's Dependency Proxy currently pulls from Docker Hub as an unauthenticated user. Most CI/CD pipelines that don't use the Dependency Proxy pull directly from Docker Hub as unauthenticated users. On hosted runners for GitLab.com, multiple users might share the same IP address or subnet, making them collectively subject to this limit. How this impacts GitLab users Impact on direct Docker Hub pulls If your CI/CD pipelines directly pull images from Docker Hub without authentication, they will be limited to 10 pulls per hour per IP address. For pipelines that run frequently or across multiple projects sharing the same runner infrastructure, this will quickly exhaust the limit and cause pipeline failures. Impact on GitLab Dependency Proxy The GitLab Dependency Proxy feature allows you to cache Docker images within GitLab to speed up pipelines and reduce external dependencies. However, the current implementation pulls from Docker Hub as an unauthenticated user, meaning it will also be subject to the 10 pulls-per-hour limit. Impact on hosted runners For hosted runners on GitLab.com, we use Google Cloud's pull-through cache. This mirrors the commonly pulled images and allows us to avoid rate limits. Job images, defined as image: or services: in your .gitlab-ci.yml file, are not affected by rate limits without any necessary changes. Things are slightly more challenging whenever images are pulled within the runner environment. The most common use case to pull images during runner runtime is to build an image using Docker-in-Docker or Kaniko. In this scenario, the Docker Hub image defined in your Dockerfile will be pulled directly from Docker Hub and likely affected by rate limits. How GitLab is responding We're actively working on solutions to mitigate these challenges: Dependency Proxy authentication: We've added support for Docker Hub authentication in the GitLab Dependency Proxy feature. This will allow the Dependency Proxy to pull images from Docker Hub as an authenticated user, significantly increasing the rate limits. Documentation updates: We've updated our documentation to provide clear guidance on configuring pipeline authentication for Docker Hub. Internal infrastructure preparation: We're preparing our internal infrastructure to minimize the impact on hosted runners for GitLab.com. How you can prepare Option 1: Configure Docker Hub authentication in your pipelines For pipelines that pull directly from Docker Hub, you can configure authentication to increase your rate limit to 100 pulls per hour (or unlimited with a paid Docker Hub subscription). Add Docker Hub credentials to your project or group CI/CD variables (not in your .gitlab-ci.yml file). Please refer to our documentation on using Docker images for detailed instructions on setting up the DOCKER_AUTH_CONFIG CI/CD variable correctly. Option 2: Use the GitLab Container Registry Consider pushing your frequently used Docker images to your GitLab Container Registry. This eliminates the need to pull from Docker Hub during CI/CD runs: Pull the image from Docker Hub. Tag it for your GitLab Container Registry. Push it to your GitLab Container Registry. Update your pipelines to pull from GitLab Container Registry. docker pull busybox:latest docker tag busybox:latest $CI_REGISTRY_IMAGE/busybox:latest docker push $CI_REGISTRY_IMAGE/busybox:latest Then in your .gitlab-ci.yml: image: $CI_REGISTRY_IMAGE/busybox:latest Option 3: Use GitLab Dependency Proxy GitLab's Dependency Proxy feature provides a way to cache and proxy Docker images, reducing external dependencies and rate limit issues. Current authentication options: GitLab 17.10: Configure Docker Hub authentication for the Dependency Proxy using GraphQL API GitLab 17.11: Use the new UI-based configuration in your group's settings (already available on GitLab.com) Once authentication is properly configured, you can: Configure Docker Hub credentials in your group's Dependency Proxy settings: For GitLab 17.11+ (or current GitLab.com): Navigate to your group's settings \u003e Packages \u0026 Registries \u003e Dependency Proxy. For GitLab 17.10: Use the GraphQL API to configure authentication. Update your pipelines to use the Dependency Proxy URLs in your CI/CD configuration: image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/busybox:latest Option 4: Consider a Docker Hub paid subscription For organizations with heavy Docker Hub usage, upgrading to a paid Docker subscription (Team or Business) will provide unlimited pulls, which may be the most straightforward solution. Best practices to reduce Docker Hub rate limit impact Regardless of which option you choose, consider these best practices to minimize Docker Hub rate limit impact: Use specific image tags instead of latest to avoid unnecessary pulls. Consolidate your Docker files to use the same base images across projects. Schedule less critical pipelines to run outside of peak hours. Use caching effectively to avoid pulling the same images repeatedly. Note: According to Docker Hub documentation, the pull count is incremented when pulling the image manifest, not based on image size or number of layers. Timeline and next steps Now Implement authentication for direct Docker Hub pulls. GitLab.com users can already configure Docker Hub authentication for the Dependency Proxy using either: The GraphQL API, or The UI in group settings Self-managed GitLab 17.10 users can configure Dependency Proxy authentication using the GraphQL API. April 1, 2025 Docker Hub rate limits go into effect. April 17, 2025 GitLab 17.11 will be released with UI-based Dependency Proxy authentication support for self-managed instances. We recommend taking action well before the April 1 deadline to avoid unexpected pipeline failures. For most users, configuring the Dependency Proxy with Docker Hub authentication is the most efficient long-term solution. Have questions or need implementation help? Please visit this issue where our team is actively providing support.",
  "image": "https://images.ctfassets.net/r9o86ar0p03f/13MzHoBMAZ9hqxKj4etNaU/e4867da5f2cd9ced17bb4e0a252a0c5e/blog-image-template-1800x945__3_.png?fm=webp\u0026w=820\u0026h=500",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv data-v-37f1022b=\"\" data-v-53094866=\"\" data-v-74bd29c6=\"\"\u003e\u003cp\u003eOn April 1, 2025, Docker will implement new \u003ca href=\"https://docs.docker.com/docker-hub/usage/\"\u003epull rate limits\u003c/a\u003e to Docker Hub that may significantly impact CI/CD pipelines across the industry, including those running on GitLab. The most significant change is the 10 pulls-per-hour limit for unauthenticated users.\u003c/p\u003e\n\u003ch2 id=\"what\u0026#39;s-changing%3F\" tabindex=\"-1\"\u003eWhat\u0026#39;s changing? \u003ca href=\"#what\u0026#39;s-changing%3F\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eStarting April 1, Docker will enforce the following pull rate limits:\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eUser type\u003c/th\u003e\n\u003cth\u003ePull rate limit per hour\u003c/th\u003e\n\u003cth\u003eNumber of public repositories\u003c/th\u003e\n\u003cth\u003eNumber of private repositories\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eBusiness, Team, Pro (authenticated)\u003c/td\u003e\n\u003ctd\u003eUnlimited (fair use)\u003c/td\u003e\n\u003ctd\u003eUnlimited\u003c/td\u003e\n\u003ctd\u003eUnlimited\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ePersonal (authenticated)\u003c/td\u003e\n\u003ctd\u003e100\u003c/td\u003e\n\u003ctd\u003eUnlimited\u003c/td\u003e\n\u003ctd\u003eUp to 1\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eUnauthenticated users\u003c/td\u003e\n\u003ctd\u003e10 per IPv4 address or IPv6 /64 subnet\u003c/td\u003e\n\u003ctd\u003eNot applicable\u003c/td\u003e\n\u003ctd\u003eNot applicable\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\nThis is particularly important because:\n\u003c/p\u003e\u003cul\u003e\n\u003cli\u003eGitLab\u0026#39;s Dependency Proxy currently pulls from Docker Hub as an unauthenticated user.\u003c/li\u003e\n\u003cli\u003eMost CI/CD pipelines that don\u0026#39;t use the Dependency Proxy pull directly from Docker Hub as unauthenticated users.\u003c/li\u003e\n\u003cli\u003eOn hosted runners for GitLab.com, multiple users might share the same IP address or subnet, making them collectively subject to this limit.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"how-this-impacts-gitlab-users\" tabindex=\"-1\"\u003eHow this impacts GitLab users \u003ca href=\"#how-this-impacts-gitlab-users\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eImpact on direct Docker Hub pulls\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eIf your CI/CD pipelines directly pull images from Docker Hub without authentication, they will be limited to 10 pulls per hour per IP address. For pipelines that run frequently or across multiple projects sharing the same runner infrastructure, this will quickly exhaust the limit and cause pipeline failures.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eImpact on GitLab Dependency Proxy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eThe GitLab Dependency Proxy feature allows you to cache Docker images within GitLab to speed up pipelines and reduce external dependencies. However, the current implementation pulls from Docker Hub as an unauthenticated user, meaning it will also be subject to the 10 pulls-per-hour limit.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eImpact on hosted runners\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eFor hosted runners on GitLab.com, we use \u003ca href=\"https://cloud.google.com/artifact-registry/docs/pull-cached-dockerhub-images\"\u003eGoogle Cloud\u0026#39;s pull-through cache\u003c/a\u003e. This mirrors the commonly pulled images and allows us to avoid rate limits. Job images, defined as \u003ccode\u003eimage:\u003c/code\u003e or \u003ccode\u003eservices:\u003c/code\u003e in your \u003ccode\u003e.gitlab-ci.yml\u003c/code\u003e file, are not affected by rate limits without any necessary changes.\u003c/p\u003e\n\u003cp\u003eThings are slightly more challenging whenever images are pulled within the runner environment. The most common use case to pull images during runner runtime is to build an image using Docker-in-Docker or Kaniko. In this scenario, the Docker Hub image defined in your \u003ccode\u003eDockerfile\u003c/code\u003e will be pulled directly from Docker Hub and likely affected by rate limits.\u003c/p\u003e\n\u003ch2 id=\"how-gitlab-is-responding\" tabindex=\"-1\"\u003eHow GitLab is responding \u003ca href=\"#how-gitlab-is-responding\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eWe\u0026#39;re actively working on solutions to mitigate these challenges:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eDependency Proxy authentication:\u003c/strong\u003e We\u0026#39;ve added support for Docker Hub authentication in the \u003ca href=\"https://gitlab.com/gitlab-org/gitlab/-/issues/331741\"\u003eGitLab Dependency Proxy feature\u003c/a\u003e. This will allow the Dependency Proxy to pull images from Docker Hub as an authenticated user, significantly increasing the rate limits.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDocumentation updates:\u003c/strong\u003e We\u0026#39;ve updated our \u003ca href=\"https://docs.gitlab.com/user/packages/dependency_proxy/#configure-credentials\"\u003edocumentation\u003c/a\u003e to provide clear guidance on configuring pipeline authentication for Docker Hub.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eInternal infrastructure preparation:\u003c/strong\u003e We\u0026#39;re preparing our internal infrastructure to minimize the impact on hosted runners for GitLab.com.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"how-you-can-prepare\" tabindex=\"-1\"\u003eHow you can prepare \u003ca href=\"#how-you-can-prepare\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eOption 1: Configure Docker Hub authentication in your pipelines\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eFor pipelines that pull directly from Docker Hub, you can configure authentication to increase your rate limit to 100 pulls per hour (or unlimited with a paid Docker Hub subscription).\u003c/p\u003e\n\u003cp\u003eAdd Docker Hub credentials to your project or group CI/CD variables (not in your \u003ccode\u003e.gitlab-ci.yml\u003c/code\u003e file). Please refer to our \u003ca href=\"https://docs.gitlab.com/ci/docker/using_docker_images/#use-statically-defined-credentials\"\u003edocumentation on using Docker images\u003c/a\u003e for detailed instructions on setting up the \u003ccode\u003eDOCKER_AUTH_CONFIG\u003c/code\u003e CI/CD variable correctly.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eOption 2: Use the GitLab Container Registry\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eConsider pushing your frequently used Docker images to your \u003ca href=\"https://docs.gitlab.com/user/packages/container_registry/\"\u003eGitLab Container Registry\u003c/a\u003e. This eliminates the need to pull from Docker Hub during CI/CD runs:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003ePull the image from Docker Hub.\u003c/li\u003e\n\u003cli\u003eTag it for your GitLab Container Registry.\u003c/li\u003e\n\u003cli\u003ePush it to your GitLab Container Registry.\u003c/li\u003e\n\u003cli\u003eUpdate your pipelines to pull from GitLab Container Registry.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003ccode\u003edocker pull busybox:latest docker tag busybox:latest $CI_REGISTRY_IMAGE/busybox:latest docker push $CI_REGISTRY_IMAGE/busybox:latest\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eThen in your \u003ccode\u003e.gitlab-ci.yml\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eimage: $CI_REGISTRY_IMAGE/busybox:latest\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eOption 3: Use GitLab Dependency Proxy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eGitLab\u0026#39;s Dependency Proxy feature provides a way to cache and proxy Docker images, reducing external dependencies and rate limit issues.\u003c/p\u003e\n\u003cp\u003eCurrent authentication options:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eGitLab 17.10: Configure Docker Hub authentication for the Dependency Proxy using \u003ca href=\"https://docs.gitlab.com/user/packages/dependency_proxy/#configure-credentials-using-the-graphql-api\"\u003eGraphQL API\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGitLab 17.11: Use the new UI-based configuration in your group\u0026#39;s settings (already available on GitLab.com)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOnce authentication is properly configured, you can:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eConfigure Docker Hub credentials in your group\u0026#39;s Dependency Proxy settings:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cul\u003e\n\u003cli\u003eFor GitLab 17.11+ (or current GitLab.com): Navigate to your group\u0026#39;s settings \u0026gt; Packages \u0026amp; Registries \u0026gt; Dependency Proxy.\u003c/li\u003e\n\u003cli\u003eFor GitLab 17.10: Use the GraphQL API to configure authentication.\u003c/li\u003e\n\u003c/ul\u003e\n\u003col start=\"2\"\u003e\n\u003cli\u003eUpdate your pipelines to use the Dependency Proxy URLs in your CI/CD configuration:\n\u003ccode\u003eimage: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/busybox:latest\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cstrong\u003eOption 4: Consider a Docker Hub paid subscription\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eFor organizations with heavy Docker Hub usage, upgrading to a paid Docker subscription (Team or Business) will provide unlimited pulls, which may be the most straightforward solution.\u003c/p\u003e\n\u003ch2 id=\"best-practices-to-reduce-docker-hub-rate-limit-impact\" tabindex=\"-1\"\u003eBest practices to reduce Docker Hub rate limit impact \u003ca href=\"#best-practices-to-reduce-docker-hub-rate-limit-impact\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eRegardless of which option you choose, consider these best practices to minimize Docker Hub rate limit impact:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse specific image tags instead of \u003ccode\u003elatest\u003c/code\u003e to avoid unnecessary pulls.\u003c/li\u003e\n\u003cli\u003eConsolidate your Docker files to use the same base images across projects.\u003c/li\u003e\n\u003cli\u003eSchedule less critical pipelines to run outside of peak hours.\u003c/li\u003e\n\u003cli\u003eUse caching effectively to avoid pulling the same images repeatedly.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e According to Docker Hub \u003ca href=\"https://docs.docker.com/docker-hub/usage/pulls/#pull-definition\"\u003edocumentation\u003c/a\u003e, the pull count is incremented when pulling the image manifest, not based on image size or number of layers.\u003c/p\u003e\n\u003ch2 id=\"timeline-and-next-steps\" tabindex=\"-1\"\u003eTimeline and next steps \u003ca href=\"#timeline-and-next-steps\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eNow\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eImplement authentication for direct Docker Hub pulls.\u003c/li\u003e\n\u003cli\u003eGitLab.com users can already configure Docker Hub authentication for the Dependency Proxy using either:\n\u003cul\u003e\n\u003cli\u003eThe GraphQL API, or\u003c/li\u003e\n\u003cli\u003eThe UI in group settings\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eSelf-managed GitLab 17.10 users can configure Dependency Proxy authentication using the GraphQL API.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eApril 1, 2025\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDocker Hub rate limits go into effect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eApril 17, 2025\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eGitLab 17.11 will be released with UI-based Dependency Proxy authentication support for self-managed instances.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWe recommend taking action well before the April 1 deadline to avoid unexpected pipeline failures. For most users, configuring the Dependency Proxy with Docker Hub authentication is the most efficient long-term solution.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eHave questions or need implementation help? Please visit \u003ca href=\"https://gitlab.com/gitlab-org/gitlab/-/issues/526605\"\u003ethis issue\u003c/a\u003e where our team is actively providing support.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "8 min read",
  "publishedTime": "2025-03-24T00:00:00Z",
  "modifiedTime": null
}
