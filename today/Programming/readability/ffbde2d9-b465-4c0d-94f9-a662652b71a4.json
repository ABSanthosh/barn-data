{
  "id": "ffbde2d9-b465-4c0d-94f9-a662652b71a4",
  "title": "Microsoft Announced Edit, New Open-Source Command-Line Text Editor for Windows at Build 2025",
  "link": "https://www.infoq.com/news/2025/05/microsoft-edit-new-tui-editor/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "At its Build 2025 conference, Microsoft announced Edit, a new open-source command-line text editor, to be distributed in the future as part of Windows 11. Edit aims to provide a lightweight native, modern command-line editing experience similar to Nano and Vim. By Bruno Couriol",
  "author": "Bruno Couriol",
  "published": "Fri, 23 May 2025 22:44:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Microsoft",
    "Web Development",
    "Rust",
    "Text Editor",
    "Development",
    "news"
  ],
  "byline": "Bruno Couriol",
  "length": 2591,
  "excerpt": "At its Build 2025 conference, Microsoft announced Edit, a new open-source command-line text editor, to be distributed in the future as part of Windows 11. Edit aims to provide a lightweight native, mo",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s1_20250513062617/apple-touch-icon.png",
  "text": "At its Build 2025 conference, Microsoft announced Edit, a new open-source command-line text editor, to be distributed in the future as part of Windows 11. Edit aims to provide a lightweight native, modern command-line editing experience similar to Nano and Vim. Microsoft explained developing Edit because 64-bit Windows lacked a default command-line text editor, a gap since the 32-bit MS-DOS Edit. Microsoft opted for a modeless design to be more user-friendly than modal editors like Vim (see Stackoverflow’s Helping One Million Developers Exit Vim) and built its own tool after finding existing modeless options either unsuitable for bundling or lacking Windows support. Microsoft positions Edit as a simple editor for simple needs. Features include mouse support, the ability to open multiple files and switch between them, find and replace capabilities (including regex), and word wrap. The user interface features a modern interface and input controls similar to Visual Studio Code. There is however no right-click menu in the app. Written in Rust, the editor stands small, at less than 250KB in size. Discussions among developers on platforms like Reddit and Hacker News show varied reactions. Many commenters debated the necessity of a new CLI editor on Windows, questioning its use case given existing options. Some feel it’s redundant for those already using WSL with Nano or Vim or other tools like Git Bash, while others see it as potentially useful for quick, basic edits in a native Windows context without needing third-party installs or WSL. Edit’s main contributor chimed in with a detailed rationale behind the in-house development: We decided against nano, kilo, micro, yori, and others for various reasons. What we wanted was a small binary so we can ship it with all variants of Windows without extra justifications for the added binary size. It also needed to have decent Unicode support. It should’ve also been one built around VT output as opposed to Console APIs to allow for seamless integration with SSH. Lastly, first-class support for Windows was obviously also quite important. I think out of the listed editors, micro was probably the one we wanted to use the most, but… it’s just too large. Microsoft has released Edit’s source code under the MIT license. Edit is not currently available in the stable channel of Windows 11. However, users can download Microsoft Edit from the project’s GitHub page. About the Author Bruno Couriol",
  "image": "https://res.infoq.com/news/2025/05/microsoft-edit-new-tui-editor/en/headerimage/generatedHeaderImage-1748036847379.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eAt its \u003ca href=\"https://news.microsoft.com/build-2025/\"\u003eBuild 2025\u003c/a\u003e conference, \u003ca href=\"https://devblogs.microsoft.com/commandline/edit-is-now-open-source/\"\u003eMicrosoft announced Edit, a new open-source command-line text editor\u003c/a\u003e, to be distributed in the future as part of Windows 11. Edit aims to provide a lightweight native, modern command-line editing experience similar to \u003ca href=\"https://www.nano-editor.org/\"\u003eNano\u003c/a\u003e and \u003ca href=\"https://www.vim.org/\"\u003eVim\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eMicrosoft explained developing Edit because 64-bit Windows lacked a default command-line text editor, a gap since the 32-bit MS-DOS Edit. Microsoft opted for a modeless design to be more user-friendly than modal editors like Vim (see Stackoverflow’s \u003ca href=\"https://stackoverflow.blog/2017/05/23/stack-overflow-helping-one-million-developers-exit-vim/\"\u003e\u003cem\u003eHelping One Million Developers Exit Vim\u003c/em\u003e\u003c/a\u003e) and built its own tool after finding existing modeless options either unsuitable for bundling or lacking Windows support.\u003c/p\u003e\n\u003cp\u003eMicrosoft \u003ca href=\"https://github.com/microsoft/edit?tab=readme-ov-file#-edit\"\u003epositions Edit as \u003cem\u003ea simple editor for simple needs\u003c/em\u003e\u003c/a\u003e. Features include mouse support, the ability to open multiple files and switch between them, find and replace capabilities (including regex), and word wrap. The user interface features a modern interface and input controls similar to Visual Studio Code.  There is however no right-click menu in the app.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/microsoft/edit?tab=readme-ov-file#build-instructions\"\u003eWritten in Rust\u003c/a\u003e, the editor stands small, at less than 250KB in size.\u003c/p\u003e\n\u003cp\u003eDiscussions among developers on platforms like \u003ca href=\"https://www.reddit.com/r/rust/comments/1kqp963/edit_is_now_open_source_microsofts_64_bit_tui/\"\u003eReddit\u003c/a\u003e and \u003ca href=\"https://news.ycombinator.com/item?id=44031529\"\u003eHacker News\u003c/a\u003e show varied reactions. Many commenters debated the necessity of a new CLI editor on Windows, questioning its use case given existing options. Some feel it’s \u003ca href=\"https://news.ycombinator.com/item?id=44035361\"\u003eredundant for those already using WSL with Nano or Vim\u003c/a\u003e or other tools like Git Bash, while others see it as potentially useful for quick, basic edits in a native Windows context without needing third-party installs or WSL.\u003c/p\u003e\n\u003cp\u003eEdit’s main contributor \u003ca href=\"https://news.ycombinator.com/item?id=44034961\"\u003echimed in with a detailed rationale\u003c/a\u003e behind the in-house development:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWe decided against nano, \u003ca href=\"https://github.com/antirez/kilo\"\u003ekilo\u003c/a\u003e, \u003ca href=\"https://micro-editor.github.io/\"\u003emicro\u003c/a\u003e, \u003ca href=\"https://github.com/malxau/yori\"\u003eyori\u003c/a\u003e, and others for various reasons. What we wanted was a small binary so we can ship it with all variants of Windows without extra justifications for the added binary size. It also needed to have decent Unicode support. It should’ve also been one built around VT output as opposed to Console APIs to allow for seamless integration with SSH. Lastly, first-class support for Windows was obviously also quite important. I think out of the listed editors, micro was probably the one we wanted to use the most, but… it’s just too large.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eMicrosoft has released Edit’s source code under the MIT license. Edit is not currently available in the stable channel of Windows 11. However, users can download Microsoft Edit from the project’s  \u003ca href=\"https://github.com/microsoft/edit/releases\"\u003eGitHub page\u003c/a\u003e.\u003c/p\u003e\n\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Bruno-Couriol\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eBruno Couriol\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": "2025-05-23T00:00:00Z",
  "modifiedTime": null
}
