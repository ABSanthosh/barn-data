{
  "id": "54b585e4-8a73-4885-9343-cd74b5240307",
  "title": "Ktor 3.1.0 Release",
  "link": "https://blog.jetbrains.com/kotlin/2025/02/ktor-3-1-0-release/",
  "description": "Ktor 3.1.0 is here! This is the first minor release of the year, bringing exciting new features, performance improvements, and bug fixes. This release includes improvements to server-sent events (SSE), documentation enhancements, WebAssembly (Wasm) support, dependency injection design updates, and some initial steps toward gRPC integration. ðŸš€ Get started with Ktor 3.1.0 now! Ready to [â€¦]",
  "author": "Leonid Stashevsky",
  "published": "Thu, 13 Feb 2025 12:48:01 +0000",
  "source": "https://blog.jetbrains.com/feed",
  "categories": [
    "ktor",
    "news",
    "release"
  ],
  "byline": "Leonid Stashevsky",
  "length": 11981,
  "excerpt": "Ktor 3.1.0 is here! It introduces exciting new features, performance improvements, and bug fixes.",
  "siteName": "The JetBrains Blog",
  "favicon": "https://blog.jetbrains.com/wp-content/uploads/2024/01/cropped-mstile-310x310-1-180x180.png",
  "text": "A concise multiplatform language developed by JetBrains Ktor NewsKtor 3.1.0 Release Ktor 3.1.0 is here! This is the first minor release of the year, bringing exciting new features, performance improvements, and bug fixes. This release includes improvements to server-sent events (SSE), documentation enhancements, WebAssembly (Wasm) support, dependency injection design updates, and some initial steps toward gRPC integration. ðŸš€ Get started with Ktor 3.1.0 now! Ready to explore Ktor 3.1.0? Start building your next project today with our interactive project generator at start.ktor.io. Your feedback and contributions are always welcome! ðŸ”— Get Started With Ktor | ðŸ“¢ Join the Community on Reddit and Slack Release notes Ktor CLI: A new tool to create Ktor projects Weâ€™re introducing a new command-line tool designed to simplify the creation of Ktor projects. It provides an easy-to-use interface for generating project templates with your preferred features, reducing boilerplate and setup times. Installation MacOS and Linux (with Homebrew https://brew.sh/) brew install ktor â€“ Windows (with Winget): winget install --id=JetBrains.KtorCLI -e How to create a project To start a new project, simply run: ktor new This command opens interactive mode, allowing you to select plugins and configure your project based on the same options available at (start.ktor.io). For the non-interactive mode, run ktor --help to see the available options. Contributing Ktor CLI is open source! Share your feedback and contribute at https://github.com/ktorio/ktor-cli. Find more information on YouTrack: KTOR-3808. SSE improvements: Serialization, reconnection, heartbeat Server-sent events (SSE) support has been enhanced with built-in serialization for both the client and server side. The feature allows clients and servers to handle SSE streams with automatic (de)serialization. Users simply provide a deserialize function to convert incoming data into typed objects as follows: Client-side SSE with deserialization client.sse({ Â Â Â Â Â url(\"http://localhost:8080/serverSentEvents\") Â }, deserialize = { typeInfo, jsonString -\u003e Â Â Â Â Â val serializer = Json.serializersModule.serializer(typeInfo.kotlinType!!) Â Â Â Â Â Json.decodeFromString(serializer, jsonString)!! Â }) { Â Â Â Â Â incoming.collect { event: TypedServerSentEvent\u003cString\u003e -\u003e Â Â Â Â Â Â Â Â Â when (event.event) { Â Â Â Â Â Â Â Â Â Â Â Â \"customer\" -\u003e { Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â val customer: Customer? = deserialize\u003cCustomer\u003e(event.data) Â Â Â Â Â Â Â Â Â Â Â Â } Â Â Â Â Â Â Â Â Â Â Â Â \"product\" -\u003e { Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â val product: Product? = deserialize\u003cProduct\u003e(event.data) Â Â Â Â Â Â Â Â Â Â Â Â } Â Â Â Â Â Â Â Â } Â Â Â Â } } Server-side SSE with serialization routing { Â Â Â Â Â sse(\"/json\", serialize = { typeInfo, it -\u003e Â Â Â Â Â Â Â Â Â val serializer = Json.serializersModule.serializer(typeInfo.kotlinType!!) Â Â Â Â Â Â Â Â Â Json.encodeToString(serializer, it) Â Â Â Â Â }) { Â Â Â Â Â Â Â Â Â send(Customer(0, \"Jet\", \"Brains\")) Â Â Â Â Â Â Â Â Â send(Product(0, listOf(100, 200))) Â Â Â Â Â } Â } These improvements simplify working with structured SSE data in Ktor. SSE Heartbeat Server-sent events (SSE) now include the ability to specify a heartbeat event to keep the session active. The heartbeat will send a specified event at a defined interval as long as the session remains active. This helps maintain the connection during idle periods. routing { Â Â Â Â sse { Â Â Â Â Â Â Â Â heartbeat { Â Â Â Â Â Â Â Â Â Â Â Â period = 10.seconds Â Â Â Â Â Â Â Â Â Â Â Â event = ServerSentEvent(\"heartbeat\") Â Â Â Â Â Â Â Â } Â Â Â Â Â Â Â //Â  ... Â Â Â Â } } SSE reconnect Starting from 3.1.0, you can enable the server-sent events (SSE) reconnection feature by setting the maxReconnectionAttempts property to a value greater than zero: install(SSE) { Â Â Â Â maxReconnectionAttempts = 4 Â Â Â Â reconnectionTime = 2.seconds } If the connection to the server is lost, the client will wait for the specified reconnectionTime before attempting to reconnect, making no more than maxReconnectionAttempts attempts to reestablish the connection. Find more information on YouTrack: KTOR-7435, KTOR-6242, KTOR-7954 Support multipart with HttpClient Ktorâ€™s HttpClient now includes improved support for multipart requests, making it easier to upload files and handle complex request bodies across different engines. It is now possible to receive MultiPartData with the HttpClient: val response = client.post(\"https://myserver.com/multipart/receive\") val multipart = response.body\u003cMultiPartData\u003e() multipart.forEachPart { part -\u003e Â Â Â Â when (part) { Â Â Â Â Â Â Â Â is PartData.FormItem -\u003e { Â Â Â Â Â Â Â Â Â Â Â Â println(\"Form item key: \\${part.name}\") Â Â Â Â Â Â Â Â Â Â Â Â val value = part.value Â Â Â Â Â Â Â Â Â Â Â Â // ... Â Â Â Â Â Â Â Â } Â Â Â Â Â Â Â Â is PartData.FileItem -\u003e { Â Â Â Â Â Â Â Â Â Â Â Â println(\"file: \\${part.name}\") Â Â Â Â Â Â Â Â Â Â Â Â println(part.originalFileName) Â Â Â Â Â Â Â Â Â Â Â Â val fileContent: ByteReadChannel = part.provider() Â Â Â Â Â Â Â Â Â Â Â Â // ... Â Â Â Â Â Â Â Â } Â Â Â Â } Â Â Â Â part.dispose() } Find more information on YouTrack: KTOR-6632 API and docs improvements process We are constantly working on polishing the quality of the API and its associated documentation. We understand that reporting problems may be challenging, so to simplify this process, we introduced the Report a Problem link for every API symbol available both in the IDEâ€™s help section and on api.ktor.io. This button will lead you to the anonymous feedback form (https://ktor.io/feedback/), allowing you to provide API-specific feedback or report a bug. Your feedback will be logged as an issue and addressed in future releases. Documentation is a key part of Ktor, and weâ€™ve introduced a structured API docs improvement process to ensure better clarity, consistency, and usability for developers. Compression plugin can be disabled for a specific request The Compression plugin compresses responses if the client supports it. However, sometimes compression needs to be suppressed (e.g. for proxying or storing compressed content). Previously, options were available for compression but not for decompression. Now, weâ€™ve added helpers and flags for finer control: fun Application.module() { Â Â Â Â install(Compression) Â Â Â Â routing { Â Â Â Â Â Â Â Â get(\"/endpoint-without-compression\") { Â Â Â Â Â Â Â Â Â Â Â Â // Prevent response body compression Â Â Â Â Â Â Â Â Â Â Â Â call.suppressCompression()Â  Â Â Â Â Â Â Â Â Â Â Â Â println(call.isDecompressionSuppressed) Â Â Â Â Â Â Â Â Â Â Â Â // Prevent request body decompression Â Â Â Â Â Â Â Â Â Â Â Â call.suppressDecompression()Â  Â Â Â Â Â Â Â Â Â Â Â Â println(call.isCompressionSuppressed) // true Â Â Â Â Â Â Â Â } Â Â Â Â } } Find more information on YouTrack: KTOR-7679 CIO: Add wasm-js and js targets for the CIO server, client, and network API The CIO has been expanded to support wasm-js and js targets for both the server and client side. This makes CIO the first server-side JavaScript engine for Ktor, enabling the running of Ktor-based servers directly in JavaScript environments. Find more information on YouTrack: KTOR-865, KTOR-7675, KTOR-6004 Further improvements and bug fixes for kotlinx-io integration The integration with the kotlinx-io continues to be refined, improving performance, memory usage, and closer interactions across Ktor async io implementations. We have also added a new API extension to convert between kotlinx-io and Ktor and Java io primitives. Find more information on YouTrack: KTOR-7327 Add Unix Domain Socket support for native targets Ktor now supports Unix Domain Sockets on native targets, enabling inter-process communication (IPC) without relying on TCP. Hereâ€™s how to create a simple echo server using Unix Domain Sockets: fun main() { Â Â Â Â val socketPath = \"ktor-echo-test.sock\" Â Â Â Â val server = aSocket(ActorSelectorManager(Dispatchers.IO)).tcp().bind(UnixSocketAddress(socketPath)) Â Â Â Â println(\"Server is listening on $socketPath\") Â Â Â Â GlobalScope.launch { Â Â Â Â Â Â Â Â val connection = server.accept() Â Â Â Â Â Â Â Â val input = connection.openReadChannel() Â Â Â Â Â Â Â Â val output = connection.openWriteChannel(autoFlush = true) Â Â Â Â Â Â Â Â val message = input.readUTF8Line() Â Â Â Â Â Â Â Â println(\"Received: $message\") Â Â Â Â Â Â Â Â output.writeStringUtf8(\"Echo: $message\") Â Â Â Â Â Â Â Â connection.close() Â Â Â Â } Â Â Â Â val client = aSocket(ActorSelectorManager(Dispatchers.IO)).tcp().connect(UnixSocketAddress(socketPath)) Â Â Â Â val clientOutput = client.openWriteChannel(autoFlush = true) Â Â Â Â clientOutput.writeStringUtf8(\"Hello, Unix Socket!\") Â Â Â Â val clientInput = client.openReadChannel() Â Â Â Â println(clientInput.readUTF8Line()) Â Â Â Â client.close() Â Â Â Â server.close() } Find more information on YouTrack: KTOR-6960 Curl client engine: Static linking, ARM support, WebSockets Starting from Ktor 3.1.0, the Curl client engine is statically linked, eliminating the need to install third-party dependencies. This makes it easier to use Curl-based networking. Additionally, ARM architecture support has been added, including for macOS. Find more information on YouTrack: KTOR-5199 Welcome Ktor Library Improvement Proposals (KLIPðŸ“Ž) Weâ€™re happy to introduce Ktor Library Improvement Proposals (KLIP) â€“ an open initiative for the community to propose, discuss, and collaborate on new features and improvements for Ktor. The KLIP process is designed to make Ktorâ€™s evolution transparent and community-driven. The KLIP repository is open for contributions, and we welcome everyone to participate in discussions or submit new proposals. Approved KLIPs are merged into the repository and will be implemented in the framework by the team. The first ðŸ“Ž dependency injection is available for review and feedback: https://github.com/ktorio/ktor-klip/pull/1 Looking forward to gRPC support with kotlinx-rpc The basic support of the gRPC has been added to kotlinx-rpc 0.5.0: https://kotlin.github.io/kotlinx-rpc/grpc-configuration.html#dependencies-configuration. This moves the highly requested KTOR-1501 proposal forward. Weâ€™re planning further Ktor integration with gRPC, along with a plugin for start.ktor.io in future releases. This will help to simplify the setup and use of gRPC in Ktor applications. MCP: Exposing and consuming APIs for LLMs In preparation for Ktor 3.1.0, weâ€™ve been helping to build the MCP Kotlin SDK (https://github.com/modelcontextprotocol/kotlin-sdk). This lightweight SDK enables integration between your applications and large language models (LLMs), allowing you to expose your APIs to language models and agents or build clients connecting multiple applications with LLMs. The library is already published on MavenCentral. ðŸš€ Thank you! We want to say thank you to everyone for all the contributions and feedback you provide! We especially want to mention the following active contributors: anton-erofeev, FredrikMeyer, IRus, whyoleg, SIMULATAN, Thomas-Vos, and adriandieter. Start building your next project with start.ktor.io. Your feedback and contributions are always welcome! ðŸ”— Get Started With Ktor | ðŸ“¢ Join the Community on Reddit and Slack Subscribe to Kotlin Blog updates Discover more",
  "image": "https://blog.jetbrains.com/wp-content/uploads/2025/02/Ktor_3-1_Social_Share_1280x720-2x.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"main\"\u003e\n    \u003cdiv\u003e\n                        \u003ca href=\"https://blog.jetbrains.com/kotlin/\"\u003e\n                            \u003cimg src=\"https://blog.jetbrains.com/wp-content/uploads/2019/01/Kotlin-5.svg\" alt=\"Kotlin logo\"/\u003e\n                                                                                                \n                                                                                    \u003c/a\u003e\n                                                    \u003cp\u003eA concise multiplatform language developed by JetBrains\u003c/p\u003e\n                                            \u003c/div\u003e\n                            \u003csection data-clarity-region=\"article\"\u003e\n                \u003cdiv\u003e\n                    \t\t\t\t\u003cp\u003e\u003ca href=\"https://blog.jetbrains.com/kotlin/category/ktor/\"\u003eKtor\u003c/a\u003e\n\t\t\t\u003ca href=\"https://blog.jetbrains.com/kotlin/category/news/\"\u003eNews\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"major-updates\"\u003eKtor 3.1.0 Release\u003c/h2\u003e                    \n                    \n\u003cp\u003eKtor 3.1.0 is here! This is the first minor release of the year, bringing exciting new features, performance improvements, and bug fixes. This release includes improvements to server-sent events (SSE), documentation enhancements, WebAssembly (Wasm) support, dependency injection design updates, and some initial steps toward gRPC integration.\u003c/p\u003e\n\n\n\n\u003ch2\u003eðŸš€ Get started with Ktor 3.1.0 now!\u003c/h2\u003e\n\n\n\n\u003cp\u003eReady to explore Ktor 3.1.0? Start building your next project today with our interactive project generator at \u003ca href=\"https://kotl.in/ixiien\" data-type=\"link\" data-id=\"https://kotl.in/ixiien\" target=\"_blank\" rel=\"noopener\"\u003estart.ktor.io\u003c/a\u003e. Your feedback and contributions are always welcome!\u003c/p\u003e\n\n\n\n\u003cp\u003eðŸ”— \u003ca href=\"https://ktor.io/docs/welcome.html\" target=\"_blank\" rel=\"noopener\"\u003eGet Started With Ktor\u003c/a\u003e | ðŸ“¢ Join the Community on \u003ca href=\"https://www.reddit.com/r/ktor/\" target=\"_blank\" rel=\"noopener\"\u003eReddit\u003c/a\u003e and \u003ca href=\"https://surveys.jetbrains.com/s3/kotlin-slack-sign-up?_gl=1*1wxglsg*_gcl_au*MTE4MjgxMTg3Mi4xNzM2MjY0ODgy*_ga*MTYyODczMDg5NS4xNzAyMDQyMTMx*_ga_9J976DJZ68*MTczODY3Mjg3Ny4xOTguMS4xNzM4NjczNDI2LjM2LjAuMA..\" target=\"_blank\" rel=\"noopener\"\u003eSlack\u003c/a\u003e\u003c/p\u003e\n\n\n\n\u003ch2\u003eRelease notes\u003c/h2\u003e\n\n\n\n\u003ch2\u003eKtor CLI: A new tool to create Ktor projects\u003c/h2\u003e\n\n\n\n\u003cp\u003eWeâ€™re introducing a new command-line tool designed to simplify the creation of Ktor projects. It provides an easy-to-use interface for generating project templates with your preferred features, reducing boilerplate and setup times.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cp\u003e\n\u003ciframe title=\"Ktor CLI Generator Demo\" width=\"500\" height=\"375\" src=\"https://www.youtube.com/embed/mnfRGl7yMqU?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\u003c/p\u003e\u003c/figure\u003e\n\n\n\n\u003ch3\u003eInstallation\u003c/h3\u003e\n\n\n\n\u003ch4\u003eMacOS and Linux (with Homebrew \u003ca href=\"https://brew.sh/\" target=\"_blank\" rel=\"noopener\"\u003ehttps://brew.sh/\u003c/a\u003e)\u003c/h4\u003e\n\n\n\n\u003cpre data-enlighter-language=\"shell\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\"\u003ebrew install ktor\u003c/pre\u003e\n\n\n\n\u003ch4\u003eâ€“ Windows (with \u003ca href=\"https://learn.microsoft.com/en-us/windows/package-manager/winget/\" target=\"_blank\" rel=\"noopener\"\u003eWinget\u003c/a\u003e):\u003c/h4\u003e\n\n\n\n\u003cpre data-enlighter-language=\"shell\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\"\u003ewinget install --id=JetBrains.KtorCLI -e\u003c/pre\u003e\n\n\n\n\u003ch3\u003eHow to create a project\u003c/h3\u003e\n\n\n\n\u003cp\u003eTo start a new project, simply run:\u003c/p\u003e\n\n\n\n\u003cpre data-enlighter-language=\"shell\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\"\u003ektor new\u003c/pre\u003e\n\n\n\n\u003cp\u003eThis command opens interactive mode, allowing you to select plugins and configure your project based on the same options available at (\u003ca href=\"https://kotl.in/ixiien\" data-type=\"link\" data-id=\"https://kotl.in/ixiien\" target=\"_blank\" rel=\"noopener\"\u003estart.ktor.io\u003c/a\u003e).\u003c/p\u003e\n\n\n\n\u003cp\u003eFor the non-interactive mode, run \u003ccode\u003ektor --help\u003c/code\u003e to see the available options.\u003c/p\u003e\n\n\n\n\u003ch3\u003eContributing\u003c/h3\u003e\n\n\n\n\u003cp\u003eKtor CLI is open source! Share your feedback and contribute at \u003ca href=\"https://github.com/ktorio/ktor-cli\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/ktorio/ktor-cli\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cp\u003eFind more information on YouTrack: \u003ca href=\"https://youtrack.jetbrains.com/issue/KTOR-3808\" target=\"_blank\" rel=\"noopener\"\u003eKTOR-3808\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003ch2\u003eSSE improvements: Serialization, reconnection, heartbeat\u003c/h2\u003e\n\n\n\n\u003cp\u003eServer-sent events (SSE) support has been enhanced with built-in serialization for both the client and server side. The feature allows clients and servers to handle SSE streams with automatic (de)serialization. Users simply provide a deserialize function to convert incoming data into typed objects as follows:\u003c/p\u003e\n\n\n\n\u003ch3\u003eClient-side SSE with deserialization\u003c/h3\u003e\n\n\n\n\u003cpre data-enlighter-language=\"kotlin\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\"\u003eclient.sse({\nÂ Â Â Â Â url(\u0026#34;http://localhost:8080/serverSentEvents\u0026#34;)\nÂ }, deserialize = { typeInfo, jsonString -\u0026gt;\nÂ Â Â Â Â val serializer = Json.serializersModule.serializer(typeInfo.kotlinType!!)\nÂ Â Â Â Â Json.decodeFromString(serializer, jsonString)!!\nÂ }) {\nÂ Â Â Â Â incoming.collect { event: TypedServerSentEvent\u0026lt;String\u0026gt; -\u0026gt;\nÂ Â Â Â Â Â Â Â Â when (event.event) {\nÂ Â Â Â Â Â Â Â Â Â Â Â \u0026#34;customer\u0026#34; -\u0026gt; {\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â val customer: Customer? = deserialize\u0026lt;Customer\u0026gt;(event.data)\nÂ Â Â Â Â Â Â Â Â Â Â Â }\nÂ Â Â Â Â Â Â Â Â Â Â Â \u0026#34;product\u0026#34; -\u0026gt; {\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â val product: Product? = deserialize\u0026lt;Product\u0026gt;(event.data)\nÂ Â Â Â Â Â Â Â Â Â Â Â }\nÂ Â Â Â Â Â Â Â }\nÂ Â Â Â }\n}\u003c/pre\u003e\n\n\n\n\u003ch3\u003eServer-side SSE with serialization\u003c/h3\u003e\n\n\n\n\u003cpre data-enlighter-language=\"kotlin\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\"\u003erouting {\nÂ Â Â Â Â sse(\u0026#34;/json\u0026#34;, serialize = { typeInfo, it -\u0026gt;\nÂ Â Â Â Â Â Â Â Â val serializer = Json.serializersModule.serializer(typeInfo.kotlinType!!)\nÂ Â Â Â Â Â Â Â Â Json.encodeToString(serializer, it)\nÂ Â Â Â Â }) {\nÂ Â Â Â Â Â Â Â Â send(Customer(0, \u0026#34;Jet\u0026#34;, \u0026#34;Brains\u0026#34;))\nÂ Â Â Â Â Â Â Â Â send(Product(0, listOf(100, 200)))\nÂ Â Â Â Â }\nÂ }\u003c/pre\u003e\n\n\n\n\u003cp\u003eThese improvements simplify working with structured SSE data in Ktor.\u003c/p\u003e\n\n\n\n\u003ch3\u003eSSE Heartbeat\u003c/h3\u003e\n\n\n\n\u003cp\u003eServer-sent events (SSE) now include the ability to specify a heartbeat event to keep the session active. The \u003ccode\u003eheartbeat\u003c/code\u003e will send a specified event at a defined interval as long as the session remains active. This helps maintain the connection during idle periods.\u003c/p\u003e\n\n\n\n\u003cpre data-enlighter-language=\"kotlin\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\"\u003erouting {\nÂ Â Â Â sse {\nÂ Â Â Â Â Â Â Â heartbeat {\nÂ Â Â Â Â Â Â Â Â Â Â Â period = 10.seconds\nÂ Â Â Â Â Â Â Â Â Â Â Â event = ServerSentEvent(\u0026#34;heartbeat\u0026#34;)\nÂ Â Â Â Â Â Â Â }\nÂ Â Â Â Â Â Â //Â  ...\nÂ Â Â Â }\n}\u003c/pre\u003e\n\n\n\n\u003ch3\u003eSSE reconnect\u003c/h3\u003e\n\n\n\n\u003cp\u003eStarting from 3.1.0, you can enable the server-sent events (SSE) reconnection feature by setting the \u003ccode\u003emaxReconnectionAttempts\u003c/code\u003e property to a value greater than zero:\u003c/p\u003e\n\n\n\n\u003cpre data-enlighter-language=\"kotlin\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\"\u003einstall(SSE) {\nÂ Â Â Â maxReconnectionAttempts = 4\nÂ Â Â Â reconnectionTime = 2.seconds\n}\u003c/pre\u003e\n\n\n\n\u003cp\u003eIf the connection to the server is lost, the client will wait for the specified \u003ccode\u003ereconnectionTime\u003c/code\u003e before attempting to reconnect, making no more than \u003ccode\u003emaxReconnectionAttempts\u003c/code\u003e attempts to reestablish the connection.\u003c/p\u003e\n\n\n\n\u003cp\u003eFind more information on YouTrack: \u003ca href=\"https://youtrack.jetbrains.com/issue/KTOR-7435\" target=\"_blank\" rel=\"noopener\"\u003eKTOR-7435\u003c/a\u003e, \u003ca href=\"https://youtrack.jetbrains.com/issue/KTOR-6242\" target=\"_blank\" rel=\"noopener\"\u003eKTOR-6242\u003c/a\u003e, \u003ca href=\"https://youtrack.jetbrains.com/issue/KTOR-7954\" target=\"_blank\" rel=\"noopener\"\u003eKTOR-7954\u003c/a\u003e\u003c/p\u003e\n\n\n\n\u003ch2\u003eSupport multipart with HttpClient\u003c/h2\u003e\n\n\n\n\u003cp\u003eKtorâ€™s HttpClient now includes improved support for multipart requests, making it easier to upload files and handle complex request bodies across different engines.\u003c/p\u003e\n\n\n\n\u003cp\u003eIt is now possible to receive \u003ccode\u003eMultiPartData\u003c/code\u003e with the HttpClient:\u003c/p\u003e\n\n\n\n\u003cpre data-enlighter-language=\"kotlin\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\"\u003eval response = client.post(\u0026#34;https://myserver.com/multipart/receive\u0026#34;)\n\nval multipart = response.body\u0026lt;MultiPartData\u0026gt;()\n\nmultipart.forEachPart { part -\u0026gt;\nÂ Â Â Â when (part) {\nÂ Â Â Â Â Â Â Â is PartData.FormItem -\u0026gt; {\nÂ Â Â Â Â Â Â Â Â Â Â Â println(\u0026#34;Form item key: \\${part.name}\u0026#34;)\nÂ Â Â Â Â Â Â Â Â Â Â Â val value = part.value\nÂ Â Â Â Â Â Â Â Â Â Â Â // ...\nÂ Â Â Â Â Â Â Â }\nÂ Â Â Â Â Â Â Â is PartData.FileItem -\u0026gt; {\nÂ Â Â Â Â Â Â Â Â Â Â Â println(\u0026#34;file: \\${part.name}\u0026#34;)\nÂ Â Â Â Â Â Â Â Â Â Â Â println(part.originalFileName)\nÂ Â Â Â Â Â Â Â Â Â Â Â val fileContent: ByteReadChannel = part.provider()\nÂ Â Â Â Â Â Â Â Â Â Â Â // ...\nÂ Â Â Â Â Â Â Â }\nÂ Â Â Â }\nÂ Â Â Â part.dispose()\n}\u003c/pre\u003e\n\n\n\n\u003cp\u003eFind more information on YouTrack: \u003ca href=\"https://youtrack.jetbrains.com/issue/KTOR-6632\" target=\"_blank\" rel=\"noopener\"\u003eKTOR-6632\u003c/a\u003e\u003c/p\u003e\n\n\n\n\u003ch2\u003eAPI and docs improvements process\u003c/h2\u003e\n\n\n\n\u003cp\u003eWe are constantly working on polishing the quality of the API and its associated documentation. We understand that reporting problems may be challenging, so to simplify this process, we introduced the \u003cem\u003eReport a Problem\u003c/em\u003e link for every API symbol available both in the IDEâ€™s help section and on \u003ca href=\"https://api.ktor.io\" target=\"_blank\" rel=\"noopener\"\u003eapi.ktor.io\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" fetchpriority=\"high\" width=\"1586\" height=\"1178\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/02/image-17.png\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eThis button will lead you to the anonymous feedback form (\u003ca href=\"https://ktor.io/feedback/\" target=\"_blank\" rel=\"noopener\"\u003ehttps://ktor.io/feedback/\u003c/a\u003e), allowing you to provide API-specific feedback or report a bug. Your feedback will be logged as an issue and addressed in future releases.\u003c/p\u003e\n\n\n\n\u003cp\u003eDocumentation is a key part of Ktor, and weâ€™ve introduced a structured API docs improvement process to ensure better clarity, consistency, and usability for developers.\u003c/p\u003e\n\n\n\n\u003ch2\u003eCompression plugin can be disabled for a specific request\u003c/h2\u003e\n\n\n\n\u003cp\u003eThe Compression plugin compresses responses if the client supports it. However, sometimes compression needs to be suppressed (e.g. for proxying or storing compressed content).\u003c/p\u003e\n\n\n\n\u003cp\u003ePreviously, options were available for compression but not for decompression. Now, weâ€™ve added helpers and flags for finer control:\u003c/p\u003e\n\n\n\n\u003cpre data-enlighter-language=\"kotlin\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\"\u003efun Application.module() {\nÂ Â Â Â install(Compression)\nÂ Â Â Â routing {\nÂ Â Â Â Â Â Â Â get(\u0026#34;/endpoint-without-compression\u0026#34;) {\nÂ Â Â Â Â Â Â Â Â Â Â Â // Prevent response body compression\nÂ Â Â Â Â Â Â Â Â Â Â Â call.suppressCompression()Â \nÂ Â Â Â Â Â Â Â Â Â Â Â println(call.isDecompressionSuppressed)\nÂ Â Â Â Â Â Â Â Â Â Â Â // Prevent request body decompression\nÂ Â Â Â Â Â Â Â Â Â Â Â call.suppressDecompression()Â \nÂ Â Â Â Â Â Â Â Â Â Â Â println(call.isCompressionSuppressed) // true\nÂ Â Â Â Â Â Â Â }\nÂ Â Â Â }\n}\u003c/pre\u003e\n\n\n\n\u003cp\u003eFind more information on YouTrack: \u003ca href=\"https://youtrack.jetbrains.com/issue/KTOR-7679\" target=\"_blank\" rel=\"noopener\"\u003eKTOR-7679\u003c/a\u003e\u003c/p\u003e\n\n\n\n\u003ch2\u003eCIO: Add wasm-js and js targets for the CIO server, client, and network API\u003c/h2\u003e\n\n\n\n\u003cp\u003eThe CIO has been expanded to support wasm-js and js targets for both the server and client side. This makes CIO the first \u003cstrong\u003eserver-side JavaScript engine\u003c/strong\u003e for Ktor, enabling the running of Ktor-based servers directly in JavaScript environments.\u003c/p\u003e\n\n\n\n\u003cp\u003eFind more information on YouTrack: \u003ca href=\"https://youtrack.jetbrains.com/issue/KTOR-865\" target=\"_blank\" rel=\"noopener\"\u003eKTOR-865\u003c/a\u003e, \u003ca href=\"https://youtrack.jetbrains.com/issue/KTOR-7675\" target=\"_blank\" rel=\"noopener\"\u003eKTOR-7675\u003c/a\u003e, \u003ca href=\"https://youtrack.jetbrains.com/issue/KTOR-6004\" target=\"_blank\" rel=\"noopener\"\u003eKTOR-6004\u003c/a\u003e\u003c/p\u003e\n\n\n\n\u003ch2\u003eFurther improvements and bug fixes for kotlinx-io integration\u003c/h2\u003e\n\n\n\n\u003cp\u003eThe integration with the kotlinx-io continues to be refined, improving performance, memory usage, and closer interactions across Ktor async io implementations. We have also added a new API extension to convert between kotlinx-io and Ktor and Java io primitives.\u003c/p\u003e\n\n\n\n\u003cp\u003eFind more information on YouTrack: \u003ca href=\"https://youtrack.jetbrains.com/issue/KTOR-7327\" target=\"_blank\" rel=\"noopener\"\u003eKTOR-7327\u003c/a\u003e\u003c/p\u003e\n\n\n\n\u003ch2\u003eAdd Unix Domain Socket support for native targets\u003c/h2\u003e\n\n\n\n\u003cp\u003eKtor now supports Unix Domain Sockets on native targets, enabling inter-process communication (IPC) without relying on TCP.\u003c/p\u003e\n\n\n\n\u003cp\u003eHereâ€™s how to create a simple echo server using Unix Domain Sockets:\u003c/p\u003e\n\n\n\n\u003cpre data-enlighter-language=\"kotlin\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\"\u003efun main() {\nÂ Â Â Â val socketPath = \u0026#34;ktor-echo-test.sock\u0026#34;\nÂ Â Â Â val server = aSocket(ActorSelectorManager(Dispatchers.IO)).tcp().bind(UnixSocketAddress(socketPath))\n\nÂ Â Â Â println(\u0026#34;Server is listening on $socketPath\u0026#34;)\n\nÂ Â Â Â GlobalScope.launch {\nÂ Â Â Â Â Â Â Â val connection = server.accept()\nÂ Â Â Â Â Â Â Â val input = connection.openReadChannel()\nÂ Â Â Â Â Â Â Â val output = connection.openWriteChannel(autoFlush = true)\n\nÂ Â Â Â Â Â Â Â val message = input.readUTF8Line()\nÂ Â Â Â Â Â Â Â println(\u0026#34;Received: $message\u0026#34;)\nÂ Â Â Â Â Â Â Â output.writeStringUtf8(\u0026#34;Echo: $message\u0026#34;)\n\nÂ Â Â Â Â Â Â Â connection.close()\nÂ Â Â Â }\n\nÂ Â Â Â val client = aSocket(ActorSelectorManager(Dispatchers.IO)).tcp().connect(UnixSocketAddress(socketPath))\nÂ Â Â Â val clientOutput = client.openWriteChannel(autoFlush = true)\nÂ Â Â Â clientOutput.writeStringUtf8(\u0026#34;Hello, Unix Socket!\u0026#34;)\n\nÂ Â Â Â val clientInput = client.openReadChannel()\nÂ Â Â Â println(clientInput.readUTF8Line())\n\nÂ Â Â Â client.close()\nÂ Â Â Â server.close()\n\n}\u003c/pre\u003e\n\n\n\n\u003cp\u003eFind more information on YouTrack: \u003ca href=\"https://youtrack.jetbrains.com/issue/KTOR-6960\" target=\"_blank\" rel=\"noopener\"\u003eKTOR-6960\u003c/a\u003e\u003c/p\u003e\n\n\n\n\u003ch2\u003eCurl client engine: Static linking, ARM support, WebSockets\u003c/h2\u003e\n\n\n\n\u003cp\u003eStarting from Ktor 3.1.0, the Curl client engine is statically linked, eliminating the need to install third-party dependencies. This makes it easier to use Curl-based networking. Additionally, ARM architecture support has been added, including for macOS.\u003c/p\u003e\n\n\n\n\u003cp\u003eFind more information on YouTrack: \u003ca href=\"https://youtrack.jetbrains.com/issue/KTOR-5199\" target=\"_blank\" rel=\"noopener\"\u003eKTOR-5199\u003c/a\u003e\u003c/p\u003e\n\n\n\n\u003ch2\u003eWelcome Ktor Library Improvement Proposals (\u003ca href=\"https://github.com/ktorio/ktor-klip\" target=\"_blank\" rel=\"noopener\"\u003eKLIP\u003c/a\u003eðŸ“Ž)\u003c/h2\u003e\n\n\n\n\u003cp\u003eWeâ€™re happy to introduce Ktor Library Improvement Proposals (KLIP) â€“ an open initiative for the community to propose, discuss, and collaborate on new features and improvements for Ktor. The KLIP process is designed to make Ktorâ€™s evolution transparent and community-driven. The KLIP repository is open for contributions, and we welcome everyone to participate in discussions or submit new proposals. Approved KLIPs are merged into the repository and will be implemented in the framework by the team.\u003c/p\u003e\n\n\n\n\u003cp\u003eThe first ðŸ“Ž dependency injection is available for review and feedback: \u003ca href=\"https://github.com/ktorio/ktor-klip/pull/1\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/ktorio/ktor-klip/pull/1\u003c/a\u003e\u003c/p\u003e\n\n\n\n\u003ch2\u003eLooking forward to gRPC support with kotlinx-rpc\u003c/h2\u003e\n\n\n\n\u003cp\u003eThe basic support of the gRPC has been added to kotlinx-rpc 0.5.0: \u003ca href=\"https://kotlin.github.io/kotlinx-rpc/grpc-configuration.html#dependencies-configuration\" target=\"_blank\" rel=\"noopener\"\u003ehttps://kotlin.github.io/kotlinx-rpc/grpc-configuration.html#dependencies-configuration\u003c/a\u003e. This moves the highly requested \u003ca href=\"https://youtrack.jetbrains.com/issue/KTOR-1501\" target=\"_blank\" rel=\"noopener\"\u003eKTOR-1501\u003c/a\u003e proposal forward. Weâ€™re planning further Ktor integration with gRPC, along with a plugin for \u003ca href=\"https://kotl.in/ixiien\" data-type=\"link\" data-id=\"https://kotl.in/ixiien\" target=\"_blank\" rel=\"noopener\"\u003estart.ktor.io\u003c/a\u003e in future releases. This will help to simplify the setup and use of gRPC in Ktor applications.\u003c/p\u003e\n\n\n\n\u003ch2\u003eMCP: Exposing and consuming APIs for LLMs\u003c/h2\u003e\n\n\n\n\u003cp\u003eIn preparation for Ktor 3.1.0, weâ€™ve been helping to build the MCP Kotlin SDK (\u003ca href=\"https://github.com/modelcontextprotocol/kotlin-sdk\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/modelcontextprotocol/kotlin-sdk\u003c/a\u003e). This lightweight SDK enables integration between your applications and large language models (LLMs), allowing you to expose your APIs to language models and agents or build clients connecting multiple applications with LLMs. The library is already published on MavenCentral.\u003c/p\u003e\n\n\n\n\u003ch2\u003eðŸš€ Thank you!\u003c/h2\u003e\n\n\n\n\u003cp\u003eWe want to say thank you to everyone for all the contributions and feedback you provide!\u003c/p\u003e\n\n\n\n\u003cp\u003eWe especially want to mention the following active contributors: \u003ca href=\"https://github.com/anton-erofeev\" target=\"_blank\" rel=\"noopener\"\u003eanton-erofeev\u003c/a\u003e, \u003ca href=\"https://github.com/FredrikMeyer\" target=\"_blank\" rel=\"noopener\"\u003eFredrikMeyer\u003c/a\u003e, \u003ca href=\"https://github.com/IRus\" target=\"_blank\" rel=\"noopener\"\u003eIRus\u003c/a\u003e, \u003ca href=\"https://github.com/whyoleg\" target=\"_blank\" rel=\"noopener\"\u003ewhyoleg\u003c/a\u003e, \u003ca href=\"https://github.com/SIMULATAN\" target=\"_blank\" rel=\"noopener\"\u003eSIMULATAN\u003c/a\u003e, \u003ca href=\"https://github.com/Thomas-Vos\" target=\"_blank\" rel=\"noopener\"\u003eThomas-Vos\u003c/a\u003e, and \u003ca href=\"https://github.com/adriandieter\" target=\"_blank\" rel=\"noopener\"\u003eadriandieter\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cp\u003eStart building your next project with \u003ca href=\"https://kotl.in/ixiien\" data-type=\"link\" data-id=\"https://kotl.in/ixiien\" target=\"_blank\" rel=\"noopener\"\u003estart.ktor.io\u003c/a\u003e. Your feedback and contributions are always welcome!\u003c/p\u003e\n\n\n\n\u003cp\u003eðŸ”— \u003ca href=\"https://ktor.io/docs/welcome.html\" target=\"_blank\" rel=\"noopener\"\u003eGet Started With Ktor\u003c/a\u003e | ðŸ“¢ Join the Community on \u003ca href=\"https://www.reddit.com/r/ktor/\" target=\"_blank\" rel=\"noopener\"\u003eReddit\u003c/a\u003e and \u003ca href=\"https://surveys.jetbrains.com/s3/kotlin-slack-sign-up?_gl=1*1wxglsg*_gcl_au*MTE4MjgxMTg3Mi4xNzM2MjY0ODgy*_ga*MTYyODczMDg5NS4xNzAyMDQyMTMx*_ga_9J976DJZ68*MTczODY3Mjg3Ny4xOTguMS4xNzM4NjczNDI2LjM2LjAuMA..\" target=\"_blank\" rel=\"noopener\"\u003eSlack\u003c/a\u003e\u003c/p\u003e\n                    \n                                                                                                                                                                                                                            \u003cdiv\u003e\n                                \u003cdiv\u003e\n                                                                            \u003ch4\u003eSubscribe to Kotlin Blog updates\u003c/h4\u003e\n                                                                                                            \n                                \u003c/div\u003e\n                                \n                                \u003cp\u003e\u003cimg src=\"https://blog.jetbrains.com/wp-content/themes/jetbrains/assets/img/img-form.svg\" alt=\"image description\"/\u003e\n                                                                    \u003c/p\u003e\n                            \u003c/div\u003e\n                                                            \u003c/div\u003e\n                \u003ca href=\"#\"\u003e\u003c/a\u003e\n                \n                \n            \u003c/section\u003e\n                    \u003cdiv\u003e\n                \u003cp\u003e\n                    \u003ch2\u003eDiscover more\u003c/h2\u003e\n                \u003c/p\u003e\n                \n            \u003c/div\u003e\n                \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "13 min read",
  "publishedTime": null,
  "modifiedTime": null
}
