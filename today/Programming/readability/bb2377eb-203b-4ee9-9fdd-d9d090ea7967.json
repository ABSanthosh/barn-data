{
  "id": "bb2377eb-203b-4ee9-9fdd-d9d090ea7967",
  "title": "GitHub Advisory Database by the numbers: Known security vulnerabilities and what you can do about them",
  "link": "https://github.blog/security/github-advisory-database-by-the-numbers-known-security-vulnerabilities-and-what-you-can-do-about-them/",
  "description": "Use these insights to automate software security (where possible) to keep your projects safe. The post GitHub Advisory Database by the numbers: Known security vulnerabilities and what you can do about them appeared first on The GitHub Blog.",
  "author": "Jonathan Evans",
  "published": "Fri, 27 Jun 2025 16:00:00 +0000",
  "source": "https://github.blog/feed/",
  "categories": [
    "Security",
    "CNA",
    "Community Contribution",
    "CVE",
    "CVE Numbering Authority",
    "CVSS",
    "CWE",
    "EPSS",
    "GitHub Security Lab",
    "open source security"
  ],
  "byline": "Jonathan Evans",
  "length": 13702,
  "excerpt": "Use these insights to automate software security (where possible) to keep your projects safe.",
  "siteName": "The GitHub Blog",
  "favicon": "https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=192%2C192",
  "text": "The GitHub Advisory Database (Advisory DB) is a vital resource for developers, providing a comprehensive list of known security vulnerabilities and malware affecting open source packages. This post analyzes trends in the Advisory DB, highlighting the growth in reviewed advisories, ecosystem coverage, and source contributions in 2024. We’ll delve into how GitHub provides actionable data to secure software projects. Advisories The GitHub Advisory Database contains a list of known security vulnerabilities and malware, grouped in three categories:  GitHub-reviewed advisories: Manually reviewed advisories in software packages that GitHub supports. Unreviewed advisories: These are automatically pulled from the National Vulnerability Database (NVD) and are either in the process of being reviewed, do not affect a supported package, or do not discuss a valid vulnerability. Malware advisories: These are specific to malware threats identified by the npm security team. Reviewed advisories GitHub-reviewed advisories are security vulnerabilities that have been mapped to packages in ecosystems we support. We carefully review each advisory for validity and ensure that they have a full description, and contain both ecosystem and package information. Every year, GitHub increases the number of advisories we publish. We have been able to do this due to the increase in advisories coming from our sources (see Sources section below), expanding our ecosystem coverage (also described below), and review campaigns of advisories published before we started the database.  In the past five years, the database has gone from fewer than 400 reviewed advisories to over 20,000 reviewed advisories in October of 2024. Unreviewed advisories Unreviewed advisories are security vulnerabilities that we publish automatically into the GitHub Advisory Database directly from the National Vulnerability Database feed. The name is a bit of a misnomer as many of these advisories have actually been reviewed by a GitHub analyst. The reason why they fall into this category is because they are not found in a package in one of the supported ecosystems or are not discussing a valid vulnerability, and all have been reviewed by analysts other than someone from the GitHub Security Lab. Even though most of these advisories will never turn into a reviewed advisory, we still publish them so that you do not have to look in multiple databases at once. Malware Malware advisories relate to vulnerabilities caused by malware, and are security advisories that GitHub publishes automatically into the GitHub Advisory Database directly from information provided by the npm security team. Malware advisories are currently exclusive to the npm ecosystem. GitHub doesn’t edit or accept community contributions on these advisories. Ecosystem coverage GitHub-reviewed advisories include security vulnerabilities that have been mapped to packages in ecosystems we support. Generally, we name our supported ecosystems after the software programming language’s associated package registry. We review advisories if they are for a vulnerability in a package that comes from a supported registry. EcosystemTotal advisoriesVulnerable packagesFirst addedpip (registry: https://pypi.org/)337810442019-04-19Maven (registry: https://repo.maven.apache.org/maven2)51719552019-04-22Composer (registry: https://packagist.org/)42388122019-04-26npm (registry: https://www.npmjs.com/)365326522019-04-26RubyGems (registry: https://rubygems.org/)8403712019-04-26NuGet (registry: https://www.nuget.org/)6514892019-04-26Go (registry: https://pkg.go.dev/)20118652021-04-01Rust (registry: https://crates.io/)8575532021-05-25Erlang (registry: https://hex.pm/)31262022-01-27GitHub Actions (https://github.com/marketplace?type=actions/)21212022-07-29Pub (registry: https://pub.dev/packages/registry)1092022-08-04Swift (registry: N/A)33212023-05-10 Vulnerabilities in Maven and Composer packages are nearly half of the advisories in the database. npm, pip, and Go make up much of the rest, while the other ecosystems have a much smaller footprint. This has not always been the case. When the database was initially launched, NPM advisories dominated the database, but as we have expanded our coverage and added support for new ecosystems, the distribution mix has changed. Sources: Where do the advisories come from? We add advisories to the GitHub Advisory Database from the following sources: SourceAdvisoriesReviewed advisoriesSole sourceCoverageNVD2674291829574506.84%GitHub Repository Advisories12247531156443.37%Community Contributions451241601092.20%PyPA Advisories304027391490.10%Go Vulncheck15811528796.65%NPM Advisories1411140862999.79%FriendsOfPHP1406139640099.29%RustSec94384917190.03%RubySec873861498.63% NVD: This is a huge source of vulnerabilities covering all types of software. We publish all NVD advisories but only review those relevant to our supported ecosystems, which reduces noise for our users. GitHub Repository Advisories: The second largest source is made up of advisories published through GitHub’s repository security advisory feature. Similar to NVD, these aren’t restricted to our supported ecosystems. However, we provide better coverage of the repository advisories because they focus exclusively on open source software. Community Contributions: These are reports from the community that are almost exclusively requesting updates to existing advisories. Other Specialized Sources: Sources like PyPA Advisories (for Python) and Go Vulncheck (for Go) that focus on specific ecosystems. Because they only cover packages within our supported ecosystems, most of their advisories are relevant to us and get reviewed. If you add up the number of reviewed advisories from each source, you will find that total is more than the total reviewed advisories. This is because each source can publish an advisory for the same vulnerability. In fact, over half of our advisories have more than one source. Of the advisories with a single source, nearly all of them come from NVD/CVE. This justifies NVD/CVE as a source, even though it is by far the noisiest. 2024 saw a significant increase (39%) in the number of advisories imported from our sources. This is for the most part caused by an increase in the number of CVE records published. CVE Numbering Authority In addition to publishing advisories in the GitHub Advisory Database, we are also a CVE Numbering Authority (CNA) for any repository on GitHub. This means that we issue CVE IDs for vulnerabilities reported to us by maintainers, and we publish the vulnerabilities to the CVE database once the corresponding repository advisory is published. GitHub published over 2,000 CVE records in 2024, making us the fifth-largest CNA in the CVE Program. The GitHub CNA is open to all repositories on GitHub, not just ones in a supported ecosystem. Advisory prioritization Given the constant deluge of reported vulnerabilities, you’ll want tools that can help you prioritize your remediation efforts. To that end, GitHub provides additional data in the advisory to allow readers to prioritize their vulnerabilities. In particular, there are: Severity Rating/CVSS: A low to critical rating for how severe the vulnerability is likely to be, along with a corresponding CVSS score and vector. CWE: CWE identifiers provide a programmatic method for determining the type of vulnerability. EPSS: The Exploit Prediction Scoring System, or EPSS, is a system devised by the global Forum of Incident Response and Security Teams (FIRST) for quantifying the likelihood a vulnerability will be attacked in the next 30 days. GitHub adds a severity rating to every advisory. The severity level is one of four possible levels defined in the Common Vulnerability Scoring System (CVSS), Section 5. Low Medium/Moderate High Critical Using these ratings, half of all vulnerabilities (15% are Critical and 35% are High) warrant immediate or near-term attention. By focusing remediation efforts on these, you can significantly reduce risk exposure while managing workload more efficiently. The CVSS specification says the base score we provide, “reflects the severity of a vulnerability according to its intrinsic characteristics which are constant over time and assumes the reasonable worst-case impact across different deployed environments.” However, the worst-case scenario for your deployment may not be the same as CVSS’s. After all, a crash in a word processor is not as severe as a crash in a server. In order to give more context to your prioritization, GitHub allows you to filter alerts based on the type of vulnerability or weakness using CWE identifiers. So you have the capability to never see another regular expression denial of service (CWE-1333) vulnerability again or always see SQL injection (CWE-89) vulnerabilities. RankCWE IDCWE nameNumber of advisories in 2024Change in rank from 20231CWE-79Improper Neutralization of Input During Web Page Generation (‘Cross-site Scripting’)936+02CWE-200Exposure of Sensitive Information to an Unauthorized Actor320+03CWE-22Improper Limitation of a Pathname to a Restricted Directory (‘Path Traversal’)259+24CWE-20Improper Input Validation202+05CWE-94Improper Control of Generation of Code (‘Code Injection’)188+26CWE-89Improper Neutralization of Special Elements used in an SQL Command (‘SQL Injection’)181+37CWE-352Cross-Site Request Forgery (CSRF)161-48CWE-284Improper Access Control153+49CWE-400Uncontrolled Resource Consumption149-310CWE-287Improper Authentication124+11 Still drowning in vulnerabilities? Try using EPSS to focus on vulnerabilities likely to be attacked in the next 30 days. EPSS uses data from a variety of sources to create a probability of whether exploitation attempts will be seen in the next 30 days for a given vulnerability. As you can see from the chart below, if you focus on vulnerabilities with EPSS scores of 10% or higher (approx. 7% of all vulnerabilities in the Advisory DB), you can cover nearly all of the vulnerabilities that are likely to see exploit activity. EPSS probabilityVulnerabilities in rangePercentage of overall vulnerabilitiesExpected vulnerabilities in range attacked within the next 30 daysPercentage of total attacked vulnerabilitiesHigh ( \u003e= 10%)14407.17%74185.96%Moderate ( \u003e= 1%, \u003c 10%)268713.37%849.74%Low ( \u003e= 0.1%, \u003c 1%)1026451.09%354.06%Very Low ( \u003c 0.1%)570128.37%20.23% Important caveats to remember when using EPSS: Low probability events occur. EPSS does not tell you whether a vulnerability is exploited; it only claims how likely it is. EPSS scores are updated daily and will change as new information comes in, so a low-probability vulnerability today may become high probability tomorrow. For more details on how to use CVSS and EPSS for prioritization, see our blog on prioritizing Dependabot alerts. Actionable data The GitHub Advisory DB isn’t just a repository of vulnerabilities. It powers tools that help developers secure their projects. Services like Dependabot use the Advisory DB to: Identify vulnerabilities: It checks if your projects use any software packages with known vulnerabilities. Suggest fixes: It recommends updated versions of packages that fix those vulnerabilities when available. Reduce noise: You’ll only get notified about vulnerabilities that affect the version of the package you are using. Take this with you The GitHub Advisory Database is a powerful resource for tracking open source software vulnerabilities, with over 22,000 reviewed advisories to date. By focusing on popular package registries, GitHub allows you to definitively connect vulnerabilities to the packages you are using. Additional data such as CVSS and EPSS scores help you properly prioritize your mitigation efforts. GitHub’s role as a CVE Numbering Authority extends beyond the Advisory Database, ensuring that thousands of vulnerabilities each year reach the broader CVE community. Want to ensure your vulnerability fix reaches your users? Create a GitHub security advisory in your repository to take advantage of both the GitHub Advisory Database and GitHub’s CNA services. Want to dive deeper? Explore security blog posts \u003e Tags: CNA Community Contribution CVE CVE Numbering Authority CVSS CWE EPSS GitHub Security Lab open source security Written by Security Analyst, curator of the GitHub Advisory Database, and one of the members of the Security Lab responsible for issuing CVE IDs and publishing CVE records. Related posts Explore more from GitHub Docs Everything you need to master GitHub, all in one place. Go to Docs GitHub Build what’s next on GitHub, the place for anyone from anywhere to build anything. Start building Customer stories Meet the companies and engineering teams that build with GitHub. Learn more GitHub Universe 2025 Last chance: Save $700 on your IRL pass to Universe and join us on Oct. 28-29 in San Francisco. Register now \u003e",
  "image": "https://github.blog/wp-content/uploads/2025/03/github_logo_invertocat_dark_3.png?fit=1200%2C630",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003csection\u003e\n\t\n\u003cp\u003eThe \u003ca href=\"https://github.com/advisories\"\u003eGitHub Advisory Database\u003c/a\u003e (Advisory DB) is a vital resource for developers, providing a comprehensive list of known security vulnerabilities and malware affecting open source packages. This post analyzes trends in the Advisory DB, highlighting the growth in reviewed advisories, ecosystem coverage, and source contributions in 2024. We’ll delve into how GitHub provides actionable data to secure software projects.\u003c/p\u003e\n\n\n\n\u003ch2 id=\"h-advisories\"\u003eAdvisories\u003c/h2\u003e\n\n\n\n\u003cp\u003eThe GitHub Advisory Database contains a list of known security vulnerabilities and malware, grouped in three categories: \u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eGitHub-reviewed advisories:\u003c/strong\u003e Manually reviewed advisories in software packages that GitHub supports.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eUnreviewed advisories:\u003c/strong\u003e These are automatically pulled from the National Vulnerability Database (NVD) and are either in the process of being reviewed, do not affect a supported package, or do not discuss a valid vulnerability.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eMalware advisories:\u003c/strong\u003e These are specific to malware threats identified by the npm security team.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003ch3 id=\"h-reviewed-advisories\"\u003eReviewed advisories\u003c/h3\u003e\n\n\n\n\u003cp\u003eGitHub-reviewed advisories are security vulnerabilities that have been mapped to packages in ecosystems we support. We carefully review each advisory for validity and ensure that they have a full description, and contain both ecosystem and package information.\u003c/p\u003e\n\n\n\n\u003cp\u003eEvery year, GitHub increases the number of advisories we publish. We have been able to do this due to the increase in advisories coming from our sources (see Sources section below), expanding our ecosystem coverage (also described below), and review campaigns of advisories published before we started the database. \u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" decoding=\"async\" loading=\"lazy\" height=\"633\" width=\"1024\" src=\"https://github.blog/wp-content/uploads/2025/06/advisory1.png?resize=1024%2C633\" alt=\"The bar graph shows the number of reviewed advisories added each year. The graph starts with 385 advisories added in 2019, shows an increase over time, and ends with 5256 advisories added in 2024.\" srcset=\"https://github.blog/wp-content/uploads/2025/06/advisory1.png?w=1200 1200w, https://github.blog/wp-content/uploads/2025/06/advisory1.png?w=300 300w, https://github.blog/wp-content/uploads/2025/06/advisory1.png?w=768 768w, https://github.blog/wp-content/uploads/2025/06/advisory1.png?w=1024 1024w, https://github.blog/wp-content/uploads/2025/06/advisory1.png?w=512 512w, https://github.blog/wp-content/uploads/2025/06/advisory1.png?w=288 288w\" sizes=\"auto, (max-width: 1000px) 100vw, 1000px\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eIn the past five years, the database has gone from fewer than 400 reviewed advisories to over 20,000 reviewed advisories in October of 2024.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" decoding=\"async\" loading=\"lazy\" height=\"601\" width=\"1024\" src=\"https://github.blog/wp-content/uploads/2025/06/advisory2.png?resize=1024%2C601\" alt=\"The line graph shows the total reviewed advisories steadily increasing from 0 in 2019 to 20607 at the end of 2024.\" srcset=\"https://github.blog/wp-content/uploads/2025/06/advisory2.png?w=1308 1308w, https://github.blog/wp-content/uploads/2025/06/advisory2.png?w=300 300w, https://github.blog/wp-content/uploads/2025/06/advisory2.png?w=768 768w, https://github.blog/wp-content/uploads/2025/06/advisory2.png?w=1024 1024w\" sizes=\"auto, (max-width: 1000px) 100vw, 1000px\"/\u003e\u003c/figure\u003e\n\n\n\n\u003ch3 id=\"unreviewed-advisories\"\u003eUnreviewed advisories\u003c/h3\u003e\n\n\n\n\u003cp\u003eUnreviewed advisories are security vulnerabilities that we publish automatically into the GitHub Advisory Database directly from the National Vulnerability Database feed. The name is a bit of a misnomer as many of these advisories have actually been reviewed by a GitHub analyst. The reason why they fall into this category is because they are not found in a package in one of the supported ecosystems or are not discussing a valid vulnerability, and all have been reviewed by analysts other than someone from the GitHub Security Lab. Even though most of these advisories will never turn into a reviewed advisory, we still publish them so that you do not have to look in multiple databases at once.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" decoding=\"async\" loading=\"lazy\" height=\"386\" width=\"1024\" src=\"https://github.blog/wp-content/uploads/2025/06/advisory3.png?resize=1024%2C386\" alt=\"The line graph shows the total number of advisories overtime. The graph shows a sudden jump in April 2022, when GitHub started publishing all vulnerabilities from the National Vulnerability Database feed. It then shows a gradual increase over time.\" srcset=\"https://github.blog/wp-content/uploads/2025/06/advisory3.png?w=1600 1600w, https://github.blog/wp-content/uploads/2025/06/advisory3.png?w=300 300w, https://github.blog/wp-content/uploads/2025/06/advisory3.png?w=768 768w, https://github.blog/wp-content/uploads/2025/06/advisory3.png?w=1024 1024w, https://github.blog/wp-content/uploads/2025/06/advisory3.png?w=1536 1536w\" sizes=\"auto, (max-width: 1000px) 100vw, 1000px\"/\u003e\u003c/figure\u003e\n\n\n\n\u003ch3 id=\"malware\"\u003eMalware\u003c/h3\u003e\n\n\n\n\u003cp\u003eMalware advisories relate to vulnerabilities caused by malware, and are security advisories that GitHub publishes automatically into the GitHub Advisory Database directly from information provided by the npm security team. Malware advisories are currently exclusive to the npm ecosystem. GitHub doesn’t edit or accept community contributions on these advisories.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" decoding=\"async\" loading=\"lazy\" height=\"509\" width=\"1024\" src=\"https://github.blog/wp-content/uploads/2025/06/advisory4.png?resize=1024%2C509\" alt=\"The line graph shows the total malware advisories over time, from May 2022 to December 2024. The line shows a general upward trend in malware advisories over the period, ending at 13405 advisories.\" srcset=\"https://github.blog/wp-content/uploads/2025/06/advisory4.png?w=1494 1494w, https://github.blog/wp-content/uploads/2025/06/advisory4.png?w=300 300w, https://github.blog/wp-content/uploads/2025/06/advisory4.png?w=768 768w, https://github.blog/wp-content/uploads/2025/06/advisory4.png?w=1024 1024w\" sizes=\"auto, (max-width: 1000px) 100vw, 1000px\"/\u003e\u003c/figure\u003e\n\n\n\n\u003ch2 id=\"ecosystem-coverage\"\u003eEcosystem coverage\u003c/h2\u003e\n\n\n\n\u003cp\u003eGitHub-reviewed advisories include security vulnerabilities that have been mapped to packages in ecosystems we support. Generally, we name our supported ecosystems after the software programming language’s associated package registry. We review advisories if they are for a vulnerability in a package that comes from a supported registry.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003ctable\u003e\u003cthead\u003e\u003ctr\u003e\u003cth\u003e\u003cstrong\u003eEcosystem\u003c/strong\u003e\u003c/th\u003e\u003cth\u003e\u003cstrong\u003eTotal advisories\u003c/strong\u003e\u003c/th\u003e\u003cth\u003e\u003cstrong\u003eVulnerable packages\u003c/strong\u003e\u003c/th\u003e\u003cth\u003e\u003cstrong\u003eFirst added\u003c/strong\u003e\u003c/th\u003e\u003c/tr\u003e\u003c/thead\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003epip (registry: \u003ca href=\"https://pypi.org/\"\u003ehttps://pypi.org/\u003c/a\u003e)\u003c/td\u003e\u003ctd\u003e3378\u003c/td\u003e\u003ctd\u003e1044\u003c/td\u003e\u003ctd\u003e2019-04-19\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eMaven (registry: \u003ca href=\"https://repo.maven.apache.org/maven2\"\u003ehttps://repo.maven.apache.org/maven2\u003c/a\u003e)\u003c/td\u003e\u003ctd\u003e5171\u003c/td\u003e\u003ctd\u003e955\u003c/td\u003e\u003ctd\u003e2019-04-22\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eComposer (registry: \u003ca href=\"https://packagist.org/\"\u003ehttps://packagist.org/\u003c/a\u003e)\u003c/td\u003e\u003ctd\u003e4238\u003c/td\u003e\u003ctd\u003e812\u003c/td\u003e\u003ctd\u003e2019-04-26\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003enpm (registry: \u003ca href=\"https://www.npmjs.com/\"\u003ehttps://www.npmjs.com/\u003c/a\u003e)\u003c/td\u003e\u003ctd\u003e3653\u003c/td\u003e\u003ctd\u003e2652\u003c/td\u003e\u003ctd\u003e2019-04-26\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eRubyGems (registry: \u003ca href=\"https://rubygems.org/\"\u003ehttps://rubygems.org/\u003c/a\u003e)\u003c/td\u003e\u003ctd\u003e840\u003c/td\u003e\u003ctd\u003e371\u003c/td\u003e\u003ctd\u003e2019-04-26\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eNuGet (registry: \u003ca href=\"https://www.nuget.org/\"\u003ehttps://www.nuget.org/\u003c/a\u003e)\u003c/td\u003e\u003ctd\u003e651\u003c/td\u003e\u003ctd\u003e489\u003c/td\u003e\u003ctd\u003e2019-04-26\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eGo (registry: \u003ca href=\"https://pkg.go.dev/\"\u003ehttps://pkg.go.dev/\u003c/a\u003e)\u003c/td\u003e\u003ctd\u003e2011\u003c/td\u003e\u003ctd\u003e865\u003c/td\u003e\u003ctd\u003e2021-04-01\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eRust (registry: \u003ca href=\"https://crates.io/\"\u003ehttps://crates.io/\u003c/a\u003e)\u003c/td\u003e\u003ctd\u003e857\u003c/td\u003e\u003ctd\u003e553\u003c/td\u003e\u003ctd\u003e2021-05-25\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eErlang (registry: \u003ca href=\"https://hex.pm/\"\u003ehttps://hex.pm/\u003c/a\u003e)\u003c/td\u003e\u003ctd\u003e31\u003c/td\u003e\u003ctd\u003e26\u003c/td\u003e\u003ctd\u003e2022-01-27\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eGitHub Actions (\u003ca href=\"https://github.com/marketplace?type=actions/\"\u003ehttps://github.com/marketplace?type=actions/\u003c/a\u003e)\u003c/td\u003e\u003ctd\u003e21\u003c/td\u003e\u003ctd\u003e21\u003c/td\u003e\u003ctd\u003e2022-07-29\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003ePub (registry: \u003ca href=\"https://pub.dev/packages/registry\"\u003ehttps://pub.dev/packages/registry\u003c/a\u003e)\u003c/td\u003e\u003ctd\u003e10\u003c/td\u003e\u003ctd\u003e9\u003c/td\u003e\u003ctd\u003e2022-08-04\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eSwift (registry: N/A)\u003c/td\u003e\u003ctd\u003e33\u003c/td\u003e\u003ctd\u003e21\u003c/td\u003e\u003ctd\u003e2023-05-10\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" decoding=\"async\" loading=\"lazy\" height=\"633\" width=\"1024\" src=\"https://github.blog/wp-content/uploads/2025/06/advisory5.png?resize=1024%2C633\" alt=\"The pie chart shows the proportion of advisories across different software ecosystems. Maven, Composer, npm, Pip, and Go are the largest ecosystems.\" srcset=\"https://github.blog/wp-content/uploads/2025/06/advisory5.png?w=1200 1200w, https://github.blog/wp-content/uploads/2025/06/advisory5.png?w=300 300w, https://github.blog/wp-content/uploads/2025/06/advisory5.png?w=768 768w, https://github.blog/wp-content/uploads/2025/06/advisory5.png?w=1024 1024w, https://github.blog/wp-content/uploads/2025/06/advisory5.png?w=512 512w, https://github.blog/wp-content/uploads/2025/06/advisory5.png?w=288 288w\" sizes=\"auto, (max-width: 1000px) 100vw, 1000px\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eVulnerabilities in Maven and Composer packages are nearly half of the advisories in the database. npm, pip, and Go make up much of the rest, while the other ecosystems have a much smaller footprint.\u003c/p\u003e\n\n\n\n\u003cp\u003eThis has not always been the case. When the database was initially launched, NPM advisories dominated the database, but as we have expanded our coverage and added support for new ecosystems, the distribution mix has changed.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" decoding=\"async\" loading=\"lazy\" height=\"539\" width=\"1024\" src=\"https://github.blog/wp-content/uploads/2025/06/advisory7.png?resize=1024%2C539\" alt=\"The stacked area line graph shows the percentage distribution of various ecosystems from 2019 to 2024. The graph starts with half the advisories being for NPM but over time, other ecosystems like Maven and Composer become more prominent.\" srcset=\"https://github.blog/wp-content/uploads/2025/06/advisory7.png?w=1600 1600w, https://github.blog/wp-content/uploads/2025/06/advisory7.png?w=300 300w, https://github.blog/wp-content/uploads/2025/06/advisory7.png?w=768 768w, https://github.blog/wp-content/uploads/2025/06/advisory7.png?w=1024 1024w, https://github.blog/wp-content/uploads/2025/06/advisory7.png?w=1536 1536w, https://github.blog/wp-content/uploads/2025/06/advisory7.png?w=400 400w\" sizes=\"auto, (max-width: 1000px) 100vw, 1000px\"/\u003e\u003c/figure\u003e\n\n\n\n\u003ch2 id=\"sources-where-do-the-advisories-come-from\"\u003eSources: Where do the advisories come from?\u003c/h2\u003e\n\n\n\n\u003cp\u003eWe add advisories to the GitHub Advisory Database from the following sources:\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003ctable\u003e\u003cthead\u003e\u003ctr\u003e\u003cth\u003e\u003cstrong\u003eSource\u003c/strong\u003e\u003c/th\u003e\u003cth\u003e\u003cstrong\u003eAdvisories\u003c/strong\u003e\u003c/th\u003e\u003cth\u003e\u003cstrong\u003eReviewed advisories\u003c/strong\u003e\u003c/th\u003e\u003cth\u003e\u003cstrong\u003eSole source\u003c/strong\u003e\u003c/th\u003e\u003cth\u003e\u003cstrong\u003eCoverage\u003c/strong\u003e\u003c/th\u003e\u003c/tr\u003e\u003c/thead\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\u003ca href=\"https://nvd.nist.gov/\"\u003eNVD\u003c/a\u003e\u003c/td\u003e\u003ctd\u003e267429\u003c/td\u003e\u003ctd\u003e18295\u003c/td\u003e\u003ctd\u003e7450\u003c/td\u003e\u003ctd\u003e6.84%\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e\u003ca href=\"https://docs.github.com/en/code-security/security-advisories/working-with-repository-security-advisories/about-repository-security-advisories\"\u003eGitHub Repository Advisories\u003c/a\u003e\u003c/td\u003e\u003ctd\u003e12247\u003c/td\u003e\u003ctd\u003e5311\u003c/td\u003e\u003ctd\u003e564\u003c/td\u003e\u003ctd\u003e43.37%\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e\u003ca href=\"https://github.com/github/advisory-database/pulls\"\u003eCommunity Contributions\u003c/a\u003e\u003c/td\u003e\u003ctd\u003e4512\u003c/td\u003e\u003ctd\u003e4160\u003c/td\u003e\u003ctd\u003e10\u003c/td\u003e\u003ctd\u003e92.20%\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e\u003ca href=\"https://github.com/pypa/advisory-database\"\u003ePyPA Advisories\u003c/a\u003e\u003c/td\u003e\u003ctd\u003e3040\u003c/td\u003e\u003ctd\u003e2739\u003c/td\u003e\u003ctd\u003e14\u003c/td\u003e\u003ctd\u003e90.10%\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e\u003ca href=\"https://pkg.go.dev/vuln/\"\u003eGo Vulncheck\u003c/a\u003e\u003c/td\u003e\u003ctd\u003e1581\u003c/td\u003e\u003ctd\u003e1528\u003c/td\u003e\u003ctd\u003e7\u003c/td\u003e\u003ctd\u003e96.65%\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e\u003ca href=\"https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm\"\u003eNPM Advisories\u003c/a\u003e\u003c/td\u003e\u003ctd\u003e1411\u003c/td\u003e\u003ctd\u003e1408\u003c/td\u003e\u003ctd\u003e629\u003c/td\u003e\u003ctd\u003e99.79%\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e\u003ca href=\"https://github.com/FriendsOfPHP/security-advisories\"\u003eFriendsOfPHP\u003c/a\u003e\u003c/td\u003e\u003ctd\u003e1406\u003c/td\u003e\u003ctd\u003e1396\u003c/td\u003e\u003ctd\u003e400\u003c/td\u003e\u003ctd\u003e99.29%\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e\u003ca href=\"https://rustsec.org/\"\u003eRustSec\u003c/a\u003e\u003c/td\u003e\u003ctd\u003e943\u003c/td\u003e\u003ctd\u003e849\u003c/td\u003e\u003ctd\u003e171\u003c/td\u003e\u003ctd\u003e90.03%\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e\u003ca href=\"https://rubysec.com/\"\u003eRubySec\u003c/a\u003e\u003c/td\u003e\u003ctd\u003e873\u003c/td\u003e\u003ctd\u003e861\u003c/td\u003e\u003ctd\u003e4\u003c/td\u003e\u003ctd\u003e98.63%\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eNVD:\u003c/strong\u003e This is a huge source of vulnerabilities covering all types of software. We publish all NVD advisories but only review those relevant to our supported ecosystems, which reduces noise for our users.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eGitHub Repository Advisories:\u003c/strong\u003e The second largest source is made up of advisories published through GitHub’s repository security advisory feature. Similar to NVD, these aren’t restricted to our supported ecosystems. However, we provide better coverage of the repository advisories because they focus exclusively on open source software.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eCommunity Contributions:\u003c/strong\u003e These are reports from the community that are almost exclusively requesting updates to existing advisories.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eOther Specialized Sources:\u003c/strong\u003e Sources like PyPA Advisories (for Python) and Go Vulncheck (for Go) that focus on specific ecosystems. Because they only cover packages within our supported ecosystems, most of their advisories are relevant to us and get reviewed.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" decoding=\"async\" loading=\"lazy\" height=\"633\" width=\"1024\" src=\"https://github.blog/wp-content/uploads/2025/06/advisory8.png?resize=1024%2C633\" alt=\"The pie graph shows the proportion of advisories by the number of sources they have. This shows that 46% of the advisories have only one source and 85% have three or fewer.\" srcset=\"https://github.blog/wp-content/uploads/2025/06/advisory8.png?w=1200 1200w, https://github.blog/wp-content/uploads/2025/06/advisory8.png?w=300 300w, https://github.blog/wp-content/uploads/2025/06/advisory8.png?w=768 768w, https://github.blog/wp-content/uploads/2025/06/advisory8.png?w=1024 1024w, https://github.blog/wp-content/uploads/2025/06/advisory8.png?w=512 512w, https://github.blog/wp-content/uploads/2025/06/advisory8.png?w=288 288w\" sizes=\"auto, (max-width: 1000px) 100vw, 1000px\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eIf you add up the number of reviewed advisories from each source, you will find that total is more than the total reviewed advisories. This is because each source can publish an advisory for the same vulnerability. In fact, over half of our advisories have more than one source.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" decoding=\"async\" loading=\"lazy\" height=\"633\" width=\"1024\" src=\"https://github.blog/wp-content/uploads/2025/06/advisory9.png?resize=1024%2C633\" alt=\"The pie graph shows the proportion of advisories that have a single source by the source they came from. The graph shows that 80% of all single sourced advisories come from the National Vulnerability Database.\" srcset=\"https://github.blog/wp-content/uploads/2025/06/advisory9.png?w=1200 1200w, https://github.blog/wp-content/uploads/2025/06/advisory9.png?w=300 300w, https://github.blog/wp-content/uploads/2025/06/advisory9.png?w=768 768w, https://github.blog/wp-content/uploads/2025/06/advisory9.png?w=1024 1024w, https://github.blog/wp-content/uploads/2025/06/advisory9.png?w=512 512w, https://github.blog/wp-content/uploads/2025/06/advisory9.png?w=288 288w\" sizes=\"auto, (max-width: 1000px) 100vw, 1000px\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eOf the advisories with a single source, nearly all of them come from NVD/CVE. This justifies NVD/CVE as a source, even though it is by far the noisiest.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" decoding=\"async\" loading=\"lazy\" height=\"633\" width=\"1024\" src=\"https://github.blog/wp-content/uploads/2025/06/advisory10.png?resize=1024%2C633\" alt=\"The line graph shows the number of advisories imported over time. The graph shows an increase in imports over time.\" srcset=\"https://github.blog/wp-content/uploads/2025/06/advisory10.png?w=1200 1200w, https://github.blog/wp-content/uploads/2025/06/advisory10.png?w=300 300w, https://github.blog/wp-content/uploads/2025/06/advisory10.png?w=768 768w, https://github.blog/wp-content/uploads/2025/06/advisory10.png?w=1024 1024w, https://github.blog/wp-content/uploads/2025/06/advisory10.png?w=512 512w, https://github.blog/wp-content/uploads/2025/06/advisory10.png?w=288 288w\" sizes=\"auto, (max-width: 1000px) 100vw, 1000px\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003e2024 saw a significant increase (39%) in the number of advisories imported from our sources. This is for the most part caused by an increase in the number of CVE records published.\u003c/p\u003e\n\n\n\n\u003ch2 id=\"cve-numbering-authority\"\u003eCVE Numbering Authority\u003c/h2\u003e\n\n\n\n\u003cp\u003eIn addition to publishing advisories in the GitHub Advisory Database, we are also a \u003ca href=\"https://docs.github.com/en/code-security/security-advisories/working-with-repository-security-advisories/about-repository-security-advisories#cve-identification-numbers\"\u003eCVE Numbering Authority (CNA)\u003c/a\u003e for any repository on GitHub. This means that we issue CVE IDs for vulnerabilities reported to us by maintainers, and we publish the vulnerabilities to the CVE database once the corresponding repository advisory is published.\u003c/p\u003e\n\n\n\n\u003cp\u003eGitHub published over 2,000 CVE records in 2024, making us the fifth-largest CNA in the CVE Program.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" decoding=\"async\" loading=\"lazy\" height=\"633\" width=\"1024\" src=\"https://github.blog/wp-content/uploads/2025/06/advisory11.png?resize=1024%2C633\" alt=\"The bar graph shows the number of CVE records published by the Advisory Database CNA over time. Every year shows an increase in the number published.\" srcset=\"https://github.blog/wp-content/uploads/2025/06/advisory11.png?w=1200 1200w, https://github.blog/wp-content/uploads/2025/06/advisory11.png?w=300 300w, https://github.blog/wp-content/uploads/2025/06/advisory11.png?w=768 768w, https://github.blog/wp-content/uploads/2025/06/advisory11.png?w=1024 1024w, https://github.blog/wp-content/uploads/2025/06/advisory11.png?w=512 512w, https://github.blog/wp-content/uploads/2025/06/advisory11.png?w=288 288w\" sizes=\"auto, (max-width: 1000px) 100vw, 1000px\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eThe GitHub CNA is open to \u003cstrong\u003eall repositories\u003c/strong\u003e on GitHub, not just ones in a supported ecosystem.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" decoding=\"async\" loading=\"lazy\" height=\"585\" width=\"1024\" src=\"https://github.blog/wp-content/uploads/2025/06/advisory12.png?resize=1024%2C585\" alt=\"The pie graph shows the proportion of CVEs assigned by the Advisory Database that in a supported ecosystem. 58% are in a supported ecosystem and 42% are not.\" srcset=\"https://github.blog/wp-content/uploads/2025/06/advisory12.png?w=1298 1298w, https://github.blog/wp-content/uploads/2025/06/advisory12.png?w=300 300w, https://github.blog/wp-content/uploads/2025/06/advisory12.png?w=768 768w, https://github.blog/wp-content/uploads/2025/06/advisory12.png?w=1024 1024w\" sizes=\"auto, (max-width: 1000px) 100vw, 1000px\"/\u003e\u003c/figure\u003e\n\n\n\n\u003ch2 id=\"advisory-prioritization\"\u003eAdvisory prioritization\u003c/h2\u003e\n\n\n\n\u003cp\u003eGiven the constant deluge of reported vulnerabilities, you’ll want tools that can help you prioritize your remediation efforts. To that end, GitHub provides additional data in the advisory to allow readers to prioritize their vulnerabilities. In particular, there are:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eSeverity Rating/CVSS:\u003c/strong\u003e A low to critical rating for how severe the vulnerability is likely to be, along with a corresponding CVSS score and vector.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eCWE:\u003c/strong\u003e CWE identifiers provide a programmatic method for determining the type of vulnerability.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eEPSS:\u003c/strong\u003e The Exploit Prediction Scoring System, or EPSS, is a system devised by the global Forum of Incident Response and Security Teams (FIRST) for quantifying the likelihood a vulnerability will be attacked in the next 30 days.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eGitHub adds a severity rating to every advisory. The severity level is one of four possible levels defined in the \u003ca href=\"https://www.first.org/cvss/specification-document\"\u003eCommon Vulnerability Scoring System (CVSS), Section 5\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eLow\u003c/li\u003e\n\n\n\n\u003cli\u003eMedium/Moderate\u003c/li\u003e\n\n\n\n\u003cli\u003eHigh\u003c/li\u003e\n\n\n\n\u003cli\u003eCritical\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eUsing these ratings, half of all vulnerabilities (15% are Critical and 35% are High) warrant immediate or near-term attention. By focusing remediation efforts on these, you can significantly reduce risk exposure while managing workload more efficiently.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" decoding=\"async\" loading=\"lazy\" height=\"633\" width=\"1024\" src=\"https://github.blog/wp-content/uploads/2025/06/advisory13.png?resize=1024%2C633\" alt=\"The stacked area line graph shows the severity rating ration by year of advisory publication. The graph shows that critical vulnerabilities were more common (20 - 25 percent) early on and moderates becoming more common over the years.\" srcset=\"https://github.blog/wp-content/uploads/2025/06/advisory13.png?w=1200 1200w, https://github.blog/wp-content/uploads/2025/06/advisory13.png?w=300 300w, https://github.blog/wp-content/uploads/2025/06/advisory13.png?w=768 768w, https://github.blog/wp-content/uploads/2025/06/advisory13.png?w=1024 1024w, https://github.blog/wp-content/uploads/2025/06/advisory13.png?w=512 512w, https://github.blog/wp-content/uploads/2025/06/advisory13.png?w=288 288w\" sizes=\"auto, (max-width: 1000px) 100vw, 1000px\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eThe CVSS specification says the base score we provide, “reflects the severity of a vulnerability according to its intrinsic characteristics which are constant over time and assumes the reasonable worst-case impact across different deployed environments.” However, the worst-case scenario for your deployment may not be the same as CVSS’s. After all, a crash in a word processor is not as severe as a crash in a server. In order to give more context to your prioritization, GitHub allows you to filter alerts based on the type of vulnerability or weakness using CWE identifiers. So you have the capability to never see another regular expression denial of service (\u003ca href=\"https://cwe.mitre.org/data/definitions/1333.html\"\u003eCWE-1333\u003c/a\u003e) vulnerability again or always see SQL injection (\u003ca href=\"https://cwe.mitre.org/data/definitions/89.html\"\u003eCWE-89\u003c/a\u003e) vulnerabilities.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003ctable\u003e\u003cthead\u003e\u003ctr\u003e\u003cth\u003e\u003cstrong\u003eRank\u003c/strong\u003e\u003c/th\u003e\u003cth\u003e\u003cstrong\u003eCWE ID\u003c/strong\u003e\u003c/th\u003e\u003cth\u003e\u003cstrong\u003eCWE name\u003c/strong\u003e\u003c/th\u003e\u003cth\u003e\u003cstrong\u003eNumber of advisories in 2024\u003c/strong\u003e\u003c/th\u003e\u003cth\u003e\u003cstrong\u003eChange in rank from 2023\u003c/strong\u003e\u003c/th\u003e\u003c/tr\u003e\u003c/thead\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e1\u003c/td\u003e\u003ctd\u003e\u003ca href=\"https://cwe.mitre.org/data/definitions/79.html\"\u003eCWE-79\u003c/a\u003e\u003c/td\u003e\u003ctd\u003eImproper Neutralization of Input During Web Page Generation (‘Cross-site Scripting’)\u003c/td\u003e\u003ctd\u003e936\u003c/td\u003e\u003ctd\u003e+0\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e2\u003c/td\u003e\u003ctd\u003e\u003ca href=\"https://cwe.mitre.org/data/definitions/200.html\"\u003eCWE-200\u003c/a\u003e\u003c/td\u003e\u003ctd\u003eExposure of Sensitive Information to an Unauthorized Actor\u003c/td\u003e\u003ctd\u003e320\u003c/td\u003e\u003ctd\u003e+0\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e3\u003c/td\u003e\u003ctd\u003e\u003ca href=\"https://cwe.mitre.org/data/definitions/22.html\"\u003eCWE-22\u003c/a\u003e\u003c/td\u003e\u003ctd\u003eImproper Limitation of a Pathname to a Restricted Directory (‘Path Traversal’)\u003c/td\u003e\u003ctd\u003e259\u003c/td\u003e\u003ctd\u003e+2\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e4\u003c/td\u003e\u003ctd\u003e\u003ca href=\"https://cwe.mitre.org/data/definitions/20.html\"\u003eCWE-20\u003c/a\u003e\u003c/td\u003e\u003ctd\u003eImproper Input Validation\u003c/td\u003e\u003ctd\u003e202\u003c/td\u003e\u003ctd\u003e+0\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e5\u003c/td\u003e\u003ctd\u003e\u003ca href=\"https://cwe.mitre.org/data/definitions/94.html\"\u003eCWE-94\u003c/a\u003e\u003c/td\u003e\u003ctd\u003eImproper Control of Generation of Code (‘Code Injection’)\u003c/td\u003e\u003ctd\u003e188\u003c/td\u003e\u003ctd\u003e+2\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e6\u003c/td\u003e\u003ctd\u003e\u003ca href=\"https://cwe.mitre.org/data/definitions/89.html\"\u003eCWE-89\u003c/a\u003e\u003c/td\u003e\u003ctd\u003eImproper Neutralization of Special Elements used in an SQL Command (‘SQL Injection’)\u003c/td\u003e\u003ctd\u003e181\u003c/td\u003e\u003ctd\u003e+3\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e7\u003c/td\u003e\u003ctd\u003e\u003ca href=\"https://cwe.mitre.org/data/definitions/352.html\"\u003eCWE-352\u003c/a\u003e\u003c/td\u003e\u003ctd\u003eCross-Site Request Forgery (CSRF)\u003c/td\u003e\u003ctd\u003e161\u003c/td\u003e\u003ctd\u003e-4\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e8\u003c/td\u003e\u003ctd\u003e\u003ca href=\"https://cwe.mitre.org/data/definitions/284.html\"\u003eCWE-284\u003c/a\u003e\u003c/td\u003e\u003ctd\u003eImproper Access Control\u003c/td\u003e\u003ctd\u003e153\u003c/td\u003e\u003ctd\u003e+4\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e9\u003c/td\u003e\u003ctd\u003e\u003ca href=\"https://cwe.mitre.org/data/definitions/400.html\"\u003eCWE-400\u003c/a\u003e\u003c/td\u003e\u003ctd\u003eUncontrolled Resource Consumption\u003c/td\u003e\u003ctd\u003e149\u003c/td\u003e\u003ctd\u003e-3\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e10\u003c/td\u003e\u003ctd\u003e\u003ca href=\"https://cwe.mitre.org/data/definitions/287.html\"\u003eCWE-287\u003c/a\u003e\u003c/td\u003e\u003ctd\u003eImproper Authentication\u003c/td\u003e\u003ctd\u003e124\u003c/td\u003e\u003ctd\u003e+11\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eStill drowning in vulnerabilities? Try using EPSS to focus on vulnerabilities likely to be attacked in the next 30 days. EPSS uses data from a \u003ca href=\"https://www.first.org/epss/partners\"\u003evariety of sources\u003c/a\u003e to create a probability of whether exploitation attempts will be seen in the next 30 days for a given vulnerability. As you can see from the chart below, if you focus on vulnerabilities with EPSS scores of 10% or higher (approx. 7% of all vulnerabilities in the Advisory DB), you can cover nearly all of the vulnerabilities that are likely to see exploit activity.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" decoding=\"async\" loading=\"lazy\" height=\"633\" width=\"1024\" src=\"https://github.blog/wp-content/uploads/2025/06/advisory14.png?resize=1024%2C633\" alt=\"The bar graph shows the number of advisories by EPSS probability. Most of the advisories are in the Low or Very Low probability.\" srcset=\"https://github.blog/wp-content/uploads/2025/06/advisory14.png?w=1200 1200w, https://github.blog/wp-content/uploads/2025/06/advisory14.png?w=300 300w, https://github.blog/wp-content/uploads/2025/06/advisory14.png?w=768 768w, https://github.blog/wp-content/uploads/2025/06/advisory14.png?w=1024 1024w, https://github.blog/wp-content/uploads/2025/06/advisory14.png?w=512 512w, https://github.blog/wp-content/uploads/2025/06/advisory14.png?w=288 288w\" sizes=\"auto, (max-width: 1000px) 100vw, 1000px\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cfigure\u003e\u003ctable\u003e\u003cthead\u003e\u003ctr\u003e\u003cth\u003e\u003cstrong\u003eEPSS probability\u003c/strong\u003e\u003c/th\u003e\u003cth\u003e\u003cstrong\u003eVulnerabilities in range\u003c/strong\u003e\u003c/th\u003e\u003cth\u003e\u003cstrong\u003ePercentage of overall vulnerabilities\u003c/strong\u003e\u003c/th\u003e\u003cth\u003e\u003cstrong\u003eExpected vulnerabilities in range attacked within the next 30 days\u003c/strong\u003e\u003c/th\u003e\u003cth\u003e\u003cstrong\u003ePercentage of total attacked vulnerabilities\u003c/strong\u003e\u003c/th\u003e\u003c/tr\u003e\u003c/thead\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003eHigh ( \u0026gt;= 10%)\u003c/td\u003e\u003ctd\u003e1440\u003c/td\u003e\u003ctd\u003e7.17%\u003c/td\u003e\u003ctd\u003e741\u003c/td\u003e\u003ctd\u003e85.96%\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eModerate ( \u0026gt;= 1%, \u0026lt; 10%)\u003c/td\u003e\u003ctd\u003e2687\u003c/td\u003e\u003ctd\u003e13.37%\u003c/td\u003e\u003ctd\u003e84\u003c/td\u003e\u003ctd\u003e9.74%\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eLow ( \u0026gt;= 0.1%, \u0026lt; 1%)\u003c/td\u003e\u003ctd\u003e10264\u003c/td\u003e\u003ctd\u003e51.09%\u003c/td\u003e\u003ctd\u003e35\u003c/td\u003e\u003ctd\u003e4.06%\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eVery Low ( \u0026lt; 0.1%)\u003c/td\u003e\u003ctd\u003e5701\u003c/td\u003e\u003ctd\u003e28.37%\u003c/td\u003e\u003ctd\u003e2\u003c/td\u003e\u003ctd\u003e0.23%\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eImportant caveats to remember when using EPSS:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eLow probability events occur.\u003c/li\u003e\n\n\n\n\u003cli\u003eEPSS does not tell you whether a vulnerability is exploited; it only claims how likely it is.\u003c/li\u003e\n\n\n\n\u003cli\u003eEPSS scores are updated daily and will change as new information comes in, so a low-probability vulnerability today may become high probability tomorrow.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eFor more details on how to use CVSS and EPSS for prioritization, see our \u003ca href=\"https://github.blog/security/application-security/cutting-through-the-noise-how-to-prioritize-dependabot-alerts/\"\u003eblog\u003c/a\u003e on prioritizing Dependabot alerts.\u003c/p\u003e\n\n\n\n\u003ch2 id=\"actionable-data\"\u003eActionable data\u003c/h2\u003e\n\n\n\n\u003cp\u003eThe GitHub Advisory DB isn’t just a repository of vulnerabilities. It powers tools that help developers secure their projects. Services like Dependabot use the Advisory DB to:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eIdentify vulnerabilities:\u003c/strong\u003e It checks if your projects use any software packages with known vulnerabilities.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eSuggest fixes:\u003c/strong\u003e It recommends updated versions of packages that fix those vulnerabilities when available.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eReduce noise:\u003c/strong\u003e You’ll only get notified about vulnerabilities that affect the version of the package you are using.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cfigure\u003e\u003cimg data-recalc-dims=\"1\" decoding=\"async\" loading=\"lazy\" height=\"632\" width=\"1024\" src=\"https://github.blog/wp-content/uploads/2025/06/advisory15.png?resize=1024%2C632\" alt=\"The bar graph shows the number of advisories published with a patch each year next to the number of advisories without a patch. For every year, nearly all of the advisories have a patch.\" srcset=\"https://github.blog/wp-content/uploads/2025/06/advisory15.png?w=1600 1600w, https://github.blog/wp-content/uploads/2025/06/advisory15.png?w=300 300w, https://github.blog/wp-content/uploads/2025/06/advisory15.png?w=768 768w, https://github.blog/wp-content/uploads/2025/06/advisory15.png?w=1024 1024w, https://github.blog/wp-content/uploads/2025/06/advisory15.png?w=1536 1536w, https://github.blog/wp-content/uploads/2025/06/advisory15.png?w=1416 1416w, https://github.blog/wp-content/uploads/2025/06/advisory15.png?w=288 288w\" sizes=\"auto, (max-width: 1000px) 100vw, 1000px\"/\u003e\u003c/figure\u003e\n\n\n\n\u003ch2 id=\"take-this-with-you\"\u003eTake this with you\u003c/h2\u003e\n\n\n\n\u003cp\u003eThe GitHub Advisory Database is a powerful resource for tracking open source software vulnerabilities, with over 22,000 reviewed advisories to date. By focusing on popular package registries, GitHub allows you to definitively connect vulnerabilities to the packages you are using. Additional data such as CVSS and EPSS scores help you properly prioritize your mitigation efforts.\u003c/p\u003e\n\n\n\n\u003cp\u003eGitHub’s role as a CVE Numbering Authority extends beyond the Advisory Database, ensuring that thousands of vulnerabilities each year reach the broader CVE community. Want to ensure your vulnerability fix reaches your users? \u003ca href=\"https://docs.github.com/en/code-security/security-advisories/working-with-repository-security-advisories/editing-a-repository-security-advisory\"\u003eCreate a GitHub security advisory\u003c/a\u003e in your repository to take advantage of both the GitHub Advisory Database and GitHub’s CNA services.\u003c/p\u003e\n\n\n\n\u003cdiv\u003e\n\u003cp\u003e\u003cstrong\u003eWant to dive deeper?\u003c/strong\u003e Explore \u003ca href=\"https://github.blog/security/\"\u003esecurity blog posts \u0026gt;\u003c/a\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\t\n\u003csection\u003e\n\t\u003chr/\u003e\n\t\u003cdiv\u003e\n\t\t\u003ch2\u003eTags:\u003c/h2\u003e\n\t\t\u003cul\u003e\n\t\t\t\t\t\t\t\u003cli\u003e\n\t\t\t\t\t\u003ca href=\"https://github.blog/tag/cna/\" rel=\"tag\"\u003e\n\t\t\t\t\t\tCNA\t\t\t\t\t\u003c/a\u003e\n\t\t\t\t\u003c/li\u003e\n\t\t\t\t\t\t\t\u003cli\u003e\n\t\t\t\t\t\u003ca href=\"https://github.blog/tag/community-contribution/\" rel=\"tag\"\u003e\n\t\t\t\t\t\tCommunity Contribution\t\t\t\t\t\u003c/a\u003e\n\t\t\t\t\u003c/li\u003e\n\t\t\t\t\t\t\t\u003cli\u003e\n\t\t\t\t\t\u003ca href=\"https://github.blog/tag/cve/\" rel=\"tag\"\u003e\n\t\t\t\t\t\tCVE\t\t\t\t\t\u003c/a\u003e\n\t\t\t\t\u003c/li\u003e\n\t\t\t\t\t\t\t\u003cli\u003e\n\t\t\t\t\t\u003ca href=\"https://github.blog/tag/cve-numbering-authority/\" rel=\"tag\"\u003e\n\t\t\t\t\t\tCVE Numbering Authority\t\t\t\t\t\u003c/a\u003e\n\t\t\t\t\u003c/li\u003e\n\t\t\t\t\t\t\t\u003cli\u003e\n\t\t\t\t\t\u003ca href=\"https://github.blog/tag/cvss/\" rel=\"tag\"\u003e\n\t\t\t\t\t\tCVSS\t\t\t\t\t\u003c/a\u003e\n\t\t\t\t\u003c/li\u003e\n\t\t\t\t\t\t\t\u003cli\u003e\n\t\t\t\t\t\u003ca href=\"https://github.blog/tag/cwe/\" rel=\"tag\"\u003e\n\t\t\t\t\t\tCWE\t\t\t\t\t\u003c/a\u003e\n\t\t\t\t\u003c/li\u003e\n\t\t\t\t\t\t\t\u003cli\u003e\n\t\t\t\t\t\u003ca href=\"https://github.blog/tag/epss/\" rel=\"tag\"\u003e\n\t\t\t\t\t\tEPSS\t\t\t\t\t\u003c/a\u003e\n\t\t\t\t\u003c/li\u003e\n\t\t\t\t\t\t\t\u003cli\u003e\n\t\t\t\t\t\u003ca href=\"https://github.blog/tag/github-security-lab/\" rel=\"tag\"\u003e\n\t\t\t\t\t\tGitHub Security Lab\t\t\t\t\t\u003c/a\u003e\n\t\t\t\t\u003c/li\u003e\n\t\t\t\t\t\t\t\u003cli\u003e\n\t\t\t\t\t\u003ca href=\"https://github.blog/tag/open-source-security/\" rel=\"tag\"\u003e\n\t\t\t\t\t\topen source security\t\t\t\t\t\u003c/a\u003e\n\t\t\t\t\u003c/li\u003e\n\t\t\t\t\t\u003c/ul\u003e\n\t\u003c/div\u003e\n\u003c/section\u003e\n\t\u003cdiv\u003e\n\t\u003ch2\u003e\n\t\tWritten by\t\u003c/h2\u003e\n\t\n\t\t\t\u003carticle\u003e\n\t\u003cdiv\u003e\n\t\t\t\t\t\u003cdiv\u003e\n\t\t\t\t\u003cpicture\u003e\n\t\t\t\t\t\u003csource srcset=\"https://avatars.githubusercontent.com/u/147871125?v=4\u0026amp;s=200\" width=\"120\" height=\"120\" media=\"(min-width: 768px)\"/\u003e\n\t\t\t\t\t\u003cimg src=\"https://avatars.githubusercontent.com/u/147871125?v=4\u0026amp;s=200\" alt=\"Jonathan Evans\" width=\"80\" height=\"80\" loading=\"lazy\" decoding=\"async\"/\u003e\n\t\t\t\t\u003c/picture\u003e\n\t\t\t\u003c/div\u003e\n\t\t\t\t\n\t\t\t\t\t\u003cp\u003eSecurity Analyst, curator of the GitHub Advisory Database, and one of the members of the Security Lab responsible for issuing CVE IDs and publishing CVE records.\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\u003c/article\u003e\n\t\u003c/div\u003e\n\u003c/section\u003e\u003csection\u003e\n\t\u003ch2\u003e\n\t\tRelated posts\t\u003c/h2\u003e\n\t\n\u003c/section\u003e\u003cdiv\u003e\n\t\u003ch2\u003e\n\t\tExplore more from GitHub\t\u003c/h2\u003e\n\t\u003cdiv\u003e\n\t\t\u003cdiv\u003e\n\t\t\u003cp\u003e\u003cimg src=\"https://github.blog/wp-content/uploads/2024/07/Icon-Circle.svg\" width=\"44\" height=\"44\" alt=\"Docs\"/\u003e\u003c/p\u003e\u003ch3\u003e\n\t\t\tDocs\t\t\u003c/h3\u003e\n\t\t\u003cp\u003eEverything you need to master GitHub, all in one place.\u003c/p\u003e\n\t\t\t\t\t\u003cp\u003e\n\t\t\t\t\u003ca data-analytics-click=\"Blog, click on module, text: Go to Docs; ref_location:bottom recirculation;\" href=\"https://docs.github.com/\" target=\"_blank\" aria-label=\"Go to Docs\"\u003e\n\t\t\t\t\tGo to Docs\t\t\t\t\t\t\t\t\t\t\t\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"\u003e\u003cpath fill-rule=\"evenodd\" d=\"M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n\t\t\t\t\t\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\u003cdiv\u003e\n\t\t\u003cp\u003e\u003cimg src=\"https://github.blog/wp-content/uploads/2024/07/Icon_95220f.svg\" width=\"44\" height=\"44\" alt=\"GitHub\"/\u003e\u003c/p\u003e\u003ch3\u003e\n\t\t\tGitHub\t\t\u003c/h3\u003e\n\t\t\u003cp\u003eBuild what’s next on GitHub, the place for anyone from anywhere to build anything.\u003c/p\u003e\n\t\t\t\t\t\u003cp\u003e\n\t\t\t\t\u003ca data-analytics-click=\"Blog, click on module, text: Start building; ref_location:bottom recirculation;\" href=\"https://github.com/\" target=\"_blank\" aria-label=\"Start building\"\u003e\n\t\t\t\t\tStart building\t\t\t\t\t\t\t\t\t\t\t\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"\u003e\u003cpath fill-rule=\"evenodd\" d=\"M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n\t\t\t\t\t\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\u003cdiv\u003e\n\t\t\u003cp\u003e\u003cimg src=\"https://github.blog/wp-content/uploads/2024/07/Icon_da43dc.svg\" width=\"44\" height=\"44\" alt=\"Customer stories\"/\u003e\u003c/p\u003e\u003ch3\u003e\n\t\t\tCustomer stories\t\t\u003c/h3\u003e\n\t\t\u003cp\u003eMeet the companies and engineering teams that build with GitHub.\u003c/p\u003e\n\t\t\t\t\t\u003cp\u003e\n\t\t\t\t\u003ca data-analytics-click=\"Blog, click on module, text: Learn more; ref_location:bottom recirculation;\" href=\"https://github.com/customer-stories\" target=\"_blank\" aria-label=\"Learn more\"\u003e\n\t\t\t\t\tLearn more\t\t\t\t\t\t\t\t\t\t\t\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"\u003e\u003cpath fill-rule=\"evenodd\" d=\"M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n\t\t\t\t\t\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\u003cdiv\u003e\n\t\t\u003cp\u003e\u003cimg src=\"https://github.blog/wp-content/uploads/2024/04/Universe24-North_Star.svg\" width=\"44\" height=\"44\" alt=\"GitHub Universe 2025\"/\u003e\u003c/p\u003e\u003ch3\u003e\n\t\t\tGitHub Universe 2025\t\t\u003c/h3\u003e\n\t\t\u003cp\u003eLast chance: Save $700 on your IRL pass to Universe and join us on Oct. 28-29 in San Francisco.\u003c/p\u003e\n\t\t\t\t\t\u003cp\u003e\n\t\t\t\t\u003ca data-analytics-click=\"Blog, click on module, text: Register now \u0026gt;; ref_location:bottom recirculation;\" href=\"https://githubuniverse.com/?utm_source=Blog\u0026amp;utm_medium=GitHub\u0026amp;utm_campaign=module\" target=\"_blank\" aria-label=\"Register now \u0026gt;\"\u003e\n\t\t\t\t\tRegister now \u0026gt;\t\t\t\t\t\t\t\t\t\t\t\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"\u003e\u003cpath fill-rule=\"evenodd\" d=\"M10.604 1h4.146a.25.25 0 01.25.25v4.146a.25.25 0 01-.427.177L13.03 4.03 9.28 7.78a.75.75 0 01-1.06-1.06l3.75-3.75-1.543-1.543A.25.25 0 0110.604 1zM3.75 2A1.75 1.75 0 002 3.75v8.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 12.25v-3.5a.75.75 0 00-1.5 0v3.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-8.5a.25.25 0 01.25-.25h3.5a.75.75 0 000-1.5h-3.5z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n\t\t\t\t\t\t\t\t\t\u003c/a\u003e\n\t\t\t\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\t\u003c/div\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "15 min read",
  "publishedTime": "2025-06-27T16:00:00Z",
  "modifiedTime": null
}
