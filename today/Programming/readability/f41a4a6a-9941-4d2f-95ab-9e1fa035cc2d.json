{
  "id": "f41a4a6a-9941-4d2f-95ab-9e1fa035cc2d",
  "title": "To Serve Man, with Software",
  "link": "https://blog.codinghorror.com/to-serve-man-with-software/",
  "description": "I didn't choose to be a programmer. Somehow, it seemed, the computers chose me. For a long time, that was fine, that was enough; that was all I needed. But along the way I never felt that being a programmer was this unambiguously great-for-everyone career field with zero",
  "author": "Jeff Atwood",
  "published": "Sun, 31 Dec 2017 02:01:52 GMT",
  "source": "https://feeds.feedburner.com/codinghorror",
  "categories": null,
  "byline": "Jeff Atwood",
  "length": 7048,
  "excerpt": "I didn't choose to be a programmer. Somehow, it seemed, the computers chose me [https://blog.codinghorror.com/if-loving-computers-is-wrong-i-dont-want-to-be-right/]. For a long time, that was fine, that was enough; that was all I needed. But along the way I never felt that being a programmer was this unambiguously great-for-everyone [https://blog.codinghorror.com/please-dont-learn-to-code/] career field with zero downsides. There are absolutely occupational hazards of being a programmer, and one",
  "siteName": "Coding Horror",
  "favicon": "https://blog.codinghorror.com/content/images/size/w256h256/2020/06/3cffc4b347c3587f19fe222caaac69f63b9a5e73.png",
  "text": "31 Dec 2017 I didn't choose to be a programmer. Somehow, it seemed, the computers chose me. For a long time, that was fine, that was enough; that was all I needed. But along the way I never felt that being a programmer was this unambiguously great-for-everyone career field with zero downsides. There are absolutely occupational hazards of being a programmer, and one of my favorite programming quotes is an allusion to one of them: It should be noted that no ethically-trained software engineer would ever consent to write a DestroyBaghdad procedure. Basic professional ethics would instead require him to write a DestroyCity procedure, to which Baghdad could be given as a parameter. Which reminds me of another joke that people were telling in 2015: Donald Trump is basically a comment section running for president Which is troubling because technically, technically, I run a company that builds comment sections. Here at the tail end of 2017, from where I sit neither of these jokes seem particularly funny to me any more. Perhaps I have lost the capacity to feel joy as a human being? Haha just kidding! ... kinda. Remember in 2011 when Marc Andreeseen said that \"Software is eating the world?\" That used to sound all hip and cool and inspirational, like \"Wow! We software developers really are making a difference in the world!\" and now for the life of me I can't read it as anything other than an ominous warning that we just weren't smart enough to translate properly at the time. But maybe now we are. I've said many, many times that the key to becoming an experienced software developer is to understand that you are, at all times, your own worst enemy. I don't mean this in a negative way – you have to constantly plan for and design around your inevitable human mistakes and fallibility. It's fundamental to good software engineering because, well, we're all human. The good-slash-bad news is that you're only accidentally out to get yourself. But what happens when we're infinitely connected and software is suddenly everywhere, in everyone's pockets every moment of the day, starting to approximate a natural extension of our bodies? All of a sudden those little collective social software accidents become considerably more dangerous: The issue is bigger than any single scandal, I told him. As headlines have exposed the troubling inner workings of company after company, startup culture no longer feels like fodder for gentle parodies about ping pong and hoodies. It feels ugly and rotten. Facebook, the greatest startup success story of this era, isn’t a merry band of hackers building cutesy tools that allow you to digitally Poke your friends. It’s a powerful and potentially sinister collector of personal data, a propaganda partner to government censors, and an enabler of discriminatory advertising. I'm reminded of a particular Mitchell and Webb skit: \"Are we the baddies?\" On the topic of unanticipated downsides to technology, there is no show more essential than Black Mirror. If you haven't watched Black Mirror yet, do not pass go, do not collect $200, go immediately to Netflix and watch it. Go on! Go ahead! ⚠ Fair warning: please DO NOT start with season 1 episode 1 of Black Mirror! Start with season 3, and go forward. If you like those, dip into season 2 and the just-released season 4, then the rest. But humor me and please at least watch the first episode of season 3. The technology described in Black Mirror can be fanciful at times, but several episodes portray disturbingly plausible scenarios with today's science and tech, much less what we'll have 20 to 50 years from now. These are very real cautionary tales, and some of this stuff is well on its way toward being realized. Programmers don't think of themselves as people with the power to change the world. Most programmers I know, including myself, grew up as nerds, geeks, social outcasts. Did I ever tell you about the time I wrote a self-destructing Apple // boot disk program to let a girl in middle school know that I liked her? I was (and still am) a terrible programmer, but oh man did I ever test the heck out of that code before copying on to her school floppy disc. But I digress. What do you do when you wake up one day and software has kind of eaten the world, and it is no longer clear if software is in fact an unambiguously good thing, like we thought, like everyone told us … like we wanted it to be? Months ago I submitted a brief interview for a children's book about coding. I recently recieved a complimentary copy of the book in the mail. I paged to my short interview, alongside the very cool Kiki Prottsman. I had no real recollection of the interview questions after the months of lead time it takes to print a physical book, but reading the printed page, I suddenly hit myself over the head with the very answer I had been searching my soul for these past 6 months: In attempting to simplify my answers for an audience of kids, I had concisely articulated the one thing that keeps me coming back to software: to serve man. Not on a platter, for bullshit monetization – but software that helps people be the best version of themselves. And you know why I do it? I need that help, too. I get tired, angry, upset, emotional, cranky, irritable, frustrated and I need to be reminded from time to time to choose to be the better version of myself. I don't always succeed. But I want to. And I believe everyone else – for some reasonable statistical value of everyone else – fundamentally does, too. That was the not-so-secret design philosophy behind Stack Overflow, that by helping others become better programmers, you too would become a better programmer. It's unavoidable. And, even better, if we leave enough helpful breadcrumbs behind for those that follow us, we collectively advance the whole of programming for everyone. I apologize for not blogging much in 2017. I've certainly been busy with Discourse which is actually going great; we grew to 21 people and gave $55,000 back this year to the open source ecosystem we build on. But that's no excuse. The truth is that it's been hard to write because this has been a deeply troubling year in so many dimensions — for men, for tech, for American democracy. I'm ashamed of much that happened, and I think one of the first and most important steps we can take is to embrace explicit codes of conduct throughout our industry. I also continue to believe, if we start to think more holistically about what our software can do to serve all people, not just ourselves personally (or, even worse, the company we work for) — that software can and should be part of the solution. I tried to amplify on these thoughts in recent podcasts: Software is easy to change, but people ... aren't. So in the new year, as software developers, let's make a resolution to focus on the part we can change, and keep asking ourselves one very important question: how can our software help people become the best version of themselves?",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n        \n        \n\u003cmain role=\"main\"\u003e\n\n    \u003carticle\u003e\n\n\n            \u003cspan\u003e\u003ctime datetime=\"2017-12-31\"\u003e31 Dec 2017\u003c/time\u003e \u003c/span\u003e\n\n            \n\n            \u003csection\u003e\n                \u003cp\u003eI didn\u0026#39;t choose to be a programmer. Somehow, it seemed, \u003ca href=\"https://blog.codinghorror.com/if-loving-computers-is-wrong-i-dont-want-to-be-right/\"\u003ethe computers chose me\u003c/a\u003e. For a long time, that was fine, that was enough; that was all I needed. But along the way I never felt that being a programmer was this \u003ca href=\"https://blog.codinghorror.com/please-dont-learn-to-code/\"\u003eunambiguously great-for-everyone\u003c/a\u003e career field with zero downsides. There are absolutely occupational hazards of being a programmer, and \u003ca href=\"https://blog.codinghorror.com/your-favorite-programming-quote/\"\u003eone of my favorite programming quotes\u003c/a\u003e is an allusion to one of them:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIt should be noted that no ethically-trained software engineer would ever consent to write a \u003ccode\u003eDestroyBaghdad\u003c/code\u003e procedure. Basic professional ethics would instead require him to write a \u003ccode\u003eDestroyCity\u003c/code\u003e procedure, to which Baghdad could be given as a parameter.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eWhich reminds me of \u003ca href=\"https://waxy.org/2015/12/tracking_the_trump_is_a_comment_section_running_for_president_joke/?ref=blog.codinghorror.com\"\u003eanother joke that people were telling in 2015\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eDonald Trump is basically a comment section running for president\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eWhich is troubling because technically, \u003cem\u003etechnically\u003c/em\u003e, I run a company that \u003ca href=\"https://discourse.org/?ref=blog.codinghorror.com\"\u003ebuilds comment sections\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eHere at the tail end of 2017, from where I sit neither of these jokes seem particularly funny to me any more. Perhaps I have lost the capacity to feel joy as a human being? \u003cem\u003eHaha just kidding!\u003c/em\u003e \u003cem\u003e... kinda.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eRemember \u003ca href=\"https://www.wsj.com/articles/SB10001424053111903480904576512250915629460?ref=blog.codinghorror.com\"\u003ein 2011\u003c/a\u003e when Marc Andreeseen said that \u0026#34;Software is eating the world?\u0026#34;\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://blog.codinghorror.com/content/images/2017/12/software-is-eating-the-world-marc-andreessen.jpg\" alt=\"software is eating the world, Marc Andreessen\" loading=\"lazy\"/\u003e\u003c/p\u003e\n\u003cp\u003eThat used to sound all hip and cool and inspirational, like \u0026#34;Wow! We software developers really \u003cem\u003eare\u003c/em\u003e making a difference in the world!\u0026#34; and now for the life of me I can\u0026#39;t read it as anything other than an ominous warning that we just weren\u0026#39;t smart enough to translate properly at the time. But \u003ca href=\"https://en.wikipedia.org/wiki/To_Serve_Man_(The_Twilight_Zone)?ref=blog.codinghorror.com\"\u003emaybe now we are\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/To_Serve_Man_(The_Twilight_Zone)?ref=blog.codinghorror.com\"\u003e\u003cimg src=\"https://blog.codinghorror.com/content/images/2017/12/to-serve-man.jpg\" alt=\"to-serve-man\" loading=\"lazy\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eI\u0026#39;ve said many, many times that the key to becoming an experienced software developer is to understand that you are, at all times, \u003ca href=\"https://blog.codinghorror.com/on-the-meaning-of-coding-horror/\"\u003eyour own worst enemy\u003c/a\u003e. I don\u0026#39;t mean this in a negative way – you have to constantly plan for and design around your inevitable human mistakes and fallibility. It\u0026#39;s fundamental to good software engineering because, well, we\u0026#39;re all human. The good-slash-bad news is that you\u0026#39;re only \u003ca href=\"https://blog.codinghorror.com/the-trap-you-set-for-yourself/\"\u003e\u003cem\u003eaccidentally\u003c/em\u003e out to get yourself\u003c/a\u003e. But what happens when we\u0026#39;re infinitely connected and software is suddenly \u003cem\u003eeverywhere\u003c/em\u003e, in everyone\u0026#39;s pockets every moment of the day, starting to approximate a natural extension of our bodies? All of a sudden those little collective social software accidents become \u003ca href=\"https://www.wired.com/story/the-other-tech-bubble/?ref=blog.codinghorror.com\"\u003econsiderably more dangerous\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe issue is bigger than any single scandal, I told him. As headlines have exposed the troubling inner workings of company after company, startup culture no longer feels like fodder for gentle parodies about ping pong and hoodies. It feels ugly and rotten. Facebook, the greatest startup success story of this era, isn’t a merry band of hackers building cutesy tools that allow you to digitally Poke your friends. It’s a powerful and potentially sinister collector of personal data, a propaganda partner to government censors, and an enabler of discriminatory advertising.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eI\u0026#39;m reminded of a particular Mitchell and Webb skit: \u003cem\u003e\u0026#34;Are we the baddies?\u0026#34;\u003c/em\u003e\u003c/p\u003e\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/qv2XGQBcvxQ\" frameborder=\"0\" gesture=\"media\" allow=\"encrypted-media\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\u003cp\u003eOn the topic of unanticipated downsides to technology, there is no show more essential than \u003ca href=\"https://www.netflix.com/title/70264888?ref=blog.codinghorror.com\"\u003eBlack Mirror\u003c/a\u003e. If you haven\u0026#39;t watched Black Mirror yet, do not pass go, do not collect $200, go immediately to Netflix and watch it. Go on! Go ahead!\u003c/p\u003e\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/jDiYGjp5iFg\" frameborder=\"0\" gesture=\"media\" allow=\"encrypted-media\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\u003cblockquote\u003e\n\u003cp\u003e⚠ Fair warning: please DO NOT start with season 1 episode 1 of Black Mirror! Start with season 3, and go forward. If you like those, dip into season 2 and the just-released season 4, then the rest. But humor me and please at least watch the first episode of season 3.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThe technology described in Black Mirror can be fanciful at times, but several episodes portray disturbingly plausible scenarios with \u003cem\u003etoday\u0026#39;s\u003c/em\u003e science and tech, much less what we\u0026#39;ll have 20 to 50 years from now. These are very real cautionary tales, and some of this stuff is well on its way toward being realized.\u003c/p\u003e\n\u003cp\u003eProgrammers don\u0026#39;t think of themselves as people with the power to change the world. Most programmers I know, including myself, grew up as nerds, geeks, social outcasts. Did I ever tell you about the time I wrote a self-destructing Apple // boot disk program to let a girl in middle school know that I liked her? I was (and still am) a terrible programmer, but oh man did I ever test the heck out of \u003cem\u003ethat\u003c/em\u003e code before copying on to her school floppy disc. But I digress. What do you do when you wake up one day and software \u003cem\u003ehas\u003c/em\u003e kind of eaten the world, and \u003cstrong\u003eit is no longer clear if software is in fact an unambiguously good thing, like we thought, like everyone told us … like we \u003cem\u003ewanted it to be?\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eMonths ago I submitted a brief interview for a \u003ca href=\"https://www.amazon.com/dp/1465462333/?tag=codihorr-20\u0026amp;ref=blog.codinghorror.com\"\u003echildren\u0026#39;s book about coding\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.amazon.com/dp/1465462333/?tag=codihorr-20\u0026amp;ref=blog.codinghorror.com\"\u003e\u003cimg src=\"https://blog.codinghorror.com/content/images/2017/12/9780241285060.jpg\" width=\"400\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eI recently recieved a complimentary copy of the book in the mail. I paged to \u003ca href=\"https://blog.codinghorror.com/content/images/2017/12/dk-findout-coding-page-50.jpg\"\u003emy short interview\u003c/a\u003e, alongside the very cool \u003ca href=\"http://www.prottsman.com/?ref=blog.codinghorror.com\"\u003eKiki Prottsman\u003c/a\u003e. I had no real recollection of the interview questions after the months of lead time it takes to print a physical book, but reading the printed page, I suddenly hit myself over the head with the very answer I had been searching my soul for these past 6 months:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://blog.codinghorror.com/content/images/2017/12/dk-findout-coding-page-50.jpg\"\u003e\u003cimg src=\"https://blog.codinghorror.com/content/images/2017/12/dk-findout-coding-page-50-quote.jpg\" alt=\"Jeff Atwood quote: what do you love most about coding?\" loading=\"lazy\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eIn attempting to simplify my answers for an audience of kids, I had concisely articulated the one thing that keeps me coming back to software: \u003cstrong\u003eto serve man\u003c/strong\u003e. Not on a platter, for bullshit monetization – but software that \u003ca href=\"https://blog.codinghorror.com/the-just-in-time-theory/\"\u003ehelps people\u003c/a\u003e be the best version of themselves.\u003c/p\u003e\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/cNi_HC839Wo?start=118\" frameborder=\"0\" gesture=\"media\" allow=\"encrypted-media\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\u003cp\u003eAnd you know why I do it? I need that help, too. I get tired, angry, upset, emotional, cranky, irritable, frustrated and I need to be reminded from time to time to choose to be the better version of myself. I don\u0026#39;t always succeed. But \u003cem\u003eI want to\u003c/em\u003e. And I believe everyone else – for some reasonable statistical value of everyone else – fundamentally does, too.\u003c/p\u003e\n\u003cp\u003eThat was the not-so-secret design philosophy behind Stack Overflow, that \u003cstrong\u003eby helping others become better programmers, you too would become a better programmer\u003c/strong\u003e. It\u0026#39;s unavoidable. And, even better, if we leave enough helpful breadcrumbs behind for those that follow us, \u003cem\u003ewe collectively advance the whole of programming for everyone\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eI apologize for not blogging much in 2017.  I\u0026#39;ve certainly been busy with Discourse which is actually going great; we grew to 21 people and \u003ca href=\"https://blog.discourse.org/2017/12/discourse-gives-back-2017/?ref=blog.codinghorror.com\"\u003egave $55,000 back\u003c/a\u003e this year to the open source ecosystem we build on. But that\u0026#39;s no excuse. The truth is that it\u0026#39;s been hard to write because this has been a deeply troubling year in so many dimensions — for men, for tech, for American democracy. I\u0026#39;m ashamed of much that happened, and I think one of the first and most important steps we can take is to \u003ca href=\"https://blog.codinghorror.com/the-hugging-will-continue-until-morale-improves/\"\u003eembrace explicit codes of conduct\u003c/a\u003e throughout our industry. I also continue to believe, if we start to think more holistically about what our software can do to \u003cstrong\u003eserve all people\u003c/strong\u003e, not just ourselves personally (or, even worse, the company we work for) — that software can and should be part of the solution.\u003c/p\u003e\n\u003cp\u003eI tried to amplify on these thoughts in recent podcasts:\u003c/p\u003e\n\n\u003cp\u003eSoftware is easy to change, but people ... aren\u0026#39;t. So in the new year, as software developers, let\u0026#39;s make a resolution to focus on the part we \u003cem\u003ecan\u003c/em\u003e change, and keep asking ourselves one very important question: \u003cstrong\u003ehow can our software help people become the best version of themselves?\u003c/strong\u003e\u003c/p\u003e\n\n            \u003c/section\u003e\n\n            \n\n            \n\n\n    \u003c/article\u003e\n\n    \n\n    \n\n\u003c/main\u003e\n\n\n\n    \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "8 min read",
  "publishedTime": "2017-12-31T02:01:52Z",
  "modifiedTime": "2017-12-31T02:58:19Z"
}
