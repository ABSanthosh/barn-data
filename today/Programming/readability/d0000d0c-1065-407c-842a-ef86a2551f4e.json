{
  "id": "d0000d0c-1065-407c-842a-ef86a2551f4e",
  "title": "The ReSharper and .NET Tools 2025.2 Release Candidates Are Now Available",
  "link": "https://blog.jetbrains.com/dotnet/2025/07/24/resharper-dot-net-tools-2025-2-release-candidate/",
  "description": "The ReSharper and .NET tools 2025.2 Release Candidates are ready for you to try. This release introduces the public preview of ReSharper’s Out-of-Process mode, adds support for the latest C# 14 and C++26 features, and brings a range of improvements for performance, refactorings, and inspections. If you’d like to try out what’s coming in the […]",
  "author": "Sasha Ivanova",
  "published": "Thu, 24 Jul 2025 13:16:48 +0000",
  "source": "https://blog.jetbrains.com/feed",
  "categories": [
    "net-tools",
    "eap",
    "releases",
    "resharper",
    "oop",
    "out-of-process-2",
    "release-candidate"
  ],
  "byline": "Sasha Ivanova",
  "length": 7223,
  "excerpt": "The ReSharper and .NET tools 2025.2 Release Candidates are ready for you to try. This release introduces the public preview of ReSharper’s Out-of-Process mode, adds support for the latest C# 14 and C+",
  "siteName": "The JetBrains Blog",
  "favicon": "https://blog.jetbrains.com/wp-content/uploads/2024/01/cropped-mstile-310x310-1-180x180.png",
  "text": "Essential productivity kit for .NET and game developers .NET Tools Early Access Program Releases ReSharper PlatformThe ReSharper and .NET Tools 2025.2 Release Candidates Are Now Available The ReSharper and .NET tools 2025.2 Release Candidates are ready for you to try. This release introduces the public preview of ReSharper’s Out-of-Process mode, adds support for the latest C# 14 and C++26 features, and brings a range of improvements for performance, refactorings, and inspections. If you’d like to try out what’s coming in the next stable release, you can download the RC build here: Performance improvements This release includes several updates aimed at improving performance and responsiveness: Out-of-Process mode [Public Preview] is an architectural change in ReSharper designed to improve stability and performance by decoupling it from the Visual Studio process. To enable this mode, go to ReSharper’s Options | Environment | Products \u0026 Features, select Run ReSharper in separate process, click Save, and reinitiate ReSharper to apply the changes. The Rename refactoring is now faster, uses less memory, and offers better progress reporting. We’ve reduced the performance impact of inplace refactorings, minimizing interference with typing and improving the overall editing experience. Razor and Blazor processing has been optimized by reducing memory usage and eliminating redundant work on the part of ReSharper. ReSharper now indexes solutions faster on modern hardware by removing HDD-era sequential disk access logic and optimizing for SSDs’ parallel I/O capabilities. Solution loading has been improved for projects that include references to Source Generators. C# support ReSharper 2025.2 adds initial support for the latest C# 14 features: Extension members (initial support). Partial events and constructors. Null-conditional assignments (e.g. a?.b = c). User-defined compound assignment operators. New preprocessor directives: #! and #:. Logging improvements ReSharper now helps you write more efficient and maintainable logging code with ILogger: A new refactoring lets you convert standard logger calls into [LoggerMessage]-based methods. When using ILogger\u003cT\u003e, ReSharper suggests the current type automatically. Completion is now available for parameters in [LoggerMessage] attributes.ReSharper detects and highlights missing parameters or duplicates in logging declarations. Code quality CQRS Validation [Experimental] ReSharper 2025.2 introduces experimental inspections to help enforce the Command Query Responsibility Segregation (CQRS) pattern. It detects naming mismatches, context intersections, and conflicts between annotations and naming. Quick-fixes are available to remove redundant attributes or rename entities to follow conventions.CQRS validation is disabled by default and can be enabled in ReSharper’s Options | Code Inspection | CQRS Validation. The required annotations are available in JetBrains.Annotations. Coding productivity Several new context actions and inspections are available in this release: Inplace refactorings now appear via inlay hints. A new context action lets you convert a method to a local function. A new inspection detects duplicated switch arms and offers a fix to merge them. Support has been added for [ConstantExpected], with warnings when non-constant values are used. C++ support ReSharper C++ 2025.2 introduces the following updates for modern C++ development: Initial support for C++26 language features. Code insight and completion in code containing multiple #if directives. A new syntax style for keeping definitions sorted by declaration order. Highlighting for global constants, OpenMP variable support, and more. Continuous integration As of this release, the TeamCity extension for Visual Studio is being discontinued. This change is intended to reduce long-term maintenance overheads and focus development on the most impactful tooling. What’s new in dotTrace and dotMemory 2025.2 RC During our latest release cycle, our efforts surrounding the .NET profiling tools have been focused on improving and elevating their integration into JetBrains Rider. The Monitoring tool inside Rider has been reimagined to provide a more seamless and informative experience when analyzing application performance during development. The reworked Monitoring tool window now features interactive charts for CPU usage, memory consumption, and garbage collection (GC) activity, giving you an at-a-glance view of your application’s runtime behavior. From the tool window, you can initiate performance or memory profiling sessions for deeper analysis in the built-in dotTrace and dotMemory profilers or their standalone counterparts. On Windows, the Monitoring tool also automatically detects performance bottlenecks, UI freezes, and GC issues. Detected problems and time intervals selected on the charts can be further investigated in dotTrace. What’s new in dotCover 2025.2 RC This release introduces performance optimizations and removes support for some technologies with low usage. The following are no longer supported: Mono and Unity projects. IIS Express, WCF, WinRT, external .NET processes, and MAUI. The command-line runner has been updated and modernized: dotcover cover now handles all target types. XML configuration files have been replaced by text files with CLI arguments. The .exe runner has been removed from the NuGet package. The standalone dotcover.exe runner has been removed from the NuGet package. The CLI runner is now available exclusively as a .NET global or local tool (requires .NET 6 or later). Share your feedback You can download the latest build right now from the ReSharper 2025.2 EAP page or install it via the JetBrains Toolbox App. It’s still not too late to share your feedback on the newest features! Our developers are still putting the final touches on the upcoming release. Tell us what you think in the comments below or by reaching out to us on X or Bluesky. Subscribe to a monthly digest curated from the .NET Tools blog: Discover more",
  "image": "https://blog.jetbrains.com/wp-content/uploads/2025/07/Social_Share_Blog_1280x720-2x-10.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"main\"\u003e\n    \u003cdiv\u003e\n                        \u003ca href=\"https://blog.jetbrains.com/dotnet/\"\u003e\n                            \u003cimg src=\"https://blog.jetbrains.com/wp-content/uploads/2019/01/Frame-1321314548.svg\" alt=\"Dotnet logo\"/\u003e\n                                                                                                \n                                                                                    \u003c/a\u003e\n                                                    \u003cp\u003eEssential productivity kit for .NET and game developers\u003c/p\u003e\n                                            \u003c/div\u003e\n                            \u003csection data-clarity-region=\"article\"\u003e\n                \u003cdiv\u003e\n                    \t\t\t\t\u003cp\u003e\u003ca href=\"https://blog.jetbrains.com/dotnet/category/net-tools/\"\u003e.NET Tools\u003c/a\u003e\n\t\t\t\u003ca href=\"https://blog.jetbrains.com/dotnet/category/eap/\"\u003eEarly Access Program\u003c/a\u003e\n\t\t\t\u003ca href=\"https://blog.jetbrains.com/dotnet/category/releases/\"\u003eReleases\u003c/a\u003e\n\t\t\t\u003ca href=\"https://blog.jetbrains.com/dotnet/category/resharper/\"\u003eReSharper Platform\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"major-updates\"\u003eThe ReSharper and .NET Tools 2025.2 Release Candidates Are Now Available\u003c/h2\u003e                    \n                    \n\u003cp\u003eThe ReSharper and .NET tools 2025.2 Release Candidates are ready for you to try. This release introduces the public preview of ReSharper’s\u003cem\u003e Out-of-Process\u003c/em\u003e mode, adds support for the latest C# 14 and C++26 features, and brings a range of improvements for performance, refactorings, and inspections.\u003c/p\u003e\n\n\n\n\u003cp\u003eIf you’d like to try out what’s coming in the next stable release, you can download the RC build here:\u003c/p\u003e\n\n\n    \n\n\n\n\n\n\n\n\u003ch2\u003ePerformance improvements\u003c/h2\u003e\n\n\n\n\u003cp\u003eThis release includes several updates aimed at improving performance and responsiveness:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://lp.jetbrains.com/resharper-oop/\" data-type=\"link\" data-id=\"https://lp.jetbrains.com/resharper-oop/\" target=\"_blank\" rel=\"noopener\"\u003e\u003cstrong\u003e\u003cem\u003eOut-of-Process\u003c/em\u003e mode\u003c/strong\u003e\u003c/a\u003e [Public Preview] is an architectural change in ReSharper designed to improve stability and performance by decoupling it from the Visual Studio process. To enable this mode, go to \u003cem\u003eReSharper’s Options | Environment | Products \u0026amp; Features\u003c/em\u003e, select \u003cem\u003eRun ReSharper in separate process\u003c/em\u003e, click \u003cem\u003eSave,\u003c/em\u003e and reinitiate ReSharper to apply the changes.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" fetchpriority=\"high\" width=\"1200\" height=\"504\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/07/image-12.png\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eThe\u003cem\u003e \u003c/em\u003e\u003cstrong\u003e\u003cem\u003eRename\u003c/em\u003e refactoring\u003c/strong\u003e is now faster, uses less memory, and offers better progress reporting.\u003c/li\u003e\n\n\n\n\u003cli\u003eWe’ve reduced the performance impact of \u003cstrong\u003einplace refactorings\u003c/strong\u003e, minimizing interference with typing and improving the overall editing experience.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eRazor and Blazor processing\u003c/strong\u003e has been optimized by reducing memory usage and eliminating redundant work on the part of ReSharper.\u003c/li\u003e\n\n\n\n\u003cli\u003eReSharper now \u003cstrong\u003eindexes solutions faster\u003c/strong\u003e on modern hardware by removing HDD-era sequential disk access logic and optimizing for SSDs’ parallel I/O capabilities.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eSolution loading has been improved\u003c/strong\u003e for projects that include references to Source Generators.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003ch2\u003eC# support\u003c/h2\u003e\n\n\n\n\u003cp\u003eReSharper 2025.2 adds initial support for the latest \u003cstrong\u003eC# 14\u003c/strong\u003e features:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eExtension members (initial support).\u003c/li\u003e\n\n\n\n\u003cli\u003ePartial events and constructors.\u003c/li\u003e\n\n\n\n\u003cli\u003eNull-conditional assignments (e.g. \u003ccode\u003ea?.b = c\u003c/code\u003e).\u003c/li\u003e\n\n\n\n\u003cli\u003eUser-defined compound assignment operators.\u003c/li\u003e\n\n\n\n\u003cli\u003eNew preprocessor directives: \u003ccode\u003e#!\u003c/code\u003e and \u003ccode\u003e#:\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003ch2\u003eLogging improvements\u003c/h2\u003e\n\n\n\n\u003cp\u003eReSharper now helps you write more efficient and maintainable logging code with \u003ccode\u003eILogger\u003c/code\u003e:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eA new refactoring lets you convert standard logger calls into \u003ccode\u003e[LoggerMessage]\u003c/code\u003e-based methods.\u003c/li\u003e\n\n\n\n\u003cli\u003eWhen using \u003ccode\u003eILogger\u0026lt;T\u0026gt;\u003c/code\u003e, ReSharper suggests the current type automatically.\u003c/li\u003e\n\n\n\n\u003cli\u003eCompletion is now available for parameters in \u003ccode\u003e[LoggerMessage]\u003c/code\u003e attributes.\u003cbr/\u003eReSharper detects and highlights missing parameters or duplicates in logging declarations.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003ch2\u003eCode quality\u003c/h2\u003e\n\n\n\n\u003ch3\u003eCQRS Validation [Experimental]\u003c/h3\u003e\n\n\n\n\u003cp\u003eReSharper 2025.2 introduces experimental inspections to help enforce the Command Query Responsibility Segregation (CQRS) pattern. It detects naming mismatches, context intersections, and conflicts between annotations and naming. Quick-fixes are available to remove redundant attributes or rename entities to follow conventions.\u003cbr/\u003eCQRS validation is disabled by default and can be enabled in ReSharper’s \u003cem\u003eOptions | Code Inspection | CQRS Validation\u003c/em\u003e. The required annotations are available in \u003ccode\u003eJetBrains.Annotations\u003c/code\u003e\u003cstrong\u003e.\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003ch2\u003eCoding productivity\u003c/h2\u003e\n\n\n\n\u003cp\u003eSeveral new context actions and inspections are available in this release:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eInplace refactorings now appear via inlay hints.\u003c/li\u003e\n\n\n\n\u003cli\u003eA new context action lets you convert a method to a local function.\u003c/li\u003e\n\n\n\n\u003cli\u003eA new inspection detects duplicated switch arms and offers a fix to merge them.\u003c/li\u003e\n\n\n\n\u003cli\u003eSupport has been added for \u003ccode\u003e[ConstantExpected]\u003c/code\u003e, with warnings when non-constant values are used.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003ch2\u003eC++ support\u003c/h2\u003e\n\n\n\n\u003cp\u003eReSharper C++ 2025.2 introduces the following updates for modern C++ development:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eInitial support for C++26 language features.\u003c/li\u003e\n\n\n\n\u003cli\u003eCode insight and completion in code containing multiple \u003ccode\u003e#if\u003c/code\u003e directives.\u003c/li\u003e\n\n\n\n\u003cli\u003eA new syntax style for keeping definitions sorted by declaration order.\u003c/li\u003e\n\n\n\n\u003cli\u003eHighlighting for global constants, OpenMP variable support, and more.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n    \n\n\n\n\n\n\n\u003ch2\u003eContinuous integration\u003c/h2\u003e\n\n\n\n\u003cp\u003eAs of this release, the TeamCity extension for Visual Studio is being discontinued. This change is intended to reduce long-term maintenance overheads and focus development on the most impactful tooling.\u003c/p\u003e\n\n\n\n\u003ch2\u003eWhat’s new in dotTrace and dotMemory 2025.2 RC\u003c/h2\u003e\n\n\n\n\u003cp\u003eDuring our latest release cycle, our efforts surrounding the .NET profiling tools have been focused on improving and elevating their integration into JetBrains Rider. The \u003cem\u003eMonitoring\u003c/em\u003e tool inside Rider has been reimagined to provide a more seamless and informative experience when analyzing application performance during development.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003e\u003ca href=\"https://www.jetbrains.com/help/rider/2025.2/Program-Monitoring.html\" data-type=\"link\" data-id=\"https://www.jetbrains.com/help/rider/2025.2/Program-Monitoring.html\" target=\"_blank\" rel=\"noopener\"\u003eThe reworked \u003cem\u003eMonitoring\u003c/em\u003e tool window\u003c/a\u003e\u003c/strong\u003e now features interactive charts for CPU usage, memory consumption, and garbage collection (GC) activity, giving you an at-a-glance view of your application’s runtime behavior.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" width=\"1200\" height=\"1112\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/07/image-71.png\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eFrom the tool window, you can initiate performance or memory profiling sessions for deeper analysis in the built-in dotTrace and dotMemory profilers or their standalone counterparts. On Windows, the \u003cem\u003eMonitoring\u003c/em\u003e tool also automatically detects performance bottlenecks, UI freezes, and GC issues. Detected problems and time intervals selected on the charts can be further investigated in dotTrace.\u003c/p\u003e\n\n\n\n\u003ch2\u003eWhat’s new in dotCover 2025.2 RC\u003c/h2\u003e\n\n\n\n\u003cp\u003eThis release introduces performance optimizations and removes support for some technologies with low usage. The following are no longer supported:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eMono and Unity projects.\u003c/li\u003e\n\n\n\n\u003cli\u003eIIS Express, WCF, WinRT, external .NET processes, and MAUI.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\n\n\n\n\u003cp\u003eThe command-line runner has been updated and modernized:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003edotcover cover now handles all target types.\u003c/li\u003e\n\n\n\n\u003cli\u003eXML configuration files have been replaced by text files with CLI arguments.\u003c/li\u003e\n\n\n\n\u003cli\u003eThe \u003ccode\u003e.exe\u003c/code\u003e runner has been removed from the NuGet package. The standalone \u003ccode\u003edotcover.exe\u003c/code\u003e runner has been removed from the NuGet package. The CLI runner is now available exclusively as a .NET global or local tool (requires .NET 6 or later).\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\n\n\n\n\u003ch2\u003eShare your feedback\u003c/h2\u003e\n\n\n\n\u003cp\u003eYou can download the latest build right now from the \u003ca href=\"https://www.jetbrains.com/resharper/nextversion/\" target=\"_blank\" rel=\"noopener\"\u003eReSharper 2025.2 EAP page\u003c/a\u003e or install it via the JetBrains Toolbox App.\u003c/p\u003e\n\n\n    \n\n\n\n\n\n\n\n\u003cp\u003eIt’s still not too late to share your feedback on the newest features! Our developers are still putting the final touches on the upcoming release. Tell us what you think in the comments below or by reaching out to us \u003ca href=\"https://x.com/resharper\" target=\"_blank\"\u003eon X\u003c/a\u003e or \u003ca href=\"https://bsky.app/profile/resharper.bsky.social\" target=\"_blank\" rel=\"noopener\"\u003eBluesky\u003c/a\u003e.\u003c/p\u003e\n                    \n                                                                                                                                                                            \u003cdiv\u003e\n                                \u003cdiv\u003e\n                                                                            \u003ch4\u003eSubscribe to a monthly digest curated from the .NET Tools blog:\u003c/h4\u003e\n                                                                                                            \n                                \u003c/div\u003e\n                                \n                                \u003cp\u003e\u003cimg src=\"https://blog.jetbrains.com/wp-content/themes/jetbrains/assets/img/img-form.svg\" alt=\"image description\"/\u003e\n                                                                    \u003c/p\u003e\n                            \u003c/div\u003e\n                                                            \u003c/div\u003e\n                \u003ca href=\"#\"\u003e\u003c/a\u003e\n                \n                \n            \u003c/section\u003e\n                    \u003cdiv\u003e\n                \u003cp\u003e\n                    \u003ch2\u003eDiscover more\u003c/h2\u003e\n                \u003c/p\u003e\n                \n            \u003c/div\u003e\n                \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "8 min read",
  "publishedTime": null,
  "modifiedTime": null
}
