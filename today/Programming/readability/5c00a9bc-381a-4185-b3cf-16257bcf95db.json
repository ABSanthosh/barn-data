{
  "id": "5c00a9bc-381a-4185-b3cf-16257bcf95db",
  "title": "Microsoft Open Sources the GitHub Copilot Chat Extension",
  "link": "https://www.infoq.com/news/2025/06/microsoft-oss--copilot-extension/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "At its Build 2025 conference, Microsoft announced plans to open source over the next few months the code behind the GitHub Copilot Chat extension under the MIT license and refactor core AI capabilities directly into the main VS Code codebase. The move, if completed, may affect the ability of current for-pay AI code editors to compete purely on features. By Bruno Couriol",
  "author": "Bruno Couriol",
  "published": "Sun, 01 Jun 2025 03:00:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "github",
    "Build",
    "Microsoft",
    "Web Development",
    "Development",
    "news"
  ],
  "byline": "Bruno Couriol",
  "length": 4148,
  "excerpt": "At its Build 2025 conference, Microsoft announced plans to open source over the next few months the code behind the GitHub Copilot Chat extension under the MIT license and refactor core AI capabilitie",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s2_20250527075405/apple-touch-icon.png",
  "text": "At its Build 2025 conference, Microsoft announced plans to open source over the next few months the code behind the GitHub Copilot Chat extension under the MIT license and refactor core AI capabilities directly into the main VS Code codebase. The move, if completed, may affect the ability of current for-pay AI code editors to compete purely on features. Microsoft cited several reasons for open-sourcing Copilot Chat. They noted the significant advancements in large language models, which have reduced the need for and value of proprietary prompting strategies. In fact, the company Anthropic regularly releases the system prompts for its Claude models. Keeping prompts secret for long remains a challenging endeavor in the face of community-led transparency efforts. AI prompts can additionally be protected by copyright only under certain restrictive circumstances. The same applies to patenting. Microsoft’s open-sourcing decision also addresses requests from extension authors who needed tighter integration into VS Code than is currently offered by the public extension APIs. The Copilot Chat extension utilised VSCode's Proposed APIs, a set of unstable APIs implemented in VS Code but not exposed to the public as stable. Regular extension authors, on the other hand, were not able to publish extensions using the Proposed APIs on the Visual Studio Code Marketplace. The alternative was, as Cursor, Windsurf, et. al. did, to fork Visual Studio Code. As those forks grew in popularity and raised a significant amount of venture capital, Microsoft started to enforce its extension marketplace rules so that forks like Cursor could no longer fetch Microsoft-licensed extensions (e.g., C/C++ extension). By moving the Copilot Chat extension to an MIT license, with its core features integrated into the VS Code core, Microsoft may severely restrict the ability of forks with limited software development teams to compete purely on features against the broader community of extension authors. Microsoft also quoted the need for increased transparency regarding data collection and improved community-driven security as driving factors for open-sourcing the extension. This initiative positions VS Code to evolve beyond supporting AI extensions to becoming an “AI-native editor” by default. Initial developer reactions on platforms like Reddit and Hacker News have shown general approval for the open-sourcing. Discussions often focus on the potential for integrating local AI models, the impact on the competitive editor landscape, and the potential for community contributions to the core AI features. The move is largely seen as a positive step for transparency and the broader developer tools ecosystem. Visual Studio Code’s product manager chimed in on Reddit: (vscode pm here) We do want to open-source the Github Copilot suggestion functionality as well. The current plan is to move all that functionality to the open-source Copilot Chat extension (as step 2). Timeline - next couple of months. […] See the engineering plan here Chat is compatible [with ollama]! See https://code.visualstudio.com/docs/copilot/language-models#_bring-your-own-language-model-key Suggestions are not yet compatible - if you want that, we have a feature request that you can upvote. I do want us to add this https://github.com/microsoft/vscode-copilot-release/issues/7690 Microsoft made a flurry of announcements at its Build 2025 conference regarding future products and improvements on current products. The TypeScript team has announced an experimental native port of the TypeScript compiler (tsc), aimed at providing a 10x improvement in build time, drastically reducing cold editor startup times, and substantially improving memory usage. Microsoft has announced Edit, a new open-source command-line text editor, which will be distributed in the future as part of Windows 11. Edit aims to provide a lightweight, native, modern command-line editing experience similar to Nano and Vim. About the Author Bruno Couriol",
  "image": "https://res.infoq.com/news/2025/06/microsoft-oss--copilot-extension/en/headerimage/generatedHeaderImage-1748743426558.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eAt its Build 2025 conference, Microsoft announced plans to \u003ca href=\"https://code.visualstudio.com/blogs/2025/05/19/openSourceAIEditor\"\u003eopen source over the next few months the code behind the GitHub Copilot Chat extension\u003c/a\u003e under the MIT license and refactor core AI capabilities directly into the main VS Code codebase. The move, if completed, may affect the ability of current for-pay AI code editors to compete purely on features.\u003c/p\u003e\n\n\u003cp\u003eMicrosoft cited several reasons for open-sourcing Copilot Chat. They noted the significant advancements in large language models, which have reduced the need for and value of proprietary prompting strategies. In fact, the company Anthropic \u003ca href=\"https://docs.anthropic.com/en/release-notes/system-prompts\"\u003eregularly releases the system prompts for its Claude models\u003c/a\u003e. Keeping prompts secret for long remains a challenging endeavor in the face of \u003ca href=\"https://github.com/elder-plinius/CL4R1T4S\"\u003ecommunity-led transparency efforts\u003c/a\u003e. AI prompts can additionally be protected by copyright \u003ca href=\"https://technophilosoph.com/en/2025/02/07/ai-prompts-and-output-can-be-protected-by-copyright-under-certain-circumstances/\"\u003eonly under certain restrictive circumstances\u003c/a\u003e. The same \u003ca href=\"https://www.linkedin.com/pulse/do-prompts-used-ai-softwares-can-patented-has-ipr-ekata-deb-xbfic#:~:text=Technical%20Process%3A%20If%20a%20prompt,be%20eligible%20for%20patent%20protection.\"\u003eapplies to patenting\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eMicrosoft’s open-sourcing decision also \u003ca href=\"https://code.visualstudio.com/blogs/2025/05/19/openSourceAIEditor\"\u003eaddresses requests from extension authors\u003c/a\u003e who needed tighter integration into VS Code than is currently offered by the public extension APIs. The Copilot Chat extension utilised VSCode\u0026#39;s \u003ca href=\"https://code.visualstudio.com/api/advanced-topics/using-proposed-api\" target=\"_blank\"\u003eProposed APIs\u003c/a\u003e, a set of unstable APIs implemented in VS Code but not exposed to the public as stable. Regular extension authors, on the other hand, \u003ca href=\"https://github.com/microsoft/vscode-discussions/discussions/899\"\u003ewere not able to publish extensions using the Proposed APIs\u003c/a\u003e on the Visual Studio Code Marketplace.\u003c/p\u003e\n\n\u003cp\u003eThe alternative was, as Cursor, Windsurf, et. al. did, to fork Visual Studio Code. As those forks grew in popularity and raised a significant amount of venture capital, Microsoft started to enforce its extension marketplace rules so that forks like Cursor could no longer fetch Microsoft-licensed extensions (e.g., \u003ca href=\"https://github.com/microsoft/vscode-cpptools/blob/main/RuntimeLicenses/cpptools-LICENSE.txt\"\u003eC/C++ extension\u003c/a\u003e). By moving the \u003ca href=\"https://marketplace.visualstudio.com/items?itemName=GitHub.copilot-chat\"\u003eCopilot Chat extension\u003c/a\u003e to an MIT license, with its core features integrated into the \u003ca href=\"https://github.com/microsoft/vscode\"\u003eVS Code core\u003c/a\u003e, Microsoft may severely restrict the ability of forks with limited software development teams to compete purely on features against the broader community of extension authors.\u003c/p\u003e\n\n\u003cp\u003eMicrosoft also quoted the need for \u003ca href=\"https://techstartups.com/2025/05/19/microsoft-makes-visual-studio-code-vs-code-open-source-ai-editor-ushering-new-era-developer-tools/\"\u003eincreased transparency regarding data collection and improved community-driven security\u003c/a\u003e as driving factors for open-sourcing the extension.\u003c/p\u003e\n\n\u003cp\u003eThis initiative positions VS Code to evolve beyond supporting AI extensions to becoming an “AI-native editor” by default.\u003c/p\u003e\n\n\u003cp\u003eInitial developer reactions on platforms like \u003ca href=\"https://www.reddit.com/r/LocalLLaMA/comments/1kqhljr/vs_code_open_source_copilot/?rdt=61355\"\u003eReddit\u003c/a\u003e and \u003ca href=\"https://news.ycombinator.com/item?id=44031344\"\u003eHacker News\u003c/a\u003e have shown general approval for the open-sourcing. Discussions often focus on the potential for \u003ca href=\"https://www.reddit.com/r/LocalLLaMA/comments/1kqhljr/vs_code_open_source_copilot/?rdt=61355\"\u003eintegrating local AI models\u003c/a\u003e, the impact on the competitive editor landscape, and the potential for community contributions to the core AI features. The move is largely seen as a positive step for transparency and the broader developer tools ecosystem.\u003c/p\u003e\n\n\u003cp\u003eVisual Studio Code’s product manager \u003ca href=\"https://www.reddit.com/r/LocalLLaMA/comments/1kqhljr/comment/mt5yb44/\"\u003echimed in\u003c/a\u003e on Reddit:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e(vscode pm here)\u003cbr/\u003e\nWe do want to open-source the Github Copilot suggestion functionality as well. The current plan is to move all that functionality to the open-source Copilot Chat extension (as step 2). Timeline - next couple of months.\u003cbr/\u003e\n[…] See the engineering plan \u003ca href=\"https://github.com/microsoft/vscode/issues/249031\"\u003ehere\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eChat is compatible [with ollama]!\u003c/p\u003e\n\n\u003cp\u003eSee \u003ca href=\"https://code.visualstudio.com/docs/copilot/language-models#_bring-your-own-language-model-key\"\u003ehttps://code.visualstudio.com/docs/copilot/language-models#_bring-your-own-language-model-key\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eSuggestions are not yet compatible - if you want that, we have a feature request that you can upvote. I do want us to add this \u003ca href=\"https://github.com/microsoft/vscode-copilot-release/issues/7690\"\u003ehttps://github.com/microsoft/vscode-copilot-release/issues/7690\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eMicrosoft made a flurry of announcements at its Build 2025 conference regarding future products and improvements on current products. The TypeScript team \u003ca href=\"https://www.infoq.com/news/2025/05/new-typescript-compiler-10x-fast/\"\u003ehas announced an experimental native port of the TypeScript compiler (tsc)\u003c/a\u003e, aimed at providing a 10x improvement in build time, drastically reducing cold editor startup times, and substantially improving memory usage. \u003ca href=\"https://www.infoq.com/news/2025/05/microsoft-edit-new-tui-editor/\"\u003eMicrosoft\u003c/a\u003e \u003ca href=\"https://www.infoq.com/news/2025/05/microsoft-edit-new-tui-editor/\" target=\"_blank\"\u003ehas announced Edit, a new open-source command-line text editor\u003c/a\u003e, which will be distributed in the future as part of Windows 11. Edit aims to provide a lightweight, native, modern command-line editing experience similar to \u003ca href=\"https://www.nano-editor.org/\"\u003eNano\u003c/a\u003e and \u003ca href=\"https://www.vim.org/\"\u003eVim\u003c/a\u003e.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Bruno-Couriol\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eBruno Couriol\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": "2025-06-01T00:00:00Z",
  "modifiedTime": null
}
