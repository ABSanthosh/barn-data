{
  "id": "d73e5555-6345-412b-9cfc-116beea13b01",
  "title": "Java News Roundup: JDK 25 in RDP2, Spring Framework, Payara Platform, Open Liberty, Eclipse DataGrid",
  "link": "https://www.infoq.com/news/2025/07/java-news-roundup-jul14-2025/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "This week's Java roundup for July 14th, 2025, features news highlighting: JDK 25 in rampdown phase 2; the seventh milestone release of Spring Framework 7.0; the July 2025 editions of the Payara Platform, Open Liberty and Oracle Critical Patch Update; and Eclipse DataGrid is open-sourced. By Michael Redlich",
  "author": "Michael Redlich",
  "published": "Mon, 21 Jul 2025 11:40:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "GraalVM",
    "JDK 26",
    "JDK 25",
    "Spring Framework",
    "Reactor",
    "BellSoft",
    "Java",
    "Open JDK",
    "Helidon",
    "Payara Platform",
    "Micrometer",
    "Open Liberty",
    "Eclipse DataGrid",
    "Development",
    "Architecture \u0026 Design",
    "news"
  ],
  "byline": "Michael Redlich",
  "length": 8197,
  "excerpt": "This week's Java roundup for July 14th, 2025, features news highlighting: JDK 25 in rampdown phase 2; the seventh milestone release of Spring Framework 7.0; the July 2025 editions of the Payara Platfo",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s1_20250717100249/apple-touch-icon.png",
  "text": "This week's Java roundup for July 14th, 2025, features news highlighting: JDK 25 in rampdown phase 2; the seventh milestone release of Spring Framework 7.0; the July 2025 editions of the Payara Platform, Open Liberty and Oracle Critical Patch Update; and Eclipse DataGrid is open-sourced. OpenJDK After its review had concluded, JEP 504, Remove the Applet API, was elevated from Proposed to Target to Targeted for JDK 26. This JEP proposes to remove the Applet API, deprecated in JDK 17, due its continued obsolescence since applets are no longer supported in web browsers. Oracle has released versions 24.0.2, 21.0.8, 17.0.16, 11.0.28, and 8u462 of the JDK as part of the quarterly Critical Patch Update Advisory for July 2025. More details on this release may be found in the release notes for version 24.0.2, version 21.0.8, version 17.0.16, version 11.0.28 and version 8u461. JDK 25 Build 32 of the JDK 25 early-access builds was made available this past week featuring updates from Build 31 that include fixes for various issues. Further details on this release may be found in the release notes. As per the JDK 25 release schedule, Mark Reinhold, chief architect, Java Platform Group at Oracle, formally declared that JDK 25 has entered Rampdown Phase Two. This means that: no additional JEPs will be added for JDK 25; and there will be a focus on the P1 and P2 bugs which can be fixed via the Fix-Request Process. Late enhancements are still possible, with the Late-Enhancement Request Process, but Reinhold states that \"the bar is now extraordinarily high.\" The final set of 18 features for the GA release in March 2025 will include: JEP 470: PEM Encodings of Cryptographic Objects (Preview) JEP 502: Stable Values (Preview) JEP 503: Remove the 32-bit x86 Port JEP 505: Structured Concurrency (Fifth Preview) JEP 506: Scoped Values JEP 507: Primitive Types in Patterns, instanceof, and switch (Third Preview) JEP 508: Vector API (Tenth Incubator) JEP 509: JFR CPU-Time Profiling (Experimental) JEP 510: Key Derivation Function API JEP 511: Module Import Declarations JEP 512: Compact Source Files and Instance Main Methods JEP 513: Flexible Constructor Bodies JEP 514: Ahead-of-Time Command-Line Ergonomics JEP 515: Ahead-of-Time Method Profiling JEP 518: JFR Cooperative Sampling JEP 519: Compact Object Headers JEP 520: JFR Method Timing \u0026 Tracing JEP 521: Generational Shenandoah JDK 25 is designated to be the next long-term support (LTS) release following JDK 21, JDK 17, JDK 11 and JDK 8. JDK 26 Build 7 of the JDK 26 early-access builds was also made available this past week featuring updates from Build 6 that include fixes for various issues. More details on this release may be found in the release notes. GraalVM The release of GraalVM for JDK 24 Community 24.0.2 features fixes based on the Oracle Critical Patch Update for July 2025. These include: use of the DWORD type for comparing search values in the AMD64ArrayIndexOfOp class; and a resolution to a Java UnsatisfiedLinkError, an error thrown if the JVM cannot find an appropriate native-language definition of a method declared as native, when using the JDK Flight Recorder. Further details on this release may be found in the release notes. BellSoft Concurrent with Oracle's Critical Patch Update (CPU) for July 2025, BellSoft has released CPU patches for versions 21.0.7.0.1, 17.0.15.0.1, 11.0.27.0.1, 8u461, 7u471 and 6u471 of Liberica JDK, their downstream distribution of OpenJDK, to address this list of CVEs. In addition, Patch Set Update (PSU) versions 24.0.2, 21.0.8, 17.0.16, 11.0.28 and 8u461, containing CPU and non-critical fixes, have also been released. Spring Framework The seventh milestone release of Spring Framework 7.0.0 delivers bug fixes, improvements in documentation, dependency upgrades and new features such as: new dedicated @Retryable, @ConcurrencyLimit and @EnableResilientMethods annotations as part of the new Resiliency Features; a new JmsClient interface to provide common send and receive operations against a JMS destination; and a new HttpMessageConverters interface to build and configure an immutable collection of HttpMessageConverter instances for client or server usage. More details on this release may be found in the release notes. Payara Platform Payara has released their July 2025 edition of the Payara Platform that includes Community Edition 6.2025.7, Enterprise Edition 6.28.0 and Enterprise Edition 5.77.0. All three editions deliver: critical bug fixes, component upgrades and new features: improved Trino SQL query engine support for handling JDBC connections; and removal of the CDI Deve Mode that streamlines implementation of the Jakarta Context and Dependency Injection 4.1 specification resulting in reduced complexity and improved performance. This edition also delivers Payara 7.2025.1.Alpha3 that advances support for Jakarta EE 11 with new features: removal of the X-Powered-By header for improved security; and a new bundle that supports all the Jakarta EE 11 XML Schemas. Further details on these releases may be found in the release notes for Community Edition 6.2025.7 and Enterprise Edition 6.28.0 and Enterprise Edition 5.77.0. Open Liberty The release of Open Liberty 25.0.0.7 features extending the scope of the maxFiles parameter in Open Liberty's access logging configuration that improves \"log file cleanup and helps ensure that all matching log files in the output directory are considered, not just those generated by the current process.\" Helidon The release of Helidon 4.2.4 delivers bug fixes, dependency upgrades and notable changes such as: migrate use of the deprecated GlobalConfig class and the overloaded global() method, defined in the Config interface, to the get() method defined in the Services class; and support for Gson to complement their existing media support for Jackson, Jakarta JSON Processing and Jakarta JSON Binding. More details on this release may be found in the release notes. Eclipse Foundation Microstream has announced that Eclipse DataGrid, a new project introduced at JCON Europe 2025, is now available as open-source. DataGrid is a merger of EclipseStore and the MicroStream Cluster that enables in-memory searching and complex in-memory data manipulation. Developers who would like to learn more can attend the Eclipse Data Grid Introduction: In-Memory Data Processing free virtual event on Tuesday, July 22, 2025. Micrometer The first milestone release of Micrometer Metrics 1.16.0 delivers bug fixes, improvements in documentation, dependency upgrades and new features such as: a new withNoneValue() method, defined in the KeyName interface, to create an instance of the KeyValue interface with no value; and the addition of new classes to support observability using Jakarta Mail that complements the existing functionality with Jakarta Messaging. Further details on this release may be found in the release notes. The first milestone release of Micrometer Tracing 1.6.0 delivers dependency upgrades and new features such as: a migration of their nullability annotations to JSpecify; and support for extracting multiple values for a single key in the Propagator interface for compliance with the W3C baggage specifications. More details on this release may be found in the release notes. Project Reactor The fifth milestone release of Project Reactor 2025.0.0 provides dependency upgrades to reactor-core 3.8.0-M5, reactor-netty 1.3.0-M5, reactor-pool 1.2.0-M5, reactor-addons 3.6.0-RC3 and reactor-kotlin-extensions 1.3.0-RC2. Further details on this release may be found in the release notes. Similarly, Project Reactor 2024.0.8, the eighth maintenance release, provides dependency upgrades to reactor-core 3.7.8 and reactor-netty 1.2.8. There was also a realignment to version 2024.0.8 with the reactor-pool 1.1.3, reactor-addons 3.5.2, reactor-kotlin-extensions 1.2.3 and reactor-kafka 1.3.23 artifacts that remain unchanged. Further details on this release may be found in the release notes. About the Author Michael Redlich",
  "image": "https://res.infoq.com/news/2025/07/java-news-roundup-jul14-2025/en/headerimage/java-istock-image-01-1753097817566.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eThis week\u0026#39;s Java roundup for July 14th, 2025, features news highlighting: JDK 25 in rampdown phase 2; the seventh milestone release of Spring Framework 7.0; the July 2025 editions of the Payara Platform, Open Liberty and Oracle Critical Patch Update; and Eclipse DataGrid is open-sourced.\u003c/p\u003e\n\n\u003ch4\u003eOpenJDK\u003c/h4\u003e\n\n\u003cp\u003eAfter its review had concluded, JEP 504, \u003ca href=\"https://openjdk.org/jeps/504\"\u003eRemove the Applet API\u003c/a\u003e, was \u003ca href=\"https://mail.openjdk.org/pipermail/jdk-dev/2025-July/010228.html\"\u003eelevated\u003c/a\u003e from \u003cstrong\u003eProposed to Target\u003c/strong\u003e to \u003cstrong\u003eTargeted\u003c/strong\u003e for JDK 26. This JEP proposes to remove the Applet API, deprecated in JDK 17, due its continued obsolescence since applets are no longer supported in web browsers.\u003c/p\u003e\n\n\u003cp\u003eOracle has released versions 24.0.2, 21.0.8, 17.0.16, 11.0.28, and 8u462 of the JDK as part of the quarterly \u003ca href=\"https://www.oracle.com/security-alerts/cpujul2025.html\"\u003eCritical Patch Update Advisory\u003c/a\u003e for July 2025. More details on this release may be found in the release notes for \u003ca href=\"https://www.oracle.com/java/technologies/javase/24-0-2-relnotes.html\"\u003eversion 24.0.2\u003c/a\u003e, \u003ca href=\"https://www.oracle.com/java/technologies/javase/21-0-8-relnotes.html\"\u003eversion 21.0.8\u003c/a\u003e, \u003ca href=\"https://www.oracle.com/java/technologies/javase/17-0-16-relnotes.html\"\u003eversion 17.0.16\u003c/a\u003e, \u003ca href=\"https://www.oracle.com/java/technologies/javase/11-0-28-relnotes.html\"\u003eversion 11.0.28\u003c/a\u003e and \u003ca href=\"https://www.oracle.com/java/technologies/javase/8u461-relnotes.html\"\u003eversion 8u461\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eJDK 25\u003c/h4\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/openjdk/jdk/releases/tag/jdk-25%2B32\"\u003eBuild 32\u003c/a\u003e of the JDK 25 \u003ca href=\"https://jdk.java.net/25/\"\u003eearly-access builds\u003c/a\u003e was made available this past week featuring \u003ca href=\"https://github.com/openjdk/jdk/compare/jdk-25%2B31...jdk-25%2B32\"\u003eupdates\u003c/a\u003e from Build 31 that include fixes for various \u003ca href=\"https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2025%20and%20%22resolved%20in%20build%22%20%3D%20b32%20order%20by%20component%2C%20subcomponent\"\u003eissues\u003c/a\u003e. Further details on this release may be found in the \u003ca href=\"https://jdk.java.net/25/release-notes\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eAs per the JDK 25 \u003ca href=\"https://openjdk.org/projects/jdk/25/#Schedule\"\u003erelease schedule\u003c/a\u003e, \u003ca href=\"https://www.linkedin.com/in/markreinhold\"\u003eMark Reinhold\u003c/a\u003e, chief architect, Java Platform Group at Oracle, formally \u003ca href=\"https://mail.openjdk.org/pipermail/jdk-dev/2025-July/010240.html\"\u003edeclared\u003c/a\u003e that JDK 25 has entered Rampdown Phase Two. This means that: no additional JEPs will be added for \u003ca href=\"https://openjdk.java.net/projects/jdk/25/\"\u003eJDK 25\u003c/a\u003e; and there will be a focus on the P1 and P2 bugs which can be fixed via the \u003ca href=\"https://openjdk.org/jeps/3#Fix-Request-Process\"\u003eFix-Request Process\u003c/a\u003e. Late enhancements are still possible, with the \u003ca href=\"https://openjdk.org/jeps/3#Late-Enhancement-Request-Process\"\u003eLate-Enhancement Request Process\u003c/a\u003e, but Reinhold states that \u0026#34;\u003cem\u003ethe bar is now extraordinarily high.\u003c/em\u003e\u0026#34; The final set of 18 features for the GA release in March 2025 will include:\u003c/p\u003e\n\n\u003cul\u003e\n\t\u003cli\u003eJEP 470: \u003ca href=\"https://openjdk.org/jeps/470\"\u003ePEM Encodings of Cryptographic Objects (Preview)\u003c/a\u003e\u003c/li\u003e\n\t\u003cli\u003eJEP 502: \u003ca href=\"https://openjdk.org/jeps/502\"\u003eStable Values (Preview)\u003c/a\u003e\u003c/li\u003e\n\t\u003cli\u003eJEP 503: \u003ca href=\"https://openjdk.org/jeps/503\"\u003eRemove the 32-bit x86 Port\u003c/a\u003e\u003c/li\u003e\n\t\u003cli\u003eJEP 505: \u003ca href=\"https://openjdk.org/jeps/505\"\u003eStructured Concurrency (Fifth Preview)\u003c/a\u003e\u003c/li\u003e\n\t\u003cli\u003eJEP 506: \u003ca href=\"https://openjdk.org/jeps/506\"\u003eScoped Values\u003c/a\u003e\u003c/li\u003e\n\t\u003cli\u003eJEP 507: \u003ca href=\"https://openjdk.org/jeps/507\"\u003ePrimitive Types in Patterns, instanceof, and switch (Third Preview)\u003c/a\u003e\u003c/li\u003e\n\t\u003cli\u003eJEP 508: \u003ca href=\"https://openjdk.org/jeps/508\"\u003eVector API (Tenth Incubator)\u003c/a\u003e\u003c/li\u003e\n\t\u003cli\u003eJEP 509: \u003ca href=\"https://openjdk.org/jeps/509\"\u003eJFR CPU-Time Profiling (Experimental)\u003c/a\u003e\u003c/li\u003e\n\t\u003cli\u003eJEP 510: \u003ca href=\"https://openjdk.org/jeps/510\"\u003eKey Derivation Function API\u003c/a\u003e\u003c/li\u003e\n\t\u003cli\u003eJEP 511: \u003ca href=\"https://openjdk.org/jeps/511\"\u003eModule Import Declarations\u003c/a\u003e\u003c/li\u003e\n\t\u003cli\u003eJEP 512: \u003ca href=\"https://openjdk.org/jeps/512\"\u003eCompact Source Files and Instance Main Methods\u003c/a\u003e\u003c/li\u003e\n\t\u003cli\u003eJEP 513: \u003ca href=\"https://openjdk.org/jeps/513\"\u003eFlexible Constructor Bodies\u003c/a\u003e\u003c/li\u003e\n\t\u003cli\u003eJEP 514: \u003ca href=\"https://openjdk.org/jeps/514\"\u003eAhead-of-Time Command-Line Ergonomics\u003c/a\u003e\u003c/li\u003e\n\t\u003cli\u003eJEP 515: \u003ca href=\"https://openjdk.org/jeps/515\"\u003eAhead-of-Time Method Profiling\u003c/a\u003e\u003c/li\u003e\n\t\u003cli\u003eJEP 518: \u003ca href=\"https://openjdk.org/jeps/518\"\u003eJFR Cooperative Sampling\u003c/a\u003e\u003c/li\u003e\n\t\u003cli\u003eJEP 519: \u003ca href=\"https://openjdk.org/jeps/519\"\u003eCompact Object Headers\u003c/a\u003e\u003c/li\u003e\n\t\u003cli\u003eJEP 520: \u003ca href=\"https://openjdk.org/jeps/520\"\u003eJFR Method Timing \u0026amp; Tracing\u003c/a\u003e\u003c/li\u003e\n\t\u003cli\u003eJEP 521: \u003ca href=\"https://openjdk.org/jeps/521\"\u003eGenerational Shenandoah\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eJDK 25 is designated to be the next long-term support (LTS) release following JDK 21, JDK 17, JDK 11 and JDK 8.\u003c/p\u003e\n\n\u003ch4\u003eJDK 26\u003c/h4\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/openjdk/jdk/releases/tag/jdk-26%2B7\"\u003eBuild 7\u003c/a\u003e of the JDK 26 \u003ca href=\"https://jdk.java.net/26/\"\u003eearly-access builds\u003c/a\u003e was also made available this past week featuring \u003ca href=\"https://github.com/openjdk/jdk/compare/jdk-26%2B6...jdk-26%2B7\"\u003eupdates\u003c/a\u003e from Build 6 that include fixes for various \u003ca href=\"https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2026%20and%20%22resolved%20in%20build%22%20%3D%20b07%20order%20by%20component%2C%20subcomponent\"\u003eissues\u003c/a\u003e. More details on this release may be found in the \u003ca href=\"https://jdk.java.net/26/release-notes\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eGraalVM\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://github.com/graalvm/graalvm-ce-builds/releases/tag/jdk-24.0.2\"\u003erelease\u003c/a\u003e of \u003ca href=\"https://github.com/oracle/graal/blob/master/README.md\"\u003eGraalVM for JDK 24 Community\u003c/a\u003e 24.0.2 features fixes based on the Oracle \u003ca href=\"https://www.oracle.com/security-alerts/cpujul2025.html\"\u003eCritical Patch Update\u003c/a\u003e for July 2025. These include: use of the \u003cstrong\u003e\u003ccode\u003eDWORD\u003c/code\u003e\u003c/strong\u003e type for comparing search values in the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/oracle/graal/blob/master/compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/AMD64ArrayIndexOfOp.java\"\u003eAMD64ArrayIndexOfOp\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class; and a resolution to a Java \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://docs.oracle.com/en/java/javase/24/docs/api/java.base/java/lang/UnsatisfiedLinkError.html\"\u003eUnsatisfiedLinkError\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e, an error thrown if the JVM cannot find an appropriate native-language definition of a method declared as native, when using the JDK Flight Recorder. Further details on this release may be found in the \u003ca href=\"https://www.graalvm.org/release-notes/JDK_24/\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eBellSoft\u003c/h4\u003e\n\n\u003cp\u003eConcurrent with Oracle\u0026#39;s \u003ca href=\"https://www.oracle.com/security-alerts/cpujul2025.html\"\u003eCritical Patch Update\u003c/a\u003e (CPU) for July 2025, BellSoft has \u003ca href=\"https://bell-sw.com/blog/liberica-jdk-8u462-11-0-28-17-0-16-21-0-8-and-24-0-2-builds-are-generally-available/\"\u003ereleased\u003c/a\u003e CPU patches for versions 21.0.7.0.1, 17.0.15.0.1, 11.0.27.0.1, 8u461, 7u471 and 6u471 of \u003ca href=\"https://bell-sw.com/pages/libericajdk/\"\u003eLiberica JDK\u003c/a\u003e, their downstream distribution of OpenJDK, to address this \u003ca href=\"https://docs.bell-sw.com/security/search/\"\u003elist of CVEs\u003c/a\u003e. In addition, Patch Set Update (PSU) versions 24.0.2, 21.0.8, 17.0.16, 11.0.28 and 8u461, containing CPU and non-critical fixes, have also been released.\u003c/p\u003e\n\n\u003ch4\u003eSpring Framework\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://spring.io/blog/2025/07/17/spring-framework-7-0-0-M7-available-now\"\u003eseventh milestone release\u003c/a\u003e of \u003ca href=\"https://spring.io/projects/spring-framework\"\u003eSpring Framework\u003c/a\u003e 7.0.0 delivers bug fixes, improvements in documentation, dependency upgrades and new features such as: new dedicated \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://docs.spring.io/spring-framework/docs/7.0.0-M7/javadoc-api/org/springframework/resilience/annotation/Retryable.html\"\u003e@Retryable\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e, \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://docs.spring.io/spring-framework/docs/7.0.0-M7/javadoc-api/org/springframework/resilience/annotation/ConcurrencyLimit.html\"\u003e@ConcurrencyLimit\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://docs.spring.io/spring-framework/docs/7.0.0-M7/javadoc-api/org/springframework/resilience/annotation/EnableResilientMethods.html\"\u003e@EnableResilientMethods\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e annotations as part of the new \u003ca href=\"https://docs.spring.io/spring/reference/7.0-SNAPSHOT/core/resilience.html\"\u003eResiliency Features\u003c/a\u003e; a new \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://docs.spring.io/spring-framework/docs/7.0.0-M7/javadoc-api/org/springframework/jms/core/JmsClient.html\"\u003eJmsClient\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e interface to provide common send and receive operations against a JMS destination; and a new \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://docs.spring.io/spring-framework/docs/7.0.0-M7/javadoc-api/org/springframework/http/converter/HttpMessageConverters.html\"\u003eHttpMessageConverters\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e interface to build and configure an immutable collection of \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://docs.spring.io/spring-framework/docs/7.0.0-M7/javadoc-api/org/springframework/http/converter/HttpMessageConverter.html\"\u003eHttpMessageConverter\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e instances for client or server usage. More details on this release may be found in the \u003ca href=\"https://github.com/spring-projects/spring-framework/releases/tag/v7.0.0-M7\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003ePayara Platform\u003c/h4\u003e\n\n\u003cp\u003ePayara has \u003ca href=\"https://blog.payara.fish/whats-new-in-the-payara-platform-july-2025-release\"\u003ereleased\u003c/a\u003e their July 2025 edition of the \u003ca href=\"https://www.payara.fish/\"\u003ePayara Platform\u003c/a\u003e that includes Community Edition 6.2025.7, Enterprise Edition 6.28.0 and Enterprise Edition 5.77.0. All three editions deliver: critical bug fixes, component upgrades and new features: improved \u003ca href=\"https://trino.io/\"\u003eTrino\u003c/a\u003e SQL query engine support for handling JDBC connections; and removal of the CDI Deve Mode that streamlines implementation of the \u003ca href=\"https://jakarta.ee/specifications/cdi/4.1/\"\u003eJakarta Context and Dependency Injection 4.1\u003c/a\u003e specification resulting in reduced complexity and improved performance.\u003c/p\u003e\n\n\u003cp\u003eThis edition also delivers Payara 7.2025.1.Alpha3 that advances support for Jakarta EE 11 with new features: removal of the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers/X-Powered-By\"\u003eX-Powered-By\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e header for improved security; and a new bundle that supports all the \u003ca href=\"https://jakarta.ee/xml/ns/jakartaee/#11\"\u003eJakarta EE 11 XML Schemas\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eFurther details on these releases may be found in the release notes for \u003ca href=\"https://docs.payara.fish/community/docs/6.2025.7/Release%20Notes/Release%20Notes%206.2025.7.html\"\u003eCommunity Edition 6.2025.7\u003c/a\u003e and \u003ca href=\"https://docs.payara.fish/enterprise/docs/Release%20Notes/Release%20Notes%206.28.0.html\"\u003eEnterprise Edition 6.28.0\u003c/a\u003e and \u003ca href=\"https://docs.payara.fish/enterprise/docs/5.77.0/Release%20Notes/Release%20Notes%205.77.0.html\"\u003eEnterprise Edition 5.77.0\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eOpen Liberty\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://openliberty.io/blog/2025/07/15/25.0.0.7.html\"\u003erelease\u003c/a\u003e of \u003ca href=\"https://openliberty.io/\"\u003eOpen Liberty\u003c/a\u003e 25.0.0.7 features extending the scope of the \u003cstrong\u003e\u003ccode\u003emaxFiles\u003c/code\u003e\u003c/strong\u003e parameter in Open Liberty\u0026#39;s access logging configuration that improves \u0026#34;\u003cem\u003elog file cleanup and helps ensure that all matching log files in the output directory are considered, not just those generated by the current process.\u003c/em\u003e\u0026#34;\u003c/p\u003e\n\n\u003ch4\u003eHelidon\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://x.com/helidon_project/status/1945483424300495126\"\u003erelease\u003c/a\u003e of \u003ca href=\"https://helidon.io/\"\u003eHelidon\u003c/a\u003e 4.2.4 delivers bug fixes, dependency upgrades and notable changes such as: migrate use of the deprecated \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://helidon.io/docs/v4/apidocs/io.helidon.common.config/io/helidon/common/config/GlobalConfig.html\"\u003eGlobalConfig\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class and the overloaded \u003cstrong\u003e\u003ccode\u003eglobal()\u003c/code\u003e\u003c/strong\u003e method, defined in the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://helidon.io/docs/v4/apidocs/io.helidon.config/io/helidon/config/Config.html\"\u003eConfig\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e interface, to the \u003cstrong\u003e\u003ccode\u003eget()\u003c/code\u003e\u003c/strong\u003e method defined in the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://helidon.io/docs/v4/apidocs/io.helidon.service.registry/io/helidon/service/registry/Services.html\"\u003eServices\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class; and support for \u003ca href=\"https://github.com/google/gson/blob/main/README.md\"\u003eGson\u003c/a\u003e to complement their existing media support for Jackson, Jakarta JSON Processing and Jakarta JSON Binding. More details on this release may be found in the \u003ca href=\"https://github.com/helidon-io/helidon/blob/4.2.4/CHANGELOG.md#424\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eEclipse Foundation\u003c/h4\u003e\n\n\u003cp\u003eMicrostream has \u003ca href=\"https://microstream.one/blog/2025/07/14/eclipse-data-grid-is-available-as-open-source/\"\u003eannounced\u003c/a\u003e that \u003ca href=\"https://github.com/eclipse-datagrid/datagrid/blob/main/README.md\"\u003eEclipse DataGrid\u003c/a\u003e, a new project introduced at JCON Europe 2025, is now available as open-source. DataGrid is a merger of EclipseStore and the MicroStream Cluster that enables in-memory searching and complex in-memory data manipulation. Developers who would like to learn more can attend the \u003ca href=\"https://www.universe.com/events/eclipse-data-grid-introduction-in-memory-data-processing-tickets-4WS2KL\"\u003eEclipse Data Grid Introduction: In-Memory Data Processing\u003c/a\u003e free virtual event on Tuesday, July 22, 2025.\u003c/p\u003e\n\n\u003ch4\u003eMicrometer\u003c/h4\u003e\n\n\u003cp\u003eThe \u003cem\u003efirst milestone release\u003c/em\u003e of \u003ca href=\"https://github.com/micrometer-metrics/micrometer/blob/main/README.md\"\u003eMicrometer Metrics\u003c/a\u003e 1.16.0 delivers bug fixes, improvements in documentation, dependency upgrades and new features such as: a new \u003cstrong\u003e\u003ccode\u003ewithNoneValue()\u003c/code\u003e\u003c/strong\u003e method, defined in the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/micrometer-metrics/micrometer/blob/main/micrometer-commons/src/main/java/io/micrometer/common/docs/KeyName.java\"\u003eKeyName\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e interface, to create an instance of the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/micrometer-metrics/micrometer/blob/main/micrometer-commons/src/main/java/io/micrometer/common/KeyValue.java\"\u003eKeyValue\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e interface with no value; and the addition of new classes to support observability using \u003ca href=\"https://jakarta.ee/specifications/mail/\"\u003eJakarta Mail\u003c/a\u003e that complements the existing functionality with \u003ca href=\"https://jakarta.ee/specifications/messaging/\"\u003eJakarta Messaging\u003c/a\u003e. Further details on this release may be found in the \u003ca href=\"https://github.com/micrometer-metrics/micrometer/releases/tag/v1.16.0-M1\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe \u003cem\u003efirst milestone release\u003c/em\u003e of \u003ca href=\"https://github.com/micrometer-metrics/tracing/blob/main/README.md\"\u003eMicrometer Tracing\u003c/a\u003e 1.6.0 delivers dependency upgrades and new features such as: a migration of their nullability annotations to \u003ca href=\"https://jspecify.dev/\"\u003eJSpecify\u003c/a\u003e; and support for extracting multiple values for a single key in the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/micrometer-metrics/tracing/blob/main/micrometer-tracing/src/main/java/io/micrometer/tracing/propagation/Propagator.java\"\u003ePropagator\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e interface for compliance with the \u003ca href=\"https://www.w3.org/TR/baggage/\"\u003eW3C baggage specifications\u003c/a\u003e. More details on this release may be found in the \u003ca href=\"https://github.com/micrometer-metrics/tracing/releases/tag/v1.6.0-M1\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eProject Reactor\u003c/h4\u003e\n\n\u003cp\u003eThe \u003cem\u003efifth milestone release\u003c/em\u003e of \u003ca href=\"https://github.com/reactor/reactor/blob/main/README.md\"\u003eProject Reactor\u003c/a\u003e 2025.0.0 provides dependency upgrades to \u003cstrong\u003e\u003ccode\u003ereactor-core 3.8.0-M5\u003c/code\u003e\u003c/strong\u003e, \u003cstrong\u003e\u003ccode\u003ereactor-netty 1.3.0-M5\u003c/code\u003e\u003c/strong\u003e, \u003cstrong\u003e\u003ccode\u003ereactor-pool 1.2.0-M5\u003c/code\u003e\u003c/strong\u003e, \u003cstrong\u003e\u003ccode\u003ereactor-addons 3.6.0-RC3\u003c/code\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003ccode\u003ereactor-kotlin-extensions 1.3.0-RC2\u003c/code\u003e\u003c/strong\u003e. Further details on this release may be found in the \u003ca href=\"https://github.com/reactor/reactor/releases/tag/2025.0.0-M5\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eSimilarly, Project Reactor 2024.0.8, the \u003cem\u003eeighth maintenance release\u003c/em\u003e, provides dependency upgrades to \u003cstrong\u003e\u003ccode\u003ereactor-core 3.7.8\u003c/code\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003ccode\u003ereactor-netty 1.2.8\u003c/code\u003e\u003c/strong\u003e. There was also a realignment to version 2024.0.8 with the \u003cstrong\u003e\u003ccode\u003ereactor-pool 1.1.3\u003c/code\u003e\u003c/strong\u003e, \u003cstrong\u003e\u003ccode\u003ereactor-addons 3.5.2\u003c/code\u003e\u003c/strong\u003e, \u003cstrong\u003e\u003ccode\u003ereactor-kotlin-extensions 1.2.3\u003c/code\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003ccode\u003ereactor-kafka 1.3.23\u003c/code\u003e\u003c/strong\u003e artifacts that remain unchanged. Further details on this release may be found in the \u003ca href=\"https://github.com/reactor/reactor/releases/tag/2024.0.8\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Michael-Redlich\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eMichael Redlich\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "9 min read",
  "publishedTime": "2025-07-21T00:00:00Z",
  "modifiedTime": null
}
