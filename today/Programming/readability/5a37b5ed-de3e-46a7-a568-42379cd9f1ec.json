{
  "id": "5a37b5ed-de3e-46a7-a568-42379cd9f1ec",
  "title": "Rust and C++ with Steve Klabnik and Herb Sutter",
  "link": "https://softwareengineeringdaily.com/2024/10/23/rust-vs-c-with-steve-klabnik-herb-sutter/?utm_source=rss\u0026utm_medium=rss\u0026utm_campaign=rust-vs-c-with-steve-klabnik-herb-sutter",
  "description": "In software engineering, C++ is often used in areas where low-level system access and high-performance are critical, such as operating systems, game engines, and embedded systems. Its long-standing presence and compatibility with legacy code make it a go-to language for maintaining and extending older projects. Rust, while newer, is gaining traction in roles that demand The post Rust and C++ with Steve Klabnik and Herb Sutter appeared first on Software Engineering Daily.",
  "author": "SEDaily",
  "published": "Wed, 23 Oct 2024 09:00:36 +0000",
  "source": "https://softwareengineeringdaily.com/category/podcast/feed",
  "categories": [
    "All Content",
    "Exclusive Content",
    "Hosts",
    "Podcast",
    "C#",
    "Herb Sutter",
    "Steve Klabnik",
    "The Rust Programming Language book"
  ],
  "byline": "SEDaily",
  "length": 2395,
  "excerpt": "In software engineering, C++ is often used in areas where low-level system access and high-performance are critical, such as operating systems, game engines, and embedded systems. Its long-standing presence and compatibility with legacy code make it a go-to language for maintaining and extending older projects. Rust, while newer, is gaining traction in roles that demand",
  "siteName": "Software Engineering Daily",
  "favicon": "https://softwareengineeringdaily.com/wp-content/uploads/fbrfg/apple-touch-icon-72x72.png?v=PYYeqgEwMA",
  "text": "In software engineering, C++ is often used in areas where low-level system access and high-performance are critical, such as operating systems, game engines, and embedded systems. Its long-standing presence and compatibility with legacy code make it a go-to language for maintaining and extending older projects. Rust, while newer, is gaining traction in roles that demand safety and concurrency, particularly in systems programming. We wanted to explore these two languages side-by-side, so we invited Herb Sutter and Steve Klabnik to join host Kevin Ball on the show. Herb works at Microsoft and chairs the ISO C++ standards committee. Steve works at Oxide Computer Company, is an alumnus of the Rust Core Team, and is the primary author of The Rust Programming Language book. We hope you enjoy this deep dive into Rust and C++ on Software Engineering Daily. Kevin Ball or KBall, is the vice president of engineering at Mento and an independent coach for engineers and engineering leaders. He co-founded and served as CTO for two companies, founded the San Diego JavaScript meetup, and organizes the AI inaction discussion group through Latent Space. Please click here to see the transcript of this episode. Sponsors Introducing Height: the only autonomous project management tool. Backlog grooming, bug triage, keeping documentation up-to-date—those aren’t why you got into this job, right? Well, Height handles all that grunt work for you. Using a first-of-its-kind AI approach, Height offloads time-consuming workflows, without you lifting a finger. It syncs your specs to scope changes, organizes your backlog, and prioritizes new bugs, escalating critical issues to the right person. Everyone on your team manages projects—tracking updates, scoping work, balancing priorities. But your success shouldn’t depend on project management. With Height, autonomous workflows handle that mundane upkeep, so your team can focus on building great products. If you’re ready to stop managing projects, it’s time for Height. Join the new era of product building—where projects manage themselves. Sign up for Height today and offload project upkeep for good. Visit height.app/SEdaily to get started.",
  "image": "http://softwareengineeringdaily.com/wp-content/uploads/2024/10/Rust-and-C-with-Steve-Klabnik-and-Herb-Sutter.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\u003cp\u003eIn software engineering, C++ is often used in areas where low-level system access and high-performance are critical, such as operating systems, game engines, and embedded systems. Its long-standing presence and compatibility with legacy code make it a go-to language for maintaining and extending older projects. Rust, while newer, is gaining traction in roles that demand safety and concurrency, particularly in systems programming.\u003c/p\u003e\n\u003cp\u003eWe wanted to explore these two languages side-by-side, so we invited \u003ca href=\"https://herbsutter.com/\"\u003eHerb Sutter\u003c/a\u003e and \u003ca href=\"https://steveklabnik.com/\"\u003eSteve Klabnik\u003c/a\u003e to join host Kevin Ball on the show. Herb works at Microsoft and chairs the ISO \u003ca href=\"https://isocpp.org/\"\u003eC++\u003c/a\u003e standards committee. Steve works at Oxide Computer Company, is an alumnus of the \u003ca href=\"https://x.com/rustlang\"\u003eRust\u003c/a\u003e Core Team, and is the primary author of The Rust Programming Language book.\u003c/p\u003e\n\u003cp\u003eWe hope you enjoy this deep dive into Rust and C++ on Software Engineering Daily.\u003c/p\u003e\n\u003cdiv\u003e\n\u003cp\u003e\u003ca href=\"https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2020/01/KevinBall.jpg\"\u003e\u003cimg fetchpriority=\"high\" decoding=\"async\" data-attachment-id=\"15581\" data-permalink=\"https://softwareengineeringdaily.com/2023/10/12/observability-with-eduardo-silva/lee-6/\" data-orig-file=\"https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/10/lee.png?fit=218%2C258\u0026amp;ssl=1\" data-orig-size=\"218,258\" data-comments-opened=\"0\" data-image-meta=\"{\u0026#34;aperture\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;credit\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;camera\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;caption\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;created_timestamp\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;copyright\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;focal_length\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;iso\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;shutter_speed\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;title\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;orientation\u0026#34;:\u0026#34;0\u0026#34;}\" data-image-title=\"lee\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/10/lee.png?fit=218%2C258\u0026amp;ssl=1\" data-large-file=\"https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2023/10/lee.png?fit=218%2C258\u0026amp;ssl=1\" src=\"https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2020/01/KevinBall.jpg?resize=218%2C258\u0026amp;ssl=1\" alt=\"\" width=\"218\" height=\"258\" data-recalc-dims=\"1\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.kball.llc/\"\u003eKevin Ball\u003c/a\u003e or KBall, is the vice president of engineering at Mento and an independent coach for engineers and engineering leaders. He co-founded and served as CTO for two companies, founded the San Diego JavaScript meetup, and organizes the AI inaction discussion group through Latent Space.\u003c/p\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003e\u003ca href=\"http://softwareengineeringdaily.com/wp-content/uploads/2024/10/SED1756-Rust-vs-Cpp.txt\"\u003ePlease click here to see the transcript of this episode.\u003c/a\u003e\u003c/p\u003e\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\u003ch3\u003eSponsors\u003c/h3\u003e\n\t\t\t\t\t\t\t\t\t\t\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\u003cp\u003e\u003ca href=\"https://height.app/\" target=\"_blank\"\u003e\t\t\t\t\t\t\t\t\t\t\t\t\t\u003cimg width=\"512\" height=\"288\" src=\"https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2024/10/Height-Banner.png?fit=512%2C288\u0026amp;ssl=1\" alt=\"\" decoding=\"async\" srcset=\"https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2024/10/Height-Banner.png?w=512\u0026amp;ssl=1 512w, https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2024/10/Height-Banner.png?resize=300%2C169\u0026amp;ssl=1 300w, https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2024/10/Height-Banner.png?resize=120%2C69\u0026amp;ssl=1 120w, https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2024/10/Height-Banner.png?resize=269%2C151\u0026amp;ssl=1 269w\" sizes=\"(max-width: 512px) 100vw, 512px\" data-attachment-id=\"17169\" data-permalink=\"https://softwareengineeringdaily.com/2024/10/17/soundclouds-platform-architecture-with-matthew-drooker/height-banner/\" data-orig-file=\"https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2024/10/Height-Banner.png?fit=512%2C288\u0026amp;ssl=1\" data-orig-size=\"512,288\" data-comments-opened=\"0\" data-image-meta=\"{\u0026#34;aperture\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;credit\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;camera\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;caption\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;created_timestamp\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;copyright\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;focal_length\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;iso\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;shutter_speed\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;title\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;orientation\u0026#34;:\u0026#34;0\u0026#34;}\" data-image-title=\"Height New Banner\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2024/10/Height-Banner.png?fit=300%2C169\u0026amp;ssl=1\" data-large-file=\"https://i0.wp.com/softwareengineeringdaily.com/wp-content/uploads/2024/10/Height-Banner.png?fit=512%2C288\u0026amp;ssl=1\"/\u003e\t\t\t\t\t\t\t\t\t\t\t\t\t\u003c/a\u003e\t\t\t\t\t\t\t\t\t\t\t\t\u003c/p\u003e\n\t\t\t\t\t\t\t\t\t\t\t\t\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\t\t\t\t\t\u003cp\u003e\u003cspan data-sheets-root=\"1\"\u003eIntroducing Height: the only autonomous project management tool. Backlog grooming, bug triage, keeping documentation up-to-date—those aren’t why you got into this job, right? Well, Height handles all that grunt work for you.\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003eUsing a first-of-its-kind AI approach, Height offloads time-consuming workflows, without you lifting a finger. It syncs your specs to scope changes, organizes your backlog, and prioritizes new bugs, escalating critical issues to the right person.\u003c/p\u003e\n\u003cp\u003eEveryone on your team manages projects—tracking updates, scoping work, balancing priorities. But your success shouldn’t depend on project management. With Height, autonomous workflows handle that mundane upkeep, so your team can focus on building great products.\u003c/p\u003e\n\u003cp\u003eIf you’re ready to stop managing projects, it’s time for Height. Join the new era of product building—where projects manage themselves.\u003c/p\u003e\n\u003cp\u003eSign up for Height today and offload project upkeep for good. Visit \u003ca href=\"https://height.app/\" target=\"_blank\" rel=\"noopener\"\u003eheight.app/SEdaily\u003c/a\u003e to get started.\u003c/p\u003e\n\t\t\t\t\t\t\t\t\t\t\t\t\u003c/div\u003e\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\u003c/div\u003e\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": "2024-10-23T09:00:36Z",
  "modifiedTime": "2024-10-24T05:30:57Z"
}
