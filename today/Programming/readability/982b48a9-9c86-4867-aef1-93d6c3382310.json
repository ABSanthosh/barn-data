{
  "id": "982b48a9-9c86-4867-aef1-93d6c3382310",
  "title": "Prometheus 3.0 Brings New UI, OpenTelemetry Support and More",
  "link": "https://www.infoq.com/news/2024/12/prometheus-3/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "Version 3.0 of the popular open-source monitoring system Prometheus has been released, marking the tool's first major update in seven years. A variety of new features have been added, with improvements aimed at enhancing the user experience and streamlining workflows have been made. By Matt Saunders",
  "author": "Matt Saunders",
  "published": "Tue, 31 Dec 2024 19:30:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Monitoring",
    "Prometheus",
    "Observability",
    "DevOps",
    "news"
  ],
  "byline": "Matt Saunders",
  "length": 5383,
  "excerpt": "Version 3.0 of the popular open-source monitoring system Prometheus has been released, marking the tool's first major update in seven years. A variety of new features have been added, with improvement",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s1_20241210082243/apple-touch-icon.png",
  "text": "Version 3.0 of the popular open-source monitoring system Prometheus has been released, marking the tool's first major update in seven years. A variety of new features have been added, with improvements aimed at enhancing the user experience and streamlining workflows. The completely revamped user interface (UI) is one of the most noticeable changes in Prometheus 3.0. The redesigned UI is intended to remove clutter and is based on a newer underlying technical stack (Mantine UI) for future-proofing. It has a PromLens-style tree view for more straightforward navigation, a better metrics explorer, and an \"Explain\" tab on metric search results, which can give behavioural insights too. For now, the old UI is still accessible via a feature flag, but the team recommends users switch to the new UI for a better experience. In a video on the Better Stack YouTube channel, James Shopland explains how PromQL highlighting is now available outside of the group page, where previously Prometheus would just show the appropriate snippet YAML. The new UI also allows users to visualise PromQL queries as a tree of sub-expressions and see metric results by hovering over parts of the query, in a feature adopted from the PromLens query builder for Prometheus. Explaining how users can now drill down into metrics and see new contextual information, Shopland says: \"This is a massive upgrade when we compare it to 2.0; when you clicked all you could see was just the list of metrics themselves and no information.\" - James Shopland In a video on the OpenObservability Talks YouTube channel, Dotan Horovits and Julius Volz discuss broader plans to improve UI and UX in Prometheus by unifying the UI experience across Prometheus components, particularly between the main Prometheus UI and the Alert Manager. Currently, these have different looks and technical foundations, with Alert Manager using Elm while the new Prometheus UI uses React. There is a shared vision to rebuild the Alert Manager UI using the same framework and style as the new Prometheus UI, but this hasn't happened yet due to the project's volunteer-driven nature. The speakers explain this is an opportunity for frontend developers to contribute to the project. Outside of the UI, Prometheus 3.0 adds several features to support their recent commitment to OpenTelemetry. These include OTLP Ingestion, so Prometheus can now natively and directly receive metrics using the OpenTelemetry Metrics Protocol (OTLP), and UTF-8 normalisation allows users to store and query OpenTelemetry metrics without encountering issues like automatic conversion of dots to underscores in metric names. Other new features include: Remote Write 2.0: Remote Write allows Prometheus instances to actively send the metrics they collect or receive to other instances. Version 2 of this protocol offers enhanced capabilities like native support for metadata, exemplars, timestamps, and histograms. In a deep dive at Kubecon NA 2024, Richard Hartman and Josh Abreu explain how Remote Write 2.0 uses string interning and symbol table techniques to optimise data transfer, resulting in a 60% reduction in messages over the wire, 90% reduction in memory allocation and 70% reduction in CPU utilisation. Native Histograms: This experimental feature introduces a new metric type that offers a more efficient and cost-effective alternative to classic histograms. While still under development, native histograms hold promise for simplifying data management. In the same deep dive, Hartman and Abreu explain how native histograms provide higher-resolution data than traditional histograms and are more efficient, requiring less mental overhead to implement. They can reveal previously hidden patterns and eliminate the need to pre-define perfect bucket boundaries. UTF-8 Support: By default, Prometheus 3.0 allows all valid UTF-8 characters in metric and label names, providing greater flexibility and eliminating the need for manual encoding. Writing on BlueSky, Julius Volz does urge caution on the latter point, stressing the importance of escaping UTF-8 characters. It's important to note that Prometheus 3.0 introduces a few breaking changes, primarily focused on housekeeping and streamlining. These include removing some deprecated feature flags, and requires some configuration file adjustments, PromQL syntax, and scrape protocols. The Prometheus team recommends reviewing the migration guide to ensure a smooth upgrade process and identify any potential adjustments needed for users' specific setups. The announcement advises users to follow the recommended upgrade path carefully. Users are advised to upgrade to v2.55 of Prometheus 2.x before transitioning to v3.0. It's also important to note that rollback from v3.0 is only possible to v2.55, not to earlier versions. Further future changes to Prometheus will add support for Delta temporality (allowing sending only changed counter values instead of total amounts), and other changes. Prometheus 3.0 is available for download now, and the blog post concludes by referring to the official Prometheus blog posts and documentation for detailed information on the new features, breaking changes, and upgrade instructions. About the Author Matt Saunders",
  "image": "https://res.infoq.com/news/2024/12/prometheus-3/en/headerimage/generatedHeaderImage-1735671821608.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003e\u003ca href=\"https://prometheus.io/blog/2024/11/14/prometheus-3-0/\"\u003eVersion 3.0\u003c/a\u003e of the popular open-source monitoring system \u003ca href=\"https://prometheus.io/\"\u003ePrometheus\u003c/a\u003e has been released, marking the tool\u0026#39;s first major update in seven years. A variety of new features have been added, with improvements aimed at enhancing the user experience and streamlining workflows.\u003c/p\u003e\n\n\u003cp\u003eThe completely revamped user interface (UI) is one of the most noticeable changes in Prometheus 3.0. The redesigned UI is intended to remove clutter and is based on a newer underlying technical stack (\u003ca href=\"https://mantine.dev/\"\u003eMantine UI\u003c/a\u003e) for future-proofing. It has a \u003ca href=\"https://promlens.com/\"\u003ePromLens\u003c/a\u003e-style tree view for more straightforward navigation, a better metrics explorer, and an \u0026#34;Explain\u0026#34; tab on metric search results, which can give behavioural insights too. For now, the old UI is still accessible via a feature flag, but the team recommends users switch to the new UI for a better experience.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"\" data-src=\"news/2024/12/prometheus-3/en/resources/1blog_post_screenshot_tree_view-s-1735671820626.png\" src=\"https://imgopt.infoq.com/fit-in/3000x4000/filters:quality(85)/filters:no_upscale()/news/2024/12/prometheus-3/en/resources/1blog_post_screenshot_tree_view-s-1735671820626.png\" rel=\"share\"/\u003e\u003c/p\u003e\n\n\u003cp\u003eIn a \u003ca href=\"https://www.youtube.com/watch?v=jN9YpPOom3U\"\u003evideo\u003c/a\u003e on the \u003ca href=\"https://www.youtube.com/@betterstack\"\u003eBetter Stack YouTube channel\u003c/a\u003e, James Shopland explains how PromQL highlighting is now available outside of the group page, where previously Prometheus would just show the appropriate snippet YAML. The new UI also allows users to visualise PromQL queries as a tree of sub-expressions and see metric results by hovering over parts of the query, in a feature adopted from the PromLens query builder for Prometheus.\u003c/p\u003e\n\n\u003cp\u003eExplaining how users can now drill down into metrics and see new contextual information, Shopland says:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u0026#34;This is a massive upgrade when we compare it to 2.0; when you clicked all you could see was just the list of metrics themselves and no information.\u0026#34;\u003c/p\u003e\n\n\u003cp\u003e- James Shopland\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eIn a \u003ca href=\"https://www.youtube.com/watch?v=iPUCU-78RD4\"\u003evideo\u003c/a\u003e on the \u003ca href=\"https://www.youtube.com/@OpenObservabilityTalks\"\u003eOpenObservability Talks\u003c/a\u003e YouTube channel, Dotan Horovits and Julius Volz discuss broader plans to improve UI and UX in Prometheus by unifying the UI experience across Prometheus components, particularly between the main Prometheus UI and the Alert Manager. Currently, these have different looks and technical foundations, with Alert Manager using Elm while the new Prometheus UI uses React. There is a shared vision to rebuild the Alert Manager UI using the same framework and style as the new Prometheus UI, but this hasn\u0026#39;t happened yet due to the project\u0026#39;s volunteer-driven nature. The speakers explain this is an opportunity for frontend developers to contribute to the project.\u003c/p\u003e\n\n\u003cp\u003eOutside of the UI, Prometheus 3.0 adds several features to support their \u003ca href=\"https://prometheus.io/blog/2024/03/14/commitment-to-opentelemetry/\"\u003erecent commitment\u003c/a\u003e to OpenTelemetry. These include OTLP Ingestion, so Prometheus can now natively and directly receive metrics using the OpenTelemetry Metrics Protocol (OTLP), and UTF-8 normalisation allows users to store and query OpenTelemetry metrics without encountering issues like automatic conversion of dots to underscores in metric names.\u003c/p\u003e\n\n\u003cp\u003eOther new features include:\u003c/p\u003e\n\n\u003cul\u003e\n\t\u003cli\u003e\u003cstrong\u003eRemote Write 2.0:\u003c/strong\u003e Remote Write allows Prometheus instances to actively send the metrics they collect or receive to other instances. Version 2 of this protocol offers enhanced capabilities like native support for metadata, exemplars, timestamps, and histograms. In a \u003ca href=\"https://www.youtube.com/watch?v=9ROvfBqpdu4\"\u003edeep dive at Kubecon NA 2024\u003c/a\u003e, Richard Hartman and Josh Abreu explain how Remote Write 2.0 uses string interning and symbol table techniques to optimise data transfer, resulting in a 60% reduction in messages over the wire, 90% reduction in memory allocation and 70% reduction in CPU utilisation.\u003c/li\u003e\n\t\u003cli\u003e\u003cstrong\u003eNative Histograms:\u003c/strong\u003e This experimental feature introduces a new metric type that offers a more efficient and cost-effective alternative to classic histograms. While still under development, native histograms hold promise for simplifying data management. In the same \u003ca href=\"https://www.youtube.com/watch?v=9ROvfBqpdu4\"\u003edeep dive\u003c/a\u003e, Hartman and Abreu explain how native histograms provide higher-resolution data than traditional histograms and are more efficient, requiring less mental overhead to implement. They can reveal previously hidden patterns and eliminate the need to pre-define perfect bucket boundaries.\u003c/li\u003e\n\t\u003cli\u003e\u003cstrong\u003eUTF-8 Support:\u003c/strong\u003e By default, Prometheus 3.0 allows all valid UTF-8 characters in metric and label names, providing greater flexibility and eliminating the need for manual encoding. \u003ca href=\"https://bsky.app/profile/juliusv.com/post/3ldotgyboyc2o\"\u003eWriting on BlueSky\u003c/a\u003e, Julius Volz does urge caution on the latter point, stressing the importance of escaping UTF-8 characters.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIt\u0026#39;s important to note that Prometheus 3.0 introduces a few breaking changes, primarily focused on housekeeping and streamlining. These include removing some deprecated feature flags, and requires some configuration file adjustments, PromQL syntax, and scrape protocols. The Prometheus team recommends reviewing the migration guide to ensure a smooth upgrade process and identify any potential adjustments needed for users\u0026#39; specific setups. The announcement advises users to follow the recommended upgrade path carefully. Users are advised to upgrade to v2.55 of Prometheus 2.x before transitioning to v3.0. It\u0026#39;s also important to note that rollback from v3.0 is only possible to v2.55, not to earlier versions.\u003c/p\u003e\n\n\u003cp\u003eFurther future changes to Prometheus will add support for Delta temporality (allowing sending only changed counter values instead of total amounts), and other changes. Prometheus 3.0 is available for \u003ca href=\"https://prometheus.io/download/\"\u003edownload\u003c/a\u003e now, and the \u003ca href=\"https://prometheus.io/blog/2024/11/14/prometheus-3-0/\"\u003eblog post\u003c/a\u003e concludes by referring to the official Prometheus blog posts and documentation for detailed information on the new features, breaking changes, and upgrade instructions.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Matt-Saunders\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eMatt Saunders\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": "2024-12-31T00:00:00Z",
  "modifiedTime": null
}
