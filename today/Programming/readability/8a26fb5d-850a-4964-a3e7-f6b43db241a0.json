{
  "id": "8a26fb5d-850a-4964-a3e7-f6b43db241a0",
  "title": "Svelte Releases Attachments to Enhance DOM with Interactive and Reactive Features",
  "link": "https://www.infoq.com/news/2025/06/svelte-releases-attachments/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "The latest version of Svelte includes a new functionality dubbed attachments that enhances a web application’s DOM with interactive and reactive features. Svelte Attachments replace Svelte Actions. By Bruno Couriol",
  "author": "Bruno Couriol",
  "published": "Mon, 16 Jun 2025 22:30:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Svelte",
    "JavaScript",
    "Web Development",
    "Development",
    "news"
  ],
  "byline": "Bruno Couriol",
  "length": 2834,
  "excerpt": "The latest version of Svelte includes a new functionality dubbed attachments that enhances a web application’s DOM with interactive and reactive features. Svelte Attachments replace Svelte Actions.",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s2_20250605075544/apple-touch-icon.png",
  "text": "The latest version of Svelte includes a new functionality dubbed attachments that enhances a web application’s DOM with interactive and reactive features. Svelte Attachments replace Svelte Actions. Just like with Svelte Actions, developers use attachments to provide code to run when a component or DOM element is mounted or unmounted. Typically, the provided code would provision a listener for an event of interest, and remove that listener when the attachment target is unmounted. Attachments can also be used in conjunction with third-party libraries that require a target DOM element. Attachment that depends on reactive values will rerun when those values change. Follows an example using the ScrambleTextPlugin from the GSAP animation library: \u003cscript\u003e import { gsap } from 'gsap' import { ScrambleTextPlugin } from 'gsap/ScrambleTextPlugin' gsap.registerPlugin(ScrambleTextPlugin) // ⚠️ attachments live inside of `$effect` function scramble(text, options) { return (element) =\u003e { gsap.to(element, { duration: 2, scrambleText: text, ...options }) } } let text = $state('Svelte') \u003c/script\u003e \u003c!-- tracking context --\u003e \u003cinput type=\"text\" bind:value={text} /\u003e \u003cdiv {@attach scramble(text)}\u003e\u003c/div\u003e When the DOM is mounted for the first time, the text Svelte will be scrambled. Additionally, any further change to the text value will also cause the text to be scrambled. Developers can experiment with the example in the Svelte playground. Thus Svelte Attachments extend Svelte Actions which did not provide similar reactivity to its parameters. Additionally, Svelte Attachment can be set up on Svelte components, while Svelte Actions can only be declared on DOM elements. The release provides a mechanism to create attachments from actions, thus allowing developers to reuse existing libraries of actions. Attachments can be used to encapsulate behavior separately from markup (as done in other UI frameworks, e.g. hooks in React). Examples of behaviors that were already implemented as actions and can now benefit from attachment affordances include clipboard copying, clickboard pasting into an element, capturing a click outside an element, masking user input, animating an element, pointer drag-to-scroll behavior, provisioning of shortcut keys, make an element swipeable, download on click, and many more. Developers are invited to read the full documentation article online for an exhaustive view of the feature, together with detailed examples and explanations. Developers may also review the corresponding pull request for details about the motivation behind the feature and comments from developers. About the Author Bruno Couriol",
  "image": "https://res.infoq.com/news/2025/06/svelte-releases-attachments/en/headerimage/generatedHeaderImage-1750111313868.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eThe latest version of Svelte \u003ca href=\"https://www.youtube.com/watch?v=P3Ldkuksqu0\"\u003eincludes a new functionality dubbed attachments\u003c/a\u003e that enhances a web application’s DOM with interactive and reactive features. Svelte Attachments replace Svelte Actions.\u003c/p\u003e\n\n\u003cp\u003eJust like with Svelte Actions, developers use attachments to provide code to run when a component or DOM element is mounted or unmounted. Typically, the provided code would provision a listener for an event of interest, and remove that listener when the attachment target is unmounted. Attachments can also be used in conjunction with third-party libraries that require a target DOM element. Attachment that depends on reactive values will rerun when those values change.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://joyofcode.xyz/svelte-attachments-explained\"\u003eFollows an example\u003c/a\u003e using the \u003ccode\u003eScrambleTextPlugin\u003c/code\u003e from the GSAP animation library:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003escript\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\n  \u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e gsap \u003cspan\u003e}\u003c/span\u003e \u003cspan\u003efrom\u003c/span\u003e \u003cspan\u003e\u0026#39;gsap\u0026#39;\u003c/span\u003e\n  \u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e ScrambleTextPlugin \u003cspan\u003e}\u003c/span\u003e \u003cspan\u003efrom\u003c/span\u003e \u003cspan\u003e\u0026#39;gsap/ScrambleTextPlugin\u0026#39;\u003c/span\u003e\n\n  gsap\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eregisterPlugin\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eScrambleTextPlugin\u003cspan\u003e)\u003c/span\u003e\n\n  \u003cspan\u003e// ⚠️ attachments live inside of `$effect`\u003c/span\u003e\n  \u003cspan\u003efunction\u003c/span\u003e \u003cspan\u003escramble\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003etext\u003cspan\u003e,\u003c/span\u003e options\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003eelement\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e=\u0026gt;\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n      gsap\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eto\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eelement\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        duration\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e2\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n        scrambleText\u003cspan\u003e:\u003c/span\u003e text\u003cspan\u003e,\u003c/span\u003e\n        \u003cspan\u003e...\u003c/span\u003eoptions\n      \u003cspan\u003e}\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n  \u003cspan\u003e}\u003c/span\u003e\n\n  \u003cspan\u003elet\u003c/span\u003e text \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e$state\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#39;Svelte\u0026#39;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003escript\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan\u003e\u0026lt;!-- tracking context --\u0026gt;\u003c/span\u003e\n\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003einput\u003c/span\u003e \u003cspan\u003etype\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003etext\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e \u003cspan\u003e\u003cspan\u003ebind:\u003c/span\u003evalue\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e=\u003c/span\u003e{text}\u003c/span\u003e \u003cspan\u003e/\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003ediv\u003c/span\u003e \u003cspan\u003e{@attach\u003c/span\u003e \u003cspan\u003escramble(text)}\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003ediv\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eWhen the DOM is mounted for the first time, the text Svelte will be scrambled. Additionally, any further change to the \u003ccode\u003etext\u003c/code\u003e value will also cause the text to be scrambled. Developers can \u003ca href=\"https://svelte.dev/playground/actions-pannable#H4sIAAAAAAAACr1US47TQBC9StEaybbkOBJL5yMQYgcS0rAAYaTpuCuZBrvbcpcTR5HPwJ4Vx-A8XIAroGo7yWQyGRBIKAt3XtWrrnqv7J0wskSRiudQ2hoht2VVYAsyJ20NhKg0oYpELJa6QCfSDztB24oZDIj4wK-qxK2xIMYW0uFDeG4NoSEnUjF1ea0rmmcGQJeVrQl2sHKygg6WtS0h4D_BSfg6r2W5KPAttvSmaFbanCSPz-NBZrgCR5MaV9oR1n0kPE-O-uTxGH58_fbz-xeQRDK_LbljKPQaQRunFYJdws0VLpeY0w0zlo3p5XJDzZCwpRhsxaiLYMdZADVSU7OoBXLRCGbzfWjokew-GB8jAKqpJZdK4Wl8RN2dCVLwVx6DSZIM1--xLupPHT-6ftYCyRNhBleOJGEYXHuzgigz0_HBo8xMn4xGQLXMP2uzAm9kSzAazTMz1aZqCHgtZplgPBOw0Eala1k0ONsx1MGYU5Vew-5ZL-ypXFE3n46VXs8zI2JfRaRUN9jFFzauksbIRYHJJ3e6cqeBOzuHrV-kg137xNBYhd6ljFiRdrI_bflkMjpQbqVRBb62jUNlNybEtTfSUzNqYQYeSfJCo6F3kx7f3sPfD2Uz4psTpV0lKb99ySlhH8jI4AZeNI5s2eNBJY0jWVMQ7-_jn0KSukhhB20MW2-sx9lufkaHuzbaKLtJpFK-4Ct-GwzWYVDyOKVdYxDfHZCRaPIn3KY6ZTZVz-suq8fF76mXW-MI1JmIMBocOaSc6Qmj3qr_4cEg1EULYlBtzD0-bMVjojTV_14oNOof16n2Vv71Rl2m_2ap_KAX9pFfzVMyI_vWh8_wMLRCR7XdhtFRBV_6cmOPVKe-Peommenuf8g-xoK15cFFupSFw-4X5w-0Zn8HAAA=\"\u003eexperiment with the example in the Svelte playground\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThus Svelte Attachments extend Svelte Actions which did not provide similar reactivity to its parameters. Additionally, Svelte Attachment can be set up on Svelte components, while Svelte Actions can only be declared on DOM elements. The release provides a mechanism to create attachments from actions, thus allowing developers to reuse \u003ca href=\"https://action-archive.vercel.app/\"\u003eexisting libraries of actions\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eAttachments can be used to encapsulate behavior separately from markup (as done in other UI frameworks, e.g. \u003ca href=\"https://react.dev/reference/react/hooks\"\u003ehooks in React\u003c/a\u003e). Examples of behaviors that were already implemented as actions and can now benefit from attachment affordances include clipboard copying, \u003ca href=\"https://svu.vercel.app/action/paste\"\u003eclickboard pasting into an element\u003c/a\u003e, capturing a click outside an element, masking user input, animating an element, \u003ca href=\"https://svelte-put.vnphanquang.com/docs/dragscroll\"\u003epointer drag-to-scroll behavior\u003c/a\u003e, \u003ca href=\"https://svelte-put.vnphanquang.com/docs/shortcut\"\u003eprovisioning of shortcut keys\u003c/a\u003e, \u003ca href=\"https://svelte-put.vnphanquang.com/docs/swipeable\"\u003emake an element swipeable\u003c/a\u003e, \u003ca href=\"https://svelteui.dev/composables/use-download\"\u003edownload on click\u003c/a\u003e, and many more.\u003c/p\u003e\n\n\u003cp\u003eDevelopers are invited to \u003ca href=\"https://svelte.dev/docs/svelte/@attach\"\u003eread the full documentation article online\u003c/a\u003e for an exhaustive view of the feature, together with detailed examples and explanations. Developers may also \u003ca href=\"https://github.com/sveltejs/svelte/pull/15000\"\u003ereview the corresponding pull request\u003c/a\u003e for details about the motivation behind the feature and comments from developers.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Bruno-Couriol\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eBruno Couriol\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": "2025-06-16T00:00:00Z",
  "modifiedTime": null
}
