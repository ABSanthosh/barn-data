{
  "id": "a5cb27c5-dbe1-43dd-8f93-718e8dd63a66",
  "title": "Is It Still Worth Learning to Code in an AI World?",
  "link": "https://blog.jetbrains.com/education/2025/04/23/is-it-still-worth-learning-to-code/",
  "description": "We recently released some new AI features for the JetBrains Academy plugin. Learners will now be able to use machine translation of course content, theory lookup, and AI hints for Kotlin courses. At first glance, these might seem fairly tame. There are no big LLM integrations, JetBrains AI Assistant is not being marketed toward beginners, […]",
  "author": "Clara Maine",
  "published": "Wed, 23 Apr 2025 09:17:49 +0000",
  "source": "https://blog.jetbrains.com/feed",
  "categories": [
    "jetbrains-academy",
    "ai",
    "ai-assistance",
    "career",
    "developers",
    "for-learners",
    "jetbrainsacademy-2",
    "learn",
    "learn-programming"
  ],
  "byline": "Clara Maine",
  "length": 8472,
  "excerpt": "Part 1 of our \"How to Learn to Code in an AI World\" series.",
  "siteName": "The JetBrains Blog",
  "favicon": "https://blog.jetbrains.com/wp-content/uploads/2024/01/cropped-mstile-310x310-1-180x180.png",
  "text": "The place for learning and teaching computer science your way JetBrains AcademyIs It Still Worth Learning to Code in an AI World? We recently released some new AI features for the JetBrains Academy plugin. Learners will now be able to use machine translation of course content, theory lookup, and AI hints for Kotlin courses. At first glance, these might seem fairly tame. There are no big LLM integrations, JetBrains AI Assistant is not being marketed toward beginners, and we are even considering disabling AI features in beginner programming courses by default at the request of our learners. During a time when many companies (including JetBrains) are embracing AI for developer productivity, these choices may seem strange. Shouldn’t students be learning to work with these tools from the beginning? Shouldn’t they be adapting to our new AI world? Our choice to move slowly and thoughtfully with regards to our educational AI features is intentional and assisted by our incredible research team. We recognize that LLMs can be incredibly useful to aid understanding of new concepts. However, we also think it is important to understand how these tools help and hurt learners, because there is good evidence they have the potential to do both.  In an effort to help guide learners during this time, we wrote four blog posts about learning to code in an AI world. This is the first in the series, keep an eye out for the next ones on our blog in the coming months. ContentsIs it still worth learning to code?What is computational thinking and how can you develop it?How will careers in programming evolve with AI? Is it still worth learning to code? Yes. Aside from its current utility in building software, coding builds computational thinking, strengthens problem-solving skills, and reinforces abstract concepts that are important in many disciplines. Programming skills help demystify the digital worlds we inhabit while giving you the power to actively shape and contribute to them. Most experts expect AI to augment future programming jobs, not replace them. Although AI-generated code is becoming increasingly prevalent, skilled people still need to review, debug, and take accountability for the quality of said code. How much of a technical foundation will they need to be able to do that? The safe answer is everything a traditional coder knows. Organizations are willing to pay for this level of expertise because, ultimately, deep knowledge and experience serve as risk mitigation in the face of evolving technology. Even in a future where software development can be completely automated with a prompt from someone with no technical knowledge, programming is an excellent exercise in a specific kind of thinking. In learning to solve problems computationally, we develop new ways of seeing. With this new set of eyes come new ways to make positive change in the world. This applies to both the physical world we inhabit (notice how many daily inconveniences might be solved by a simple program) and the digital ones (notice how software could be made better). No matter how good the machines get, their adoption is guaranteed to be a long and messy process. Success in navigating this ever-shifting landscape will depend on your ability to adapt to new technology, and robust computational thinking skills will make that process much easier. What is computational thinking and how can you develop it? Computational thinking (sometimes called algorithmic thinking) is a name for the cognitive skills we build when we program. It involves breaking down complex problems into smaller, manageable parts, identifying patterns, and designing step-by-step solutions that can be implemented with code and algorithms. Even introductory programming courses naturally develop basic computational thinking. By writing programs to automate tasks, analyze data, or solve challenges, students learn to think in structured, algorithmic ways. If you want to level-up your computational thinking beyond the basics and prepare for the challenges and opportunities of this new era, consider exploring courses that focus on algorithms and data structures. While they seem less practical than courses about specific tools and frameworks, the thinking tools these courses develop will last decades longer than any library or framework which is currently in vogue.  Our educational research team is also using our open-source plugin to build Cognifire, a low-code learning environment to help students develop their computational thinking. Keep an eye on our newsletter for more information about that in the coming months! We offer free algorithms and data structures courses you can complete in your IDE. If you’re at the beginning of your learning journey, just remember that the challenges and frustrations you encounter when you’re programming are productive in the context of developing these intangible skills and intuitions you’ll need to master programming. Always keep in mind that developing this skill requires practice, reflection, and an openness to facing difficult problems that stretch your mental models. How will careers in programming evolve with AI? The general consensus is that developers will increasingly validate, debug, and communicate about AI-generated code. This will require a deep foundational knowledge, since it’s hard to efficiently debug code you couldn’t have written yourself. At the moment, AI models struggle with broad-scope problems like identifying how changes in one part of a large codebase might affect other interconnected parts. They perform poorly with niche frameworks and tools, lack consistent creativity and deep domain expertise, and only really work if the prompter has given clear and detailed instructions, which is a skill in itself. With time, it’s true that many of these shortcomings will improve, but which and how much is hard to say. If there is one thing we do know, it’s that automation is not new to programming, and AI is just another form of it. The job of “programmer” has evolved from doing complicated math by hand to punching machine code into cards, to writing assembly languages, then high-level languages – not to mention adapting to new IDEs and general tools like Git. Learning from history, we see that the tools always change, but the opportunities for people with technical knowledge and high-level reasoning skills continue to flourish.  Looking into the future, we can expect the same dynamic: the robots are best used for repetitive, predictable work, and everything else will be handled by people. Put concretely, gone are the days of abundant programming jobs with relatively simple, repetitive, and mundane responsibilities. So, does that mean junior developers will be more easily replaced by AI? While it’s true that roles and duties may change faster for inexperienced programmers than for others, that is because more (but not all) of their responsibilities involve wrestling with the boilerplate code that AI can generate most reliably. This doesn’t mean juniors are going to be replaced by AI – it just means they might spend slightly less time writing code, and more time thinking about it. This is the first post in our series How to Learn to Program in an AI World, keep an eye out for the next ones on our blog in the coming months. Subscribe to JetBrains Academy updates Discover more",
  "image": "https://blog.jetbrains.com/wp-content/uploads/2025/03/DSGN-22097-Banners-for-AI-world-blog-post-series-part-1-Social_Share_Blog_1280x720.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"main\"\u003e\n    \u003cdiv\u003e\n                        \u003ca href=\"https://blog.jetbrains.com/education/\"\u003e\n                            \u003cimg src=\"https://blog.jetbrains.com/wp-content/uploads/2020/07/JetBrains-Academy-1.svg\" alt=\"Education logo\"/\u003e\n                                                                                                \n                                                                                    \u003c/a\u003e\n                                                    \u003cp\u003eThe place for learning and teaching computer science your way\u003c/p\u003e\n                                            \u003c/div\u003e\n                            \u003csection data-clarity-region=\"article\"\u003e\n                \u003cdiv\u003e\n                    \t\t\t\t\u003cp\u003e\u003ca href=\"https://blog.jetbrains.com/education/category/jetbrains-academy/\"\u003eJetBrains Academy\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"major-updates\"\u003eIs It Still Worth Learning to Code in an AI World?\u003c/h2\u003e                    \n                    \n\u003cp\u003eWe recently released some new AI features for the JetBrains Academy plugin. Learners will now be able to use \u003ca href=\"https://blog.jetbrains.com/education/2025/04/03/jetbrains-academy-plugin-2025-3-ai-features/\" data-type=\"link\" data-id=\"https://blog.jetbrains.com/education/2025/04/03/jetbrains-academy-plugin-2025-3-ai-features/\"\u003emachine translation of course content, theory lookup,\u003c/a\u003e and \u003ca href=\"https://plugins.jetbrains.com/plugin/10081-jetbrains-academy/what-s-new/jetbrains-academy-2025-1\" data-type=\"link\" data-id=\"https://plugins.jetbrains.com/plugin/10081-jetbrains-academy/what-s-new/jetbrains-academy-2025-1\" target=\"_blank\" rel=\"noopener\"\u003eAI hints for Kotlin courses\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cp\u003eAt first glance, these might seem fairly tame. There are no big LLM integrations, JetBrains AI Assistant is not being marketed toward beginners, and we are even considering \u003ca href=\"https://youtrack.jetbrains.com/issue/EDU-7800\" data-type=\"link\" data-id=\"https://youtrack.jetbrains.com/issue/EDU-7800\" target=\"_blank\" rel=\"noopener\"\u003edisabling AI features in beginner programming courses by default\u003c/a\u003e at the request of our learners.\u003c/p\u003e\n\n\n\n\u003cp\u003eDuring a time when many companies (including JetBrains) are embracing AI for developer productivity, these choices may seem strange. Shouldn’t students be learning to work \u003cem\u003ewith \u003c/em\u003ethese tools from the beginning? Shouldn’t they be adapting to our new AI world?\u003c/p\u003e\n\n\n\n\u003cp\u003eOur choice to move slowly and thoughtfully with regards to our educational AI features is intentional and assisted by \u003ca href=\"https://lp.jetbrains.com/research/education/\" target=\"_blank\" rel=\"noopener\"\u003eour incredible research team\u003c/a\u003e. We recognize that LLMs can be incredibly useful to aid understanding of new concepts. However, we also think it is important to understand how these tools help and hurt learners, because there is good \u003ca href=\"https://dl.acm.org/doi/10.1145/3632620.3671116\" target=\"_blank\" rel=\"noopener\"\u003eevidence\u003c/a\u003e they have the potential to do both. \u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" fetchpriority=\"high\" width=\"2560\" height=\"1440\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/03/DSGN-22097-Banners-for-AI-world-blog-post-series-part-1-Featured_1280x720-1.png\" alt=\"How to learn to program in an AI world part 1: Is it still worth learning to code\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eIn an effort to help guide learners during this time, we wrote four blog posts about learning to code in an AI world. This is the first in the series, keep an eye out for the next ones on \u003ca href=\"https://blog.jetbrains.com/education/\"\u003eour blog\u003c/a\u003e in the coming months.\u003c/p\u003e\n\n\n\n\u003cdiv id=\"rank-math-toc\"\u003e\u003ch2\u003eContents\u003c/h2\u003e\u003cnav\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"#is-it-still-worth-learning-to-code\"\u003eIs it still worth learning to code?\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#what-is-computational-thinking-and-how-can-you-develop-it\"\u003eWhat is computational thinking and how can you develop it?\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"#how-will-careers-in-programming-evolve-with-ai\"\u003eHow will careers in programming evolve with AI?\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/nav\u003e\u003c/div\u003e\n\n\n\n\u003ch2 id=\"is-it-still-worth-learning-to-code\"\u003eIs it still worth learning to code?\u003c/h2\u003e\n\n\n\n\u003cp\u003eYes. Aside from its current utility in building software, coding builds \u003ca href=\"#what-is-computational-thinking-and-how-can-you-develop-it\" data-type=\"internal\" data-id=\"#what-is-computational-thinking-and-how-can-you-develop-it\"\u003ecomputational thinking\u003c/a\u003e, strengthens problem-solving skills, and reinforces abstract concepts that are important in many disciplines. Programming skills help demystify the digital worlds we inhabit while giving you the power to actively shape and contribute to them.\u003c/p\u003e\n\n\n\n\u003cp\u003eMost experts expect AI to augment future programming jobs, not replace them. Although AI-generated code is becoming increasingly prevalent, skilled people still need to review, debug, and take accountability for the quality of said code. How much of a technical foundation will they need to be able to do that? The safe answer is everything a traditional coder knows. Organizations are willing to pay for this level of expertise because, ultimately, deep knowledge and experience serve as risk mitigation in the face of evolving technology.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" width=\"5330\" height=\"822\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/03/DSGN-22097-Banners-for-AI-world-blog-post-series-part-1-Divider-1.png\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eEven in a future where software development can be completely automated with a prompt from someone with no technical knowledge, programming is an excellent exercise in a specific kind of thinking. In learning to solve problems computationally, we develop new ways of seeing. With this new set of eyes come new ways to make positive change in the world. This applies to both the physical world we inhabit (notice how many daily inconveniences might be solved by a simple program) and the digital ones (notice how software could be made better).\u003c/p\u003e\n\n\n\n\u003cp\u003eNo matter how good the machines get, their adoption is guaranteed to be a long and messy process. Success in navigating this ever-shifting landscape will depend on your ability to adapt to new technology, and robust computational thinking\u003cstrong\u003e \u003c/strong\u003eskills will make that process \u003cem\u003emuch \u003c/em\u003eeasier.\u003c/p\u003e\n\n\n\n\u003ch2 id=\"what-is-computational-thinking-and-how-can-you-develop-it\"\u003eWhat is computational thinking and how can you develop it?\u003c/h2\u003e\n\n\n\n\u003cp\u003eComputational thinking (sometimes called algorithmic thinking) is a name for the cognitive skills we build when we program. It involves breaking down complex problems into smaller, manageable parts, identifying patterns, and designing step-by-step solutions that can be implemented with code and algorithms.\u003c/p\u003e\n\n\n\n\u003cp\u003eEven introductory programming courses naturally develop basic computational thinking. By writing programs to automate tasks, analyze data, or solve challenges, students learn to think in structured, algorithmic ways.\u003c/p\u003e\n\n\n\n\u003cp\u003eIf you want to level-up your computational thinking beyond the basics and prepare for the challenges and opportunities of this new era, consider exploring \u003ca href=\"https://academy.jetbrains.com/?tag=Algorithms+and+Data+Structures\" target=\"_blank\" rel=\"noopener\"\u003ecourses that focus on algorithms and data structures\u003c/a\u003e. While they seem less practical than courses about specific tools and frameworks, the \u003cem\u003ethinking\u003c/em\u003e \u003cem\u003etools \u003c/em\u003ethese courses develop will last decades longer than any library or framework which is currently in vogue. \u003c/p\u003e\n\n\n\n\u003cp\u003eOur \u003ca href=\"https://lp.jetbrains.com/research/education/\" target=\"_blank\" rel=\"noopener\"\u003eeducational research team\u003c/a\u003e is also using our \u003ca href=\"https://github.com/JetBrains/educational-plugin\" target=\"_blank\" rel=\"noopener\"\u003eopen-source plugin\u003c/a\u003e to build \u003ca href=\"https://www.researchgate.net/publication/381609297_Using_a_Low-Code_Environment_to_Teach_Programming_in_the_Era_of_LLMs\" target=\"_blank\" rel=\"noopener\"\u003eCognifire\u003c/a\u003e, a low-code learning environment to help students develop their computational thinking. Keep an eye on our newsletter for more information about that in the coming months!\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" width=\"1688\" height=\"1009\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/03/algorithms-and-data-structures-course-preview-cropped.gif\" alt=\"Finding the algorithms and data structures courses in the JetBrains Academy Catalog\"/\u003e\u003cfigcaption\u003eWe offer free algorithms and data structures courses you can complete in your IDE.\u003c/figcaption\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eIf you’re at the beginning of your learning journey, just remember that the challenges and frustrations you encounter when you’re programming are \u003cem\u003eproductive \u003c/em\u003ein the context of developing these intangible skills and intuitions you’ll need to master programming. Always keep in mind that developing this skill requires practice, reflection, and an openness to facing difficult problems that stretch your mental models.\u003c/p\u003e\n\n\n\n\u003ch2 id=\"how-will-careers-in-programming-evolve-with-ai\"\u003eHow will careers in programming evolve with AI?\u003c/h2\u003e\n\n\n\n\u003cp\u003eThe general consensus is that developers will increasingly validate, debug, and communicate about AI-generated code. This will require a deep foundational knowledge, since it’s hard to efficiently debug code you couldn’t have written yourself.\u003c/p\u003e\n\n\n\n\u003cp\u003eAt the moment, AI models struggle with broad-scope problems like identifying how changes in one part of a large codebase might affect other interconnected parts. They perform poorly with niche frameworks and tools, lack consistent creativity and deep domain expertise, and only really work if the prompter has given clear and detailed instructions, \u003ca href=\"https://hyperskill.org/learn/step/45559\" target=\"_blank\" rel=\"noopener\"\u003ewhich is a skill in itself\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" loading=\"lazy\" width=\"5330\" height=\"822\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/03/DSGN-22097-Banners-for-AI-world-blog-post-series-part-1-Divider-2.png\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eWith time, it’s true that many of these shortcomings will improve, but which and how much is hard to say. If there is one thing we do know, it’s that automation is not new to programming, and AI is just another form of it. The job of “programmer” has evolved from doing complicated math by hand to punching machine code into cards, to writing assembly languages, then high-level languages – not to mention adapting to new IDEs and general tools \u003ca href=\"https://www.youtube.com/watch?v=cdcjw5etCnw\" target=\"_blank\" rel=\"noopener\"\u003elike Git\u003c/a\u003e. Learning from history, we see that the tools always change, but the opportunities for people with technical knowledge and high-level reasoning skills continue to flourish. \u003c/p\u003e\n\n\n\n\u003cp\u003eLooking into the future, we can expect the same dynamic: the robots are best used for repetitive, predictable work, and everything else will be handled by people. Put concretely, gone are the days of abundant programming jobs with relatively simple, repetitive, and mundane responsibilities.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eSo, does that mean junior developers will be more easily replaced by AI?\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003eWhile it’s true that roles and duties may change faster for inexperienced programmers than for others, that is because more (but not all) of their responsibilities involve wrestling with the boilerplate code that AI can generate most reliably. This doesn’t mean juniors are going to be replaced by AI – it just means they might spend slightly less time writing code, and more time thinking about it.\u003c/p\u003e\n\n\n    \n\n\n\n\n\n\n\n\u003cp\u003eThis is the first post in our series \u003cem\u003eHow to Learn to Program in an AI World,\u003c/em\u003e keep an eye out for the next ones on \u003ca href=\"https://blog.jetbrains.com/education/\"\u003eour blog\u003c/a\u003e in the coming months. \u003c/p\u003e\n\n\n\n\n                    \n                                                                                                                                                                                                                            \u003cdiv\u003e\n                                \u003cdiv\u003e\n                                                                            \u003ch4\u003eSubscribe to JetBrains Academy updates\u003c/h4\u003e\n                                                                                                            \n                                \u003c/div\u003e\n                                \n                                \u003cp\u003e\u003cimg src=\"https://blog.jetbrains.com/wp-content/themes/jetbrains/assets/img/img-form.svg\" alt=\"image description\"/\u003e\n                                                                    \u003c/p\u003e\n                            \u003c/div\u003e\n                                                            \u003c/div\u003e\n                \u003ca href=\"#\"\u003e\u003c/a\u003e\n                \n                \n            \u003c/section\u003e\n                    \u003cdiv\u003e\n                \u003cp\u003e\n                    \u003ch2\u003eDiscover more\u003c/h2\u003e\n                \u003c/p\u003e\n                \n            \u003c/div\u003e\n                \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "9 min read",
  "publishedTime": null,
  "modifiedTime": null
}
