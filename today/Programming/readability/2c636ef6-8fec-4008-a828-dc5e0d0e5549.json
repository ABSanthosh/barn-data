{
  "id": "2c636ef6-8fec-4008-a828-dc5e0d0e5549",
  "title": "Leadership insights on Managing Code Quality Conflict",
  "link": "https://blog.jetbrains.com/qodana/2025/02/managing-conflict/",
  "description": "The competitive nature of today’s digital business environment makes it critical for software development teams to embrace change, especially if it leads to improved software quality and efficiency. As a manager or team lead, your leadership plays a role in guiding your team through these metamorphoses. At Qodana, we’re all about code quality and security […]",
  "author": "Kerry Beetge",
  "published": "Wed, 12 Feb 2025 17:12:31 +0000",
  "source": "https://blog.jetbrains.com/feed",
  "categories": [
    "opinion",
    "cto",
    "kotlin",
    "qodana",
    "team-lead"
  ],
  "byline": "Kerry Beetge",
  "length": 14001,
  "excerpt": "Join Qodana and Simon and Nikolay from the Kotlin team to learn more about managing conflict in the tech space when it comes to choosing new tools.",
  "siteName": "The JetBrains Blog",
  "favicon": "https://blog.jetbrains.com/wp-content/uploads/2024/01/cropped-mstile-310x310-1-180x180.png",
  "text": "The code quality platform for teams OpinionLeadership insights on Managing Code Quality Conflict Development Lead in Kotlin Compiler, Simon Ogorodnik.  The competitive nature of today’s digital business environment makes it critical for software development teams to embrace change, especially if it leads to improved software quality and efficiency. As a manager or team lead, your leadership plays a role in guiding your team through these metamorphoses. At Qodana, we’re all about code quality and security for teams, so in this installment of our Leadership Series, we will explore the intricacies of implementing new tools that can help with this. We will also look at how to overcome the professional challenges that come with process improvement and managing change.  Joining us to share their insights are Team Lead in Kotlin Build Infrastructure Nikolay Krasko and Development Lead in Kotlin Compiler Simon Ogorodnik.  Importance of quality and process improvement The first step in driving quality improvement is recognizing the significance of creating superior products or services. Quality boosts customer satisfaction, enhances your company’s reputation, and gives your business a competitive edge. Similarly, well-defined processes lead to increased efficiency and productivity, paving the way for superior performance and growth. According to the MIT Sloan Management Review, “Having fewer defects or field failures results in lower manufacturing and service costs. As long as these gains exceed any increase in expenditures by the firm on defect prevention, profitability will improve.” However, process management, new tools, and changes are often required to achieve better quality, and software development teams are not always open to change.  Defining and identifying the problem As an example, take a look at this Reddit post and its upvotes to see how championing new tools and emphasizing code quality can be a challenge.  Problem example. How can this developer, and others, address this?  “I would say that it depends a lot on their code review practice. Do they have to fix review suggestions before merging, for example? It also depends on the type of project that they are working on. But if they are trying to raise the bar here, I would first talk with the team lead or tech lead to acknowledge the problem and find a solution. These discussions can also be had in the reviews, not just in the comments,” says Development Lead in Kotlin Compiler, Simon Ogorodnik.  “If the team, team lead, tech lead, architect, and CTO don’t care, then it will be nearly impossible – but if they do, there’s room to start the conversation with the team.”  Kotlin’s experience “We’ve always cared about code quality, but one of the first challenges we faced was getting enough data to make an educated decision about which tools to integrate into our stack. We identified the problem that we weren’t working as a team and needed stricter quality rules, but then we needed to gather information from different stakeholders, team leads, and developers. Understandably, our team needed to see a lot of value in a solution in order to advocate for it – and this can be a major hurdle,” says Simon. “You can’t measure something you don’t understand in detail because once you have asserted there’s a problem, there are many potential solutions. You need to be able to summarize, view, and present data on why this change will fix something and not introduce unnecessary problems,” adds Team Lead in Kotlin Build Infrastructure, Nikolay Krasko.  “First, identify the problem, the fears, and the concerns. Then come the hard questions like if it’s really a problem or whether there are key people who aren’t on board. Does everyone agree it’s the highest priority problem? Often they don’t. Then we have to say, ‘I have this solution. Can you explain why you don’t like it, and do you see other solutions?’ In the end, you either get a better solution or points that challenge your beliefs.”  However, these conversations can also be difficult. With this in mind, the first step is to provide comprehensive data to your team to open the discussion and start generating internal buy-in. However, this works on the assumption that you have already made an autonomous decision or have a bias.  Question your own biases and assumptions This is another important part of introducing a change, with the help of your team.  “You should avoid an authoritarian style,” says Simon when asked about what happens when teammates don’t agree, “It works to make a change in the short term, but you still need to provide some reasoning. Saying ‘We hired an external auditor who said our practice is bad, so now we are getting a new tool’ won’t cut it. People won’t buy into things just because you tell them to.”  “It would be easier if there is one decision-maker who’s going to say, ‘I know what I’m doing, I’ve got this, let’s go.’ But we need to convince a lot of people sometimes and this is hard,” says Nikolay, also erring towards a more evidence-based decision-making style.  “Saying ‘We hired an external auditor who said our practice is bad, so now we are getting a new tool’ isn’t a good idea.” Embracing new technology with an open mind It’s clear that change is often met with resistance, but as a leader, your role is to turn this challenge into an opportunity. Successful change management requires clear communication, employee involvement, effective training, time management, and patience. Taking these steps reduces anxiety, fosters open dialogue, and encourages employee buy-in and new perspectives.  How do you deal with detractors and those against proposed changes? An important point to consider is that teammates with opposing views are not necessarily wrong. This is not a revolutionary concept, but sometimes leaders must check their egos to gather useful information that could benefit them in the long term. That said, stakeholders can typically be divided into supporters and detractors – and both groups have something valuable to offer.  “Speak to people who don’t like the change,” says Nikolay, “you might identify a misunderstanding. Perhaps it’s not the tool or the change they are opposed to, but maybe they are scared of doing more work or losing their position. By opening up the floor to these perspectives, you can get to the root reasons for the resistance.  Maybe someone will tell me, ‘I don’t want it because it promotes architectural patterns I don’t like,’ but the core fear is additional tasks or complexity, or becoming redundant themselves.”  On the other hand, both Nikolay and Simon agree that it is important to share the perspectives of supporters. “I’m not going to talk only with people who are against it, but I also want to understand those who are for the change. There will be some who are strictly pro.  Using Qodana as an example, maybe they came from another company where they had static analysis tools, and they used Qodana and liked it. This will help to share the vision and convert people who are neutral one way or the other,” says Simon.  Guiding your team through the implementation of quality processes Transforming your team’s way of working comes with challenges, but a leader guides, not dictates. Let your team in on why these changes are happening and how they can contribute to the overall success and quality improvement. “With stakeholder management, you can’t always ask everybody,” says Simon, “It would be great, but it wouldn’t work in the scope of 100 people, for example. For that, I would try to gather a representative working group of people who will be stakeholders or those with strong opinions.” Team Lead in Kotlin Build Infrastructure Nikolay Krasko. Nikolay adds, “For smaller teams, it’s not a big deal to just talk with everybody. Bring it up in a team meeting and say okay, here it is. We have our quality level and our number of regressions. Maybe the QA team will be happy about that.  It would be nice to detect problems automatically and for your tech lead to say, ‘We are not going to push those strange patterns into production anymore. I need those static checkers so I can stop constantly mentioning the same issues during the code review. I’m tired and want to free myself from that.’ Choose people who have strong opinions and authority.”  In summary: Explain clearly why changes are necessary and how they can improve quality and efficiency.  Seek your team’s input during the decision-making process and make them feel involved.  Offer training that will equip your team with the necessary skills and knowledge to adapt to new quality processes. Regularly track your progress using key performance indicators (KPIs) to identify what’s working and what could be improved. Celebrate small victories along the way and acknowledge those who are driving the change. There is also another important point: Ease the burden of change with small, incremental adjustments.  “If it’s a gradual change and initial processes aren’t deeply affected, it may be a better strategy to introduce it in stages. You don’t need to uproot everything before you get some traction and adoption. Do this gradually and you’ll have a new baseline and support from your team members who enjoy it. This is one of the most natural ways to introduce any new technology,” says Nikolay. “I think that way of managing change should be an industry standard,” Simon adds, “If you’ve read Leading Change, it will tell you similar things. I presume that at least for most large companies, it’s the default way of doing things. It’s the same values that Agile and chaos engineering promote.” “If it’s a gradual change and initial processes aren’t deeply affected, it may be a better strategy to introduce it in stages. You don’t need to uproot everything before you get some traction and adoption.” Leading quality improvement  Improving quality and refining processes in your organization is neither a quick nor solitary task but one that requires collective effort, patience, and strong leadership. As a leader, your attitude towards change will significantly influence how your team adapts. Keep communication transparent, involve your team in decision-making, and remember to acknowledge their efforts – it’s these subtle actions that make a big difference.  Quality improvements and process upgrades are vital for business success, and with effective leadership and a committed team, your quality upgrade will not only be possible but will also become a key driver of your future growth. Final words on managing conflict From Simon: “Don’t take change management as a black-and-white thing. You’re going to end up in a gray area, you’re going to implement it halfway, and you can sell it like that as well. You can say, ‘Let’s just give it a try and see how it goes, and if it doesn’t work, let’s try again and try something else,’ so that people don’t feel like it’s so extreme. It’s an iterative process.” From Nikolay: “In general, speak to business goals. People usually understand this, as they are a strong motivator, and if it’s justified by data, it can be a powerful driver for change.  Nothing works exactly as it’s intended. You will always find flaws and bugs, and you need to adjust. It’s better to anticipate the evolution process right from the beginning to make it easier to commit to changes.”  Tell us what you’d like to see Thanks for joining us for the Qodana Leadership Series, which aims to create discussions about real-world problems facing quality-focused leaders in software development and AI. Let us know which topics interest you the most in the comments, and we will invite experts to weigh in. If you’d like to know more about Qodana for code quality improvement and compliance in teams, take a look at our website. Special thanks to Nikolay and Simon from Kotlin for their participation! About our participants Simon Ogorodnik Simon is a Development Lead from the Kotlin Compiler who enjoys talking about performance, code quality, compiler architectures, and project management. Now, he is trying to find the best ramen restaurant in Amsterdam and wondering how AI will challenge the code quality landscape. When he’s not sitting in a meeting or at coffee-point, you can find him kitesurfing or just relkaxing at home. Nikolai Krasko Nikolai is a Team Lead of the Kotlin Infrastructure team who enjoys finding small changes in the development process that make a big difference in productivity. He loves playing guitar and exploring new technologies. When he is not figuring out how to make things work better without breaking other things along the way at work, you can find him playing with his kids, reading books, or playing computer games. What’s next? Subscribe to Qodana Blog updates Discover more",
  "image": "https://blog.jetbrains.com/wp-content/uploads/2025/02/qd-twitter_post_1200x675_en-1.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"main\"\u003e\n    \u003cdiv\u003e\n                        \u003ca href=\"https://blog.jetbrains.com/qodana/\"\u003e\n                            \u003cimg src=\"https://blog.jetbrains.com/wp-content/uploads/2021/07/Qodana-1.svg\" alt=\"Qodana logo\"/\u003e\n                                                                                                \n                                                                                    \u003c/a\u003e\n                                                    \u003cp\u003eThe code quality platform for teams\u003c/p\u003e\n                                            \u003c/div\u003e\n                            \u003csection data-clarity-region=\"article\"\u003e\n                \u003cdiv\u003e\n                    \t\t\t\t\u003cp\u003e\u003ca href=\"https://blog.jetbrains.com/qodana/category/opinion/\"\u003eOpinion\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"major-updates\"\u003eLeadership insights on Managing Code Quality Conflict\u003c/h2\u003e                    \n                    \n\u003cfigure\u003e\u003cimg decoding=\"async\" fetchpriority=\"high\" width=\"1672\" height=\"1218\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/02/Screenshot-2025-02-04-at-17.39.12.png\" alt=\"\"/\u003e\u003cfigcaption\u003eDevelopment Lead in Kotlin Compiler, Simon Ogorodnik. \u003c/figcaption\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eThe competitive nature of today’s digital business environment makes it critical for software development teams to embrace change, especially if it leads to improved software quality and efficiency. As a manager or team lead, your leadership plays a role in guiding your team through these metamorphoses.\u003c/p\u003e\n\n\n\n\u003cp\u003eAt \u003ca href=\"http://www.qodana.com\" target=\"_blank\" rel=\"noopener\"\u003eQodana\u003c/a\u003e, we’re all about code quality and security for teams, so in this installment of our Leadership Series, we will explore the intricacies of implementing new tools that can help with this. We will also look at how to overcome the professional challenges that come with process improvement and managing change. \u003c/p\u003e\n\n\n\n\u003cp\u003eJoining us to share their insights are Team Lead in Kotlin Build Infrastructure \u003ca href=\"https://www.linkedin.com/in/nikolay-krasko/\" target=\"_blank\" rel=\"noopener\"\u003eNikolay Krasko\u003c/a\u003e and Development Lead in Kotlin Compiler \u003ca href=\"https://www.linkedin.com/in/simon-o-715656b7/\" target=\"_blank\" rel=\"noopener\"\u003eSimon Ogorodnik\u003c/a\u003e. \u003c/p\u003e\n\n\n\n\u003chr/\u003e\n\n\n\n\u003ch2 id=\"importance-of-quality-and-process-improvement\"\u003eImportance of quality and process improvement\u003c/h2\u003e\n\n\n\n\u003cp\u003eThe first step in driving quality improvement is recognizing the significance of creating superior products or services. Quality boosts customer satisfaction, enhances your company’s reputation, and gives your business a competitive edge. Similarly, well-defined processes lead to increased efficiency and productivity, paving the way for superior performance and growth.\u003c/p\u003e\n\n\n\n\u003cp\u003eAccording to the \u003ca href=\"https://sloanreview.mit.edu/subscribe/?utm_source=googleads\u0026amp;utm_medium=adv\u0026amp;utm_campaign=MITSMR%20-%20Brand%20-%20Domestic%20-%20Phrase\u0026amp;gad_source=1\u0026amp;gclid=CjwKCAjw-O6zBhASEiwAOHeGxZjMA5aqzUwAck2uIICxglYwjt2NyEKAUsntFlAyVHNhmyMyEj96eRoCWNwQAvD_BwE\u0026amp;offer_id=AdvStd\u0026amp;tpcc=AdvStdSub\" target=\"_blank\" rel=\"noopener\"\u003eMIT Sloan Management Review\u003c/a\u003e, “Having fewer defects or field failures results in lower manufacturing and service costs. As long as these gains exceed any increase in expenditures by the firm on defect prevention, profitability will improve.”\u003c/p\u003e\n\n\n\n\u003cp\u003eHowever, process management, new tools, and changes are often required to achieve better quality, and software development teams are not always open to change. \u003c/p\u003e\n\n\n\n\u003ch2 id=\"defining-and-identifying-the-problem\"\u003eDefining and identifying the problem\u003c/h2\u003e\n\n\n\n\u003cp\u003eAs an example, take a look at this Reddit post and its upvotes to see how championing new tools and emphasizing code quality can be a challenge. \u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXcdUZ6mTUzo-XRyp-pp44h-F8JZsfKnYZov-M123B4hKKc1HWoDWp11Mzjdu1dMW1Ue-b30xW-nkFXc_SeKuPu1rUb0H37rbmcBEMbGpF3CiqyLsuURVSDGbjD_6lTrwO4lD49lHgWm_VqSlrjehVeOZGE?key=uiM_Y-nGXDYJ5Ym3gGKEKA\" alt=\"Managing conflict in software development teams. \"/\u003e\u003cfigcaption\u003eProblem example.  \u003c/figcaption\u003e\u003c/figure\u003e\n\n\n\n\u003ch3 id=\"how-can-this-developer-and-others-address-this\"\u003eHow can this developer, and others, address this? \u003c/h3\u003e\n\n\n\n\u003cp\u003e“I would say that it depends a lot on their code review practice. Do they have to fix review suggestions before merging, for example? It also depends on the type of project that they are working on. But if they are trying to raise the bar here, I would first talk with the team lead or tech lead to acknowledge the problem and find a solution. These discussions can also be had in the reviews, not just in the comments,” says Development Lead in Kotlin Compiler, Simon Ogorodnik. \u003c/p\u003e\n\n\n\n\u003cp\u003e“If the team, team lead, tech lead, architect, and CTO don’t care, then it will be nearly impossible – but if they do, there’s room to start the conversation with the team.” \u003c/p\u003e\n\n\n\n\u003ch3 id=\"kotlins-experience\"\u003eKotlin’s experience\u003c/h3\u003e\n\n\n\n\u003cp\u003e“We’ve always cared about code quality, but one of the first challenges we faced was getting enough data to make an educated decision about which tools to integrate into our stack. We identified the problem that we weren’t working as a team and needed stricter quality rules, but then we needed to gather information from different stakeholders, team leads, and developers. Understandably, our team needed to see a lot of value in a solution in order to advocate for it – and this can be a major hurdle,” says Simon. \u003c/p\u003e\n\n\n\n\u003cp\u003e“You can’t measure something you don’t understand in detail because once you have asserted there’s a problem, there are many potential solutions. You need to be able to summarize, view, and present data on why this change will fix something and not introduce unnecessary problems,” adds Team Lead in Kotlin Build Infrastructure, Nikolay Krasko. \u003c/p\u003e\n\n\n\n\u003cp\u003e“First, identify the problem, the fears, and the concerns. Then come the hard questions like if it’s really a problem or whether there are key people who aren’t on board. Does everyone agree it’s the highest priority problem? Often they don’t. Then we have to say, ‘I have this solution. Can you explain why you don’t like it, and do you see other solutions?’ In the end, you either get a better solution or points that challenge your beliefs.” \u003c/p\u003e\n\n\n\n\u003cp\u003eHowever, these conversations can also be difficult. With this in mind, the first step is to provide comprehensive data to your team to open the discussion and start generating internal buy-in. However, this works on the assumption that you have already made an autonomous decision or have a bias. \u003c/p\u003e\n\n\n\n\u003ch3 id=\"question-your-own-biases-and-assumptions\"\u003eQuestion your own biases and assumptions\u003c/h3\u003e\n\n\n\n\u003cp\u003eThis is another important part of introducing a change, with the help of your team. \u003c/p\u003e\n\n\n\n\u003cp\u003e“You should avoid an authoritarian style,” says Simon when asked about what happens when teammates don’t agree, “It works to make a change in the short term, but you still need to provide some reasoning. Saying ‘We hired an external auditor who said our practice is bad, so now we are getting a new tool’ won’t cut it. People won’t buy into things just because you tell them to.” \u003c/p\u003e\n\n\n\n\u003cp\u003e“It would be easier if there is one decision-maker who’s going to say, ‘I know what I’m doing, I’ve got this, let’s go.’ But we need to convince a lot of people sometimes and this is hard,” says Nikolay, also erring towards a more \u003ca href=\"https://www.business.com/articles/business-decision-making-gut-instinct-or-hard-data/\" target=\"_blank\" rel=\"noopener\"\u003eevidence-based decision-making\u003c/a\u003e style. \u003c/p\u003e\n\n\n\n\u003cp\u003e“Saying ‘We hired an external auditor who said our practice is bad, so now we are getting a new tool’ isn’t a good idea.”\u003c/p\u003e\n\n\n\n\u003ch3 id=\"embracing-new-technology-with-an-open-mind\"\u003eEmbracing new technology with an open mind\u003c/h3\u003e\n\n\n\n\u003cp\u003eIt’s clear that change is often met with resistance, but as a leader, your role is to turn this challenge into an opportunity. Successful change management requires clear communication, employee involvement, effective training, time management, and patience. Taking these steps reduces anxiety, fosters open dialogue, and encourages employee buy-in and new perspectives. \u003c/p\u003e\n\n\n\n\u003ch3 id=\"how-do-you-deal-with-detractors-and-those-against-proposed-changes\"\u003eHow do you deal with detractors and those against proposed changes?\u003c/h3\u003e\n\n\n\n\u003cp\u003eAn important point to consider is that teammates with opposing views are not necessarily wrong. This is not a revolutionary concept, but sometimes leaders must check their egos to gather useful information that could benefit them in the long term. That said, stakeholders can typically be divided into supporters and detractors – and both groups have something valuable to offer. \u003c/p\u003e\n\n\n\n\u003cp\u003e“Speak to people who don’t like the change,” says Nikolay, “you might identify a misunderstanding. Perhaps it’s not the tool or the change they are opposed to, but maybe they are scared of doing more work or losing their position. By opening up the floor to these perspectives, you can get to the root reasons for the resistance. \u003c/p\u003e\n\n\n\n\u003cp\u003eMaybe someone will tell me, ‘I don’t want it because it promotes architectural patterns I don’t like,’ but the core fear is additional tasks or complexity, or becoming redundant themselves.” \u003c/p\u003e\n\n\n\n\u003cp\u003eOn the other hand, both Nikolay and Simon agree that it is important to share the perspectives of supporters. “I’m not going to talk only with people who are against it, but I also want to understand those who are for the change. There will be some who are strictly pro. \u003c/p\u003e\n\n\n\n\u003cp\u003eUsing Qodana as an example, maybe they came from another company where they had static analysis tools, and they used Qodana and liked it. This will help to share the vision and convert people who are neutral one way or the other,” says Simon. \u003c/p\u003e\n\n\n\n\u003ch3 id=\"guiding-your-team-through-the-implementation-of-quality-processes\"\u003eGuiding your team through the implementation of quality processes\u003c/h3\u003e\n\n\n\n\u003cp\u003eTransforming your team’s way of working comes with challenges, but a leader guides, not dictates. Let your team in on why these changes are happening and how they can contribute to the overall success and quality improvement.\u003c/p\u003e\n\n\n\n\u003cp\u003e“With stakeholder management, you can’t always ask everybody,” says Simon, “It would be great, but it wouldn’t work in the scope of 100 people, for example. For that, I would try to gather a representative working group of people who will be stakeholders or those with strong opinions.”\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" width=\"1010\" height=\"706\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/02/Screenshot-2025-02-04-at-18.02.22.png\" alt=\"\"/\u003e\u003cfigcaption\u003eTeam Lead in Kotlin Build Infrastructure Nikolay Krasko. \u003c/figcaption\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eNikolay adds, “For smaller teams, it’s not a big deal to just talk with everybody. Bring it up in a team meeting and say okay, here it is. We have our quality level and our number of regressions. Maybe the QA team will be happy about that. \u003c/p\u003e\n\n\n\n\u003cp\u003eIt would be nice to detect problems automatically and for your tech lead to say, ‘We are not going to push those strange patterns into production anymore. I need those static checkers so I can stop constantly mentioning the same issues during the code review. I’m tired and want to free myself from that.’ Choose people who have strong opinions and authority.” \u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003eIn summary:\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eExplain clearly why changes are necessary and how they can improve quality and efficiency. \u003c/li\u003e\n\n\n\n\u003cli\u003eSeek your team’s input during the decision-making process and make them feel involved. \u003c/li\u003e\n\n\n\n\u003cli\u003eOffer training that will equip your team with the necessary skills and knowledge to adapt to new quality processes.\u003c/li\u003e\n\n\n\n\u003cli\u003eRegularly track your progress using key performance indicators (KPIs) to identify what’s working and what could be improved.\u003c/li\u003e\n\n\n\n\u003cli\u003eCelebrate small victories along the way and acknowledge those who are driving the change.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eThere is also another important point: Ease the burden of change with small, incremental adjustments. \u003c/p\u003e\n\n\n\n\u003cp\u003e“If it’s a gradual change and initial processes aren’t deeply affected, it may be a better strategy to introduce it in stages. You don’t need to uproot everything before you get some traction and adoption. Do this gradually and you’ll have a new baseline and support from your team members who enjoy it. This is one of the most natural ways to introduce any new technology,” says Nikolay.\u003c/p\u003e\n\n\n\n\u003cp\u003e“I think that way of managing change should be an industry standard,” Simon adds, “If you’ve read \u003ca href=\"https://www.amazon.de/Leading-Change-New-Preface-Author/dp/1422186431/ref=asc_df_1422186431/?tag=googshopde-21\u0026amp;linkCode=df0\u0026amp;hvadid=696222582678\u0026amp;hvpos=\u0026amp;hvnetw=g\u0026amp;hvrand=7330601731870173108\u0026amp;hvpone=\u0026amp;hvptwo=\u0026amp;hvqmt=\u0026amp;hvdev=c\u0026amp;hvdvcmdl=\u0026amp;hvlocint=\u0026amp;hvlocphy=9061163\u0026amp;hvtargid=pla-404766147559\u0026amp;psc=1\u0026amp;mcid=4bec22e111c83e70bd2725335460ea5e\u0026amp;th=1\u0026amp;psc=1\u0026amp;gad_source=1\" target=\"_blank\" rel=\"noopener\"\u003eLeading Change\u003c/a\u003e, it will tell you similar things. I presume that at least for most large companies, it’s the default way of doing things. It’s the same values that Agile and chaos engineering promote.”\u003c/p\u003e\n\n\n\n\u003cp\u003e“If it’s a gradual change and initial processes aren’t deeply affected, it may be a better strategy to introduce it in stages. You don’t need to uproot everything before you get some traction and adoption.”\u003c/p\u003e\n\n\n\n\u003ch3 id=\"leading-quality-improvement\"\u003eLeading quality improvement \u003c/h3\u003e\n\n\n\n\u003cp\u003eImproving quality and refining processes in your organization is neither a quick nor solitary task but one that requires collective effort, patience, and strong leadership. As a leader, your attitude towards change will significantly influence how your team adapts. Keep communication transparent, involve your team in decision-making, and remember to acknowledge their efforts – it’s these subtle actions that make a big difference. \u003c/p\u003e\n\n\n\n\u003cp\u003eQuality improvements and process upgrades are vital for business success, and with effective leadership and a committed team, your quality upgrade will not only be possible but will also become a key driver of your future growth.\u003c/p\u003e\n\n\n\n\u003ch2 id=\"final-words-on-managing-conflict\"\u003eFinal words on managing conflict\u003c/h2\u003e\n\n\n\n\u003cp\u003eFrom Simon: “Don’t take change management as a black-and-white thing. You’re going to end up in a gray area, you’re going to implement it halfway, and you can sell it like that as well. You can say, ‘Let’s just give it a try and see how it goes, and if it doesn’t work, let’s try again and try something else,’ so that people don’t feel like it’s so extreme. It’s an iterative process.”\u003c/p\u003e\n\n\n\n\u003cp\u003eFrom Nikolay: “In general, speak to business goals. People usually understand this, as they are a strong motivator, and if it’s justified by data, it can be a powerful driver for change. \u003c/p\u003e\n\n\n\n\u003cp\u003eNothing works exactly as it’s intended. You will always find flaws and bugs, and you need to adjust. It’s better to anticipate the evolution process right from the beginning to make it easier to commit to changes.” \u003c/p\u003e\n\n\n\n\u003ch3 id=\"tell-us-what-youd-like-to-see\"\u003eTell us what you’d like to see\u003c/h3\u003e\n\n\n\n\u003cp\u003eThanks for joining us for the Qodana Leadership Series, which aims to create discussions about real-world problems facing quality-focused leaders in software development and AI. Let us know which topics interest you the most in the comments, and we will invite experts to weigh in. If you’d like to know more about \u003ca href=\"https://www.jetbrains.com/qodana/features/#:~:text=Qodana%20scans%20your%20project\u0026#39;s%20dependencies,interface%20and%20in%20the%20IDE.\" target=\"_blank\" rel=\"noopener\"\u003eQodana for code quality\u003c/a\u003e improvement and compliance in teams, take a look at \u003ca href=\"http://www.qodana.com\" target=\"_blank\" rel=\"noopener\"\u003eour website\u003c/a\u003e. Special thanks to Nikolay and Simon from \u003ca href=\"https://kotlinlang.org/\" target=\"_blank\" rel=\"noopener\"\u003eKotlin\u003c/a\u003e for their participation!\u003c/p\u003e\n\n\n\n\u003ch3\u003eAbout our participants\u003c/h3\u003e\n\n\n\n\u003ch4\u003eSimon Ogorodnik\u003c/h4\u003e\n\n\n\n\u003cp\u003e\u003ca href=\"https://www.linkedin.com/in/simon-o-715656b7/\" target=\"_blank\" rel=\"noopener\"\u003eSimon\u003c/a\u003e is a Development Lead from the Kotlin Compiler who enjoys talking about performance, code quality, compiler architectures, and project management. Now, he is trying to find the best ramen restaurant in Amsterdam and wondering how AI will challenge the code quality landscape. When he’s not sitting in a meeting or at coffee-point, you can find him kitesurfing or just relkaxing at home. \u003c/p\u003e\n\n\n\n\u003ch4\u003eNikolai Krasko\u003c/h4\u003e\n\n\n\n\u003cp\u003e\u003ca href=\"https://www.linkedin.com/in/nikolay-krasko/?originalSubdomain=nl\" target=\"_blank\" rel=\"noopener\"\u003eNikolai\u003c/a\u003e is a Team Lead of the Kotlin Infrastructure team who enjoys finding small changes in the development process that make a big difference in productivity. He loves playing guitar and exploring new technologies. When he is not figuring out how to make things work better without breaking other things along the way at work, you can find him playing with his kids, reading books, or playing computer games.\u003c/p\u003e\n\n\n\n\u003ch3 id=\"whats-next\"\u003eWhat’s next?\u003c/h3\u003e\n\n\n\n\u003cfigure\u003e\u003ca href=\"https://blog.jetbrains.com/qodana/2024/07/leadership-code-quality/\"\u003e\u003cimg decoding=\"async\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXexHe6V4WNbTd40SR9TIzZjmFOVo-5n8aAAbHk8nHHLFtYqx8Fbnna6FTu2mp8YYnpNY1Sz8KVotwTbrQPy_BejTe0lUJmgW6USRfyOFFWt5NDJ7nrlm3z8xjqW8HYXaFBUelUcPghM-TtJIjE8VKsjwlM?key=uiM_Y-nGXDYJ5Ym3gGKEKA\" alt=\"\"/\u003e\u003c/a\u003e\u003c/figure\u003e\n                    \n                                                                                                                                                                                                                            \u003cdiv\u003e\n                                \u003cdiv\u003e\n                                                                            \u003ch4\u003eSubscribe to Qodana Blog updates\u003c/h4\u003e\n                                                                                                            \n                                \u003c/div\u003e\n                                \n                                \u003cp\u003e\u003cimg src=\"https://blog.jetbrains.com/wp-content/themes/jetbrains/assets/img/img-form.svg\" alt=\"image description\"/\u003e\n                                                                    \u003c/p\u003e\n                            \u003c/div\u003e\n                                                            \u003c/div\u003e\n                \u003ca href=\"#\"\u003e\u003c/a\u003e\n                \n                \n            \u003c/section\u003e\n                    \u003cdiv\u003e\n                \u003cp\u003e\n                    \u003ch2\u003eDiscover more\u003c/h2\u003e\n                \u003c/p\u003e\n                \n            \u003c/div\u003e\n                \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "15 min read",
  "publishedTime": null,
  "modifiedTime": null
}
