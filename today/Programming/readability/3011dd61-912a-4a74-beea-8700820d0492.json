{
  "id": "3011dd61-912a-4a74-beea-8700820d0492",
  "title": "",
  "link": "http://scripting.com/2025/04/08.html#a160945",
  "description": "Today's song: Come on Eileen.",
  "author": "",
  "published": "Tue, 08 Apr 2025 16:09:45 GMT",
  "source": "http://scripting.com/rss.xml",
  "categories": null,
  "byline": "",
  "length": 3883,
  "excerpt": "Dave Winer, OG blogger, podcaster, developed first apps in many categories. Old enough to know better. It's even worse than it appears.",
  "siteName": "Scripting News",
  "favicon": "",
  "text": "It's even worse than it appears.. I believe that eventually WordPress will be the hub for writers the way the web itself became the the hub for apps. Initially, the web wasn’t the best place to host apps, the Mac had a much more developed set of meaningful features for app devs, and we already knew the Mac APIs where the web was strange and incomplete. # Yet most of the energy in AppLand quickly shifted to the web because of three advantages it had: # Anyone could publish for it, there was no platform vendor.# The networking model was open and simple, where the Mac's was hidden behind incomplete and poorly written docs. # The Mac's networking only worked on the Mac at a time when Windows was becoming dominant, and the web offered simplicity that neither platform could match.# The web made writing network apps a joy, where the Mac made it a slog. No matter how much time you spent developing, it never resulted in success. # There was no question for me when I saw the web, I had to be there.# Substack and Ghost are like Mac and Windows at the dawn of the web. Their big mistake imho is they weren’t built on WordPress, which can and should imho serve as the base platform for writing on the web. If an ecosystem of writing tools is built on the Wordpress foundation how could silo’d writing tools hope to compete? # If you question the choice of Wordpress, what would you go with in its place? I argue that whatever it is, it would work much like Wordpress, which has a 20+ year head start, is stable, scales, is widely supported, and open source, so if you don't like the company behind it, you can choose not to use their distribution.# With WordLand we are testing the water hopefully proving that it is possible to create a functional writing environment on the WordPress foundation. Why is that such an advantage? Because, like the word processing products of the 80s on various OSes, these apps should be able to share data. One day you may feel like writing something with WordLand and a few days later you might want to try editing the same document using a different editing tool. As long as they both ingest and emit Markdown, they should have no trouble editing each others' documents. This is where the benefit of a common platform becomes insurmountable, because the silos insist you use their editor and only their editor and an open platform with open data formats lets you move between apps that interop. There’s a reason so many word processors thrived in the 80s, because the needs and tastes of writers vary so much, and technically it was possible to move data around in an ad hoc way.# Until WordLand, tools for writers on the Wordpress platform were practically nonexistent. I think that can change now, because the middleware that connects WordLand to Wordpress is both easy to understand, for developers, and open source under the most liberal license. Any app that connects with Wordpress through this API will interop with WordLand so totally that it could replace WordLand. # I would be happy if WordLand played the role of MacWrite in the Mac ecosystem of the 80s. At the outset it was the only writing tool for the Mac, and set the usability pattern for all that followed. As a result the Mac platform, even though initially its appeal was mainly to developers and designers, quickly boomed as a writer's platform. I strongly believe Wordpress has this potential. # I think writers need the same variety and open possibilities as developers, and the existing writer's systems are not offering that choice. I believe this is the start of the writers web, that should, if we do it right, and if my intuition is correct, grow like the web itself at inception. My bet is that an expansive approach will yield far more creativity in a very important area, writing, and should quickly become the place writers want to be.#",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"idPageTopText\"\u003e\n\t\n\t\u003cp\u003eIt\u0026#39;s even worse than it appears..\u003c/p\u003e\n\t\u003c/div\u003e\u003cdiv id=\"idDayContainer\"\u003e\n\t\n\t\u003cul\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a221114\"\u003e\u003c/a\u003eI believe that eventually WordPress will be the hub for writers the way the web itself became the the hub for apps. Initially, the web wasn’t the best place to host apps, the Mac had a much more developed set of meaningful features for app devs, and we already knew the Mac APIs where the web was strange and incomplete. \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/04/08/220456.html#a221114\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flnumberedsubs=\"true\" data-flincalendar=\"true\"\u003e\u003ca name=\"a220506\"\u003e\u003c/a\u003eYet most of the energy in AppLand quickly shifted to the web because of three advantages it had:  \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/04/08/220456.html#a220506\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cul\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a220510\"\u003e\u003c/a\u003eAnyone could publish for it, there was no platform vendor.\u003cspan\u003e\u003ca href=\"http://scripting.com/2025/04/08/220456.html#a220510\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a220531\"\u003e\u003c/a\u003eThe networking model was open and simple, where the Mac\u0026#39;s was hidden behind incomplete and poorly written docs. \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/04/08/220456.html#a220531\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a220511\"\u003e\u003c/a\u003eThe Mac\u0026#39;s networking only worked on the Mac at a time when Windows was becoming dominant, and the web offered simplicity that neither platform could match.\u003cspan\u003e\u003ca href=\"http://scripting.com/2025/04/08/220456.html#a220511\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003c/ul\u003e\n\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"aNaNNaNNaN\"\u003e\u003c/a\u003eThe web made writing network apps a joy, where the Mac made it a slog. No matter how much time you spent developing, it never resulted in success. \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/04/08/220456.html#aNaNNaNNaN\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"aNaNNaNNaN\"\u003e\u003c/a\u003eThere was no question for me when I saw the web, I had to be there.\u003cspan\u003e\u003ca href=\"http://scripting.com/2025/04/08/220456.html#aNaNNaNNaN\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"aNaNNaNNaN\"\u003e\u003c/a\u003eSubstack and Ghost are like Mac and Windows at the dawn of the web. Their big mistake imho is they weren’t built on WordPress, which can and should imho serve as the base platform for writing on the web. If an ecosystem of writing tools is built on the Wordpress foundation how could silo’d writing tools hope to compete? \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/04/08/220456.html#aNaNNaNNaN\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"aNaNNaNNaN\"\u003e\u003c/a\u003eIf you question the choice of Wordpress, what would you go with in its place? I argue that whatever it is, it would work much like Wordpress, which has a 20+ year head start, is stable, scales, is widely supported, and open source, so if you don\u0026#39;t like the company behind it, you can choose not to use their distribution.\u003cspan\u003e\u003ca href=\"http://scripting.com/2025/04/08/220456.html#aNaNNaNNaN\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"aNaNNaNNaN\"\u003e\u003c/a\u003eWith WordLand we are testing the water hopefully proving that it is possible to create a functional writing environment on the WordPress foundation. Why is that such an advantage? Because, like the word processing products of the 80s on various OSes, these apps should be able to share data. One day you may feel like writing something with WordLand and a few days later you might want to try editing the same document using a different editing tool. As long as they both ingest and emit Markdown, they should have no trouble editing each others\u0026#39; documents. This is where the benefit of a common platform becomes insurmountable, because the silos insist you use their editor and only their editor and an open platform with open data formats lets you move between apps that interop. There’s a reason so many word processors thrived in the 80s, because the needs and tastes of writers vary so much, and technically it was possible to move data around in an ad hoc way.\u003cspan\u003e\u003ca href=\"http://scripting.com/2025/04/08/220456.html#aNaNNaNNaN\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a220617\"\u003e\u003c/a\u003eUntil WordLand, tools for writers on the Wordpress platform were practically nonexistent. I think that can change now, because the \u003ca href=\"https://github.com/scripting/wpIdentity\"\u003emiddleware\u003c/a\u003e that connects WordLand to Wordpress is both easy to understand, for developers, and open source under the most liberal license. Any app that connects with Wordpress through this API will interop with WordLand so totally that it could replace WordLand. \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/04/08/220456.html#a220617\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"a220641\"\u003e\u003c/a\u003eI would be happy if WordLand played the role of \u003ca href=\"https://en.wikipedia.org/wiki/MacWrite\"\u003eMacWrite\u003c/a\u003e in the Mac ecosystem of the 80s. At the outset it was the only writing tool for the Mac, and set the usability pattern for all that followed. As a result the Mac platform, even though initially its appeal was mainly to developers and designers, quickly boomed as a writer\u0026#39;s platform. I strongly believe Wordpress has this potential. \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/04/08/220456.html#a220641\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003cli data-flincalendar=\"true\"\u003e\u003ca name=\"aNaNNaNNaN\"\u003e\u003c/a\u003eI think writers need the same variety and open possibilities as developers, and the existing writer\u0026#39;s systems are not offering that choice. I believe this is the start of the writers web, that should, if we do it right, and if my intuition is correct, grow like the web itself at inception. My bet is that an expansive approach will yield far more creativity in a very important area, writing, and should quickly become the place writers want to be.\u003cspan\u003e\u003ca href=\"http://scripting.com/2025/04/08/220456.html#aNaNNaNNaN\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/li\u003e\n\t\u003c/ul\u003e\n\n\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": null,
  "modifiedTime": null
}
