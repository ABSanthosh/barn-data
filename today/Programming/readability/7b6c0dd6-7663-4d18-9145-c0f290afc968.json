{
  "id": "7b6c0dd6-7663-4d18-9145-c0f290afc968",
  "title": "Google Introduces Gemini AI Features to Android Studio",
  "link": "https://www.infoq.com/news/2024/11/android-gemini/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "Google has released a set of updates to Gemini in Android Studio, aiming to enhance the developer productivity through AI-powered features. This release is designed to bring AI to every stage of the development lifecycle, such as AI-assisted coding, refactoring, generating documentation, analyzing and test code, and suggesting fixes. By Diogo Carleto",
  "author": "Diogo Carleto",
  "published": "Mon, 18 Nov 2024 15:00:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Android",
    "Java",
    "Kotlin",
    "Gemini",
    "AI, ML \u0026 Data Engineering",
    "Development",
    "news"
  ],
  "byline": "Diogo Carleto",
  "length": 4298,
  "excerpt": "Google has released a set of updates to Gemini in Android Studio, aiming to enhance the developer productivity through AI-powered features. This release is designed to bring AI to every stage of the d",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s2_20241112123203/apple-touch-icon.png",
  "text": "Google has released a set of updates to Gemini in Android Studio, aiming to enhance the developer productivity through AI-powered features. This release is designed to bring AI to every stage of the development lifecycle, such as AI-assisted coding, refactoring, generating documentation, analyzing and test code, and suggesting fixes. Gemini now allows developers to prompt from the code editor for code suggestions to modify, optimize, or even add code. (image taken from android developers blog) To see an input field for the prompt, developers have some possibilities: right click in the code editor and select Gemini \u003e Generate code from the context menu; or highlight code desidered to Gemini to modify, right-click in the code editor, and select Gemini \u003e Transform code from the context menu; or press CTRL+\\ (Command+\\ on macOS). After prompting Gemini with a description of what is desired to modify/add, Gemini will process the request and show a code diff, so the developer can decide to refine and try a new prompt or just accept all changes. AI code completion of code is now available in Android Studio; this feature aims to save time and let developers complete coding faster by suggesting full functions. It is important to note that when AI code completion is enabled, Gemini might send additional information to provide context to the LLM, such as pieces of code, file types and other necessary information to provide more relevant suggestions. To get started with AI code completion in the latest version of Android Studio Jellyfish or higher, open an Android Studio project and click View \u003e Tool Windows \u003e Gemini, sign into the Google account and allow Gemini to access context from the codebase. This can be done any time through Android Studio \u003e Settings \u003e Gemini \u003e Augment responses with information from your codebase. Now developers can enhance code organization with AI-powered refactoring and documentation features. Let's take a look at: Documentation Generation: allow generating documentation drafts for functions by selecting a snippet, right-clicking, and selecting Gemini \u003e Document Function. Gemini provides suggestions that can be applied or refined. Intelligent Renaming: Gemini offers context-aware suggestions for variable names, classes, and methods to maintain consistency throughout the project when using Refactor \u003e Rename action. Variable Name Refinement: based on the code context, Gemini can suggest names for variables or methods, aiming to make the names more intuitive and descriptive. It is accessible by right-clicking in the editor and selecting Gemini \u003e Rethink variable names. Commit Message Suggestions: Gemini can generate commit messages based on context from the code changes in the current commit and recent past commits to suggest a detailed commit message. Click the Suggest commit message button in the Commit tool window to receive context-relevant commit messages. Developers can use Gemini to analyze apps crash reports, generate insights, provide a crash summary, and when possible recommend next steps, including sample code and providing guidance and links to relevant documentation. The crashes reported by Android Vitals and Firebase Crashlytics can be analyzed into the IDE's App Quality Insights tool window. When writing unit tests for an app, Gemini can suggest test scenarios using the context of the code. During the generation of unit test scenarios, Gemini includes detailed names and descriptions for the tests, aiming to improve the understanding of each suggested test. By now the developer still needs to implement the test behavior itself. To generate unit test scenarios the developer just needs to right-click on a class and select Gemini \u003e Unit test scenarios. According to Google, Android Studio does not send source code to servers without user consent, ensuring privacy and security. Developers can opt-in to enable Gemini's features and have control over their data. Google states it is committed to the responsible use of AI. More details about Gemini features in Android Studio can be found in the Android developers blog. About the Author Diogo Carleto",
  "image": "https://res.infoq.com/news/2024/11/android-gemini/en/headerimage/generatedHeaderImage-1731939880495.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eGoogle has \u003ca href=\"https://android-developers.googleblog.com/2024/10/whats-new-in-gemini-in-android.html\"\u003ereleased\u003c/a\u003e a set of updates to Gemini in Android Studio, aiming to enhance the developer productivity through AI-powered features. This release is designed to bring AI to every stage of the development lifecycle, such as AI-assisted coding, refactoring, generating documentation, analyzing and test code, and suggesting fixes.\u003c/p\u003e\n\n\u003cp\u003eGemini now allows developers to prompt from the code editor for code suggestions to modify, optimize, or even add code.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"\" data-src=\"news/2024/11/android-gemini/en/resources/image3-1731938990286.png\" rel=\"\" share\"\"=\"\" share=\"\" src=\"https://imgopt.infoq.com/fit-in/3000x4000/filters:quality(85)/filters:no_upscale()/news/2024/11/android-gemini/en/resources/image3-1731938990286.png\"/\u003e\u003c/p\u003e\n\n\u003cp\u003e(image taken from \u003ca href=\"https://android-developers.googleblog.com/2024/10/whats-new-in-gemini-in-android.html\"\u003eandroid developers blog\u003c/a\u003e)\u003c/p\u003e\n\n\u003cp\u003eTo see an input field for the prompt, developers have some possibilities: right click in the code editor and select \u003cstrong\u003eGemini \u0026gt; Generate code\u003c/strong\u003e from the context menu; or highlight code desidered to Gemini to modify, right-click in the code editor, and select \u003cstrong\u003eGemini \u0026gt; Transform code\u003c/strong\u003e from the context menu; or press CTRL+\\ (Command+\\ on macOS). After prompting Gemini with a description of what is desired to modify/add, Gemini will process the request and show a code diff, so the developer can decide to \u003cem\u003erefine\u003c/em\u003e and try a new prompt or just accept all changes.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eAI code completion\u003c/em\u003e of code is now available in Android Studio; this feature aims to save time and let developers complete coding faster by suggesting full functions. It is important to note that when AI code completion is enabled, Gemini might send additional information to provide context to the LLM, such as pieces of code, file types and other necessary information to provide more relevant suggestions.\u003c/p\u003e\n\n\u003cp\u003eTo get started with \u003cem\u003eAI code completion\u003c/em\u003e in the latest version of \u003ca href=\"https://developer.android.com/studio/preview\"\u003eAndroid Studio Jellyfish\u003c/a\u003e or higher, open an Android Studio project and click \u003cstrong\u003eView \u0026gt; Tool Windows \u0026gt; Gemini\u003c/strong\u003e, sign into the Google account and allow Gemini to access context from the codebase. This can be done any time through \u003cstrong\u003eAndroid Studio \u0026gt; Settings \u0026gt; Gemini \u0026gt; Augment responses with information from your codebase\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eNow developers can enhance code organization with AI-powered refactoring and documentation features. Let\u0026#39;s take a look at:\u003c/p\u003e\n\n\u003cul\u003e\n\t\u003cli\u003eDocumentation Generation: allow generating documentation drafts for functions by selecting a snippet, right-clicking, and selecting \u003cstrong\u003eGemini \u0026gt; Document Function\u003c/strong\u003e. Gemini provides suggestions that can be applied or refined.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cimg alt=\"\" data-src=\"news/2024/11/android-gemini/en/resources/image1-1731938990286.png\" rel=\"\" share\"\"=\"\" share=\"\" src=\"https://imgopt.infoq.com/fit-in/3000x4000/filters:quality(85)/filters:no_upscale()/news/2024/11/android-gemini/en/resources/image1-1731938990286.png\"/\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\t\u003cli\u003eIntelligent Renaming: Gemini offers context-aware suggestions for variable names, classes, and methods to maintain consistency throughout the project when using \u003cstrong\u003eRefactor \u0026gt; Rename\u003c/strong\u003e action.\u003c/li\u003e\n\t\u003cli\u003eVariable Name Refinement: based on the code context, Gemini can suggest names for variables or methods, aiming to make the names more intuitive and descriptive. It is accessible by right-clicking in the editor and selecting \u003cstrong\u003eGemini \u0026gt; Rethink variable names\u003c/strong\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cimg alt=\"\" data-src=\"news/2024/11/android-gemini/en/resources/image4-1731938990286.png\" rel=\"\" share\"\"=\"\" share=\"\" src=\"https://imgopt.infoq.com/fit-in/3000x4000/filters:quality(85)/filters:no_upscale()/news/2024/11/android-gemini/en/resources/image4-1731938990286.png\"/\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\t\u003cli\u003eCommit Message Suggestions: Gemini can generate commit messages based on context from the code changes in the current commit and recent past commits to suggest a detailed commit message. Click the \u003cstrong\u003eSuggest commit message\u003c/strong\u003e button in the \u003cstrong\u003eCommit\u003c/strong\u003e tool window to receive context-relevant commit messages.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eDevelopers can use Gemini to analyze apps crash reports, generate insights, provide a crash summary, and when possible recommend next steps, including sample code and providing guidance and links to relevant documentation. The crashes reported by Android Vitals and Firebase Crashlytics can be analyzed into the IDE\u0026#39;s App Quality Insights tool window.\u003c/p\u003e\n\n\u003cp\u003eWhen writing unit tests for an app, Gemini can suggest test scenarios using the context of the code. During the generation of unit test scenarios, Gemini includes detailed names and descriptions for the tests, aiming to improve the understanding of each suggested test. By now the developer still needs to implement the test behavior itself. To generate unit test scenarios the developer just needs to right-click on a class and select \u003cstrong\u003eGemini \u0026gt; Unit test scenarios\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"\" data-src=\"news/2024/11/android-gemini/en/resources/image2-1731938990286.png\" rel=\"\" share\"\"=\"\" share=\"\" src=\"https://imgopt.infoq.com/fit-in/3000x4000/filters:quality(85)/filters:no_upscale()/news/2024/11/android-gemini/en/resources/image2-1731938990286.png\"/\u003e\u003c/p\u003e\n\n\u003cp\u003eAccording to Google, Android Studio does not send source code to servers without user consent, ensuring privacy and security. Developers can opt-in to enable Gemini\u0026#39;s features and have control over their data. Google states it is committed to the\u003ca href=\"https://ai.google/responsibility/principles/\"\u003e responsible use of AI\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eMore details about Gemini features in Android Studio can be found in the \u003ca href=\"https://android-developers.googleblog.com/2024/10/whats-new-in-gemini-in-android.html/source=editors/usg=AOvVaw3lX_NIsAGcPZPACADwwVFN\"\u003eAndroid developers blog\u003c/a\u003e.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Diogo-Carleto\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eDiogo Carleto\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": "2024-11-18T00:00:00Z",
  "modifiedTime": null
}
