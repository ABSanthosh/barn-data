{
  "id": "d32e7d7f-7b30-494d-9c2f-f615cd492b6e",
  "title": "How to Defend Amazon S3 Buckets From Ransomware Exploiting SSE-C Encryption",
  "link": "https://www.infoq.com/news/2025/02/amazon-s3-ransomware/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "A new ransomware campaign, dubbed Codefinger, has been targeting Amazon S3 users by exploiting compromised AWS credentials to encrypt data using Server-Side Encryption with Customer-Provided Keys (SSE-C). Attackers then demand ransom payments for the symmetric AES-256 keys required to decrypt the data. AWS has released recommendations to help users mitigate the risk of ransomware attacks on S3. By Renato Losio",
  "author": "Renato Losio",
  "published": "Sun, 23 Feb 2025 08:59:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Encryption",
    "Cloud Security",
    "Cloud",
    "AWS",
    "S3",
    "Development",
    "news"
  ],
  "byline": "Renato Losio",
  "length": 3893,
  "excerpt": "A new ransomware campaign, dubbed Codefinger, has been targeting Amazon S3 users by exploiting compromised AWS credentials to encrypt data using Server-Side Encryption with Customer-Provided Keys (SSE",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s2_20250213201535/apple-touch-icon.png",
  "text": "A new ransomware campaign, dubbed Codefinger, has been targeting Amazon S3 users by exploiting compromised AWS credentials to encrypt data using Server-Side Encryption with Customer-Provided Keys (SSE-C). Attackers then demand ransom payments for the symmetric AES-256 keys required to decrypt the data. AWS has released recommendations to help users mitigate the risk of ransomware attacks on S3. All key management for S3 server-side encryption with SSE-C is handled outside of AWS, with encryption key material provided alongside the object, ensuring the cloud provider never stores the key material. Following Halcyon's report, AWS published an article clarifying how to prevent the unintended encryption of Amazon S3 objects. Steve de Vera, manager in the AWS Customer Incident Response Team, and Jennifer Paz, security engineer at AWS, explain: Working with customers, our security teams detected an increase of data encryption events in S3 that used an encryption method known as SSE-C. While this is a feature used by many customers, we detected a pattern where a large number of S3 CopyObject operations using SSE-C began to overwrite objects, which has the effect of re-encrypting customer data with a new encryption key. Our analysis uncovered that this was being done by malicious actors who had obtained valid customer credentials, and were using them to re-encrypt objects. Using publicly disclosed or compromised AWS keys, the threat actor identifies keys with permissions to execute s3:GetObject and s3:PutObject requests. The attacker can then initiate the encryption process by including the x-amz-server-side-encryption-customer-algorithm header, using an AES-256 encryption key that they generate and store locally. An S3 lifecycle rule is then applied to mark files for deletion within seven days, adding urgency to the ransom demand. The Halcyon RISE team explains why this poses a significant challenge: Unlike traditional ransomware that encrypts files locally or in transit, this attack integrates directly with AWS’s secure encryption infrastructure. Once encrypted, recovery is impossible without the attacker’s key. While these actions do not exploit a vulnerability in any AWS service, Reddit user Zenin highlights in a popular thread: The biggest threat here is really that the heavy lifting of encrypting the data can be offloaded to S3 and far less likely to raise concerns while it processes. Most traditional ransomware attacks cause a lot of side effects as they run. Furthermore, AWS CloudTrail logs only the HMAC of the encryption key, which is insufficient for recovery and forensic analysis. Corey Quinn, chief cloud economist at The Duckbill Group, comments: \"Encrypt Everything--no wait not like that\" says AWS, in the wake of S3 objects being encrypted using native S3 functionality via ransomware. That's frankly an ingenious attack vector. Evil. But ingenious. AWS emphasizes the importance of using short-term credentials, implementing data recovery procedures, and preventing the use of SSE-C on S3 buckets when not necessary for the workload. Additionally, enabling detailed logging for S3 operations is a best practice for detecting unusual activity, such as bulk encryption or lifecycle policy changes. Paz and de Vera write: If your applications don’t use SSE-C as an encryption method, you can block the use of SSE-C with a resource policy applied to an S3 bucket, or by a resource control policy (RCP) applied to an organization in AWS Organizations. If a ransomware attack on S3 is suspected, both Halcyon and AWS recommend immediately restricting SSE-C usage, auditing AWS keys, enabling advanced logging, and promptly engaging AWS support as mitigation measures. About the Author Renato Losio",
  "image": "https://res.infoq.com/news/2025/02/amazon-s3-ransomware/en/headerimage/generatedHeaderImage-1740292240784.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eA new \u003ca href=\"https://www.halcyon.ai/blog/abusing-aws-native-services-ransomware-encrypting-s3-buckets-with-sse-c\"\u003eransomware campaign\u003c/a\u003e, dubbed Codefinger, has been targeting Amazon S3 users by exploiting compromised AWS credentials to encrypt data using Server-Side Encryption with Customer-Provided Keys (SSE-C). Attackers then demand ransom payments for the symmetric AES-256 keys required to decrypt the data. AWS has released recommendations to help users mitigate the risk of ransomware attacks on S3.\u003c/p\u003e\n\n\u003cp\u003eAll key management for S3 server-side encryption with SSE-C is handled outside of AWS, with encryption key material provided alongside the object, ensuring the cloud provider never stores the key material. Following Halcyon\u0026#39;s report, AWS published an article clarifying how to \u003ca href=\"https://aws.amazon.com/blogs/security/preventing-unintended-encryption-of-amazon-s3-objects/\"\u003eprevent the unintended encryption of Amazon S3 objects.\u003c/a\u003e Steve de Vera, manager in the AWS Customer Incident Response Team, and Jennifer Paz, security engineer at AWS, explain:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eWorking with customers, our security teams detected an increase of data encryption events in S3 that used an encryption method known as SSE-C. While this is a feature used by many customers, we detected a pattern where a large number of S3 CopyObject operations using SSE-C began to overwrite objects, which has the effect of re-encrypting customer data with a new encryption key. Our analysis uncovered that this was being done by malicious actors who had obtained valid customer credentials, and were using them to re-encrypt objects.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eUsing publicly disclosed or compromised AWS keys, the threat actor identifies keys with permissions to execute \u003ccode\u003es3:GetObject\u003c/code\u003e and \u003ccode\u003es3:PutObject\u003c/code\u003e requests. The attacker can then initiate the encryption process by including the \u003ccode\u003ex-amz-server-side-encryption-customer-algorithm\u003c/code\u003e header, using an AES-256 encryption key that they generate and store locally. An S3 lifecycle rule is then applied to mark files for deletion within seven days, adding urgency to the ransom demand. The Halcyon RISE team explains why this poses a significant challenge:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eUnlike traditional ransomware that encrypts files locally or in transit, this attack integrates directly with AWS’s secure encryption infrastructure. Once encrypted, recovery is impossible without the attacker’s key.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eWhile these actions do not exploit a vulnerability in any AWS service, Reddit user \u003cem\u003eZenin\u003c/em\u003e \u003ca href=\"https://www.reddit.com/r/aws/comments/1i2ctjx/comment/m7ds9f7/?utm_source=share\u0026amp;utm_medium=web3x\u0026amp;utm_name=web3xcss\u0026amp;utm_term=1\u0026amp;utm_content=share_button\"\u003ehighlights\u003c/a\u003e in a popular thread:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe biggest threat here is really that the heavy lifting of encrypting the data can be offloaded to S3 and far less likely to raise concerns while it processes. Most traditional ransomware attacks cause a lot of side effects as they run.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eFurthermore, AWS CloudTrail logs only the HMAC of the encryption key, which is insufficient for recovery and forensic analysis. Corey Quinn, chief cloud economist at The Duckbill Group, \u003ca href=\"https://www.lastweekinaws.com/newsletter/2025s-aws-release-of-the-year/\"\u003ecomments\u003c/a\u003e:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u0026#34;Encrypt Everything--no wait not like that\u0026#34; says AWS, in the wake of S3 objects being encrypted using native S3 functionality via ransomware. That\u0026#39;s frankly an ingenious attack vector. Evil. But ingenious.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAWS emphasizes the importance of using short-term credentials, implementing data recovery procedures, and preventing the use of SSE-C on S3 buckets when not necessary for the workload. Additionally, enabling detailed logging for S3 operations is a best practice for detecting unusual activity, such as bulk encryption or lifecycle policy changes. Paz and de Vera write:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIf your applications don’t use SSE-C as an encryption method, you can block the use of SSE-C with a resource policy applied to an S3 bucket, or by a resource control policy (RCP) applied to an organization in AWS Organizations.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eIf a ransomware attack on S3 is suspected, both Halcyon and AWS recommend immediately restricting SSE-C usage, auditing AWS keys, enabling advanced logging, and promptly engaging AWS support as mitigation measures.\u003c/p\u003e\n\n\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Renato-Losio\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eRenato Losio\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": "2025-02-23T00:00:00Z",
  "modifiedTime": null
}
