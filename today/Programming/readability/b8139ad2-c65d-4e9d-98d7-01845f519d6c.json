{
  "id": "b8139ad2-c65d-4e9d-98d7-01845f519d6c",
  "title": "",
  "link": "http://scripting.com/2025/03/15.html#a135901",
  "description": "I'd love to get a list of old school bloggers who are still at it. How would you go about that? I decided to give it to Gemini, limiting it at first to 100 bloggers. Here's the prompt I wrote. For a while I was wondering what \"deep research\" was for, but as it's starting the work, I'm thinking of resources that would fit in -- like blogtree.com -- a fascinating site, gives a clear picture how blogs emerge out of the community of an earlier blog. Anyway it's working on it while I write this post. ðŸ˜„",
  "author": "",
  "published": "Sat, 15 Mar 2025 13:59:01 GMT",
  "source": "http://scripting.com/rss.xml",
  "categories": null,
  "byline": "",
  "length": 3878,
  "excerpt": "Dave Winer, OG blogger, podcaster, developed first apps in many categories. Old enough to know better. It's even worse than it appears.",
  "siteName": "Scripting News",
  "favicon": "",
  "text": "It's even worse than it appears.. I'd love to get a list of old school bloggers who are still at it. How would you go about that? I decided to give it to Gemini, limiting it at first to 100 bloggers. Here's the prompt I wrote. For a while I was wondering what \"deep research\" was for, but as it's starting the work, I'm thinking of resources that would fit in -- like blogtree.com -- a fascinating site, gives a clear picture how blogs emerge out of the community of an earlier blog. Anyway it's working on it while I write this post. ðŸ˜„ # An application ChatGPT is great it. You're staring at some code, it's really straightforward, you've done this a thousand times, but it doesn't work. Stare at it some more. Try re-entering it. Change the names of things. Still doesn't work. Copy and paste the problem code into ChatGPT and in an instant it tells you without you even having to ask that your comment isn't properly terminated, so the runtime was never seeing the code, and nothing I did made the slightest difference. The information was there. I had been staring at it, but humans see what we expect to see. Machines don't have that problem, at least not in this way (thinking of hallucinations).# Why is scripting.com not https? I hope you can see that I have no trouble deploying https sites here. I use Caddy on my Linux servers, and I don't see why anyone uses anything else. It's really easy and requires none of the work people complain about. Anyway the reason scripting.com is http and not https is that the site dates back to 1994, before there was such a thing as https. Google didn't start their push to get the web to convert to https until 2014, 20 years after I started blogging. Have a look at any of my archived blog posts and docs, the're pretty much all there. This is something I'm proud of. I wanted to create a record from the start, it was very deliberate. I was already an experienced developer when the web started up, so I had an idea what I was doing. I also use images on my site, in the right margin of posts, and lately as \"inline\" images, in their own boxes with a caption. It's a way for me to play with the ideas, and adds color to pages that are almost all text. So if I were to move the site from S3 to one of my hosted servers, which would be a fairly major undertaking on its own and add a lot of overhead because Amazon takes care of a lot of the bullshit you have to deal with, there would be a small matter of what about the images? They would all break if scripting.com was hosted on https and they were served from http. Now you might say -- Dave all you have to do is move all those images to a place with https support and remap the domains, and take care of all the michegas that's going to pop up. Or suffer with broken images. I decided to instead tell Google to stop trying to own something that belongs to no one and everyone. If they want a more secure web, create it, and make a browser for it, and respect the original web alone. Hopefully this clears it up. # I asked ChatGPT when Google started making HTTPS a requirement. Then I asked when was HTTPS first deployed, and was surprised it was in 1994 in Netscape Navigator. But apparently it was really buggy and wasn't codified until much later. Then I asked when HTTPS became the norm? 2017. So there's a lot of web out there that isn't being maintained by anyone, it just works, that predates HTTPS being widely adopted, if you believe the timelines ChatGPT produced. # BTW, these days the images are served via HTTPS so they don't show up in broken links in RSS readers, including my own FeedLand which is served over HTTPS. # Another BTW, I'm still thinking about how I want to transition from the public and open-to-anyone FeedLand servers. So if you're still using .org or .com, they're still on the air doing the same thing they've been doing all along.#",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"idPageTopText\"\u003e\n\t\n\t\u003cp\u003eIt\u0026#39;s even worse than it appears..\u003c/p\u003e\n\t\u003c/div\u003e\u003cdiv id=\"idDayContainer\"\u003e\n\t\t\t\t\n\n\u003cp\u003e\u003ca name=\"a135901\"\u003e\u003c/a\u003eI\u0026#39;d love to get a list of old school bloggers who are still at it. How would you go about that? I decided to give it to Gemini, limiting it at first to 100 bloggers. Here\u0026#39;s the \u003ca href=\"https://daveverse.wordpress.com/2025/03/15/finding-old-school-bloggers-who-are-still-at-it/\"\u003eprompt\u003c/a\u003e I wrote. For a while I was wondering what \u0026#34;deep research\u0026#34; was for, but as it\u0026#39;s starting the work, I\u0026#39;m thinking of resources that would fit in -- like blogtree.com -- a fascinating site, gives a clear picture how blogs emerge out of the community of an earlier blog. Anyway it\u0026#39;s working on it while I write this post. \u003cspan\u003eðŸ˜„\u003c/span\u003e \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/03/15.html#a135901\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca name=\"a135610\"\u003e\u003c/a\u003eAn application ChatGPT is great it. You\u0026#39;re staring at some code, it\u0026#39;s really straightforward, you\u0026#39;ve done this a thousand times, but it doesn\u0026#39;t work. Stare at it some more. Try re-entering it. Change the names of things. Still doesn\u0026#39;t work. Copy and paste the problem code into ChatGPT and in an instant it tells you without you even having to ask that your comment isn\u0026#39;t properly terminated, so the runtime was never seeing the code, and nothing I did made the slightest difference. The information was there. I had been staring at it, but humans see what we expect to see. Machines don\u0026#39;t have that problem, at least not in this way (thinking of hallucinations).\u003cspan\u003e\u003ca href=\"http://scripting.com/2025/03/15.html#a135610\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca name=\"a131603\"\u003e\u003c/a\u003e\u003cimg src=\"https://s3.amazonaws.com/scripting.com/images/2023/07/05/pinkyFacingLeft.png\"/\u003eWhy is scripting.com not https? I hope you can see that I have no trouble deploying https sites here. I use \u003ca href=\"https://caddyserver.com/\"\u003eCaddy\u003c/a\u003e on my Linux servers, and I don\u0026#39;t see why anyone uses anything else. It\u0026#39;s really easy and requires none of the work people complain about. Anyway the reason scripting.com is http and not https is that the site dates back to 1994, before there was such a thing as https. Google didn\u0026#39;t start their push to get the web to convert to https until 2014, 20 years after I started blogging. Have a look at \u003ca href=\"http://scripting.com/1999/12/31.html\"\u003eany\u003c/a\u003e of \u003ca href=\"http://scripting.com/fatpages/about.html\"\u003emy\u003c/a\u003e \u003ca href=\"http://scripting.com/davenet/stories/DocSearlsonSteveJobs.html\"\u003earchived\u003c/a\u003e \u003ca href=\"http://scripting.com/davenet/1994/10/18/billgatesvstheinternet.html\"\u003eblog\u003c/a\u003e \u003ca href=\"http://scripting.com/davenet/1999/05/24/editThisPage.html\"\u003eposts\u003c/a\u003e and \u003ca href=\"http://scripting.com/frontier/olddefault.html\"\u003edocs\u003c/a\u003e, the\u0026#39;re pretty much all there. This is something I\u0026#39;m proud of. I wanted to create a record from the start, it was very deliberate. I was already an experienced developer when the web started up, so I had an idea what I was doing. I also use images on my site, in the right margin of posts, and lately as \u0026#34;inline\u0026#34; images, in their own boxes with a caption. It\u0026#39;s a way for me to play with the ideas, and adds color to pages that are almost all text. So if I were to move the site from S3 to one of my hosted servers, which would be a fairly major undertaking on its own and add a lot of overhead because Amazon takes care of a lot of the bullshit you have to deal with, there would be a small matter of what about the images? They would all break if scripting.com was hosted on https and they were served from http. Now you might say -- Dave all you have to do is move all those images to a place with https support and remap the domains, and take care of all the michegas that\u0026#39;s going to pop up. Or suffer with broken images. I decided to instead tell Google to stop trying to own something that belongs to no one and everyone. If they want a more secure web, create it, and make a browser for it, and respect the original web alone. Hopefully this clears it up. \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/03/15.html#a131603\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca name=\"a132638\"\u003e\u003c/a\u003eI asked \u003ca href=\"https://chatgpt.com/share/67d580b2-8a68-8012-ad1a-65f2553978bb\"\u003eChatGPT\u003c/a\u003e when Google started making HTTPS a requirement. Then I asked when was HTTPS first deployed, and was surprised it was in 1994 in Netscape Navigator. But apparently it was really buggy and wasn\u0026#39;t codified until much later. Then I asked when HTTPS became the norm? 2017. So there\u0026#39;s a lot of web out there that isn\u0026#39;t being maintained by anyone, it just works, that predates HTTPS being widely adopted, if you believe the timelines ChatGPT produced. \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/03/15.html#a132638\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca name=\"a132949\"\u003e\u003c/a\u003eBTW, these days the images are served via HTTPS so they don\u0026#39;t show up in broken links in RSS readers, including my own \u003ca href=\"https://feedland.com/\"\u003eFeedLand\u003c/a\u003e which is served over HTTPS. \u003cspan\u003e\u003ca href=\"http://scripting.com/2025/03/15.html#a132949\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca name=\"a133036\"\u003e\u003c/a\u003eAnother BTW, I\u0026#39;m still thinking about how I want to transition from the public and open-to-anyone FeedLand servers. So if you\u0026#39;re still using .org or .com, they\u0026#39;re still on the air doing the same thing they\u0026#39;ve been doing all along.\u003cspan\u003e\u003ca href=\"http://scripting.com/2025/03/15.html#a133036\" title=\"Direct link to this item.\"\u003e#\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\n\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": null,
  "modifiedTime": null
}
