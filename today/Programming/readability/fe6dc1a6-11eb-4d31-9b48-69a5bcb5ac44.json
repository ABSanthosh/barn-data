{
  "id": "fe6dc1a6-11eb-4d31-9b48-69a5bcb5ac44",
  "title": "PR Templates for Effective Pull Requests",
  "link": "https://developers.soundcloud.com/blog/pr-templates-for-effective-pull-requests",
  "description": "The first step to any code review is understanding what the code does and why. Although the author is by far the most qualified person to‚Ä¶",
  "author": "",
  "published": "Tue, 12 Jul 2022 00:00:00 GMT",
  "source": "https://developers.soundcloud.com/blog/blog.rss",
  "categories": null,
  "byline": "",
  "length": 7616,
  "excerpt": "Empty pull request descriptions slow down teams, but PR templates are a quick and easy remedy. By streamlining the PR writing process into a series of fill-in-the-blank steps, a PR becomes a valuable asset for knowledge sharing across teams that will outlive its authors.",
  "siteName": "",
  "favicon": "",
  "text": "The first step to any code review is understanding what the code does and why. Although the author is by far the most qualified person to answer these questions, all too often, the reviewer is left to answer them on their own. With no pull request (PR) description, reviewers need to assess changes with only the title and, at best, some kind of tracker ticket for context ‚Äî and let‚Äôs be real, the ticket is probably empty too. The review process essentially becomes a big game of telephone. The truth is, empty pull request descriptions slow down teams. When I first joined SoundCloud, that‚Äôs what PRs in many of our greener projects looked like. Every time I reviewed a PR, I had to meet with the author in real time to get answers about what their code did or why they made certain decisions. Often, after talking to them, I‚Äôd realize that all the assumptions I‚Äôd made on my own were totally incorrect. In turn, I found I was starting to avoid PR reviews because there was so much overhead in getting to the review. Before adding PR templates To combat this, I recommended a PR template as a way to make it easier to orient myself when reviewing. Not wanting to introduce too many changes too quickly, we initially added the template to just one repository. There was also no rule against empty PRs; we merely added the template and left it up to the individual to decide whether or not to fill it out. Lo and behold, with just this simple suggestion, suddenly all of our PRs were full of context, explanation, and discussion! After adding PR templates By reducing the PR writing process to a series of fill-in-the-blank steps, the PR transformed from a throwaway document to a valuable asset for knowledge sharing across teams that will outlive its authors. PR review instantly became easier, and the feedback on PRs became more relevant. Our experiment in templates was so successful that other teams began asking for our template to use in their repositories. I even had friends outside of work curious what kind of template we were using, so today I‚Äôm sharing the template that got us there. Anatomy of a Good PR Template ## Scope \u003c!-- Brief description of WHAT you‚Äôre doing and WHY. --\u003e [closes TICKET-###](https://link-to-your-ticket) The scope is the big picture of what and why. If your PR were an essay, the scope would be the introduction. Scope eases reviewers into your PR, so they spend less time orienting themselves to the ticket and more time reviewing effectively. ## Implementation With @pair \u003c!-- Some description of HOW you achieved it. Perhaps give a high level description of the program flow. Did you need to refactor something? What tradeoffs did you take? Are there things in here which you‚Äôd particularly like people to pay close attention to? --\u003e This section gives a human-readable breakdown of the changes in the PR. It might not be immediately obvious to reviewers what every change in the git diff does, so a summary of the technical implementation gives reviewers a context to place those individual changes into. I like to leave a spot to call out pairing in this section. It positions pairing as a core value for the team, and it comes in handy when the PR surfaces in a git blame; the more names on the PR, the higher the chance that one of them has an answer to questions. ## Screenshots | | before | after | | ------- | ------ | ----- | | desktop | | | | mobile | | | A picture is worth a thousand words, so definitely include a screenshot section if your team is responsible for any kind of UI component. It‚Äôs by far the most direct way to show the changes introduced in your PR. It also provides the fringe benefit of forcing developers to QA their own work. Including a section for web and mobile screenshots ensures that responsive designs are maintained. Screenshots might make less sense for backend APIs, but including class or flow diagrams is a great alternative to visually demonstrate your changes. ## How to Test \u003c!-- A straightforward scenario of how to test your changes could help colleagues that are not familiar with the part of the code that you are changing but want to see it in action. This section can include a description or step-by-step instructions of how to get to the state of v2 that your change affects. A \"How To Test\" section can look something like this: - Sign in with a user with tracks - Activate `show_awesome_cat_gifs` feature (add `?feature.show_awesome_cat_gifs=1` to your URL) - You should see a GIF with cats dancing --\u003e There‚Äôs no better way to judge the success of a PR than actually running the code and seeing it work. A straightforward scenario of how to test your changes will help your reviewers see your change in action. ## Emoji Guide I like to include an emoji guide for reviewers in my PR templates, because it enforces code review standards on every PR. Color coding review comments with emojis helps keep feedback organized, disambiguates non-blocking and blocking feedback, and encourages positive feedback as a crucial part of the review process. üòÉ The Template GitHub makes installing templates extremely convenient. Just copy the template into pull_request_template.md (or any of the files listed here) and commit it to your main branch. From then on, you‚Äôll see your PR template populate your new PRs automatically. \u003c!-- Please use the content below as a template for your pull request. Feel free to remove sections which do not make sense. --\u003e ## Scope \u003c!-- Brief description of WHAT you‚Äôre doing and WHY. --\u003e [closes TICKET-###](https://link-to-your-ticket) ## Implementation With @pair \u003c!-- Some description of HOW you achieved it. Perhaps give a high level description of the program flow. Did you need to refactor something? What tradeoffs did you take? Are there things in here which you‚Äôd particularly like people to pay close attention to? --\u003e ## Screenshots | | before | after | | ------- | ------ | ----- | | desktop | | | | mobile | | | ## How to Test \u003c!-- A straightforward scenario of how to test your changes could help colleagues that are not familiar with the part of the code that you are changing but want to see it in action. This section can include a description or step-by-step instructions of how to get to the state of v2 that your change affects. A \"How To Test\" section can look something like this: - Sign in with a user with tracks - Activate `show_awesome_cat_gifs` feature (add `?feature.show_awesome_cat_gifs=1` to your URL) - You should see a GIF with cats dancing --\u003e ## Emoji Guide **For reviewers: Emojis can be added to comments to call out blocking versus non-blocking feedback.** E.g: Praise, minor suggestions, or clarifying questions that don‚Äôt block merging the PR. \u003e üü¢ Nice refactor! \u003e üü° Why was the default value removed? E.g: Blocking feedback must be addressed before merging. \u003e üî¥ This change will break something important | | | | | --- | --- | --- | | Blocking | üî¥ ‚ùå üö® | RED | | Non-blocking | üü° üí° ü§î üí≠ | Yellow, thinking, etc | | Praise | üü¢ üíö üòç üëç üôå | Green, hearts, positive emojis, etc | Conclusion Adding a PR template is a quick and easy way to improve PR hygiene on your teams. As a reviewer, I enjoy a lower barrier of entry in my reviews. As a code author, the reviews I receive are also more useful and productive as a result of including this template. I strongly recommend using a PR template, and I‚Äôd definitely consider adding a PR template for any new codebases in the future.",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cp\u003eThe first step to any code review is understanding what the code does and why. Although the author is by far the most qualified person to answer these questions, all too often, the reviewer is left to answer them on their own. With no pull request (PR) description, reviewers need to assess changes with only the title and, at best, some kind of tracker ticket for context ‚Äî and let‚Äôs be real, the ticket is probably empty too. The review process essentially becomes a big game of telephone. The truth is, empty pull request descriptions slow down teams.\u003c/p\u003e\n\u003cp\u003eWhen I first joined SoundCloud, that‚Äôs what PRs in many of our greener projects looked like. Every time I reviewed a PR, I had to meet with the author in real time to get answers about what their code did or why they made certain decisions. Often, after talking to them, I‚Äôd realize that all the assumptions I‚Äôd made on my own were totally incorrect. In turn, I found I was starting to avoid PR reviews because there was so much overhead in getting to the review.\u003c/p\u003e\n\u003ccenter\u003e\n\u003cp\u003e\u003cspan\u003e\n      \u003ca href=\"https://developers.soundcloud.com/blog/static/96d72cecf52c936dcdcdba62c19cadb0/1002f/before-pr.png\" target=\"_blank\" rel=\"noopener\"\u003e\n    \u003cspan\u003e\u003c/span\u003e\n  \u003cimg alt=\"Before adding PR templates\" title=\"Before adding PR templates\" src=\"https://developers.soundcloud.com/blog/static/96d72cecf52c936dcdcdba62c19cadb0/8ff1e/before-pr.png\" srcset=\"https://developers.soundcloud.com/blog/static/96d72cecf52c936dcdcdba62c19cadb0/9ec3c/before-pr.png 200w,\nhttps://developers.soundcloud.com/blog/static/96d72cecf52c936dcdcdba62c19cadb0/c7805/before-pr.png 400w,\nhttps://developers.soundcloud.com/blog/static/96d72cecf52c936dcdcdba62c19cadb0/8ff1e/before-pr.png 800w,\nhttps://developers.soundcloud.com/blog/static/96d72cecf52c936dcdcdba62c19cadb0/6ff5e/before-pr.png 1200w,\nhttps://developers.soundcloud.com/blog/static/96d72cecf52c936dcdcdba62c19cadb0/1002f/before-pr.png 1298w\" sizes=\"(max-width: 800px) 100vw, 800px\" loading=\"lazy\"/\u003e\n  \u003c/a\u003e\n    \u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eBefore adding PR templates\u003c/em\u003e\u003c/p\u003e\n\u003c/center\u003e\n\u003cp\u003eTo combat this, I recommended a PR template as a way to make it easier to orient myself when reviewing. Not wanting to introduce too many changes too quickly, we initially added the template to just one repository. There was also no rule against empty PRs; we merely added the template and left it up to the individual to decide whether or not to fill it out. Lo and behold, with just this simple suggestion, suddenly all of our PRs were full of context, explanation, and discussion!\u003c/p\u003e\n\u003ccenter\u003e\n\u003cp\u003e\u003cspan\u003e\n      \u003ca href=\"https://developers.soundcloud.com/blog/static/737bfc26dbe3f587c6a82c43cb8a792e/2f950/after-pr.png\" target=\"_blank\" rel=\"noopener\"\u003e\n    \u003cspan\u003e\u003c/span\u003e\n  \u003cimg alt=\"After adding PR templates\" title=\"After adding PR templates\" src=\"https://developers.soundcloud.com/blog/static/737bfc26dbe3f587c6a82c43cb8a792e/8ff1e/after-pr.png\" srcset=\"https://developers.soundcloud.com/blog/static/737bfc26dbe3f587c6a82c43cb8a792e/9ec3c/after-pr.png 200w,\nhttps://developers.soundcloud.com/blog/static/737bfc26dbe3f587c6a82c43cb8a792e/c7805/after-pr.png 400w,\nhttps://developers.soundcloud.com/blog/static/737bfc26dbe3f587c6a82c43cb8a792e/8ff1e/after-pr.png 800w,\nhttps://developers.soundcloud.com/blog/static/737bfc26dbe3f587c6a82c43cb8a792e/6ff5e/after-pr.png 1200w,\nhttps://developers.soundcloud.com/blog/static/737bfc26dbe3f587c6a82c43cb8a792e/2f950/after-pr.png 1600w\" sizes=\"(max-width: 800px) 100vw, 800px\" loading=\"lazy\"/\u003e\n  \u003c/a\u003e\n    \u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eAfter adding PR templates\u003c/em\u003e\u003c/p\u003e\n\u003c/center\u003e\n\u003cp\u003eBy reducing the PR writing process to a series of fill-in-the-blank steps, the PR transformed from a throwaway document to a valuable asset for knowledge sharing across teams that will outlive its authors. PR review instantly became easier, and the feedback on PRs became more relevant. Our experiment in templates was so successful that other teams began asking for our template to use in their repositories. I even had friends outside of work curious what kind of template we were using, so today I‚Äôm sharing the template that got us there.\u003c/p\u003e\n\u003ch2\u003eAnatomy of a Good PR Template\u003c/h2\u003e\n\u003ch3\u003e## Scope\u003c/h3\u003e\n\u003cdiv data-language=\"text\"\u003e\u003cpre\u003e\u003ccode\u003e\u0026lt;!-- Brief description of WHAT you‚Äôre doing and WHY. --\u0026gt;\n\n[closes TICKET-###](https://link-to-your-ticket)\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe scope is the big picture of \u003cem\u003ewhat\u003c/em\u003e and \u003cem\u003ewhy\u003c/em\u003e. If your PR were an essay, the scope would be the introduction. Scope eases reviewers into your PR, so they spend less time orienting themselves to the ticket and more time reviewing effectively.\u003c/p\u003e\n\u003ch3\u003e## Implementation\u003c/h3\u003e\n\u003cdiv data-language=\"text\"\u003e\u003cpre\u003e\u003ccode\u003eWith @pair\n\n\u0026lt;!--\n\nSome description of HOW you achieved it. Perhaps give a high level description of the program flow. Did you need to refactor something? What tradeoffs did you take? Are there things in here which you‚Äôd particularly like people to pay close attention to?\n\n--\u0026gt;\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis section gives a human-readable breakdown of the changes in the PR. It might not be immediately obvious to reviewers what every change in the git diff does, so a summary of the technical implementation gives reviewers a context to place those individual changes into.\u003c/p\u003e\n\u003cp\u003eI like to leave a spot to call out pairing in this section. It positions pairing as a core value for the team, and it comes in handy when the PR surfaces in a git blame; the more names on the PR, the higher the chance that one of them has an answer to questions.\u003c/p\u003e\n\u003ch3\u003e## Screenshots\u003c/h3\u003e\n\u003cdiv data-language=\"text\"\u003e\u003cpre\u003e\u003ccode\u003e|         | before | after |\n| ------- | ------ | ----- |\n| desktop |        |       |\n| mobile  |        |       |\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eA picture is worth a thousand words, so definitely include a screenshot section if your team is responsible for any kind of UI component. It‚Äôs by far the most direct way to show the changes introduced in your PR. It also provides the fringe benefit of forcing developers to QA their own work. Including a section for web and mobile screenshots ensures that responsive designs are maintained.\u003c/p\u003e\n\u003cp\u003eScreenshots might make less sense for backend APIs, but including class or flow \u003ca href=\"https://github.blog/2022-02-14-include-diagrams-markdown-files-mermaid/\"\u003ediagrams\u003c/a\u003e is a great alternative to visually demonstrate your changes.\u003c/p\u003e\n\u003ch3\u003e## How to Test\u003c/h3\u003e\n\u003cdiv data-language=\"text\"\u003e\u003cpre\u003e\u003ccode\u003e\u0026lt;!--\n\nA straightforward scenario of how to test your changes could help colleagues that are not familiar with the part of the code that you are changing but want to see it in action. This section can include a description or step-by-step instructions of how to get to the state of v2 that your change affects.\n\nA \u0026#34;How To Test\u0026#34; section can look something like this:\n\n- Sign in with a user with tracks\n- Activate `show_awesome_cat_gifs` feature (add `?feature.show_awesome_cat_gifs=1` to your URL)\n- You should see a GIF with cats dancing\n\n--\u0026gt;\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThere‚Äôs no better way to judge the success of a PR than actually running the code and seeing it work. A straightforward scenario of how to test your changes will help your reviewers see your change in action.\u003c/p\u003e\n\u003ch3\u003e## Emoji Guide\u003c/h3\u003e\n\u003cp\u003e\u003cspan\u003e\n      \u003ca href=\"https://developers.soundcloud.com/blog/static/fc567f1fd73c4581bafd2d17e4d13441/a300b/emoji-guide.png\" target=\"_blank\" rel=\"noopener\"\u003e\n    \u003cspan\u003e\u003c/span\u003e\n  \u003cimg alt=\"Emoji guide\" title=\"Emoji guide\" src=\"https://developers.soundcloud.com/blog/static/fc567f1fd73c4581bafd2d17e4d13441/8ff1e/emoji-guide.png\" srcset=\"https://developers.soundcloud.com/blog/static/fc567f1fd73c4581bafd2d17e4d13441/9ec3c/emoji-guide.png 200w,\nhttps://developers.soundcloud.com/blog/static/fc567f1fd73c4581bafd2d17e4d13441/c7805/emoji-guide.png 400w,\nhttps://developers.soundcloud.com/blog/static/fc567f1fd73c4581bafd2d17e4d13441/8ff1e/emoji-guide.png 800w,\nhttps://developers.soundcloud.com/blog/static/fc567f1fd73c4581bafd2d17e4d13441/a300b/emoji-guide.png 1176w\" sizes=\"(max-width: 800px) 100vw, 800px\" loading=\"lazy\"/\u003e\n  \u003c/a\u003e\n    \u003c/span\u003e\u003c/p\u003e\n\u003cp\u003eI like to include an emoji guide for reviewers in my PR templates, because it enforces code review standards on every PR. Color coding review comments with emojis helps keep feedback organized, disambiguates non-blocking and blocking feedback, and encourages positive feedback as a crucial part of the review process. üòÉ\u003c/p\u003e\n\u003ch2\u003eThe Template\u003c/h2\u003e\n\u003cp\u003eGitHub makes installing templates extremely convenient. Just copy the template into \u003ccode\u003epull_request_template.md\u003c/code\u003e (or \u003ca href=\"https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/creating-a-pull-request-template-for-your-repository\"\u003eany of the files listed here\u003c/a\u003e) and commit it to your main branch. From then on, you‚Äôll see your PR template populate your new PRs automatically.\u003c/p\u003e\n\u003cdiv data-language=\"text\"\u003e\u003cpre\u003e\u003ccode\u003e\u0026lt;!--\n\nPlease use the content below as a template for your pull request.\nFeel free to remove sections which do not make sense.\n\n--\u0026gt;\n\n## Scope\n\n\u0026lt;!-- Brief description of WHAT you‚Äôre doing and WHY. --\u0026gt;\n\n[closes TICKET-###](https://link-to-your-ticket)\n\n## Implementation\n\nWith @pair\n\n\u0026lt;!--\n\nSome description of HOW you achieved it. Perhaps give a high level description of the program flow. Did you need to refactor something? What tradeoffs did you take? Are there things in here which you‚Äôd particularly like people to pay close attention to?\n\n--\u0026gt;\n\n## Screenshots\n\n|         | before | after |\n| ------- | ------ | ----- |\n| desktop |        |       |\n| mobile  |        |       |\n\n## How to Test\n\n\u0026lt;!--\n\nA straightforward scenario of how to test your changes could help colleagues that are not familiar with the part of the code that you are changing but want to see it in action. This section can include a description or step-by-step instructions of how to get to the state of v2 that your change affects.\n\nA \u0026#34;How To Test\u0026#34; section can look something like this:\n\n- Sign in with a user with tracks\n- Activate `show_awesome_cat_gifs` feature (add `?feature.show_awesome_cat_gifs=1` to your URL)\n- You should see a GIF with cats dancing\n\n--\u0026gt;\n\n## Emoji Guide\n\n**For reviewers: Emojis can be added to comments to call out blocking versus non-blocking feedback.**\n\nE.g: Praise, minor suggestions, or clarifying questions that don‚Äôt block merging the PR.\n\n\u0026gt; üü¢ Nice refactor!\n\n\u0026gt; üü° Why was the default value removed?\n\nE.g: Blocking feedback must be addressed before merging.\n\n\u0026gt; üî¥ This change will break something important\n\n| | | |\n| --- | --- | --- |\n| Blocking | üî¥ ‚ùå üö® | RED |\n| Non-blocking | üü° üí° ü§î üí≠ | Yellow, thinking, etc |\n| Praise | üü¢ üíö üòç üëç üôå | Green, hearts, positive emojis, etc |\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eAdding a PR template is a quick and easy way to improve PR hygiene on your teams. As a reviewer, I enjoy a lower barrier of entry in my reviews. As a code author, the reviews I receive are also more useful and productive as a result of including this template. I strongly recommend using a PR template, and I‚Äôd definitely consider adding a PR template for any new codebases in the future.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "8 min read",
  "publishedTime": null,
  "modifiedTime": null
}
