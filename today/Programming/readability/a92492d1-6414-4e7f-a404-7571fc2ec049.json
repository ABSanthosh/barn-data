{
  "id": "a92492d1-6414-4e7f-a404-7571fc2ec049",
  "title": "Enable secure sudo access for GitLab Remote Development workspaces",
  "link": "https://about.gitlab.com/blog/2024/11/20/enable-secure-sudo-access-for-gitlab-remote-development-workspaces",
  "description": "",
  "author": "Vishal Tak",
  "published": "2024-11-20T00:00:00.000Z",
  "source": "https://about.gitlab.com/atom.xml",
  "categories": null,
  "byline": "Vishal Tak",
  "length": 7777,
  "excerpt": "Learn how to allow support for sudo commands using Sysbox, Kata Containers, and user namespaces in this easy-to-follow tutorial.",
  "siteName": "GitLab",
  "favicon": "https://about.gitlab.com/blog/nuxt-images/ico/favicon-192x192.png?cache=2022041",
  "text": "A development environment often requires sudo permissions to install, configure, and use dependencies during runtime. GitLab now allows secure sudo access for GitLab Remote Development workspaces. This tutorial shows you how to enable GitLab workspace users to securely use sudo commands to perform common tasks. The challenge For the sake of this article, say your project is as simple as the below code. package main import ( \"encoding/json\" \"log/slog\" \"net/http\" \"os\" ) func main() { // Set up JSON logger logFile, err := os.OpenFile(\"server.log\", os.O_CREATE|os.O_WRONLY|os.O_APPEND, 0666) if err != nil { panic(err) } defer logFile.Close() jsonHandler := slog.NewJSONHandler(logFile, nil) logger := slog.New(jsonHandler) slog.SetDefault(logger) // Define handlers http.HandleFunc(\"/path1\", handleRequest) http.HandleFunc(\"/path2\", handleRequest) // Start server slog.Info(\"Starting server on :3000\") err = http.ListenAndServe(\":3000\", nil) if err != nil { slog.Error(\"Server failed to start\", \"error\", err) } } func handleRequest(w http.ResponseWriter, r *http.Request) { data := make(map[string]interface{}) for k, v := range r.Header { data[k] = v } data[\"method\"] = r.Method data[\"url\"] = r.URL.String() data[\"remote_addr\"] = r.RemoteAddr response, err := json.MarshalIndent(data, \"\", \" \") if err != nil { slog.Error(\"Failed to marshal metadata\", \"error\", err) http.Error(w, \"Internal Server Error\", http.StatusInternalServerError) return } // Log the metadata slog.Info(\"Request received\", \"path\", r.URL.Path, \"response\", string(response), ) // Write response w.Header().Set(\"Content-Type\", \"application/json\") w.Write(response) } This code starts an HTTP server on port 3000, exposes two paths: path1 and path2. Each HTTP request received is logged to a file server.log. Let's run this code with go run main.go and generate some requests. i=1 while [ \"$i\" -le 100 ]; do echo \"Iteration $i\" if [ $((random_number % 2)) -eq 0 ]; then curl \"localhost:3000/path1\" else curl \"localhost:3000/path2\" fi i=$((i + 1)) done As you work on this application, you realize the need to analyze the logs to debug an issue. You look at the log file and it is long to parse with a simple glance. You remember there is a handy tool, jq, which parses JSON data. But your workspace does not have it installed. You want to install jq through the package manager for this workspace only. sudo apt update sudo apt install jq The output is: sudo: The \"no new privileges\" flag is set, which prevents sudo from running as root. sudo: If sudo is running in a container, you may need to adjust the container configuration to disable the flag. This happens because GitLab workspaces explicitly disallows sudo access to prevent privilege escalation on the Kubernetes host. Now, there is a more secure way to run sudo commands in a workspace. How sudo access works That is exactly what we have unlocked in the 17.4 release of GitLab. You can configure secure sudo access for workspaces using any of the following options: Sysbox Kata Containers User namespaces We will set up three GitLab agents for workspaces to demonstrate each option. Sysbox Sysbox is a container runtime that improves container isolation and enables containers to run the same workloads as virtual machines. To configure sudo access for a workspace with Sysbox: In the Kubernetes cluster, install Sysbox. In the GitLab agent for workspaces, set the following config: remote_development: enabled: true dns_zone: \"sysbox-update.me.com\" default_runtime_class: \"sysbox-runc\" allow_privilege_escalation: true Add other settings in the agent config as per your requirements. GitLab agent for workspaces settings for more information about individual settings. Allow the agent to be used for workspaces in a group. See the documentation for more information. Update GitLab Workspaces Proxy to serve traffic for the domain used in the above agent configuration. See Tutorial: Set up the GitLab workspaces proxy for more information. Kata Containers Kata Containers is a standard implementation of lightweight virtual machines that perform like containers but provide the workload isolation and security of virtual machines. To configure sudo access for a workspace with Kata Containers: In the Kubernetes cluster, install Kata Containers. In the GitLab agent for workspaces, set the following config: remote_development: enabled: true dns_zone: \"kata-update.me.com\" default_runtime_class: \"kata-qemu\" allow_privilege_escalation: true Add other settings in the agent config as per your requirements. GitLab agent for workspaces settings for more information about individual settings. Allow the agent to be used for workspaces in a group. See the documentation for more information. Update GitLab Workspaces Proxy to serve traffic for the domain used in the above agent configuration. See Tutorial: Set up the GitLab workspaces proxy for more information. User namespaces User namespaces isolate the user running inside the container from the user on the host. To configure sudo access for a workspace with user namespaces: In the Kubernetes cluster, configure user namespaces. In the GitLab agent for workspaces, set the following config: remote_development: enabled: true dns_zone: \"userns-update.me.com\" use_kubernetes_user_namespaces: true allow_privilege_escalation: true Add other settings in the agent config as per your requirements. GitLab agent for workspaces settings for more information about individual settings. Allow the agent to be used for workspaces in a group. See the documentation for more information. Update GitLab Workspaces Proxy to serve traffic for the domain used in the above agent configuration. See Tutorial: Set up the GitLab workspaces proxy for more information. Setting up a Kubernetes cluster with user namespaces configured is challenging since it is behind a beta feature gate in Kubernetes Version 1.31.0. This means it is not yet possible to configure such a cluster on the major cloud providers because they don't provide a mechanism to enable feature gates in their managed Kubernetes offering. Here is an example of configuring a simple Kuberenetes cluster using kubeadm. Create a workspace If you now create a workspace with these agents and try installing jq through a package manager, it should succeed! You can analyze the logs using jq. Say you wanted to inspect the log entries where the path is /path1, you can run: jq 'select(.path == \"/path1\")' server.log The output is: { \"time\": \"2024-10-31T12:04:38.474806+05:30\", \"level\": \"INFO\", \"msg\": \"Request received\", \"path\": \"/path1\", \"response\": \"{\\n \\\"Accept\\\": [\\n \\\"*/*\\\"\\n ],\\n \\\"User-Agent\\\": [\\n \\\"curl/8.7.1\\\"\\n ],\\n \\\"method\\\": \\\"GET\\\",\\n \\\"remote_addr\\\": \\\"[::1]:61246\\\",\\n \\\"url\\\": \\\"/path1\\\"\\n}\" } { \"time\": \"2024-10-31T12:06:22.397453+05:30\", \"level\": \"INFO\", \"msg\": \"Request received\", \"path\": \"/path1\", \"response\": \"{\\n \\\"Accept\\\": [\\n \\\"*/*\\\"\\n ],\\n \\\"User-Agent\\\": [\\n \\\"curl/8.7.1\\\"\\n ],\\n \\\"method\\\": \\\"GET\\\",\\n \\\"remote_addr\\\": \\\"[::1]:61311\\\",\\n \\\"url\\\": \\\"/path1\\\"\\n}\" } { \"time\": \"2024-10-31T12:19:34.974354+05:30\", \"level\": \"INFO\", \"msg\": \"Request received\", \"path\": \"/path1\", \"response\": \"{\\n \\\"Accept\\\": [\\n \\\"*/*\\\"\\n ],\\n \\\"User-Agent\\\": [\\n \\\"curl/8.7.1\\\"\\n ],\\n \\\"method\\\": \\\"GET\\\",\\n \\\"remote_addr\\\": \\\"[::1]:61801\\\",\\n \\\"url\\\": \\\"/path1\\\"\\n}\" } Get started today Learn even more with our Configure sudo access for a workspace documentation. See GitLab agent for workspaces settings for details on individual settings. New to GitLab Remote Development? Here is a quickstart guide to get you up to speed.",
  "image": "https://images.ctfassets.net/r9o86ar0p03f/fJKX41PJHKCfSOWw4xQxm/ec9dd7c7d90d06b63926d25f72b84f8d/blog-image-template-1800x945.png?fm=webp\u0026w=820\u0026h=500",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv data-v-af247218=\"\" data-v-7488832a=\"\" data-v-74bd29c6=\"\"\u003e\u003cp\u003eA development environment often requires sudo permissions to install, configure, and use dependencies during runtime. GitLab now allows secure sudo access for \u003ca href=\"https://about.gitlab.com/blog/2023/06/26/quick-start-guide-for-gitlab-workspaces/\"\u003eGitLab Remote Development workspaces\u003c/a\u003e. This tutorial shows you how to enable GitLab workspace users to securely use sudo commands to perform common tasks.\u003c/p\u003e\n\u003ch2 id=\"the-challenge\" tabindex=\"-1\"\u003eThe challenge \u003ca href=\"#the-challenge\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eFor the sake of this article, say your project is as simple as the below code.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003epackage main\n\nimport (\n\t\u0026#34;encoding/json\u0026#34;\n\t\u0026#34;log/slog\u0026#34;\n\t\u0026#34;net/http\u0026#34;\n\t\u0026#34;os\u0026#34;\n)\n\nfunc main() {\n\t// Set up JSON logger\n\tlogFile, err := os.OpenFile(\u0026#34;server.log\u0026#34;, os.O_CREATE|os.O_WRONLY|os.O_APPEND, 0666)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdefer logFile.Close()\n\n\tjsonHandler := slog.NewJSONHandler(logFile, nil)\n\tlogger := slog.New(jsonHandler)\n\tslog.SetDefault(logger)\n\n\t// Define handlers\n\thttp.HandleFunc(\u0026#34;/path1\u0026#34;, handleRequest)\n\thttp.HandleFunc(\u0026#34;/path2\u0026#34;, handleRequest)\n\n\t// Start server\n\tslog.Info(\u0026#34;Starting server on :3000\u0026#34;)\n\terr = http.ListenAndServe(\u0026#34;:3000\u0026#34;, nil)\n\tif err != nil {\n\t\tslog.Error(\u0026#34;Server failed to start\u0026#34;, \u0026#34;error\u0026#34;, err)\n\t}\n}\n\nfunc handleRequest(w http.ResponseWriter, r *http.Request) {\n\tdata := make(map[string]interface{})\n\tfor k, v := range r.Header {\n\t\tdata[k] = v\n\t}\n\n\tdata[\u0026#34;method\u0026#34;] = r.Method\n\tdata[\u0026#34;url\u0026#34;] = r.URL.String()\n\tdata[\u0026#34;remote_addr\u0026#34;] = r.RemoteAddr\n\n\tresponse, err := json.MarshalIndent(data, \u0026#34;\u0026#34;, \u0026#34;  \u0026#34;)\n\tif err != nil {\n\t\tslog.Error(\u0026#34;Failed to marshal metadata\u0026#34;, \u0026#34;error\u0026#34;, err)\n\t\thttp.Error(w, \u0026#34;Internal Server Error\u0026#34;, http.StatusInternalServerError)\n\t\treturn\n\t}\n\n\t// Log the metadata\n\tslog.Info(\u0026#34;Request received\u0026#34;,\n\t\t\u0026#34;path\u0026#34;, r.URL.Path,\n\t\t\u0026#34;response\u0026#34;, string(response),\n\t)\n\n\t// Write response\n\tw.Header().Set(\u0026#34;Content-Type\u0026#34;, \u0026#34;application/json\u0026#34;)\n\tw.Write(response)\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis code starts an HTTP server on port 3000, exposes two paths: \u003ccode\u003epath1\u003c/code\u003e and \u003ccode\u003epath2\u003c/code\u003e. Each HTTP request received is logged to a file \u003ccode\u003eserver.log\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eLet\u0026#39;s run this code with \u003ccode\u003ego run main.go\u003c/code\u003e and generate some requests.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ei=1\nwhile [ \u0026#34;$i\u0026#34; -le 100 ]; do\n  echo \u0026#34;Iteration $i\u0026#34;\n\n  if [ $((random_number % 2)) -eq 0 ]; then\n    curl \u0026#34;localhost:3000/path1\u0026#34;\n  else\n    curl \u0026#34;localhost:3000/path2\u0026#34;\n  fi\n\n  i=$((i + 1))\ndone\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eAs you work on this application, you realize the need to analyze the logs to debug an issue. You look at the log file and it is long to parse with a simple glance. You remember there is a handy tool, \u003ca href=\"https://jqlang.github.io/jq/\"\u003ejq\u003c/a\u003e, which parses JSON data. But your workspace does not have it installed.\u003c/p\u003e\n\u003cp\u003eYou want to install \u003ccode\u003ejq\u003c/code\u003e through the package manager for this workspace only.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003esudo apt update\nsudo apt install jq\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe output is:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003esudo: The \u0026#34;no new privileges\u0026#34; flag is set, which prevents sudo from running as root.\nsudo: If sudo is running in a container, you may need to adjust the container configuration to disable the flag.\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis happens because GitLab workspaces explicitly disallows \u003ccode\u003esudo\u003c/code\u003e access to prevent privilege escalation on the Kubernetes host.\u003c/p\u003e\n\u003cp\u003eNow, there is a more secure way to run \u003ccode\u003esudo\u003c/code\u003e commands in a workspace.\u003c/p\u003e\n\u003ch2 id=\"how-sudo-access-works\" tabindex=\"-1\"\u003eHow sudo access works \u003ca href=\"#how-sudo-access-works\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThat is exactly what we have \u003ca href=\"https://docs.gitlab.com/ee/user/workspace/configuration.html#configure-sudo-access-for-a-workspace\"\u003eunlocked\u003c/a\u003e in the 17.4 release of GitLab.\u003c/p\u003e\n\u003cp\u003eYou can configure secure sudo access for workspaces using any of the following options:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eSysbox\u003c/li\u003e\n\u003cli\u003eKata Containers\u003c/li\u003e\n\u003cli\u003eUser namespaces\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWe will set up three GitLab agents for workspaces to demonstrate each option.\u003c/p\u003e\n\u003ch3 id=\"sysbox\" tabindex=\"-1\"\u003eSysbox \u003ca href=\"#sysbox\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/nestybox/sysbox\"\u003eSysbox\u003c/a\u003e is a container runtime that improves container isolation and enables containers to run the same workloads as virtual machines.\u003c/p\u003e\n\u003cp\u003eTo configure sudo access for a workspace with Sysbox:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eIn the Kubernetes cluster, \u003ca href=\"https://github.com/nestybox/sysbox#installation\"\u003einstall Sysbox\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eIn the GitLab agent for workspaces, set the following config:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre\u003e\u003ccode\u003eremote_development:\n  enabled: true\n  dns_zone: \u0026#34;sysbox-update.me.com\u0026#34;\n  default_runtime_class: \u0026#34;sysbox-runc\u0026#34;\n  allow_privilege_escalation: true\n\u003c/code\u003e\u003c/pre\u003e\n\u003col start=\"3\"\u003e\n\u003cli\u003eAdd other settings in the agent config as per your requirements. \u003ca href=\"https://docs.gitlab.com/ee/user/workspace/gitlab_agent_configuration.html#workspace-settings\"\u003eGitLab agent for workspaces settings\u003c/a\u003e for more information about individual settings.\u003c/li\u003e\n\u003cli\u003eAllow the agent to be used for workspaces in a group. See the \u003ca href=\"https://docs.gitlab.com/ee/user/workspace/gitlab_agent_configuration.html#allow-a-cluster-agent-for-workspaces-in-a-group\"\u003edocumentation\u003c/a\u003e for more information.\u003c/li\u003e\n\u003cli\u003eUpdate GitLab Workspaces Proxy to serve traffic for the domain used in the above agent configuration. See \u003ca href=\"https://docs.gitlab.com/ee/user/workspace/set_up_workspaces_proxy.html\"\u003eTutorial: Set up the GitLab workspaces proxy\u003c/a\u003e for more information.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"kata-containers\" tabindex=\"-1\"\u003eKata Containers \u003ca href=\"#kata-containers\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/kata-containers/kata-containers\"\u003eKata Containers\u003c/a\u003e is a standard implementation of lightweight virtual machines that perform like containers but provide the workload isolation and security of virtual machines.\u003c/p\u003e\n\u003cp\u003eTo configure sudo access for a workspace with Kata Containers:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eIn the Kubernetes cluster, \u003ca href=\"https://github.com/kata-containers/kata-containers/tree/main/docs/install\"\u003einstall Kata Containers\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eIn the GitLab agent for workspaces, set the following config:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre\u003e\u003ccode\u003eremote_development:\n  enabled: true\n  dns_zone: \u0026#34;kata-update.me.com\u0026#34;\n  default_runtime_class: \u0026#34;kata-qemu\u0026#34;\n  allow_privilege_escalation: true\n\u003c/code\u003e\u003c/pre\u003e\n\u003col start=\"3\"\u003e\n\u003cli\u003eAdd other settings in the agent config as per your requirements. \u003ca href=\"https://docs.gitlab.com/ee/user/workspace/gitlab_agent_configuration.html#workspace-settings\"\u003eGitLab agent for workspaces settings\u003c/a\u003e for more information about individual settings.\u003c/li\u003e\n\u003cli\u003eAllow the agent to be used for workspaces in a group. See the \u003ca href=\"https://docs.gitlab.com/ee/user/workspace/gitlab_agent_configuration.html#allow-a-cluster-agent-for-workspaces-in-a-group\"\u003edocumentation\u003c/a\u003e for more information.\u003c/li\u003e\n\u003cli\u003eUpdate GitLab Workspaces Proxy to serve traffic for the domain used in the above agent configuration. See \u003ca href=\"https://docs.gitlab.com/ee/user/workspace/set_up_workspaces_proxy.html\"\u003eTutorial: Set up the GitLab workspaces proxy\u003c/a\u003e for more information.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"user-namespaces\" tabindex=\"-1\"\u003eUser namespaces \u003ca href=\"#user-namespaces\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://kubernetes.io/docs/concepts/workloads/pods/user-namespaces/\"\u003eUser namespaces\u003c/a\u003e isolate the user running inside the container from the user on the host.\u003c/p\u003e\n\u003cp\u003eTo configure sudo access for a workspace with user namespaces:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eIn the Kubernetes cluster, \u003ca href=\"https://kubernetes.io/blog/2024/04/22/userns-beta/\"\u003econfigure user namespaces\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eIn the GitLab agent for workspaces, set the following config:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre\u003e\u003ccode\u003eremote_development:\n  enabled: true\n  dns_zone: \u0026#34;userns-update.me.com\u0026#34;\n  use_kubernetes_user_namespaces: true\n  allow_privilege_escalation: true\n\u003c/code\u003e\u003c/pre\u003e\n\u003col start=\"3\"\u003e\n\u003cli\u003eAdd other settings in the agent config as per your requirements. \u003ca href=\"https://docs.gitlab.com/ee/user/workspace/gitlab_agent_configuration.html#workspace-settings\"\u003eGitLab agent for workspaces settings\u003c/a\u003e for more information about individual settings.\u003c/li\u003e\n\u003cli\u003eAllow the agent to be used for workspaces in a group. See the \u003ca href=\"https://docs.gitlab.com/ee/user/workspace/gitlab_agent_configuration.html#allow-a-cluster-agent-for-workspaces-in-a-group\"\u003edocumentation\u003c/a\u003e for more information.\u003c/li\u003e\n\u003cli\u003eUpdate GitLab Workspaces Proxy to serve traffic for the domain used in the above agent configuration. See \u003ca href=\"https://docs.gitlab.com/ee/user/workspace/set_up_workspaces_proxy.html\"\u003eTutorial: Set up the GitLab workspaces proxy\u003c/a\u003e for more information.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eSetting up a Kubernetes cluster with user namespaces configured is challenging since it is behind a beta feature gate in Kubernetes Version 1.31.0. This means it is not yet possible to configure such a cluster on the major cloud providers because they don\u0026#39;t provide a mechanism to enable feature gates in their managed Kubernetes offering. Here is an example of \u003ca href=\"https://gitlab.com/gitlab-org/gitlab/-/issues/468290#note_1959300036\"\u003econfiguring a simple Kuberenetes cluster using \u003ccode\u003ekubeadm\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003ch3 id=\"create-a-workspace\" tabindex=\"-1\"\u003eCreate a workspace \u003ca href=\"#create-a-workspace\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eIf you now create a workspace with these agents and try installing \u003ccode\u003ejq\u003c/code\u003e through a package manager, it should succeed!\u003c/p\u003e\n\u003cp\u003eYou can analyze the logs using \u003ccode\u003ejq\u003c/code\u003e. Say you wanted to inspect the log entries where the path is \u003ccode\u003e/path1\u003c/code\u003e, you can run:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ejq \u0026#39;select(.path == \u0026#34;/path1\u0026#34;)\u0026#39; server.log\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe output is:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e{\n  \u0026#34;time\u0026#34;: \u0026#34;2024-10-31T12:04:38.474806+05:30\u0026#34;,\n  \u0026#34;level\u0026#34;: \u0026#34;INFO\u0026#34;,\n  \u0026#34;msg\u0026#34;: \u0026#34;Request received\u0026#34;,\n  \u0026#34;path\u0026#34;: \u0026#34;/path1\u0026#34;,\n  \u0026#34;response\u0026#34;: \u0026#34;{\\n  \\\u0026#34;Accept\\\u0026#34;: [\\n    \\\u0026#34;*/*\\\u0026#34;\\n  ],\\n  \\\u0026#34;User-Agent\\\u0026#34;: [\\n    \\\u0026#34;curl/8.7.1\\\u0026#34;\\n  ],\\n  \\\u0026#34;method\\\u0026#34;: \\\u0026#34;GET\\\u0026#34;,\\n  \\\u0026#34;remote_addr\\\u0026#34;: \\\u0026#34;[::1]:61246\\\u0026#34;,\\n  \\\u0026#34;url\\\u0026#34;: \\\u0026#34;/path1\\\u0026#34;\\n}\u0026#34;\n}\n{\n  \u0026#34;time\u0026#34;: \u0026#34;2024-10-31T12:06:22.397453+05:30\u0026#34;,\n  \u0026#34;level\u0026#34;: \u0026#34;INFO\u0026#34;,\n  \u0026#34;msg\u0026#34;: \u0026#34;Request received\u0026#34;,\n  \u0026#34;path\u0026#34;: \u0026#34;/path1\u0026#34;,\n  \u0026#34;response\u0026#34;: \u0026#34;{\\n  \\\u0026#34;Accept\\\u0026#34;: [\\n    \\\u0026#34;*/*\\\u0026#34;\\n  ],\\n  \\\u0026#34;User-Agent\\\u0026#34;: [\\n    \\\u0026#34;curl/8.7.1\\\u0026#34;\\n  ],\\n  \\\u0026#34;method\\\u0026#34;: \\\u0026#34;GET\\\u0026#34;,\\n  \\\u0026#34;remote_addr\\\u0026#34;: \\\u0026#34;[::1]:61311\\\u0026#34;,\\n  \\\u0026#34;url\\\u0026#34;: \\\u0026#34;/path1\\\u0026#34;\\n}\u0026#34;\n}\n{\n  \u0026#34;time\u0026#34;: \u0026#34;2024-10-31T12:19:34.974354+05:30\u0026#34;,\n  \u0026#34;level\u0026#34;: \u0026#34;INFO\u0026#34;,\n  \u0026#34;msg\u0026#34;: \u0026#34;Request received\u0026#34;,\n  \u0026#34;path\u0026#34;: \u0026#34;/path1\u0026#34;,\n  \u0026#34;response\u0026#34;: \u0026#34;{\\n  \\\u0026#34;Accept\\\u0026#34;: [\\n    \\\u0026#34;*/*\\\u0026#34;\\n  ],\\n  \\\u0026#34;User-Agent\\\u0026#34;: [\\n    \\\u0026#34;curl/8.7.1\\\u0026#34;\\n  ],\\n  \\\u0026#34;method\\\u0026#34;: \\\u0026#34;GET\\\u0026#34;,\\n  \\\u0026#34;remote_addr\\\u0026#34;: \\\u0026#34;[::1]:61801\\\u0026#34;,\\n  \\\u0026#34;url\\\u0026#34;: \\\u0026#34;/path1\\\u0026#34;\\n}\u0026#34;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id=\"get-started-today\" tabindex=\"-1\"\u003eGet started today \u003ca href=\"#get-started-today\"\u003e\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M12.2426 3.75736C11.4615 2.97631 10.1952 2.97631 9.41416 3.75736L7.99995 5.17157C7.60942 5.56209 6.97626 5.56209 6.58573 5.17157C6.19521 4.78105 6.19521 4.14788 6.58573 3.75736L7.99995 2.34314C9.56205 0.781046 12.0947 0.781046 13.6568 2.34314C15.2189 3.90524 15.2189 6.4379 13.6568 8L12.2426 9.41421C11.8521 9.80473 11.2189 9.80473 10.8284 9.41421C10.4379 9.02369 10.4379 8.39052 10.8284 8L12.2426 6.58578C13.0236 5.80473 13.0236 4.5384 12.2426 3.75736Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M10.5355 5.4645C10.926 5.85502 10.926 6.48819 10.5355 6.87871L6.87863 10.5356C6.4881 10.9261 5.85494 10.9261 5.46441 10.5356C5.07389 10.145 5.07389 9.51188 5.46441 9.12135L9.12127 5.4645C9.51179 5.07397 10.145 5.07397 10.5355 5.4645Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003cpath d=\"M3.75742 9.41422C2.97637 10.1953 2.97637 11.4616 3.75742 12.2426C4.53847 13.0237 5.8048 13.0237 6.58584 12.2426L8.00006 10.8284C8.39058 10.4379 9.02375 10.4379 9.41427 10.8284C9.8048 11.219 9.8048 11.8521 9.41427 12.2426L8.00006 13.6569C6.43796 15.219 3.9053 15.219 2.3432 13.6569C0.781107 12.0948 0.781107 9.56211 2.3432 8.00001L3.75742 6.5858C4.14794 6.19527 4.78111 6.19527 5.17163 6.5858C5.56216 6.97632 5.56215 7.60948 5.17163 8.00001L3.75742 9.41422Z\" fill=\"#333333\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eLearn even more with our \u003ca href=\"https://docs.gitlab.com/ee/user/workspace/configuration.html#configure-sudo-access-for-a-workspace\"\u003eConfigure sudo access for a workspace documentation\u003c/a\u003e. See \u003ca href=\"https://docs.gitlab.com/ee/user/workspace/gitlab_agent_configuration.html#workspace-settings\"\u003eGitLab agent for workspaces settings\u003c/a\u003e for details on individual settings.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eNew to GitLab Remote Development? Here is a \u003ca href=\"https://about.gitlab.com/blog/2023/06/26/quick-start-guide-for-gitlab-workspaces/\"\u003equickstart guide\u003c/a\u003e to get you up to speed.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "9 min read",
  "publishedTime": "2024-11-20T00:00:00Z",
  "modifiedTime": null
}
