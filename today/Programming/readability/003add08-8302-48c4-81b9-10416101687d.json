{
  "id": "003add08-8302-48c4-81b9-10416101687d",
  "title": "The agentic experience: Is MCP the right tool for your AI future?",
  "link": "https://developers.googleblog.com/en/the-agentic-experience-is-mcp-the-right-tool-for-your-ai-future/",
  "description": "Apigee helps enterprises integrate large language models (LLMs) into existing API ecosystems securely and scalably, addressing challenges like authentication and authorization not fully covered by the evolving Model Context Protocol (MCP), and offering an open-source MCP server example that demonstrates how to implement enterprise-ready API security for AI agents.",
  "author": "",
  "published": "",
  "source": "http://feeds.feedburner.com/GDBcode",
  "categories": null,
  "byline": "Antony Arul, Ruben Gonzalez",
  "length": 4193,
  "excerpt": "Apigee helps enterprises integrate large language models (LLMs) into existing API ecosystems securely and scalably, addressing challenges like authentication and authorization not fully covered by the evolving Model Context Protocol (MCP), and offering an open-source MCP server example that demonstrates how to implement enterprise-ready API security for AI agents.",
  "siteName": "",
  "favicon": "https://storage.googleapis.com/gweb-developer-goog-blog-assets/meta/apple-touch-icon.png",
  "text": "As enterprises race to operationalize AI, the challenge isn't only about building and deploying large language models (LLMs), it's also about integrating them seamlessly into existing API ecosystems while maintaining enterprise level security, governance, and compliance. Apigee is committed to lead you in this journey. Apigee streamlines the integration of gen AI agents into applications by bolstering their security, scalability, and governance.While the Model Context Protocol (MCP) has emerged as a de facto method of integrating discrete APIs as tools, the journey of turning your APIs into these agentic tools is broader than a single protocol. This post highlights the critical role of your existing API programs in this evolution and how Apigee is committed to supporting your success, regardless of the specific tool integration path you choose.It's crucial to understand that having APIs is the foundation. If you aren't currently participating in an API program, establishing your APIs and engaging with the Apigee API hub should be your immediate next step.Exploring MCP: A reference MCP server solution for the agentic future (powered by Apigee)The Model Context Protocol (MCP) has emerged as a prominent concept in this space. However, the reality is that MCP is evolving rapidly and doesn’t speak to enterprise requirements for authentication, authorization, and observability.Apigee, Google Cloud’s native API management platform, brings your existing enterprise APIs to AI. We will continue to guide your agentic journey through this changing landscape of AI. And we will continue to make sure we bring first class, enterprise features to all of your AI workloads.Making MCP enterprise-readyLeveraging MCP services across a network requires specific security constraints. Perhaps you would like to add authentication to your MCP server itself. Once you’ve authenticated calls to the MCP server you may want to authorize access to certain tools depending on the consuming application. You may want to provide first class observability information to track which tools are being used and by whom. Finally, you may want to ensure that whatever downstream APIs your MCP server is supplying tools for also has minimum guarantees of security like already outlined aboveApigee is providing an open source example of an MCP server that provides precisely this type of API security: and all of this is available and supported for your MCP services right now.This example demonstrates the use of Apigee’s API Products for authentication and authorization controls for your tools. Further, the APIs themselves that ultimately lie behind the MCP server, deployed to Cloud Run in this case, are themselves hosted on Apigee and therefore receive the same security, distribution, and observability features that every other API hosted on Apigee. It bridges the gap between managed APIs and explorative AI interactions with Apigee’s rich feature sets to secure, scale, and govern your AI journey. This demonstration shows how you can get up and running with an MCP server right now, while providing the necessary enterprise controls you need. And if the MCP standard changes this setup is very easy to adapt as it’s ultimately just serving backends like any other with Apigee.As seen below we bring API products to these Agents and MCP Tools and make them AI products. These AI Products have their own consumers and developers just like any other API. Explore our GitHub for guidanceOur GitHub repository containing a quick start guide, sample artifacts, and documentation will help you navigate to build, and deploy the reference MCP Serving architecture in Apigee and understand the steps involved in exposing your APIs as tools for AI Agents by leverage API Products.Paving the way for your AI future with ApigeeThis journey will adapt and change over time: MCP is evolving, as seen with the shift from no initial AuthN to OAuth for AuthZ and resource serving. Google Apigee is committed to evolving with it.Learn more about operationalizing generative AI apps with Apigee and explore our AI policies documentation.",
  "image": "https://storage.googleapis.com/gweb-developer-goog-blog-assets/images/mcp-apigee-agentic-experience-met.2e16d0ba.fill-1200x600.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\n    \n      \n    \n\n    \n\n    \n\n    \n\n    \n    \u003cdiv\u003e\n          \n\n\u003cdiv\u003e\n    \u003cp data-block-key=\"a6n3t\"\u003eAs enterprises race to operationalize AI, the challenge isn\u0026#39;t only about building and deploying large language models (LLMs), it\u0026#39;s also about integrating them seamlessly into existing API ecosystems while maintaining enterprise level security, governance, and compliance. Apigee is committed to lead you in this journey. Apigee streamlines the integration of gen AI agents into applications by bolstering their security, scalability, and governance.\u003c/p\u003e\u003cp data-block-key=\"b9c0f\"\u003eWhile the Model Context Protocol (MCP) has emerged as a de facto method of integrating discrete APIs as tools, the journey of turning your APIs into these agentic tools is broader than a single protocol. This post highlights the critical role of your existing API programs in this evolution and how Apigee is committed to supporting your success, regardless of the specific tool integration path you choose.\u003c/p\u003e\u003cp data-block-key=\"1ldvp\"\u003eIt\u0026#39;s crucial to understand that having APIs is the foundation. If you aren\u0026#39;t currently participating in an API program, establishing your APIs and engaging with the \u003ca href=\"https://cloud.google.com/apigee/docs/apihub/what-is-api-hub\"\u003eApigee API hub\u003c/a\u003e should be your immediate next step.\u003c/p\u003e\u003ch2 data-block-key=\"kzh6m\" id=\"exploring-mcp:-a-reference-mcp-server-solution-for-the-agentic-future-(powered-by-apigee)\"\u003e\u003cb\u003e\u003cbr/\u003e\u003c/b\u003eExploring MCP: A reference MCP server solution for the agentic future (powered by Apigee)\u003c/h2\u003e\u003cp data-block-key=\"122ke\"\u003eThe Model Context Protocol (MCP) has emerged as a prominent concept in this space. However, the reality is that MCP is evolving rapidly and doesn’t speak to enterprise requirements for authentication, authorization, and observability.\u003c/p\u003e\u003cp data-block-key=\"1gt0g\"\u003e\u003ca href=\"https://cloud.google.com/apigee?hl=en\"\u003eApigee\u003c/a\u003e, Google Cloud’s native API management platform, brings your existing enterprise APIs to AI. We will continue to guide your agentic journey through this changing landscape of AI. And we will continue to make sure we bring first class, enterprise features to all of your AI workloads.\u003c/p\u003e\u003ch2 data-block-key=\"f8tra\" id=\"making-mcp-enterprise-ready\"\u003e\u003cb\u003e\u003cbr/\u003e\u003c/b\u003eMaking MCP enterprise-ready\u003c/h2\u003e\u003cp data-block-key=\"2v3sq\"\u003eLeveraging MCP services across a network requires specific security constraints. Perhaps you would like to add authentication to your MCP server itself. Once you’ve authenticated calls to the MCP server you may want to authorize access to certain tools depending on the consuming application. You may want to provide first class observability information to track which tools are being used and by whom. Finally, you may want to ensure that whatever downstream APIs your MCP server is supplying tools for also has minimum guarantees of security like already outlined above\u003c/p\u003e\u003cp data-block-key=\"ehk5c\"\u003eApigee is providing an \u003ca href=\"https://github.com/GoogleCloudPlatform/apigee-samples/tree/main/apigee-mcp\"\u003e\u003cb\u003eopen source\u003c/b\u003e example\u003c/a\u003e of an MCP server that provides precisely this type of API security: and all of this is available and supported for your MCP services right now.\u003c/p\u003e\u003cp data-block-key=\"5cag1\"\u003eThis example demonstrates the use of Apigee’s API Products for authentication and authorization controls for your tools. Further, the APIs themselves that ultimately lie behind the MCP server, deployed to Cloud Run in this case, are themselves hosted on Apigee and therefore receive the same security, distribution, and observability features that every other API hosted on Apigee. It bridges the gap between managed APIs and explorative AI interactions with Apigee’s rich feature sets to secure, scale, and govern your AI journey. This demonstration shows how you can get up and running with an MCP server right now, while providing the necessary enterprise controls you need. And if the MCP standard changes this setup is very easy to adapt as it’s ultimately just serving backends like any other with Apigee.\u003c/p\u003e\u003cp data-block-key=\"ap0t\"\u003eAs seen below we bring API products to these Agents and MCP Tools and make them AI products. These AI Products have their own consumers and developers just like any other API.\u003c/p\u003e\n\u003c/div\u003e   \n\n\n    \n    \u003cdiv\u003e\n        \u003cp\u003e\u003cimg src=\"https://storage.googleapis.com/gweb-developer-goog-blog-assets/images/image5_2ySlzKi.original.png\" alt=\"API product to AI product\"/\u003e\n            \n            \n        \u003c/p\u003e\n    \u003c/div\u003e\n  \u003cdiv\u003e\n    \u003ch2 data-block-key=\"4mojf\" id=\"explore-our-github-for-guidance\"\u003eExplore our GitHub for guidance\u003c/h2\u003e\u003cp data-block-key=\"16fa\"\u003eOur \u003ca href=\"https://github.com/GoogleCloudPlatform/apigee-samples/tree/main/apigee-mcp\"\u003eGitHub repository\u003c/a\u003e containing a quick start guide, sample artifacts, and documentation will help you navigate to build, and deploy the reference MCP Serving architecture in Apigee and understand the steps involved in exposing your APIs as tools for AI Agents by leverage API Products.\u003c/p\u003e\u003ch2 data-block-key=\"0wxsc\" id=\"paving-the-way-for-your-ai-future-with-apigee\"\u003e\u003cb\u003e\u003cbr/\u003e\u003c/b\u003ePaving the way for your AI future with Apigee\u003c/h2\u003e\u003cp data-block-key=\"de3dp\"\u003eThis journey will adapt and change over time: MCP is evolving, as seen with the shift from no initial AuthN to OAuth for AuthZ and resource serving. Google Apigee is committed to evolving with it.\u003c/p\u003e\u003cp data-block-key=\"3vmf0\"\u003eLearn more about \u003ca href=\"https://cloud.google.com/blog/products/api-management/using-apigee-api-management-for-ai?e=0\"\u003eoperationalizing generative AI apps with Apigee\u003c/a\u003e and explore our \u003ca href=\"https://cloud.google.com/apigee/docs/api-platform/reference/policies/reference-overview-policy\"\u003eAI policies\u003c/a\u003e documentation.\u003c/p\u003e\n\u003c/div\u003e \n      \u003c/div\u003e\n    \n\n    \n\n    \n    \n    \n  \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": "2025-07-24T00:00:00Z",
  "modifiedTime": null
}
