{
  "id": "375552d9-7179-4a8f-97cb-8fae34c862de",
  "title": "Vertex AI RAG Engine: A developers tool",
  "link": "https://developers.googleblog.com/en/vertex-ai-rag-engine-a-developers-tool/",
  "description": "Vertex AI RAG Engine, a managed orchestration service, streamlines the process of retrieving and feeding relevant information to Large Language Models. This enables developers to build robust, grounded generative AI apps that ensure responses are factually grounded.",
  "author": "",
  "published": "",
  "source": "http://feeds.feedburner.com/GDBcode",
  "categories": null,
  "byline": "Crispin Velez, Holt Skinner",
  "length": 8247,
  "excerpt": "Vertex AI RAG Engine, a managed orchestration service, streamlines the process of retrieving and feeding relevant information to Large Language Models. This enables developers to build robust, grounded generative AI apps that ensure responses are factually grounded.",
  "siteName": "",
  "favicon": "",
  "text": "Generative AI and Large Language Models (LLMs) are transforming industries, but two key challenges can hinder enterprise adoption: hallucinations (generating incorrect or nonsensical information) and limited knowledge beyond their training data. Retrieval Augmented Generation (RAG) and grounding offer solutions by connecting LLMs to external data sources, enabling them to access up-to-date information and generate more factual and relevant responses.This post explores Vertex AI RAG Engine and how it empowers software and AI developers to build robust, grounded generative AI applications.What is RAG and why do you need it?RAG retrieves relevant information from a knowledge base and feeds it to an LLM, allowing it to generate more accurate and informed responses. This contrasts with relying solely on the LLM's pre-trained knowledge, which can be outdated or incomplete. RAG is essential for building enterprise-grade Gen AI applications that require:Accuracy: Minimizing hallucinations and ensuring responses are factually grounded.Up-to-date Information: Accessing the latest data and insights.Domain Expertise: Leveraging specialized knowledge bases for specific use cases.RAG vs Grounding vs SearchRAG: a technique to retrieve and provide relevant information to LLMs to generate responses. The information can include fresh information, topic and context, or ground truth.Grounding: Ensure the reliability and trustworthiness of AI-generated content by anchoring it to verified sources of information. Grounding may use RAG as a technique.Search: an approach to quickly find and deliver relevant information from a data source based on text or multi-modal queries powered by advanced AI models.Introducing Vertex AI RAG EngineVertex AI RAG Engine is a managed orchestration service, streamlining the complex process of retrieving relevant information and feeding it to an LLM. This allows developers to focus on building their applications rather than managing infrastructure. Key Advantages of Vertex AI RAG Engine:Ease of Use: Get started quickly with a simple API, enabling rapid prototyping and experimentation.Managed Orchestration: Handles the complexities of data retrieval and LLM integration, freeing developers from infrastructure management.Customization and Open-Source Support: Choose from a variety of parsing, chunking, annotation, embedding, vector storage, and open-source models, or customize your own components.High-Quality Google Components: Leverage Google's cutting-edge technology for optimal performance.Integration Flexibility: Connect to various vector databases like Pinecone and Weaviate, or use Vertex AI Vector Search.Vertex AI RAG: A Spectrum of SolutionsGoogle Cloud offers a spectrum of RAG and grounding solutions, catering to varying levels of complexity and customization:Vertex AI Search: A fully managed search engine and retriever API ideal for complex enterprise use cases requiring high out-of-the-box quality, scalability, and fine-grained access controls. It simplifies connecting to diverse enterprise data sources and enables searching across multiple sources.Fully DIY RAG: For developers seeking complete control, Vertex AI provides individual component APIs (e.g., Text Embedding API, Ranking API, Grounding on Vertex AI) to build custom RAG pipelines. This approach offers maximum flexibility but requires significant development effort. Use this if you need very specific customizations or want to integrate with existing RAG frameworks.Vertex AI RAG Engine: The sweet spot for developers seeking a balance between ease of use and customization. It empowers rapid prototyping and development without sacrificing flexibility.Common Industry use cases for RAG Engine:Financial Services: Personalized Investment Advice \u0026 Risk Assessment:Problem: Financial advisors need to quickly synthesize vast amounts of information – client profiles, market data, regulatory filings, and internal research – to provide tailored investment advice and accurate risk assessments. Manually reviewing all this information is time-consuming and prone to errors.RAG Engine Solution: A RAG engine can ingest and index relevant data sources. Financial advisors can then query the system with a client's specific profile and investment goals. The RAG engine will provide a concise, evidence-based response drawing from the relevant documents, including citations to support the recommendations. This improves advisor efficiency, reduces risk of human error, and enhances the personalization of advice. The system could also flag potential conflicts of interest or regulatory violations based on information found in the ingested data.2. Healthcare: Accelerated Drug Discovery \u0026 Personalized Treatment Plans:Problem: Drug discovery and personalized medicine rely heavily on analyzing massive datasets of clinical trials, research papers, patient records, and genetic information. Sifting through this data to identify potential drug targets, predict patient responses to treatments, or generate personalized treatment plans is incredibly challenging.RAG Engine Solution: With appropriate privacy and security measures, a RAG engine can ingest and index the vast biomedical literature and patient data . Researchers can then pose complex queries, like \"What are the potential side effects of drug X in patients with genotype Y?\" The RAG engine would synthesize relevant information from various sources, providing researchers with insights they might miss in a manual search. For clinicians, the engine could help generate suggested personalized treatment plans based on a patient's unique characteristics and medical history, supported by evidence from relevant research.3. Legal: Enhanced Due Diligence and Contract Review:Problem: Legal professionals spend significant time reviewing documents during due diligence processes, contract negotiations, and litigation. Finding relevant clauses, identifying potential risks, and ensuring compliance with regulations is time-intensive and requires deep expertise.RAG Engine Solution: A RAG engine can ingest and index legal documents, case law, and regulatory information. Legal professionals can query the system to find specific clauses within contracts, identify potential legal risks, and research relevant precedents. The engine can highlight inconsistencies, potential liabilities, and relevant case law, significantly speeding up the review process and improving accuracy. This leads to faster deal closures, reduced legal risks, and more efficient use of legal expertise.Getting started with Vertex AI RAG EngineGoogle provides ample resources to help you get started, including:Getting Started Notebook:https://github.com/GoogleCloudPlatform/generative-ai/blob/main/gemini/rag-engine/intro_rag_engine.ipynbDocumentation: Comprehensive documentation guides you through the setup and usage of RAG Engine.https://cloud.google.com/vertex-ai/generative-ai/docs/rag-overviewIntegrations: Examples with Vertex AI Vector Search, Vertex AI Feature Store, Pinecone, and Weaviatehttps://github.com/GoogleCloudPlatform/generative-ai/blob/main/gemini/rag-engine/rag_engine_vector_search.ipynbhttps://github.com/GoogleCloudPlatform/generative-ai/blob/main/gemini/rag-engine/rag_engine_feature_store.ipynbhttps://github.com/GoogleCloudPlatform/generative-ai/blob/main/gemini/rag-engine/rag_engine_pinecone.ipynbhttps://github.com/GoogleCloudPlatform/generative-ai/blob/main/gemini/rag-engine/rag_engine_weaviate.ipynbEvaluation Framework: Learn how to evaluate and perform hyperparameter tuning for retrieval with RAG Engine:https://github.com/GoogleCloudPlatform/generative-ai/blob/main/gemini/rag-engine/rag_engine_evaluation.ipynbBuild grounded generative AIVertex AI's RAG Engine and suite of grounding solutions empower developers to build more reliable, factual, and insightful generative AI applications. By leveraging these tools, you can unlock the full potential of LLMs and overcome the challenges of hallucinations and limited knowledge, paving the way for wider enterprise adoption of generative AI. Choose the solution that best fits your needs and start building the next generation of intelligent applications.",
  "image": "https://storage.googleapis.com/gweb-developer-goog-blog-assets/images/Cloud-Vertex-AI-Sequence_5.2e16d0ba.fill-1200x600.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\n    \n      \n    \n\n    \n\n    \n\n    \n\n    \n    \u003cdiv\u003e\n          \n\n\u003cdiv\u003e\n    \u003cp data-block-key=\"ef58g\"\u003eGenerative AI and Large Language Models (LLMs) are transforming industries, but two key challenges can hinder enterprise adoption: hallucinations (generating incorrect or nonsensical information) and limited knowledge beyond their training data. Retrieval Augmented Generation (RAG) and grounding offer solutions by connecting LLMs to external data sources, enabling them to access up-to-date information and generate more factual and relevant responses.\u003c/p\u003e\u003cp data-block-key=\"b52cf\"\u003eThis post explores Vertex AI RAG Engine and how it empowers software and AI developers to build robust, grounded generative AI applications.\u003c/p\u003e\u003ch3 data-block-key=\"cbcsb\"\u003e\u003cb\u003e\u003cbr/\u003eWhat is RAG and why do you need it?\u003c/b\u003e\u003c/h3\u003e\u003cp data-block-key=\"fc3nr\"\u003eRAG retrieves relevant information from a knowledge base and feeds it to an LLM, allowing it to generate more accurate and informed responses. This contrasts with relying solely on the LLM\u0026#39;s pre-trained knowledge, which can be outdated or incomplete. RAG is essential for building enterprise-grade Gen AI applications that require:\u003c/p\u003e\u003cul\u003e\u003cli data-block-key=\"a27sq\"\u003e\u003cb\u003eAccuracy:\u003c/b\u003e Minimizing hallucinations and ensuring responses are factually grounded.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"6qvmc\"\u003e\u003cb\u003eUp-to-date Information:\u003c/b\u003e Accessing the latest data and insights.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"d5s1d\"\u003e\u003cb\u003eDomain Expertise:\u003c/b\u003e Leveraging specialized knowledge bases for specific use cases.\u003c/li\u003e\u003c/ul\u003e\u003ch2 data-block-key=\"efh20\"\u003e\u003cbr/\u003eRAG vs Grounding vs Search\u003c/h2\u003e\u003cul\u003e\u003cli data-block-key=\"956pv\"\u003e\u003cb\u003eRAG\u003c/b\u003e: a technique to retrieve and provide relevant information to LLMs to generate responses. The information can include fresh information, topic and context, or ground truth.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"34ros\"\u003e\u003cb\u003eGrounding\u003c/b\u003e: Ensure the reliability and trustworthiness of AI-generated content by anchoring it to verified sources of information. Grounding may use RAG as a technique.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"93m4\"\u003e\u003cb\u003eSearch\u003c/b\u003e: an approach to quickly find and deliver relevant information from a data source based on text or multi-modal queries powered by advanced AI models.\u003c/li\u003e\u003c/ul\u003e\u003ch2 data-block-key=\"cl9dd\"\u003e\u003cbr/\u003eIntroducing Vertex AI RAG Engine\u003c/h2\u003e\u003cp data-block-key=\"ef8f4\"\u003eVertex AI RAG Engine is a managed orchestration service, streamlining the complex process of retrieving relevant information and feeding it to an LLM. This allows developers to focus on building their applications rather than managing infrastructure.\u003c/p\u003e\n\u003c/div\u003e   \n\n\u003cdiv\u003e\n    \u003cp\u003e\u003cimg src=\"https://storage.googleapis.com/gweb-developer-goog-blog-assets/images/Vertex_RAG_diagram_b4Csnl2.original.png\" alt=\"Diagram of Vertex RAG architecture\"/\u003e\n        \n        \n    \u003c/p\u003e\n\u003c/div\u003e\n  \u003cdiv\u003e\n    \u003cp data-block-key=\"1x24i\"\u003e\u003cb\u003eKey Advantages of Vertex AI RAG Engine:\u003c/b\u003e\u003c/p\u003e\u003cul\u003e\u003cli data-block-key=\"fph2f\"\u003e\u003cb\u003eEase of Use:\u003c/b\u003e Get started quickly with a simple API, enabling rapid prototyping and experimentation.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"d6c6s\"\u003e\u003cb\u003eManaged Orchestration:\u003c/b\u003e Handles the complexities of data retrieval and LLM integration, freeing developers from infrastructure management.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"d220b\"\u003e\u003cb\u003eCustomization and Open-Source Support:\u003c/b\u003e Choose from a variety of parsing, chunking, annotation, embedding, vector storage, and open-source models, or customize your own components.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"11pv8\"\u003e\u003cb\u003eHigh-Quality Google Components:\u003c/b\u003e Leverage Google\u0026#39;s cutting-edge technology for optimal performance.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"1bvm5\"\u003e\u003cb\u003eIntegration Flexibility:\u003c/b\u003e Connect to various vector databases like Pinecone and Weaviate, or use Vertex AI Vector Search.\u003c/li\u003e\u003c/ul\u003e\u003ch3 data-block-key=\"bpvni\"\u003e\u003cb\u003e\u003cbr/\u003eVertex AI RAG: A Spectrum of Solutions\u003c/b\u003e\u003c/h3\u003e\u003cp data-block-key=\"707fa\"\u003eGoogle Cloud offers a spectrum of RAG and grounding solutions, catering to varying levels of complexity and customization:\u003c/p\u003e\u003cul\u003e\u003cli data-block-key=\"6qdfa\"\u003e\u003cb\u003eVertex AI Search:\u003c/b\u003e A fully managed search engine and retriever API ideal for complex enterprise use cases requiring high out-of-the-box quality, scalability, and fine-grained access controls. It simplifies connecting to diverse enterprise data sources and enables searching across multiple sources.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"9ofhh\"\u003e\u003cb\u003eFully DIY RAG:\u003c/b\u003e For developers seeking complete control, Vertex AI provides individual component APIs (e.g., Text Embedding API, Ranking API, Grounding on Vertex AI) to build custom RAG pipelines. This approach offers maximum flexibility but requires significant development effort. Use this if you need very specific customizations or want to integrate with existing RAG frameworks.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"b5osa\"\u003e\u003cb\u003eVertex AI RAG Engine:\u003c/b\u003e The sweet spot for developers seeking a balance between ease of use and customization. It empowers rapid prototyping and development without sacrificing flexibility.\u003c/li\u003e\u003c/ul\u003e\u003ch3 data-block-key=\"dcfqb\"\u003e\u003cb\u003e\u003cbr/\u003eCommon Industry use cases for RAG Engine:\u003c/b\u003e\u003c/h3\u003e\u003col\u003e\u003cli data-block-key=\"b1m1u\"\u003e\u003cb\u003eFinancial Services: Personalized Investment Advice \u0026amp; Risk Assessment:\u003c/b\u003e\u003c/li\u003e\u003c/ol\u003e\u003cp data-block-key=\"62mb1\"\u003eProblem: Financial advisors need to quickly synthesize vast amounts of information – client profiles, market data, regulatory filings, and internal research – to provide tailored investment advice and accurate risk assessments. Manually reviewing all this information is time-consuming and prone to errors.\u003c/p\u003e\u003cp data-block-key=\"55bup\"\u003eRAG Engine Solution: A RAG engine can ingest and index relevant data sources. Financial advisors can then query the system with a client\u0026#39;s specific profile and investment goals. The RAG engine will provide a concise, evidence-based response drawing from the relevant documents, including citations to support the recommendations. This improves advisor efficiency, reduces risk of human error, and enhances the personalization of advice. The system could also flag potential conflicts of interest or regulatory violations based on information found in the ingested data.\u003c/p\u003e\u003cp data-block-key=\"2vdsj\"\u003e\u003cbr/\u003e\u003cb\u003e2. Healthcare: Accelerated Drug Discovery \u0026amp; Personalized Treatment Plans:\u003c/b\u003e\u003c/p\u003e\u003cp data-block-key=\"3gva7\"\u003eProblem: Drug discovery and personalized medicine rely heavily on analyzing massive datasets of clinical trials, research papers, patient records, and genetic information. Sifting through this data to identify potential drug targets, predict patient responses to treatments, or generate personalized treatment plans is incredibly challenging.\u003c/p\u003e\u003cp data-block-key=\"9kt0q\"\u003eRAG Engine Solution: With appropriate privacy and security measures, a RAG engine can ingest and index the vast biomedical literature and patient data . Researchers can then pose complex queries, like \u0026#34;What are the potential side effects of drug X in patients with genotype Y?\u0026#34; The RAG engine would synthesize relevant information from various sources, providing researchers with insights they might miss in a manual search. For clinicians, the engine could help generate suggested personalized treatment plans based on a patient\u0026#39;s unique characteristics and medical history, supported by evidence from relevant research.\u003c/p\u003e\u003cp data-block-key=\"asqcf\"\u003e\u003cbr/\u003e\u003cb\u003e3. Legal: Enhanced Due Diligence and Contract Review:\u003c/b\u003e\u003c/p\u003e\u003cp data-block-key=\"bk72c\"\u003eProblem: Legal professionals spend significant time reviewing documents during due diligence processes, contract negotiations, and litigation. Finding relevant clauses, identifying potential risks, and ensuring compliance with regulations is time-intensive and requires deep expertise.\u003c/p\u003e\u003cp data-block-key=\"5133r\"\u003eRAG Engine Solution: A RAG engine can ingest and index legal documents, case law, and regulatory information. Legal professionals can query the system to find specific clauses within contracts, identify potential legal risks, and research relevant precedents. The engine can highlight inconsistencies, potential liabilities, and relevant case law, significantly speeding up the review process and improving accuracy. This leads to faster deal closures, reduced legal risks, and more efficient use of legal expertise.\u003c/p\u003e\u003ch2 data-block-key=\"5u2ba\"\u003e\u003cb\u003e\u003cbr/\u003e\u003c/b\u003eGetting started with Vertex AI RAG Engine\u003c/h2\u003e\u003cp data-block-key=\"5he7r\"\u003eGoogle provides ample resources to help you get started, including:\u003c/p\u003e\u003cul\u003e\u003cli data-block-key=\"7vppn\"\u003e\u003cb\u003eGetting Started Notebook:\u003c/b\u003e\u003cul\u003e\u003cli data-block-key=\"6jfga\"\u003e\u003ca href=\"https://github.com/GoogleCloudPlatform/generative-ai/blob/main/gemini/rag-engine/intro_rag_engine.ipynb\"\u003ehttps://github.com/GoogleCloudPlatform/generative-ai/blob/main/gemini/rag-engine/intro_rag_engine.ipynb\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"aa05l\"\u003e\u003cb\u003eDocumentation:\u003c/b\u003e Comprehensive documentation guides you through the setup and usage of RAG Engine.\u003cul\u003e\u003cli data-block-key=\"dkblq\"\u003e\u003ca href=\"https://cloud.google.com/vertex-ai/generative-ai/docs/rag-overview\"\u003ehttps://cloud.google.com/vertex-ai/generative-ai/docs/rag-overview\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"ap79t\"\u003e\u003cb\u003eIntegrations:\u003c/b\u003e Examples with Vertex AI Vector Search, Vertex AI Feature Store, Pinecone, and Weaviate\u003cul\u003e\u003cli data-block-key=\"b3qkb\"\u003e\u003ca href=\"https://github.com/GoogleCloudPlatform/generative-ai/blob/main/gemini/rag-engine/rag_engine_vector_search.ipynb\"\u003ehttps://github.com/GoogleCloudPlatform/generative-ai/blob/main/gemini/rag-engine/rag_engine_vector_search.ipynb\u003c/a\u003e\u003c/li\u003e\u003cli data-block-key=\"2ig9s\"\u003e\u003ca href=\"https://github.com/GoogleCloudPlatform/generative-ai/blob/main/gemini/rag-engine/rag_engine_feature_store.ipynb\"\u003ehttps://github.com/GoogleCloudPlatform/generative-ai/blob/main/gemini/rag-engine/rag_engine_feature_store.ipynb\u003c/a\u003e\u003c/li\u003e\u003cli data-block-key=\"7pgu1\"\u003e\u003ca href=\"https://github.com/GoogleCloudPlatform/generative-ai/blob/main/gemini/rag-engine/rag_engine_pinecone.ipynb\"\u003ehttps://github.com/GoogleCloudPlatform/generative-ai/blob/main/gemini/rag-engine/rag_engine_pinecone.ipynb\u003c/a\u003e\u003c/li\u003e\u003cli data-block-key=\"7ip0e\"\u003e\u003ca href=\"https://github.com/GoogleCloudPlatform/generative-ai/blob/main/gemini/rag-engine/rag_engine_weaviate.ipynb\"\u003ehttps://github.com/GoogleCloudPlatform/generative-ai/blob/main/gemini/rag-engine/rag_engine_weaviate.ipynb\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli data-block-key=\"72ovo\"\u003e\u003cb\u003eEvaluation Framework:\u003c/b\u003e Learn how to evaluate and perform hyperparameter tuning for retrieval with RAG Engine:\u003cul\u003e\u003cli data-block-key=\"69osa\"\u003e\u003ca href=\"https://github.com/GoogleCloudPlatform/generative-ai/blob/main/gemini/rag-engine/rag_engine_evaluation.ipynb\"\u003ehttps://github.com/GoogleCloudPlatform/generative-ai/blob/main/gemini/rag-engine/rag_engine_evaluation.ipynb\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3 data-block-key=\"16k1g\"\u003e\u003cbr/\u003e\u003cb\u003eBuild grounded generative AI\u003c/b\u003e\u003c/h3\u003e\u003cp data-block-key=\"91ifj\"\u003eVertex AI\u0026#39;s RAG Engine and suite of grounding solutions empower developers to build more reliable, factual, and insightful generative AI applications. By leveraging these tools, you can unlock the full potential of LLMs and overcome the challenges of hallucinations and limited knowledge, paving the way for wider enterprise adoption of generative AI. Choose the solution that best fits your needs and start building the next generation of intelligent applications.\u003c/p\u003e\n\u003c/div\u003e \n      \u003c/div\u003e\n    \n\n    \n\n    \n    \n    \n  \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "9 min read",
  "publishedTime": "2025-01-15T00:00:00Z",
  "modifiedTime": null
}
