{
  "id": "27aef276-c548-4c25-91d6-847e57b75e1f",
  "title": "Kubernetes 1.32 Released with Dynamic Resource Allocation and Graceful Shutdown of Windows Nodes",
  "link": "https://www.infoq.com/news/2024/12/kubernetes-1-32/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "The Cloud Native Computing Foundation (CNCF) released Kubernetes 1.32, named Penelope a few weeks ago. The new release introduced support for the Graceful Shutdown of Windows Nodes, new status endpoints for core components, and asynchronous preemptions in the Kubernetes scheduler. By Mostafa Radwan",
  "author": "Mostafa Radwan",
  "published": "Sun, 29 Dec 2024 22:00:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Kubernetes",
    "Cloud Native Computing Foundation",
    "Containers",
    "Architecture \u0026 Design",
    "Development",
    "DevOps",
    "news"
  ],
  "byline": "Mostafa Radwan",
  "length": 3491,
  "excerpt": "The Cloud Native Computing Foundation (CNCF) released Kubernetes 1.32, named Penelope a few weeks ago. The new release introduced support for the Graceful Shutdown of Windows Nodes, new status endpoin",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s2_20241210082921/apple-touch-icon.png",
  "text": "The Cloud Native Computing Foundation (CNCF) released Kubernetes 1.32, named Penelope a few weeks ago. The new release introduced support for the Graceful Shutdown of Windows Nodes, new status endpoints for core components, and asynchronous preemptions in the Kubernetes scheduler. A key feature in Kubernetes 1.32 is the various enhancements to Dynamic Resource Allocation (DRA), a cluster-level API for requesting and sharing resources between pods and containers. These enhancements improve the ability to effectively manage resource allocation for AI/ML workloads that rely heavily on specialized hardware such as GPUs. Some alpha features in version 1.32 include two new HTTP status endpoints /statusz and /flagz for core components such as the kube-scheduler and kube-controller-manager. This makes gathering details about a cluster's health and configuration easier to identify and troubleshoot issues. Another feature entering alpha in this release is asynchronous preemption in the scheduler. This mechanism allows high-priority pods to get the resources needed by evicting low-priority pods in parallel, minimizing delays in scheduling other pods in the cluster. In addition, an enhancement to Gracefully Shut down Windows Nodes has been added to the Kublet to ensure proper lifecycle events are followed for pods. This allows pods running on Windows nodes to be gracefully terminated and workloads rescheduled without disruption. Before this enhancement, this functionality was limited only to Linux nodes. The automatic removal of PersistantVolumeClaims(PVCs)created by StatefulSets is a stable feature in version 1.32. This streamlines storage management, especially for stateful workloads, and reduces the risk of unused resources. This release also includes a generally available improvement to the Kubelet to generate and export OpenTelemetry trace data. This aims to make monitoring, detecting, and resolving issues related to the Kubelet easier. Allowing anonymous authorization for configured endpoints moved to beta in this release. This enhancement is enabled by default in version 1.32 allowing cluster administrators to specify which endpoints can be accessed anonymously. Additionally, recovery from volume expansion failure is a beta feature in the new release. This improvement allows recovery from a volume expansion failure by retrying with a smaller size, reducing the risk of data loss or corruption throughout the process. The flowcontrol.apiserver.k8s.io/v1beta3 API related to FlowSchema and PriorityLevelConfiguration was removed in the new release. It’s part of the Kubernetes API functionality to deal with an overload of incoming requests. Users are encouraged to migrate to flowcontrol.apiserver.k8s.io/v1 which has been available since version 1.29. According to the release notes, Kubernetes version 1.32 has 44 enhancements, including 19 entering alpha, 12 graduating to beta, and 13 becoming generally available or stable. For more information on the Kubernetes 1.32 release, users can refer to the official release notes and documentation for a detailed overview of the enhancements and deprecations in this version or watch the upcoming CNCF webinar by the release team scheduled for Thursday, January 9th, 2025 at 5 PM UTC. The next release version 1.33 is expected in April 2025. About the Author Mostafa Radwan",
  "image": "https://res.infoq.com/news/2024/12/kubernetes-1-32/en/headerimage/generatedHeaderImage-1735505854564.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\n\u003cp\u003eThe Cloud Native Computing Foundation (CNCF) released Kubernetes 1.32, named Penelope a few weeks ago. The new release introduced support for the Graceful Shutdown of Windows Nodes, new status endpoints for core components, and asynchronous preemptions in the Kubernetes scheduler.\u003c/p\u003e\n\n\u003cp\u003eA key feature in Kubernetes 1.32 is the various enhancements to \u003ca href=\"https://kubernetes.io/docs/concepts/scheduling-eviction/dynamic-resource-allocation/\" target=\"_blank\"\u003eDynamic Resource Allocation\u003c/a\u003e (DRA), a cluster-level API for requesting and sharing resources between pods and containers. These enhancements improve the ability to effectively manage resource allocation for AI/ML workloads that rely heavily on specialized hardware such as \u003ca href=\"https://developers.redhat.com/articles/2024/08/07/what-gpu-programming#\" target=\"_blank\"\u003eGPUs\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eSome alpha features in version 1.32 include two new HTTP \u003ca href=\"https://github.com/kubernetes/enhancements/issues/4827\" target=\"_blank\"\u003estatus endpoints\u003c/a\u003e \u003ccode\u003e/statusz\u003c/code\u003e and \u003ccode\u003e/flagz\u003c/code\u003e for core components such as the kube-scheduler and kube-controller-manager. This makes gathering details about a cluster\u0026#39;s health and configuration easier to identify and troubleshoot issues.\u003c/p\u003e\n\n\u003cp\u003eAnother feature entering alpha in this release is asynchronous \u003ca href=\"https://kubernetes.io/docs/concepts/scheduling-eviction/\" target=\"_blank\"\u003epreemption\u003c/a\u003e in the scheduler. This \u003ca href=\"https://github.com/kubernetes/enhancements/issues/4832\" target=\"_blank\"\u003emechanism\u003c/a\u003e allows high-priority pods to get the resources needed by evicting low-priority pods in parallel, minimizing delays in scheduling other pods in the cluster.\u003c/p\u003e\n\n\u003cp\u003eIn addition, an enhancement to \u003ca href=\"https://github.com/kubernetes/enhancements/issues/4802\" target=\"_blank\"\u003eGracefully Shut down Windows Nodes\u003c/a\u003e has been added to the \u003ca href=\"https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/\" target=\"_blank\"\u003eKublet\u003c/a\u003e to ensure proper lifecycle \u003ca href=\"https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/\" target=\"_blank\"\u003eevents\u003c/a\u003e are followed for pods. This allows pods running on Windows nodes to be gracefully terminated and workloads rescheduled without disruption. Before this enhancement, this functionality was limited only to Linux nodes.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://github.com/kubernetes/enhancements/issues/1847\" target=\"_blank\"\u003eautomatic\u003c/a\u003e removal of \u003ccode\u003ePersistantVolumeClaims(PVCs)\u003c/code\u003ecreated by \u003ccode\u003e\u003ca href=\"https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/\" target=\"_blank\"\u003eStatefulSets\u003c/a\u003e\u003c/code\u003e is a stable feature in version 1.32. This streamlines storage management, especially for stateful workloads, and reduces the risk of unused resources.\u003c/p\u003e\n\n\u003cp\u003eThis release also includes a generally available \u003ca href=\"https://github.com/orgs/kubernetes/projects/195/views/1?filterQuery=type%3AGraduating+sig%3A%22sig-node%22\u0026amp;pane=issue\u0026amp;itemId=80141463\u0026amp;issue=kubernetes%7Cenhancements%7C2831\" target=\"_blank\"\u003eimprovement\u003c/a\u003e to the Kubelet to generate and export \u003ca href=\"https://opentelemetry.io/docs/\" target=\"_blank\"\u003eOpenTelemetry\u003c/a\u003e trace data. This aims to make monitoring, detecting, and resolving issues related to the Kubelet easier.\u003c/p\u003e\n\n\u003cp\u003eAllowing anonymous authorization for \u003ca href=\"https://github.com/kubernetes/enhancements/issues/4633\" target=\"_blank\"\u003econfigured endpoints \u003c/a\u003emoved to beta in this release. This enhancement is enabled by default in version 1.32 allowing cluster administrators to specify which \u003ca href=\"https://kubernetes.io/docs/reference/using-api/health-checks/\" target=\"_blank\"\u003eendpoints\u003c/a\u003e can be accessed anonymously.\u003c/p\u003e\n\n\u003cp\u003eAdditionally, recovery from volume expansion failure is a beta feature in the new release. This \u003ca href=\"https://github.com/kubernetes/enhancements/issues/1790\" target=\"_blank\"\u003eimprovement\u003c/a\u003e allows recovery from a volume expansion failure by retrying with a smaller size, reducing the risk of data loss or corruption throughout the process.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eflowcontrol.apiserver.k8s.io/v1beta3\u003c/code\u003e API related to \u003ccode\u003e\u003ca href=\"https://kubernetes.io/docs/concepts/cluster-administration/flow-control/#flowschema\" target=\"_blank\"\u003eFlowSchema\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca href=\"https://kubernetes.io/docs/concepts/cluster-administration/flow-control/#prioritylevelconfiguration\" target=\"_blank\"\u003ePriorityLevelConfiguration\u003c/a\u003e\u003c/code\u003e was removed in the new release. It’s part of the Kubernetes API functionality to deal with an overload of incoming requests. Users are encouraged to migrate to \u003ccode\u003eflowcontrol.apiserver.k8s.io/v1\u003c/code\u003e which has been available since version 1.29.\u003c/p\u003e\n\n\u003cp\u003eAccording to the release notes, Kubernetes version 1.32 has 44 enhancements, including 19 entering alpha, 12 graduating to beta, and 13 becoming generally available or stable.\u003c/p\u003e\n\n\u003cp\u003eFor more information on the Kubernetes 1.32 release, users can refer to the official release \u003ca href=\"https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.32.md\" target=\"_blank\"\u003enotes\u003c/a\u003e and \u003ca href=\"https://kubernetes.io/blog/2024/12/11/kubernetes-v1-32-release/?utm_source=textcortex\u0026amp;utm_medium=zenochat#highlights-of-new-features-in-alpha\" target=\"_blank\"\u003edocumentation\u003c/a\u003e for a detailed overview of the enhancements and deprecations in this version or watch the upcoming CNCF webinar by the release team scheduled for Thursday, January 9th, 2025 at 5 PM UTC. The next release version 1.33 is expected in April 2025.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Mostafa-Radwan\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eMostafa Radwan\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": "2024-12-29T00:00:00Z",
  "modifiedTime": null
}
