{
  "id": "9e965822-c6b3-4a48-b79a-bc6447f84088",
  "title": "Google Brings Gemini Nano to ML Kit with New On-Device GenAI APIs",
  "link": "https://www.infoq.com/news/2025/06/google-mlkit-genai-gemini-nano/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "The new GenAI APIs recently added to ML Kit enable developers to use Gemini Nano for on-device inference in Android apps, supporting features like summarization, proofreading, rewriting, and image description. By Sergio De Simone",
  "author": "Sergio De Simone",
  "published": "Tue, 03 Jun 2025 17:00:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Android",
    "Open Source",
    "Large language models",
    "Model Inference",
    "Mobile",
    "Google",
    "Development",
    "AI, ML \u0026 Data Engineering",
    "news"
  ],
  "byline": "Sergio De Simone",
  "length": 3423,
  "excerpt": "The new GenAI APIs recently added to ML Kit enable developers to use Gemini Nano for on-device inference in Android apps, supporting features like summarization, proofreading, rewriting, and image des",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s1_20250527074915/apple-touch-icon.png",
  "text": "The new GenAI APIs recently added to ML Kit enable developers to use Gemini Nano for on-device inference in Android apps, supporting features like summarization, proofreading, rewriting, and image description. For example, you can summarize documents of up to 3,000 English words, refine messages to be more formal or casual, and generate titles, metadata, or alternative image descriptions. Running on-device means that all data, including input, inference, and output, never leave the local device and does not incur any Cloud cost. According to Google, the GenAI APIs are designed to be easy to integrate and use, offering high-level abstractions similar to other ML Kit APIs. This means you can expect quality results out of the box without extra effort for prompt engineering or fine tuning for specific use cases. This is achieved by building each specialized API as a stack of components, starting with Gemini Nano as a common foundation. On top of Nano sits a small, API-specific LoRA adapter model to improve performance, followed by a layer that defines optimized inference parameters, such as prompt, temperature, top-K, and batch size. Finally, an evaluation pipeline incorporates automated raters, statistical metrics, and human raters to further improve generated responses. The performance gains achieved through this approach are measured using benchmark scores tailored to each API by considering specific attributes, such as factual consistency in text summarization. These benchmarks demonstrate consistent improvements across all APIs, as illustrated in the image below. The ML Kit GenAI APIs support both streaming and non-streaming workflows. Streaming is particularly suitable for longer responses, as it allows the output to be displayed incrementally without waiting for the entire response to be generated. When you use the GenAI APIs, ML Kit will automatically download Gemini Nano and any required API-specific models, if necessary. Developers can control this process and choose to download the models in advance, if preferred. Assuming all the required models have already been downloaded, the following snippet shows a simplified view of the workflow for the Summarization API: val articleToSummarize = ... val summarizerOptions = SummarizerOptions.builder(context) .setInputType(InputType.ARTICLE) .setOutputType(OutputType.ONE_BULLET) .setLanguage(Language.ENGLISH) .build() val summarizer = Summarization.getClient(summarizerOptions) val summarizationRequest = SummarizationRequest.builder(text).build() summarizer.runInference(summarizationRequest) { newText -\u003e // Show new text in UI } To ensure all required features are available locally, developers can call the summarizer.checkFeatureStatus method as appropriate. ML Kit GenAI APIs are available on Android devices powered by optimized MediaTek Dimensity, Qualcomm Snapdragon, and Google Tensor platforms via AICore. Supported devices include the Pixel 9 series, Samsung Galaxy 25, Xiaomi 15, Motorola Razr 60 Ultra, and others. For developers interested in getting started, a great place to begin is the official ML Kit GenAI APIs demo app, which showcases all the new features, along with the official documentation for deeper guidance. About the Author Sergio De Simone",
  "image": "https://res.infoq.com/news/2025/06/google-mlkit-genai-gemini-nano/en/card_header_image/generatedCard-1748968990086.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003e\u003ca href=\"https://android-developers.googleblog.com/2025/05/on-device-gen-ai-apis-ml-kit-gemini-nano.html\"\u003eThe new GenAI APIs recently added to ML Kit\u003c/a\u003e enable developers to use Gemini Nano for on-device inference in Android apps, supporting features like summarization, proofreading, rewriting, and image description.\u003c/p\u003e\n\n\u003cp\u003eFor example, you can summarize documents of up to 3,000 English words, refine messages to be more formal or casual, and generate titles, metadata, or alternative image descriptions.\u003c/p\u003e\n\n\u003cp\u003eRunning on-device means that all data, including input, inference, and output, never leave the local device and does not incur any Cloud cost. According to Google, the GenAI APIs are designed to be easy to integrate and use, offering high-level abstractions similar to other ML Kit APIs.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis means you can expect quality results out of the box without extra effort for prompt engineering or fine tuning for specific use cases.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThis is achieved by building each specialized API as a stack of components, starting with Gemini Nano as a common foundation. On top of Nano sits a small, API-specific LoRA adapter model to improve performance, followed by a layer that defines optimized inference parameters, such as prompt, temperature, top-K, and batch size. Finally, an evaluation pipeline incorporates automated raters, statistical metrics, and human raters to further improve generated responses.\u003c/p\u003e\n\n\u003cp\u003eThe performance gains achieved through this approach are measured using benchmark scores tailored to each API by considering specific attributes, such as factual consistency in text summarization. These benchmarks demonstrate consistent improvements across all APIs, as illustrated in the image below.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"\" data-src=\"news/2025/06/google-mlkit-genai-gemini-nano/en/resources/1genai-mlkit-1748968989104.jpg\" src=\"https://imgopt.infoq.com/fit-in/3000x4000/filters:quality(85)/filters:no_upscale()/news/2025/06/google-mlkit-genai-gemini-nano/en/resources/1genai-mlkit-1748968989104.jpg\" rel=\"share\"/\u003e\u003c/p\u003e\n\n\u003cp\u003eThe ML Kit GenAI APIs support both streaming and non-streaming workflows. Streaming is particularly suitable for longer responses, as it allows the output to be displayed incrementally without waiting for the entire response to be generated.\u003c/p\u003e\n\n\u003cp\u003eWhen you use the GenAI APIs, ML Kit will automatically download Gemini Nano and any required API-specific models, if necessary. Developers can control this process and choose to download the models in advance, if preferred. Assuming all the required models have already been downloaded, the following snippet shows a simplified view of the workflow for the Summarization API:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eval articleToSummarize = ...\n\nval summarizerOptions = SummarizerOptions.builder(context)\n    .setInputType(InputType.ARTICLE)\n    .setOutputType(OutputType.ONE_BULLET)\n    .setLanguage(Language.ENGLISH)\n    .build()\nval summarizer = Summarization.getClient(summarizerOptions)\n\nval summarizationRequest = SummarizationRequest.builder(text).build()\nsummarizer.runInference(summarizationRequest) { newText -\u0026gt;\n    // Show new text in UI\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eTo ensure all required features are available locally, developers can call the \u003ccode\u003esummarizer.checkFeatureStatus\u003c/code\u003e method \u003ca href=\"https://developers.google.com/ml-kit/genai/summarization/android#get-started\"\u003eas appropriate\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eML Kit GenAI APIs are available on Android devices powered by optimized MediaTek Dimensity, Qualcomm Snapdragon, and Google Tensor platforms via AICore. \u003ca href=\"https://developers.google.com/ml-kit/genai#device-support\"\u003eSupported devices include\u003c/a\u003e the Pixel 9 series, Samsung Galaxy 25, Xiaomi 15, Motorola Razr 60 Ultra, and others.\u003c/p\u003e\n\n\u003cp\u003eFor developers interested in getting started, a great place to begin is the official \u003ca href=\"https://github.com/googlesamples/mlkit/tree/master/android/genai\"\u003eML Kit GenAI APIs\u003c/a\u003e demo app, which showcases all the new features, along with the \u003ca href=\"https://developers.google.com/ml-kit/genai\"\u003eofficial documentation\u003c/a\u003e for deeper guidance.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Sergio-De-Simone\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eSergio De Simone\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": "2025-06-03T00:00:00Z",
  "modifiedTime": null
}
