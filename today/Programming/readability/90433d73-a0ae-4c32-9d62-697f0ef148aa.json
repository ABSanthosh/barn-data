{
  "id": "90433d73-a0ae-4c32-9d62-697f0ef148aa",
  "title": "Introducing ANS: DNS-Inspired Secure Discovery for AI Agents",
  "link": "https://www.infoq.com/news/2025/06/secure-agent-discovery-ans/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "The Open Worldwide Application Security Project (OWASP) has recently introduced a new standard for securely discovering AI agents. Inspired by DNS, the Agent Name Service (ANS) provides a protocol-agnostic registry mechanism that uses Public Key Infrastructure (PKI) to establish agent identity and trust. By Sergio De Simone",
  "author": "Sergio De Simone",
  "published": "Sat, 07 Jun 2025 09:00:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Model Context Protocol (MCP)",
    "Open Source",
    "Large language models",
    "Agents",
    "AI, ML \u0026 Data Engineering",
    "Development",
    "news"
  ],
  "byline": "Sergio De Simone",
  "length": 4379,
  "excerpt": "The Open Worldwide Application Security Project (OWASP) has recently introduced a new standard for securely discovering AI agents. Inspired by DNS, the Agent Name Service (ANS) provides a protocol-agn",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s1_20250605075448/apple-touch-icon.png",
  "text": "The Open Worldwide Application Security Project (OWASP) has recently introduced a new standard for securely discovering AI agents. Inspired by DNS, the Agent Name Service (ANS) provides a protocol-agnostic registry mechanism that uses Public Key Infrastructure (PKI) to establish agent identity and trust. As OWASP explains in their ANS white paper: Agent-to-agent communication is expected to become a significant component of internet traffic, driving the need for reliable mechanisms enabling agents to discover, verify, and securely interact with one another. Both the widely-used Domain Name Service, which maps human-readable names to network addresses, and its evolutions, like the DNS-Based Service Discovery, are not suitable for agent discovery. In fact, the organization says, they do not meet the requirements of agentic AI environments, which are dynamic, semantically rich, and security-sensitive. Traditional service discovery, like DNS [RFC 1035, 1987], provides essential name-to-address resolution but lacks the semantic understanding and security features needed for agentic AI. DNS-SD [RFC 6763, 2013] adds local service discovery capabilities but doesn't address verifiable identity or complex agentCapability matching on a global scale. To address these limitations, ANS adopts DNS-like naming for discovery and establishes agent registration and renewal mechanisms. In addition, it relies on Public Key Infrastructure (PKI) for identity verification, structured JSON for communication, and supports emerging protocols in the agentic space to enable full-spectrum capabilities. Compatible protocols include Google's Agent2Agent, which standardizes inter-agent communication; Anthropic's Model Context Protocol, designed to streamline model integration with tools and data sources; and IBM's Agent Communication Protocol, which focuses on consistent agent-to-agent messaging. The format defined in ANS for agent naming includes several components, including the protocol, the agent ID, capability, provider, version, and extension, e.g., a2a://textProcessor.DocumentTranslation.AcmeCorp.v2.1.hipaa. In addition, an ANS name can specify optional capability filters. In a nutshell, an agent uses ANS names to discover the endpoints where other agents are listening. It sends the target agent’s ANS name to the ANS Service, which queries the Agent Registry for a matching record. If found, the target agent’s cryptographic signature and certificate are verified. If any step fails, an error is returned; otherwise, the initiating agent receives the target agent’s endpoint information. One challenge in ANS is maintaining compatibility with a wide range of protocols, each with its own specific requirements. To address this, ANS includes a protocol adapter layer, where each external protocol, such as MCP, A2A, and others, is handled by a dedicated adapter. This design ensures low coupling and supports cross-protocol discovery, such as an A2A agent locating an agent advertising MCP tools, verifying its identity via PKI, and potentially interacting with it through a protocol gateway. PayPal staff software engineer Akshay Mittal, in a thorough review of the new protocol, expresses his view that \"ANS can progress from an intriguing draft to the default discovery fabric for autonomous software\". However, he remarks, Realizing this vision [...] will depend on coordinated action. ANS is being promoted as a public good protocol, not a proprietary product, and therefore requires transparent governance, open reference implementations, and broad industry participation. Still in its infancy, ANS already has a prototype implementation available on GitHub, which enables agents to register, renew, deactivate, and query their status. Future work will include improving performance and scalability, using privacy-preserving cryptography like zero-knowledge proofs, formal verification, and more. Backed by a non-profit called The OWASP Foundation, the Open Worldwide Application Security Project is an online community that produces freely available articles, methodologies, documentation, tools, and technologies in the fields of IoT, system software and web application security. About the Author Sergio De Simone",
  "image": "https://res.infoq.com/news/2025/06/secure-agent-discovery-ans/en/headerimage/secure-agent-discovery-ans-1749281512260.jpeg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eThe Open Worldwide Application Security Project (OWASP) has recently introduced a new standard for securely discovering AI agents. Inspired by DNS, the \u003ca href=\"https://genai.owasp.org/resource/agent-name-service-ans-for-secure-al-agent-discovery-v1-0/\"\u003eAgent Name Service (ANS)\u003c/a\u003e provides a protocol-agnostic registry mechanism that uses Public Key Infrastructure (PKI) to establish agent identity and trust.\u003c/p\u003e\n\n\u003cp\u003eAs OWASP explains in their \u003ca href=\"https://genai.owasp.org/download/47278/?tmstv=1747275418\"\u003eANS white paper\u003c/a\u003e:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAgent-to-agent communication is expected to become a significant component of internet traffic, driving the need for reliable mechanisms enabling agents to discover, verify, and securely interact with one another.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eBoth the widely-used Domain Name Service, which maps human-readable names to network addresses, and its evolutions, like the \u003ca href=\"https://www.ietf.org/archive/id/draft-ietf-dnssd-srp-20.html\"\u003eDNS-Based Service Discovery\u003c/a\u003e, are not suitable for agent discovery. In fact, the organization says, they do not meet the requirements of agentic AI environments, which are dynamic, semantically rich, and security-sensitive.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eTraditional service discovery, like DNS [RFC 1035, 1987], provides essential name-to-address resolution but lacks the semantic understanding and security features needed for agentic AI. DNS-SD [RFC 6763, 2013] adds local service discovery capabilities but doesn\u0026#39;t address verifiable identity or complex \u003ccode\u003eagentCapability\u003c/code\u003e matching on a global scale.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eTo address these limitations, ANS adopts DNS-like naming for discovery and establishes agent registration and renewal mechanisms. In addition, it relies on Public Key Infrastructure (PKI) for identity verification, structured JSON for communication, and supports emerging protocols in the agentic space to enable full-spectrum capabilities.\u003c/p\u003e\n\n\u003cp\u003eCompatible protocols include \u003ca href=\"https://www.infoq.com/news/2025/04/google-agentic-a2a/\"\u003eGoogle\u0026#39;s Agent2Agent\u003c/a\u003e, which standardizes inter-agent communication; \u003ca href=\"https://www.infoq.com/model-context-protocol/\"\u003eAnthropic\u0026#39;s Model Context Protocol\u003c/a\u003e, designed to streamline model integration with tools and data sources; and \u003ca href=\"https://research.ibm.com/blog/agent-communication-protocol-ai\"\u003eIBM\u0026#39;s Agent Communication Protocol\u003c/a\u003e, which focuses on consistent agent-to-agent messaging.\u003c/p\u003e\n\n\u003cp\u003eThe format defined in ANS for agent naming includes several components, including the protocol, the agent ID, capability, provider, version, and extension, e.g., \u003ccode\u003ea2a://textProcessor.DocumentTranslation.AcmeCorp.v2.1.hipaa\u003c/code\u003e. In addition, an ANS name can specify optional capability filters.\u003c/p\u003e\n\n\u003cp\u003eIn a nutshell, an agent uses ANS names to discover the endpoints where other agents are listening. It sends the target agent’s ANS name to the ANS Service, which queries the Agent Registry for a matching record. If found, the target agent’s cryptographic signature and certificate are verified. If any step fails, an error is returned; otherwise, the initiating agent receives the target agent’s endpoint information.\u003c/p\u003e\n\n\u003cp\u003eOne challenge in ANS is maintaining compatibility with a wide range of protocols, each with its own specific requirements. To address this, ANS includes a protocol adapter layer, where each external protocol, such as MCP, A2A, and others, is handled by a dedicated adapter. This design ensures low coupling and supports cross-protocol discovery, such as an A2A agent locating an agent advertising MCP tools, verifying its identity via PKI, and potentially interacting with it through a protocol gateway.\u003c/p\u003e\n\n\u003cp\u003ePayPal staff software engineer Akshay Mittal, in a \u003ca href=\"https://www.linkedin.com/in/akshaymittal143/\"\u003ethorough review of the new protocol\u003c/a\u003e, expresses his view that \u0026#34;ANS can progress from an intriguing draft to the default discovery fabric for autonomous software\u0026#34;. However, he remarks,\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eRealizing this vision [...] will depend on coordinated action. ANS is being promoted as a public good protocol, not a proprietary product, and therefore requires transparent governance, open reference implementations, and broad industry participation.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eStill in its infancy, ANS already has a \u003ca href=\"https://github.com/kenhuangus/dns-for-agents/\"\u003eprototype implementation available on GitHub\u003c/a\u003e, which enables agents to register, renew, deactivate, and query their status. Future work will include improving performance and scalability, using privacy-preserving cryptography like \u003ca href=\"https://www.infoq.com/articles/zero-knowledge-proofs-intro/\"\u003ezero-knowledge proofs\u003c/a\u003e, formal verification, and more.\u003c/p\u003e\n\n\u003cp\u003eBacked by a non-profit called The OWASP Foundation, the Open Worldwide Application Security Project is an online community that produces freely available articles, methodologies, documentation, tools, and technologies in the fields of IoT, system software and web application security.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Sergio-De-Simone\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eSergio De Simone\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": "2025-06-07T00:00:00Z",
  "modifiedTime": null
}
