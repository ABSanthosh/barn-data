{
  "id": "e6b3b985-1920-4c3d-8d92-67d73727363d",
  "title": "ASP.NET Core 10 Preview 2 Streamlines Blazor Navigation, Updates OpenAPI",
  "link": "https://www.infoq.com/news/2025/03/aspnet-core-10-preview2/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "Microsoft’s latest ASP.NET Core 10 Preview 2 release from March 18th introduces targeted improvements to Blazor’s navigation behavior, OpenAPI documentation generation, and developer tooling, addressing community feedback. The update focuses on small enhancements rather than new features, refining existing capabilities ahead of .NET 10’s stable release later this year. By Edin Kapić",
  "author": "Edin Kapić",
  "published": "Sun, 30 Mar 2025 08:00:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "ASP.NET Core",
    "blazor",
    ".NET",
    "Development",
    "news"
  ],
  "byline": "Edin Kapić",
  "length": 3155,
  "excerpt": "Microsoft’s latest ASP.NET Core 10 Preview 2 release from March 18th introduces targeted improvements to Blazor’s navigation behavior, OpenAPI documentation generation, and developer tooling, addressi",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s1_20250328105021-1/apple-touch-icon.png",
  "text": "Microsoft’s latest ASP.NET Core 10 Preview 2 release from March 18th introduces targeted improvements to Blazor’s navigation behavior, OpenAPI documentation generation, and developer tooling, addressing community feedback. The update focuses on small enhancements rather than new features, refining existing capabilities ahead of .NET 10’s stable release later this year. The most relevant change in Preview 2 is the revamping of the navigation system in Blazor to eliminate jarring user experience issues. When using NavigateTo for same-page navigations (e.g., query string updates), the browser will no longer forcibly scroll to the top. In previous versions, this was a behavior that developers had to work around manually. The NavLink component also sees improvements, now ignoring query strings and fragments by default when matching using NavLinkMatch.All. This means a link will be active even if the query strings or fragments in the URL change. An AppContext switch reverts to the legacy behavior for teams needing backwards compatibility. For custom matching behaviour, NavLink now exposes an overridable ShouldMatch method. Blazor’s reconnection UI, visible when the client loses WebSocket connection to the server, receives structural upgrades in the project template, with a new ReconnectModal component that separates CSS and JavaScript for stricter Content Security Policy (CSP) compliance. A custom components-reconnect-state-changed event provides finer-grained control over connection states, including a new \"retrying\" phase. API developers gain built-in support for propagating XML source code comments into OpenAPI documents. The feature requires enabling documentation file generation in the project file (GenerateDocumentationFile property) and moves comment processing to compile time via a source generator. However, minimal API endpoints must now use named methods rather than lambdas to leverage this feature, which can be seen as a trade-off for better discoverability. The underlying OpenAPI.NET library is updated to version 2.0.0-preview7, introducing breaking changes for advanced users. Schema definitions now use interfaces, and the Nullable property for the schema is replaced with JsonSchemaType.Null checks. The Preview 2 also introduces minor quality of life improvements: Blazor QuickGrid control adds a CloseColumnOptionsAsync method for programmatically dismissing column menus, simplifying filter interactions. Form binding now treats empty strings as null for nullable types, matching minimal API behavior elsewhere. New authentication metrics for Aspire dashboard track sign-in/sign-out events and authorization attempts, while request duration telemetry helps identify performance bottlenecks. Preview 2 is available now via the .NET 10 Preview SDK. Developers should test navigation changes and OpenAPI integration, with particular attention to the breaking schema modifications. The team expects the .NET 10 to be released around November 2025. About the Author Edin Kapić",
  "image": "https://res.infoq.com/news/2025/03/aspnet-core-10-preview2/en/headerimage/header-1743032230425.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eMicrosoft’s latest \u003ca href=\"https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview2/aspnetcore.md\"\u003eASP.NET Core 10 Preview 2 release\u003c/a\u003e from March 18th introduces targeted improvements to Blazor’s navigation behavior, OpenAPI documentation generation, and developer tooling, addressing community feedback. The update focuses on small enhancements rather than new features, refining existing capabilities ahead of .NET 10’s stable release later this year.\u003c/p\u003e\n\n\u003cp\u003eThe most relevant change in Preview 2 is the revamping of the navigation system in Blazor to eliminate jarring user experience issues. When using \u003ccode\u003eNavigateTo\u003c/code\u003e for same-page navigations (e.g., query string updates), the browser \u003ca href=\"https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview2/aspnetcore.md#navigateto-no-longer-scrolls-to-the-top-for-same-page-navigations\"\u003ewill no longer forcibly scroll to the top\u003c/a\u003e. In previous versions, this was a behavior that developers had to work around manually.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eNavLink\u003c/code\u003e component also sees improvements, now \u003ca href=\"https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview2/aspnetcore.md#ignore-query-string-and-fragment-when-using-navlinkmatchall\"\u003eignoring query strings and fragments by default when matching\u003c/a\u003e using \u003ccode\u003eNavLinkMatch.All\u003c/code\u003e. This means a link will be active even if the query strings or fragments in the URL change. An \u003ccode\u003eAppContext\u003c/code\u003e switch reverts to the legacy behavior for teams needing backwards compatibility. For custom matching behaviour, \u003ccode\u003eNavLink \u003c/code\u003enow exposes an overridable \u003ccode\u003eShouldMatch\u003c/code\u003e method.\u003c/p\u003e\n\n\u003cp\u003eBlazor’s reconnection UI, visible when the client loses WebSocket connection to the server, \u003ca href=\"https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview2/aspnetcore.md#reconnection-ui-component-added-to-the-blazor-web-app-project-template\"\u003ereceives structural upgrades in the project template\u003c/a\u003e, with a new \u003ccode\u003eReconnectModal\u003c/code\u003e component that separates CSS and JavaScript for stricter Content Security Policy (CSP) compliance. A custom \u003ccode\u003ecomponents-reconnect-state-changed\u003c/code\u003e event provides finer-grained control over connection states, including a new \u0026#34;retrying\u0026#34; phase.\u003c/p\u003e\n\n\u003cp\u003eAPI developers gain built-in support for \u003ca href=\"https://www.infoq.com/news/2025/03/aspnet-core-10-preview2/GenerateDocumentationFile\"\u003epropagating XML source code comments into OpenAPI documents\u003c/a\u003e. The feature requires enabling documentation file generation in the project file (\u003ccode\u003eGenerateDocumentationFile\u003c/code\u003e property) and moves comment processing to compile time via a source generator. However, \u003ca href=\"https://learn.microsoft.com/en-us/aspnet/core/fundamentals/minimal-apis/overview?view=aspnetcore-9.0\"\u003eminimal API endpoints\u003c/a\u003e must now use named methods rather than lambdas to leverage this feature, which can be seen as a trade-off for better discoverability.\u003c/p\u003e\n\n\u003cp\u003eThe underlying OpenAPI.NET library is updated to version \u003ccode\u003e2.0.0-preview7\u003c/code\u003e, introducing breaking changes for advanced users. Schema definitions now use interfaces, and the \u003ccode\u003eNullable\u003c/code\u003e property for the schema is replaced with \u003ccode\u003eJsonSchemaType.Null\u003c/code\u003e checks.\u003c/p\u003e\n\n\u003ch4\u003eThe Preview 2 also introduces minor quality of life improvements:\u003c/h4\u003e\n\n\u003cul\u003e\n\t\u003cli\u003eBlazor \u003ccode\u003eQuickGrid\u003c/code\u003e control adds a \u003ccode\u003eCloseColumnOptionsAsync\u003c/code\u003e method for programmatically dismissing column menus, simplifying filter interactions.\u003c/li\u003e\n\t\u003cli\u003eForm binding now\u003ca href=\"https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview2/aspnetcore.md#treat-empty-strings-in-form-posts-as-null-for-nullable-value-types\"\u003e treats empty strings as null for nullable types\u003c/a\u003e, matching minimal API behavior elsewhere.\u003c/li\u003e\n\t\u003cli\u003e\u003ca href=\"https://github.com/dotnet/core/blob/main/release-notes/10.0/preview/preview2/aspnetcore.md#new-authentication-and-authorization-metrics\"\u003eNew authentication metrics\u003c/a\u003e for Aspire dashboard track sign-in/sign-out events and authorization attempts, while request duration telemetry helps identify performance bottlenecks.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003ePreview 2 is available now via the \u003ca href=\"https://dotnet.microsoft.com/en-us/download/dotnet/10.0\"\u003e.NET 10 Preview SDK\u003c/a\u003e. Developers should test navigation changes and OpenAPI integration, with particular attention to the breaking schema modifications. The team expects the .NET 10 to be released around November 2025.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Edin-Kapić\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eEdin Kapić\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": "2025-03-30T00:00:00Z",
  "modifiedTime": null
}
