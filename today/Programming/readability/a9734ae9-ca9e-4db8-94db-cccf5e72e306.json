{
  "id": "a9734ae9-ca9e-4db8-94db-cccf5e72e306",
  "title": "QCon London: A Three-Step Blueprint for Managing Open Source Risk",
  "link": "https://www.infoq.com/news/2025/04/qcon-london-johnson-matthey/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "At QCon London 2025, Johnson Matthey's Vulnerability Manager, Celine Pypaert, discussed managing open-source dependency risks while maintaining momentum in innovation. She described a three-part blueprint for handling the security challenges that arise with the now widespread use of open-source dependencies. By Matt Saunders",
  "author": "Matt Saunders",
  "published": "Tue, 08 Apr 2025 18:15:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Dependency Management",
    "DevSecOps",
    "Application Security",
    "QCon London 2025",
    "DevOps",
    "Culture \u0026 Methods",
    "news"
  ],
  "byline": "Matt Saunders",
  "length": 4478,
  "excerpt": "At QCon London 2025, Johnson Matthey's Vulnerability Manager, Celine Pypaert, discussed managing open-source dependency risks while maintaining momentum in innovation. She described a three-part bluep",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s1_20250408103814/apple-touch-icon.png",
  "text": "At QCon London 2025, Johnson Matthey's Vulnerability Manager, Celine Pypaert, discussed managing open-source dependency risks while maintaining momentum in innovation. She described a three-part blueprint for handling the security challenges that arise with the now widespread use of open-source dependencies. Pypaert explained that open-source components are present in 96% of commercial codebases, according to a 2024 report from Black Duck. She said how people can misplace trust in familiar software used both personally on our devices and by enterprises. She spoke about some recent security incidents, such as the XZ Utils backdoor, where a rogue contributor gained trust from the sole maintainer of the project by committing valuable code before eventually inserting malicious code, and the Left-pad incident, where a single vital component's deletion from npm caused React-based applications to break. There's an implicit trust in things that people use every day - so we embed these components into our code The main element of Pypaert's talk was a three-part blueprint for managing open-source dependencies. Pypaert begins by identifying and prioritising vulnerabilities. She recommends organisations implement SCA (Software Composition Analysis) tools to find and audit open-source dependencies and also suggests doing this even in test environments to catch any vulnerabilities early. Pypaert suggests a structured tactical approach to triaging and prioritising fixes to deal with the possibly overwhelming number of vulnerabilities when embarking on a project like this. \"Don't just look at the criticality - draw a Venn diagram and cross-check with what is easy to fix and what is likely to happen,\" she advised. She suggests picking the top five or so issues with critical or high impact, tackling them directly with priority, and then making a phased, longer-term approach to the lower priority issues. These lower-priority issues can be harder to shift - but now is the time to influence budget-holders to commit time and resources to fixing these over the medium term. Ownership and accountability are the second part of Pypaert's blueprint. With open-source libraries often introduced passively, she spoke of circular conversations trying to find owners for these. Pypaert described how developers should seek assistance from security teams to help bridge gaps. She also suggests using a risk register to get executive attention. She explained how developers can show how seemingly low-level technical risks can feed into the broader organisational risk - and leveraging the possibilities that a cyber incident could cause a business to fail to gain focus on intractable issues. This helps the organisation understand how software supply chain issues can feed into enterprise risk. It's funny how quickly things can happen when someone's name appears next to a risk Pypaert explained how building a risk profile helps an organisation to join the dots between business continuity and vulnerability management and eventually leads to reducing and eliminating technical debt. With basic policies and standards in place, training developer teams to work responsibly within them. Make sure people understand that when they're doing a PR or push to production that they have ticked the boxes The final part of the blueprint focuses on moving security fixes from reactive to proactive. Pypaert strongly advocates automating security tasks wherever possible, giving an example of feeding a vulnerability detection from a tool such as GitHub's Dependabot directly into a project management tool such as Jira. Using automation to automatically assign security tickets to the correct group of people with automatic alert routing also reduces friction and helps teams incorporate security tasks into their sprints. Pypaert closed off her talk by assigning \"homework\" to the attendees - encouraging those who are only at the \"crawling\" stage of implementing a process such as this to get started with some basic detection, assignment and policy drafting. She suggested that attendees then start to involve other teams - perhaps by looking at compensating controls to temporarily hide vulnerabilities from the public internet with techniques such as WAFs (web application firewalls) and rate-limiting. About the Author Matt Saunders",
  "image": "https://res.infoq.com/news/2025/04/qcon-london-johnson-matthey/en/headerimage/generatedHeaderImage-1744135251883.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eAt \u003ca href=\"https://qconlondon.com/\"\u003eQCon London 2025\u003c/a\u003e, \u003ca href=\"https://matthey.com/\"\u003eJohnson Matthey\u003c/a\u003e\u0026#39;s Vulnerability Manager, Celine Pypaert, discussed managing open-source dependency risks while maintaining momentum in innovation. She described a three-part blueprint for handling the security challenges that arise with the now widespread use of open-source dependencies.\u003c/p\u003e\n\n\u003cp\u003ePypaert explained that open-source components are present in 96% of commercial codebases, according to a \u003ca href=\"https://www.blackduck.com/blog/zombie-dead-code.html\"\u003e2024 report from Black Duck\u003c/a\u003e. She said how people can misplace trust in familiar software used both personally on our devices and by enterprises. She spoke about some recent security incidents, such as the \u003ca href=\"https://www.infoq.com/news/2024/04/xz-backdoor/\"\u003eXZ Utils backdoor\u003c/a\u003e, where a rogue contributor gained trust from the sole maintainer of the project by committing valuable code before eventually inserting malicious code, and the \u003ca href=\"https://www.infoq.com/news/2016/03/npm/\"\u003eLeft-pad incident\u003c/a\u003e, where a single vital component\u0026#39;s deletion from \u003ca href=\"https://www.npmjs.com/\"\u003enpm\u003c/a\u003e caused React-based applications to break.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThere\u0026#39;s an implicit trust in things that people use every day - so we embed these components into our code\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe main element of Pypaert\u0026#39;s talk was a three-part blueprint for managing open-source dependencies. Pypaert begins by identifying and prioritising vulnerabilities. She recommends organisations implement \u003ca href=\"https://www.geeksforgeeks.org/sca-software-composition-analysis/\"\u003eSCA (Software Composition Analysis)\u003c/a\u003e tools to find and audit open-source dependencies and also suggests doing this even in test environments to catch any vulnerabilities early.\u003c/p\u003e\n\n\u003cp\u003ePypaert suggests a structured tactical approach to triaging and prioritising fixes to deal with the possibly overwhelming number of vulnerabilities when embarking on a project like this. \u0026#34;Don\u0026#39;t just look at the criticality - draw a Venn diagram and cross-check with what is easy to fix and what is likely to happen,\u0026#34; she advised. She suggests picking the top five or so issues with critical or high impact, tackling them directly with priority, and then making a phased, longer-term approach to the lower priority issues. These lower-priority issues can be harder to shift - but now is the time to influence budget-holders to commit time and resources to fixing these over the medium term.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"\" data-src=\"news/2025/04/qcon-london-johnson-matthey/en/resources/120250408_121216-1744135250352.jpg\" src=\"https://imgopt.infoq.com/fit-in/3000x4000/filters:quality(85)/filters:no_upscale()/news/2025/04/qcon-london-johnson-matthey/en/resources/120250408_121216-1744135250352.jpg\" rel=\"share\"/\u003e\u003c/p\u003e\n\n\u003cp\u003eOwnership and accountability are the second part of Pypaert\u0026#39;s blueprint. With open-source libraries often introduced passively, she spoke of circular conversations trying to find owners for these. Pypaert described how developers should seek assistance from security teams to help bridge gaps. She also suggests using a risk register to get executive attention. She explained how developers can show how seemingly low-level technical risks can feed into the broader organisational risk - and leveraging the possibilities that a cyber incident could cause a business to fail to gain focus on intractable issues. This helps the organisation understand how software supply chain issues can feed into enterprise risk.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIt\u0026#39;s funny how quickly things can happen when someone\u0026#39;s name appears next to a risk\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003ePypaert explained how building a risk profile helps an organisation to join the dots between business continuity and vulnerability management and eventually leads to reducing and eliminating technical debt. With basic policies and standards in place, training developer teams to work responsibly within them.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eMake sure people understand that when they\u0026#39;re doing a PR or push to production that they have ticked the boxes\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe final part of the blueprint focuses on moving security fixes from reactive to proactive. Pypaert strongly advocates automating security tasks wherever possible, giving an example of feeding a vulnerability detection from a tool such as GitHub\u0026#39;s Dependabot directly into a project management tool such as Jira. Using automation to automatically assign security tickets to the correct group of people with automatic alert routing also reduces friction and helps teams incorporate security tasks into their sprints.\u003c/p\u003e\n\n\u003cp\u003ePypaert closed off her talk by assigning \u0026#34;homework\u0026#34; to the attendees - encouraging those who are only at the \u0026#34;crawling\u0026#34; stage of implementing a process such as this to get started with some basic detection, assignment and policy drafting. She suggested that attendees then start to involve other teams - perhaps by looking at compensating controls to temporarily hide vulnerabilities from the public internet with techniques such as WAFs (web application firewalls) and rate-limiting.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Matt-Saunders\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eMatt Saunders\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": "2025-04-08T00:00:00Z",
  "modifiedTime": null
}
