{
  "id": "e6dc35ed-9dad-4916-8409-c7eeae673c37",
  "title": "Java News Roundup: WildFly 34, Stream Gatherers, Oracle CPU, Quarkiverse Release Process",
  "link": "https://www.infoq.com/news/2024/10/java-news-roundup-oct14-2024/?utm_campaign=infoq_content\u0026utm_source=infoq\u0026utm_medium=feed\u0026utm_term=global",
  "description": "This week's Java roundup for October 14th, 2024 features news highlighting: the release of WildFly 34; JEP 485, Stream Gatherers, proposed to target for JDK 24; Oracle Critical Patch Update for October 2024; and a potential leak in the SmallRye and Quarkiverse release processes. By Michael Redlich",
  "author": "Michael Redlich",
  "published": "Mon, 21 Oct 2024 10:00:00 GMT",
  "source": "https://feed.infoq.com",
  "categories": [
    "Keycloak",
    "Apache TomEE",
    "Java",
    "Quarkus",
    "Micrometer",
    "Open JDK",
    "Piranha Cloud",
    "Jakarta EE",
    "BellSoft",
    "Spring Framework",
    "JDKUpdater",
    "JBoss WildFly",
    "Reactor",
    "JDK 24",
    "JobRunr",
    "Gradle",
    "Architecture \u0026 Design",
    "Development",
    "news"
  ],
  "byline": "Michael Redlich",
  "length": 13269,
  "excerpt": "This week's Java roundup for October 14th, 2024 features news highlighting: the release of WildFly 34; JEP 485, Stream Gatherers, proposed to target for JDK 24; Oracle Critical Patch Update for Octobe",
  "siteName": "InfoQ",
  "favicon": "https://cdn.infoq.com/statics_s2_20241001113644/apple-touch-icon.png",
  "text": "This week's Java roundup for October 14th, 2024 features news highlighting: the release of WildFly 34; JEP 485, Stream Gatherers, proposed to target for JDK 24; Oracle Critical Patch Update for October 2024; and a potential leak in the SmallRye and Quarkiverse release processes. OpenJDK JEP 485, Stream Gatherers, has been promoted from Candidate to Proposed to Target for JDK 24. This JEP proposes to finalize this feature after two rounds of preview, namely: JEP 473: Stream Gatherers (Second Preview), delivered in JDK 23; and JEP 461, Stream Gatherers (Preview), delivered in JDK 22. This feature was designed to enhance the Stream API to support custom intermediate operations that will \"allow stream pipelines to transform data in ways that are not easily achievable with the existing built-in intermediate operations.\" More details on this JEP may be found in the original design document and this InfoQ news story. The review is expected to conclude on October 23, 2024. Oracle has released versions 23.0.1, 21.0.5, 17.0.13, 11.0.25, and 8u431 of the JDK as part of the quarterly Critical Patch Update Advisory for October 2024. More details on this release may be found in the release notes for version 23.0.1, version 21.0.5, version 17.0.13, version 11.0.25 and version 8u431. Version 7.5.0 of the Regression Test Harness for the JDK, jtreg, has been released and ready for integration in the JDK. The most significant changes include: the restoration of the jtdiff tool; and support for a LIBRARY.properties file located in the directory specified in the @library tag and read when jtreg compiles classes in that library. There was also a dependency upgrade to JUnit 5.11.0. Further details on this release may be found in the release notes. JDK 24 Build 20 of the JDK 24 early-access builds was made available this past week featuring updates from Build 19 that include fixes for various issues. Further details on this release may be found in the release notes. For JDK 24, developers are encouraged to report bugs via the Java Bug Database. Jakarta EE 11 In his weekly Hashtag Jakarta EE blog, Ivar Grimstad, Jakarta EE Developer Advocate at the Eclipse Foundation, provided an update on Jakarta EE 11, writing: GlassFish now passes 84% of the tests in the refactored TCK for Jakarta EE 11. The remaining tests are mainly related to the Application Client Container. The Jakarta EE Platform Project is proposing to deprecate the Application Container in Jakarta EE 12. There are ongoing discussions about how much importance these tests should be given to Jakarta EE 11. The Jakarta EE 11 Core Profile TCK has been staged, and both Open Liberty and WildFly are passing (or very close to passing) it. So it looks like we will be able to release Jakarta EE 11 Core Profile ahead of Jakarta EE 11 Platform and Jakarta EE 11 Web Profile. The road to Jakarta EE 11 included four milestone releases with the potential for release candidates as necessary before the GA release in 4Q2024. BellSoft Concurrent with Oracle's Critical Patch Update (CPU) for October 2024, BellSoft has released CPU patches for versions 21.0.4.0.1, 17.0.12.0.1, 11.0.24.0.1, 8u431, 7u441 and 6u441 of Liberica JDK, their downstream distribution of OpenJDK, to address this list of CVEs. In addition, Patch Set Update (PSU) versions 23.0.1, 21.0.5, 17.0.13, 11.0.25 and 8u432, containing CPU and non-critical fixes, have also been released. With an overall total of 1169 fixes and backports, BellSoft states that they have participated in eliminating 18 issues in all releases. Spring Framework The second release candidate of Spring Framework 6.2.0 delivers bug fixes, improvements in documentation, dependency upgrades and many new features such as: a rename of the OverrideMetadata class to BeanOverrideHandler to align with the existing naming convention of the other classes, interfaces and annotations defined in the org.springframework.test.context.bean.override package; and the addition of the messageConverters() method to the RestClient.Builder interface to allow setting converters of the RestClient interface without initializing the default one. This version will be included in the upcoming release of Spring Boot 3.4.0-RC1. More details on this release may be found in the release notes. Similarly, the release of version 6.1.14 of Spring Framework also provides bug fixes, improvements in documentation, dependency upgrades and new features such as: the removal of support for relative paths in the ResourceHandlerUtils class that eliminates security issues; and ensure proper exception handling from the isCorsRequest() method, defined in the CorsUtils class, upon encountering a malformed Origin header. This version will be included in the upcoming releases of Spring Boot and 3.3.5 and 3.2.11. More details on this release may be found in the release notes. The Spring Framework team has also disclosed two Common Vulnerabilities and Exposures (CVEs): CVE-2024-38819, a path traversal vulnerability in the Spring Web MVC and Spring WebFlux functional web frameworks in which an attacker can create a malicious HTTP request to obtain any file on the file system that is also accessible to the process on the running Spring application. This CVE is follow up from CVE-2024-38816, Path Traversal Vulnerability in Functional Web Frameworks, that used different malicious input. CVE-2024-38820: a vulnerability in which the toLowerCase() method, defined in the Java String class, had some Locale class-dependent exceptions that could potentially result in fields not being protected as expected. This is a result of the resolution for CVE-2022-22968 that made patterns of the disallowedFields field, defined in DataBinder class, case insensitive. These CVEs affect Spring Framework versions 5.3.0 - 5.3.40, 6.0.0 - 6.0.24 and 6.1.0 - 6.1.13. The first release candidate of Spring Data 2024.1.0 delivers expanded support for Spring Data Value Expressions where property-placeholders may be leveraged in repository query methods annotated with @Query. There were also updates to sub-projects such as: Spring Data Commons 3.4.0-RC1, Spring Data MongoDB 4.4.0-RC1, Spring Data Elasticsearch 5.4.0-RC1 and Spring Data Neo4j 7.4.0-RC1. More details on this release may be found in the release notes. Similarly, the release of Spring Data 2024.0.5 and 2023.1.11 ship with bug fixes and respective dependency upgrades to sub-projects such as: Spring Data Commons 3.3.5 and 3.2.11; Spring Data MongoDB 4.3.5 and 4.2.11; Spring Data Elasticsearch 5.3.5 and 5.2.11; and Spring Data Neo4j 7.3.5 and 7.2.11. These versions will be included in the upcoming releases of Spring Boot and 3.3.5 and 3.2.11. WildFly The release of WildFly 34 primarily focuses on WildFly Preview, a technical preview variant of the WildFly server. New features include: support for Jakarta Data 1.0, MicroProfile Rest Client 4.0 and MicroProfile Telemetry 2.0; a new Bill of Materials for WildFly Preview; and four new system properties (backlog, connection-high-water, connection-low-water and no-request-timeout) for configuration in the HTTP management interface. More details on this release may be found in the release notes. InfoQ will follow up with a more detailed news story. Quarkus The Quarkus team has disclosed that they recently discovered a potential leak in their Quarkiverse and SmallRye release processes and reported that there was no damage. Clement Escoffier, Distinguished Engineer at Red Hat, summarized the issue, writing: We've uncovered a security flaw in the release process for Quarkiverse and SmallRye that could have allowed malicious actors to impersonate projects and publish compromised artifacts. We've implemented a new, more secure release pipeline to address this. If you're a maintainer, you've received a pull request to migrate to the new process. Quarkus itself is not affected by this issue, only SmallRye and Quarkiverse. As a result, they have implemented a more secure release process and wanted to share the details with the Java community. InfoQ will follow up with a more detailed news story. Micrometer The first release candidate of Micrometer Metrics 1.14.0 provides bug fixes, improvements in documentation, dependency upgrades and new features such as: expose an instance of the TestObservationRegistry class via the assertThat() method from the AssertJ Assertions class; expand metrics to include virtual threads data; and improved performance with the initialization of the Tags class from already sorted array of unique tags. More details on this release may be found in the release notes. Similarly, versions 1.13.6 and 1.12.11 of Micrometer Metrics also feature bug fixes, improvements in documentation and a new feature that improves the memory usage of the StepBucketHistogram class by eliminating an internal field of the buckets that can be acquired from an instance of the FixedBoundaryHistogram class when needed. Further details on these releases may be found in the release notes for version 1.13.6 and version 1.12.11. The first release candidate of Micrometer Tracing 1.4.0 ships with dependency upgrades and new features: support for list values in tags in the Span and SpanCustomizer interfaces; and make the OtelSpan class public instead of private to eliminate use of reflection to act upon the underlying OpenTelemetry Span interface. More details on this release may be found in the release notes. Similarly, version 1.3.5 and 1.2.11 of Micrometer Tracing 1.4.0 simply provide dependency upgrades. Further details on these releases may be found in the release notes for version 1.3.5 and version 1.2.11. Project Reactor The first release candidate of Project Reactor 2024.0.0 provides dependency upgrades to reactor-core 3.7.0-RC1, reactor-netty 1.2.0-RC1, reactor-pool 1.1.0-RC1, reactor-addons 3.6.0-RC1, reactor-kotlin-extensions 1.3.0-RC1 and reactor-kafka 1.4.0-RC1. Based on the Spring Calendar, it is anticipated that the GA version of Project 2024.0.0 will be released in November 2024. Further details on this release may be found in the changelog. Next, Project Reactor 2023.0.11, the eleventh maintenance release, provides dependency upgrades to reactor-core 3.6.11 and reactor-netty 1.1.23. There was also a realignment to version 2023.0.11 with the reactor-pool 1.0.8, reactor-addons 3.5.2, reactor-kotlin-extensions 1.2.3 and reactor-kafka 1.3.23 artifacts that remain unchanged. More details on this release may be found in the changelog. Piranha Cloud The release of Piranha 24.10.0 delivers bug fixes and notable changes such as: ensure that an instance of the Eclipse Jersey InjecteeSkippingAnalyzer class is installed when needed; and use of the Java PrintStream class or the isWriterAcquired() method, defined in the in the DefaultWebApplicationResponse class, in the DefaultServletRequestDispatcher class as a response to a top-level exception. Further details on this release may be found in their documentation and issue tracker. Apache Software Foundation The third milestone release of Apache TomEE 10.0.0 provides bugs fixes, dependency upgrades and new features such as: an improved import of data sources and entity managers that obsoletes the use of the ImportSql class; and a new RequestNotActiveException class, that replaces throwing a NullPointerException, when an instance of a Jakarta Servlet HttpServletRequest is invoked on a thread with no active servlet request. More details on this release may be found in the release notes. JobRunr The release of JobRunr 7.3.1 provides new features such as: an instance of the JobDetails class is now cacheable when injecting an interface instead of an implementation; and an enhanced JobRunr Dashboard that includes tips for diagnosing severe JobRunr exceptions for improved clarity of notifications. Further details on this release may be found in the release notes. Keycloak Keycloak 26.0.1 has been released with bug fixes and enhancements: a clarification of the behavior of multiple versions of Keycloak Operator installed in the same cluster operator; and improved error logging during a transaction commit. More details on this release may be found in the release notes. JDKUpdater Version 14.0.59+79 of JDKUpdater, a new utility that provides developers the ability to keep track of updates related to builds of OpenJDK and GraalVM. Introduced in mid-March by Gerrit Grunwald, principal engineer at Azul, this release resolves an issue with the calculation of the next update and the next release date of the JDK. More details on this release may be found in the release notes. Gradle The first release candidate of Gradle 8.11.0 delivers new features such as: improved performance in the configuration cache with an opt-in parallel loading and storing of cache entries; the C++ and Swift plugins now compatible with the configuration cache; and improved error and warning reporting in which Java compilation errors are now displayed at the end of the build output. More details on this release may be found in the release notes. About the Author Michael Redlich",
  "image": "https://res.infoq.com/news/2024/10/java-news-roundup-oct14-2024/en/headerimage/java-istock-image-01-1729504501172.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\u003cp\u003eThis week\u0026#39;s Java roundup for October 14th, 2024 features news highlighting: the release of WildFly 34; JEP 485, Stream Gatherers, proposed to target for JDK 24; Oracle Critical Patch Update for October 2024; and a potential leak in the SmallRye and Quarkiverse release processes.\u003c/p\u003e\n\n\u003ch4\u003eOpenJDK\u003c/h4\u003e\n\n\u003cp\u003eJEP 485, \u003ca href=\"https://openjdk.org/jeps/485\"\u003eStream Gatherers\u003c/a\u003e, has been promoted from \u003cstrong\u003eCandidate\u003c/strong\u003e to \u003cstrong\u003eProposed to Target\u003c/strong\u003e for JDK 24. This JEP proposes to finalize this feature after two rounds of preview, namely: JEP 473: \u003ca href=\"https://openjdk.org/jeps/473\"\u003eStream Gatherers (Second Preview)\u003c/a\u003e, delivered in JDK 23; and JEP 461, \u003ca href=\"https://openjdk.org/jeps/461\"\u003eStream Gatherers (Preview)\u003c/a\u003e, delivered in JDK 22. This feature was designed to enhance the Stream API to support custom intermediate operations that will \u0026#34;\u003cem\u003eallow stream pipelines to transform data in ways that are not easily achievable with the existing built-in intermediate operations.\u003c/em\u003e\u0026#34; More details on this JEP may be found in the original \u003ca href=\"https://cr.openjdk.org/~vklang/Gatherers.html\"\u003edesign document\u003c/a\u003e and this InfoQ \u003ca href=\"https://www.infoq.com/news/2023/12/stream-api-evolution/\"\u003enews story\u003c/a\u003e. The review is expected to conclude on October 23, 2024.\u003c/p\u003e\n\n\u003cp\u003eOracle has \u003ca href=\"https://blogs.oracle.com/java/post/jdk-2301-2105-17013-11025-8u431-released\"\u003ereleased\u003c/a\u003e versions 23.0.1, 21.0.5, 17.0.13, 11.0.25, and 8u431 of the JDK as part of the quarterly \u003ca href=\"https://www.oracle.com/security-alerts/cpuoct2024.html\"\u003eCritical Patch Update Advisory\u003c/a\u003e for October 2024. More details on this release may be found in the release notes for \u003ca href=\"https://www.oracle.com/java/technologies/javase/23-0-1-relnotes.html\"\u003eversion 23.0.1\u003c/a\u003e, \u003ca href=\"https://www.oracle.com/java/technologies/javase/21-0-5-relnotes.html\"\u003eversion 21.0.5\u003c/a\u003e, \u003ca href=\"https://www.oracle.com/java/technologies/javase/17-0-13-relnotes.html\"\u003eversion 17.0.13\u003c/a\u003e, \u003ca href=\"https://www.oracle.com/java/technologies/javase/11-0-25-relnotes.html\"\u003eversion 11.0.25\u003c/a\u003e and \u003ca href=\"https://www.oracle.com/java/technologies/javase/8u431-relnotes.html\"\u003eversion 8u431\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eVersion 7.5.0 of the Regression Test Harness for the JDK, \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://openjdk.org/jtreg/\"\u003ejtreg\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e, has been \u003ca href=\"https://mail.openjdk.org/pipermail/jdk-dev/2024-October/009482.html\"\u003ereleased\u003c/a\u003e and ready for integration in the JDK. The most significant changes include: the restoration of the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://cr.openjdk.org/~jjg/7901578/jtreg/bin/jtdiff\"\u003ejtdiff\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e tool; and support for a \u003cstrong\u003e\u003ccode\u003eLIBRARY.properties\u003c/code\u003e\u003c/strong\u003e file located in the directory specified in the \u003cstrong\u003e\u003ccode\u003e@library\u003c/code\u003e\u003c/strong\u003e tag and read when \u003cstrong\u003e\u003ccode\u003ejtreg\u003c/code\u003e\u003c/strong\u003e compiles classes in that library. There was also a dependency upgrade to JUnit 5.11.0. Further details on this release may be found in the \u003ca href=\"https://github.com/openjdk/jtreg/blob/jtreg-7.5+1/CHANGELOG.md\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eJDK 24\u003c/h4\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/openjdk/jdk/releases/tag/jdk-24%2B20\"\u003eBuild 20\u003c/a\u003e of the JDK 24 \u003ca href=\"https://jdk.java.net/24/\"\u003eearly-access builds\u003c/a\u003e was made available this past week featuring \u003ca href=\"https://github.com/openjdk/jdk/compare/jdk-24%2B19...jdk-24%2B20\"\u003eupdates\u003c/a\u003e from Build 19 that include fixes for various \u003ca href=\"https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2024%20and%20%22resolved%20in%20build%22%20%3D%20b20%20order%20by%20component%2C%20subcomponent\"\u003eissues\u003c/a\u003e. Further details on this release may be found in the \u003ca href=\"https://jdk.java.net/24/release-notes\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eFor \u003ca href=\"https://openjdk.org/projects/jdk/24/\"\u003eJDK 24\u003c/a\u003e, developers are encouraged to report bugs via the \u003ca href=\"https://bugreport.java.com/bugreport/\"\u003eJava Bug Database\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eJakarta EE 11\u003c/h4\u003e\n\n\u003cp\u003eIn his weekly \u003ca href=\"https://www.agilejava.eu/\"\u003eHashtag Jakarta EE\u003c/a\u003e blog, \u003ca href=\"https://se.linkedin.com/in/ivargrimstad\"\u003eIvar Grimstad\u003c/a\u003e, Jakarta EE Developer Advocate at the Eclipse Foundation, provided an \u003ca href=\"https://www.agilejava.eu/2024/10/20/hashtag-jakarta-ee-251/\"\u003eupdate\u003c/a\u003e on Jakarta EE 11, writing:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eGlassFish now passes 84% of the tests in the refactored TCK for Jakarta EE 11. The remaining tests are mainly related to the Application Client Container. The Jakarta EE Platform Project is proposing to deprecate the Application Container in Jakarta EE 12. There are ongoing discussions about how much importance these tests should be given to Jakarta EE 11.\u003c/p\u003e\n\n\u003cp\u003eThe Jakarta EE 11 Core Profile TCK has been staged, and both Open Liberty and WildFly are passing (or very close to passing) it. So it looks like we will be able to release \u003ca href=\"https://jakarta.ee/specifications/coreprofile/11/\"\u003eJakarta EE 11 Core Profile\u003c/a\u003e ahead of \u003ca href=\"https://jakarta.ee/specifications/platform/11/\"\u003eJakarta EE 11 Platform\u003c/a\u003e and \u003ca href=\"https://jakarta.ee/specifications/webprofile/11/\"\u003eJakarta EE 11 Web Profile\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe road to Jakarta EE 11 included four milestone releases with the potential for release candidates as necessary before the GA release in 4Q2024.\u003c/p\u003e\n\n\u003ch4\u003eBellSoft\u003c/h4\u003e\n\n\u003cp\u003eConcurrent with Oracle\u0026#39;s \u003ca href=\"https://www.oracle.com/security-alerts/cpuoct2024.html\"\u003eCritical Patch Update\u003c/a\u003e (CPU) for October 2024, BellSoft has \u003ca href=\"https://bell-sw.com/blog/liberica-jdk-8u432-11-0-25-17-0-13-21-0-5-and-23-0-1-builds-are-generally-available/\"\u003ereleased\u003c/a\u003e CPU patches for versions 21.0.4.0.1, 17.0.12.0.1, 11.0.24.0.1, 8u431, 7u441 and 6u441 of \u003ca href=\"https://bell-sw.com/pages/libericajdk/\"\u003eLiberica JDK\u003c/a\u003e, their downstream distribution of OpenJDK, to address this \u003ca href=\"https://docs.bell-sw.com/security/search/\"\u003elist of CVEs\u003c/a\u003e. In addition, Patch Set Update (PSU) versions 23.0.1, 21.0.5, 17.0.13, 11.0.25 and 8u432, containing CPU and non-critical fixes, have also been released.\u003c/p\u003e\n\n\u003cp\u003eWith an overall total of 1169 fixes and backports, BellSoft states that they have participated in eliminating 18 issues in all releases.\u003c/p\u003e\n\n\u003ch4\u003eSpring Framework\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://spring.io/blog/2024/10/17/spring-framework-6-2-0-rc2-available-now\"\u003esecond release candidate\u003c/a\u003e of \u003ca href=\"https://spring.io/projects/spring-framework\"\u003eSpring Framework\u003c/a\u003e 6.2.0 delivers bug fixes, improvements in documentation, dependency upgrades and many new features such as: a rename of the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://docs.spring.io/spring-framework/docs/6.2.0-RC1/javadoc-api/org/springframework/test/context/bean/override/OverrideMetadata.html\"\u003eOverrideMetadata\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class to \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/spring-projects/spring-framework/blob/main/spring-test/src/main/java/org/springframework/test/context/bean/override/BeanOverrideHandler.java\"\u003eBeanOverrideHandler\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e to align with the existing naming convention of the other classes, interfaces and annotations defined in the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/spring-projects/spring-framework/tree/main/spring-test/src/main/java/org/springframework/test/context/bean/override\"\u003eorg.springframework.test.context.bean.override\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e package; and the addition of the \u003cstrong\u003e\u003ccode\u003emessageConverters()\u003c/code\u003e\u003c/strong\u003e method to the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://docs.spring.io/spring-framework/docs/6.2.0-RC1/javadoc-api/org/springframework/web/client/RestClient.Builder.html\"\u003eRestClient.Builder\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e interface to allow setting converters of the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://docs.spring.io/spring-framework/docs/6.2.0-RC1/javadoc-api/org/springframework/web/client/RestClient.html\"\u003eRestClient\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e interface without initializing the default one. This version will be included in the upcoming release of Spring Boot 3.4.0-RC1. More details on this release may be found in the \u003ca href=\"https://github.com/spring-projects/spring-framework/releases/tag/v6.2.0-RC2\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eSimilarly, the \u003ca href=\"https://spring.io/blog/2024/10/17/spring-framework-6-1-14-available-now\"\u003erelease\u003c/a\u003e of version 6.1.14 of Spring Framework also provides bug fixes, improvements in documentation, dependency upgrades and new features such as: the removal of support for relative paths in the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/spring-projects/spring-framework/blob/main/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHandlerUtils.java\"\u003eResourceHandlerUtils\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class that eliminates security issues; and ensure proper exception handling from the \u003cstrong\u003e\u003ccode\u003eisCorsRequest()\u003c/code\u003e\u003c/strong\u003e method, defined in the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://docs.spring.io/spring-framework/docs/6.2.0-RC1/javadoc-api/org/springframework/web/cors/CorsUtils.html\"\u003eCorsUtils\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class, upon encountering a malformed \u003cstrong\u003e\u003ccode\u003eOrigin\u003c/code\u003e\u003c/strong\u003e header. This version will be included in the upcoming releases of Spring Boot and 3.3.5 and 3.2.11. More details on this release may be found in the \u003ca href=\"https://github.com/spring-projects/spring-framework/releases/tag/v6.1.14\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe Spring Framework team has also \u003ca href=\"https://spring.io/blog/2024/10/17/spring-framework-cve-2024-38819-and-cve-2024-38820-published\"\u003edisclosed\u003c/a\u003e two Common Vulnerabilities and Exposures (CVEs):\u003c/p\u003e\n\n\u003cul\u003e\n\t\u003cli\u003e\u003ca href=\"https://spring.io/security/cve-2024-38819\"\u003eCVE-2024-38819\u003c/a\u003e, a path traversal vulnerability in the \u003ca href=\"https://docs.spring.io/spring-framework/reference/web/webmvc.html\"\u003eSpring Web MVC\u003c/a\u003e and \u003ca href=\"https://docs.spring.io/spring-framework/reference/web/webflux.html\"\u003eSpring WebFlux\u003c/a\u003e functional web frameworks in which an attacker can create a malicious HTTP request to obtain any file on the file system that is also accessible to the process on the running Spring application. This CVE is follow up from CVE-2024-38816, \u003ca href=\"https://spring.io/security/cve-2024-38816\"\u003ePath Traversal Vulnerability in Functional Web Frameworks\u003c/a\u003e, that used different malicious input.\u003c/li\u003e\n\t\u003cli\u003e\u003ca href=\"https://spring.io/security/cve-2024-38820\"\u003eCVE-2024-38820\u003c/a\u003e: a vulnerability in which the \u003cstrong\u003e\u003ccode\u003etoLowerCase()\u003c/code\u003e\u003c/strong\u003e method, defined in the Java \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://docs.oracle.com/en/java/javase/22/docs/api/java.base/java/lang/String.html\"\u003eString\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class, had some \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://docs.oracle.com/en/java/javase/23/docs/api/java.base/java/util/Locale.html\"\u003eLocale\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class-dependent exceptions that could potentially result in fields not being protected as expected. This is a result of the resolution for \u003ca href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-22968\"\u003eCVE-2022-22968\u003c/a\u003e that made patterns of the \u003cstrong\u003e\u003ccode\u003edisallowedFields\u003c/code\u003e\u003c/strong\u003e field, defined in \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/validation/DataBinder.html\"\u003eDataBinder\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class, case insensitive.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThese CVEs affect Spring Framework versions 5.3.0 - 5.3.40, 6.0.0 - 6.0.24 and 6.1.0 - 6.1.13.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://spring.io/blog/2024/10/18/spring-data-2024-1-0-goes-rc1\"\u003efirst release candidate\u003c/a\u003e of \u003ca href=\"https://spring.io/projects/spring-data\"\u003eSpring Data\u003c/a\u003e 2024.1.0 delivers expanded support for \u003ca href=\"https://docs.spring.io/spring-data/rest/reference/data-commons/value-expressions.html\"\u003eSpring Data Value Expressions\u003c/a\u003e where property-placeholders may be leveraged in repository query methods annotated with \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://docs.spring.io/spring-data/jpa/docs/current/api/org/springframework/data/jpa/repository/Query.html\"\u003e@Query\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e. There were also updates to sub-projects such as: Spring Data Commons 3.4.0-RC1, Spring Data MongoDB 4.4.0-RC1, Spring Data Elasticsearch 5.4.0-RC1 and Spring Data Neo4j 7.4.0-RC1. More details on this release may be found in the \u003ca href=\"https://github.com/spring-projects/spring-data-commons/wiki/Spring-Data-2024.1-Release-Notes\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eSimilarly, the \u003ca href=\"https://spring.io/blog/2024/10/18/spring-data-2024-0-5-and-2023-1-11-released\"\u003erelease\u003c/a\u003e of Spring Data 2024.0.5 and 2023.1.11 ship with bug fixes and respective dependency upgrades to sub-projects such as: Spring Data Commons 3.3.5 and 3.2.11; Spring Data MongoDB 4.3.5 and 4.2.11; Spring Data Elasticsearch 5.3.5 and 5.2.11; and Spring Data Neo4j 7.3.5 and 7.2.11. These versions will be included in the upcoming releases of Spring Boot and 3.3.5 and 3.2.11.\u003c/p\u003e\n\n\u003ch4\u003eWildFly\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://www.wildfly.org/news/2024/10/17/WildFly34-Released/\"\u003erelease\u003c/a\u003e of \u003ca href=\"https://www.wildfly.org/\"\u003eWildFly\u003c/a\u003e 34 primarily focuses on \u003ca href=\"https://docs.wildfly.org/34/WildFly_and_WildFly_Preview.html\"\u003eWildFly Preview\u003c/a\u003e, a technical preview variant of the WildFly server. New features include: support for \u003ca href=\"https://jakarta.ee/specifications/data/1.0/\"\u003eJakarta Data 1.0\u003c/a\u003e, \u003ca href=\"https://microprofile.io/specifications/rest-client/\"\u003eMicroProfile Rest Client 4.0\u003c/a\u003e and \u003ca href=\"https://microprofile.io/specifications/telemetry/\"\u003eMicroProfile Telemetry 2.0\u003c/a\u003e; a new \u003ca href=\"https://issues.redhat.com/browse/WFLY-19464\"\u003eBill of Materials\u003c/a\u003e for WildFly Preview; and four new system properties (\u003cstrong\u003e\u003ccode\u003ebacklog\u003c/code\u003e\u003c/strong\u003e, \u003cstrong\u003e\u003ccode\u003econnection-high-water\u003c/code\u003e\u003c/strong\u003e, \u003cstrong\u003e\u003ccode\u003econnection-low-water\u003c/code\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003ccode\u003eno-request-timeout\u003c/code\u003e\u003c/strong\u003e) for configuration in the \u003ca href=\"https://docs.wildfly.org/wildfly-proposals/management/WFCORE-6830_Management_Resource_Constraints.html\"\u003eHTTP management interface\u003c/a\u003e. More details on this release may be found in the \u003ca href=\"https://github.com/wildfly/wildfly/releases/tag/34.0.0.Final\"\u003erelease notes\u003c/a\u003e. InfoQ will follow up with a more detailed news story.\u003c/p\u003e\n\n\u003ch4\u003eQuarkus\u003c/h4\u003e\n\n\u003cp\u003eThe Quarkus team has \u003ca href=\"https://quarkus.io/blog/quarkiverse-and-smallrye-new-release-process/\"\u003edisclosed\u003c/a\u003e that they recently discovered a potential leak in their Quarkiverse and SmallRye release processes and reported that there was no damage.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.linkedin.com/in/clementescoffier/\"\u003eClement Escoffier\u003c/a\u003e, Distinguished Engineer at Red Hat, summarized the issue, writing:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eWe\u0026#39;ve uncovered a security flaw in the release process for Quarkiverse and SmallRye that could have allowed malicious actors to impersonate projects and publish compromised artifacts.\u003c/p\u003e\n\n\u003cp\u003eWe\u0026#39;ve implemented a new, more secure release pipeline to address this. If you\u0026#39;re a maintainer, you\u0026#39;ve received a pull request to migrate to the new process. Quarkus itself is not affected by this issue, only SmallRye and Quarkiverse.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAs a result, they have implemented a more secure release process and wanted to share the details with the Java community. InfoQ will follow up with a more detailed news story.\u003c/p\u003e\n\n\u003ch4\u003eMicrometer\u003c/h4\u003e\n\n\u003cp\u003eThe first release candidate of \u003ca href=\"https://github.com/micrometer-metrics/micrometer/blob/main/README.md\"\u003eMicrometer Metrics\u003c/a\u003e 1.14.0 provides bug fixes, improvements in documentation, dependency upgrades and new features such as: expose an instance of the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/micrometer-metrics/micrometer/blob/main/micrometer-observation-test/src/main/java/io/micrometer/observation/tck/TestObservationRegistry.java\"\u003eTestObservationRegistry\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class via the \u003cstrong\u003e\u003ccode\u003eassertThat()\u003c/code\u003e\u003c/strong\u003e method from the AssertJ \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/assertj/assertj/blob/3.x/assertj-core/src/main/java/org/assertj/core/api/Assertions.java\"\u003eAssertions\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class; expand metrics to include virtual threads data; and improved performance with the initialization of the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/micrometer-metrics/micrometer/blob/main/micrometer-core/src/main/java/io/micrometer/core/instrument/Tags.java\"\u003eTags\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class from already sorted array of unique tags. More details on this release may be found in the \u003ca href=\"https://github.com/micrometer-metrics/micrometer/releases/tag/v1.14.0-RC1\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eSimilarly, versions 1.13.6 and 1.12.11 of Micrometer Metrics also feature bug fixes, improvements in documentation and a new feature that improves the memory usage of the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/micrometer-metrics/micrometer/blob/main/micrometer-core/src/main/java/io/micrometer/core/instrument/distribution/StepBucketHistogram.java\"\u003eStepBucketHistogram\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class by eliminating an internal field of the buckets that can be acquired from an instance of the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/micrometer-metrics/micrometer/blob/main/micrometer-core/src/main/java/io/micrometer/core/instrument/distribution/FixedBoundaryHistogram.java\"\u003eFixedBoundaryHistogram\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class when needed. Further details on these releases may be found in the release notes for \u003ca href=\"https://github.com/micrometer-metrics/micrometer/releases/tag/v1.13.6\"\u003eversion 1.13.6\u003c/a\u003e and \u003ca href=\"https://github.com/micrometer-metrics/micrometer/releases/tag/v1.12.11\"\u003eversion 1.12.11\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe first release candidate of \u003ca href=\"https://github.com/micrometer-metrics/tracing/blob/main/README.md\"\u003eMicrometer Tracing\u003c/a\u003e 1.4.0 ships with dependency upgrades and new features: support for list values in tags in the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/micrometer-metrics/tracing/blob/main/micrometer-tracing/src/main/java/io/micrometer/tracing/Span.java\"\u003eSpan\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/micrometer-metrics/tracing/blob/main/micrometer-tracing/src/main/java/io/micrometer/tracing/SpanCustomizer.java\"\u003eSpanCustomizer\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e interfaces; and make the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/micrometer-metrics/tracing/blob/main/micrometer-tracing-bridges/micrometer-tracing-bridge-otel/src/main/java/io/micrometer/tracing/otel/bridge/OtelSpan.java\"\u003eOtelSpan\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class public instead of private to eliminate use of reflection to act upon the underlying OpenTelemetry \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://javadoc.io/doc/io.opentelemetry/opentelemetry-api-trace/latest/io/opentelemetry/api/trace/Span.html\"\u003eSpan\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e interface. More details on this release may be found in the \u003ca href=\"https://github.com/micrometer-metrics/tracing/releases/tag/v1.4.0-RC1\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eSimilarly, version 1.3.5 and 1.2.11 of \u003ca href=\"https://github.com/micrometer-metrics/tracing/blob/main/README.md\"\u003eMicrometer Tracing\u003c/a\u003e 1.4.0 simply provide dependency upgrades. Further details on these releases may be found in the release notes for \u003ca href=\"https://github.com/micrometer-metrics/tracing/releases/tag/v1.3.5\"\u003eversion 1.3.5\u003c/a\u003e and \u003ca href=\"https://github.com/micrometer-metrics/tracing/releases/tag/v1.2.11\"\u003eversion 1.2.11\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eProject Reactor\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://github.com/reactor/reactor/releases/tag/2024.0.0-RC1\"\u003efirst release candidate\u003c/a\u003e of \u003ca href=\"https://github.com/reactor/reactor/blob/main/README.md\"\u003eProject Reactor\u003c/a\u003e 2024.0.0 provides dependency upgrades to \u003cstrong\u003e\u003ccode\u003ereactor-core 3.7.0-RC1\u003c/code\u003e\u003c/strong\u003e, \u003cstrong\u003e\u003ccode\u003ereactor-netty 1.2.0-RC1\u003c/code\u003e\u003c/strong\u003e, \u003cstrong\u003e\u003ccode\u003ereactor-pool 1.1.0-RC1\u003c/code\u003e\u003c/strong\u003e, \u003cstrong\u003e\u003ccode\u003ereactor-addons 3.6.0-RC1\u003c/code\u003e\u003c/strong\u003e, \u003cstrong\u003e\u003ccode\u003ereactor-kotlin-extensions 1.3.0-RC1\u003c/code\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003ccode\u003ereactor-kafka 1.4.0-RC1\u003c/code\u003e\u003c/strong\u003e. Based on the \u003ca href=\"https://spring.io/projects#release-calendar\"\u003eSpring Calendar\u003c/a\u003e, it is anticipated that the GA version of Project 2024.0.0 will be released in November 2024. Further details on this release may be found in the \u003ca href=\"https://github.com/reactor/reactor/compare/2024.0.0-M6...2024.0.0-RC1\"\u003echangelog\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eNext, Project Reactor 2023.0.11, the \u003ca href=\"https://github.com/reactor/reactor/releases/tag/2023.0.11\"\u003eeleventh maintenance release\u003c/a\u003e, provides dependency upgrades to \u003cstrong\u003e\u003ccode\u003ereactor-core 3.6.11\u003c/code\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003ccode\u003ereactor-netty 1.1.23\u003c/code\u003e\u003c/strong\u003e. There was also a realignment to version 2023.0.11 with the \u003cstrong\u003e\u003ccode\u003ereactor-pool 1.0.8\u003c/code\u003e\u003c/strong\u003e, \u003cstrong\u003e\u003ccode\u003ereactor-addons 3.5.2\u003c/code\u003e\u003c/strong\u003e, \u003cstrong\u003e\u003ccode\u003ereactor-kotlin-extensions 1.2.3\u003c/code\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003ccode\u003ereactor-kafka 1.3.23\u003c/code\u003e\u003c/strong\u003e artifacts that remain unchanged. More details on this release may be found in the \u003ca href=\"https://github.com/reactor/reactor/compare/2023.0.10...2023.0.11\"\u003echangelog\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003ePiranha Cloud\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://github.com/piranhacloud/piranha/releases/tag/v24.10.0\"\u003erelease\u003c/a\u003e of \u003ca href=\"https://piranha.cloud/\"\u003ePiranha\u003c/a\u003e 24.10.0 delivers bug fixes and notable changes such as: ensure that an instance of the Eclipse Jersey \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://eclipse-ee4j.github.io/jersey.github.io/apidocs/3.1.9/jersey/org/glassfish/jersey/ext/cdi1x/internal/InjecteeSkippingAnalyzer.html\"\u003eInjecteeSkippingAnalyzer\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class is \u003ca href=\"https://github.com/eclipse-ee4j/jersey/issues/5745\"\u003einstalled\u003c/a\u003e when needed; and use of the Java \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://docs.oracle.com/en/java/javase/23/docs/api/java.base/java/io/PrintStream.html\"\u003ePrintStream\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class or the \u003cstrong\u003e\u003ccode\u003eisWriterAcquired()\u003c/code\u003e\u003c/strong\u003e method, defined in the in the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/piranhacloud/piranha/blob/current/core/impl/src/main/java/cloud/piranha/core/impl/DefaultWebApplicationResponse.java\"\u003eDefaultWebApplicationResponse\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class, in the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/piranhacloud/piranha/blob/current/core/impl/src/main/java/cloud/piranha/core/impl/DefaultServletRequestDispatcher.java\"\u003eDefaultServletRequestDispatcher\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class as a response to a top-level exception. Further details on this release may be found in their \u003ca href=\"https://javadoc.io/doc/cloud.piranha/project/latest/index.html\"\u003edocumentation\u003c/a\u003e and \u003ca href=\"https://github.com/piranhacloud/piranha/issues?q=is%3Aissue+-label%3Awontfix+milestone%3A24.10.0+is%3Aclosed\"\u003eissue tracker\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eApache Software Foundation\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://www.mail-archive.com/users@tomee.apache.org/msg18151.html\"\u003ethird milestone release\u003c/a\u003e of \u003ca href=\"https://tomee.apache.org/\"\u003eApache TomEE\u003c/a\u003e 10.0.0 provides bugs fixes, dependency upgrades and new features such as: an improved import of data sources and entity managers that obsoletes the use of the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://tomee.apache.org/tomee-10.0/javadoc/org/apache/openejb/assembler/classic/ImportSql.html\"\u003eImportSql\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class; and a new \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/apache/tomee/blob/main/tomee/tomee-catalina/src/main/java/org/apache/tomee/catalina/RequestNotActiveException.java\"\u003eRequestNotActiveException\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class, that replaces throwing a \u003cstrong\u003e\u003ccode\u003eNullPointerException\u003c/code\u003e\u003c/strong\u003e, when an instance of a Jakarta Servlet \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://jakarta.ee/specifications/servlet/6.1/apidocs/jakarta.servlet/jakarta/servlet/http/httpservletrequest\"\u003eHttpServletRequest\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e is invoked on a thread with no active servlet request. More details on this release may be found in the \u003ca href=\"https://tomee.apache.org/10.0.0-M3/release-notes.html\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eJobRunr\u003c/h4\u003e\n\n\u003cp\u003eThe release of \u003ca href=\"https://www.jobrunr.io/en/\"\u003eJobRunr\u003c/a\u003e 7.3.1 provides new features such as: an instance of the \u003cstrong\u003e\u003ccode\u003e\u003ca href=\"https://github.com/jobrunr/jobrunr/blob/master/core/src/main/java/org/jobrunr/jobs/JobDetails.java\"\u003eJobDetails\u003c/a\u003e\u003c/code\u003e\u003c/strong\u003e class is now cacheable when injecting an interface instead of an implementation; and an enhanced JobRunr Dashboard that includes tips for diagnosing severe JobRunr exceptions for improved clarity of notifications. Further details on this release may be found in the \u003ca href=\"https://github.com/jobrunr/jobrunr/releases/tag/v7.3.1\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eKeycloak\u003c/h4\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.keycloak.org/\"\u003eKeycloak\u003c/a\u003e 26.0.1 has been \u003ca href=\"https://www.keycloak.org/2024/10/keycloak-2601-released\"\u003ereleased\u003c/a\u003e with bug fixes and enhancements: a clarification of the behavior of multiple versions of \u003ca href=\"https://operatorhub.io/operator/keycloak-operator\"\u003eKeycloak Operator\u003c/a\u003e installed in the same cluster operator; and improved error logging during a transaction commit. More details on this release may be found in the \u003ca href=\"https://github.com/keycloak/keycloak/releases/tag/26.0.1\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eJDKUpdater\u003c/h4\u003e\n\n\u003cp\u003eVersion 14.0.59+79 of \u003ca href=\"https://github.com/HanSolo/JDK-Updater/blob/main/README.md\"\u003eJDKUpdater\u003c/a\u003e, a new utility that provides developers the ability to keep track of updates related to builds of OpenJDK and GraalVM. Introduced in mid-March by \u003ca href=\"https://de.linkedin.com/in/gerritgrunwald\"\u003eGerrit Grunwald\u003c/a\u003e, principal engineer at Azul, this release resolves an issue with the calculation of the next update and the next release date of the JDK. More details on this release may be found in the \u003ca href=\"https://github.com/HanSolo/JDK-Updater/releases/tag/14.0.59%2B79\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003eGradle\u003c/h4\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://github.com/gradle/gradle/releases/tag/v8.11.0-RC1\"\u003efirst release candidate\u003c/a\u003e of \u003ca href=\"https://gradle.org/\"\u003eGradle\u003c/a\u003e 8.11.0 delivers new features such as: improved performance in the configuration cache with an opt-in \u003ca href=\"https://docs.gradle.org/8.11-rc-1/release-notes.html#config-cache\"\u003eparallel loading and storing\u003c/a\u003e of cache entries; the \u003ca href=\"https://docs.gradle.org/current/userguide/building_cpp_projects.html\"\u003eC++\u003c/a\u003e and \u003ca href=\"https://docs.gradle.org/current/userguide/building_swift_projects.html\"\u003eSwift\u003c/a\u003e plugins now compatible with the configuration cache; and improved error and warning reporting in which \u003ca href=\"https://docs.gradle.org/8.11-rc-1/release-notes.html#error-warning\"\u003eJava compilation errors\u003c/a\u003e are now displayed at the end of the build output. More details on this release may be found in the \u003ca href=\"https://docs.gradle.org/8.11-rc-1/release-notes.html\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\n\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n  \n    \u003cdiv\u003e \n        \u003ch2\u003eAbout the Author\u003c/h2\u003e \n\n        \n            \n                \n            \n            \u003cdiv data-id=\"author-Michael-Redlich\"\u003e\n                    \u003ch4\u003e\u003cstrong\u003eMichael Redlich\u003c/strong\u003e\u003c/h4\u003e\n                    \n                \u003c/div\u003e\n        \n    \u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "15 min read",
  "publishedTime": "2024-10-21T00:00:00Z",
  "modifiedTime": null
}
