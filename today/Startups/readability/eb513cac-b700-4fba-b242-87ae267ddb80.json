{
  "id": "eb513cac-b700-4fba-b242-87ae267ddb80",
  "title": "The Internet's Time Is Flawed–Why No One Is Talking About It",
  "link": "https://news.ycombinator.com/item?id=43054616",
  "description": "I’ve been researching how online time services sync over HTTPS, and the results are surprising.Due to network latency \u0026 asymmetry, even widely trusted time sources can drift by ±50ms or more. HTTPS-based synchronization has inherent protocol limitations that prevent true atomic accuracy. Engineers on NTP forums have confirmed that half of RTT (Round Trip Time) is the firm limit—meaning most public clocks are way less accurate than we assume. This raises some serious questions: 1⃣ How bad is the drift in real-world applications? 2⃣ Is there a way to make HTTPS time synchronization truly accurate? 3⃣ Are industries (finance, security, cryptography) unknowingly relying on bad time data?I’m curious if others have tested this or if this is an even bigger problem than we think.Some engineers are experimenting with ways to push accuracy below 10ms, but there’s no widespread solution yet. Thoughts? Comments URL: https://news.ycombinator.com/item?id=43054616 Points: 3 # Comments: 7",
  "author": "Shellgroup",
  "published": "Sat, 15 Feb 2025 00:31:57 +0000",
  "source": "https://hnrss.org/frontpage",
  "categories": null,
  "byline": "",
  "length": 5407,
  "excerpt": "I’ve been researching how online time services sync over HTTPS, and the results are surprising.",
  "siteName": "",
  "favicon": "",
  "text": "The Internet's Time Is Flawed–Why No One Is Talking About It 4 points by Shellgroup 33 minutes ago | hide | past | favorite | 11 comments I’ve been researching how online time services sync over HTTPS, and the results are surprising.Due to network latency \u0026 asymmetry, even widely trusted time sources can drift by ±50ms or more. HTTPS-based synchronization has inherent protocol limitations that prevent true atomic accuracy. Engineers on NTP forums have confirmed that half of RTT (Round Trip Time) is the firm limit—meaning most public clocks are way less accurate than we assume. This raises some serious questions: 1⃣ How bad is the drift in real-world applications? 2⃣ Is there a way to make HTTPS time synchronization truly accurate? 3⃣ Are industries (finance, security, cryptography) unknowingly relying on bad time data?I’m curious if others have tested this or if this is an even bigger problem than we think.Some engineers are experimenting with ways to push accuracy below 10ms, but there’s no widespread solution yet. Thoughts? Who is doing time sync over HTTPS? Is anyone?For most civilian purposes, time sync is done with NTP, which, using Marzullo's algorithm, can reduce error to around 0.5% of RTT, nothing like \"half of RTT\". Did you read \"0.5%\" and thought it meant \"50%\"?Is your complaint about something specific? This problem seems imaginary.\u003e Engineers on NTP forums have confirmed that half of RTT (Round Trip Time) is the firm limitWhich engineers? That statement is not true.\u003e Some engineers are experimenting with ways to push accuracy below 10msWhich engineers? NTP accuracy is typically around 0.5ms in good conditions.The use of the ’ smart apostrophe and the weird 1⃣2⃣ makes me think this post was written by a very confused AI. First— NTP does not use HTTPS. It uses UDP as a transport since on-time delivery matters more than missed deliveries.Second— inaccurate time really is only a “problem” if it is not accurate enough. For the purposes of TLS, the current typical time error seems to be well within the tolerance of most communications.There are plenty of people talking about time synchronization if you know where to look. If you really need something more accurate than NTP, use a PCI card that gathers time from GPS or using a time signal radio broadcast (eg, NIST’s). Why are people using HTTPS for time? Standard NTPD port 123 UDP works fine for most people and using Chrony [1][2] one can get down to double digit microseconds or even nanoseconds offset depending on their location. If people need lower than that they should be using their own GPS receivers and local stratum-1 servers in each datacenter and then using Chrony with a short poll interval within the datacenter to the edge stratum-1 servers.[1] - https://chrony-project.org/examples.html[2] - https://chrony-project.org/faq.html In industries like finance each datacenter will have its own GPS receivers with dedicated antennae, and custom timekeeping devices to act as the local stratum-1 servers, and use PTP. Within the DC servers will have very low jitter and high bandwidth network routes to ensure tight accuracy, typically over different networks than the high-traffic connectivity, eg. different interfaces. Where you really really care you can further optimize the OS to ensure tight timekeeping.Industries that care aren’t sourcing time across residential ISP links and consumer NTP sources. But, for most people it’s accurate enough. This isn't news. Why on earth would anyone think it was better than this?If you want time more accurate than 50ms, there are tons of options. NTP is not remotely one that any competent scientist or engineer would employ. This is basically the equivalent of saying \"I've looked into it, and Toyota Corollas do not have a 0 - 60 time of less than one second.\" - and that would be the answer to why no one is talking about it. Possibly because it's actually just \"good enough\" for most use cases?And if you truly require better accuracy, using a GPS units for high acuracy PTP is a thing. \u003e I’ve been researching how online time services sync over HTTPSHTTPS isn't usually used as far as I'm aware. Wait until you discover that your time server's TLS certificate has \"expired\" according to your local machine; or hasn't yet become valid (valid in the \"future\"). Good luck syncing after that!Most services use some version of NTP; here's NTPv3 spec: https://datatracker.ietf.org/doc/html/rfc1305 but there are others.\u003e Due to network latency \u0026 asymmetry, even widely trusted time sources can drift by ±50ms or moreYup! Some people would call that a feature to enable leap second smearing.\u003e most public clocks are way less accurate than we assumeI would bet you're right but I don't recall any studies to measure how bad the problem is. It sounds like you might be barking up somewhere with possibility for unique studies and information!\u003e Some engineers are experimenting with ways to push accuracy below 10msGet rid of HTTP and you can get accuracy below 1ms. HTTP takes up a lot of compute compared to NTP.",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003ctd\u003e\u003ctable\u003e\n        \u003ctbody\u003e\u003ctr id=\"43054616\"\u003e\n      \u003ctd\u003e\u003cspan\u003e\u003c/span\u003e\u003c/td\u003e      \u003ctd\u003e\u003ccenter\u003e\u003ca id=\"up_43054616\" href=\"https://news.ycombinator.com/vote?id=43054616\u0026amp;how=up\u0026amp;goto=item%3Fid%3D43054616\"\u003e\u003c/a\u003e\u003c/center\u003e\u003c/td\u003e\u003ctd\u003e\u003cspan\u003e\u003ca href=\"https://news.ycombinator.com/item?id=43054616\"\u003eThe Internet\u0026#39;s Time Is Flawed–Why No One Is Talking About It\u003c/a\u003e\u003c/span\u003e\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd colspan=\"2\"\u003e\u003c/td\u003e\u003ctd\u003e\u003cspan\u003e\n          \u003cspan id=\"score_43054616\"\u003e4 points\u003c/span\u003e by \u003ca href=\"https://news.ycombinator.com/user?id=Shellgroup\"\u003eShellgroup\u003c/a\u003e \u003cspan title=\"2025-02-15T00:31:57 1739579517\"\u003e\u003ca href=\"https://news.ycombinator.com/item?id=43054616\"\u003e33 minutes ago\u003c/a\u003e\u003c/span\u003e \u003cspan id=\"unv_43054616\"\u003e\u003c/span\u003e | \u003ca href=\"https://news.ycombinator.com/hide?id=43054616\u0026amp;goto=item%3Fid%3D43054616\"\u003ehide\u003c/a\u003e | \u003ca href=\"https://hn.algolia.com/?query=The%20Internet%27s%20Time%20Is%20Flawed%E2%80%93Why%20No%20One%20Is%20Talking%20About%20It\u0026amp;type=story\u0026amp;dateRange=all\u0026amp;sort=byDate\u0026amp;storyText=false\u0026amp;prefix\u0026amp;page=0\"\u003epast\u003c/a\u003e | \u003ca href=\"https://news.ycombinator.com/fave?id=43054616\u0026amp;auth=c1452889978a3d8bccbe37fd045611942d00dd46\"\u003efavorite\u003c/a\u003e | \u003ca href=\"https://news.ycombinator.com/item?id=43054616\"\u003e11 comments\u003c/a\u003e        \u003c/span\u003e\n              \u003c/td\u003e\u003c/tr\u003e\n    \u003ctr\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd colspan=\"2\"\u003e\u003c/td\u003e\u003ctd\u003e\u003cdiv\u003e\u003cp\u003eI’ve been researching how online time services sync over HTTPS, and the results are surprising.\u003c/p\u003e\u003cp\u003eDue to network latency \u0026amp; asymmetry, even widely trusted time sources can drift by ±50ms or more.\nHTTPS-based synchronization has inherent protocol limitations that prevent true atomic accuracy.\nEngineers on NTP forums have confirmed that half of RTT (Round Trip Time) is the firm limit—meaning most public clocks are way less accurate than we assume.\nThis raises some serious questions:\n1⃣ How bad is the drift in real-world applications?\n2⃣ Is there a way to make HTTPS time synchronization truly accurate?\n3⃣ Are industries (finance, security, cryptography) unknowingly relying on bad time data?\u003c/p\u003e\u003cp\u003eI’m curious if others have tested this or if this is an even bigger problem than we think.\u003c/p\u003e\u003cp\u003eSome engineers are experimenting with ways to push accuracy below 10ms, but there’s no widespread solution yet. Thoughts?\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e        \u003ctr\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd colspan=\"2\"\u003e\u003c/td\u003e\u003ctd\u003e\u003cform action=\"comment\" method=\"post\"\u003e\u003c/form\u003e\u003c/td\u003e\u003c/tr\u003e  \u003c/tbody\u003e\u003c/table\u003e\u003ctable\u003e\n            \u003ctbody\u003e\u003ctr id=\"43054756\"\u003e\u003ctd\u003e\u003ctable\u003e  \u003ctbody\u003e\u003ctr\u003e    \u003ctd indent=\"0\"\u003e\u003cimg src=\"https://news.ycombinator.com/s.gif\" height=\"1\" width=\"0\"/\u003e\u003c/td\u003e\u003ctd\u003e\n      \u003ccenter\u003e\u003ca id=\"up_43054756\" href=\"https://news.ycombinator.com/vote?id=43054756\u0026amp;how=up\u0026amp;goto=item%3Fid%3D43054616\"\u003e\u003c/a\u003e\u003c/center\u003e    \u003c/td\u003e\u003ctd\u003e\u003cbr/\u003e\u003cdiv\u003e\u003cp\u003eWho is doing time sync over HTTPS? Is anyone?\u003c/p\u003e\u003cp\u003eFor most civilian purposes, time sync is done with NTP, which, using Marzullo\u0026#39;s algorithm, can reduce error to around 0.5% of RTT, nothing like \u0026#34;half of RTT\u0026#34;. Did you read \u0026#34;0.5%\u0026#34; and thought it meant \u0026#34;50%\u0026#34;?\u003c/p\u003e\u003cp\u003eIs your complaint about something specific? This problem seems imaginary.\u003c/p\u003e\u003cp\u003e\u0026gt; Engineers on NTP forums have confirmed that half of RTT (Round Trip Time) is the firm limit\u003c/p\u003e\u003cp\u003eWhich engineers? That statement is not true.\u003c/p\u003e\u003cp\u003e\u0026gt; Some engineers are experimenting with ways to push accuracy below 10ms\u003c/p\u003e\u003cp\u003eWhich engineers? NTP accuracy is typically around 0.5ms in good conditions.\u003c/p\u003e\u003cp\u003eThe use of the ’ smart apostrophe and the weird 1⃣2⃣ makes me think this post was written by a very confused AI.\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e\n        \u003c/tbody\u003e\u003c/table\u003e\u003c/td\u003e\u003c/tr\u003e\n                      \u003ctr id=\"43054741\"\u003e\u003ctd\u003e\u003ctable\u003e  \u003ctbody\u003e\u003ctr\u003e    \u003ctd indent=\"0\"\u003e\u003cimg src=\"https://news.ycombinator.com/s.gif\" height=\"1\" width=\"0\"/\u003e\u003c/td\u003e\u003ctd\u003e\n      \u003ccenter\u003e\u003ca id=\"up_43054741\" href=\"https://news.ycombinator.com/vote?id=43054741\u0026amp;how=up\u0026amp;goto=item%3Fid%3D43054616\"\u003e\u003c/a\u003e\u003c/center\u003e    \u003c/td\u003e\u003ctd\u003e\u003cbr/\u003e\u003cdiv\u003e\u003cp\u003eFirst— NTP does not use HTTPS. It uses UDP as a transport since on-time delivery matters more than missed deliveries.\u003c/p\u003e\u003cp\u003eSecond— inaccurate time really is only a “problem” if it is not accurate enough. For the purposes of TLS, the current typical time error seems to be well within the tolerance of most communications.\u003c/p\u003e\u003cp\u003eThere are plenty of people talking about time synchronization if you know where to look. If you really need something more accurate than NTP, use a PCI card that gathers time from GPS or using a time signal radio broadcast (eg, NIST’s).\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e\n        \u003c/tbody\u003e\u003c/table\u003e\u003c/td\u003e\u003c/tr\u003e\n            \u003ctr id=\"43054770\"\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\n            \u003ctr id=\"43054711\"\u003e\u003ctd\u003e\u003ctable\u003e  \u003ctbody\u003e\u003ctr\u003e    \u003ctd indent=\"0\"\u003e\u003cimg src=\"https://news.ycombinator.com/s.gif\" height=\"1\" width=\"0\"/\u003e\u003c/td\u003e\u003ctd\u003e\n      \u003ccenter\u003e\u003ca id=\"up_43054711\" href=\"https://news.ycombinator.com/vote?id=43054711\u0026amp;how=up\u0026amp;goto=item%3Fid%3D43054616\"\u003e\u003c/a\u003e\u003c/center\u003e    \u003c/td\u003e\u003ctd\u003e\u003cbr/\u003e\u003cdiv\u003e\u003cp\u003eWhy are people using HTTPS for time?  Standard NTPD port 123 UDP works fine for most people and using Chrony [1][2] one can get down to double digit microseconds or even nanoseconds offset \u003ci\u003edepending on their location.\u003c/i\u003e  If people need lower than that they should be using their own GPS receivers and local stratum-1 servers in each datacenter and then using Chrony with a short poll interval within the datacenter to the edge stratum-1 servers.\u003c/p\u003e\u003cp\u003e[1] - \u003ca href=\"https://chrony-project.org/examples.html\" rel=\"nofollow\"\u003ehttps://chrony-project.org/examples.html\u003c/a\u003e\u003c/p\u003e\u003cp\u003e[2] - \u003ca href=\"https://chrony-project.org/faq.html\" rel=\"nofollow\"\u003ehttps://chrony-project.org/faq.html\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e\n        \u003c/tbody\u003e\u003c/table\u003e\u003c/td\u003e\u003c/tr\u003e\n            \u003ctr id=\"43054764\"\u003e\u003ctd\u003e\u003ctable\u003e  \u003ctbody\u003e\u003ctr\u003e    \u003ctd indent=\"0\"\u003e\u003cimg src=\"https://news.ycombinator.com/s.gif\" height=\"1\" width=\"0\"/\u003e\u003c/td\u003e\u003ctd\u003e\n      \u003ccenter\u003e\u003ca id=\"up_43054764\" href=\"https://news.ycombinator.com/vote?id=43054764\u0026amp;how=up\u0026amp;goto=item%3Fid%3D43054616\"\u003e\u003c/a\u003e\u003c/center\u003e    \u003c/td\u003e\u003ctd\u003e\u003cbr/\u003e\u003cdiv\u003e\u003cp\u003eIn industries like finance each datacenter will have its own GPS receivers with dedicated antennae, and custom timekeeping devices to act as the local stratum-1 servers, and use PTP. Within the DC servers will have very low jitter and high bandwidth network routes to ensure tight accuracy, typically over different networks than the high-traffic connectivity, eg. different interfaces. Where you really really care you can further optimize the OS to ensure tight timekeeping.\u003c/p\u003e\u003cp\u003eIndustries that care aren’t sourcing time across residential ISP links and consumer NTP sources. But, for most people it’s accurate enough.\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e\n        \u003c/tbody\u003e\u003c/table\u003e\u003c/td\u003e\u003c/tr\u003e\n            \u003ctr id=\"43054753\"\u003e\u003ctd\u003e\u003ctable\u003e  \u003ctbody\u003e\u003ctr\u003e    \u003ctd indent=\"0\"\u003e\u003cimg src=\"https://news.ycombinator.com/s.gif\" height=\"1\" width=\"0\"/\u003e\u003c/td\u003e\u003ctd\u003e\n      \u003ccenter\u003e\u003ca id=\"up_43054753\" href=\"https://news.ycombinator.com/vote?id=43054753\u0026amp;how=up\u0026amp;goto=item%3Fid%3D43054616\"\u003e\u003c/a\u003e\u003c/center\u003e    \u003c/td\u003e\u003ctd\u003e\u003cbr/\u003e\u003cdiv\u003e\u003cp\u003eThis isn\u0026#39;t news. Why on earth would anyone think it was better than this?\u003c/p\u003e\u003cp\u003eIf you want time more accurate than 50ms, there are tons of options. NTP is not remotely one that any competent scientist or engineer would employ. This is basically the equivalent of saying \u0026#34;I\u0026#39;ve looked into it, and Toyota Corollas do not have a 0 - 60 time of less than one second.\u0026#34; - and that would be the answer to why no one is talking about it.\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e\n        \u003c/tbody\u003e\u003c/table\u003e\u003c/td\u003e\u003c/tr\u003e\n            \u003ctr id=\"43054732\"\u003e\u003ctd\u003e\u003ctable\u003e  \u003ctbody\u003e\u003ctr\u003e    \u003ctd indent=\"0\"\u003e\u003cimg src=\"https://news.ycombinator.com/s.gif\" height=\"1\" width=\"0\"/\u003e\u003c/td\u003e\u003ctd\u003e\n      \u003ccenter\u003e\u003ca id=\"up_43054732\" href=\"https://news.ycombinator.com/vote?id=43054732\u0026amp;how=up\u0026amp;goto=item%3Fid%3D43054616\"\u003e\u003c/a\u003e\u003c/center\u003e    \u003c/td\u003e\u003ctd\u003e\u003cbr/\u003e\u003cdiv\u003e\u003cp\u003ePossibly because it\u0026#39;s actually just \u0026#34;good enough\u0026#34; for most use cases?\u003c/p\u003e\u003cp\u003eAnd if you truly require better accuracy, using a GPS units for high acuracy PTP is a thing.\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e\n        \u003c/tbody\u003e\u003c/table\u003e\u003c/td\u003e\u003c/tr\u003e\n            \u003ctr id=\"43054736\"\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\n            \u003ctr id=\"43054731\"\u003e\u003ctd\u003e\u003ctable\u003e  \u003ctbody\u003e\u003ctr\u003e    \u003ctd indent=\"0\"\u003e\u003cimg src=\"https://news.ycombinator.com/s.gif\" height=\"1\" width=\"0\"/\u003e\u003c/td\u003e\u003ctd\u003e\n      \u003ccenter\u003e\u003ca id=\"up_43054731\" href=\"https://news.ycombinator.com/vote?id=43054731\u0026amp;how=up\u0026amp;goto=item%3Fid%3D43054616\"\u003e\u003c/a\u003e\u003c/center\u003e    \u003c/td\u003e\u003ctd\u003e\u003cbr/\u003e\u003cdiv\u003e\u003cp\u003e\u0026gt; \u003ci\u003eI’ve been researching how online time services sync over HTTPS\u003c/i\u003e\u003c/p\u003e\u003cp\u003eHTTPS isn\u0026#39;t usually used as far as I\u0026#39;m aware. Wait until you discover that your time server\u0026#39;s TLS certificate has \u0026#34;expired\u0026#34; according to your local machine; or hasn\u0026#39;t yet become valid (valid in the \u0026#34;future\u0026#34;). Good luck syncing after that!\u003c/p\u003e\u003cp\u003eMost services use some version of NTP; here\u0026#39;s NTPv3 spec: \u003ca href=\"https://datatracker.ietf.org/doc/html/rfc1305\" rel=\"nofollow\"\u003ehttps://datatracker.ietf.org/doc/html/rfc1305\u003c/a\u003e but there are others.\u003c/p\u003e\u003cp\u003e\u0026gt; \u003ci\u003eDue to network latency \u0026amp; asymmetry, even widely trusted time sources can drift by ±50ms or more\u003c/i\u003e\u003c/p\u003e\u003cp\u003eYup! Some people would call that a feature to enable leap second smearing.\u003c/p\u003e\u003cp\u003e\u0026gt; \u003ci\u003emost public clocks are way less accurate than we assume\u003c/i\u003e\u003c/p\u003e\u003cp\u003eI would bet you\u0026#39;re right but I don\u0026#39;t recall any studies to measure how bad the problem is. It sounds like you might be barking up somewhere with possibility for unique studies and information!\u003c/p\u003e\u003cp\u003e\u0026gt; \u003ci\u003eSome engineers are experimenting with ways to push accuracy below 10ms\u003c/i\u003e\u003c/p\u003e\u003cp\u003eGet rid of HTTP and you can get accuracy below 1ms. HTTP takes up \u003ci\u003ea lot\u003c/i\u003e of compute compared to NTP.\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e\n        \u003c/tbody\u003e\u003c/table\u003e\u003c/td\u003e\u003c/tr\u003e\n            \u003ctr id=\"43054699\"\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\n            \u003ctr id=\"43054709\"\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\n            \u003c/tbody\u003e\u003c/table\u003e\n  \u003c/td\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": null,
  "modifiedTime": null
}
