{
  "id": "c3576de9-6345-4460-9d60-749afb8f3254",
  "title": "Not everything needs an LLM: A framework for evaluating when AI makes sense",
  "link": "https://venturebeat.com/ai/not-everything-needs-an-llm-a-framework-for-evaluating-when-ai-makes-sense/",
  "description": "The answer to 'What customer needs requires an AI solution?' isn’t always 'Yes.' LLMs are still expensive and not always accurate.",
  "author": "Sharanya Rao",
  "published": "Sat, 03 May 2025 19:35:00 +0000",
  "source": "https://feeds.feedburner.com/venturebeat/SZYF",
  "categories": [
    "AI",
    "DataDecisionMakers",
    "AI, ML and Deep Learning",
    "Generative AI",
    "large language models",
    "machine learning"
  ],
  "byline": "Sharanya Rao",
  "length": 5577,
  "excerpt": "The answer to 'What customer needs requires an AI solution?' isn’t always 'Yes.' LLMs are still expensive and not always accurate.",
  "siteName": "VentureBeat",
  "favicon": "",
  "text": "Join our daily and weekly newsletters for the latest updates and exclusive content on industry-leading AI coverage. Learn More Question: What product should use machine learning (ML)?Project manager answer: Yes. Jokes aside, the advent of generative AI has upended our understanding of what use cases lend themselves best to ML. Historically, we have always leveraged ML for repeatable, predictive patterns in customer experiences, but now, it’s possible to leverage a form of ML even without an entire training dataset. Nonetheless, the answer to the question “What customer needs requires an AI solution?” still isn’t always “yes.” Large language models (LLMs) can still be prohibitively expensive for some, and as with all ML models, LLMs are not always accurate. There will always be use cases where leveraging an ML implementation is not the right path forward. How do we as AI project managers evaluate our customers’ needs for AI implementation? The key considerations to help make this decision include: The inputs and outputs required to fulfill your customer’s needs: An input is provided by the customer to your product and the output is provided by your product. So, for a Spotify ML-generated playlist (an output), inputs could include customer preferences, and ‘liked’ songs, artists and music genre. Combinations of inputs and outputs: Customer needs can vary based on whether they want the same or different output for the same or different input. The more permutations and combinations we need to replicate for inputs and outputs, at scale, the more we need to turn to ML versus rule-based systems. Patterns in inputs and outputs: Patterns in the required combinations of inputs or outputs help you decide what type of ML model you need to use for implementation. If there are patterns to the combinations of inputs and outputs (like reviewing customer anecdotes to derive a sentiment score), consider supervised or semi-supervised ML models over LLMs because they might be more cost-effective. Cost and Precision: LLM calls are not always cheap at scale and the outputs are not always precise/exact, despite fine-tuning and prompt engineering. Sometimes, you are better off with supervised models for neural networks that can classify an input using a fixed set of labels, or even rules-based systems, instead of using an LLM. I put together a quick table below, summarizing the considerations above, to help project managers evaluate their customer needs and determine whether an ML implementation seems like the right path forward. Type of customer needExampleML Implementation (Yes/No/Depends)Type of ML ImplementationRepetitive tasks where a customer needs the same output for the same inputAdd my email across various forms onlineNoCreating a rules-based system is more than sufficient to help you with your outputsRepetitive tasks where a customer needs different outputs for the same inputThe customer is in “discovery mode” and expects a new experience when they take the same action (such as signing into an account):— Generate a new artwork per click—StumbleUpon (remember that?) discovering a new corner of the internet through random searchYes–Image generation LLMs–Recommendation algorithms (collaborative filtering)Repetitive tasks where a customer needs the same/similar output for different inputs–Grading essays–Generating themes from customer feedbackDependsIf the number of input and output combinations are simple enough, a deterministic, rules-based system can still work for you. However, if you begin having multiple combinations of inputs and outputs because a rules-based system cannot scale effectively, consider leaning on:–Classifiers –Topic modellingBut only if there are patterns to these inputs. If there are no patterns at all, consider leveraging LLMs, but only for one-off scenarios (as LLMs are not as precise as supervised models). Repetitive tasks where a customer needs different outputs for different inputs –Answering customer support questions–SearchYesIt’s rare to come across examples where you can provide different outputs for different inputs at scale without ML. There are just too many permutations for a rules-based implementation to scale effectively. Consider:–LLMs with retrieval-augmented generation (RAG)–Decision trees for products such as searchNon-repetitive tasks with different outputsReview of a hotel/restaurantYesPre-LLMs, this type of scenario was tricky to accomplish without models that were trained for specific tasks, such as: –Recurrent neural networks (RNNs)–Long short-term memory networks (LSTMs) for predicting the next wordLLMs are a great fit for this type of scenario.  The bottom line: Don’t use a lightsaber when a simple pair of scissors could do the trick. Evaluate your customer’s need using the matrix above, taking into account the costs of implementation and the precision of the output, to build accurate, cost-effective products at scale. Sharanya Rao is a fintech group product manager. The views expressed in this article are those of the author and not necessarily those of their company or organization. Daily insights on business use cases with VB Daily If you want to impress your boss, VB Daily has you covered. We give you the inside scoop on what companies are doing with generative AI, from regulatory shifts to practical deployments, so you can share insights for maximum ROI. Read our Privacy Policy Thanks for subscribing. Check out more VB newsletters here. An error occured.",
  "image": "https://venturebeat.com/wp-content/uploads/2025/05/DDM-Sat.webp?w=1024?w=1200\u0026strip=all",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"primary\"\u003e\n\n\t\t\u003carticle id=\"content\"\u003e\n\t\t\t\u003cdiv\u003e\n\t\t\t\t\u003cdiv id=\"boilerplate_2682874\"\u003e\n\u003cp\u003e\u003cem\u003eJoin our daily and weekly newsletters for the latest updates and exclusive content on industry-leading AI coverage. \u003ca href=\"https://venturebeat.com/newsletters/?utm_source=VBsite\u0026amp;utm_medium=desktopNav\" data-type=\"link\" data-id=\"https://venturebeat.com/newsletters/?utm_source=VBsite\u0026amp;utm_medium=desktopNav\"\u003eLearn More\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\n\n\u003chr/\u003e\n\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eQuestion\u003c/strong\u003e: What product should use machine learning (ML)?\u003cbr/\u003e\u003cstrong\u003eProject manager answer\u003c/strong\u003e: Yes.\u003c/p\u003e\n\n\n\n\u003cp\u003eJokes aside, the advent of generative AI has upended our understanding of what use cases lend themselves best to ML. Historically, we have always leveraged ML for \u003ca href=\"https://venturebeat.com/ai/is-your-ai-product-actually-working-how-to-develop-the-right-metric-system/\"\u003erepeatable, predictive patterns\u003c/a\u003e in customer experiences, but now, it’s possible to leverage a form of ML even without an entire training dataset. \u003c/p\u003e\n\n\n\n\u003cp\u003eNonetheless, the answer to the question “What customer needs requires an AI solution?” still isn’t always “yes.” \u003ca href=\"https://venturebeat.com/ai/deepseeks-success-shows-why-motivation-is-key-to-ai-innovation/\"\u003eLarge language models\u003c/a\u003e (LLMs) can still be prohibitively expensive for some, and as with all ML models, LLMs are not always accurate. There will always be use cases where leveraging an ML implementation is not the right path forward. How do we as AI project managers evaluate our customers’ needs for AI implementation?\u003c/p\u003e\n\n\n\n\u003cp\u003eThe key considerations to help make this decision include: \u003c/p\u003e\n\n\n\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eThe inputs and outputs required to fulfill your customer’s needs: \u003c/strong\u003eAn input is provided by the customer to your product and the output is provided by your product. So, for a Spotify ML-generated playlist (an output), inputs could include customer preferences, and ‘liked’ songs, artists and music genre.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eCombinations of inputs and outputs: \u003c/strong\u003eCustomer needs can vary based on whether they want the same or different output for the same or different input. The more permutations and combinations we need to replicate for inputs and outputs, at scale, the more we need to turn to ML versus rule-based systems.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003ePatterns in inputs and outputs: \u003c/strong\u003ePatterns in the required combinations of inputs or outputs help you decide what type of ML model you need to use for implementation. If there are patterns to the combinations of inputs and outputs (like reviewing customer anecdotes to derive a sentiment score), consider supervised or semi-supervised ML models over LLMs because they might be more cost-effective.\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eCost and Precision:\u003c/strong\u003e LLM calls are not always cheap at scale and the outputs are not always \u003ca href=\"https://venturebeat.com/ai/beyond-arc-agi-gaia-and-the-search-for-a-real-intelligence-benchmark/\"\u003eprecise/exact\u003c/a\u003e, despite fine-tuning and prompt engineering. Sometimes, you are better off with supervised models for neural networks that can classify an input using a fixed set of labels, or even rules-based systems, instead of using an LLM.\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\n\u003cp\u003eI put together a quick table below, summarizing the considerations above, to help project managers evaluate their customer needs and determine whether an ML implementation seems like the right path forward. \u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003ctable\u003e\u003cthead\u003e\u003ctr\u003e\u003cth\u003e\u003cstrong\u003eType of customer need\u003c/strong\u003e\u003c/th\u003e\u003cth\u003e\u003cstrong\u003eExample\u003c/strong\u003e\u003c/th\u003e\u003cth\u003e\u003cstrong\u003eML Implementation (Yes/No/Depends)\u003c/strong\u003e\u003c/th\u003e\u003cth\u003e\u003cstrong\u003eType of ML Implementation\u003c/strong\u003e\u003c/th\u003e\u003c/tr\u003e\u003c/thead\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003eRepetitive tasks where  a customer needs the same output for the same input\u003c/td\u003e\u003ctd\u003eAdd my email across various forms online\u003c/td\u003e\u003ctd\u003eNo\u003c/td\u003e\u003ctd\u003eCreating a rules-based system is more than sufficient to help you with your outputs\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eRepetitive tasks where a customer needs different outputs for the same input\u003c/td\u003e\u003ctd\u003eThe customer is in “discovery mode” and expects a new experience when they take the same action (such as signing into an account):\u003cp\u003e— Generate a new artwork per click\u003c/p\u003e\u003cp\u003e—\u003ca href=\"https://en.wikipedia.org/wiki/StumbleUpon\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eStumbleUpon\u003c/a\u003e (remember that?) discovering a new corner of the internet through random search\u003c/p\u003e\u003c/td\u003e\u003ctd\u003eYes\u003c/td\u003e\u003ctd\u003e–Image generation LLMs\u003cp\u003e–Recommendation algorithms (collaborative filtering)\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eRepetitive tasks where a customer needs the same/similar output for different inputs\u003c/td\u003e\u003ctd\u003e–Grading essays\u003cbr/\u003e–Generating themes from customer feedback\u003c/td\u003e\u003ctd\u003eDepends\u003c/td\u003e\u003ctd\u003eIf the number of input and output combinations are simple enough, a deterministic, rules-based system can still work for you. \u003cp\u003eHowever, if you begin having multiple combinations of inputs and outputs because a rules-based system cannot scale effectively, consider leaning on:\u003c/p\u003e\u003cp\u003e–Classifiers \u003cbr/\u003e–Topic modelling\u003c/p\u003e\u003cp\u003eBut only if there are patterns to these inputs. \u003c/p\u003e\u003cp\u003eIf there are no patterns at all, consider leveraging LLMs, but only for one-off scenarios (as LLMs are not as precise as supervised models). \u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eRepetitive tasks where a customer needs different outputs for different inputs \u003c/td\u003e\u003ctd\u003e–Answering customer support questions\u003cbr/\u003e–Search\u003c/td\u003e\u003ctd\u003eYes\u003c/td\u003e\u003ctd\u003eIt’s rare to come across examples where you can provide different outputs for different inputs at scale without ML. \u003cp\u003eThere are just too many permutations for a rules-based implementation to scale effectively. Consider:\u003c/p\u003e\u003cp\u003e–LLMs with retrieval-augmented generation (RAG)\u003cbr/\u003e–Decision trees for products such as search\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eNon-repetitive tasks with different outputs\u003c/td\u003e\u003ctd\u003eReview of a hotel/restaurant\u003c/td\u003e\u003ctd\u003eYes\u003c/td\u003e\u003ctd\u003ePre-LLMs, this type of scenario was tricky to accomplish without models that were trained for specific tasks, such as: \u003cp\u003e–Recurrent neural networks (RNNs)\u003cbr/\u003e–Long short-term memory networks (LSTMs) for predicting the next word\u003c/p\u003e\u003cp\u003eLLMs are a great fit for this type of scenario. \u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eThe bottom line: Don’t use a lightsaber when a simple pair of scissors could do the trick. Evaluate your customer’s need using the matrix above, taking into account the costs of implementation and the precision of the output, to build accurate, cost-effective products at scale.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cem\u003eSharanya Rao is a fintech group product manager. The views expressed in this article are those of the author and not necessarily those of their company or organization\u003c/em\u003e. \u003c/p\u003e\n\u003cdiv id=\"boilerplate_2660155\"\u003e\n\t\t\t\u003cdiv\u003e\n\t\t\t\t\u003cp\u003e\u003cstrong\u003eDaily insights on business use cases with VB Daily\u003c/strong\u003e\u003c/p\u003e\n\t\t\t\t\u003cp\u003eIf you want to impress your boss, VB Daily has you covered. We give you the inside scoop on what companies are doing with generative AI, from regulatory shifts to practical deployments, so you can share insights for maximum ROI.\u003c/p\u003e\n\t\t\t\t\n\t\t\t\t\u003cp\u003eRead our \u003ca href=\"https://venturebeat.com/terms-of-service/\"\u003ePrivacy Policy\u003c/a\u003e\u003c/p\u003e\n\t\t\t\t\u003cp id=\"boilerplateNewsletterConfirmation\"\u003e\n\t\t\t\t\tThanks for subscribing. Check out more \u003ca href=\"https://venturebeat.com/newsletters/\"\u003eVB newsletters here\u003c/a\u003e.\n\t\t\t\t\u003c/p\u003e\n\t\t\t\t\u003cp\u003eAn error occured.\u003c/p\u003e\n\t\t\t\u003c/div\u003e\n\n\t\t\t\t\t\t\t\u003cp\u003e\u003cimg src=\"https://venturebeat.com/wp-content/themes/vb-news/brand/img/vb-daily-phone.png\" alt=\"\"/\u003e\n\t\t\t\t\u003c/p\u003e\n\t\t\t\n\t\t\u003c/div\u003e\t\t\t\u003c/div\u003e\n\n\t\t\t\t\t\t\t\n\t\t\t\n\t\t\u003c/article\u003e\n\n\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": "2025-05-03T19:35:00Z",
  "modifiedTime": "2025-05-03T19:41:42Z"
}
