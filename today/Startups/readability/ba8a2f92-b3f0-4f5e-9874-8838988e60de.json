{
  "id": "ba8a2f92-b3f0-4f5e-9874-8838988e60de",
  "title": "QEMU with VirtIO GPU Vulkan Support",
  "link": "https://gist.github.com/peppergrayxyz/fdc9042760273d137dddd3e97034385f",
  "description": "Article URL: https://gist.github.com/peppergrayxyz/fdc9042760273d137dddd3e97034385f Comments URL: https://news.ycombinator.com/item?id=42392802 Points: 113 # Comments: 13",
  "author": "GalaxySnail",
  "published": "Wed, 11 Dec 2024 20:48:43 +0000",
  "source": "https://hnrss.org/frontpage",
  "categories": null,
  "byline": "peppergrayxyz",
  "length": 5652,
  "excerpt": "QEMU with VirtIO GPU Vulkan Support. GitHub Gist: instantly share code, notes, and snippets.",
  "siteName": "Gist",
  "favicon": "https://gist.github.com/fluidicon.png",
  "text": "With its latest reales qemu added the Venus patches so that virtio-gpu now support venus encapsulation for vulkan. This is one more piece to the puzzle towards full Vulkan support. An outdated blog post on clollabora described in 2021 how to enable 3D acceleration of Vulkan applications in QEMU through the Venus experimental Vulkan driver for VirtIO-GPU with a local development environment. Following up on the outdated write up, this is how its done today. Definitions Let's start with the brief description of the projects mentioned in the post \u0026 extend them: QEMU is a machine emulator VirGL is an OpenGL driver for VirtIO-GPU, available in Mesa. Venus is an experimental Vulkan driver for VirtIO-GPU, also available in Mesa. Virglrenderer is a library that enables hardware acceleration to VM guests, effectively translating commands from the two drivers just mentioned to either OpenGL or Vulkan. libvirt is an API for managing platform virtualization virt-manager is a desktop user interface for managing virtual machines through libvirt Merged Patches: 2024-08-14 venus: make cross-device optional merged in mesa 24.2 2024-11-25 KVM: Stop grabbing references to PFNMAP'd pages merged in linux 6.13 2024-11-12 Support blob memory and venus on qemu merged in qemu 9.2.0 Work in progress: libvirt Add support for more virtio-vga-gl arguments #638 virt-manager Add support for Venus / Vulkan VirtIO-GPU driver #362 Prerequisites Make sure you have the proper version installed on the host: linux kernel \u003e= 6.13 built with CONFIG_UDMABUF working Vulkan and kvm setup qemu \u003e= 9.2.0 You can verify this like so: $ uname -r 6.13.0 $ ls /dev/udmabuf /dev/udmabuf $ ls /dev/kvm /dev/kvm $ qemu-system-x86_64 --version QEMU emulator version 9.2.0 Copyright (c) 2003-2024 Fabrice Bellard and the QEMU Project developers For Vulkan to work you need the proper drivers to be installed for your graphics card. To verfiy your setup, install vulkan-tools: $ vulkaninfo --summary ========== VULKANINFO ========== Vulkan Instance Version: ... ... $ vkcube Selected GPU x: ..., type: ... Building qemu If your distro doesn't (yet) ship and updated version of qemu, you can build it yourself from source: wget https://download.qemu.org/qemu-9.2.0.tar.xz tar xvJf qemu-9.2.0.tar.xz cd qemu-9.2.0 mkdir build \u0026\u0026 cd build ../configure --target-list=x86_64-softmmu \\ --enable-kvm \\ --enable-opengl \\ --enable-virglrenderer \\ --enable-gtk \\ --enable-sdl make -j4 The configuration step will throgh errors if packages are missing. Check the qemu wiki for further info what to install: https://wiki.qemu.org/Hosts/Linux Create and run an image for QEMU Create an image \u0026 fetch the distro of your choice: Host ISO=ubuntu-24.10-desktop-amd64.iso wget https://releases.ubuntu.com/oracular/ubuntu-24.10-desktop-amd64.iso IMG=ubuntu-24-10.qcow2 qemu-img create -f qcow2 $IMG 16G Run a live version or install the distro qemu-system-x86_64 \\ -enable-kvm \\ -M q35 \\ -smp 4 \\ -m 4G \\ -cpu host \\ -net nic,model=virtio \\ -net user,hostfwd=tcp::2222-:22 \\ -device virtio-vga-gl,hostmem=4G,blob=true,venus=true \\ -vga none \\ -display gtk,gl=on,show-cursor=on \\ -usb -device usb-tablet \\ -object memory-backend-memfd,id=mem1,size=4G \\ -machine memory-backend=mem1 \\ -hda $IMG \\ -cdrom $ISO Adjust the parameters accordingly: smp: number of cpu cores m: RAM hostmem,size: VRAM Guest Install mesa-utilites and vulkan-tools to test the setup: $ glxinfo -B $ vkcube Selected GPU x: ..., type: ... If the deive is llvmpipe somehting is wrong. The device should be virgl (...). Troubleshooting (host) add -d guest_errors to show error messages from the guest (guest) try installing vulkan virtio drivers and mesa check the original blog post virt-manager -- work in progress -- Currently this is work in progress, so there is no option to add vulkan support in virt-manager. There are no fields to configure this. Also xml doesnt work, because libvirt doesn't know about these options either, so xml validation fails. There is however an option for QEMU command-line passthrough which bypasses the validation. If you setup a default machine with 4G of memory, you can do this: \u003cqemu:commandline\u003e \u003cqemu:arg value=\"-device\"/\u003e \u003cqemu:arg value=\"virtio-vga-gl,hostmem=4G,blob=true,venus=true\"/\u003e \u003cqemu:arg value=\"-object\"/\u003e \u003cqemu:arg value=\"memory-backend-memfd,id=mem1,size=4G\"/\u003e \u003cqemu:arg value=\"-machine\"/\u003e \u003cqemu:arg value=\"memory-backend=mem1\"/\u003e \u003cqemu:arg value=\"-vga\"/\u003e \u003cqemu:arg value=\"none\"/\u003e \u003c/qemu:commandline\u003e Which gives this error: qemu-system-x86_64: virgl could not be initialized: -1 Changing the number from 4G to 4194304k (same as memory) leds to this error: qemu-system-x86_64: Spice: ../spice-0.15.2/server/red-qxl.cpp:435:spice_qxl_gl_scanout: condition `qxl_state-\u003egl_draw_cookie == GL_DRAW_COOKIE_INVALID' failed to be further investigated.",
  "image": "https://github.githubassets.com/assets/gist-og-image-54fd7dc0713e.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"file-qemu-vulkan-virtio-md\"\u003e\n    \u003carticle itemprop=\"text\"\u003e\n\u003cp dir=\"auto\"\u003eWith its latest reales qemu added the Venus patches so that virtio-gpu now support venus encapsulation for vulkan. This is one more piece to the puzzle towards full Vulkan support.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eAn outdated blog post on \u003ca href=\"https://www.collabora.com/news-and-blog/blog/2021/11/26/venus-on-qemu-enabling-new-virtual-vulkan-driver/\" rel=\"nofollow\"\u003eclollabora\u003c/a\u003e described in 2021 how to enable 3D acceleration of Vulkan applications in QEMU through the Venus experimental Vulkan driver for VirtIO-GPU with a local development environment. Following up on the outdated write up, this is how its done today.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003eDefinitions\u003c/h2\u003e\u003ca id=\"user-content-definitions\" aria-label=\"Permalink: Definitions\" href=\"#definitions\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eLet\u0026#39;s start with the brief description of the projects mentioned in the post \u0026amp; extend them:\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eQEMU is a machine emulator\u003c/li\u003e\n\u003cli\u003eVirGL is an OpenGL driver for VirtIO-GPU, available in Mesa.\u003c/li\u003e\n\u003cli\u003eVenus is an experimental Vulkan driver for VirtIO-GPU, also available in Mesa.\u003c/li\u003e\n\u003cli\u003eVirglrenderer is a library that enables hardware acceleration to VM guests, effectively translating commands from the two drivers just mentioned to either OpenGL or Vulkan.\u003c/li\u003e\n\u003cli\u003elibvirt is an API for managing platform virtualization\u003c/li\u003e\n\u003cli\u003evirt-manager is a desktop user interface for managing virtual machines through libvirt\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003eMerged Patches:\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003e2024-08-14 \u003ca href=\"https://gitlab.freedesktop.org/mesa/mesa/-/commit/087e9a96d13155e26987befae78b6ccbb7ae242b\" rel=\"nofollow\"\u003evenus: make cross-device optional\u003c/a\u003e merged in \u003ca href=\"https://www.phoronix.com/news/Mesa-24.2-Released\" rel=\"nofollow\"\u003emesa 24.2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e2024-11-25 \u003ca href=\"https://lore.kernel.org/all/20240726235234.228822-1-seanjc@google.com/\" rel=\"nofollow\"\u003eKVM: Stop grabbing references to PFNMAP\u0026#39;d pages\u003c/a\u003e merged in \u003ca href=\"https://www.phoronix.com/news/Linux-6.13-KVM\" rel=\"nofollow\"\u003elinux 6.13\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e2024-11-12 \u003ca href=\"https://lists.gnu.org/archive/html/qemu-devel/2024-08/msg03288.html\" rel=\"nofollow\"\u003eSupport blob memory and venus on qemu\u003c/a\u003e merged in \u003ca href=\"https://www.phoronix.com/news/QEMU-9.2-Released\" rel=\"nofollow\"\u003eqemu 9.2.0\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003eWork in progress:\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003elibvirt \u003ca href=\"https://gitlab.com/libvirt/libvirt/-/issues/638\" rel=\"nofollow\"\u003eAdd support for more virtio-vga-gl arguments #638\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003evirt-manager \u003ca href=\"https://github.com/virt-manager/virt-manager/issues/362\" data-hovercard-type=\"issue\" data-hovercard-url=\"/virt-manager/virt-manager/issues/362/hovercard\"\u003eAdd support for Venus / Vulkan VirtIO-GPU driver #362\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003ePrerequisites\u003c/h2\u003e\u003ca id=\"user-content-prerequisites\" aria-label=\"Permalink: Prerequisites\" href=\"#prerequisites\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eMake sure you have the proper version installed on the host:\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003elinux kernel \u0026gt;= 6.13 built with CONFIG_UDMABUF\u003c/li\u003e\n\u003cli\u003eworking Vulkan and kvm setup\u003c/li\u003e\n\u003cli\u003eqemu \u0026gt;= 9.2.0\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003eYou can verify this like so:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ uname -r\n6.13.0\n$ ls /dev/udmabuf\n/dev/udmabuf\n$ ls /dev/kvm\n/dev/kvm\n$ qemu-system-x86_64 --version\nQEMU emulator version 9.2.0\nCopyright (c) 2003-2024 Fabrice Bellard and the QEMU Project developers\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp dir=\"auto\"\u003eFor Vulkan to work you need the proper drivers to be installed for your graphics card. To verfiy your setup, install \u003ccode\u003evulkan-tools\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ vulkaninfo --summary\n==========\nVULKANINFO\n==========\n\nVulkan Instance Version: ...\n...\n$ vkcube\nSelected GPU x: ..., type: ...\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp dir=\"auto\"\u003e\u003ch4 dir=\"auto\"\u003eBuilding qemu\u003c/h4\u003e\u003ca id=\"user-content-building-qemu\" aria-label=\"Permalink: Building qemu\" href=\"#building-qemu\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eIf your distro doesn\u0026#39;t (yet) ship and updated version of qemu, you can build it yourself from source:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ewget https://download.qemu.org/qemu-9.2.0.tar.xz\ntar xvJf qemu-9.2.0.tar.xz\ncd qemu-9.2.0\nmkdir build \u0026amp;\u0026amp; cd build\n../configure --target-list=x86_64-softmmu  \\\n  --enable-kvm                 \\\n  --enable-opengl              \\\n  --enable-virglrenderer       \\\n  --enable-gtk                 \\\n  --enable-sdl\nmake -j4\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp dir=\"auto\"\u003eThe configuration step will throgh errors if packages are missing. Check the qemu wiki for further info what to install: \u003ca href=\"https://wiki.qemu.org/Hosts/Linux\" rel=\"nofollow\"\u003ehttps://wiki.qemu.org/Hosts/Linux\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003eCreate and run an image for QEMU\u003c/h2\u003e\u003ca id=\"user-content-create-and-run-an-image-for-qemu\" aria-label=\"Permalink: Create and run an image for QEMU\" href=\"#create-and-run-an-image-for-qemu\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eCreate an image \u0026amp; fetch the distro of your choice:\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 dir=\"auto\"\u003eHost\u003c/h3\u003e\u003ca id=\"user-content-host\" aria-label=\"Permalink: Host\" href=\"#host\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cdiv dir=\"auto\"\u003e\u003cpre\u003eISO=ubuntu-24.10-desktop-amd64.iso  \nwget https://releases.ubuntu.com/oracular/ubuntu-24.10-desktop-amd64.iso  \n\nIMG=ubuntu-24-10.qcow2\nqemu-img create -f qcow2 \u003cspan\u003e$IMG\u003c/span\u003e 16G\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003eRun a live version or install the distro\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eqemu-system-x86_64                                               \\\n    -enable-kvm                                                  \\\n    -M q35                                                       \\\n    -smp 4                                                       \\\n    -m 4G                                                        \\\n    -cpu host                                                    \\\n    -net nic,model=virtio                                        \\\n    -net user,hostfwd=tcp::2222-:22                              \\\n    -device virtio-vga-gl,hostmem=4G,blob=true,venus=true        \\\n    -vga none                                                    \\\n    -display gtk,gl=on,show-cursor=on                            \\\n    -usb -device usb-tablet                                      \\\n    -object memory-backend-memfd,id=mem1,size=4G                 \\\n    -machine memory-backend=mem1                                 \\\n    -hda $IMG                                                    \\\n    -cdrom $ISO                                                  \n\u003c/code\u003e\u003c/pre\u003e\n\u003cp dir=\"auto\"\u003eAdjust the parameters accordingly:\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003esmp: number of cpu cores\u003c/li\u003e\n\u003cli\u003em: RAM\u003c/li\u003e\n\u003cli\u003ehostmem,size: VRAM\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 dir=\"auto\"\u003eGuest\u003c/h3\u003e\u003ca id=\"user-content-guest\" aria-label=\"Permalink: Guest\" href=\"#guest\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eInstall \u003ccode\u003emesa-utilites\u003c/code\u003e and \u003ccode\u003evulkan-tools\u003c/code\u003e to test the setup:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ glxinfo -B\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode\u003e$ vkcube\nSelected GPU x: ..., type: ...\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp dir=\"auto\"\u003eIf the deive is \u003ccode\u003ellvmpipe\u003c/code\u003e somehting is wrong. The device should be \u003ccode\u003evirgl (...)\u003c/code\u003e.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch4 dir=\"auto\"\u003eTroubleshooting\u003c/h4\u003e\u003ca id=\"user-content-troubleshooting\" aria-label=\"Permalink: Troubleshooting\" href=\"#troubleshooting\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003e(host) add \u003ccode\u003e-d guest_errors\u003c/code\u003e to show error messages from the guest\u003c/li\u003e\n\u003cli\u003e(guest) try installing vulkan virtio drivers and mesa\u003c/li\u003e\n\u003cli\u003echeck the original \u003ca href=\"https://www.collabora.com/news-and-blog/blog/2021/11/26/venus-on-qemu-enabling-new-virtual-vulkan-driver/\" rel=\"nofollow\"\u003eblog post\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003evirt-manager\u003c/h2\u003e\u003ca id=\"user-content-virt-manager\" aria-label=\"Permalink: virt-manager\" href=\"#virt-manager\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e-- work in progress --\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eCurrently this is work in progress, so there is no option to add vulkan support in virt-manager. There are no fields to configure this. Also xml doesnt work, because libvirt doesn\u0026#39;t know about these options either, so xml validation fails. There is however an option for \u003ca href=\"https://libvirt.org/kbase/qemu-passthrough-security.html\" rel=\"nofollow\"\u003eQEMU command-line passthrough\u003c/a\u003e which bypasses the validation.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eIf you setup a default machine with 4G of memory, you can do this:\u003c/p\u003e\n\u003cdiv dir=\"auto\"\u003e\u003cpre\u003e  \u0026lt;\u003cspan\u003eqemu\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003ecommandline\u003c/span\u003e\u0026gt;\n    \u0026lt;\u003cspan\u003eqemu\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003earg\u003c/span\u003e \u003cspan\u003evalue\u003c/span\u003e=\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e-device\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e/\u0026gt;\n    \u0026lt;\u003cspan\u003eqemu\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003earg\u003c/span\u003e \u003cspan\u003evalue\u003c/span\u003e=\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003evirtio-vga-gl,hostmem=4G,blob=true,venus=true\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e/\u0026gt;\n    \u0026lt;\u003cspan\u003eqemu\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003earg\u003c/span\u003e \u003cspan\u003evalue\u003c/span\u003e=\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e-object\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e/\u0026gt;\n    \u0026lt;\u003cspan\u003eqemu\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003earg\u003c/span\u003e \u003cspan\u003evalue\u003c/span\u003e=\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003ememory-backend-memfd,id=mem1,size=4G\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e/\u0026gt;\n    \u0026lt;\u003cspan\u003eqemu\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003earg\u003c/span\u003e \u003cspan\u003evalue\u003c/span\u003e=\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e-machine\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e/\u0026gt;\n    \u0026lt;\u003cspan\u003eqemu\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003earg\u003c/span\u003e \u003cspan\u003evalue\u003c/span\u003e=\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003ememory-backend=mem1\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e/\u0026gt;\n    \u0026lt;\u003cspan\u003eqemu\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003earg\u003c/span\u003e \u003cspan\u003evalue\u003c/span\u003e=\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e-vga\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e/\u0026gt;\n    \u0026lt;\u003cspan\u003eqemu\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003earg\u003c/span\u003e \u003cspan\u003evalue\u003c/span\u003e=\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003enone\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e/\u0026gt;\n  \u0026lt;/\u003cspan\u003eqemu\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003ecommandline\u003c/span\u003e\u0026gt;\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003eWhich gives this error:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eqemu-system-x86_64: virgl could not be initialized: -1\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp dir=\"auto\"\u003eChanging the number from 4G to 4194304k (same as memory) leds to this error:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eqemu-system-x86_64: Spice: ../spice-0.15.2/server/red-qxl.cpp:435:spice_qxl_gl_scanout: condition `qxl_state-\u0026gt;gl_draw_cookie == GL_DRAW_COOKIE_INVALID\u0026#39; failed\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp dir=\"auto\"\u003eto be further investigated.\u003c/p\u003e\n\u003c/article\u003e\n  \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": null,
  "modifiedTime": null
}
