[
  {
    "id": "0ab75be6-5339-41f7-8ae1-0a85ee91abe9",
    "title": "Migrating Day One Journal Entries to Obsidian",
    "link": "https://tyler.io/2025/06/migrating-day-one-journal-entries-to-obsidian/",
    "description": "I recently moved away from Day One and am now using Obsidian to keep my daily journal. To make that possible, I needed to migrate over a decade’s worth of journal entries into an Obsidian-friendly format. When I first started using Day One, I wrote about it on this blog and said one of the requirements needed to be ... Read more",
    "author": "Tyler",
    "published": "Mon, 23 Jun 2025 19:15:14 +0000",
    "image": "https://cdn.tyler.io/wp-content/uploads/2025/06/458043133-88023a33-3d05-4b0a-9b7b-7a1b557f71e9-1024x726.png",
    "source": "https://tyler.io/feed/",
    "categories": [
      "Uncategorized"
    ]
  },
  {
    "id": "08e039d9-24b9-4857-8251-6c8b285ebc76",
    "title": "All Your Brand Are Belong To Us",
    "link": "https://tyler.io/2025/06/all-your-brand-are-belong-to-us/",
    "description": "The last iOS redesign, iOS 7 in 2013, laid the foundation for a neutral, nearly agnostic visual language that third-party developers and companies could build their own brand and corporate design on top of. It was such a clean slate that, twelve years later, most major apps look similar — if not identical — between ... Read more",
    "author": "Tyler",
    "published": "Thu, 12 Jun 2025 17:30:30 +0000",
    "image": "",
    "source": "https://tyler.io/feed/",
    "categories": [
      "Uncategorized"
    ]
  },
  {
    "id": "2a0889d1-d044-4008-b7cd-ea4acb823381",
    "title": "How to Implement a Decentralised CLI Tool Manager",
    "link": "https://albertodebortoli.com/2025/07/13/how-to-implement-a-decentralised-cli-tool-manager/",
    "description": "A design to implement a simple, generic and decentralised manager for CLI tools from the perspective of a Swift dev.",
    "author": "Alberto De Bortoli",
    "published": "Sun, 13 Jul 2025 23:15:31 GMT",
    "image": "https://albertodebortoli.com/content/images/2025/07/ChatGPT-Image-Jul-14--2025--12_07_43-AM.png",
    "source": "https://albertodebortoli.com/rss/",
    "categories": [
      "CLI manager",
      "tool",
      "executable",
      "manager",
      "swift",
      "cli"
    ]
  },
  {
    "id": "b717e485-6991-4a35-a663-20535209a5fd",
    "title": "How to setup a Swift Package Registry in Artifactory",
    "link": "https://albertodebortoli.com/2025/06/06/how-to-setup-a-swift-package-registry-in-artifactory/",
    "description": "A quick guide to setting up a Swift Package Registry with Artifactory to speed up builds and streamline dependency management.",
    "author": "Alberto De Bortoli",
    "published": "Fri, 06 Jun 2025 08:00:00 GMT",
    "image": "https://albertodebortoli.com/content/images/2025/06/Gemini_Generated_Image_p2p1t1p2p1t1p2p1.jpeg",
    "source": "https://albertodebortoli.com/rss/",
    "categories": [
      "swift",
      "registry",
      "artifactory",
      "package"
    ]
  },
  {
    "id": "571b68ed-8fae-4b27-bcf9-8ad92e5e036e",
    "title": "Swift 6 suitable notification observers in iOS",
    "link": "https://augmentedcode.io/2024/11/18/swift-6-friendlier-notification-observers/",
    "description": "The author discusses challenges managing side projects, specifically updating SignalPath to Swift 6. They encountered errors related to multiple notification observations but resolved them by shifting to publishers, avoiding sendable closure issues. Although the new approach risks background thread notifications, the compiler is satisfied with the adjustments made to the code.",
    "author": "Toomas Vahter",
    "published": "Mon, 18 Nov 2024 16:00:00 +0000",
    "image": "https://2.gravatar.com/avatar/e55a8cd331ba727a325fb2029717f9d584df498403c1462d032f2fa0be8e4777?s=96\u0026d=identicon\u0026r=G",
    "source": "https://augmentedcode.io/feed/",
    "categories": [
      "iOS",
      "Swift"
    ]
  },
  {
    "id": "62095ddf-d31e-4e4a-90e0-9f15994c3424",
    "title": "AnyClass protocol and Objective-C methods",
    "link": "https://augmentedcode.io/2024/11/04/anyclass-protocol-and-objective-c-methods/",
    "description": "AnyClass is a protocol all classes conform to and it comes with a feature I was not aware of. But first, how to I ended up with using AnyClass. While working on code using CoreData, I needed a way to enumerate all the CoreData entities and call a static function on them. If that function […]",
    "author": "Toomas Vahter",
    "published": "Mon, 04 Nov 2024 16:00:00 +0000",
    "image": "https://2.gravatar.com/avatar/e55a8cd331ba727a325fb2029717f9d584df498403c1462d032f2fa0be8e4777?s=96\u0026d=identicon\u0026r=G",
    "source": "https://augmentedcode.io/feed/",
    "categories": [
      "iOS",
      "Swift",
      "AnyClass"
    ]
  },
  {
    "id": "fb5df6ac-603c-4a0b-b051-95e309ddc27c",
    "title": "From Engineer to Manager: A Year of Growth and Transformation",
    "link": "https://benoitpasquier.com/2023/06/from-engineer-to-manager-a-year-of-growth-and-transformation/",
    "description": "It feels like it was yesterday when I became an engineering manager but it has been almost a year. I want to take this time to reflect on the challenges and learnings from this journey.",
    "author": "",
    "published": "Sun, 11 Jun 2023 06:00:00 +0000",
    "image": "",
    "source": "https://benoitpasquier.com/index.xml",
    "categories": null
  },
  {
    "id": "e64a2dab-4601-4702-a5e9-5c2a7b734afe",
    "title": "Things to know before becoming an Engineering Manager",
    "link": "https://benoitpasquier.com/2023/02/things-to-know-before-becoming-an-engineering-manager/",
    "description": "The journey from individual contributor to engineering manager isn’t always straightforward. Today, I’ll share what it means to become an engineering manager from my point of view, and a few important points to be aware of before making this transition.",
    "author": "",
    "published": "Sun, 19 Feb 2023 06:00:00 +0000",
    "image": "",
    "source": "https://benoitpasquier.com/index.xml",
    "categories": null
  },
  {
    "id": "6f633180-4b11-450a-9272-2c32cbc1c63b",
    "title": "iOS Accessibility Values",
    "link": "https://mobilea11y.com/blog/accessibility-values/",
    "description": "For iOS, Accessibility values are one of the building blocks of how Accessibility works on the platform, along with traits, labels, hints, and showing/hiding elements. If you’re familiar with WCAG or web accessibility, accessibility values are the value part of WCAG 4.1.2: Name, Role, Value. Values Not every element in your view will have a value - in fact, most won’t. Any element that ‘contains’ some data, data that is not included in the element’s label requires an accessibility value to be set.",
    "author": "",
    "published": "Sun, 19 Jun 2022 10:30:56 +0000",
    "image": "",
    "source": "https://mobilea11y.com/index.xml",
    "categories": null
  },
  {
    "id": "9bab020d-fc9f-4714-8fc8-c8345f771639",
    "title": "iOS UIKit Accessibility traits",
    "link": "https://mobilea11y.com/blog/traits/",
    "description": "Accessibility traits on iOS is the system by which assistive technologies know how to present your interface to your users. The exact experience will vary between assistive technologies, in some cases they may change the intonation of what VoiceOver reads, or add additional options for navigation, sometimes they will disable that assistive technology from accessing the element, or change how the assistive tech functions. They are the ‘Role’ part of the fundamental rule of making something accessible to screen readers - WCAG’s 4.",
    "author": "",
    "published": "Fri, 13 Aug 2021 07:30:56 +0000",
    "image": "",
    "source": "https://mobilea11y.com/index.xml",
    "categories": null
  },
  {
    "id": "78126040-77f8-423d-9fc4-7a3bbf57577f",
    "title": "You Should Feed Ducks The Good Bread",
    "link": "https://fabisevi.ch/2025/05/12/you-should-feed-ducks-the-good-bread/",
    "description": "Colleen and I were binge-watching Gossip Girl last winter, and there are a few scenes where a stressed and irate Blair Waldorf wanders over to Central Park to feed the ducks. I told Colleen, \"that sounds soothing — we should do that when the weather gets better\". And then, as I’m wont to do, I promptly forgot. But Colleen takes note of moments like that, and a few months later she reminded me: we should actually go feed some ducks. That’s how I found myself in Central Park last weekend, feeding ducks. It was the first beautiful day of spring in New York — the kind of day New Yorkers wait for, when everyone pours out to enjoy sunlight finally breaking through after a long dark winter. We had a picnic, strolled through the park, wandered amidst thousands of New Yorkers — and of course, we fed the ducks. My wife (who I should preface is an extremely kind, caring, and loving person) and I got into a small debate over what kind of bread to feed the ducks. I insisted on buying them a nice loaf, and she felt it was unnecessary — the ducks would happily take our scraps. I argued that buying a good loaf cost us very little but could potentially make their day. Heck, it could even possibly be the best meal they ever have. She replied that there’s no way to know if they’d even notice the difference — to them, it might just be one carb versus another. Three Philosphers Interject I bought the dang bread, and she didn’t mind. I spent the whole afternoon thinking about that moment, and why it meant so much to me. In the end, I came back to three philosophers and their philosophies.",
    "author": "Joe Fabisevich",
    "published": "Mon, 12 May 2025 00:00:00 GMT",
    "image": "",
    "source": "https://www.fabisevi.ch/feed.xml",
    "categories": null
  },
  {
    "id": "25d923cf-0daf-44ba-9ce5-e54eb49393e9",
    "title": "A Trick For Opening Magic Links in Your RSS Reader",
    "link": "https://fabisevi.ch/2025/03/28/opening-magic-links-in-your-rss-reader/",
    "description": "This blog post is documentation for a very specific problem I run into about once a year. That’s rare enough to forget how I solved it, but frequent enough to waste 15 minutes rediscovering the answer. And let’s be honest: it’s not the big problems that drive you mad — it’s the little ones that feel like their own Sisyphean hell. The Problem Some websites 1 require you to log in using a magic link — a one-time link emailed to you that signs you in when clicked. It’s usually seamless. But on iOS, it can quietly become a headache. 2",
    "author": "Joe Fabisevich",
    "published": "Fri, 28 Mar 2025 00:00:00 GMT",
    "image": "",
    "source": "https://www.fabisevi.ch/feed.xml",
    "categories": null
  },
  {
    "id": "f6a52c64-3138-49fc-adf0-38ef42452928",
    "title": "Building with nightly Swift toolchains on macOS",
    "link": "https://oleb.net/2024/swift-toolchains/",
    "description": "",
    "author": "Ole Begemann",
    "published": "2024-03-05T18:54:44Z",
    "image": "",
    "source": "https://oleb.net/blog/atom.xml",
    "categories": null
  },
  {
    "id": "644b051b-d5a5-4925-b940-9b77b6616c26",
    "title": "How the Swift compiler knows that DispatchQueue.main implies @MainActor",
    "link": "https://oleb.net/2024/dispatchqueue-mainactor/",
    "description": "",
    "author": "Ole Begemann",
    "published": "2024-02-29T18:54:47Z",
    "image": "",
    "source": "https://oleb.net/blog/atom.xml",
    "categories": null
  },
  {
    "id": "54cc5e48-8acb-440f-9c38-bd7f76415742",
    "title": "Magical Particle Effects with SwiftUI Canvas",
    "link": "https://nerdyak.tech/development/2024/06/27/particle-effects-with-SwiftUI-Canvas.html",
    "description": "In one of the previous posts, I shared a simple way of Creating particle effects in SwiftUI. The approach is super easy and utilizes the power of viewModifiers, but I would not recommend it for production use as it is performance-greedy when having a bigger amount of particles in place (because each particle is a single view)",
    "author": "Pavel Zak",
    "published": "2024-06-27T00:00:00+00:00",
    "image": "",
    "source": "https://nerdyak.tech/atom.xml",
    "categories": [
      "development",
      "SwiftUI",
      "Canvas",
      "Particles",
      "BlendMode",
      "TimelineView"
    ]
  },
  {
    "id": "1c4a9be9-a015-46a9-b924-c896db42420d",
    "title": "SwiftUI transitions with distortion effect and Metal Shaders",
    "link": "https://nerdyak.tech/development/2023/06/16/distortionEffect-with-Metal-shaders-for-better-transitions.html",
    "description": "This year DubDub is over and I am very excited about the new developer treats that iOS17 will bring us that expand the animation possibilities of SwiftUI. I am talking mainly about the PhaseAnimator, KeyframeAnimator and the ability to utilize Metal shaders on SwiftUI views through modifiers .distortionEffect, .layerEffect, and .colorEffect (docs).",
    "author": "Pavel Zak",
    "published": "2023-06-16T00:00:00+00:00",
    "image": "",
    "source": "https://nerdyak.tech/atom.xml",
    "categories": [
      "development",
      "SwiftUI",
      "distortionEffect",
      "Metal",
      "Shaders",
      "transitions"
    ]
  },
  {
    "id": "6159c08a-1711-4b44-86f7-c154563a04fe",
    "title": "Decoding Swift types that require additional data",
    "link": "https://www.swiftbysundell.com/articles/decoding-swift-types-that-require-additional-data",
    "description": "How Swift’s CodableWithConfiguration API can be used to inject additional, required data into a type’s decoding process, without having to use optionals or declare any additional decoding-specific types.",
    "author": "",
    "published": "Mon, 30 Jun 2025 15:35:00 +0200",
    "image": "",
    "source": "https://www.swiftbysundell.com/feed.rss",
    "categories": null
  },
  {
    "id": "17d78584-4009-45ed-a80b-3115393ba9d3",
    "title": "Tips and tricks for when using SwiftUI’s ViewBuilder",
    "link": "https://www.swiftbysundell.com/articles/swiftui-viewbuilder-tips-and-tricks",
    "description": "Let’s explore how we can use SwiftUI’s ViewBuilder within our own code, and a few things that can be good to keep in mind when doing so.",
    "author": "",
    "published": "Fri, 30 May 2025 14:25:00 +0200",
    "image": "",
    "source": "https://www.swiftbysundell.com/feed.rss",
    "categories": null
  },
  {
    "id": "aee185cd-881e-423a-93a3-8cd1a4c4ff50",
    "title": "Decoding Swift types that require additional data",
    "link": "https://www.swiftbysundell.com/articles/decoding-swift-types-that-require-additional-data",
    "description": "How Swift’s CodableWithConfiguration API can be used to inject additional, required data into a type’s decoding process, without having to use optionals or declare any additional decoding-specific types.",
    "author": "",
    "published": "Mon, 30 Jun 2025 15:35:00 +0200",
    "image": "",
    "source": "https://swiftbysundell.com/feed.rss",
    "categories": null
  },
  {
    "id": "25afdcde-96fe-4114-b57e-0e36029f81d7",
    "title": "Tips and tricks for when using SwiftUI’s ViewBuilder",
    "link": "https://www.swiftbysundell.com/articles/swiftui-viewbuilder-tips-and-tricks",
    "description": "Let’s explore how we can use SwiftUI’s ViewBuilder within our own code, and a few things that can be good to keep in mind when doing so.",
    "author": "",
    "published": "Fri, 30 May 2025 14:25:00 +0200",
    "image": "",
    "source": "https://swiftbysundell.com/feed.rss",
    "categories": null
  },
  {
    "id": "e7d2398c-0b96-4e60-b712-35701387d03a",
    "title": "Reducing email spam with a domain and catch-all aliases",
    "link": "https://swiftrocks.com/becoming-unspammable-with-a-domain-and-catchall-email-aliases",
    "description": "Tired of spammers? With your own domain, there's a trick you can use to eliminate them.",
    "author": "Bruno Rocha",
    "published": "2025-06-29T10:00:00+0200",
    "image": "",
    "source": "https://swiftrocks.com/rss.xml",
    "categories": null
  },
  {
    "id": "1cc889e6-17e1-46ac-af1f-62dd22247abd",
    "title": "How I'm using AI to improve my software engineering productivity (and why it will not steal your job)",
    "link": "https://swiftrocks.com/how-im-using-ai-for-software-engineering",
    "description": "AI has become an important part of my daily software engineering work. Here's how I used it and why it will not steal your job.",
    "author": "Bruno Rocha",
    "published": "2025-04-15T11:50:00+02:00",
    "image": "",
    "source": "https://swiftrocks.com/rss.xml",
    "categories": null
  },
  {
    "id": "c522fd4b-f55a-4ade-80e3-c540e89918c5",
    "title": "323: The Tidal Wave",
    "link": "http://relay.fm/radar/323",
    "description": "Should we adopt Liquid Glass or stick with our existing designs? And if we do adopt it, how much should we redesign and rethink along the way? (tl;dr: yes; much.)",
    "author": "Marco Arment and David Smith",
    "published": "Thu, 17 Jul 2025 18:00:00 GMT",
    "image": "https://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/secure/radarrelay/undertheradar323.mp3",
    "source": "https://www.relay.fm/radar/feed",
    "categories": null
  },
  {
    "id": "547ce1f5-e366-4727-a4e8-45362f24e085",
    "title": "322: Requiring iOS 26?",
    "link": "http://relay.fm/radar/322",
    "description": "Tradeoffs for requiring iOS 26 this fall, and a clever strategy to manage compatibility with iOS 18.",
    "author": "Marco Arment and David Smith",
    "published": "Thu, 03 Jul 2025 15:45:00 GMT",
    "image": "https://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/secure/radarrelay/undertheradar322.mp3",
    "source": "https://www.relay.fm/radar/feed",
    "categories": null
  },
  {
    "id": "08b15a4d-dd18-4cd0-bbae-30be0affc80a",
    "title": "New 64-bit requirements for watchOS apps",
    "link": "https://developer.apple.com/news/?id=zt8rydnt",
    "description": "Beginning April 2026, watchOS apps uploaded to App Store Connect must also include 64-bit support and be built with the watchOS 26 SDK. To enable 64-bit support in your project, we recommend using the default Xcode build setting of “Standard architectures” to build a single binary with 64-bit code.You can test ARM64 compatibility for your apps in the Xcode Simulator, and on Apple Watch Series 9 or 10, Apple Watch SE (2nd generation) or Apple Watch Ultra 2 running watchOS 11 or watchOS 26 beta.Learn more about the SDKs included in Xcode",
    "author": "",
    "published": "Tue, 22 Jul 2025 06:00:43 PDT",
    "image": "",
    "source": "https://developer.apple.com/news/rss/news.rss",
    "categories": null
  },
  {
    "id": "eaefcc82-b2fe-4b02-97e1-a315a08b93e3",
    "title": "iOS and iPadOS 26 design kits are here",
    "link": "https://developer.apple.com/news/?id=pnfbj8je",
    "description": "Apple Ul design kits for Figma and Sketch are now available for iOS and iPadOS 26.Apple Design Resources",
    "author": "",
    "published": "Fri, 18 Jul 2025 10:00:15 PDT",
    "image": "https://devimages-cdn.apple.com/wwdc-services/articles/images/E92B44C5-04EA-42F4-BB2A-AF394EFED6BB/2048.jpeg",
    "source": "https://developer.apple.com/news/rss/news.rss",
    "categories": null
  },
  {
    "id": "cdcc0182-4174-4958-a130-53dd9fd93dae",
    "title": "Approachable Concurrency in Swift Packages",
    "link": "https://useyourloaf.com/blog/approachable-concurrency-in-swift-packages/",
    "description": "Xcode 26 ships with Swift 6.2 and enables Approachable Concurrency. How do you adopt it in existing projects and in Swift Packages? What is Approachable Concurrency? In Swift 6.2 Apple is introducing a new more approachable way to use Swift Concurrency. It starts with the assumption that you start by running your app’s code on the main thread and only move work to a background thread when needed. I highly recommend watching the session video WWDC25 Embracing Swift concurrency and/or reading the Swift Evolution proposals to learn more: SE-0461 Run nonisolated async functions on the caller’s actor by default SE-0466 Control default actor isolation inference SE-0470 Global-actor isolated conformances Enabling in Xcode 26 Creating a new project with Xcode 26 enables MainActor default isolation and approachable concurrency by default. For an existing project you opt-in by changing the build settings for a target: Enabling Approachable Concurrency enables a couple of extra upcoming features: The Infer Isolated Conformances setting enables SE-0470 (upcoming feature flag InferIsolatedConformances). The nonIsolated(nonsending) By Default setting enables SE-0461 (upcoming feature flag NonisolatedNonsendingByDefault). The other concurrency features are enabled with Swift 6. Using in a Swift Package You can apply the build settings for approachable concurrency and default actor isolation to one or more targets in your Swift Package. You need to update the swift tools version to 6.2 (first line of Package.swift): // swift-tools-version: 6.2 To set the Default Actor Isolation (SE-0466) for a target, there’s a new swiftSettings option: .target( name: \"MyFeature\", swiftSettings: [ .defaultIsolation(MainActor.self) ] ) To enable approachable concurrency, add the upcoming feature flags for both SE-0461 and SE-0470: .target( name: \"MyFeature\", swiftSettings: [ .defaultIsolation(MainActor.self), .enableUpcomingFeature(\"NonisolatedNonsendingByDefault\"), .enableUpcomingFeature(\"InferIsolatedConformances\") ] ) If you want to apply the settings to all targets, including test targets, add the following to the bottom of your Package.swift file: for target in package.targets { var settings = target.swiftSettings ?? [] settings.append(contentsOf: [ .defaultIsolation(MainActor.self), .enableUpcomingFeature(\"NonisolatedNonsendingByDefault\"), .enableUpcomingFeature(\"InferIsolatedConformances\") ]) target.swiftSettings = settings } Initial Experiences I’m writing this post using Xcode 26 beta 3 and I would say this is still a work-in-progress. One common issue is with protocols like CodingKey which expect to be nonisolated: struct AppSettings: Codable { let name: String private enum CodingKeys: String, CodingKey { case name } ... } That generates a compiler warning: Conformance of ‘AppSettings.CodingKeys’ to protocol ‘CodingKey’ crosses into main actor-isolated code and can cause data races You can workaround it by marking the enum as nonisolated but a permanent fix is on the way. I’ve also seen issues when the generated Bundle.module becomes isolated to @MainActor by default. Learn More WWDC25 Embracing Swift concurrency SE-0461 Run nonisolated async functions on the caller’s actor by default SE-0466 Control default actor isolation inference SE-0470 Global-actor isolated conformances Pitch Amend SE-0466 \u0026 SE-0470 to improve isolation inference Approachable Concurrency in Swift Packages was originally posted 21 Jul 2025 on useyourloaf.com. Want this direct to your inbox? Sign up and get my free WWDC viewing guide PDF.",
    "author": "",
    "published": "Mon, 21 Jul 2025 10:14:20 +0100",
    "image": "https://useyourloaf.com/blog/approachable-concurrency-in-swift-packages/001.png",
    "source": "https://useyourloaf.com/blog/rss.xml",
    "categories": null
  },
  {
    "id": "537d766d-ddde-4db5-af8b-3e6041b92ac0",
    "title": "Adding Icon Composer icons to Xcode",
    "link": "https://useyourloaf.com/blog/adding-icon-composer-icons-to-xcode/",
    "description": "How do you use Icon Composer to add App Icons to an Xcode project? Last updated: Jun 26, 2025 Icon Composer Xcode 26 adds a new Icon Composer tool to build icons for the new Liquid Glass design system. I recommend the Apple Article: Creating your app icon using Icon Composer and the WWDC videos linked below to learn how to best use Icon Composer. The basic idea is that you use your preferred design tool (Photoshop, Sketch, Pixelmator, etc.) to design your icon’s foreground layers. You then export these as fully opaque SVG layers to import into Icon Composer. Using Icon Composer, you add the background, adjust size and positions of the layers, set opacity, color/gradients, shadows, and glass effects. Xcode uses the single .icon file to generate all the icon variants it needs for all supported platforms. Adding Icons to an Xcode Project The step that left me confused when watching the WWDC video was how to add the icons to an Xcode project. You no longer need to add default, dark, and tinted variants of the app icon to the asset catalog in the app bundle. What you need to do is drag the Icon Composer .icon file into the project navigator sidebar of the Xcode project: Once you add the .icon file to the project you no longer need the external file. You can open and edit the icon file in Icon Composer directly from Xcode: I would prefer that we could avoid this two step process. Maybe Apple will add an Icon Composer template to Xcode so we can create a new icon file directly in the project (FB18297643). One final step, in your app target settings, make sure the App Icon Set Name matches the name of the Icon Composer icon file name (without the .icon extension): What About Alternate App Icons? One thing that is missing is support for alternate app icons. I expected to be able to add alternate app icons to the project using Icon Composer. For example, if I create a purple variant of the icon named AppIcon-purple.icon and add it to the project: That should be enough for Xcode to generate the icons (making sure to have “Include all app icon assets” enabled in the build settings - see above). Unfortunately, setting the alternate icon name fails: UIApplication.shared.setAlternateIconName(\"AppIcon-purple\") Investigating some reports from people that claimed to have it working I decided to compare what Xcode generates when I add the app icons to the asset catalog. This is what I see in the Info.plist: Adding those keys to the Info.plist of the target fixes the problem. Note that the ~ipad variant seems to be necessary for it to work on the iPad. Hopefully Apple fixes this in a future Xcode release (FB18233873). Backwards Compatibility One other problem I’ve seen is icons not rendering correctly on older iOS releases. For example, on iOS 16.4 the background is not rendered. This looks like a known issue, the workaround being to keep the asset catalog icons: Icon Composer icons back deploy to older versions of iOS, macOS, and watchOS with inconsistent rendering. (152258860) Workaround: Keep the previous Asset Catalog app icon in your project until this issue is resolved. Learn More Apple Human Interface Guidelines: App Icons Apple Design Resources WWDC25 Say hello to the new look of app icons WWDC25 Create icons with Icon Composer Apple Article: Creating your app icon using Icon Composer Adding Icon Composer icons to Xcode was originally posted 23 Jun 2025 on useyourloaf.com. Want this direct to your inbox? Sign up and get my free WWDC viewing guide PDF.",
    "author": "",
    "published": "Mon, 23 Jun 2025 10:32:36 +0100",
    "image": "https://useyourloaf.com/blog/adding-icon-composer-icons-to-xcode/001.png",
    "source": "https://useyourloaf.com/blog/rss.xml",
    "categories": null
  },
  {
    "id": "9d7aeae6-9cab-448d-b61d-29a3367fae65",
    "title": "Solar Powered Birdhouse",
    "link": "https://atomicbird.com/blog/birdhouse-solar-power/",
    "description": "In my last couple of posts I’ve talked about the hardware and software behind my birdhouse camera project. I haven’t previously covered how I’m giving it all enough power to operate, and therein lies a tale. No Power? No Problem If I had a power outlet located anywhere near the bird house, this would have been easy. Pretty much any micro-USB power adapter would plug into the Raspberry Pi, and I’d be set.",
    "author": "",
    "published": "Thu, 19 May 2022 00:00:00 +0000",
    "image": "",
    "source": "https://atomicbird.com/index.xml",
    "categories": null
  },
  {
    "id": "08adb782-e7fa-4a93-b2bb-9a7881e8762c",
    "title": "Raspberry Pi Birdhouse Software",
    "link": "https://atomicbird.com/blog/birdhouse-software/",
    "description": "In my last post I went over the components of the bird house camera I set up this year to get a better look at the local black-capped chickadees. Today I’ll talk about the software that makes it work. Initial Setup Being relatively new to Raspberry Pi, I started off with a full install of Raspbian Deskop. It’s more than I need, since I won’t have anything like a desktop setup, but with a 64GB SD card I wasn’t concerned about the space.",
    "author": "",
    "published": "Mon, 09 May 2022 00:00:00 +0000",
    "image": "",
    "source": "https://atomicbird.com/index.xml",
    "categories": null
  },
  {
    "id": "8d557ec5-fa7f-4f31-a52c-2cf71896e904",
    "title": "Saturday March",
    "link": "https://inessential.com/2025/06/13/saturday-march.html",
    "description": "Tomorrow is No Kings. There’s one near you! Chatting with my friends about how I hate these fascist assholes doesn’t do a damn thing. Protests work. (Imperfectly, sure, with no guarantees. But it sure beats not protesting.)",
    "author": "",
    "published": "Fri, 13 Jun 2025 20:04:06 -0700",
    "image": "",
    "source": "https://inessential.com/xml/rss.xml",
    "categories": null
  },
  {
    "id": "c6ebaaa5-7445-4a07-86b8-65c089b30d2a",
    "title": "Retirement Day",
    "link": "https://inessential.com/2025/06/06/retirement-day.html",
    "description": "I wrote in my love letter to my colleagues at Audible that retirement is coming up — and now it’s here. Today’s the day! I’ve attended my last meetings. I’ve said my goodbyes. My laptop’s ready to ship back to Audible HQ. * * * I started working in 1984, while in high school, busing tables part time at Schaefers Canal House in Chesapeake City, MD. And I stopped working this day in 2025, almost 41 years later, as a senior engineer (which is surprisingly a lot like busing tables — lots of cleanup and setting the table just right for the customers to have a great time). Along the way I worked on, among other apps, Userland Frontier, NetNewsWire, MarsEdit, Glassboard, Vesper, OmniFocus, OmniOutliner, and Audible. * * * My immediate plan — Exhale! Breathe. Enjoy a steak. Watch WWDC from the comfort of home next week. Get back to work on NetNewsWire. 🌲",
    "author": "",
    "published": "Fri, 06 Jun 2025 11:20:46 -0700",
    "image": "",
    "source": "https://inessential.com/xml/rss.xml",
    "categories": null
  }
]
