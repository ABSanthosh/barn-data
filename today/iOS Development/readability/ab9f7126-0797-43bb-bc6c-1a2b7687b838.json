{
  "id": "ab9f7126-0797-43bb-bc6c-1a2b7687b838",
  "title": "Coding As Creative Expression",
  "link": "https://fabisevi.ch/2022/05/21/coding-as-creative-expression/",
  "description": "Is coding a science or an art?â€” Matthew Garlington (@dejadu13) May 21, 2022 I've seen many versions of this question posed over the years, and to Matthew's credit it's a very good question. As you can see in the replies people translate their lived experience writing code and answer art or science based on however they conceptualize and practice programming. A few years ago MIT conducted a study that concluded \"reading computer code is not the same as reading language\", answering the question of whether coding is art or science with a rigorously documented \"both\". While I'm hard-pressed to argue with science, I'd like to provide a different answer, one that's a little more conceptual.",
  "author": "Joe Fabisevich",
  "published": "Sat, 21 May 2022 00:00:00 GMT",
  "source": "https://www.fabisevi.ch/feed.xml",
  "categories": null,
  "byline": "",
  "length": 4058,
  "excerpt": "I've seen many versions of this question posed over the years, and to Matthew's credit it's a very good question. As you can see in the replies people translate their lived experience writing code and answer art or science based on however they conceptualize and practice programming. A few years ago MIT conducted a study that concluded \"reading computer code is not the same as reading language\", answering the question of whether coding is art or science with a rigorously documented \"both\". While I'm hard-pressed to argue with science, I'd like to provide a different answer, one that's a little more conceptual.",
  "siteName": "",
  "favicon": "https://fabisevi.ch/icons/icon-512x512.png?v=b60b950dc439294a707fb76cdaca4274",
  "text": "Is coding a science or an art?â€” Matthew Garlington (@dejadu13) May 21, 2022 I've seen many versions of this question posed over the years, and to Matthew's credit it's a very good question. As you can see in the replies people translate their lived experience writing code and answer art or science based on however they conceptualize and practice programming. A few years ago MIT conducted a study that concluded \"reading computer code is not the same as reading language\", answering the question of whether coding is art or science with a rigorously documented \"both\". While I'm hard-pressed to argue with science, I'd like to provide a different answer, one that's a little more conceptual. The instinct to qualify coding as art comes from the practice of programming. While writing a program software developers make many choices, ones that rarely have hard and fast rules. As long as your program compiles and runs as expected, you can make any choice you want. It's all human input, if you ask 100 developers to write a complex program they'll write it 100 different ways. Heck, if you ask one developer 100 times they may write it 100 different ways. Code can create something beautiful, enable an amazing experience, and people will even call a piece of code elegant or exquisite. To someone in the arts this all sounds very familiar. The instinct to qualify coding as a science comes from the output of a program. Developers desire deterministic results for their programs, when you provide an input to a program you expect to receive the same output every time. The practice of programming itself can be imprecise, and the same way that science operates in unknown space, building a program can often feel the same. Developers will try to minimize the ambiguity by using industry-tested practices, much the same that a scientist uses a standardized beaker rather than throwing some chemicals in an unclean cup and seeing what happens. When put together that truly sounds like the practice of science. What we've found ourselves asking is whether code is a paint brush or a calculator, and frustratingly the answer appears to be both. Despite the fact that programming looks like art and looks like science, I still think there's a concept that better fits the practice of coding, creative expression. We can look to writing as a point of comparison. Sometimes it's hard to believe that the most beautiful poem uses the same medium as boring technical documentation because the artifacts look and feel so different, but we all know it's true. The medium doesn't impose limitations on how someone can choose to express themselves, it's a tool for creative expression. With writing it's impossible to separate the medium from the artifact created, and the same is true for code. Code can be artistic and create something new in the world, or it can simply exist to accomplish a task. Code helps people capture the meaningful moments of their lives, lets you carry the beauty of every song ever recorded in your pocket, but it's also the boring spreadsheet that helps you run your business. So is coding an art, a science, or creative expression? I say coding isnâ€™t science, it's not art, itâ€™s not quite a craft, but a malleable form of creative expression. When given an infinitely flexible and manipulable canvas people use their imagination to create wondrous things, ones not limited to simple categorization.Joe Fabisevich is an indie developer creating software at Red Panda Club Inc. while writing about design, development, and building a company. Formerly an iOS developer working on societal issues @Twitter. These days I don't tweet, but I do post on Threads.Like my writing? You can keep up with it in your favorite RSS reader, or get posts emailed in newsletter form. I promise to never spam you or send you anything other than my posts, it's just a way for you to read my writing wherever's most comfortable for you.If you'd like to know more, wanna talk, or need some advice, feel free to sign up for office hours, I'm very friendly. ðŸ™‚",
  "image": "https://fabisevi.ch/static/pic-f5999ef8dd476bfbf9d65ddbace7e387.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003carticle\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cblockquote data-dnt=\"true\"\u003e\u003cp lang=\"en\" dir=\"ltr\"\u003eIs coding a science or an art?\u003c/p\u003eâ€” Matthew Garlington (@dejadu13) \u003ca href=\"https://twitter.com/dejadu13/status/1528015327866540032?ref_src=twsrc%5Etfw\"\u003eMay 21, 2022\u003c/a\u003e\u003c/blockquote\u003e \n\u003cp\u003eI\u0026#39;ve seen many versions of this question posed over the years, and to Matthew\u0026#39;s credit it\u0026#39;s a very good question. As you can see in the replies people translate their lived experience writing code and answer art or science based on however they conceptualize and practice programming. A few years ago MIT conducted \u003ca href=\"https://news.mit.edu/2020/brain-reading-computer-code-1215\"\u003ea study\u003c/a\u003e that concluded \u0026#34;reading computer code is not the same as reading language\u0026#34;, answering the question of whether coding is art or science with a rigorously documented \u0026#34;both\u0026#34;. While I\u0026#39;m hard-pressed to argue with science, I\u0026#39;d like to provide a different answer, one that\u0026#39;s a little more conceptual.\u003c/p\u003e\n\n\u003cp\u003eThe instinct to qualify coding as art comes from the practice of programming. While writing a program software developers make many choices, ones that rarely have hard and fast rules. As long as your program compiles and runs as expected, you can make any choice you want. It\u0026#39;s all human input, if you ask 100 developers to write a complex program they\u0026#39;ll write it 100 different ways. Heck, if you ask one developer 100 times they may write it 100 different ways. Code can create something beautiful, enable an amazing experience, and people will even call a piece of code elegant or exquisite. To someone in the arts this all sounds very familiar.\u003c/p\u003e\n\u003cp\u003eThe instinct to qualify coding as a science comes from the output of a program. Developers desire deterministic results for their programs, when you provide an input to a program you expect to receive the same output every time. The practice of programming itself can be imprecise, and the same way that science operates in unknown space, building a program can often feel the same. Developers will try to minimize the ambiguity by using industry-tested practices, much the same that a scientist uses a standardized beaker rather than throwing some chemicals in an unclean cup and seeing what happens. When put together that truly sounds like the practice of science.\u003c/p\u003e\n\u003cp\u003eWhat we\u0026#39;ve found ourselves asking is whether code is a paint brush or a calculator, and frustratingly the answer appears to be both. Despite the fact that programming looks like art and looks like science, I still think there\u0026#39;s a concept that better fits the practice of coding, creative expression.\u003c/p\u003e\n\u003cp\u003eWe can look to writing as a point of comparison. Sometimes it\u0026#39;s hard to believe that the most beautiful poem uses the same medium as boring technical documentation because the artifacts look and feel so different, but we all know it\u0026#39;s true. The medium doesn\u0026#39;t impose limitations on how someone can choose to express themselves, it\u0026#39;s a tool for creative expression. With writing it\u0026#39;s impossible to separate the medium from the artifact created, and the same is true for code. Code can be artistic and create something new in the world, or it can simply exist to accomplish a task. Code helps people capture the meaningful moments of their lives, lets you carry the beauty of every song ever recorded in your pocket, but it\u0026#39;s also the boring spreadsheet that helps you run your business.\u003c/p\u003e\n\u003cp\u003eSo is coding an art, a science, or creative expression? I say coding isnâ€™t science, it\u0026#39;s not art, itâ€™s not quite a craft, but a malleable form of creative expression. When given an infinitely flexible and manipulable canvas people use their imagination to create wondrous things, ones not limited to simple categorization.\u003c/p\u003e\u003c/div\u003e\u003cp\u003eJoe Fabisevich is an indie developer creating software at \u003ca href=\"https://redpanda.club\"\u003eRed Panda Club Inc.\u003c/a\u003e while writing about design, development, and building a company. Formerly an iOS developer working on societal issues \u003ca href=\"https://threads.net/mergesort\"\u003e@Twitter\u003c/a\u003e. These days I don\u0026#39;t tweet, but I do post on \u003ca href=\"https://threads.net/mergesort\"\u003eThreads\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eLike my writing? You can keep up with it in your favorite \u003ca href=\"https://fabisevi.ch/feed.xml\"\u003eRSS\u003c/a\u003e reader, or get posts \u003ca href=\"https://mailchi.mp/3237be1819ae/fabisevich-blog-posts\"\u003eemailed\u003c/a\u003e in newsletter form. I promise to never spam you or send you anything other than my posts, it\u0026#39;s just a way for you to read my writing wherever\u0026#39;s most comfortable for you.\u003c/p\u003e\u003cp\u003eIf you\u0026#39;d like to know more, wanna talk, or need some advice, feel free to sign up for \u003ca href=\"https://cal.com/mergesort/office-hours\"\u003eoffice hours\u003c/a\u003e, I\u0026#39;m very friendly. ðŸ™‚\u003c/p\u003e\u003c/div\u003e\u003c/article\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": null,
  "modifiedTime": null
}
