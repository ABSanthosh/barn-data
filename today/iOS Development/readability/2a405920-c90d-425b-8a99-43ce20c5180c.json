{
  "id": "2a405920-c90d-425b-8a99-43ce20c5180c",
  "title": "Easy connection to AWS Mac instances with EC2macConnector",
  "link": "https://albertodebortoli.com/2023/07/05/easy-connection-to-aws-mac-instances-with-ec2macconnector/",
  "description": "OverviewAmazon Web Services (AWS) provides EC2 Mac instances commonly used as CI workers. Configuring them can be either a manual or an automated process, depending on the DevOps and Platform Engineering experience in your company. No matter what process you adopt, it is sometimes useful to log into the",
  "author": "Alberto De Bortoli",
  "published": "Wed, 05 Jul 2023 13:54:56 GMT",
  "source": "https://albertodebortoli.com/rss/",
  "categories": null,
  "byline": "Alberto De Bortoli",
  "length": 5522,
  "excerpt": "Overview Amazon Web Services (AWS) provides EC2 Mac instances commonly used as CI workers. Configuring them can be either a manual or an automated process, depending on the DevOps and Platform Engineering experience in your company. No matter what process you adopt, it is sometimes useful to log into the instances to investigate problems. EC2macConnector is a CLI tool written in Swift that simplifies the process of connecting over SSH and VNC for DevOps engineers, removing the need of updating",
  "siteName": "Alberto De Bortoli",
  "favicon": "",
  "text": "OverviewAmazon Web Services (AWS) provides EC2 Mac instances commonly used as CI workers. Configuring them can be either a manual or an automated process, depending on the DevOps and Platform Engineering experience in your company. No matter what process you adopt, it is sometimes useful to log into the instances to investigate problems.EC2macConnector is a CLI tool written in Swift that simplifies the process of connecting over SSH and VNC for DevOps engineers, removing the need of updating private keys and maintaining the list of IPs that change across deployment cycles.Connecting to EC2 Mac instances without EC2macConnectorAWS documentation describes the steps needed to allow connecting via VNC:Start the Apple Remote Desktop agent and enable remote desktop access on the instanceSet the password for the ec2-user user on the instance to allow connecting over VNCStart an SSH sessionConnect over VNCAssuming steps 1 and 2 and done, steps 3 and 4 are usually manual and repetitive: the private keys and IPs usually change across deployments which could happen frequently, even daily.Here is how to start an SSH session in the terminal binding a port locally:ssh ec2-user@\u003cinstance_IP\u003e \\ -L \u003clocal_port\u003e:localhost:5900 \\ -i \u003cpath_to_privae_key\u003e \\To connect over VNC you can type the following in Finder â†’ Go â†’ Connect to Server (âŒ˜ + K) and click Connect:vnc://ec2-user@localhost:\u003clocal_port\u003e or you could create a .vncloc file with the following content and simply open it:\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e \u003c!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"\u003chttp://www.apple.com/DTDs/PropertyList-1.0.dtd\u003e\"\u003e \u003cplist version=\"1.0\"\u003e \u003cdict\u003e \u003ckey\u003eURL\u003c/key\u003e \u003cstring\u003evnc://ec2-user@localhost:\u003clocal_port\u003e\u003c/string\u003e \u003c/dict\u003e \u003c/plist\u003e If you are a system administrator, you might consider EC2 Instance Connect, but sadly, in my experience, it's not a working option for EC2 Mac instances even though I couldn't find evidence confirming or denying this statement. Administrators could also consider using Apple Remote Desktop which comes with a price tag of $/Â£79.99.Connecting to EC2 Mac instances with EC2macConnectorEC2macConnector is a simple and free tool that works in 2 steps:the configure command fetches the private keys and the IP addresses of the running EC2 Mac instances in a given region, and creates files using the said information to connect over SSH and VNC:ec2macConnector configure \\ --region \u003caws_region\u003e \\ --secrets-prefix \u003cmac_metal_private_keys_prefix\u003eRead below or the README for more information on the secrets prefix value.the connect command connects to the instances via SSH or VNC.ec2macConnector connect --region \u003caws_region\u003e \u003cfleet_index\u003e ec2macConnector connect --region \u003caws_region\u003e \u003cfleet_index\u003e --vnc ðŸ’¡Connecting over VNC requires an SSH session to be established first.As with any tool written using ArgumentParser, use the --help flag to get more information.RequirementsThere are some requirements to respect for the tool to work:PermissionsEC2macConnector requires AWS credentials either set as environment variables (AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY) or configured in ~/.aws/credentials via the AWS CLI. Environment variables take precedence.The user must be granted the following permissions:ec2:DescribeInstancessecretsmanager:ListSecretssecretsmanager:GetSecretValueEC2 instancesThe EC2 Mac instances must have the EC2macConnector:FleetIndex tag set to the index of the instance in the fleet. Indexes should start at 1. Instances that don't have the said tag will be ignored.Secrets and key pairs formatsEC2macConnector assumes that the private key for each instance key pair is stored in SecretsManagers. The name of the key pair could and should be different from the secret ID. For example, the instance key pair should include an incremental number also part of the corresponding secret ID.Consider that the number of Mac instances in an AWS account is limited and it's convenient to refer to them using an index starting at 1. It's good practice for the secret ID to also include a nonce as secrets with the same name cannot be recreated before the deletion period has elapsed, allowing frequent provisioning-decommissioning cycles.For the above reasons, EC2macConnector assumes the following formats are used:instance key pairs: \u003ckeypair_prefix\u003e_\u003cindex_of_instance_in_fleet\u003e e.g. mac_instance_key_pair_5secret IDs: \u003csecrets_prefix\u003e_\u003cindex_of_instance_in_fleet\u003e_\u003cnonce\u003e e.g. private_key_mac_metal_5_dx9Wna73BEC2macConnector Under the hoodThe configure command:downloads the private keys in the ~/.ssh foldercreates scripts to connect over SSH in ~/.ec2macConnector/\u003cregion\u003e/scriptscreates vncloc files to connect over VNC in ~/.ec2macConnector/\u003cregion\u003e/vnclocsâžœ .ec2macConnector tree ~/.ssh /Users/alberto/.ssh â”œâ”€â”€ mac_metal_1_i-08e4ffd8e9xxxxxxx â”œâ”€â”€ mac_metal_2_i-07bfff1f52xxxxxxx â”œâ”€â”€ mac_metal_3_i-020d680610xxxxxxx â”œâ”€â”€ mac_metal_4_i-08516ac980xxxxxxx â”œâ”€â”€ mac_metal_5_i-032bedaabexxxxxxx â”œâ”€â”€ config â”œâ”€â”€ known_hosts â””â”€â”€ ...The connect command:runs the scripts (opens new shells in Terminal and connects to the instances over SSH)opens the vncloc filesâžœ .ec2macConnector tree ~/.ec2macConnector /Users/alberto/.ec2macConnector â””â”€â”€ us-east-1 â”œâ”€â”€ scripts â”‚Â Â  â”œâ”€â”€ connect_1.sh â”‚Â Â  â”œâ”€â”€ connect_2.sh â”‚Â Â  â”œâ”€â”€ connect_3.sh â”‚Â Â  â”œâ”€â”€ connect_4.sh â”‚Â Â  â””â”€â”€ connect_5.sh â””â”€â”€ vnclocs â”œâ”€â”€ connect_1.vncloc â”œâ”€â”€ connect_2.vncloc â”œâ”€â”€ connect_3.vncloc â”œâ”€â”€ connect_4.vncloc â””â”€â”€ connect_5.vncloc",
  "image": "https://albertodebortoli.com/content/images/size/w1200/2023/07/MacStadium.webp",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003csection\u003e\n\t\t\t\t\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\u003cp\u003eAmazon Web Services (AWS) provides \u003ca href=\"https://aws.amazon.com/ec2/instance-types/mac/?ref=albertodebortoli.com\"\u003eEC2 Mac instances\u003c/a\u003e commonly used as CI workers. Configuring them can be either a manual or an automated process, depending on the DevOps and Platform Engineering experience in your company. No matter what process you adopt, it is sometimes useful to log into the instances to investigate problems.\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://github.com/albertodebortoli/EC2macConnector?ref=albertodebortoli.com\"\u003eEC2macConnector\u003c/a\u003e is a CLI tool written in Swift that simplifies the process of connecting over SSH and VNC for DevOps engineers, removing the need of updating private keys and maintaining the list of IPs that change across deployment cycles.\u003c/p\u003e\u003ch2 id=\"connecting-to-ec2-mac-instances-without-ec2macconnector\"\u003eConnecting to EC2 Mac instances without EC2macConnector\u003c/h2\u003e\u003cp\u003e\u003ca href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-mac-instances.html?ref=albertodebortoli.com\"\u003eAWS documentation\u003c/a\u003e describes the steps needed to allow connecting via VNC:\u003c/p\u003e\u003col\u003e\u003cli\u003eStart the Apple Remote Desktop agent and enable remote desktop access on the instance\u003c/li\u003e\u003cli\u003eSet the password for the \u003ccode\u003eec2-user\u003c/code\u003e user on the instance to allow connecting over VNC\u003c/li\u003e\u003cli\u003eStart an SSH session\u003c/li\u003e\u003cli\u003eConnect over VNC\u003c/li\u003e\u003c/ol\u003e\u003cp\u003eAssuming steps 1 and 2 and done, steps 3 and 4 are usually manual and repetitive: the private keys and IPs usually change across deployments which could happen frequently, even daily.\u003c/p\u003e\u003cp\u003eHere is how to start an SSH session in the terminal binding a port locally:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003essh ec2-user@\u0026lt;instance_IP\u0026gt; \\\n  -L \u0026lt;local_port\u0026gt;:localhost:5900 \\\n  -i \u0026lt;path_to_privae_key\u0026gt; \\\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTo connect over VNC you can type the following in Finder â†’ Go â†’ Connect to Server (âŒ˜ + K) and click Connect:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003evnc://ec2-user@localhost:\u0026lt;local_port\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eor you could create a \u003ccode\u003e.vncloc\u003c/code\u003e file with the following content and simply open it:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt;\n\u0026lt;!DOCTYPE plist PUBLIC \u0026#34;-//Apple//DTD PLIST 1.0//EN\u0026#34; \u0026#34;\u0026lt;http://www.apple.com/DTDs/PropertyList-1.0.dtd\u0026gt;\u0026#34;\u0026gt;\n\u0026lt;plist version=\u0026#34;1.0\u0026#34;\u0026gt;\n\u0026lt;dict\u0026gt;\n\t\u0026lt;key\u0026gt;URL\u0026lt;/key\u0026gt;\n\t\u0026lt;string\u0026gt;vnc://ec2-user@localhost:\u0026lt;local_port\u0026gt;\u0026lt;/string\u0026gt;\n\u0026lt;/dict\u0026gt;\n\u0026lt;/plist\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIf you are a system administrator, you might consider \u003ca href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Connect-using-EC2-Instance-Connect.html?ref=albertodebortoli.com\"\u003eEC2 Instance Connect\u003c/a\u003e, but sadly, in my experience, it\u0026#39;s not a working option for EC2 Mac instances even though I couldn\u0026#39;t find evidence confirming or denying this statement. \u003c/p\u003e\u003cp\u003eAdministrators could also consider using \u003ca href=\"https://apps.apple.com/gb/app/apple-remote-desktop/id409907375?mt=12\u0026amp;ref=albertodebortoli.com\"\u003eApple Remote Desktop\u003c/a\u003e which comes with a price tag of $/Â£79.99.\u003c/p\u003e\u003ch2 id=\"connecting-to-ec2-mac-instances-with-ec2macconnector\"\u003eConnecting to EC2 Mac instances with EC2macConnector\u003c/h2\u003e\u003cp\u003eEC2macConnector is a simple and free tool that works in 2 steps:\u003c/p\u003e\u003cul\u003e\u003cli\u003ethe \u003ccode\u003econfigure\u003c/code\u003e command fetches the private keys and the IP addresses of the running EC2 Mac instances in a given region, and creates files using the said information to connect over SSH and VNC:\u003c/li\u003e\u003c/ul\u003e\u003cpre\u003e\u003ccode\u003eec2macConnector configure \\\n  --region \u0026lt;aws_region\u0026gt; \\\n  --secrets-prefix \u0026lt;mac_metal_private_keys_prefix\u0026gt;\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eRead below or the \u003ca href=\"https://github.com/albertodebortoli/EC2macConnector?ref=albertodebortoli.com\"\u003eREADME\u003c/a\u003e for more information on the secrets prefix value.\u003c/p\u003e\u003cul\u003e\u003cli\u003ethe \u003ccode\u003econnect\u003c/code\u003e command connects to the instances via SSH or VNC.\u003c/li\u003e\u003c/ul\u003e\u003cpre\u003e\u003ccode\u003eec2macConnector connect --region \u0026lt;aws_region\u0026gt; \u0026lt;fleet_index\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003cpre\u003e\u003ccode\u003eec2macConnector connect --region \u0026lt;aws_region\u0026gt; \u0026lt;fleet_index\u0026gt; --vnc\n\u003c/code\u003e\u003c/pre\u003e\u003cdiv\u003e\u003cp\u003eðŸ’¡\u003c/p\u003e\u003cp\u003eConnecting over VNC requires an SSH session to be established first.\u003c/p\u003e\u003c/div\u003e\u003cp\u003eAs with any tool written using \u003ca href=\"https://github.com/apple/swift-argument-parser?ref=albertodebortoli.com\"\u003eArgumentParser\u003c/a\u003e, use the \u003ccode\u003e--help\u003c/code\u003e flag to get more information.\u003c/p\u003e\u003ch2 id=\"requirements\"\u003eRequirements\u003c/h2\u003e\u003cp\u003eThere are some requirements to respect for the tool to work:\u003c/p\u003e\u003ch3 id=\"permissions\"\u003ePermissions\u003c/h3\u003e\u003cp\u003eEC2macConnector requires AWS credentials either set as environment variables (\u003ccode\u003eAWS_ACCESS_KEY_ID\u003c/code\u003e and \u003ccode\u003eAWS_SECRET_ACCESS_KEY\u003c/code\u003e) or configured in \u003ccode\u003e~/.aws/credentials\u003c/code\u003e via the \u003ca href=\"https://aws.amazon.com/cli/?ref=albertodebortoli.com\"\u003eAWS CLI\u003c/a\u003e. Environment variables take precedence.\u003c/p\u003e\u003cp\u003eThe user must be granted the following permissions:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003ccode\u003eec2:DescribeInstances\u003c/code\u003e\u003c/li\u003e\u003cli\u003e\u003ccode\u003esecretsmanager:ListSecrets\u003c/code\u003e\u003c/li\u003e\u003cli\u003e\u003ccode\u003esecretsmanager:GetSecretValue\u003c/code\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3 id=\"ec2-instances\"\u003eEC2 instances\u003c/h3\u003e\u003cp\u003eThe EC2 Mac instances must have the \u003ccode\u003eEC2macConnector:FleetIndex\u003c/code\u003e tag set to the index of the instance in the fleet. Indexes should start at 1. Instances that don\u0026#39;t have the said tag will be ignored.\u003c/p\u003e\u003ch3 id=\"secrets-and-key-pairs-formats\"\u003eSecrets and key pairs formats\u003c/h3\u003e\u003cp\u003eEC2macConnector assumes that the private key for each instance key pair is stored in SecretsManagers. The name of the key pair could and should be different from the secret ID. For example, the instance key pair should include an incremental number also part of the corresponding secret ID.\u003c/p\u003e\u003cp\u003eConsider that the number of Mac instances in an AWS account is limited and it\u0026#39;s convenient to refer to them using an index starting at 1. It\u0026#39;s good practice for the secret ID to also include a nonce as secrets with the same name cannot be recreated before the deletion period has elapsed, allowing frequent provisioning-decommissioning cycles.\u003c/p\u003e\u003cp\u003eFor the above reasons, EC2macConnector assumes the following formats are used:\u003c/p\u003e\u003cul\u003e\u003cli\u003einstance key pairs: \u003ccode\u003e\u0026lt;keypair_prefix\u0026gt;_\u0026lt;index_of_instance_in_fleet\u0026gt;\u003c/code\u003e e.g. \u003ccode\u003emac_instance_key_pair_5\u003c/code\u003e\u003c/li\u003e\u003cli\u003esecret IDs: \u003ccode\u003e\u0026lt;secrets_prefix\u0026gt;_\u0026lt;index_of_instance_in_fleet\u0026gt;_\u0026lt;nonce\u0026gt;\u003c/code\u003e e.g. \u003ccode\u003eprivate_key_mac_metal_5_dx9Wna73B\u003c/code\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"ec2macconnector-under-the-hood\"\u003eEC2macConnector Under the hood\u003c/h2\u003e\u003cp\u003eThe \u003ccode\u003econfigure\u003c/code\u003e command:\u003c/p\u003e\u003cul\u003e\u003cli\u003edownloads the private keys in the \u003ccode\u003e~/.ssh\u003c/code\u003e folder\u003c/li\u003e\u003cli\u003ecreates scripts to connect over SSH in \u003ccode\u003e~/.ec2macConnector/\u0026lt;region\u0026gt;/scripts\u003c/code\u003e\u003c/li\u003e\u003cli\u003ecreates vncloc files to connect over VNC in \u003ccode\u003e~/.ec2macConnector/\u0026lt;region\u0026gt;/vnclocs\u003c/code\u003e\u003c/li\u003e\u003c/ul\u003e\u003cpre\u003e\u003ccode\u003eâžœ  .ec2macConnector tree ~/.ssh\n/Users/alberto/.ssh\nâ”œâ”€â”€ mac_metal_1_i-08e4ffd8e9xxxxxxx\nâ”œâ”€â”€ mac_metal_2_i-07bfff1f52xxxxxxx\nâ”œâ”€â”€ mac_metal_3_i-020d680610xxxxxxx\nâ”œâ”€â”€ mac_metal_4_i-08516ac980xxxxxxx\nâ”œâ”€â”€ mac_metal_5_i-032bedaabexxxxxxx\nâ”œâ”€â”€ config\nâ”œâ”€â”€ known_hosts\nâ””â”€â”€ ...\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe \u003ccode\u003econnect\u003c/code\u003e command:\u003c/p\u003e\u003cul\u003e\u003cli\u003eruns the scripts (opens new shells in Terminal and connects to the instances over SSH)\u003c/li\u003e\u003cli\u003eopens the vncloc files\u003c/li\u003e\u003c/ul\u003e\u003cpre\u003e\u003ccode\u003eâžœ  .ec2macConnector tree ~/.ec2macConnector\n/Users/alberto/.ec2macConnector\nâ””â”€â”€ us-east-1\n    â”œâ”€â”€ scripts\n    â”‚Â Â  â”œâ”€â”€ connect_1.sh\n    â”‚Â Â  â”œâ”€â”€ connect_2.sh\n    â”‚Â Â  â”œâ”€â”€ connect_3.sh\n    â”‚Â Â  â”œâ”€â”€ connect_4.sh\n    â”‚Â Â  â””â”€â”€ connect_5.sh\n    â””â”€â”€ vnclocs\n        â”œâ”€â”€ connect_1.vncloc\n        â”œâ”€â”€ connect_2.vncloc\n        â”œâ”€â”€ connect_3.vncloc\n        â”œâ”€â”€ connect_4.vncloc\n        â””â”€â”€ connect_5.vncloc\u003c/code\u003e\u003c/pre\u003e\n\t\t\t\u003c/section\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": "2023-07-05T13:54:56Z",
  "modifiedTime": "2023-08-06T13:00:35Z"
}
