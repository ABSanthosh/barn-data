{
  "id": "208dc742-1c42-44ae-87c8-e503eabb2ee4",
  "title": "Accessibility Review: Huh? - International languages",
  "link": "https://mobilea11y.com/blog/huh-dictionary/",
  "description": "The Accessibility Review series uses real world apps to provide examples of common accessibility issues and provide tips on how to fix them. Each of the developers has kindly volunteered their app to be tested. Huh? is a dictionary and thesaurus app from Peter Yaacoub. Enter a word into the search bar then choose a dictionary service. Press search and the app will present your chosen service’s entry for the term you entered.",
  "author": "",
  "published": "Sun, 28 Jun 2020 07:30:56 +0000",
  "source": "https://mobilea11y.com/index.xml",
  "categories": null,
  "byline": "",
  "length": 1884,
  "excerpt": "The Accessibility Review series uses real world apps to provide examples of common accessibility issues and provide tips on how to fix them. Each of the developers has kindly volunteered their app to be tested.",
  "siteName": "",
  "favicon": "https://mobilea11y.com/apple-touch-icon.png",
  "text": "The Accessibility Review series uses real world apps to provide examples of common accessibility issues and provide tips on how to fix them. Each of the developers has kindly volunteered their app to be tested. Huh? is a dictionary and thesaurus app from Peter Yaacoub. Enter a word into the search bar then choose a dictionary service. Press search and the app will present your chosen service’s entry for the term you entered. What makes this app stand out is its ability to look up words in various languages. The app features services for Arabic, Spanish, Italian and several others. Change the app’s search language and to immerse you in the experience, the app’s buttons also change. We have a visual clue to the language for these buttons by the flag displayed. But VoiceOver cannot pick up on this clue. Instead, VoiceOver will attempt at the pronunciation of the word using the user’s local language. This has mixed results. VoiceOver Attributes A more immersive experience would be to use attributed strings to tell VoiceOver which language to use. This means VoiceOver will use the appropriate languages pronunciation rules and voice when it reaches the button. The code below sets the ‘Language’ button to the equivalent Portuguese word and tells VoiceOver to always read it as Portuguese, rather than attempting it in the user’s local language. let buttonTitle = NSAttributedString(string: \"Idioma\", attributes: [.accessibilitySpeechLanguage: \"pt-PT\"]) button.setAttributedTitle(buttonTitle, for: .normal) This code change is all about giving an equivalent experience. Any VoiceOver users will likely understand what the app means when it makes a local attempt at the word, but we’d rather learn a language from a native speaker than a tourist with half-remembered highschool language lessons. While making no change here would still be accessible, it’s not inclusive.",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"main\"\u003e\n    \n    \u003cp\u003eThe \u003ca href=\"https://mobilea11y.com/tags/accessibility-review/\"\u003eAccessibility Review series\u003c/a\u003e uses real world apps to provide examples of common accessibility issues and provide tips on how to fix them. Each of the developers has kindly volunteered their app to be tested.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://apps.apple.com/app/id1330097506\"\u003eHuh?\u003c/a\u003e is a dictionary and thesaurus app from \u003ca href=\"https://twitter.com/yaapete\"\u003ePeter Yaacoub\u003c/a\u003e. Enter a word into the search bar then choose a dictionary service. Press search and the app will present your chosen service’s entry for the term you entered.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://mobilea11y.com/images/huh-english.PNG\" alt=\"Huh app\"/\u003e\u003c/p\u003e\n\u003cp\u003eWhat makes this app stand out is its ability to look up words in various languages. The app features services for Arabic, Spanish, Italian and several others. Change the app’s search language and to immerse you in the experience, the app’s buttons also change.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://mobilea11y.com/images/huh-german.PNG\" alt=\"Huh app in German\"/\u003e\n\u003cimg src=\"https://mobilea11y.com/images/huh-italian.PNG\" alt=\"Huh app in Italian\"/\u003e\u003c/p\u003e\n\u003cp\u003eWe have a visual clue to the language for these buttons by the flag displayed. But VoiceOver cannot pick up on this clue. Instead, VoiceOver will attempt at the pronunciation of the word using the user’s local language. This has mixed results.\u003c/p\u003e\n\u003ch2 id=\"voiceover-attributes\"\u003eVoiceOver Attributes\u003c/h2\u003e\n\u003cp\u003eA more immersive experience would be to use attributed strings to tell VoiceOver which language to use. This means VoiceOver will use the appropriate languages pronunciation rules and voice when it reaches the button.\u003c/p\u003e\n\u003cp\u003eThe code below sets the ‘Language’ button to the equivalent Portuguese word and tells VoiceOver to always read it as Portuguese, rather than attempting it in the user’s local language.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003elet buttonTitle = NSAttributedString(string: \u0026#34;Idioma\u0026#34;, attributes: [.accessibilitySpeechLanguage: \u0026#34;pt-PT\u0026#34;])\nbutton.setAttributedTitle(buttonTitle, for: .normal)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis code change is all about giving an equivalent experience. Any VoiceOver users will likely understand what the app means when it makes a local attempt at the word, but we’d rather learn a language from a native speaker than a tourist with half-remembered highschool language lessons. While making no change here would still be accessible, it’s not inclusive.\u003c/p\u003e\n\n    \n\n\n  \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": null,
  "modifiedTime": null
}
