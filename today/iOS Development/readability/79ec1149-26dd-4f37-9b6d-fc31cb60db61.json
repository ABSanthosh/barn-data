{
  "id": "79ec1149-26dd-4f37-9b6d-fc31cb60db61",
  "title": "ScrollView phase changes on iOS 18",
  "link": "https://augmentedcode.io/2024/07/15/scrollview-phase-changes-on-ios-18/",
  "description": "In addition to scroll related view modifiers covered in the previous blog post, there is another one for detecting scroll view phases aka the state of the scrolling. The new view modifier is called onScrollPhaseChange(_:) and has three arguments in the change closure: old phase, new phase and a context. ScrollPhase is an enum with […]",
  "author": "Toomas Vahter",
  "published": "Mon, 15 Jul 2024 15:00:00 +0000",
  "source": "https://augmentedcode.io/feed/",
  "categories": [
    "Swift",
    "SwiftUI",
    "iOS",
    "onScrollPhaseChange",
    "ScrollGeometry",
    "ScrollPhase",
    "ScrollPhaseChangeContext",
    "ScrollView"
  ],
  "byline": "",
  "length": 1380,
  "excerpt": "In addition to scroll related view modifiers covered in the previous blog post, there is another one for detecting scroll view phases aka the state of the scrolling. The new view modifier is called…",
  "siteName": "Augmented Code",
  "favicon": "https://augmentedcode.io/wp-content/uploads/2017/11/site-icon.png?w=192",
  "text": "In addition to scroll related view modifiers covered in the previous blog post, there is another one for detecting scroll view phases aka the state of the scrolling. The new view modifier is called onScrollPhaseChange(_:) and has three arguments in the change closure: old phase, new phase and a context. ScrollPhase is an enum with the following values: animating – animating the content offset decelerating – user interaction stopped and scroll velocity is decelerating idle – no scrolling interacting – user is interacting tracking – potential user initiated scroll event is going to happen The enum has a convenience property of isScrolling which is true when the phase is not idle. ScrollPhaseChangeContext captures additional information about the scroll state, and it is the third argument of the closure. The type gives access to the current ScrollGeometry and the velocity of the scroll view. Here is an example of a scroll view which has the new view modifier attached. If this was helpful, please let me know on Mastodon@toomasvahter or Twitter @toomasvahter. Feel free to subscribe to RSS feed. Thank you for reading. Tags iOS, onScrollPhaseChange, ScrollGeometry, ScrollPhase, ScrollPhaseChangeContext, ScrollView, Swift, SwiftUI",
  "image": "https://augmentedcode.io/wp-content/uploads/2017/11/site-icon.png?w=200",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"site-content\" role=\"main\"\u003e\n\n\t\n\u003carticle id=\"post-3723\"\u003e\n\n\t\n\n\n\t\u003cdiv\u003e\n\n\t\t\t\n\u003cp\u003eIn addition to scroll related view modifiers covered in the \u003ca href=\"https://augmentedcode.io/2024/07/01/scroll-geometry-and-position-view-modifiers-in-swiftui-on-ios-18/\"\u003eprevious blog post\u003c/a\u003e, there is another one for detecting scroll view phases aka the state of the scrolling. The new view modifier is called \u003ca href=\"https://developer.apple.com/documentation/swiftui/view/onscrollphasechange(_:)-2tdfq\"\u003eonScrollPhaseChange(_:)\u003c/a\u003e and has three arguments in the change closure: old phase, new phase and a context.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003ca href=\"https://developer.apple.com/documentation/swiftui/scrollphase\"\u003eScrollPhase\u003c/a\u003e is an enum with the following values:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eanimating – animating the content offset\u003c/li\u003e\n\n\n\n\u003cli\u003edecelerating – user interaction stopped and scroll velocity is decelerating \u003c/li\u003e\n\n\n\n\u003cli\u003eidle – no scrolling\u003c/li\u003e\n\n\n\n\u003cli\u003einteracting – user is interacting\u003c/li\u003e\n\n\n\n\u003cli\u003etracking – potential user initiated scroll event is going to happen\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cp\u003eThe enum has a convenience property of \u003ca href=\"https://developer.apple.com/documentation/swiftui/scrollphase/isscrolling\"\u003eisScrolling\u003c/a\u003e which is true when the phase is not idle.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003ca href=\"https://developer.apple.com/documentation/swiftui/scrollphasechangecontext\"\u003eScrollPhaseChangeContext\u003c/a\u003e captures additional information about the scroll state, and it is the third argument of the closure. The type gives access to the current \u003ca href=\"https://developer.apple.com/documentation/swiftui/scrollgeometry\"\u003eScrollGeometry\u003c/a\u003e and the \u003ca href=\"https://developer.apple.com/documentation/swiftui/scrollphasechangecontext/velocity\"\u003evelocity\u003c/a\u003e of the scroll view.\u003c/p\u003e\n\n\n\n\u003cp\u003eHere is an example of a scroll view which has the new view modifier attached.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003c/figure\u003e\n\n\n\n\u003cfigure\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eIf this was helpful, please let me know on \u003ca href=\"https://mastodon.social/@toomasvahter\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eMastodon@toomasvahter\u003c/a\u003e or \u003ca rel=\"noreferrer noopener\" href=\"https://twitter.com/toomasvahter\" target=\"_blank\"\u003eTwitter @toomasvahter\u003c/a\u003e. Feel free to subscribe to \u003ca rel=\"noreferrer noopener\" aria-label=\"RSS feed (opens in a new tab)\" href=\"https://augmentedcode.io/blog/feed/\" target=\"_blank\"\u003eRSS feed\u003c/a\u003e. Thank you for reading.\u003c/p\u003e\n\n\n\n\n\n\n\n\n\n\t\t\t\n\t\t\t\n\t\t\u003c/div\u003e\n\n\t\u003cdiv\u003e\n\n\t\t\t\u003cul\u003e\n\n\t\t\t\t\t\t\t\t\t\u003cli\u003e\n\t\t\t\t\t\t\u003cspan\u003e\n\t\t\t\t\t\t\t\u003cspan\u003e\n\t\t\t\t\t\t\t\tTags\t\t\t\t\t\t\t\u003c/span\u003e\n\t\t\t\t\t\t\t\t\t\t\t\t\t\u003c/span\u003e\n\t\t\t\t\t\t\u003cspan\u003e\n\t\t\t\t\t\t\t\u003ca href=\"https://augmentedcode.io/tag/ios/\" rel=\"tag\"\u003eiOS\u003c/a\u003e, \u003ca href=\"https://augmentedcode.io/tag/onscrollphasechange/\" rel=\"tag\"\u003eonScrollPhaseChange\u003c/a\u003e, \u003ca href=\"https://augmentedcode.io/tag/scrollgeometry/\" rel=\"tag\"\u003eScrollGeometry\u003c/a\u003e, \u003ca href=\"https://augmentedcode.io/tag/scrollphase/\" rel=\"tag\"\u003eScrollPhase\u003c/a\u003e, \u003ca href=\"https://augmentedcode.io/tag/scrollphasechangecontext/\" rel=\"tag\"\u003eScrollPhaseChangeContext\u003c/a\u003e, \u003ca href=\"https://augmentedcode.io/tag/scrollview/\" rel=\"tag\"\u003eScrollView\u003c/a\u003e, \u003ca href=\"https://augmentedcode.io/tag/swift/\" rel=\"tag\"\u003eSwift\u003c/a\u003e, \u003ca href=\"https://augmentedcode.io/tag/swiftui/\" rel=\"tag\"\u003eSwiftUI\u003c/a\u003e\t\t\t\t\t\t\u003c/span\u003e\n\t\t\t\t\t\u003c/li\u003e\n\t\t\t\t\t\n\t\t\t\u003c/ul\u003e\n\n\t\t\u003c/div\u003e\n\n\t\n\t\n\n\t\n\u003c/article\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": "2024-07-15T15:00:00Z",
  "modifiedTime": "2024-07-14T11:36:55Z"
}
