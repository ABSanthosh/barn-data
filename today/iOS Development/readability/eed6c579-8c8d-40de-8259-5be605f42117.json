{
  "id": "eed6c579-8c8d-40de-8259-5be605f42117",
  "title": "Wrapping async-await with a completion handler in Swift",
  "link": "https://augmentedcode.io/2024/09/09/wrapping-async-await-with-a-completion-handler-in-swift/",
  "description": "It is not often when we need to wrap an async function with a completion handler. Typically, the reverse is what happens. This need can happen in codebases where the public interface can’t change just right now, but internally it is moving towards async-await functions. Let’s jump in and see how to wrap an async […]",
  "author": "Toomas Vahter",
  "published": "Mon, 09 Sep 2024 15:00:00 +0000",
  "source": "https://augmentedcode.io/feed/",
  "categories": [
    "Swift",
    "async",
    "iOS"
  ],
  "byline": "",
  "length": 8434,
  "excerpt": "It is not often when we need to wrap an async function with a completion handler. Typically, the reverse is what happens. This need can happen in codebases where the public interface can’t ch…",
  "siteName": "Augmented Code",
  "favicon": "https://augmentedcode.io/wp-content/uploads/2017/11/site-icon.png?w=192",
  "text": "It is not often when we need to wrap an async function with a completion handler. Typically, the reverse is what happens. This need can happen in codebases where the public interface can’t change just right now, but internally it is moving towards async-await functions. Let’s jump in and see how to wrap an async function, an async throwing function and an async throwing function what returns a value. To illustrate how to use it, we’ll see an example of how a PhotoEffectApplier type has a public interface consisting of completion handler based functions and how it internally uses PhotoProcessor type what only has async functions. The end result looks like this: This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters struct PhotoProcessor { func process(_ photo: Photo) async throws -\u003e Photo { // … return Photo(name: UUID().uuidString) } func setConfiguration(_ configuration: Configuration) async throws { // … } func cancel() async { // … } } public final class PhotoEffectApplier { private let processor = PhotoProcessor() public func apply(effect: PhotoEffect, to photo: Photo, completion: @escaping (Result\u003cPhoto, Error\u003e) -\u003e Void) { Task(operation: { try await self.processor.process(photo) }, completion: completion) } public func setConfiguration(_ configuration: Configuration, completion: @escaping (Error?) -\u003e Void) { Task(operation: { try await self.processor.setConfiguration(configuration) }, completion: completion) } public func cancel(completion: @escaping (Error?) -\u003e Void) { Task(operation: { await self.processor.cancel() }, completion: completion) } } In this example, we have all the interested function types covered: async, async throwing and async throwing with a return type. Great, but let’s have a look at these Task initializers what make this happen. The core idea is to create a Task, run an operation, and then make a completion handler callback. Since most of the time we need to run the completion on the main thread, then we have a queue argument with the default queue set to the main thread. This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters extension Task { @discardableResult init\u003cT\u003e( priority: TaskPriority? = nil, operation: @escaping () async throws -\u003e T, queue: DispatchQueue = .main, completion: @escaping (Result\u003cT, Failure\u003e) -\u003e Void ) where Success == Void, Failure == any Error { self.init(priority: priority) { do { let value = try await operation() queue.async { completion(.success(value)) } } catch { queue.async { completion(.failure(error)) } } } } } This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters extension Task { @discardableResult init( priority: TaskPriority? = nil, operation: @escaping () async throws -\u003e Void, queue: DispatchQueue = .main, completion: @escaping (Error?) -\u003e Void ) where Success == Void, Failure == any Error { self.init(priority: priority) { do { try await operation() queue.async { completion(nil) } } catch { queue.async { completion(error) } } } } } This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters extension Task { @discardableResult init( priority: TaskPriority? = nil, operation: @escaping () async -\u003e Void, queue: DispatchQueue = .main, completion: @escaping () -\u003e Void ) where Success == Void, Failure == Never { self.init(priority: priority) { await operation() queue.async { completion() } } } } If this was helpful, please let me know on Mastodon@toomasvahter or Twitter @toomasvahter. Feel free to subscribe to RSS feed. Thank you for reading. Tags async, iOS, Swift",
  "image": "https://augmentedcode.io/wp-content/uploads/2017/11/site-icon.png?w=200",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"site-content\" role=\"main\"\u003e\n\n\t\n\u003carticle id=\"post-3762\"\u003e\n\n\t\n\n\n\t\u003cdiv\u003e\n\n\t\t\t\n\u003cp\u003eIt is not often when we need to wrap an async function with a completion handler. Typically, the reverse is what happens. This need can happen in codebases where the public interface can’t change just right now, but internally it is moving towards async-await functions. Let’s jump in and see how to wrap an async function, an async throwing function and an async throwing function what returns a value.\u003c/p\u003e\n\n\n\n\u003cp\u003eTo illustrate how to use it, we’ll see an example of how a \u003ccode\u003ePhotoEffectApplier\u003c/code\u003e type has a public interface consisting of completion handler based functions and how it internally uses \u003ccode\u003ePhotoProcessor\u003c/code\u003e type what only has async functions. The end result looks like this:\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cdiv itemprop=\"text\" id=\"gist132538093\" translate=\"no\" data-color-mode=\"light\" data-light-theme=\"light\"\u003e\n\n  \u003ctemplate\u003e\n  \u003cdiv data-view-component=\"true\"\u003e\n  \n    \u003cp\u003e\u003cspan\u003e\n      This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters.\n      \u003ca href=\"https://github.co/hiddenchars\" target=\"_blank\"\u003eLearn more about bidirectional Unicode characters\u003c/a\u003e\n    \u003c/span\u003e\u003c/p\u003e\n\u003c/div\u003e\u003c/template\u003e\n\u003ctemplate\u003e\n  \u003cspan aria-label=\"This line has hidden Unicode characters\" data-view-component=\"true\"\u003e\n    \n\u003c/span\u003e\u003c/template\u003e\n\n  \u003ctable data-hpc=\"\" data-tab-size=\"8\" data-paste-markdown-skip=\"\" data-tagsearch-lang=\"Swift\" data-tagsearch-path=\"PhotoEffectApplier.swift\"\u003e\n        \u003ctbody\u003e\u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L1\" data-line-number=\"1\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC1\"\u003estruct PhotoProcessor {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L2\" data-line-number=\"2\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC2\"\u003e  func process(_ photo: Photo) async throws -\u0026gt; Photo {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L3\" data-line-number=\"3\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC3\"\u003e    // …\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L4\" data-line-number=\"4\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC4\"\u003e    return Photo(name: UUID().uuidString)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L5\" data-line-number=\"5\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC5\"\u003e  }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L6\" data-line-number=\"6\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC6\"\u003e  \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L7\" data-line-number=\"7\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC7\"\u003e  func setConfiguration(_ configuration: Configuration) async throws {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L8\" data-line-number=\"8\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC8\"\u003e    // …\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L9\" data-line-number=\"9\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC9\"\u003e  }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L10\" data-line-number=\"10\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC10\"\u003e  \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L11\" data-line-number=\"11\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC11\"\u003e  func cancel() async {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L12\" data-line-number=\"12\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC12\"\u003e    // …\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L13\" data-line-number=\"13\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC13\"\u003e  }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L14\" data-line-number=\"14\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC14\"\u003e}\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L15\" data-line-number=\"15\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC15\"\u003e\n\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L16\" data-line-number=\"16\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC16\"\u003epublic final class PhotoEffectApplier {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L17\" data-line-number=\"17\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC17\"\u003e  private let processor = PhotoProcessor()\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L18\" data-line-number=\"18\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC18\"\u003e  \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L19\" data-line-number=\"19\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC19\"\u003e  public func apply(effect: PhotoEffect, to photo: Photo, completion: @escaping (Result\u0026lt;Photo, Error\u0026gt;) -\u0026gt; Void) {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L20\" data-line-number=\"20\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC20\"\u003e    Task(operation: { try await self.processor.process(photo) }, completion: completion)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L21\" data-line-number=\"21\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC21\"\u003e  }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L22\" data-line-number=\"22\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC22\"\u003e  \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L23\" data-line-number=\"23\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC23\"\u003e  public func setConfiguration(_ configuration: Configuration, completion: @escaping (Error?) -\u0026gt; Void) {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L24\" data-line-number=\"24\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC24\"\u003e    Task(operation: { try await self.processor.setConfiguration(configuration) }, completion: completion)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L25\" data-line-number=\"25\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC25\"\u003e  }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L26\" data-line-number=\"26\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC26\"\u003e  \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L27\" data-line-number=\"27\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC27\"\u003e  public func cancel(completion: @escaping (Error?) -\u0026gt; Void) {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L28\" data-line-number=\"28\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC28\"\u003e    Task(operation: { await self.processor.cancel() }, completion: completion)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L29\" data-line-number=\"29\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC29\"\u003e  }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-L30\" data-line-number=\"30\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-photoeffectapplier-swift-LC30\"\u003e}\u003c/td\u003e\n        \u003c/tr\u003e\n  \u003c/tbody\u003e\u003c/table\u003e\n\u003c/div\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eIn this example, we have all the interested function types covered: async, async throwing and async throwing with a return type. Great, but let’s have a look at these Task initializers what make this happen. The core idea is to create a Task, run an operation, and then make a completion handler callback. Since most of the time we need to run the completion on the main thread, then we have a queue argument with the default queue set to the main thread.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cdiv itemprop=\"text\" id=\"gist132538169\" translate=\"no\" data-color-mode=\"light\" data-light-theme=\"light\"\u003e\n\n  \u003ctemplate\u003e\n  \u003cdiv data-view-component=\"true\"\u003e\n  \n    \u003cp\u003e\u003cspan\u003e\n      This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters.\n      \u003ca href=\"https://github.co/hiddenchars\" target=\"_blank\"\u003eLearn more about bidirectional Unicode characters\u003c/a\u003e\n    \u003c/span\u003e\u003c/p\u003e\n\u003c/div\u003e\u003c/template\u003e\n\u003ctemplate\u003e\n  \u003cspan aria-label=\"This line has hidden Unicode characters\" data-view-component=\"true\"\u003e\n    \n\u003c/span\u003e\u003c/template\u003e\n\n  \u003ctable data-hpc=\"\" data-tab-size=\"8\" data-paste-markdown-skip=\"\" data-tagsearch-lang=\"Swift\" data-tagsearch-path=\"AsyncThrowsValue.swift\"\u003e\n        \u003ctbody\u003e\u003ctr\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-L1\" data-line-number=\"1\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-LC1\"\u003eextension Task {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-L2\" data-line-number=\"2\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-LC2\"\u003e  @discardableResult\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-L3\" data-line-number=\"3\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-LC3\"\u003e  init\u0026lt;T\u0026gt;(\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-L4\" data-line-number=\"4\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-LC4\"\u003e    priority: TaskPriority? = nil,\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-L5\" data-line-number=\"5\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-LC5\"\u003e    operation: @escaping () async throws -\u0026gt; T,\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-L6\" data-line-number=\"6\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-LC6\"\u003e    queue: DispatchQueue = .main,\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-L7\" data-line-number=\"7\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-LC7\"\u003e    completion: @escaping (Result\u0026lt;T, Failure\u0026gt;) -\u0026gt; Void\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-L8\" data-line-number=\"8\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-LC8\"\u003e  ) where Success == Void, Failure == any Error {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-L9\" data-line-number=\"9\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-LC9\"\u003e    self.init(priority: priority) {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-L10\" data-line-number=\"10\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-LC10\"\u003e      do {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-L11\" data-line-number=\"11\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-LC11\"\u003e        let value = try await operation()\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-L12\" data-line-number=\"12\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-LC12\"\u003e        queue.async {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-L13\" data-line-number=\"13\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-LC13\"\u003e          completion(.success(value))\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-L14\" data-line-number=\"14\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-LC14\"\u003e        }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-L15\" data-line-number=\"15\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-LC15\"\u003e      } catch {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-L16\" data-line-number=\"16\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-LC16\"\u003e        queue.async {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-L17\" data-line-number=\"17\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-LC17\"\u003e          completion(.failure(error))\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-L18\" data-line-number=\"18\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-LC18\"\u003e        }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-L19\" data-line-number=\"19\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-LC19\"\u003e      }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-L20\" data-line-number=\"20\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-LC20\"\u003e    }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-L21\" data-line-number=\"21\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-LC21\"\u003e  }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-L22\" data-line-number=\"22\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrowsvalue-swift-LC22\"\u003e}\u003c/td\u003e\n        \u003c/tr\u003e\n  \u003c/tbody\u003e\u003c/table\u003e\n\u003c/div\u003e\u003c/figure\u003e\n\n\n\n\u003cfigure\u003e\u003cdiv itemprop=\"text\" id=\"gist132538171\" translate=\"no\" data-color-mode=\"light\" data-light-theme=\"light\"\u003e\n\n  \u003ctemplate\u003e\n  \u003cdiv data-view-component=\"true\"\u003e\n  \n    \u003cp\u003e\u003cspan\u003e\n      This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters.\n      \u003ca href=\"https://github.co/hiddenchars\" target=\"_blank\"\u003eLearn more about bidirectional Unicode characters\u003c/a\u003e\n    \u003c/span\u003e\u003c/p\u003e\n\u003c/div\u003e\u003c/template\u003e\n\u003ctemplate\u003e\n  \u003cspan aria-label=\"This line has hidden Unicode characters\" data-view-component=\"true\"\u003e\n    \n\u003c/span\u003e\u003c/template\u003e\n\n  \u003ctable data-hpc=\"\" data-tab-size=\"8\" data-paste-markdown-skip=\"\" data-tagsearch-lang=\"Swift\" data-tagsearch-path=\"AsyncThrows.swift\"\u003e\n        \u003ctbody\u003e\u003ctr\u003e\n          \u003ctd id=\"file-asyncthrows-swift-L1\" data-line-number=\"1\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrows-swift-LC1\"\u003eextension Task {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrows-swift-L2\" data-line-number=\"2\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrows-swift-LC2\"\u003e  @discardableResult\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrows-swift-L3\" data-line-number=\"3\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrows-swift-LC3\"\u003e  init(\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrows-swift-L4\" data-line-number=\"4\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrows-swift-LC4\"\u003e    priority: TaskPriority? = nil,\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrows-swift-L5\" data-line-number=\"5\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrows-swift-LC5\"\u003e    operation: @escaping () async throws -\u0026gt; Void,\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrows-swift-L6\" data-line-number=\"6\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrows-swift-LC6\"\u003e    queue: DispatchQueue = .main,\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrows-swift-L7\" data-line-number=\"7\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrows-swift-LC7\"\u003e    completion: @escaping (Error?) -\u0026gt; Void\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrows-swift-L8\" data-line-number=\"8\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrows-swift-LC8\"\u003e  ) where Success == Void, Failure == any Error {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrows-swift-L9\" data-line-number=\"9\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrows-swift-LC9\"\u003e    self.init(priority: priority) {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrows-swift-L10\" data-line-number=\"10\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrows-swift-LC10\"\u003e      do {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrows-swift-L11\" data-line-number=\"11\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrows-swift-LC11\"\u003e        try await operation()\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrows-swift-L12\" data-line-number=\"12\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrows-swift-LC12\"\u003e        queue.async {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrows-swift-L13\" data-line-number=\"13\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrows-swift-LC13\"\u003e          completion(nil)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrows-swift-L14\" data-line-number=\"14\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrows-swift-LC14\"\u003e        }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrows-swift-L15\" data-line-number=\"15\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrows-swift-LC15\"\u003e      } catch {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrows-swift-L16\" data-line-number=\"16\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrows-swift-LC16\"\u003e        queue.async {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrows-swift-L17\" data-line-number=\"17\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrows-swift-LC17\"\u003e          completion(error)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrows-swift-L18\" data-line-number=\"18\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrows-swift-LC18\"\u003e        }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrows-swift-L19\" data-line-number=\"19\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrows-swift-LC19\"\u003e      }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrows-swift-L20\" data-line-number=\"20\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrows-swift-LC20\"\u003e    }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrows-swift-L21\" data-line-number=\"21\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrows-swift-LC21\"\u003e  }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-asyncthrows-swift-L22\" data-line-number=\"22\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-asyncthrows-swift-LC22\"\u003e}\u003c/td\u003e\n        \u003c/tr\u003e\n  \u003c/tbody\u003e\u003c/table\u003e\n\u003c/div\u003e\u003c/figure\u003e\n\n\n\n\u003cfigure\u003e\u003cdiv itemprop=\"text\" id=\"gist132538179\" translate=\"no\" data-color-mode=\"light\" data-light-theme=\"light\"\u003e\n\n  \u003ctemplate\u003e\n  \u003cdiv data-view-component=\"true\"\u003e\n  \n    \u003cp\u003e\u003cspan\u003e\n      This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters.\n      \u003ca href=\"https://github.co/hiddenchars\" target=\"_blank\"\u003eLearn more about bidirectional Unicode characters\u003c/a\u003e\n    \u003c/span\u003e\u003c/p\u003e\n\u003c/div\u003e\u003c/template\u003e\n\u003ctemplate\u003e\n  \u003cspan aria-label=\"This line has hidden Unicode characters\" data-view-component=\"true\"\u003e\n    \n\u003c/span\u003e\u003c/template\u003e\n\n  \u003ctable data-hpc=\"\" data-tab-size=\"8\" data-paste-markdown-skip=\"\" data-tagsearch-lang=\"Swift\" data-tagsearch-path=\"Async.swift\"\u003e\n        \u003ctbody\u003e\u003ctr\u003e\n          \u003ctd id=\"file-async-swift-L1\" data-line-number=\"1\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-async-swift-LC1\"\u003eextension Task {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-async-swift-L2\" data-line-number=\"2\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-async-swift-LC2\"\u003e  @discardableResult\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-async-swift-L3\" data-line-number=\"3\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-async-swift-LC3\"\u003e  init(\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-async-swift-L4\" data-line-number=\"4\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-async-swift-LC4\"\u003e    priority: TaskPriority? = nil,\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-async-swift-L5\" data-line-number=\"5\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-async-swift-LC5\"\u003e    operation: @escaping () async -\u0026gt; Void,\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-async-swift-L6\" data-line-number=\"6\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-async-swift-LC6\"\u003e    queue: DispatchQueue = .main,\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-async-swift-L7\" data-line-number=\"7\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-async-swift-LC7\"\u003e    completion: @escaping () -\u0026gt; Void\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-async-swift-L8\" data-line-number=\"8\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-async-swift-LC8\"\u003e  ) where Success == Void, Failure == Never {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-async-swift-L9\" data-line-number=\"9\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-async-swift-LC9\"\u003e    self.init(priority: priority) {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-async-swift-L10\" data-line-number=\"10\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-async-swift-LC10\"\u003e      await operation()\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-async-swift-L11\" data-line-number=\"11\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-async-swift-LC11\"\u003e      queue.async {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-async-swift-L12\" data-line-number=\"12\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-async-swift-LC12\"\u003e        completion()\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-async-swift-L13\" data-line-number=\"13\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-async-swift-LC13\"\u003e      }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-async-swift-L14\" data-line-number=\"14\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-async-swift-LC14\"\u003e    }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-async-swift-L15\" data-line-number=\"15\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-async-swift-LC15\"\u003e  }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-async-swift-L16\" data-line-number=\"16\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-async-swift-LC16\"\u003e}\u003c/td\u003e\n        \u003c/tr\u003e\n  \u003c/tbody\u003e\u003c/table\u003e\n\u003c/div\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eIf this was helpful, please let me know on \u003ca href=\"https://mastodon.social/@toomasvahter\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eMastodon@toomasvahter\u003c/a\u003e or \u003ca rel=\"noreferrer noopener\" href=\"https://twitter.com/toomasvahter\" target=\"_blank\"\u003eTwitter @toomasvahter\u003c/a\u003e. Feel free to subscribe to \u003ca rel=\"noreferrer noopener\" aria-label=\"RSS feed (opens in a new tab)\" href=\"https://augmentedcode.io/blog/feed/\" target=\"_blank\"\u003eRSS feed\u003c/a\u003e. Thank you for reading.\u003c/p\u003e\n\n\n\n\n\n\n\n\n\n\t\t\t\n\t\t\t\n\t\t\u003c/div\u003e\n\n\t\u003cdiv\u003e\n\n\t\t\t\u003cul\u003e\n\n\t\t\t\t\t\t\t\t\t\u003cli\u003e\n\t\t\t\t\t\t\u003cspan\u003e\n\t\t\t\t\t\t\t\u003cspan\u003e\n\t\t\t\t\t\t\t\tTags\t\t\t\t\t\t\t\u003c/span\u003e\n\t\t\t\t\t\t\t\t\t\t\t\t\t\u003c/span\u003e\n\t\t\t\t\t\t\u003cspan\u003e\n\t\t\t\t\t\t\t\u003ca href=\"https://augmentedcode.io/tag/async/\" rel=\"tag\"\u003easync\u003c/a\u003e, \u003ca href=\"https://augmentedcode.io/tag/ios/\" rel=\"tag\"\u003eiOS\u003c/a\u003e, \u003ca href=\"https://augmentedcode.io/tag/swift/\" rel=\"tag\"\u003eSwift\u003c/a\u003e\t\t\t\t\t\t\u003c/span\u003e\n\t\t\t\t\t\u003c/li\u003e\n\t\t\t\t\t\n\t\t\t\u003c/ul\u003e\n\n\t\t\u003c/div\u003e\n\n\t\n\t\n\n\t\n\u003c/article\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "9 min read",
  "publishedTime": "2024-09-09T15:00:00Z",
  "modifiedTime": "2024-09-25T06:34:19Z"
}
