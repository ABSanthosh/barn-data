{
  "id": "3fdd142d-b783-42fc-8340-f7fc39643b2e",
  "title": "Quick Win - Image Descriptions",
  "link": "https://mobilea11y.com/quick-wins/image-descriptions/",
  "description": "Images are a major part of our apps. They add meaning and interest, they give your app character and context. The adage is that a picture is worth a thousand words. But if you can’t see the image clearly, how do you know what those words are? If you aren’t providing image descriptions in your app many of your users will be missing out on the experience you’ve crafted. The result can be an app thats missing that spark an character, or worse an app thats just meaningless and unusable.",
  "author": "",
  "published": "Tue, 19 Jan 2021 07:30:56 +0000",
  "source": "https://mobilea11y.com/index.xml",
  "categories": null,
  "byline": "",
  "length": 1524,
  "excerpt": "Images are a major part of our apps. They add meaning and interest, they give your app character and context. The adage is that a picture is worth a thousand words. But if you can’t see the image clearly, how do you know what those words are?",
  "siteName": "",
  "favicon": "https://mobilea11y.com/apple-touch-icon.png",
  "text": "Images are a major part of our apps. They add meaning and interest, they give your app character and context. The adage is that a picture is worth a thousand words. But if you can’t see the image clearly, how do you know what those words are? If you aren’t providing image descriptions in your app many of your users will be missing out on the experience you’ve crafted. The result can be an app thats missing that spark an character, or worse an app thats just meaningless and unusable. Fortunately adding image descriptions is simple. Choosing to add descriptions There are a few rules around adding image descriptions. In short - keep them meaningful and brief. Don’t use the words image or photo, just give a quick summary of what is in the image, or the meaning of the image. If the image is decorative, such as an icon, you don’t need to add a description. You’ll find some more tips in my guide on Writing Great iOS Accessibility Labels iOS UIKit // myImageView is a reference to a UIImageView in your interface myImageView.accessibilityLabel = \"A tree\" SwiftUI Image(\"tree\") .accessibility(label: \"A tree\") Android XML \u003cImageView ... android:contentDescription=\"@string/tree_content_description\" /\u003e Kotlin // myImageView is a reference to an ImageView in your interface myImageView.contentDescription = getString(R.string.tree_content_description) Java // myImageView is a reference to an ImageView in your interface myImageView.setContentDescription(getResources().getString(R.string.tree_content_description));",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"main\"\u003e\n    \n    \u003cp\u003eImages are a major part of our apps. They add meaning and interest, they give your app character and context. The adage is that a picture is worth a thousand words. But if you can’t see the image clearly, how do you know what those words are?\u003c/p\u003e\n\u003cp\u003eIf you aren’t providing image descriptions in your app many of your users will be missing out on the experience you’ve crafted. The result can be an app thats missing that spark an character, or worse an app thats just meaningless and unusable. Fortunately adding image descriptions is simple.\u003c/p\u003e\n\u003ch2 id=\"choosing-to-add-descriptions\"\u003eChoosing to add descriptions\u003c/h2\u003e\n\u003cp\u003eThere are a few rules around adding image descriptions. In short - keep them meaningful and brief. Don’t use the words image or photo, just give a quick summary of what is in the image, or the meaning of the image. If the image is decorative, such as an icon, you don’t need to add a description.\nYou’ll find some more tips in my guide on \u003ca href=\"https://mobilea11y.com/blog/writing-great-labels/\"\u003eWriting Great iOS Accessibility Labels\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"ios\"\u003eiOS\u003c/h2\u003e\n\u003ch3 id=\"uikit\"\u003eUIKit\u003c/h3\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e// myImageView is a reference to a UIImageView in your interface\nmyImageView.accessibilityLabel = \u0026#34;A tree\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"swiftui\"\u003eSwiftUI\u003c/h3\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eImage(\u0026#34;tree\u0026#34;)\n    .accessibility(label: \u0026#34;A tree\u0026#34;)\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"android\"\u003eAndroid\u003c/h2\u003e\n\u003ch3 id=\"xml\"\u003eXML\u003c/h3\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026lt;ImageView ...\nandroid:contentDescription=\u0026#34;@string/tree_content_description\u0026#34; /\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"kotlin\"\u003eKotlin\u003c/h3\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e// myImageView is a reference to an ImageView in your interface\nmyImageView.contentDescription = getString(R.string.tree_content_description)\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"java\"\u003eJava\u003c/h3\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e// myImageView is a reference to an ImageView in your interface\nmyImageView.setContentDescription(getResources().getString(R.string.tree_content_description));\n\u003c/code\u003e\u003c/pre\u003e\n    \n\n\n  \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": null,
  "modifiedTime": null
}
