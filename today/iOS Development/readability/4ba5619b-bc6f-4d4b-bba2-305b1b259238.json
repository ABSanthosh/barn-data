{
  "id": "4ba5619b-bc6f-4d4b-bba2-305b1b259238",
  "title": "Break the Build On Purpose",
  "link": "https://tyler.io/2024/02/break-the-build-on-purpose/",
  "description": "Isaac Halvorson asked: \"What strategies do you use for quickly getting back into the flow and picking up where you left off?\" Here's a trick I started doing years ago.",
  "author": "Tyler",
  "published": "Tue, 06 Feb 2024 17:49:32 +0000",
  "source": "https://tyler.io/feed/",
  "categories": [
    "Uncategorized"
  ],
  "byline": "",
  "length": 1340,
  "excerpt": "Isaac Halvorson asked today",
  "siteName": "",
  "favicon": "",
  "text": "Isaac Halvorson asked today I have a few hobby programming projects that I like to work on, but I’m finding it increasingly difficult to make substantial progress on them. My free time is limited, and also comes in short, unpredictable bursts, making it hard to maintain a steady workflow. #ParentLyfe For those who have faced similar challenges: What strategies do you use for quickly getting back into the flow and picking up where you left off? I’m in a similar situation. Here’s something I started doing years ago: When you’re done working, leave a note in your source code that tells you the very next step or action you need to take. But I don’t mean a code comment. I mean, write a literal paragraph of prose right in the source code where you need to do the thing. The next time you come back to the project – later that night, next week, or next year – you won’t be able to miss the note to Future You because the software won’t compile until you read and remove it. Bonus points if you check-in that breaking change to source control. Here’s a current screenshot from TextBuddy of a note I left myself over the weekend. Follow-up from Travis F W: Good trick, but how do you squeeze more progress out of less time? You can’t. But, you can have patience and trust that small incremental improvements will win in the long term.",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003carticle id=\"post-2302\"\u003e\n\n\u003cdiv\u003e\n\u003cp\u003e\u003ca href=\"https://social.lol/@hisaac@allamaraine.io/111885697026893227\"\u003eIsaac Halvorson asked today\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI have a few hobby programming projects that I like to work on, but I’m finding it increasingly difficult to make substantial progress on them. My free time is limited, and also comes in short, unpredictable bursts, making it hard to maintain a steady workflow. #ParentLyfe\u003c/p\u003e\n\u003cp\u003eFor those who have faced similar challenges: What strategies do you use for quickly getting back into the flow and picking up where you left off?\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eI’m in a similar situation. \u003ca href=\"https://social.lol/@tylerhall/111885720225890414\"\u003eHere’s something I started doing years ago\u003c/a\u003e:\u003c/p\u003e\n\u003cp\u003eWhen you’re done working, leave a note in your source code that tells you the very next step or action you need to take.\u003c/p\u003e\n\u003cp\u003eBut I don’t mean a code comment. I mean, write a literal paragraph of prose right in the source code where you need to do the thing.\u003c/p\u003e\n\u003cp\u003eThe next time you come back to the project – later that night, next week, or next year – you won’t be able to miss the note to Future You because the software won’t compile until you read and remove it.\u003c/p\u003e\n\u003cp\u003eBonus points if you check-in that breaking change to source control.\u003c/p\u003e\n\u003cp\u003eHere’s a current screenshot from TextBuddy of a note I left myself over the weekend.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg fetchpriority=\"high\" decoding=\"async\" width=\"1024\" height=\"626\" src=\"https://cdn.tyler.io/wp-content/uploads/2024/02/2024-02-06-break-build-comment-1024x626.png\" alt=\"\" srcset=\"https://cdn.tyler.io/wp-content/uploads/2024/02/2024-02-06-break-build-comment-1024x626.png 1024w, https://cdn.tyler.io/wp-content/uploads/2024/02/2024-02-06-break-build-comment-300x183.png 300w, https://cdn.tyler.io/wp-content/uploads/2024/02/2024-02-06-break-build-comment-768x469.png 768w, https://cdn.tyler.io/wp-content/uploads/2024/02/2024-02-06-break-build-comment-576x352.png 576w, https://cdn.tyler.io/wp-content/uploads/2024/02/2024-02-06-break-build-comment.png 1343w\" sizes=\"(max-width: 1024px) 100vw, 1024px\"/\u003e\u003c/figure\u003e\n\u003cp\u003e\u003ca href=\"https://fosstodon.org/@travisfw/111885793150912552\"\u003eFollow-up from Travis F W\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eGood trick, but how do you squeeze more progress out of less time?\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003ca href=\"https://social.lol/@tylerhall/111885805745578201\"\u003eYou can’t.\u003c/a\u003e But, you can have patience and trust that small incremental improvements will win in the long term.\u003c/p\u003e\n\u003c/div\u003e\n\n\u003c/article\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": null,
  "modifiedTime": null
}
