{
  "id": "a48a0395-9541-4a91-845f-38eb70e0812c",
  "title": "Aligning views in different stacks in SwiftUI",
  "link": "https://augmentedcode.io/2024/06/03/aligning-views-in-different-stacks-in-swiftui/",
  "description": "While working on a SwiftUI view, I needed a way for aligning views in different stacks in a way that they are centred. Most of the time I can get away using default alignment values, what HStack and VStack provide. In that case I had two views in different stacks and I needed a way […]",
  "author": "Toomas Vahter",
  "published": "Mon, 03 Jun 2024 15:00:00 +0000",
  "source": "https://augmentedcode.io/feed/",
  "categories": [
    "Swift",
    "SwiftUI",
    "alignmentGuide",
    "iOS",
    "VerticalAlignment"
  ],
  "byline": "",
  "length": 5176,
  "excerpt": "While working on a SwiftUI view, I needed a way for aligning views in different stacks in a way that they are centred. Most of the time I can get away using default alignment values, what HStack an…",
  "siteName": "Augmented Code",
  "favicon": "https://augmentedcode.io/wp-content/uploads/2017/11/site-icon.png?w=192",
  "text": "While working on a SwiftUI view, I needed a way for aligning views in different stacks in a way that they are centred. Most of the time I can get away using default alignment values, what HStack and VStack provide. In that case I had two views in different stacks and I needed a way to centre align these views. Here is a view which has three labels in one VStack and 2 texts with an image in another VStack. This is just an example view for illustrating the real world case. The question is, how to align the top text “Hello, world!” with the image so that both are centre aligned. The answer is to use alignment guides. If combining VStacks and HStacks does not work out, then we can take one step further and define a custom alignment for our views. This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters private extension VerticalAlignment { private struct ImageTextAlignment: AlignmentID { static func defaultValue(in context: ViewDimensions) -\u003e CGFloat { context[VerticalAlignment.center] } } static let centeredImageText = VerticalAlignment(ImageTextAlignment.self) } That is all what it takes to create a custom vertical alignment. I like to keep custom alignments private, therefore the extension is marked as private. The next step is hooking it up. We need common ancestor HStack to use the new alignment and the views, which need to be aligned, must use the alignment guide. Here is all the code which illustrates the case. This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters struct ContentView: View { var body: some View { // Parent stack using the custom alignment HStack(alignment: .centeredImageText) { VStack(alignment: .leading) { Text(\"Hello, world!\") .font(.largeTitle) // Guide for text in the first VStack .alignmentGuide(.centeredImageText, computeValue: { dimension in dimension[.centeredImageText] }) Text(\"Hi hi!\") .font(.callout) .foregroundStyle(.secondary) Text(\"Another line\") .font(.callout) .foregroundStyle(.tertiary) } VStack(alignment: .leading) { Text(\"Another label\") .font(.system(.callout)) Text(\"Another label\") .font(.system(.callout)) Image(systemName: \"globe\") .imageScale(.large) .foregroundStyle(.tint) // Guide for image in the second VStack .alignmentGuide(.centeredImageText, computeValue: { dimension in dimension[.centeredImageText] }) } } .padding() } } If this was helpful, please let me know on Mastodon@toomasvahter or Twitter @toomasvahter. Feel free to subscribe to RSS feed. Thank you for reading. Tags alignmentGuide, iOS, Swift, SwiftUI, VerticalAlignment",
  "image": "https://augmentedcode.io/wp-content/uploads/2024/06/2024-06-03.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"site-content\" role=\"main\"\u003e\n\n\t\n\u003carticle id=\"post-3686\"\u003e\n\n\t\n\n\n\t\u003cdiv\u003e\n\n\t\t\t\n\u003cp\u003eWhile working on a SwiftUI view, I needed a way for aligning views in different stacks in a way that they are centred. Most of the time I can get away using default alignment values, what \u003ca href=\"https://developer.apple.com/documentation/swiftui/hstack\"\u003eHStack\u003c/a\u003e and \u003ca href=\"https://developer.apple.com/documentation/swiftui/vstack\"\u003eVStack\u003c/a\u003e provide. In that case I had two views in different stacks and I needed a way to centre align these views. Here is a view which has three labels in one VStack and 2 texts with an image in another VStack. This is just an example view for illustrating the real world case. The question is, how to align the top text “Hello, world!” with the image so that both are centre aligned.\u003c/p\u003e\n\n\n\u003cdiv\u003e\n\u003cfigure\u003e\u003cimg data-attachment-id=\"3691\" data-permalink=\"https://augmentedcode.io/2024/06/03/aligning-views-in-different-stacks-in-swiftui/2024-06-03/\" data-orig-file=\"https://augmentedcode.io/wp-content/uploads/2024/06/2024-06-03.png\" data-orig-size=\"718,354\" data-comments-opened=\"0\" data-image-meta=\"{\u0026#34;aperture\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;credit\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;camera\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;caption\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;created_timestamp\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;copyright\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;focal_length\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;iso\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;shutter_speed\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;title\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;orientation\u0026#34;:\u0026#34;0\u0026#34;}\" data-image-title=\"2024-06-03\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://augmentedcode.io/wp-content/uploads/2024/06/2024-06-03.png?w=300\" data-large-file=\"https://augmentedcode.io/wp-content/uploads/2024/06/2024-06-03.png?w=718\" tabindex=\"0\" role=\"button\" width=\"718\" height=\"354\" src=\"https://augmentedcode.io/wp-content/uploads/2024/06/2024-06-03.png?w=718\" alt=\"\"/\u003e\u003c/figure\u003e\u003c/div\u003e\n\n\n\u003cp\u003eThe answer is to use alignment guides. If combining VStacks and HStacks does not work out, then we can take one step further and define a custom alignment for our views.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cdiv itemprop=\"text\" id=\"gist130592170\" translate=\"no\" data-color-mode=\"light\" data-light-theme=\"light\"\u003e\n\n  \u003ctemplate\u003e\n  \u003cdiv data-view-component=\"true\"\u003e\n  \n    \u003cp\u003e\u003cspan\u003e\n      This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters.\n      \u003ca href=\"https://github.co/hiddenchars\" target=\"_blank\"\u003eLearn more about bidirectional Unicode characters\u003c/a\u003e\n    \u003c/span\u003e\u003c/p\u003e\n\u003c/div\u003e\u003c/template\u003e\n\u003ctemplate\u003e\n  \u003cspan aria-label=\"This line has hidden Unicode characters\" data-view-component=\"true\"\u003e\n    \n\u003c/span\u003e\u003c/template\u003e\n\n  \u003ctable data-hpc=\"\" data-tab-size=\"8\" data-paste-markdown-skip=\"\" data-tagsearch-lang=\"Swift\" data-tagsearch-path=\"View.swift\"\u003e\n        \u003ctbody\u003e\u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L1\" data-line-number=\"1\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC1\"\u003eprivate extension VerticalAlignment {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L2\" data-line-number=\"2\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC2\"\u003e  private struct ImageTextAlignment: AlignmentID {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L3\" data-line-number=\"3\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC3\"\u003e    static func defaultValue(in context: ViewDimensions) -\u0026gt; CGFloat {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L4\" data-line-number=\"4\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC4\"\u003e      context[VerticalAlignment.center]\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L5\" data-line-number=\"5\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC5\"\u003e    }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L6\" data-line-number=\"6\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC6\"\u003e  }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L7\" data-line-number=\"7\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC7\"\u003e\n\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L8\" data-line-number=\"8\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC8\"\u003e  static let centeredImageText = VerticalAlignment(ImageTextAlignment.self)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L9\" data-line-number=\"9\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC9\"\u003e}\u003c/td\u003e\n        \u003c/tr\u003e\n  \u003c/tbody\u003e\u003c/table\u003e\n\u003c/div\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eThat is all what it takes to create a custom vertical alignment. I like to keep custom alignments private, therefore the extension is marked as private.\u003c/p\u003e\n\n\n\n\u003cp\u003eThe next step is hooking it up. We need common ancestor HStack to use the new alignment and the views, which need to be aligned, must use the alignment guide. Here is all the code which illustrates the case.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cdiv itemprop=\"text\" id=\"gist130592288\" translate=\"no\" data-color-mode=\"light\" data-light-theme=\"light\"\u003e\n\n  \u003ctemplate\u003e\n  \u003cdiv data-view-component=\"true\"\u003e\n  \n    \u003cp\u003e\u003cspan\u003e\n      This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters.\n      \u003ca href=\"https://github.co/hiddenchars\" target=\"_blank\"\u003eLearn more about bidirectional Unicode characters\u003c/a\u003e\n    \u003c/span\u003e\u003c/p\u003e\n\u003c/div\u003e\u003c/template\u003e\n\u003ctemplate\u003e\n  \u003cspan aria-label=\"This line has hidden Unicode characters\" data-view-component=\"true\"\u003e\n    \n\u003c/span\u003e\u003c/template\u003e\n\n  \u003ctable data-hpc=\"\" data-tab-size=\"8\" data-paste-markdown-skip=\"\" data-tagsearch-lang=\"Swift\" data-tagsearch-path=\"View.swift\"\u003e\n        \u003ctbody\u003e\u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L1\" data-line-number=\"1\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC1\"\u003estruct ContentView: View {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L2\" data-line-number=\"2\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC2\"\u003e  var body: some View {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L3\" data-line-number=\"3\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC3\"\u003e    // Parent stack using the custom alignment\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L4\" data-line-number=\"4\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC4\"\u003e    HStack(alignment: .centeredImageText) {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L5\" data-line-number=\"5\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC5\"\u003e      VStack(alignment: .leading) {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L6\" data-line-number=\"6\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC6\"\u003e        Text(\u0026#34;Hello, world!\u0026#34;)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L7\" data-line-number=\"7\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC7\"\u003e          .font(.largeTitle)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L8\" data-line-number=\"8\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC8\"\u003e          // Guide for text in the first VStack\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L9\" data-line-number=\"9\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC9\"\u003e          .alignmentGuide(.centeredImageText, computeValue: { dimension in\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L10\" data-line-number=\"10\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC10\"\u003e            dimension[.centeredImageText]\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L11\" data-line-number=\"11\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC11\"\u003e          })\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L12\" data-line-number=\"12\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC12\"\u003e        Text(\u0026#34;Hi hi!\u0026#34;)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L13\" data-line-number=\"13\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC13\"\u003e          .font(.callout)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L14\" data-line-number=\"14\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC14\"\u003e          .foregroundStyle(.secondary)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L15\" data-line-number=\"15\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC15\"\u003e        Text(\u0026#34;Another line\u0026#34;)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L16\" data-line-number=\"16\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC16\"\u003e          .font(.callout)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L17\" data-line-number=\"17\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC17\"\u003e          .foregroundStyle(.tertiary)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L18\" data-line-number=\"18\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC18\"\u003e      }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L19\" data-line-number=\"19\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC19\"\u003e      VStack(alignment: .leading) {\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L20\" data-line-number=\"20\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC20\"\u003e        Text(\u0026#34;Another label\u0026#34;)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L21\" data-line-number=\"21\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC21\"\u003e          .font(.system(.callout))\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L22\" data-line-number=\"22\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC22\"\u003e        Text(\u0026#34;Another label\u0026#34;)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L23\" data-line-number=\"23\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC23\"\u003e          .font(.system(.callout))\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L24\" data-line-number=\"24\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC24\"\u003e        Image(systemName: \u0026#34;globe\u0026#34;)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L25\" data-line-number=\"25\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC25\"\u003e          .imageScale(.large)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L26\" data-line-number=\"26\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC26\"\u003e          .foregroundStyle(.tint)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L27\" data-line-number=\"27\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC27\"\u003e          // Guide for image in the second VStack\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L28\" data-line-number=\"28\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC28\"\u003e          .alignmentGuide(.centeredImageText, computeValue: { dimension in\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L29\" data-line-number=\"29\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC29\"\u003e            dimension[.centeredImageText]\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L30\" data-line-number=\"30\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC30\"\u003e          })\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L31\" data-line-number=\"31\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC31\"\u003e        \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L32\" data-line-number=\"32\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC32\"\u003e      }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L33\" data-line-number=\"33\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC33\"\u003e    }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L34\" data-line-number=\"34\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC34\"\u003e    .padding()\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L35\" data-line-number=\"35\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC35\"\u003e  }\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd id=\"file-view-swift-L36\" data-line-number=\"36\"\u003e\u003c/td\u003e\n          \u003ctd id=\"file-view-swift-LC36\"\u003e}\u003c/td\u003e\n        \u003c/tr\u003e\n  \u003c/tbody\u003e\u003c/table\u003e\n\u003c/div\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eIf this was helpful, please let me know on \u003ca href=\"https://mastodon.social/@toomasvahter\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eMastodon@toomasvahter\u003c/a\u003e or \u003ca rel=\"noreferrer noopener\" href=\"https://twitter.com/toomasvahter\" target=\"_blank\"\u003eTwitter @toomasvahter\u003c/a\u003e. Feel free to subscribe to \u003ca rel=\"noreferrer noopener\" aria-label=\"RSS feed (opens in a new tab)\" href=\"https://augmentedcode.io/blog/feed/\" target=\"_blank\"\u003eRSS feed\u003c/a\u003e. Thank you for reading.\u003c/p\u003e\n\n\n\n\n\n\n\n\n\n\t\t\t\n\t\t\t\n\t\t\u003c/div\u003e\n\n\t\u003cdiv\u003e\n\n\t\t\t\u003cul\u003e\n\n\t\t\t\t\t\t\t\t\t\u003cli\u003e\n\t\t\t\t\t\t\u003cspan\u003e\n\t\t\t\t\t\t\t\u003cspan\u003e\n\t\t\t\t\t\t\t\tTags\t\t\t\t\t\t\t\u003c/span\u003e\n\t\t\t\t\t\t\t\t\t\t\t\t\t\u003c/span\u003e\n\t\t\t\t\t\t\u003cspan\u003e\n\t\t\t\t\t\t\t\u003ca href=\"https://augmentedcode.io/tag/alignmentguide/\" rel=\"tag\"\u003ealignmentGuide\u003c/a\u003e, \u003ca href=\"https://augmentedcode.io/tag/ios/\" rel=\"tag\"\u003eiOS\u003c/a\u003e, \u003ca href=\"https://augmentedcode.io/tag/swift/\" rel=\"tag\"\u003eSwift\u003c/a\u003e, \u003ca href=\"https://augmentedcode.io/tag/swiftui/\" rel=\"tag\"\u003eSwiftUI\u003c/a\u003e, \u003ca href=\"https://augmentedcode.io/tag/verticalalignment/\" rel=\"tag\"\u003eVerticalAlignment\u003c/a\u003e\t\t\t\t\t\t\u003c/span\u003e\n\t\t\t\t\t\u003c/li\u003e\n\t\t\t\t\t\n\t\t\t\u003c/ul\u003e\n\n\t\t\u003c/div\u003e\n\n\t\n\t\n\n\t\n\u003c/article\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": "2024-06-03T15:00:00Z",
  "modifiedTime": "2024-06-01T10:52:45Z"
}
