{
  "id": "b4d2df21-cca8-47b4-b28c-d40f5003dc11",
  "title": "Accessibility Review: Figure Case - Button Labels",
  "link": "https://mobilea11y.com/blog/figure-case/",
  "description": "The Accessibility Review series uses real world apps to provide examples of common accessibility issues and provide tips on how to fix them. Each of the developers has kindly volunteered their app to be tested. Figure Case is an app to help organise a tabletop miniature collection created by Simon Nickel. The app helps to track miniatures you own, and what state they currently find themselves in - unassembled, assembled, or painted.",
  "author": "",
  "published": "Sun, 21 Jun 2020 07:30:56 +0000",
  "source": "https://mobilea11y.com/index.xml",
  "categories": null,
  "byline": "",
  "length": 1816,
  "excerpt": "The Accessibility Review series uses real world apps to provide examples of common accessibility issues and provide tips on how to fix them. Each of the developers has kindly volunteered their app to be tested.",
  "siteName": "",
  "favicon": "https://mobilea11y.com/apple-touch-icon.png",
  "text": "The Accessibility Review series uses real world apps to provide examples of common accessibility issues and provide tips on how to fix them. Each of the developers has kindly volunteered their app to be tested. Figure Case is an app to help organise a tabletop miniature collection created by Simon Nickel. The app helps to track miniatures you own, and what state they currently find themselves in - unassembled, assembled, or painted. The basic flow of this process is straightforward, tap a + button to add a new unassembled model. Once it’s assembled tap the downward arrow to move into the assembled count. Repeat this once you’ve painted the model. Tapping each of these buttons adjusts the total numbers and graph bar as appropriate. Assessing the app I noticed that VoiceOver users may not be clear what will happen when they activate these buttons. This happens because the buttons have no text value and are icons only. This means that for anyone who can’t see the layout of the screen and imply what this button means from the visual clues, they won’t know what this button does. This can be fixed with a single line of code by adding an accessibility label to each button, something like this: button.accessibilityLabel = \"Move 1 model to painted\" The fix may be simple, but for VoiceOver users, it instantly disambiguates the purpose of each button. It provides the information needed on what action each performs and sets an expectation that something on the screen will change. To improve the experience further, consider adding accessibility hints or accessibility notifications. These tools could create a richer experience or might add noise. As with all accessibility improvements, I recommend you test changes where possible with real VoiceOver users to see what labels make the most sense here.",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"main\"\u003e\n    \n    \u003cp\u003eThe \u003ca href=\"https://mobilea11y.com/tags/accessibility-review/\"\u003eAccessibility Review series\u003c/a\u003e uses real world apps to provide examples of common accessibility issues and provide tips on how to fix them. Each of the developers has kindly volunteered their app to be tested.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://apps.apple.com/us/app/figure-case/id1487460834\"\u003eFigure Case\u003c/a\u003e is an app to help organise a tabletop miniature collection created by \u003ca href=\"https://twitter.com/simonnickel\"\u003eSimon Nickel\u003c/a\u003e. The app helps to track miniatures you own, and what state they currently find themselves in - unassembled, assembled, or painted.\u003c/p\u003e\n\u003cp\u003eThe basic flow of this process is straightforward, tap a + button to add a new unassembled model. Once it’s assembled tap the downward arrow to move into the assembled count. Repeat this once you’ve painted the model. Tapping each of these buttons adjusts the total numbers and graph bar as appropriate. Assessing the app I noticed that VoiceOver users may not be clear what will happen when they activate these buttons.\u003c/p\u003e\n\u003cp\u003eThis happens because the buttons have no text value and are icons only. This means that for anyone who can’t see the layout of the screen and imply what this button means from the visual clues, they won’t know what this button does.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://mobilea11y.com/images/figurecase-button.PNG\" alt=\"Down button showing VoiceOver\u0026amp;rsquo;s caption \u0026amp;lsquo;chevron.down.circle.fill\u0026amp;rsquo;\"/\u003e\u003c/p\u003e\n\u003cp\u003eThis can be fixed with a single line of code by adding an accessibility label to each button, something like this:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ebutton.accessibilityLabel = \u0026#34;Move 1 model to painted\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe fix may be simple, but for VoiceOver users, it instantly disambiguates the purpose of each button. It provides the information needed on what action each performs and sets an expectation that something on the screen will change.\u003c/p\u003e\n\u003cp\u003eTo improve the experience further, consider adding accessibility hints or accessibility notifications. These tools could create a richer experience or might add noise. As with all accessibility improvements, I recommend you test changes where possible with real VoiceOver users to see what labels make the most sense here.\u003c/p\u003e\n\n    \n\n\n  \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": null,
  "modifiedTime": null
}
