{
  "id": "85298ad7-6ed9-43fd-85da-fd78a8e6725c",
  "title": "Brick by brick: Help us build CSS Masonry",
  "link": "https://developer.chrome.com/blog/masonry-update?hl=en",
  "description": "Short description",
  "author": "",
  "published": "Wed, 23 Jul 2025 07:00:00 GMT",
  "source": "https://developer.chrome.com/static/blog/feed.xml",
  "categories": null,
  "byline": "Homepage",
  "length": 15146,
  "excerpt": "Help test the proposed masonry syntax in Chromium.",
  "siteName": "Chrome for Developers",
  "favicon": "https://www.gstatic.com/devrel-devsite/prod/vb5b28b339dece3e1c5a9a448ac1b31927a6a5f768457750cbf9dcc51c5d7717f/chrome/images/favicon.png",
  "text": "Published: July 23, 2025 The Microsoft Edge and Google Chrome teams are excited to announce that CSS masonry is ready for early developer testing from Chrome and Edge 140. With open issues surrounding the CSS masonry specification and syntax still remaining, your feedback is crucial to help us cement the final shape of the API. Try out the feature and let us know what you think. Test CSS Masonry in Chromium today To test CSS Masonry today: Use Chrome or Edge 140 or later (or another Chromium-based browser with a matching version). Go to about:flags in a new tab. Search for \"CSS Masonry Layout\". Enable the flag. Restart the browser. With the feature enabled, you can see it in action by checking out the Microsoft Edge demos (view the demos source code), or continue reading to learn more about the feature and the available syntax. What is masonry? CSS masonry is a layout mode that lets you create a brick-like arrangement of items, in a way that's not easily attainable with CSS grid, flexbox, or multi-column layout. CSS masonry can be used to arrange items in a column or row format with items placed within those columns or rows in a collapsed manner. Think of masonry as a motorway, where the only constraint is the number and the size of the different driving lanes. Within the lanes, vehicles can take any length they want, and they're always trying to be the closest they can to their destination, which is the start of the masonry layout. Your layout items are only constrained in one direction and can freely breathe along the other, irrespective of other items that are close-by. masonry is different from grid in that its tracks are only defined in a single direction. In masonry, the visual order of items is less important than the final design. Masonry lets you make the most of the available space, whatever items you have. This makes it a great choice for pages that are visually intensive, and where the visual order of the content doesn't matter as much as the final result. One interesting aspect of masonry is that it also allows items to span multiple tracks, just like with grid. When that happens, items continue to be placed in a way that fills in as much of the available space as possible. This auto-placement behavior can lead to very interesting results, which web designers have tried to achieve for a long time. For an example, check out the New York City photo gallery demo, which shows how photos can be displayed in a compact way along multiple columns, while allowing certain items (the title in this example) to span across multiple columns: Here are a few other examples of what masonry can be used for. A blog layout, showing each post's thumbnail and description. View the blog demo here. A news site, where articles appear in columns, with some articles being wider than others, and hero images span the entire width of the page. View the news site demo here. A collection of photos, with different column sizes, and certain photos spanning multiple columns. View the nature demo here. Workarounds and their limitations Implementing this design pattern on the web today requires you to use either JavaScript libraries or workarounds that use CSS grid, flexbox, or multi-column. However, doing this can come with downsides, including: Poorer performance: Relying on JavaScript libraries or custom code to mimic CSS masonry comes with performance tradeoffs, which can lead to negative user experiences. Higher code complexity: Guaranteeing the correct placement of items and distribution of space within CSS grid, flexbox, or multi-column in order to mimic a CSS masonry layout is difficult to achieve. Handling specific features such as items that span more than one column or row, custom ordering of items, or adjusting to the viewport can also lead to complexity and limitations. Larger maintenance burden: complex custom CSS or JavaScript code is more difficult to maintain. CSS grid is an amazing layout mode that's very flexible and lets you create many different styles of layouts, whether for an entire webpage, or a component, or just to align individual items. However, it doesn't have the same characteristics as masonry. In CSS grid, the rows and columns are rigidly defined and items can only exist within the grid cells. If you're trying to pack items along one of the axes, but the items are not sized to fit their respective cells, you'll have to choose between leaving gaps between items or stretching them to fill the empty space. Just like masonry, flexbox only cares about one direction, and lets items decide the space they want to occupy along the other direction. This means that you can get a layout that looks like a masonry layout using flexbox, as long as you are happy for the items to lay out in the block direction, a column at a time. The flex container will also need a defined block-size or height, to cause the items to wrap onto a new flex line, thus creating a new column. Multi-column can also create a layout that looks like masonry, again arranging the items in columns. In addition, multi-column doesn't let you size each of the columns differently. They're all the same size, whereas masonry provides a lot of flexibility when it comes to defining the tracks within which the items are packed. The point to remember here isn't that grid, flexbox, or multi-column are worse layouts than masonry. They're great types of layouts that have a lot of use cases. The point is: if what you want is a masonry layout, then CSS masonry is what will give it to you. The state of CSS masonry The CSS Working Group is drafting masonry in the CSS Grid Level 3 specification. The specification is still under construction and temporarily includes two different proposed syntaxes. The first of these uses a new keyword for the display property, while in the second masonry is directly integrated into CSS grid layout. Use display: masonry This syntax introduces CSS masonry as its own display type. More of the details around the approach and its motivation can be found in the blog post Feedback needed: How should we define CSS masonry? from the Google Chrome team, as well as in the remaining section of this post. The current prototype in Chromium is based on this proposal. display: grid; grid-template-*: masonry; In this syntax, CSS masonry is directly integrated into CSS grid. The masonry mode is triggered by applying the keyword masonry to the grid-template-columns definition in the case of a row-based masonry layout, or to the grid-template-rows definition in the case of a column-based masonry layout. More details on this proposal and its motivation can be found in the WebKit post Help us choose the final syntax for Masonry in CSS. Note that an alternative to this proposal is the item-pack property and the collapse keyword, which would trigger CSS masonry instead of using one of the two grid template properties. Since the publication of posts by the Chrome and WebKit teams, the CSSWG has continued discussions around the overall syntax to move forward with. Your feedback can help inform further development within these forums. For more details on the current status of the discussions, see issue 11593, which outlines the current set of masonry syntax discussion topics, and issue 11243 for a summary of the syntax debate so far. Create your own CSS masonry layout Let's have some fun and create a CSS masonry layout. Although the syntax for CSS masonry is still under discussion, our implementation of the feature can be tested in Chromium today by enabling the CSS Masonry Layout flag as explained in Test CSS Masonry today. The following examples demonstrate what's available in the developer trial. Create a masonry container To create your first column-based masonry container, use display:masonry and define your column sizes by using grid-template-columns. Since masonry-direction defaults to column, setting this property is optional. .masonry { display: masonry; grid-template-columns: repeat(auto-fit, minmax(160px, 1fr)); gap: 10px; } View the same size columns demo here For a row-based masonry container instead, use display:masonry, define your row sizes using grid-template-rows, and then set masonry-direction:row. .masonry { display: masonry; masonry-direction: row; grid-template-rows: repeat(auto-fit, minmax(160px, 1fr)); gap: 10px; } View the same size rows demo here As you may have noticed, this syntax diverges slightly from the original proposal from Google. Regardless of the trigger used for CSS Masonry, the CSS Working Group resolved to reuse the grid template sizing and placement properties within CSS Masonry layout. Although this allows for greater property reuse between layout types, you might find it confusing, and we'd love to hear from you on the subject. We may explore creating more generic aliases for properties like grid-template-columns and grid-template-rows, such as template-columns or template-rows, which could be used for both grid and masonry. Use the default track size With a new display type comes an opportunity to rethink property defaults. In grid, grid-template-columns and grid-template-rows default to none which, as currently defined, normally results in a single column or row. For masonry, this default would, more often than not, result in an undesirable layout. The implementation in Chromium adds the newly proposed definition for none, which will replace the default track size in CSS masonry. This new default track size is the repeat(auto-fill, auto) value. This value creates a nice masonry layout without having to define track sizes at all: .masonry { display: masonry; gap: 10px; } View the default track size demo here As shown in the image, the masonry container creates as many auto-sized columns as will fit into the available space. With CSS grid, all items are placed before the tracks are sized, which means that this track auto sizing definition is not possible. However, with CSS masonry, this restriction no longer applies, as placement and sizing are intertwined and simplified. With this restriction lifted, this allows us to supply a more useful track default size for masonry layouts. Try the masonry shorthand property As mentioned before, the current implementation in Chromium relies on the grid-template-* properties to define the masonry track in your layout. However, because masonry has one dimension only, we've also implemented the masonry shorthand property, which you can use to define both the masonry direction and the track definition in one go, without the confusing grid- prefixed property. For example, the following two code snippets will create equivalent CSS masonry containers. .masonry { display: masonry; masonry: \"a a b\" 50px 100px 200px row; } .masonry { display: masonry; masonry-direction: row; grid-template-rows: 50px 100px 200px; grid-template-areas: \"a\" \"a\" \"b\" } View the masonry shorthand demo here The masonry shorthand is still under discussion by the CSS Working Group. Give it a try today and let us know what you think. Go with custom track sizes When it comes to defining track sizes, masonry is as flexible as grid in letting you fine tune the number and sizes of the layout tracks. Masonry tracks don't all have to be the same size either, for example: .masonry { display: masonry; masonry: repeat(2, 3rem) repeat(auto-fit, 5rem) 12rem; } View the custom track sizes demo here In this example, we're defining two first 3rem tracks, followed by a varying number of 5rem tracks, followed by a single 12rem track. Span multiple tracks In masonry, items don't have to be constrained to the tracks they're placed in as they can span multiple tracks if needed. This can be very useful when some items are more important than others and require more room. For example: .masonry { display: masonry; masonry: repeat(auto-fill, minmax(12rem, 1fr)); } .important-item { grid-column: span 2; } View the span multiple tracks demo here You can also use this ability to span multiple tracks to make certain items the entire length of the container: .masonry { display: masonry; masonry: repeat(auto-fill, minmax(12rem, 1fr)); } .full-bleed { grid-column: 1 / -1; } This is what the news site demo uses to display the subscription ad within the articles. Fine tuning masonry item placement In CSS Masonry, items are placed in the column or row that has the shortest running position. Imagine a two column masonry container. If the container has a 110px high item in the first column and a 100px high item in the second column, then a third item would be placed in the second column, where it would be 10px closer to the start of the masonry direction. If you consider a 10px difference in running position to be small enough for your case, and prefer the third item to be placed in the first column instead, to better match source order, use the item-tolerance property. The new item-tolerance property controls the sensitivity in item placement. In the preceding example, you can apply item-tolerance: 10px; to your container to customize the variability in item placement: .masonry { display: masonry; masonry: 200px 200px; gap: 10px; item-tolerance: 10px; } View the item tolerance demo here Note that the draft specification calls this property item-slack. The CSS Working Group recently resolved to use item-tolerance as the name instead, and the spec will be updated soon. Other available properties You can use the same template sizing and placement properties to size and place items in the grid axis of a masonry container as you can with CSS Grid, such as grid-row, grid-column, grid-area, grid-template-areas, or order. Experience the full power of CSS grid when creating your masonry layout. Call for feedback We can't wait for you to explore CSS masonry, get creative, and discover the new capabilities it can help you unlock. A great way to get started is to check our demos and their source code and start building your own examples in Chromium (remember to enable the flag first). Your feedback is important in helping us shape the API and check that it's designed to meet your needs on the web. Give masonry a try and let us know what you think! If you have thoughts or feedback on the shape of the API, let us know by commenting on Issue 11243 or, if you prefer to write a post on your own blog or on social media, be sure to let us know on X or LinkedIn. CSS masonry is still being implemented in Chromium. If you do test it, be aware that we're still actively working on it and that you may encounter cases where it doesn't behave as expected. Some of the current limitations include dense packing, reverse placement, subgrid support, out-of-flow support, baseline support, DevTools support, fragmentation support, gap decoration support, among others. If you find a bug while testing out the feature, share your feedback by opening a new Chromium bug.",
  "image": "https://developer.chrome.com/static/blog/masonry-update/image/hero.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\n  \n    \n    \n\n\n\n\n\u003cdiv translate=\"no\"\u003e\n  \n    \n    \n      \u003cdiv\u003e\n        \n          \u003cp\u003e\u003cimg alt=\"Patrick Brosset\" src=\"https://web.dev/images/authors/patrickbrosset.jpg\" decoding=\"async\" height=\"64\" loading=\"lazy\" width=\"64\"/\u003e\u003c/p\u003e\n      \u003c/div\u003e\n    \n  \n    \n    \n      \u003cdiv\u003e\n        \n          \u003cp\u003e\u003cimg alt=\"Alison Maher\" src=\"https://web.dev/images/authors/alisonmaher.jpg\" decoding=\"async\" height=\"64\" loading=\"lazy\" width=\"64\"/\u003e\u003c/p\u003e\n      \u003c/div\u003e\n    \n  \n\u003c/div\u003e\n\n\u003cp\u003e\n  Published: July 23, 2025\n\u003c/p\u003e\n\n\n\u003cp\u003eThe Microsoft Edge and Google Chrome teams are excited to announce that CSS\nmasonry is ready for early developer testing from Chrome and Edge 140.\u003c/p\u003e\n\n\u003cp\u003eWith open issues surrounding the CSS masonry specification and syntax still\nremaining, your feedback is crucial to help us cement the final shape of the\nAPI. Try out the feature and let us know what you think.\u003c/p\u003e\n\n\u003ch2 id=\"test-css-masonry\" data-text=\"Test CSS Masonry in Chromium today\" tabindex=\"-1\"\u003eTest CSS Masonry in Chromium today\u003c/h2\u003e\n\n\u003cp\u003eTo test CSS Masonry today:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eUse Chrome or Edge 140 or later (or another Chromium-based browser with a\nmatching version).\u003c/li\u003e\n\u003cli\u003eGo to \u003ccode translate=\"no\" dir=\"ltr\"\u003eabout:flags\u003c/code\u003e in a new tab.\u003c/li\u003e\n\u003cli\u003eSearch for \u0026#34;CSS Masonry Layout\u0026#34;.\u003c/li\u003e\n\u003cli\u003eEnable the flag.\u003c/li\u003e\n\u003cli\u003eRestart the browser.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--h9ij8vvprk.png\" alt=\"The entry for Masonry on the experiments page.\" srcset=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--h9ij8vvprk_36.png 36w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--h9ij8vvprk_48.png 48w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--h9ij8vvprk_72.png 72w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--h9ij8vvprk_96.png 96w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--h9ij8vvprk_480.png 480w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--h9ij8vvprk_720.png 720w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--h9ij8vvprk_856.png 856w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--h9ij8vvprk_960.png 960w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--h9ij8vvprk_1440.png 1440w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--h9ij8vvprk_1920.png 1920w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--h9ij8vvprk_2880.png 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eWith the feature enabled, you can see it in action by \u003ca href=\"https://microsoftedge.github.io/Demos/css-masonry/\"\u003echecking out the\nMicrosoft Edge demos\u003c/a\u003e (view\nthe \u003ca href=\"https://github.com/MicrosoftEdge/Demos/tree/main/css-masonry\"\u003edemos source\ncode\u003c/a\u003e), or\ncontinue reading to learn more about the feature and the available syntax.\u003c/p\u003e\n\n\u003ch2 id=\"what-is-masonry\" data-text=\"What is masonry?\" tabindex=\"-1\"\u003eWhat is masonry?\u003c/h2\u003e\n\n\u003cp\u003eCSS masonry is a layout mode that lets you create a brick-like arrangement\nof items, in a way that\u0026#39;s not easily attainable with CSS grid, flexbox, or\nmulti-column layout.\u003c/p\u003e\n\n\u003cp\u003eCSS masonry can be used to arrange items in a column or row format with items\nplaced within those columns or rows in a collapsed manner.\u003c/p\u003e\n\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--qtu5kzp9el.png\" alt=\"Items arranged in masonry layouts.\" srcset=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--qtu5kzp9el_36.png 36w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--qtu5kzp9el_48.png 48w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--qtu5kzp9el_72.png 72w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--qtu5kzp9el_96.png 96w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--qtu5kzp9el_480.png 480w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--qtu5kzp9el_720.png 720w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--qtu5kzp9el_856.png 856w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--qtu5kzp9el_960.png 960w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--qtu5kzp9el_1440.png 1440w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--qtu5kzp9el_1920.png 1920w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--qtu5kzp9el_2880.png 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eThink of masonry as a motorway, where the only constraint is the number and the\nsize of the different driving lanes. Within the lanes, vehicles can take any\nlength they want, and they\u0026#39;re always trying to be the closest they can to their\ndestination, which is the start of the masonry layout.\u003c/p\u003e\n\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--8n0ht8y0ov7.png\" alt=\"Demo using vehicles queuing in lanes to demonstrate the layout.\" srcset=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--8n0ht8y0ov7_36.png 36w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--8n0ht8y0ov7_48.png 48w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--8n0ht8y0ov7_72.png 72w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--8n0ht8y0ov7_96.png 96w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--8n0ht8y0ov7_480.png 480w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--8n0ht8y0ov7_720.png 720w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--8n0ht8y0ov7_856.png 856w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--8n0ht8y0ov7_960.png 960w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--8n0ht8y0ov7_1440.png 1440w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--8n0ht8y0ov7_1920.png 1920w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--8n0ht8y0ov7_2880.png 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eYour layout items are only constrained in one direction and can freely breathe\nalong the other, irrespective of other items that are close-by. masonry is\ndifferent from grid in that its tracks are only defined in a single direction.\u003c/p\u003e\n\n\u003cp\u003eIn masonry, the visual order of items is less important than the final design.\nMasonry lets you make the most of the available space, whatever items you have.\nThis makes it a great choice for pages that are visually intensive, and where\nthe visual order of the content doesn\u0026#39;t matter as much as the final result.\u003c/p\u003e\n\n\u003cp\u003eOne interesting aspect of masonry is that it also allows items to span multiple\ntracks, just like with grid. When that happens, items continue to be placed in a\nway that fills in as much of the available space as possible.\u003c/p\u003e\n\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--o8p2okn5x3h.png\" alt=\"The image with vehicles, this time large vehicles span two columns.\" srcset=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--o8p2okn5x3h_36.png 36w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--o8p2okn5x3h_48.png 48w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--o8p2okn5x3h_72.png 72w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--o8p2okn5x3h_96.png 96w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--o8p2okn5x3h_480.png 480w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--o8p2okn5x3h_720.png 720w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--o8p2okn5x3h_856.png 856w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--o8p2okn5x3h_960.png 960w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--o8p2okn5x3h_1440.png 1440w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--o8p2okn5x3h_1920.png 1920w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--o8p2okn5x3h_2880.png 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eThis auto-placement behavior can lead to very interesting results, which web\ndesigners have tried to achieve for a long time. For an example, check out the\n\u003ca href=\"https://microsoftedge.github.io/Demos/css-masonry/new-york.html\"\u003eNew York City photo gallery\ndemo\u003c/a\u003e, which\nshows how photos can be displayed in a compact way along multiple columns, while\nallowing certain items (the title in this example) to span across multiple\ncolumns:\u003c/p\u003e\n\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--xr4vo9g2iv.jpg\" alt=\"A gallery where the title spans columns.\" srcset=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--xr4vo9g2iv_36.jpg 36w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--xr4vo9g2iv_48.jpg 48w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--xr4vo9g2iv_72.jpg 72w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--xr4vo9g2iv_96.jpg 96w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--xr4vo9g2iv_480.jpg 480w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--xr4vo9g2iv_720.jpg 720w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--xr4vo9g2iv_856.jpg 856w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--xr4vo9g2iv_960.jpg 960w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--xr4vo9g2iv_1440.jpg 1440w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--xr4vo9g2iv_1920.jpg 1920w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--xr4vo9g2iv_2880.jpg 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eHere are a few other examples of what masonry can be used for.\u003c/p\u003e\n\n\u003cp\u003eA blog layout, showing each post\u0026#39;s thumbnail and description.\u003c/p\u003e\n\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--xh4zxauf46s.png\" alt=\"A news site with masonry used for article cards.\" srcset=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--xh4zxauf46s_36.png 36w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--xh4zxauf46s_48.png 48w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--xh4zxauf46s_72.png 72w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--xh4zxauf46s_96.png 96w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--xh4zxauf46s_480.png 480w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--xh4zxauf46s_720.png 720w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--xh4zxauf46s_856.png 856w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--xh4zxauf46s_960.png 960w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--xh4zxauf46s_1440.png 1440w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--xh4zxauf46s_1920.png 1920w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--xh4zxauf46s_2880.png 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n  \u003cfigcaption\u003e\u003ca href=\"https://microsoftedge.github.io/Demos/css-masonry/blog.html\"\u003eView the blog demo here\u003c/a\u003e.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eA news site, where articles appear in columns, with some articles being wider\nthan others, and hero images span the entire width of the page.\u003c/p\u003e\n\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--6hkjurtsraa.png\" alt=\"A news site where some articles span columns.\" srcset=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--6hkjurtsraa_36.png 36w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--6hkjurtsraa_48.png 48w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--6hkjurtsraa_72.png 72w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--6hkjurtsraa_96.png 96w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--6hkjurtsraa_480.png 480w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--6hkjurtsraa_720.png 720w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--6hkjurtsraa_856.png 856w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--6hkjurtsraa_960.png 960w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--6hkjurtsraa_1440.png 1440w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--6hkjurtsraa_1920.png 1920w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--6hkjurtsraa_2880.png 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n  \u003cfigcaption\u003e\u003ca href=\"https://microsoftedge.github.io/Demos/css-masonry/the-daily-oddity.html\"\u003eView the news site demo here\u003c/a\u003e.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eA collection of photos, with different column sizes, and certain photos spanning\nmultiple columns.\u003c/p\u003e\n\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--stjvtvdeft.jpg\" alt=\"A photography site masonry layout.\" srcset=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--stjvtvdeft_36.jpg 36w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--stjvtvdeft_48.jpg 48w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--stjvtvdeft_72.jpg 72w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--stjvtvdeft_96.jpg 96w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--stjvtvdeft_480.jpg 480w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--stjvtvdeft_720.jpg 720w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--stjvtvdeft_856.jpg 856w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--stjvtvdeft_960.jpg 960w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--stjvtvdeft_1440.jpg 1440w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--stjvtvdeft_1920.jpg 1920w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--stjvtvdeft_2880.jpg 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n  \u003cfigcaption\u003e\u003ca href=\"https://microsoftedge.github.io/Demos/css-masonry/nature.html\"\u003eView the nature demo here\u003c/a\u003e.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003ch2 id=\"workarounds\" data-text=\"Workarounds and their limitations\" tabindex=\"-1\"\u003eWorkarounds and their limitations\u003c/h2\u003e\n\n\u003cp\u003eImplementing this design pattern on the web today requires you to use either\nJavaScript libraries or workarounds that use CSS grid, flexbox, or multi-column.\nHowever, doing this can come with downsides, including:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003ePoorer performance\u003c/strong\u003e: Relying on JavaScript libraries or custom code to\nmimic CSS masonry comes with performance tradeoffs, which can lead to\nnegative user experiences.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eHigher code complexity\u003c/strong\u003e:\n\u003cul\u003e\n\u003cli\u003eGuaranteeing the correct placement of items and distribution of space\nwithin CSS grid, flexbox, or multi-column in order to mimic a CSS\nmasonry layout is difficult to achieve.\u003c/li\u003e\n\u003cli\u003eHandling specific features such as items that span more than one column\nor row, custom ordering of items, or adjusting to the viewport can also\nlead to complexity and limitations.\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eLarger maintenance burden\u003c/strong\u003e: complex custom CSS or JavaScript code is more\ndifficult to maintain.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eCSS grid is an amazing layout mode that\u0026#39;s very flexible and lets you create\nmany different styles of layouts, whether for an entire webpage, or a component,\nor just to align individual items. However, it doesn\u0026#39;t have the same\ncharacteristics as masonry.\u003c/p\u003e\n\n\u003cp\u003eIn CSS grid, the rows and columns are rigidly defined and items can only exist\nwithin the grid cells. If you\u0026#39;re trying to pack items along one of the axes, but\nthe items are not sized to fit their respective cells, you\u0026#39;ll have to choose\nbetween leaving gaps between items or stretching them to fill the empty space.\u003c/p\u003e\n\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--ayfy3slyis9.png\" alt=\"Grid places items in fixed tracks.\" srcset=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--ayfy3slyis9_36.png 36w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--ayfy3slyis9_48.png 48w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--ayfy3slyis9_72.png 72w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--ayfy3slyis9_96.png 96w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--ayfy3slyis9_480.png 480w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--ayfy3slyis9_720.png 720w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--ayfy3slyis9_856.png 856w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--ayfy3slyis9_960.png 960w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--ayfy3slyis9_1440.png 1440w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--ayfy3slyis9_1920.png 1920w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--ayfy3slyis9_2880.png 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eJust like masonry, flexbox only cares about one direction, and lets items decide\nthe space they want to occupy along the other direction. This means that you can\nget a layout that looks like a masonry layout using flexbox, as long as you are\nhappy for the items to lay out in the block direction, a column at a time. The\nflex container will also need a defined block-size or height, to cause the items\nto wrap onto a new flex line, thus creating a new column.\u003c/p\u003e\n\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--qb0z53qaupe.png\" alt=\"Flex layout ordering items by column.\" srcset=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--qb0z53qaupe_36.png 36w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--qb0z53qaupe_48.png 48w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--qb0z53qaupe_72.png 72w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--qb0z53qaupe_96.png 96w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--qb0z53qaupe_480.png 480w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--qb0z53qaupe_720.png 720w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--qb0z53qaupe_856.png 856w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--qb0z53qaupe_960.png 960w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--qb0z53qaupe_1440.png 1440w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--qb0z53qaupe_1920.png 1920w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--qb0z53qaupe_2880.png 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eMulti-column can also create a layout that looks like masonry, again arranging\nthe items in columns. In addition, multi-column doesn\u0026#39;t let you size each of the\ncolumns differently. They\u0026#39;re all the same size, whereas masonry provides a lot\nof flexibility when it comes to defining the tracks within which the items are\npacked.\u003c/p\u003e\n\n\u003cp\u003eThe point to remember here isn\u0026#39;t that grid, flexbox, or multi-column are worse\nlayouts than masonry. They\u0026#39;re great types of layouts that have a lot of use\ncases. The point is: if what you want is a masonry layout, then CSS masonry is\nwhat will give it to you.\u003c/p\u003e\n\n\u003ch2 id=\"css-masonry\" data-text=\"The state of CSS masonry\" tabindex=\"-1\"\u003eThe state of CSS masonry\u003c/h2\u003e\n\n\u003cp\u003eThe CSS Working Group is drafting masonry in the \u003ca href=\"https://drafts.csswg.org/css-grid-3\"\u003eCSS Grid Level\n3\u003c/a\u003e specification. The specification is\nstill under construction and temporarily includes two different proposed\nsyntaxes. The first of these uses a new keyword for the \u003ccode translate=\"no\" dir=\"ltr\"\u003edisplay\u003c/code\u003e property,\nwhile in the second masonry is directly integrated into CSS grid layout.\u003c/p\u003e\n\n\u003ch3 id=\"display-masonry\" data-text=\"Use display: masonry\" tabindex=\"-1\"\u003eUse \u003ccode translate=\"no\" dir=\"ltr\"\u003edisplay: masonry\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eThis syntax introduces CSS masonry as its own \u003ccode translate=\"no\" dir=\"ltr\"\u003edisplay\u003c/code\u003e type. More of the\ndetails around the approach and its motivation can be found in the blog post\n\u003ca href=\"https://developer.chrome.com/blog/masonry-syntax\"\u003eFeedback needed: How should we define CSS masonry?\u003c/a\u003e from\nthe Google Chrome team, as well as in the remaining section of this post. The\ncurrent prototype in Chromium is based on this proposal.\u003c/p\u003e\n\n\u003ch3 id=\"display-grid-masonry\" data-text=\"display: grid; grid-template-*: masonry;\" tabindex=\"-1\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003edisplay: grid; grid-template-*: masonry;\u003c/code\u003e\u003c/h3\u003e\n\n\u003cp\u003eIn this syntax, CSS masonry is directly integrated into CSS grid. The masonry\nmode is triggered by applying the keyword \u003ccode translate=\"no\" dir=\"ltr\"\u003emasonry\u003c/code\u003e to the\n\u003ccode translate=\"no\" dir=\"ltr\"\u003egrid-template-columns\u003c/code\u003e definition in the case of a row-based masonry layout, or\nto the \u003ccode translate=\"no\" dir=\"ltr\"\u003egrid-template-rows\u003c/code\u003e definition in the case of a column-based masonry\nlayout.\u003c/p\u003e\n\n\u003cp\u003eMore details on this proposal and its motivation can be found in the WebKit post\n\u003ca href=\"https://webkit.org/blog/16026/css-masonry-syntax/\"\u003eHelp us choose the final syntax for Masonry in\nCSS\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eNote that an alternative to this proposal is the \u003ca href=\"https://github.com/w3c/csswg-drafts/issues/11480\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003eitem-pack\u003c/code\u003e\nproperty\u003c/a\u003e and the\n\u003ca href=\"https://github.com/w3c/csswg-drafts/issues/12022\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003ecollapse\u003c/code\u003e\u003c/a\u003e keyword, which\nwould trigger CSS masonry instead of using one of the two grid template\nproperties.\u003c/p\u003e\n\n\u003cp\u003eSince the publication of posts by the Chrome and WebKit teams, the CSSWG has\ncontinued discussions around the overall syntax to move forward with. Your\nfeedback can help inform further development within these forums.\u003c/p\u003e\n\n\u003cp\u003eFor more details on the current status of the discussions, see \u003ca href=\"https://github.com/w3c/csswg-drafts/issues/11593\"\u003eissue\n11593\u003c/a\u003e, which outlines the\ncurrent set of masonry syntax discussion topics, and \u003ca href=\"https://github.com/w3c/csswg-drafts/issues/11243\"\u003eissue\n11243\u003c/a\u003e for a summary of the\nsyntax debate so far.\u003c/p\u003e\n\n\u003ch2 id=\"create-css-masonry\" data-text=\"Create your own CSS masonry layout\" tabindex=\"-1\"\u003eCreate your own CSS masonry layout\u003c/h2\u003e\n\n\u003cp\u003eLet\u0026#39;s have some fun and create a CSS masonry layout.\u003c/p\u003e\n\n\u003cp\u003eAlthough the syntax for CSS masonry is still under discussion, our\nimplementation of the feature can be tested in Chromium today by enabling the\nCSS Masonry Layout flag as explained in \u003ca href=\"#test-css-masonry\"\u003eTest CSS Masonry\ntoday\u003c/a\u003e. The following examples demonstrate what\u0026#39;s available\nin the developer trial.\u003c/p\u003e\n\n\u003ch3 id=\"create-masonry-container\" data-text=\"Create a masonry container\" tabindex=\"-1\"\u003eCreate a masonry container\u003c/h3\u003e\n\n\u003cp\u003eTo create your first column-based masonry container, use \u003ccode translate=\"no\" dir=\"ltr\"\u003edisplay:masonry\u003c/code\u003e and\ndefine your column sizes by using \u003ccode translate=\"no\" dir=\"ltr\"\u003egrid-template-columns\u003c/code\u003e. Since\n\u003ccode translate=\"no\" dir=\"ltr\"\u003emasonry-direction\u003c/code\u003e defaults to \u003ccode translate=\"no\" dir=\"ltr\"\u003ecolumn\u003c/code\u003e, setting this property is optional.\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"CSS\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003emasonry\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003edisplay\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003emasonry\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003egrid-template-columns\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003erepeat\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eauto\u003c/span\u003e\u003cspan\u003e-fit\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eminmax\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e160\u003c/span\u003e\u003cspan\u003epx\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e1\u003c/span\u003e\u003cspan\u003efr\u003c/span\u003e\u003cspan\u003e));\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003egap\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e10\u003c/span\u003e\u003cspan\u003epx\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--rwr7pustap.jpg\" alt=\"Masonry layout where all columns are the same size.\" srcset=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--rwr7pustap_36.jpg 36w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--rwr7pustap_48.jpg 48w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--rwr7pustap_72.jpg 72w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--rwr7pustap_96.jpg 96w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--rwr7pustap_480.jpg 480w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--rwr7pustap_720.jpg 720w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--rwr7pustap_856.jpg 856w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--rwr7pustap_960.jpg 960w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--rwr7pustap_1440.jpg 1440w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--rwr7pustap_1920.jpg 1920w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--rwr7pustap_2880.jpg 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n  \u003cfigcaption\u003e\u003ca href=\"https://microsoftedge.github.io/Demos/css-masonry/syntax-examples/same-size-columns.html\"\u003eView the same size columns demo here\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eFor a row-based masonry container instead, use \u003ccode translate=\"no\" dir=\"ltr\"\u003edisplay:masonry\u003c/code\u003e, define your\nrow sizes using \u003ccode translate=\"no\" dir=\"ltr\"\u003egrid-template-rows\u003c/code\u003e, and then set \u003ccode translate=\"no\" dir=\"ltr\"\u003emasonry-direction:row\u003c/code\u003e.\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"CSS\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003emasonry\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e \u003c/span\u003e\u003cspan\u003edisplay\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003emasonry\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e \u003c/span\u003e\u003cspan\u003emasonry-direction\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003erow\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e \u003c/span\u003e\u003cspan\u003egrid-template-rows\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003erepeat\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eauto\u003c/span\u003e\u003cspan\u003e-fit\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eminmax\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e160\u003c/span\u003e\u003cspan\u003epx\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e1\u003c/span\u003e\u003cspan\u003efr\u003c/span\u003e\u003cspan\u003e));\u003c/span\u003e\n\u003cspan\u003e \u003c/span\u003e\u003cspan\u003egap\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e10\u003c/span\u003e\u003cspan\u003epx\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--k52r95mluda.jpg\" alt=\"Masonry layout where all rows are the same size.\" srcset=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--k52r95mluda_36.jpg 36w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--k52r95mluda_48.jpg 48w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--k52r95mluda_72.jpg 72w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--k52r95mluda_96.jpg 96w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--k52r95mluda_480.jpg 480w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--k52r95mluda_720.jpg 720w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--k52r95mluda_856.jpg 856w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--k52r95mluda_960.jpg 960w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--k52r95mluda_1440.jpg 1440w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--k52r95mluda_1920.jpg 1920w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--k52r95mluda_2880.jpg 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n  \u003cfigcaption\u003e\u003ca href=\"https://microsoftedge.github.io/Demos/css-masonry/syntax-examples/same-size-rows.html\"\u003eView the same size rows demo here\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eAs you may have noticed, this syntax diverges slightly from the \u003ca href=\"https://developer.chrome.com/blog/masonry\"\u003eoriginal\nproposal from Google\u003c/a\u003e. Regardless of the trigger used for CSS\nMasonry, the \u003ca href=\"https://github.com/w3c/csswg-drafts/issues/11243#issuecomment-2627998471\"\u003eCSS Working Group resolved to reuse the grid template sizing and\nplacement\nproperties\u003c/a\u003e\nwithin CSS Masonry layout.\u003c/p\u003e\n\n\u003cp\u003eAlthough this allows for greater property reuse between layout types, you might\nfind it confusing, and we\u0026#39;d love to hear from you on the subject. We may explore\ncreating more generic aliases for properties like \u003ccode translate=\"no\" dir=\"ltr\"\u003egrid-template-columns\u003c/code\u003e and\n\u003ccode translate=\"no\" dir=\"ltr\"\u003egrid-template-rows\u003c/code\u003e, such as \u003ccode translate=\"no\" dir=\"ltr\"\u003etemplate-columns\u003c/code\u003e or \u003ccode translate=\"no\" dir=\"ltr\"\u003etemplate-rows\u003c/code\u003e, which could\nbe used for both grid and masonry.\u003c/p\u003e\n\n\u003ch3 id=\"use-default-track-size\" data-text=\"Use the default track size\" tabindex=\"-1\"\u003eUse the default track size\u003c/h3\u003e\n\n\u003cp\u003eWith a new display type comes an opportunity to rethink property defaults.\u003c/p\u003e\n\n\u003cp\u003eIn grid, \u003ccode translate=\"no\" dir=\"ltr\"\u003egrid-template-columns\u003c/code\u003e and \u003ccode translate=\"no\" dir=\"ltr\"\u003egrid-template-rows\u003c/code\u003e default to \u003ccode translate=\"no\" dir=\"ltr\"\u003enone\u003c/code\u003e\nwhich, as currently defined, normally results in a single column or row. For\nmasonry, this default would, more often than not, result in an undesirable\nlayout.\u003c/p\u003e\n\n\u003cp\u003eThe implementation in Chromium adds the newly\n\u003ca href=\"https://github.com/w3c/csswg-drafts/issues/10869\"\u003eproposed\u003c/a\u003e definition for\n\u003ccode translate=\"no\" dir=\"ltr\"\u003enone\u003c/code\u003e, which will replace the default track size in CSS masonry. This new\ndefault track size is the \u003ccode translate=\"no\" dir=\"ltr\"\u003erepeat(auto-fill, auto)\u003c/code\u003e value. This value creates a\nnice masonry layout without having to define track sizes at all:\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"CSS\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003emasonry\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003edisplay\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003emasonry\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003egap\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e10\u003c/span\u003e\u003cspan\u003epx\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--73wr60yyc4e.jpg\" alt=\"Masonry layout with auto-sized columns.\" srcset=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--73wr60yyc4e_36.jpg 36w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--73wr60yyc4e_48.jpg 48w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--73wr60yyc4e_72.jpg 72w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--73wr60yyc4e_96.jpg 96w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--73wr60yyc4e_480.jpg 480w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--73wr60yyc4e_720.jpg 720w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--73wr60yyc4e_856.jpg 856w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--73wr60yyc4e_960.jpg 960w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--73wr60yyc4e_1440.jpg 1440w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--73wr60yyc4e_1920.jpg 1920w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--73wr60yyc4e_2880.jpg 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n  \u003cfigcaption\u003e\u003ca href=\"https://microsoftedge.github.io/Demos/css-masonry/syntax-examples/default-track-size.html\"\u003eView the default track size demo here\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eAs shown in the image, the masonry container creates as many auto-sized columns\nas will fit into the available space.\u003c/p\u003e\n\n\u003cp\u003eWith CSS grid, all items are placed before the tracks are sized, which means\nthat this track auto sizing definition is not possible. However, with CSS\nmasonry, this restriction no longer applies, as placement and sizing are\nintertwined and simplified. With this restriction lifted, this allows us to\nsupply a more useful track default size for masonry layouts.\u003c/p\u003e\n\n\u003ch3 id=\"try-masonry\" data-text=\"Try the masonry shorthand property\" tabindex=\"-1\"\u003eTry the \u003ccode translate=\"no\" dir=\"ltr\"\u003emasonry\u003c/code\u003e shorthand property\u003c/h3\u003e\n\n\u003cp\u003eAs mentioned before, the current implementation in Chromium relies on the\n\u003ccode translate=\"no\" dir=\"ltr\"\u003egrid-template-*\u003c/code\u003e properties to define the masonry track in your layout.\nHowever, because masonry has one dimension only, we\u0026#39;ve also implemented the\n\u003ccode translate=\"no\" dir=\"ltr\"\u003emasonry\u003c/code\u003e shorthand property, which you can use to define both the masonry\ndirection and the track definition in one go, without the confusing \u003ccode translate=\"no\" dir=\"ltr\"\u003egrid-\u003c/code\u003e\nprefixed property.\u003c/p\u003e\n\n\u003cp\u003eFor example, the following two code snippets will create equivalent CSS masonry\ncontainers.\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"CSS\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003emasonry\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e \u003c/span\u003e\u003cspan\u003edisplay\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003emasonry\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e \u003c/span\u003e\u003cspan\u003emasonry\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#34;a a b\u0026#34;\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e50\u003c/span\u003e\u003cspan\u003epx\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e100\u003c/span\u003e\u003cspan\u003epx\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e200\u003c/span\u003e\u003cspan\u003epx\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003erow\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\n\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003emasonry\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003edisplay\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003emasonry\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003emasonry-direction\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003erow\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003egrid-template-rows\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e50\u003c/span\u003e\u003cspan\u003epx\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e100\u003c/span\u003e\u003cspan\u003epx\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e200\u003c/span\u003e\u003cspan\u003epx\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003egrid-template-areas\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#34;a\u0026#34;\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#34;a\u0026#34;\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e\u0026#34;b\u0026#34;\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--kcth0mjguo.jpg\" alt=\"Masonry layout with three rows that get progressively larger.\" srcset=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--kcth0mjguo_36.jpg 36w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--kcth0mjguo_48.jpg 48w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--kcth0mjguo_72.jpg 72w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--kcth0mjguo_96.jpg 96w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--kcth0mjguo_480.jpg 480w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--kcth0mjguo_720.jpg 720w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--kcth0mjguo_856.jpg 856w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--kcth0mjguo_960.jpg 960w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--kcth0mjguo_1440.jpg 1440w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--kcth0mjguo_1920.jpg 1920w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--kcth0mjguo_2880.jpg 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n  \u003cfigcaption\u003e\u003ca href=\"https://microsoftedge.github.io/Demos/css-masonry/syntax-examples/masonry-shorthand.html\"\u003eView the masonry shorthand demo here\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/w3c/csswg-drafts/issues/12023\"\u003eThe \u003ccode translate=\"no\" dir=\"ltr\"\u003emasonry\u003c/code\u003e shorthand is still under\ndiscussion\u003c/a\u003e by the CSS Working\nGroup. Give it a try today and let us know what you think.\u003c/p\u003e\n\n\u003ch3 id=\"custom-track-sizes\" data-text=\"Go with custom track sizes\" tabindex=\"-1\"\u003eGo with custom track sizes\u003c/h3\u003e\n\n\u003cp\u003eWhen it comes to defining track sizes, masonry is as flexible as grid in letting\nyou fine tune the number and sizes of the layout tracks. Masonry tracks don\u0026#39;t\nall have to be the same size either, for example:\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"CSS\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003emasonry\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e \u003c/span\u003e\u003cspan\u003edisplay\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003emasonry\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e \u003c/span\u003e\u003cspan\u003emasonry\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003erepeat\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e2\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e3\u003c/span\u003e\u003cspan\u003erem\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003erepeat\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eauto\u003c/span\u003e\u003cspan\u003e-fit\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e5\u003c/span\u003e\u003cspan\u003erem\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e12\u003c/span\u003e\u003cspan\u003erem\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--360s7k9zxgj.jpg\" alt=\"Masonry layout with various different track sizes.\" srcset=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--360s7k9zxgj_36.jpg 36w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--360s7k9zxgj_48.jpg 48w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--360s7k9zxgj_72.jpg 72w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--360s7k9zxgj_96.jpg 96w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--360s7k9zxgj_480.jpg 480w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--360s7k9zxgj_720.jpg 720w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--360s7k9zxgj_856.jpg 856w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--360s7k9zxgj_960.jpg 960w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--360s7k9zxgj_1440.jpg 1440w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--360s7k9zxgj_1920.jpg 1920w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--360s7k9zxgj_2880.jpg 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n  \u003cfigcaption\u003e\u003ca href=\"https://microsoftedge.github.io/Demos/css-masonry/syntax-examples/custom-track-sizes.html\"\u003eView the custom track sizes demo here\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eIn this example, we\u0026#39;re defining two first 3rem tracks, followed by a varying\nnumber of 5rem tracks, followed by a single 12rem track.\u003c/p\u003e\n\n\u003ch3 id=\"span-multiple-tracks\" data-text=\"Span multiple tracks\" tabindex=\"-1\"\u003eSpan multiple tracks\u003c/h3\u003e\n\n\u003cp\u003eIn masonry, items don\u0026#39;t have to be constrained to the tracks they\u0026#39;re placed in\nas they can span multiple tracks if needed. This can be very useful when some\nitems are more important than others and require more room.\u003c/p\u003e\n\n\u003cp\u003eFor example:\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"CSS\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003emasonry\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003edisplay\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003emasonry\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003emasonry\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003erepeat\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eauto\u003c/span\u003e\u003cspan\u003e-fill\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eminmax\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e12\u003c/span\u003e\u003cspan\u003erem\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e1\u003c/span\u003e\u003cspan\u003efr\u003c/span\u003e\u003cspan\u003e));\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\n\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eimportant-item\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003egrid-column\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003espan\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e2\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--rt3jdxft8hq.jpg\" alt=\"Masonry layout with items spanning multiple tracks.\" srcset=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--rt3jdxft8hq_36.jpg 36w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--rt3jdxft8hq_48.jpg 48w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--rt3jdxft8hq_72.jpg 72w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--rt3jdxft8hq_96.jpg 96w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--rt3jdxft8hq_480.jpg 480w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--rt3jdxft8hq_720.jpg 720w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--rt3jdxft8hq_856.jpg 856w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--rt3jdxft8hq_960.jpg 960w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--rt3jdxft8hq_1440.jpg 1440w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--rt3jdxft8hq_1920.jpg 1920w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--rt3jdxft8hq_2880.jpg 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n  \u003cfigcaption\u003e\u003ca href=\"https://microsoftedge.github.io/Demos/css-masonry/syntax-examples/span-multiple-tracks.html\"\u003eView the span multiple tracks demo here\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eYou can also use this ability to span multiple tracks to make certain items the\nentire length of the container:\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"CSS\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003emasonry\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e \u003c/span\u003e\u003cspan\u003edisplay\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003emasonry\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e \u003c/span\u003e\u003cspan\u003emasonry\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003erepeat\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eauto\u003c/span\u003e\u003cspan\u003e-fill\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003eminmax\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e12\u003c/span\u003e\u003cspan\u003erem\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e1\u003c/span\u003e\u003cspan\u003efr\u003c/span\u003e\u003cspan\u003e));\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\n\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003efull-bleed\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e \u003c/span\u003e\u003cspan\u003egrid-column\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e/\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e-1\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003cp\u003eThis is what the news site demo uses to display the subscription ad within the\narticles.\u003c/p\u003e\n\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--m3ypy0gga8.png\" alt=\"News site layout with a banner spanning the whole area.\" srcset=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--m3ypy0gga8_36.png 36w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--m3ypy0gga8_48.png 48w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--m3ypy0gga8_72.png 72w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--m3ypy0gga8_96.png 96w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--m3ypy0gga8_480.png 480w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--m3ypy0gga8_720.png 720w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--m3ypy0gga8_856.png 856w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--m3ypy0gga8_960.png 960w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--m3ypy0gga8_1440.png 1440w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--m3ypy0gga8_1920.png 1920w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--m3ypy0gga8_2880.png 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n\u003c/figure\u003e\n\n\u003ch3 id=\"fine-tune-masonry\" data-text=\"Fine tuning masonry item placement\" tabindex=\"-1\"\u003eFine tuning masonry item placement\u003c/h3\u003e\n\n\u003cp\u003eIn CSS Masonry, items are placed in the column or row that has the shortest\nrunning position.\u003c/p\u003e\n\n\u003cp\u003eImagine a two column masonry container. If the container has a 110px high item\nin the first column and a 100px high item in the second column, then a third\nitem would be placed in the second column, where it would be 10px closer to the\nstart of the masonry direction.\u003c/p\u003e\n\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--jz9wjw15h9k.jpg\" alt=\"A two-column masonry layout.\" srcset=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--jz9wjw15h9k_36.jpg 36w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--jz9wjw15h9k_48.jpg 48w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--jz9wjw15h9k_72.jpg 72w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--jz9wjw15h9k_96.jpg 96w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--jz9wjw15h9k_480.jpg 480w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--jz9wjw15h9k_720.jpg 720w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--jz9wjw15h9k_856.jpg 856w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--jz9wjw15h9k_960.jpg 960w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--jz9wjw15h9k_1440.jpg 1440w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--jz9wjw15h9k_1920.jpg 1920w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--jz9wjw15h9k_2880.jpg 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eIf you consider a 10px difference in running position to be small enough for\nyour case, and prefer the third item to be placed in the first column instead,\nto better match source order, use the \u003ccode translate=\"no\" dir=\"ltr\"\u003eitem-tolerance\u003c/code\u003e property.\u003c/p\u003e\n\n\u003cp\u003eThe new \u003ccode translate=\"no\" dir=\"ltr\"\u003eitem-tolerance\u003c/code\u003e property controls the sensitivity in item placement.\u003c/p\u003e\n\n\u003cp\u003eIn the preceding example, you can apply \u003ccode translate=\"no\" dir=\"ltr\"\u003eitem-tolerance: 10px;\u003c/code\u003e to your\ncontainer to customize the variability in item placement:\u003c/p\u003e\n\u003cdevsite-code\u003e\u003cpre translate=\"no\" dir=\"ltr\" is-upgraded=\"\" syntax=\"CSS\"\u003e\u003ccode translate=\"no\" dir=\"ltr\"\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003emasonry\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e{\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003edisplay\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003emasonry\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003emasonry\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e200\u003c/span\u003e\u003cspan\u003epx\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e200\u003c/span\u003e\u003cspan\u003epx\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003egap\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e10\u003c/span\u003e\u003cspan\u003epx\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e  \u003c/span\u003e\u003cspan\u003eitem-tolerance\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan\u003e10\u003c/span\u003e\u003cspan\u003epx\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/devsite-code\u003e\n\u003cfigure\u003e\n  \u003cimg src=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--va1g4if5cf.jpg\" alt=\"A two column masonry layout.\" srcset=\"https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--va1g4if5cf_36.jpg 36w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--va1g4if5cf_48.jpg 48w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--va1g4if5cf_72.jpg 72w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--va1g4if5cf_96.jpg 96w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--va1g4if5cf_480.jpg 480w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--va1g4if5cf_720.jpg 720w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--va1g4if5cf_856.jpg 856w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--va1g4if5cf_960.jpg 960w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--va1g4if5cf_1440.jpg 1440w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--va1g4if5cf_1920.jpg 1920w,https://developer.chrome.com/static/blog/masonry-update/image/masonrydevtria--va1g4if5cf_2880.jpg 2880w\" sizes=\"(max-width: 840px) 100vw, 856px\"/\u003e\n  \u003cfigcaption\u003e\u003ca href=\"https://microsoftedge.github.io/Demos/css-masonry/syntax-examples/item-tolerance.html\"\u003eView the item tolerance demo here\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eNote that the draft\n\u003ca href=\"https://drafts.csswg.org/css-grid-3/#item-slack\"\u003especification\u003c/a\u003e calls this\nproperty \u003ccode translate=\"no\" dir=\"ltr\"\u003eitem-slack\u003c/code\u003e. The CSS Working Group recently resolved to use\n\u003ccode translate=\"no\" dir=\"ltr\"\u003eitem-tolerance\u003c/code\u003e as the name instead, and the spec will be updated soon.\u003c/p\u003e\n\n\u003ch3 id=\"other-properties\" data-text=\"Other available properties\" tabindex=\"-1\"\u003eOther available properties\u003c/h3\u003e\n\n\u003cp\u003eYou can use the same template sizing and placement properties to size and place\nitems in the grid axis of a masonry container as you can with CSS Grid, such as\n\u003ccode translate=\"no\" dir=\"ltr\"\u003egrid-row\u003c/code\u003e, \u003ccode translate=\"no\" dir=\"ltr\"\u003egrid-column\u003c/code\u003e, \u003ccode translate=\"no\" dir=\"ltr\"\u003egrid-area\u003c/code\u003e, \u003ccode translate=\"no\" dir=\"ltr\"\u003egrid-template-areas\u003c/code\u003e, or \u003ccode translate=\"no\" dir=\"ltr\"\u003eorder\u003c/code\u003e.\nExperience the full power of CSS grid when creating your masonry layout.\u003c/p\u003e\n\n\u003ch2 id=\"call-feedback\" data-text=\"Call for feedback\" tabindex=\"-1\"\u003eCall for feedback\u003c/h2\u003e\n\n\u003cp\u003eWe can\u0026#39;t wait for you to explore CSS masonry, get creative, and discover the new\ncapabilities it can help you unlock. A great way to get started is to \u003ca href=\"https://microsoftedge.github.io/Demos/css-masonry/\"\u003echeck our\ndemos\u003c/a\u003e and their \u003ca href=\"https://github.com/MicrosoftEdge/Demos/tree/main/css-masonry\"\u003esource\ncode\u003c/a\u003e and start\nbuilding your own examples in Chromium (remember to \u003ca href=\"https://developer.chrome.com/blog/masonry-update/?tab=t.0#heading=h.9gs2aj3b2fao\"\u003eenable the flag\nfirst\u003c/a\u003e).\u003c/p\u003e\n\n\u003cp\u003eYour feedback is important in helping us shape the API and check that it\u0026#39;s\ndesigned to meet your needs on the web. Give masonry a try and let us\nknow what you think!\u003c/p\u003e\n\n\u003cp\u003eIf you have thoughts or feedback on the shape of the API, let us know by\ncommenting on \u003ca href=\"https://www.google.com/url?q=https://github.com/w3c/csswg-drafts/issues/11243\u0026amp;sa=D\u0026amp;source=docs\u0026amp;ust=1752017455379549\u0026amp;usg=AOvVaw2YpgAahr_TXxt4IMpZFpYi\"\u003eIssue\n11243\u003c/a\u003e\nor, if you prefer to write a post on your own blog or on social media, be sure\nto let us know on \u003ca href=\"https://x.com/ChromiumDev\"\u003eX\u003c/a\u003e or\n\u003ca href=\"https://www.linkedin.com/showcase/chrome-for-developers\"\u003eLinkedIn\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eCSS masonry is still being implemented in Chromium. If you do test it, be aware\nthat we\u0026#39;re still actively working on it and that you may encounter cases where\nit doesn\u0026#39;t behave as expected. Some of the current limitations include dense\npacking, reverse placement, subgrid support, out-of-flow support, baseline\nsupport, DevTools support, fragmentation support, gap decoration support, among\nothers.\u003c/p\u003e\n\n\u003cp\u003eIf you find a bug while testing out the feature, share your feedback by opening\na \u003ca href=\"https://issues.chromium.org/issues/new?component=1456721\u0026amp;template=0\"\u003enew Chromium\nbug\u003c/a\u003e.\u003c/p\u003e\n\n  \n\n  \n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "16 min read",
  "publishedTime": null,
  "modifiedTime": null
}
