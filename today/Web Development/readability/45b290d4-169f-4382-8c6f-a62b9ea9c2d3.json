{
  "id": "45b290d4-169f-4382-8c6f-a62b9ea9c2d3",
  "title": "How to Detect Failed Requests via Web Extensions",
  "link": "https://davidwalsh.name/browser-webrequest-onerroroccurred",
  "description": "One of the best things that ever happened to t he user experience of the web has been web extensions. Browsers are powerful but extensions bring a new level of functionality. Whether it’s crypto wallets, media players, or other popular plugins, web extensions have become essential to every day tasks. Working on MetaMask, I am […] The post How to Detect Failed Requests via Web Extensions appeared first on David Walsh Blog.",
  "author": "David Walsh",
  "published": "Mon, 02 Oct 2023 13:37:25 +0000",
  "source": "https://davidwalsh.name/feed",
  "categories": [
    "JavaScript",
    "Promises"
  ],
  "byline": "David Walsh",
  "length": 2870,
  "excerpt": "One of the best things that ever happened to t he user experience of the web has been web extensions. Browsers are powerful but extensions bring a new",
  "siteName": "David Walsh Blog",
  "favicon": "https://davidwalsh.name/wp-content/themes/punky/images/favicon-144.png",
  "text": "One of the best things that ever happened to t he user experience of the web has been web extensions. Browsers are powerful but extensions bring a new level of functionality. Whether it's crypto wallets, media players, or other popular plugins, web extensions have become essential to every day tasks. Working on MetaMask, I am thrust into a world of making everything Ethereum-centric work. One of those functionalities is ensuring that .eth domains resolve to ENS when input to the address bar. Requests to https://vitalik.ethnaturally fail, since .eth isn't a natively supported top level domain, so we need to intercept this errant request. // Add an onErrorOccurred event via the browser.webRequest extension API browser.webRequest.onErrorOccurred.addListener((details) =\u003e { const { tabId, url } = details; const { hostname } = new URL(url); if(hostname.endsWith('.eth')) { // Redirect to wherever I want the user to go browser.tabs.update(tabId, { url: `https://app.ens.domains/${hostname}}` }); } }, { urls:[`*://*.eth/*`], types: ['main_frame'], }); Web extensions provide a browser.webRequest.onErrorOccurred method that developers can plug into to listen for errant requests. This API does not catch 4** and 5** response errors. In the case above, we look for .eth hostnames and redirect to ENS. You could employ onErrorOccurred for any number of reasons, but detecting custom hostnames is a great one! Recent FeaturesCreating Scrolling Parallax Effects with CSSIntroduction For quite a long time now websites with the so called \"parallax\" effect have been really popular. In case you have not heard of this effect, it basically includes different layers of images that are moving in different directions or with different speed. This leads to a...9 Mind-Blowing WebGL DemosAs much as developers now loathe Flash, we're still playing a bit of catch up to natively duplicate the animation capabilities that Adobe's old technology provided us.  Of course we have canvas, an awesome technology, one which I highlighted 9 mind-blowing demos.  Another technology available...Incredible DemosHTML5 DatalistOne of the most used JavaScript widgets over the past decade has been the text box autocomplete widget.  Every JavaScript framework has their own autocomplete widget and many of them have become quite advanced.  Much like the placeholder attribute's introduction to markup, a frequently used...MooTools TextOverlap Plugin Developers everywhere seem to be looking for different ways to make use of JavaScript libraries. Some creations are extremely practical, others aren't. This one may be more on the \"aren't\" side but used correctly, my TextOverlap plugin could add another interesting design element...",
  "image": "https://davidwalsh.name/wp-content/themes/punky/images/logo.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cmain id=\"main\"\u003e\u003carticle itemscope=\"\" itemtype=\"http://schema.org/Article\"\u003e\n\u003cp\u003eOne of the best things that ever happened to t he user experience of the web has been web extensions.  Browsers are powerful but extensions bring a new level of functionality.  Whether it\u0026#39;s crypto wallets, media players, or other popular plugins, web extensions have become essential to every day tasks.\u003c/p\u003e\n\n\n\n\u003cp\u003eWorking on MetaMask, I am thrust into a world of making everything Ethereum-centric work.  One of those functionalities is ensuring that \u003ccode\u003e.eth\u003c/code\u003e domains resolve to ENS when input to the address bar.  Requests to \u003ccode\u003ehttps://vitalik.eth\u003c/code\u003enaturally fail, since \u003ccode\u003e.eth\u003c/code\u003e isn\u0026#39;t a natively supported top level domain, so we need to intercept this errant request.\u003c/p\u003e\n\n\n\n\u003cpre\u003e// Add an onErrorOccurred event via the browser.webRequest extension API\nbrowser.webRequest.onErrorOccurred.addListener((details) =\u0026gt; {\n  const { tabId, url } = details;\n  const { hostname } = new URL(url);\n\n  if(hostname.endsWith(\u0026#39;.eth\u0026#39;)) {\n    // Redirect to wherever I want the user to go\n    browser.tabs.update(tabId, { url: `https://app.ens.domains/${hostname}}` });\n  }\n},\n{\n  urls:[`*://*.eth/*`],\n  types: [\u0026#39;main_frame\u0026#39;],\n});\n\u003c/pre\u003e\n\n\n\n\u003cp\u003eWeb extensions provide a \u003ccode\u003ebrowser.webRequest.onErrorOccurred\u003c/code\u003e method that developers can plug into to listen for errant requests.  This API does \u003cem\u003enot\u003c/em\u003e catch \u003ccode\u003e4**\u003c/code\u003e and \u003ccode\u003e5**\u003c/code\u003e response errors.  In the case above, we look for \u003ccode\u003e.eth\u003c/code\u003e hostnames and redirect to ENS.\u003c/p\u003e\n\n\n\n\u003cp\u003eYou could employ \u003ccode\u003eonErrorOccurred\u003c/code\u003e for any number of reasons, but detecting custom hostnames is a great one!\u003c/p\u003e\n\n\n\n\u003cdiv\u003e\n    \n    \n    \u003cp\u003e\u003ca href=\"https://requestmetrics.com/?utm_source=davidwalsh\"\u003e\n        \u003cimg src=\"https://davidwalsh.name/demo/rm_perf_banner-728.min.svg\" alt=\"Request Metrics real user monitoring\" loading=\"lazy\" width=\"728\" height=\"90\"/\u003e\n    \u003c/a\u003e\n    \u003c/p\u003e\n    \u003cp\u003e\u003ca href=\"https://requestmetrics.com/?utm_source=davidwalsh\"\u003e\n        \u003cimg src=\"https://davidwalsh.name/demo/rm_perf_block_300.min.svg\" alt=\"Request Metrics real user monitoring\" loading=\"lazy\" width=\"300\" height=\"250\"/\u003e\n    \u003c/a\u003e\n    \u003c/p\u003e\n\u003c/div\u003e\n\n\n\n\n\n\u003c/article\u003e\n\n\u003cdiv\u003e\n  \n    \n    \n\u003cp\u003e\u003ca href=\"https://requestmetrics.com/?utm_source=davidwalsh\"\u003e\n    \u003cimg src=\"https://davidwalsh.name/demo/rm_perf_banner-728.min.svg\" alt=\"Request Metrics real user monitoring\" loading=\"lazy\" width=\"728\" height=\"90\"/\u003e\n  \u003c/a\u003e\n\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://requestmetrics.com/?utm_source=davidwalsh\"\u003e\n    \u003cimg src=\"https://davidwalsh.name/demo/rm_perf_block_300.min.svg\" alt=\"Request Metrics real user monitoring\" loading=\"lazy\" width=\"300\" height=\"250\"/\u003e\n  \u003c/a\u003e\n\u003c/p\u003e\n\n  \n\n\u003c/div\u003e\n\n\n\u003cdiv\u003e\u003ch2\u003e\u003ca href=\"https://davidwalsh.name/tutorials/features\"\u003eRecent Features\u003ci\u003e\u003c/i\u003e\u003c/a\u003e\u003c/h2\u003e\u003cul\u003e\u003cli data-url=\"https://davidwalsh.name/parallax\" itemscope=\"\" itemtype=\"http://schema.org/Article\"\u003e\u003cspan itemscope=\"\" itemtype=\"https://schema.org/ImageObject\"\u003e\u003cimg data-src=\"https://davidwalsh.name/demo/stefan.jpeg?preview\" alt=\"Creating Scrolling Parallax Effects with CSS\" src=\"https://davidwalsh.name/demo/stefan.jpeg?preview\"/\u003e\u003c/span\u003e\u003cdiv\u003e\u003ch3 itemprop=\"name\"\u003e\u003ca href=\"https://davidwalsh.name/parallax\" itemprop=\"url\"\u003eCreating Scrolling Parallax Effects with CSS\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eIntroduction\nFor quite a long time now websites with the so called \u0026#34;parallax\u0026#34; effect have been really popular.\nIn case you have not heard of this effect, it basically includes different layers of images that are moving in different directions or with different speed. This leads to a...\u003c/p\u003e\u003c/div\u003e\u003c/li\u003e\u003cli data-url=\"https://davidwalsh.name/webgl-demos\" itemscope=\"\" itemtype=\"http://schema.org/Article\"\u003e\u003cspan itemscope=\"\" itemtype=\"https://schema.org/ImageObject\"\u003e\u003cimg data-src=\"https://davidwalsh.name/demo/webgl-maze.jpg?preview\" alt=\"9 Mind-Blowing WebGL Demos\" src=\"https://davidwalsh.name/demo/webgl-maze.jpg?preview\"/\u003e\u003c/span\u003e\u003cdiv\u003e\u003ch3 itemprop=\"name\"\u003e\u003ca href=\"https://davidwalsh.name/webgl-demos\" itemprop=\"url\"\u003e9 Mind-Blowing WebGL Demos\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eAs much as developers now loathe Flash, we\u0026#39;re still playing a bit of catch up to natively duplicate the animation capabilities that Adobe\u0026#39;s old technology provided us.  Of course we have \u003ca href=\"https://davidwalsh.name/tutorials/canvas\"\u003ecanvas\u003c/a\u003e, an awesome technology, one which I highlighted \u003ca href=\"https://davidwalsh.name/canvas-demos\"\u003e9 mind-blowing demos\u003c/a\u003e.  Another technology available...\u003c/p\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003cdiv\u003e\u003ch2\u003e\u003ca href=\"https://davidwalsh.name/tutorials/demos\"\u003eIncredible Demos\u003ci\u003e\u003c/i\u003e\u003c/a\u003e\u003c/h2\u003e\u003cul\u003e\u003cli data-url=\"https://davidwalsh.name/datalist\" itemscope=\"\" itemtype=\"http://schema.org/Article\"\u003e\u003cspan itemscope=\"\" itemtype=\"https://schema.org/ImageObject\"\u003e\u003cimg data-src=\"/demo/html5250.png?preview\" alt=\"HTML5 Datalist\" src=\"https://davidwalsh.name/demo/html5250.png?preview\"/\u003e\u003c/span\u003e\u003cdiv\u003e\u003ch3 itemprop=\"name\"\u003e\u003ca href=\"https://davidwalsh.name/datalist\" itemprop=\"url\"\u003eHTML5 Datalist\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eOne of the most used JavaScript widgets over the past decade has been the text box autocomplete widget.  Every JavaScript framework has their own autocomplete widget and many of them have become quite advanced.  Much like the \u003ca href=\"https://davidwalsh.name/html5-placeholder\"\u003eplaceholder attribute\u003c/a\u003e\u0026#39;s introduction to markup, a frequently used...\u003c/p\u003e\u003c/div\u003e\u003c/li\u003e\u003cli data-url=\"https://davidwalsh.name/mootools-text-overlap-plugin\" itemscope=\"\" itemtype=\"http://schema.org/Article\"\u003e\u003cspan itemscope=\"\" itemtype=\"https://schema.org/ImageObject\"\u003e\u003cimg data-src=\"https://davidwalsh.name/demo/overlap.jpg?preview\" alt=\"MooTools TextOverlap Plugin\" src=\"https://davidwalsh.name/demo/overlap.jpg?preview\"/\u003e\u003c/span\u003e\u003cdiv\u003e\u003ch3 itemprop=\"name\"\u003e\u003ca href=\"https://davidwalsh.name/mootools-text-overlap-plugin\" itemprop=\"url\"\u003eMooTools TextOverlap Plugin\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e\u003ca href=\"https://davidwalsh.name/demo/overlap-text.php\"\u003e\u003c/a\u003e\n\nDevelopers everywhere seem to be looking for different ways to make use of JavaScript libraries.  Some creations are extremely practical, others aren\u0026#39;t.  This one may be more on the \u0026#34;aren\u0026#39;t\u0026#34; side but used correctly, my TextOverlap plugin could add another interesting design element...\u003c/p\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/main\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": "2023-10-02T13:37:25Z",
  "modifiedTime": null
}
