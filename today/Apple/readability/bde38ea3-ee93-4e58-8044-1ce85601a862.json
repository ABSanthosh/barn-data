{
  "id": "bde38ea3-ee93-4e58-8044-1ce85601a862",
  "title": "Low Power Mode on the Mac",
  "link": "https://marco.org/2018/07/31/mac-low-power-mode",
  "description": "Laptop battery life is decreasingly relevant to me as more airplanes offer power outlets. But sometimes you lose that lottery, as I did on my latest 8-hour daytime flight. Apple’s “Up to 10 hours” claim doesn’t apply to my work,1 which is usually a mix of Xcode, web browsing, and social time-wasting, so I knew I’d have to seriously conserve power. Sometimes, you just need Low Power Mode: the switch added to iOS a few years ago to conserve battery life when you need it, at the expense of full performance and background tasks. There’s no such feature on Mac laptops, but there should be. It could: Disable the discrete GPU on 15-inch models unless required for hardware reasons2 Pause Photos syncing and analysis Pause Spotlight indexing Reduce the frequency of Time Machine backups Don’t download or install software updates Don’t download new content in iTunes Auto-dim the screen after a shorter time Let third-party apps detect Low Power Mode and reduce their background operations to only essential work And the big one: Reduce the processor’s maximum wattage or disable Turbo Boost Back in 2015, I experimented with disabling Turbo Boost and discovered that it reduced performance by about a third, but also boosted battery life by almost as much. Since then, I’ve been running Turbo Boost Switcher Pro to automatically disable Turbo Boost when I’m running on battery power, and it has been wonderful: I made it through that 8-hour flight only because Turbo Boost was off. Over the last few days, I’ve run battery tests on my 2018 13-inch MacBook Pro with the (awesome) 2.7 GHz i7 and my 2015 2.2 GHz 15-inch3 to see how far I could push the battery life using Volta, which can disable Turbo Boost and/or set wattage limits on the CPU. My test was based on the “Heavy” script from last time, but using xcodebuild every few minutes with Overcast’s current codebase (which is larger and includes some Swift). Improvements are in green and performance reductions are in red: \u003c!-- .turboboosttable { margin: 2em auto; border-collapse: collapse; } .turboboosttable th, .turboboosttable td { text-align: center; border: 1px solid #f4f4f4; padding: 0.5em; } .turboboosttable th { width: 15%; } .turboboosttable th.lcol { text-align: right; } .turboboosttable th.notbold { font-weight: normal; } .turboboosttable th { background-color: #f4f4f4; } .turboboosttable .lightslash { opacity: 0.33; } .turboboosttable td.noturbo { background-color: #f8f8f8; } .turboboosttable .perfminus { color: #a00; } .turboboosttable .perfplus { color: #0a0; } --\u003e 15-inch 2015 MacBook Pro (2.2 GHz quad-core i7)   Battery life Geekbench single/multi xcodebuild Normal 3:36 3963/13864 43.9s No Turbo 5:06+42% 2796/9917−29/28% 63.4s+44% 13-inch 2018 MacBook Pro (2.7 GHz quad-core i7)   Battery life Geekbench single/multi xcodebuild Normal 3:09 5412/18983 34.3s 28W 3:28+10% 5401/16326−0/14% 37.4s+9% 18W 4:05+29% 5248/14133−3/26% 43.5s+27% 12W 4:44+50% 4818/11835−11/38% 48.2s+41% No Turbo 5:05+61% 3624/13324−33/30% 48.9s+43% 6W 6:24+103% 4065/7596−25/60% 76.1s+121% It’s impressive how much faster this new 13-inch model is than the best laptop ever made due to significant CPU and SSD improvements. Dropping the wattage to 6W, the thermal limit of the fanless 12-inch MacBook, interestingly (but not surprisingly) makes it perform effectively identically to the best 12-inch MacBook in Geekbench. This is an extreme option, but one I’d occasionally take if offered. It roughly doubles compilation times, but also doubles the battery life. This ratio holds for most other configurations: the gain in battery life is about as large as the loss in heavy-workload performance. That’s a trade-off I’d gladly make when I need to maximize runtime. The best bang-for-the-buck option is still to just disable Turbo Boost. Single-threaded performance hurts more than with wattage-limiting, but it’s able to maintain better multi-threaded performance and more consistent thermals, and gets a larger battery gain relative to its performance loss. And Volta, which offers both wattage limits and Turbo disabling, requires disabling System Integrity Protection to install an unsigned kernel extension, which I really don’t recommend. Turbo Boost Switcher, which doesn’t offer wattage control, works with SIP using a signed extension and its Pro version has more convenient features for automatic toggling. For now, I’m going to continue to happily run Turbo Boost Switcher Pro to selectively give myself better battery life, and I recommend it for anyone else with the same need. But what I ultimately want is for a true Low Power Mode built into macOS that could provide this sort of CPU throttling and software changes, which would ultimately achieve even greater gains. Whose work does get 10 hours out of a MacBook Pro? None of the use-cases on the marketing page — Photography, Coding, Video Editing, 3D Graphics, and Gaming — are likely to achieve even half of that in practice. ↩︎ I’ve heard that 15-inch models are wired such that the discrete GPU is required when external displays are connected. Otherwise, whether it’s used or not is a software decision, and gfxCardStatus can override it in certain conditions. ↩︎ It’s not brand new, so it’s not a perfect comparison, but the battery only had 90 cycles before this test. ↩︎",
  "author": "",
  "published": "Tue, 31 Jul 2018 15:12:17 EDT",
  "source": "https://marco.org/rss",
  "categories": null,
  "byline": "Marco Arment",
  "length": 4768,
  "excerpt": "July 31, 2018 ∞https://marco.org/2018/07/31/mac-low-power-mode",
  "siteName": "",
  "favicon": "https://marco.org/apple-touch-icon.png",
  "text": "Low Power Mode on the Mac July 31, 2018 ∞https://marco.org/2018/07/31/mac-low-power-mode Laptop battery life is decreasingly relevant to me as more airplanes offer power outlets. But sometimes you lose that lottery, as I did on my latest 8-hour daytime flight. Apple’s “Up to 10 hours” claim doesn’t apply to my work,1 which is usually a mix of Xcode, web browsing, and social time-wasting, so I knew I’d have to seriously conserve power. Sometimes, you just need Low Power Mode: the switch added to iOS a few years ago to conserve battery life when you need it, at the expense of full performance and background tasks. There’s no such feature on Mac laptops, but there should be. It could: Disable the discrete GPU on 15-inch models unless required for hardware reasons2 Pause Photos syncing and analysis Pause Spotlight indexing Reduce the frequency of Time Machine backups Don’t download or install software updates Don’t download new content in iTunes Auto-dim the screen after a shorter time Let third-party apps detect Low Power Mode and reduce their background operations to only essential work And the big one: Reduce the processor’s maximum wattage or disable Turbo Boost Back in 2015, I experimented with disabling Turbo Boost and discovered that it reduced performance by about a third, but also boosted battery life by almost as much. Since then, I’ve been running Turbo Boost Switcher Pro to automatically disable Turbo Boost when I’m running on battery power, and it has been wonderful: I made it through that 8-hour flight only because Turbo Boost was off. Over the last few days, I’ve run battery tests on my 2018 13-inch MacBook Pro with the (awesome) 2.7 GHz i7 and my 2015 2.2 GHz 15-inch3 to see how far I could push the battery life using Volta, which can disable Turbo Boost and/or set wattage limits on the CPU. My test was based on the “Heavy” script from last time, but using xcodebuild every few minutes with Overcast’s current codebase (which is larger and includes some Swift). Improvements are in green and performance reductions are in red: 15-inch 2015 MacBook Pro (2.2 GHz quad-core i7)   Battery life Geekbench single/multi xcodebuild Normal 3:36 3963/13864 43.9s No Turbo 5:06+42% 2796/9917−29/28% 63.4s+44% 13-inch 2018 MacBook Pro (2.7 GHz quad-core i7)   Battery life Geekbench single/multi xcodebuild Normal 3:09 5412/18983 34.3s 28W 3:28+10% 5401/16326−0/14% 37.4s+9% 18W 4:05+29% 5248/14133−3/26% 43.5s+27% 12W 4:44+50% 4818/11835−11/38% 48.2s+41% No Turbo 5:05+61% 3624/13324−33/30% 48.9s+43% 6W 6:24+103% 4065/7596−25/60% 76.1s+121% It’s impressive how much faster this new 13-inch model is than the best laptop ever made due to significant CPU and SSD improvements. Dropping the wattage to 6W, the thermal limit of the fanless 12-inch MacBook, interestingly (but not surprisingly) makes it perform effectively identically to the best 12-inch MacBook in Geekbench. This is an extreme option, but one I’d occasionally take if offered. It roughly doubles compilation times, but also doubles the battery life. This ratio holds for most other configurations: the gain in battery life is about as large as the loss in heavy-workload performance. That’s a trade-off I’d gladly make when I need to maximize runtime. The best bang-for-the-buck option is still to just disable Turbo Boost. Single-threaded performance hurts more than with wattage-limiting, but it’s able to maintain better multi-threaded performance and more consistent thermals, and gets a larger battery gain relative to its performance loss. And Volta, which offers both wattage limits and Turbo disabling, requires disabling System Integrity Protection to install an unsigned kernel extension, which I really don’t recommend. Turbo Boost Switcher, which doesn’t offer wattage control, works with SIP using a signed extension and its Pro version has more convenient features for automatic toggling. For now, I’m going to continue to happily run Turbo Boost Switcher Pro to selectively give myself better battery life, and I recommend it for anyone else with the same need. But what I ultimately want is for a true Low Power Mode built into macOS that could provide this sort of CPU throttling and software changes, which would ultimately achieve even greater gains.",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003carticle\u003e\n                        \u003cheader\u003e\n                                                            \u003ch2\u003e\n                                    \u003ca href=\"https://marco.org/2018/07/31/mac-low-power-mode\"\u003eLow Power Mode on the Mac\u003c/a\u003e\n                                                                    \u003c/h2\u003e\n                            \n                            \u003cp\u003e\n                                \u003ctime datetime=\"2018-07-31T15:12:17-04:00\" pubdate=\"pubdate\"\u003eJuly 31, 2018\u003c/time\u003e\n                                \u003ca title=\"Permalink\" href=\"https://marco.org/2018/07/31/mac-low-power-mode\"\u003e\u003cspan\u003e∞\u003c/span\u003e\u003cspan\u003ehttps://marco.org/2018/07/31/mac-low-power-mode\u003c/span\u003e\u003c/a\u003e\n                            \u003c/p\u003e\n                        \u003c/header\u003e\n                    \n                        \u003cp\u003eLaptop battery life is decreasingly relevant to me as more airplanes offer power outlets. But sometimes you lose that lottery, as I did on my latest 8-hour daytime flight.\u003c/p\u003e\n\n\u003cp\u003eApple’s “Up to 10 hours” claim doesn’t apply to my work,\u003csup id=\"fnref:pfKDuWxMd1\"\u003e\u003ca href=\"#fn:pfKDuWxMd1\" rel=\"footnote\"\u003e1\u003c/a\u003e\u003c/sup\u003e which is usually a mix of Xcode, web browsing, and social time-wasting, so I knew I’d have to seriously conserve power.\u003c/p\u003e\n\n\u003cp\u003eSometimes, you just need Low Power Mode: the switch added to iOS a few years ago to conserve battery life when you need it, at the expense of full performance and background tasks.\u003c/p\u003e\n\n\u003cp\u003eThere’s no such feature on Mac laptops, but there should be. It could:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDisable the discrete GPU on 15-inch models unless required for hardware reasons\u003csup id=\"fnref:pfKDuWxMd2\"\u003e\u003ca href=\"#fn:pfKDuWxMd2\" rel=\"footnote\"\u003e2\u003c/a\u003e\u003c/sup\u003e\u003c/li\u003e\n\u003cli\u003ePause Photos syncing and analysis\u003c/li\u003e\n\u003cli\u003ePause Spotlight indexing\u003c/li\u003e\n\u003cli\u003eReduce the frequency of Time Machine backups\u003c/li\u003e\n\u003cli\u003eDon’t download or install software updates\u003c/li\u003e\n\u003cli\u003eDon’t download new content in iTunes\u003c/li\u003e\n\u003cli\u003eAuto-dim the screen after a shorter time\u003c/li\u003e\n\u003cli\u003eLet third-party apps detect Low Power Mode and reduce their background operations to only essential work\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAnd the big one:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eReduce the processor’s maximum wattage or disable \u003ca href=\"https://en.wikipedia.org/wiki/Intel_Turbo_Boost\"\u003eTurbo Boost\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eBack in 2015, I \u003ca href=\"https://marco.org/2015/06/07/disabling-turbo-boost\"\u003eexperimented with disabling Turbo Boost\u003c/a\u003e and discovered that it reduced performance by about a third, but also boosted battery life by almost as much. Since then, I’ve been running \u003ca href=\"https://www.rugarciap.com/turbo-boost-switcher-for-os-x/\"\u003eTurbo Boost Switcher Pro\u003c/a\u003e to automatically disable Turbo Boost when I’m running on battery power, and it has been wonderful: I made it through that 8-hour flight only because Turbo Boost was off.\u003c/p\u003e\n\n\u003cp\u003eOver the last few days, I’ve run battery tests on my 2018 13-inch MacBook Pro with the (awesome) 2.7 GHz i7 and my 2015 2.2 GHz 15-inch\u003csup id=\"fnref:pfKDuWxMd3\"\u003e\u003ca href=\"#fn:pfKDuWxMd3\" rel=\"footnote\"\u003e3\u003c/a\u003e\u003c/sup\u003e to see how far I could push the battery life using \u003ca href=\"http://volta.garymathews.com/\"\u003eVolta\u003c/a\u003e, which can disable Turbo Boost and/or set wattage limits on the CPU.\u003c/p\u003e\n\n\u003cp\u003eMy test was based on the “Heavy” script \u003ca href=\"https://marco.org/2015/06/07/disabling-turbo-boost\"\u003efrom last time\u003c/a\u003e, but using \u003ccode\u003excodebuild\u003c/code\u003e every few minutes with Overcast’s current codebase (which is larger and includes some Swift). Improvements are in green and performance reductions are in red:\u003c/p\u003e\n\n\n\n\u003ch3\u003e15-inch 2015 MacBook Pro (2.2 GHz quad-core i7)\u003c/h3\u003e\n\n\u003ctable\u003e\n\u003ctbody\u003e\u003ctr\u003e\n    \u003cth\u003e \u003c/th\u003e\n    \u003cth\u003eBattery life\u003c/th\u003e\n    \u003cth\u003eGeekbench single/multi\u003c/th\u003e\n    \u003cth\u003excodebuild\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n    \u003cth\u003eNormal\u003c/th\u003e\n    \u003ctd\u003e3:36\u003c/td\u003e\n    \u003ctd\u003e3963\u003cspan\u003e/\u003c/span\u003e13864\u003c/td\u003e\n    \u003ctd\u003e43.9s\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n    \u003cth\u003eNo Turbo\u003c/th\u003e\n    \u003ctd\u003e5:06\u003cp\u003e+42%\u003c/p\u003e\u003c/td\u003e\n    \u003ctd\u003e2796\u003cspan\u003e/\u003c/span\u003e9917\u003cp\u003e−29\u003cspan\u003e/\u003c/span\u003e28%\u003c/p\u003e\u003c/td\u003e\n    \u003ctd\u003e63.4s\u003cp\u003e+44%\u003c/p\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\n\u003ch3\u003e13-inch 2018 MacBook Pro (2.7 GHz quad-core i7)\u003c/h3\u003e\n\n\u003ctable\u003e\n\u003ctbody\u003e\u003ctr\u003e\n    \u003cth\u003e \u003c/th\u003e\n    \u003cth\u003eBattery life\u003c/th\u003e\n    \u003cth\u003eGeekbench single/multi\u003c/th\u003e\n    \u003cth\u003excodebuild\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n    \u003cth\u003eNormal\u003c/th\u003e\n    \u003ctd\u003e3:09\u003c/td\u003e\n    \u003ctd\u003e5412\u003cspan\u003e/\u003c/span\u003e18983\u003c/td\u003e\n    \u003ctd\u003e34.3s\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n    \u003cth\u003e28W\u003c/th\u003e\n    \u003ctd\u003e3:28\u003cp\u003e+10%\u003c/p\u003e\u003c/td\u003e\n    \u003ctd\u003e5401\u003cspan\u003e/\u003c/span\u003e16326\u003cp\u003e−0\u003cspan\u003e/\u003c/span\u003e14%\u003c/p\u003e\u003c/td\u003e\n    \u003ctd\u003e37.4s\u003cp\u003e+9%\u003c/p\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n    \u003cth\u003e18W\u003c/th\u003e\n    \u003ctd\u003e4:05\u003cp\u003e+29%\u003c/p\u003e\u003c/td\u003e\n    \u003ctd\u003e5248\u003cspan\u003e/\u003c/span\u003e14133\u003cp\u003e−3\u003cspan\u003e/\u003c/span\u003e26%\u003c/p\u003e\u003c/td\u003e\n    \u003ctd\u003e43.5s\u003cp\u003e+27%\u003c/p\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n    \u003cth\u003e12W\u003c/th\u003e\n    \u003ctd\u003e4:44\u003cp\u003e+50%\u003c/p\u003e\u003c/td\u003e\n    \u003ctd\u003e4818\u003cspan\u003e/\u003c/span\u003e11835\u003cp\u003e−11\u003cspan\u003e/\u003c/span\u003e38%\u003c/p\u003e\u003c/td\u003e\n    \u003ctd\u003e48.2s\u003cp\u003e+41%\u003c/p\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n    \u003cth\u003eNo Turbo\u003c/th\u003e\n    \u003ctd\u003e5:05\u003cp\u003e+61%\u003c/p\u003e\u003c/td\u003e\n    \u003ctd\u003e3624\u003cspan\u003e/\u003c/span\u003e13324\u003cp\u003e−33\u003cspan\u003e/\u003c/span\u003e30%\u003c/p\u003e\u003c/td\u003e\n    \u003ctd\u003e48.9s\u003cp\u003e+43%\u003c/p\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n    \u003cth\u003e6W\u003c/th\u003e\n    \u003ctd\u003e6:24\u003cp\u003e+103%\u003c/p\u003e\u003c/td\u003e\n    \u003ctd\u003e4065\u003cspan\u003e/\u003c/span\u003e7596\u003cp\u003e−25\u003cspan\u003e/\u003c/span\u003e60%\u003c/p\u003e\u003c/td\u003e\n    \u003ctd\u003e76.1s\u003cp\u003e+121%\u003c/p\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\n\u003cp\u003eIt’s impressive how much faster this new 13-inch model is than \u003ca href=\"https://marco.org/2017/11/14/best-laptop-ever\"\u003ethe best laptop ever made\u003c/a\u003e due to significant CPU and SSD improvements.\u003c/p\u003e\n\n\u003cp\u003eDropping the wattage to 6W, the thermal limit of the fanless 12-inch MacBook, interestingly (but not surprisingly) makes it perform effectively identically to the \u003ca href=\"https://browser.geekbench.com/macs/422\"\u003ebest 12-inch MacBook\u003c/a\u003e in Geekbench. This is an extreme option, but one I’d occasionally take if offered. It roughly doubles compilation times, but also doubles the battery life.\u003c/p\u003e\n\n\u003cp\u003eThis ratio holds for most other configurations: the gain in battery life is about as large as the loss in heavy-workload performance. That’s a trade-off I’d gladly make when I need to maximize runtime.\u003c/p\u003e\n\n\u003cp\u003eThe best bang-for-the-buck option is still to just disable Turbo Boost. Single-threaded performance hurts more than with wattage-limiting, but it’s able to maintain better multi-threaded performance and more consistent thermals, and gets a larger battery gain relative to its performance loss.\u003c/p\u003e\n\n\u003cp\u003eAnd Volta, which offers both wattage limits and Turbo disabling, requires disabling System Integrity Protection to install an unsigned kernel extension, which I really don’t recommend. Turbo Boost Switcher, which doesn’t offer wattage control, works with SIP using a signed extension and its Pro version has more convenient features for automatic toggling.\u003c/p\u003e\n\n\u003cp\u003eFor now, I’m going to continue to happily run \u003ca href=\"https://www.rugarciap.com/turbo-boost-switcher-for-os-x/\"\u003eTurbo Boost Switcher Pro\u003c/a\u003e to selectively give myself better battery life, and I recommend it for anyone else with the same need.\u003c/p\u003e\n\n\u003cp\u003eBut what I ultimately want is for a true Low Power Mode built into macOS that could provide this sort of CPU throttling \u003cem\u003eand\u003c/em\u003e software changes, which would ultimately achieve even greater gains.\u003c/p\u003e\n\n\n                    \u003c/article\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": null,
  "modifiedTime": null
}
