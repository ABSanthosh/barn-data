{
  "id": "8c784f7b-ebc8-4ff2-b041-5e1d053a901c",
  "title": "Hands-On with Raycast’s New AI Extensions",
  "link": "https://www.macstories.net/reviews/hands-on-with-raycasts-new-ai-extensions/",
  "description": "Yesterday, Raycast unveiled AI Extensions as yet another addition to the app’s ever-expanding feature set. As we’ve covered on MacStories before, Raycast is a powerful launcher and command bar for the Mac with a sizable ecosystem of built-in and third-party extensions. Extensions allow the launcher to integrate with apps installed on your Mac as well […]",
  "author": "Niléane",
  "published": "Fri, 28 Feb 2025 19:21:58 +0000",
  "source": "https://www.macstories.net/feed",
  "categories": [
    "reviews",
    "mac",
    "Raycast"
  ],
  "byline": "Niléane",
  "length": 6431,
  "excerpt": "Yesterday, Raycast unveiled AI Extensions as yet another addition to the app’s ever-expanding feature set. As we’ve covered on MacStories before, Raycast is a powerful launcher and command bar for the Mac with a sizable ecosystem of built-in and third-party extensions. Extensions allow the launcher to integrate with apps installed on your Mac as well",
  "siteName": "",
  "favicon": "https://www.macstories.net/app/themes/macstories4/images/apple-touch-icon-152x152-precomposed.png",
  "text": "Yesterday, Raycast unveiled AI Extensions as yet another addition to the app’s ever-expanding feature set. As we’ve covered on MacStories before, Raycast is a powerful launcher and command bar for the Mac with a sizable ecosystem of built-in and third-party extensions. Extensions allow the launcher to integrate with apps installed on your Mac as well as a multitude of online services such as Google Calendar, translation tools like DeepL, and even handy development tools like Color Picker and Git Commands. Starting this week, Raycast says it will be possible for any of these extensions to integrate with AI so they can be invoked with natural language directly from the app’s main command window and even chained together as part of complex workflows. Here are my first impressions. To start using AI-enabled extensions, head to the Raycast Store by typing the command “Store”, then select ‘AI Extensions’ in the dropdown menu of categories. When browsing the Store, you can identify AI-enabled extensions by the sparkle icon next to their download stats. As of writing, Raycast says it has already worked to enable AI for about 50 existing extensions. To invoke an AI-enabled Raycast extension, start typing a command with the “@“ symbol, and suggestions will highlight the ones you have installed. Once you’ve selected an AI extension, all you have to do is continue typing your command using natural language or choose one of the suggested prompts below the command field, where you will also find your recently used prompts for that extension. It’s easy to tell at first glance that AI Extensions mostly use LLMs as a layer of interaction for existing commands. For example, Raycast’s existing Apple Music extension allows you to search your music library and play albums, playlists, or individual tracks. While it is now AI-enabled, its capabilities remain limited to these specific functions. However, the addition of AI allows you to type in natural language and instruct the extension to chain together several of its existing commands to achieve the desired result. Here is how I prompted the extension to start playing an album from my library, even though I had forgotten its name, by searching for a specific song included in the album. In this instance, the Apple Music extension combined its ‘Get Library Albums’ and ‘Play Library Album’ commands to start playing the album I was looking for in the Music app: In their current state, AI Extensions often encounter errors such as the ones you see in the above screenshot, which regularly result in the prompt failing to complete because the extension isn’t able to move past the error. Raycast is seemingly aware of the feature’s flaky performance, as it is actively encouraging users to send feedback using the built-in feedback form during the beta phase. That being said, AI Extensions show a lot of potential, especially when you start to play with some of the more system-grounded extensions. One example of this is the Finder extension, which lets you manipulate files and folders in surprisingly complex operations. Here is how I was able to list the files contained in my Downloads folder, batch rename them, and then move them into a new folder: These prompts amount to a series of file operations that, considering the speed at which Raycast operates, could end up saving a lot of time when dealing with a large number of files and folders. The productivity gains are even more significant when you combine multiple AI Extensions together. For instance, after moving those PNG files into a new folder using the Finder extension, Raycast allows me to invoke any other AI Extension to follow up with those files – at least in theory. Here, I attempted to invoke the Apple Notes extension to attach a selection of my PNG images to a new note. The operation seemed to work at first, but Raycast kept asking for Full Disk Access in System Settings, even though I’d already granted that permission on my system: To be fair, I had more luck combining multiple AI Extensions in simpler operations that did not rely on manipulating files in Finder. For instance, here is how I was able to invoke the Weather extension to look up the sunset time for my location, then ask the Calendar extension to create an event at that time. In this case, I used Raycast’s dedicated AI chat window: On YouTube, the Raycast team has showcased several more complex use cases for AI Extensions: Even if it is hard at the moment to grasp the extent to which AI Extensions will be able to complement each other and create new types of workflows on the Mac, I’m glad to see Raycast move in this direction with its integration with LLMs. Putting in place a framework that can be leveraged by third-party developers and easily added to existing extensions seems like a great way to further position Raycast as a modular toolkit for a variety of use cases and workflows. Not only that, but Raycast’s approach with AI Extensions feels a lot closer to what I would have expected Apple to create with Shortcuts and Siri (or even Spotlight) as part of Apple Intelligence on the Mac. That being said, it will be interesting to see whether the Raycast team is able to resolve the recurrent errors AI Extensions currently run into. Reliability will be critical for AI Extensions to be embraced by the app’s paid subscribers and third-party extension developers. AI Extensions are now available in beta for Raycast Pro subscribers. Raycast Pro starts at $96/year. Access Extra Content and PerksFounded in 2015, Club MacStories has delivered exclusive content every week for nearly a decade. What started with weekly and monthly email newsletters has blossomed into a family of memberships designed every MacStories fan. Learn more here and from our Club FAQs. Club MacStories: Weekly and monthly newsletters via email and the web that are brimming with apps, tips, automation workflows, longform writing, early access to the MacStories Unwind podcast, periodic giveaways, and more; Club MacStories+: Everything that Club MacStories offers, plus an active Discord community, advanced search and custom RSS features for exploring the Club’s entire back catalog, bonus columns, and dozens of app discounts; Club Premier: All of the above and AppStories+, an extended version of our flagship podcast that’s delivered early, ad-free, and in high-bitrate audio.",
  "image": "https://cdn.macstories.net/raycast-ai-extensions-1740672667620.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n                        \n\u003cp id=\"p2\"\u003eYesterday, \u003ca href=\"https://www.raycast.com/\" rel=\"noopener noreferrer\"\u003eRaycast\u003c/a\u003e unveiled \u003ca href=\"https://www.youtube.com/watch?v=sHIlFKKaq0A\" rel=\"noopener noreferrer\"\u003eAI Extensions\u003c/a\u003e as yet another addition to the app’s ever-expanding feature set. As we’ve covered \u003ca href=\"https://www.macstories.net/roundups/adding-to-my-macs-swiss-army-knife-a-raycast-extension-roundup/\" rel=\"noopener noreferrer\"\u003eon MacStories\u003c/a\u003e before, Raycast is a powerful launcher and command bar for the Mac with a sizable ecosystem of built-in and third-party extensions. Extensions allow the launcher to integrate with apps installed on your Mac as well as a multitude of online services such as Google Calendar, translation tools like \u003ca href=\"https://www.raycast.com/mooxl/deepcast\" rel=\"noopener noreferrer\"\u003eDeepL\u003c/a\u003e, and even handy development tools like \u003ca href=\"https://www.raycast.com/thomas/color-picker\" rel=\"noopener noreferrer\"\u003eColor Picker\u003c/a\u003e and \u003ca href=\"https://www.raycast.com/manumorante/git-commands\" rel=\"noopener noreferrer\"\u003eGit Commands\u003c/a\u003e.\u003c/p\u003e\n\u003cp id=\"p3\"\u003eStarting this week, Raycast says it will be possible for any of these extensions to integrate with AI so they can be invoked with natural language directly from the app’s main command window and even chained together as part of complex workflows.\u003c/p\u003e\n\u003cp id=\"p4\"\u003eHere are my first impressions.\u003c/p\u003e\n\n\u003cp id=\"p6\"\u003eTo start using AI-enabled extensions, head to the Raycast Store by typing the command “Store”, then select ‘AI Extensions’ in the dropdown menu of categories. When browsing the Store, you can identify AI-enabled extensions by the sparkle icon next to their download stats. As of writing, Raycast says it has already worked to enable AI for about 50 existing extensions.\u003c/p\u003e\n\n\u003cp id=\"p8\"\u003eTo invoke an AI-enabled Raycast extension, start typing a command with the “@“ symbol, and suggestions will highlight the ones you have installed. Once you’ve selected an AI extension, all you have to do is continue typing your command using natural language or choose one of the suggested prompts below the command field, where you will also find your recently used prompts for that extension.\u003c/p\u003e\n\n\n\u003cp id=\"p11\"\u003eIt’s easy to tell at first glance that AI Extensions mostly use LLMs as a layer of interaction for existing commands.\u003c/p\u003e\n\u003cp id=\"p12\"\u003eFor example, Raycast’s existing Apple Music extension allows you to search your music library and play albums, playlists, or individual tracks. While it is now AI-enabled, its capabilities remain limited to these specific functions.  However, the addition of AI allows you to type in natural language and instruct the extension to chain together several of its existing commands to achieve the desired result.\u003c/p\u003e\n\u003cp id=\"p13\"\u003eHere is how I prompted the extension to start playing an album from my library, even though I had forgotten its name, by searching for a specific song included in the album. In this instance, the Apple Music extension combined its ‘Get Library Albums’ and ‘Play Library Album’ commands to start playing the album I was looking for in the Music app:\u003c/p\u003e\n\n\u003cp id=\"p15\"\u003eIn their current state, AI Extensions often encounter errors such as the ones you see in the above screenshot, which regularly result in the prompt failing to complete because the extension isn’t able to move past the error. Raycast is seemingly aware of the feature’s flaky performance, as it is actively encouraging users to send feedback using the built-in feedback form during the beta phase.\u003c/p\u003e\n\u003cp id=\"p16\"\u003eThat being said, AI Extensions show a lot of potential, especially when you start to play with some of the more system-grounded extensions. One example of this is the Finder extension, which lets you manipulate files and folders in surprisingly complex operations.\u003c/p\u003e\n\u003cp id=\"p17\"\u003eHere is how I was able to list the files contained in my Downloads folder, batch rename them, and then move them into a new folder:\u003c/p\u003e\n\n\n\u003cbr/\u003e\n\u003cp id=\"p21\"\u003eThese prompts amount to a series of file operations that, considering the speed at which Raycast operates, could end up saving a lot of time when dealing with a large number of files and folders.\u003c/p\u003e\n\u003cp id=\"p22\"\u003eThe productivity gains are even more significant when you combine multiple AI Extensions together. For instance, after moving those PNG files into a new folder using the Finder extension, Raycast allows me to invoke any other AI Extension to follow up with those files – at least in theory.\u003c/p\u003e\n\u003cp id=\"p23\"\u003eHere, I attempted to invoke the Apple Notes extension to attach a selection of my PNG images to a new note. The operation seemed to work at first, but Raycast kept asking for Full Disk Access in System Settings, even though I’d already granted that permission on my system:\u003c/p\u003e\n\n\n\u003cp id=\"p26\"\u003eTo be fair, I had more luck combining multiple AI Extensions in simpler operations that did not rely on manipulating files in Finder. For instance, here is how I was able to invoke the Weather extension to look up the sunset time for my location, then ask the Calendar extension to create an event at that time. In this case, I used Raycast’s dedicated AI chat window:\u003c/p\u003e\n\n\u003cp id=\"p28\"\u003eOn YouTube, the Raycast team has showcased several more complex use cases for AI Extensions:\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003ciframe type=\"text/html\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/sHIlFKKaq0A?version=3\u0026amp;rel=1\u0026amp;fs=1\u0026amp;autohide=2\u0026amp;showsearch=0\u0026amp;showinfo=1\u0026amp;iv_load_policy=1\u0026amp;wmode=transparent\" allowfullscreen=\"true\"\u003e\u003c/iframe\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp id=\"p30\"\u003eEven if it is hard at the moment to grasp the extent to which AI Extensions will be able to complement each other and create new types of workflows on the Mac, I’m glad to see Raycast move in this direction with its integration with LLMs. Putting in place a framework that can be leveraged by third-party developers and easily added to existing extensions seems like a great way to further position Raycast as a modular toolkit for a variety of use cases and workflows. Not only that, but Raycast’s approach with AI Extensions feels a lot closer to what I would have expected Apple to create with Shortcuts and Siri (or even Spotlight) as part of Apple Intelligence on the Mac.\u003c/p\u003e\n\u003cp id=\"p31\"\u003eThat being said, it will be interesting to see whether the Raycast team is able to resolve the recurrent errors AI Extensions currently run into. Reliability will be critical for AI Extensions to be embraced by the app’s paid subscribers and third-party extension developers.\u003c/p\u003e\n\u003cp id=\"p32\"\u003eAI Extensions are now available in beta for \u003ca href=\"https://www.raycast.com/pro\" rel=\"noopener noreferrer\"\u003eRaycast Pro\u003c/a\u003e subscribers. Raycast Pro starts at $96/year.\u003c/p\u003e\n            \u003c/div\u003e\u003cdiv\u003e\n            \u003cdiv\u003e\u003cp\u003e\u003cimg src=\"https://www.macstories.net/app/themes/macstories4/images/logo-shape-gold.svg\" alt=\"Club MacStories\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003ch3\u003eAccess Extra Content and Perks\u003c/h3\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cp\u003eFounded in 2015, \u003ca href=\"https://club.macstories.net/plans?utm_source=ms\u0026amp;utm_medium=web-inline\" rel=\"noopener noreferrer\"\u003eClub MacStories\u003c/a\u003e has delivered exclusive content every week for nearly a decade.\u003c/p\u003e\n\u003cp\u003eWhat started with weekly and monthly email newsletters has blossomed into \u003ca href=\"https://club.macstories.net/plans?utm_source=ms\u0026amp;utm_medium=web-inline\" rel=\"noopener noreferrer\"\u003ea family of memberships\u003c/a\u003e designed every MacStories fan.\u003c/p\u003e\n\u003cp\u003eLearn more \u003ca href=\"https://club.macstories.net/plans?utm_source=ms\u0026amp;utm_medium=web-inline\" rel=\"noopener noreferrer\"\u003ehere\u003c/a\u003e and from our \u003ca href=\"https://club.macstories.net/faq\" rel=\"noopener noreferrer\"\u003eClub FAQs\u003c/a\u003e.\u003c/p\u003e\n\u003c/div\u003e\u003cdiv\u003e\u003cp\u003e\u003cstrong\u003e\u003ca href=\"https://club.macstories.net/plans/club\" rel=\"noopener noreferrer\"\u003eClub MacStories\u003c/a\u003e\u003c/strong\u003e: Weekly and monthly newsletters via email and the web that are brimming with apps, tips, automation workflows, longform writing, early access to the \u003ca href=\"https://www.macstories.net/unwind/\" rel=\"noopener noreferrer\"\u003eMacStories Unwind podcast\u003c/a\u003e, periodic giveaways, and more;\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca href=\"https://club.macstories.net/plans/plus\" rel=\"noopener noreferrer\"\u003eClub MacStories+\u003c/a\u003e\u003c/strong\u003e: Everything that Club MacStories offers, plus an active Discord community, advanced search and custom RSS features for exploring the Club’s entire back catalog, bonus columns, and dozens of app discounts;\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca href=\"https://club.macstories.net/plans/premier\" rel=\"noopener noreferrer\"\u003eClub Premier\u003c/a\u003e\u003c/strong\u003e: All of the above \u003cem\u003eand\u003c/em\u003e AppStories+, an extended version of our flagship podcast that’s delivered early, ad-free, and in high-bitrate audio.\u003c/p\u003e\n\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e        \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": "2025-02-28T19:21:58-05:00",
  "modifiedTime": null
}
