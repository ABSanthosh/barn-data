{
  "id": "d46a270e-c4bc-4b4d-8c6b-ad45a2737b61",
  "title": "Apple Frames 3.3 Adds Support for iPhone 16 and 16 Pro, M4 iPad Pro, and Apple Watch Series 10 (feat. An Unexpected Technical Detour)",
  "link": "https://www.macstories.net/ios/apple-frames-3-3-adds-support-for-iphone-16-and-16-pro-m4-ipad-pro-and-apple-watch-series-10-feat-an-unexpected-technical-detour/",
  "description": "Apple Frames 3.3 supports all the new devices released by Apple in 2024. Well, this certainly took longer than expected. Today, I’m happy to finally release version 3.3 of Apple Frames, my shortcut to put screenshots inside physical frames of Apple devices. In this new version, which is a free update for everyone, you’ll find […]",
  "author": "Federico Viticci",
  "published": "Mon, 25 Nov 2024 17:08:04 +0000",
  "source": "https://www.macstories.net/feed",
  "categories": [
    "iOS",
    "Apple Frames",
    "automation",
    "iPadOS",
    "macOS",
    "shortcuts"
  ],
  "byline": "Federico Viticci",
  "length": 8001,
  "excerpt": "Well, this certainly took longer than expected. Today, I’m happy to finally release version 3.3 of Apple Frames, my shortcut to put screenshots inside physical frames of Apple devices. In this new version, which is a free update for everyone, you’ll find support for all the new devices Apple released in 2024: 11” and 13”",
  "siteName": "",
  "favicon": "https://www.macstories.net/app/themes/macstories4/images/apple-touch-icon-152x152-precomposed.png",
  "text": "Well, this certainly took longer than expected. Today, I’m happy to finally release version 3.3 of Apple Frames, my shortcut to put screenshots inside physical frames of Apple devices. In this new version, which is a free update for everyone, you’ll find support for all the new devices Apple released in 2024: 11” and 13” M4 iPad Pro iPhone 16 and iPhone 16 Pro lineup 42mm and 46mm Apple Watch Series 10 To get started with Apple Frames, simply head to the end of this post (or search for Apple Frames in the MacStories Shortcuts Archive), download the updated shortcut, and replace any older version you may have installed with it. The first time you run the shortcut, you’ll be asked to redownload the file assets necessary for Apple Frames, which is a one-time operation. Once that’s done, you can resume framing your screenshots like you’ve always done, either using the native Apple Frames menu or the advanced API that I introduced last year. So what took this update so long? Well, if you want to know the backstory, keep on reading. A Tale of Two Types of Screenshots I was busy with my Not an iPad Pro Review story back in May when the new iPads came out, then WWDC happened, so I didn’t get to work on an updated version of Apple Frames with support for the M4 iPad Pros until after the conference had wrapped up. I quickly put together a version with support for the new iPad frames and tried the shortcut with a screenshot, and it didn’t work. Not in the sense that the shortcut was crashing, though; instead, when the screenshot was overlaid on top of the iPad frame, the alpha transparency around the iPad would turn into a solid black color. I thought that was weird, but initially, I just wrote it off as an early iPadOS 18 beta issue. I figured it’d get fixed in the near future during the beta cycle. I started getting concerned when months passed and not only was the issue never fixed, but MacStories readers kept asking me for updates to the shortcut. To make matters worse, I got to the point where I was seeing the problem with some screenshots but not with others. The worst kind of bug is one you cannot reliably reproduce. I tried again. I asked Silvia to put together different versions of the frame assets and even tested different techniques for overlaying images; nothing was working. For some screenshots, the Shortcuts app would turn the transparency around a frame into a black color, and I didn’t know how to explain it. The situation got even worse when new iPhones and Apple Watches were released, and I still couldn’t figure out how to make Apple Frames work with them. This is when I tried to submit feedback and reached out to folks who work on Shortcuts privately, passing along what I was seeing. That also didn’t work. I was ready to give up on Apple Frames, but I decided to at least try to post about my issues publicly first, which I did on Bluesky. So the reason I’ve been unable to update my Apple Frames shortcut for the latest devices is a bug in iOS/iPadOS 18’s Shortcuts app that hasn’t been fixed yet. For the past few months, the Overlay Image action has always removed the alpha transparency of a PNG. I have no idea how to work around it. [image or embed] — Federico Viticci (@viticci.macstories.net) Nov 19, 2024 at 1:17 PM It worked. Within 24 hours, MacStories readers Douglas and Antonio got in touch with me with details about the potential culprit, which they independently identified: iOS 18 was capturing some screenshots in 16-bit Display P3 instead of 8-bit sRGB. As soon as I read Douglas’ email and later read Antonio’s post, I had one of those “of course, I should have thought about this” moments. Why would a PNG with alpha transparency lose its transparency after an image is overlaid on it? Because maybe there’s a metadata mismatch between the two images, and one is being “forced” behind the scenes to be converted to a format that loses the alpha transparency. Here are the details of the issue: occasionally – seemingly with no clear pattern – iOS and iPadOS 18 capture screenshots in 16-bit Display P3, which means they support a wide color gamut and higher dynamic range. Sometimes, however, screenshots are still captured in the old format, 8-bit sRGB. There is no way to tell these different types of screenshots apart since the Photos app lumps them all together as PNG files in the same Screenshots collection. To confirm my theory, I had to use the excellent Metapho app to inspect the metadata of my screenshots. As you can see below, some of them are captured in 16-bit Display P3, while others are in good old 8-bit sRGB. I’m a bit mystified by this approach, and I would love to know how and why the system decides to capture screenshots in one format over the other.1 Regardless, that explained why I couldn’t reproduce the bug consistently or figure out what the underlying issue was: the frame assets (which are based on Apple’s official files) were 8-bit sRGB PNGs; when the shortcut tried to overlay a similar screenshot, everything worked, but if the screenshot was one of the new “fancy” images with a 16-bit Display P3 profile, I’d get the black border around the image. Apple has never publicly documented this, nor is there any information in Shortcuts that explains how the Overlay Image and Mask Image actions work with conflicting color profiles in images. But I still had to come up with a solution now that I knew what the problem was. Initially, Antonio Bueno proposed a workaround that used JavaScript to redraw every screenshot passed to the shortcut with a different RGB profile. That happened locally, on-device, thanks to Shortcuts’ ability to execute arbitrary JS code in a URL action. It worked, but it added a lot of latency to the shortcut due to increased memory consumption. The performance of the JavaScript-based approach was so bad, the beta version of Apple Frames crashed if I tried to frame more than three screenshots at once. I couldn’t use it for the final version. I then realized I was thinking about the issue the wrong way. I was convinced I had to fix the screenshots; what if, instead, I simply updated all the frame assets to be 16-bit? My theory was that, with a 16-bit PNG frame, pasting either an 8-bit or 16-bit screenshot on top of it would cause no trouble. I tested this by asking Silvia to re-export a single frame in 16-bit and, surely enough, it worked. But that led to another problem: should I ask Silvia to manually re-export 68 more frame assets, some of which were older Apple devices that are still supported by Apple Frames but no longer available as PSDs on Apple’s website? And that, friends, is where One True John comes in. As he will detail later this week in MacStories Weekly for Club members, John found a way to upscale 8-bit PNGs to 16-bit files with no color degradation or bloated file sizes in an automated fashion. Stay tuned for the story on Saturday. To wrap up, what you should know is this: Apple Frames is now fully compatible with 8-bit and 16-bit screenshots, and all frame assets downloaded and used by the shortcut are 16-bit PNGs. As a result, Apple Frames is just as efficient as ever; in fact, thanks to some improved logic for overlaying screenshots, it should even be slightly faster than before. Like I said, I wish I’d thought of this sooner instead of having to wait months for a bug fix that, at this point, will likely never come. But such is the journey with automation sometimes. I’m glad we eventually figured this out. Download Apple Frames 3.3 Well, that was a lot of words about color profiles in screenshots. I apologize, but it feels good to finally wrap up this saga. As I mentioned above, you can download Apple Frames 3.3, completely ignore its backstory, and keep using the shortcut like you’ve always done. I’m thrilled to have an up-to-date version of Apple Frames again, and I hope you like it as much as I do. You can download Apple Frames 3.3 below and find it in the MacStories Shortcuts Archive.",
  "image": "https://cdn.macstories.net/image-33-1732546420751.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n                        \n\u003cp id=\"p2\"\u003eWell, this certainly took longer than expected.\u003c/p\u003e\n\u003cp id=\"p3\"\u003eToday, I’m happy to finally release \u003cstrong\u003eversion 3.3 of Apple Frames\u003c/strong\u003e, my shortcut to put screenshots inside physical frames of Apple devices. In this new version, which is a free update for everyone, you’ll find support for all the new devices Apple released in 2024:\u003c/p\u003e\n\u003cul id=\"ul4\"\u003e\u003cli\u003e11” and 13” M4 iPad Pro\u003c/li\u003e\n\u003cli\u003eiPhone 16 and iPhone 16 Pro lineup\u003c/li\u003e\n\u003cli\u003e42mm and 46mm Apple Watch Series 10\u003c/li\u003e\n\u003c/ul\u003e\u003cp id=\"p5\"\u003eTo get started with Apple Frames, simply head to the end of this post (or search for Apple Frames in the \u003ca href=\"https://www.macstories.net/shortcuts/\" rel=\"noopener noreferrer\"\u003eMacStories Shortcuts Archive\u003c/a\u003e), download the updated shortcut, and replace any older version you may have installed with it. The first time you run the shortcut, you’ll be asked to redownload the file assets necessary for Apple Frames, which is a one-time operation. Once that’s done, you can resume framing your screenshots like you’ve always done, either using the native Apple Frames menu or \u003ca href=\"https://www.macstories.net/stories/apple-frames-3-1-extending-screenshot-automation-with-the-new-apple-frames-api/\" rel=\"noopener noreferrer\"\u003ethe advanced API that I introduced last year\u003c/a\u003e.\u003c/p\u003e\n\u003cp id=\"p6\"\u003eSo what took this update so long? Well, if you want to know the backstory, keep on reading.\u003c/p\u003e\n\n\u003ch2 id=\"a-tale-of-two-types-of-screenshots\"\u003eA Tale of Two Types of Screenshots\u003c/h2\u003e\n\u003cp id=\"p8\"\u003eI was busy with my \u003ca href=\"https://www.macstories.net/stories/not-an-ipad-pro-review/\" rel=\"noopener noreferrer\"\u003eNot an iPad Pro Review story\u003c/a\u003e back in May when the new iPads came out, then WWDC happened, so I didn’t get to work on an updated version of Apple Frames with support for the M4 iPad Pros until after the conference had wrapped up. I quickly put together a version with support for the new iPad frames and tried the shortcut with a screenshot, and it didn’t work. Not in the sense that the shortcut was crashing, though; instead, when the screenshot was overlaid on top of the iPad frame, the alpha transparency around the iPad would turn into a solid black color.\u003c/p\u003e\n\u003cp id=\"p9\"\u003eI thought that was weird, but initially, I just wrote it off as an early iPadOS 18 beta issue. I figured it’d get fixed in the near future during the beta cycle.\u003c/p\u003e\n\u003cp id=\"p10\"\u003eI started getting concerned when \u003cem\u003emonths\u003c/em\u003e passed and not only was the issue never fixed, but MacStories readers kept asking me for updates to the shortcut. To make matters worse, I got to the point where I was seeing the problem with \u003cem\u003esome\u003c/em\u003e screenshots but not with \u003cem\u003eothers\u003c/em\u003e. The worst kind of bug is one you cannot reliably reproduce. I tried again. I asked Silvia to put together different versions of the frame assets and even tested different techniques for overlaying images; nothing was working. For some screenshots, the Shortcuts app would turn the transparency around a frame into a black color, and I didn’t know how to explain it.\u003c/p\u003e\n\u003cp id=\"p11\"\u003eThe situation got even worse when new iPhones and Apple Watches were released, and I still couldn’t figure out how to make Apple Frames work with them. This is when I tried to submit feedback and reached out to folks who work on Shortcuts privately, passing along what I was seeing. That also didn’t work.\u003c/p\u003e\n\u003cp id=\"p12\"\u003eI was ready to give up on Apple Frames, but I decided to at least try to post about my issues publicly first, which \u003ca href=\"https://bsky.app/profile/viticci.macstories.net/post/3lbcg3t4n6k2r\" rel=\"noopener noreferrer\"\u003eI did on Bluesky\u003c/a\u003e.\u003c/p\u003e\n\u003ccenter id=\"center14\"\u003e\n\u003cblockquote data-bluesky-uri=\"at://did:plc:4yrwf3picsxhvub7uevt6ww4/app.bsky.feed.post/3lbcg3t4n6k2r\" data-bluesky-cid=\"bafyreigcofeflahenrqipc77ga6tcsvxdupjeorddprjg4hqdv2rcwgc64\"\u003e\n\u003cp lang=\"en\"\u003eSo the reason I’ve been unable to update my Apple Frames shortcut for the latest devices is a bug in iOS/iPadOS 18’s Shortcuts app that hasn’t been fixed yet.\u003c/p\u003e\n\u003cp\u003eFor the past few months, the Overlay Image action has always removed the alpha transparency of a PNG.\u003c/p\u003e\n\u003cp\u003eI have no idea how to work around it.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://bsky.app/profile/did:plc:4yrwf3picsxhvub7uevt6ww4/post/3lbcg3t4n6k2r?ref_src=embed\" rel=\"noopener noreferrer\"\u003e[image or embed]\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e— Federico Viticci (\u003ca href=\"https://bsky.app/profile/did:plc:4yrwf3picsxhvub7uevt6ww4?ref_src=embed\" rel=\"noopener noreferrer\"\u003e@viticci.macstories.net\u003c/a\u003e) \u003ca href=\"https://bsky.app/profile/did:plc:4yrwf3picsxhvub7uevt6ww4/post/3lbcg3t4n6k2r?ref_src=embed\" rel=\"noopener noreferrer\"\u003eNov 19, 2024 at 1:17 PM\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003c/center\u003e\u003cp id=\"p16\"\u003eIt worked. Within 24 hours, MacStories readers Douglas and Antonio got in touch with me with details about the potential culprit, which they independently identified: iOS 18 was capturing \u003cem\u003esome\u003c/em\u003e screenshots in 16-bit Display P3 instead of 8-bit sRGB.\u003c/p\u003e\n\u003cp id=\"p17\"\u003eAs soon as I read Douglas’ email and later read Antonio’s \u003ca href=\"https://bsky.app/profile/atnbueno.bsky.social/post/3lbdrlzwx6c26\" rel=\"noopener noreferrer\"\u003epost\u003c/a\u003e, I had one of those \u003cem\u003e“of course, I should have thought about this”\u003c/em\u003e moments. Why would a PNG with alpha transparency lose its transparency after an image is overlaid on it? Because maybe there’s a metadata mismatch between the two images, and one is being “forced” behind the scenes to be converted to a format that loses the alpha transparency.\u003c/p\u003e\n\u003cp id=\"p18\"\u003eHere are the details of the issue: occasionally – seemingly with no clear pattern – iOS and iPadOS 18 capture screenshots in \u003cstrong\u003e16-bit Display P3\u003c/strong\u003e, which means they support a wide color gamut and higher dynamic range. Sometimes, however, screenshots are still captured in the old format, \u003cstrong\u003e8-bit sRGB\u003c/strong\u003e. There is no way to tell these different types of screenshots apart since the Photos app lumps them all together as PNG files in the same Screenshots collection. To confirm my theory, I had to use the excellent \u003ca href=\"https://apps.apple.com/us/app/metapho/id914457352\" rel=\"noopener noreferrer\"\u003eMetapho\u003c/a\u003e app to inspect the metadata of my screenshots. As you can see below, some of them are captured in 16-bit Display P3, while others are in good old 8-bit sRGB.\u003c/p\u003e\n\n\u003cp id=\"p20\"\u003eI’m a bit mystified by this approach, and I would love to know how and why the system decides to capture screenshots in one format over the other.\u003csup id=\"fnref-77337-bitFormat\"\u003e\u003ca href=\"#fn-77337-bitFormat\" rel=\"noopener noreferrer\"\u003e1\u003c/a\u003e\u003c/sup\u003e Regardless, that explained why I couldn’t reproduce the bug consistently or figure out what the underlying issue was: the frame assets (which are based on Apple’s \u003ca href=\"https://developer.apple.com/design/resources/#product-bezels\" rel=\"noopener noreferrer\"\u003eofficial files\u003c/a\u003e) were 8-bit sRGB PNGs; when the shortcut tried to overlay a similar screenshot, everything worked, but if the screenshot was one of the new “fancy” images with a 16-bit Display P3 profile, I’d get the black border around the image.\u003c/p\u003e\n\u003cp id=\"p21\"\u003eApple has never publicly documented this, nor is there any information in Shortcuts that explains how the Overlay Image and Mask Image actions work with conflicting color profiles in images. But I still had to come up with a solution now that I knew what the problem was.\u003c/p\u003e\n\u003cp id=\"p22\"\u003eInitially, Antonio Bueno proposed a workaround that used JavaScript to redraw every screenshot passed to the shortcut with a different RGB profile. That happened locally, on-device, thanks to Shortcuts’ ability to execute arbitrary JS code in a URL action. It worked, but it added \u003cem\u003ea lot\u003c/em\u003e of latency to the shortcut due to increased memory consumption. The performance of the JavaScript-based approach was so bad, the beta version of Apple Frames crashed if I tried to frame more than three screenshots at once. I couldn’t use it for the final version.\u003c/p\u003e\n\u003cp id=\"p23\"\u003eI then realized I was thinking about the issue the wrong way. I was convinced I had to fix the screenshots; what if, instead, I simply updated all the \u003cem\u003eframe assets\u003c/em\u003e to be 16-bit?\u003c/p\u003e\n\u003cp id=\"p24\"\u003eMy theory was that, with a 16-bit PNG frame, pasting either an 8-bit or 16-bit screenshot on top of it would cause no trouble. I tested this by asking Silvia to re-export a single frame in 16-bit and, surely enough, it worked. But that led to another problem: should I ask Silvia to manually re-export 68 more frame assets, some of which were older Apple devices that are still supported by Apple Frames but no longer available as PSDs on Apple’s website?\u003c/p\u003e\n\u003cp id=\"p25\"\u003eAnd that, friends, is where \u003ca href=\"https://bsky.app/profile/johnvoorhees.macstories.net\" rel=\"noopener noreferrer\"\u003eOne True John\u003c/a\u003e comes in. As he will detail later this week in \u003ca href=\"https://club.macstories.net/plans\" rel=\"noopener noreferrer\"\u003eMacStories Weekly for Club members\u003c/a\u003e, John found a way to upscale 8-bit PNGs to 16-bit files with no color degradation or bloated file sizes in an automated fashion. Stay tuned for the story on Saturday.\u003c/p\u003e\n\n\u003cp id=\"p27\"\u003eTo wrap up, what you should know is this: Apple Frames is now fully compatible with 8-bit and 16-bit screenshots, and all frame assets downloaded and used by the shortcut are 16-bit PNGs. As a result, Apple Frames is just as efficient as ever; in fact, thanks to some improved logic for overlaying screenshots, it should even be slightly faster than before.\u003c/p\u003e\n\u003cp id=\"p28\"\u003eLike I said, I wish I’d thought of this sooner instead of having to wait months for a bug fix that, at this point, will likely never come. But such is the journey with automation sometimes. I’m glad we eventually figured this out.\u003c/p\u003e\n\u003ch2 id=\"download-apple-frames-3-3\"\u003eDownload Apple Frames 3.3\u003c/h2\u003e\n\u003cp id=\"p29\"\u003eWell, that was a lot of words about color profiles in screenshots. I apologize, but it feels good to finally wrap up this saga.\u003c/p\u003e\n\u003cp id=\"p30\"\u003eAs I mentioned above, you can download Apple Frames 3.3, completely ignore its backstory, and keep using the shortcut like you’ve always done. I’m thrilled to have an up-to-date version of Apple Frames again, and I hope you like it as much as I do.\u003c/p\u003e\n\u003cp id=\"p31\"\u003eYou can download Apple Frames 3.3 below and find it in the \u003ca href=\"https://www.macstories.net/shortcuts/\" rel=\"noopener noreferrer\"\u003eMacStories Shortcuts Archive\u003c/a\u003e.\u003c/p\u003e\n\n\n            \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "9 min read",
  "publishedTime": "2024-11-25T17:08:04-05:00",
  "modifiedTime": null
}
