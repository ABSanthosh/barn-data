{
  "id": "52cac107-4be9-400d-ad66-2556179446a7",
  "title": "John Siracusa’s Review of Delicious Library 1.0",
  "link": "https://arstechnica.com/gadgets/2004/11/delicious-library/",
  "description": "",
  "author": "John Gruber",
  "published": "2024-11-27T19:14:21Z",
  "source": "https://daringfireball.net/feeds/main",
  "categories": null,
  "byline": "John Siracusa",
  "length": 40787,
  "excerpt": "A review of the cataloging application from Delicious Monster, and exploration …",
  "siteName": "Ars Technica",
  "favicon": "https://cdn.arstechnica.net/wp-content/uploads/2016/10/cropped-ars-logo-512_480-300x300.png",
  "text": "A review of the cataloging application from Delicious Monster, and exploration … Introduction \"MacLibrary X is a cataloguing application that stores information about your collection of books, movies, music and games. It also tracks borrowers and suggests other, similar products that you may like. Product images, descriptions, and other metadata may be pulled from Amazon.com or entered manually.\" That sounds like a pretty boring product, doesn't it? In fact, it sounds like a good first project for a programmer just starting to learn how to create Mac applications. Not surprisingly, there are many Mac OS X applications that do more or less what's described above. Why does something like this even warrant a review, let alone a review at Ars? Let's start with the actual product name. It's not \"MacLibrary X\" or anything similarly predictable. The application is called Delicious Library. That sounds...odd. On the other hand, it's also slightly intriguing, maybe even fun. But come on, it's a glorified list of books, movies, music, and games. Surely anyone who's even interested in such a thing already has a text file or Excel spreadsheet or (for the truly industrious) FileMaker database that works just fine, thank you, for tracking media libraries. Heck, I recall videophiles in the heyday of the VCR proudly displaying tightly-printed sheets of paper containing alphabetized lists of their vast VHS collections. Putting this stuff on the computer seems like using a sledgehammer to kill an ant. And yet, if you travel in Mac enthusiast circles on the net, you've probably already heard of Delicious Library. Even if you're not a Mac user, perhaps a Mac-using friend insisted on showing you some screenshots. Delicious Library is an application with some buzz. This phenomenon is quintessentially \"Macintosh\", as is Delicious Library itself, from its purpose, concept, and design, to the people that make it and every last pixel and line of code it contains. If you're reading this on a PC that you built yourself from carefully selected parts for about the price of a low-end iMac, I hope this review will help you to begin to understand what's so special about the Mac, Mac software, and the Mac community. If you're already one of the faithful, sit back and relax as we examine the latest software offering from some old friends. Background Delicious Library is the first product from Delicious Monster, a new software company founded by Wil Shipley and Mike Matas. Wil was one of the founders and the former president of The Omni Group. Mike also worked for The Omni Group from age 15 to his current, ripe-old age of 18. The Omni Group started as a NeXT software developer, then reinvented itself as a maker of innovative, award winning Mac OS X software. As sometimes happens, even in the candy-colored world of Mac software development, Wil decided to leave the company he'd founded to pursue more personal interests. Mike was of a similar mind, and the two of them are now living their dream in the form of Delicious Monster, a company that, say what you will, certainly has a more provocative personality than the comparatively stodgy Omni Group that they left behind. You can read more about the backgrounds and philosophies of Wil and Mike on their web site. There you'll also find a list of friends and contributors, including (not surprisingly) a few friends from The Omni Group. Out of box disk image experience These days, software in a cardboard box seems almost pass?, especially in the Mac market where so many of the best applications are freeware, shareware, or otherwise downloadable. There aren't many retail outlets that carry a wide selection of Mac software anyway. So while, say, The Omni Group may produce and sell retail packaged versions of their applications, they are all also downloadable from their web site. In short, this is truly the age of downloading. On the Mac platform, that means disk images. Apple's disk image format supports all of the extended features of the Mac OS (resource forks, custom icons, stateful icon sizes and positions, etc.) as well as optional encryption, compression, license agreements, and even auto-expansion and clean-up. Just as physical packaging makes an important first impression for hardware, so too can downloadable software packaging be elevated from utilitarian to a delight. On Mac OS X, the first test of quality downloadable software is this: does it come as a disk image, or is it compressed or packaged using some other standard? While StuffIt, zip, and even tar and friends are all technically compatible with Mac OS X, disk images combine the best features of all of them and have the nicest user experience. Apple has extensive guidelines for packaging and distributing software for Mac OS X. For disk images, there are two \"best practices.\" The first is what Apple calls internet-enabled disk images. When an internet-enabled disk image is downloaded, it is automatically mounted, its contents are copied out of it, and then the disk image is unmounted and moved to the trash. Since most Mac OS X applications can and should be single-icon, drag-installed bundles, the user experience of internet-enabled disk images is nicely transparent. The user clicks a download link in a web page, waits for the data transfer to complete, and then finds a single, uncompressed, ready to run application icon in the download location. From there, he's free to drag it anywhere he wants, or even run it from its current location (usually the desktop). But while that's efficient and straightforward, it's also essentially the total elimination of packaging. What if a software developer wants to make an impression? By foregoing the auto-copy-and-clean-up features, the developer has the entire contents of the disk image window to play with. Thanks to the OS X Finder's ability display custom image backgrounds in windows, the results can be quite attractive. So let's see how Delicious Library stacks up. First, here's the disk image itself, after being mounted. Yes, they've even customized the volume icon: a wood-grain theme with the clever Delicious Monster logo branded onto it. The disk opens to reveal a continuation of the theme. As is customary, the background image helpfully includes the \"installation instructions\" (if you can even call them that). I'm pointing these things out not because Delicious Monster is unique among Mac developers in the quality of their artwork and their attention to detail, but because they aren't unique. Nearly every popular Mac OS X application is a single-icon drag-installed affair, sporting an attractive icon, distributed in either an internet-enabled or meticulously decorated and arranged disk image. Even open source applications like Fire and multi-platform ports like Mozilla meet this standard on OS X. Heck, even Real gets it right. Real software...think about that! This is an example of the best kind of peer pressure. There is simply a \"climate of excellence\" on the Mac platform. Any developer that does not live up to community standards is looked down upon, or even shunned. Commercial, open source, freeware, shareware, it doesn't matter: pay attention to detail, or else. Windows users, think about what your typical download and installation experience is like. How many dialogs are you presented with? What do the file names and icons look like? Do you have to run an installer? What kind of manual clean-up is required afterwards? Linux users, when you look at the carefully laid out disk image contents in the screenshot and links above, think about how far \"desktop Linux\" has to come before it can even begin to think about details like how single-icon drag-installed applications are arranged in their disk image windows. Yes, I know, all of this is \"pointless\" and \"dumb\" because looks are meaningless. It's the software that counts?the code, the bits, not the packaging, right? And so we come to an important difference between Mac enthusiasts and other computer users. Mac users understand that the packaging counts too (and are willing to pay for it). Happily, you get a lot of nice things \"for free\" on the Mac platform these days: composited windows, large icons, rich disk image and application bundle standards, etc. Before I move on, I want to include one more example. This review is based on my experience with a pre-release version of Delicious Library. Here's what the beta version splash screen looks like. (Here's a JPEG for the browser-impaired) Look hard at that graphic. This is a splash screen for a beta?something that will never be seen by more than a handful of people. Note the bullet hole, the magic marker graffiti, the scratched-out slogan, the haphazardly placed logo sticker. Linux users, think about this image the next time you download a release version of a product without a comprehensive sample configuration file or with \"cosmetic\" bugs. Windows users, think about this the next time you see a poorly drawn 16-color icon or toolbar graphic in a multi-hundred dollar commercial software package. People are right when they suspect that something very different is going on over in the Mac corner of the software development universe. Is it something crazy, or something sublime? You be the judge. All the right features Apple's successful product designs over the past few years have shared an important quality. Rather than including every possible feature (or even most features that, say, an Ars reader would expect), they include only the most important features, and package them in such a way that they are accessible to the broadest range of customers. To \"computing enthusiasts\" like us, this is often frustrating. But when Apple correctly identifies the handful of most important features and then concentrates all of its effort on implementing them well, the results are impressive. The iPod is the latest and greatest example. Nowhere is the stereotypical reaction of computer geeks to this design philosophy more famously revealed than in Slashdot's original take on the iPod: \"No wireless. Less space than a nomad. Lame.\" Indeed. There's an excellent essay by Barbara Nelson that explains the benefits of what she calls this \"market-driven\" strategy. In it, ironically, she uses Apple's Newton product introduction as an example of what not to do. Choosing the right features, and only the right features, is important in software development as well. Every feature takes time to implement, and the cost of the time spent implementing unimportant features is less likely to be recouped by the sales generated by those features. This is especially important for the very first version of a new product, and critically important for the very first version of the very first product from a new software company. Clearly, Wil and Mike of Delicious Monster have their work cut out for them. So, what are the right features for a media library application? What does the media library market want from its software? Does such a market even exist? Perhaps that's the first question to ask. The quest to identify the market will lead to an understanding of its needs. Understanding the market When you get right down to it, no one needs software for managing a personal media collection. Anyone making their living managing media collections (say, Blockbuster Video or the town librarian) has very different needs than a personal collector. So the first insight is that a personal media collection manager is a form of recreational software. What recreational purpose does a media collection serve? The consumption of the media itself is the obvious end result, but even there, shades of gray exist. A favorite song may be listened to hundreds of times spread over many years, but how many times is the average book read? Movies fall somewhere in the middle of the two extremes. A game's longevity and replay value depends on even more complex factors. And yet these realities seem to have little effect on the relative sizes of each type of media collection. Book collections may dwarf music collections despite wildly differing frequencies of consumption. Some voracious readers may choose to get all their books from the library, but collect DVDs that they've only seen a few times each. I'm sure a few readers even know someone who has many more video games than either books or CDs (if not, check the gaming forum). Clearly, the act of collection is an end in itself, at least to some degree. That's where a personal media library application has to focus, since it really has no participation in the actual consumption of the media. Clues to the motivations and rewards collecting are not hard to find. Most media collections are not just stored, but are displayed somehow. Or if they are not displayed, then they are at least listed or otherwise enumerated. In some ways, collections are a form of packaging for the collector. We judge others by what they choose to collect, and in turn expect ourselves to be judged based on the contents of our media collections. \"What's on your iPod?\" Even media that is only consumed a single time may still fulfill an important role by contributing to our public persona through it's mere presence in our collection. At the very far end of the spectrum are those who collect media that is never consumed. We have now entered the realm of The Collector, and he may not be as far outside your circle of friends as you think. Digital collections present a problem because they have the potential to remove the traditional rewards of collecting. As an outward representation of your personality, a digital collection stored in a file on a hard disk fails miserably. Publishing and sharing these lists (e.g. playlists on your iPod or shared via iTunes) is a start, but it still falls short of the sublime satisfaction of the nicely displayed collection. In addition to trying to maintain the rewards of physical collections, a media library application must also be sure to provide the benefits that are uniquely possible in the world of software. Sorting and searching are no-brainers, but the usefulness of both depends on the quality of the data collected for each item. Now we're getting into dangerous territory. The work required to enter enough information for each item to make searching and sorting useful can very quickly eclipse the benefits derived from the completed digital collection. Only the most hardcore collector is going to dedicate the time necessary to manually enter even the bare minimum title and creator metadata for a collection of any significant size. Some form of automated data entry is clearly necessary, and the easier, the better. Finally, arbitrary collections, which are such a pain in real life, are nearly trivial in software. When books or DVDs get rearranged on their shelves or moved to other rooms entirely, it's a big project. In the digital world, reorganization is a considerably easier kind of \"drag and drop.\" Although I am not privy to the thought process of Delicious Library's developers, this list of features seems to be at the core of their application: The application should fulfill the desire to display and appreciate a collection. Data entry should be as efficient as possible. Searching, sorting, and arbitrary organization must be fast and easy. But are these really the right features? Is something important missing? What should be added to make things better? Which is the most important feature? These are difficult questions to answer without seeing the software in action. So let's (finally!) fire up Delicious Library and see how it works in practice. A tour of Delicious Library Delicious Library is a single-window, brushed-metal application. This fits nicely with the strategy of providing a simple interface that contains only what the market really needs, without too many extraneous elements to get in the way. Main window (click for larger version) Sort order menu On the first launch, the application asks whether to create a new, empty library or start with a pre-populated sample library in order to get a feel for the application. I talked before about lowering the barrier to entry by making data entry as easy as possible. If it's too much of a pain to add items, the application will not be used (and therefore not paid for either). But no matter how easy it is to add items, the customer may not be motivated to populate the collection in order to even get an idea of what the application will be like. Including the optional sample library was a wise decision. On the left of the window is a \"source list\", familiar to users to Apple's iApplications. The top four icons in the list are type-specific views of your collection. Below that are the arbitrary collections, or \"shelves\" as they're called in Delicious Library. A list of \"borrowers\" is in the lower left. Delicious Library can track who has borrowed what from your collection, and when the items are due back. On the bottom of the left side are buttons for adding a new shelf and a new borrower. Borrowers are pulled from Apple's system-wide address book database. The center of the window shows the contents of the currently selected shelf (or the union of several shelves if more than one is selected in the source pane). There are two view modes, \"Cover\" and \"List\", which can be selected from the \"View\" menu or by using the small widgets in the upper-left corner of the shelf pane. The shelf pane's title bar includes a pop-up menu for selecting the sort order. The options are extensive, from a simple sort by title to obscure orders based on things like rarity, number of pages, location in the house, or condition. Below the shelf is a slider for dynamic zooming (cover view only), a search field, and buttons for adding a new item and performing an action on a selected item. The search field operates, iTunes-like, in real-time as you type. There's also a voice search feature that attempts to jump to an item when you speak its name. Speech input is handled using the OS X's standard speech recognition system, configured using the Speech preference pane in System Preferences. The right-hand pane changes based on context. When an item is selected in the shelf pane, the right-hand pane contains product details, personal annotations, and a list of similar items available for sale at Amazon. If a similar item is already in the collection, it is grayed out and accompanied by a link to reveal the item in the library. When adding a new item, the pane offers a list of possible data entry methods. If manual entry is selected, the pane changes to a data entry form. You can see an example of each kind of pane below. Show similar items Item details Personal annotations Add a new item It seems like Delicious Library has already covered all the important features in this one, simple, unintimidating window. That's swell, but aside from the voice search feature, it doesn't seem very special. Let's take a closer look. Delicious visuals They say the devil's in the details, but in the case of Delicious Library, they're definitely angels. Let's start with the shelf pane in cover view. The dynamic zooming is passably smooth, at least on a G5, but we've seen this before in iPhoto. The wooden shelf art is nice, if a bit corny. The small \"stickers\" labeling the range of items on each shelf (e.g. \"Giampaolo to Levy\") are quite clever. But by far the most impressive element is the product packaging artwork. Rather than just showing disembodied cover images sitting on a shelf, Delicious Library includes artwork for each kind of media packaging: jewel cases for CDs, keep cases for DVDs, even packaging for GameBoy Advance games. But the cover art is not just pasted onto these templates. Instead, it's incorporated into them according to the configuration of the physical packaging. For example, cover art for a jewel case goes behind the clear plastic lid. It's all composited together into a very pleasing and realistic whole. Below you can see the empty jewel case art (used for items with no cover art) alongside that same art with a cover inserted. Jewel cases: empty and filled The attention to detail is impressive. Note the subtle glare of the plastic cover and the slightly more opaque plastic \"fingers\" that hold the artwork to the case lid. The keep case artwork (used for DVDs and console games) is similarly impressive, and there are at least two varieties of book cover templates, one for soft-covers and one for hardcovers. A console game and a DVD Books: hardcover and softcover The examples above are shown at their maximum size, which tends to reveal any flaws in the original artwork. But the packaging display system actually helps to make low-quality cover art look a lot better, and it makes high-quality cover art look nearly photorealistic. The satisfaction of displaying your collection using this system is well beyond any other digital media library application that I've ever seen. Needless to say, this is all made a heck of a lot easier by Mac OS X's native support for fully composited windows and images. This is exactly what Apple is talking about when they say that they hope third party developers will use their technologies in new and innovative ways. And while all of this was technically possible in classic Mac OS, Mac OS X's rich display system makes the use of techniques like this much more probable in practice. From shelf to disk Item details (editable) Data entry is a crucial issue for a media library application. Adding items has to be fast and easy, and each item has to have enough associated metadata to make searching and sorting useful. These seemingly contradictory goals can be reconciled with the help of a what I'm going to call an oracle. The user supplies enough information to uniquely identify the item, then the oracle fills in the blanks. Delicious Library uses Amazon.com as its oracle, connecting through Amazon's web services API. Given a title, creator, ISBN, or ASIN (Amazon product identifier), Delicious Library will attempt to lookup the metadata and cover art in Amazon's product database. The list of applicable metadata depends on the product. It can be quite extensive, as seen in the screenshot on the right. If the lookup fails, then manual entry is the order of the day. But there's one more twist to data entry, and it's a doozy. As you might have heard, read, or guessed based on the application icon, Delicious Library supports metadata lookups via barcode scanning. Delicious Monster will sell you a wireless (bluetooth) barcode scanner bundled with Delicious Library for an extra $175. The scanner has a claimed 50-foot range and will store up to 500 codes while out of range, dumping them all back to the computer when within 50 feet again. This is clearly the most efficient way to add many items. Delicious Library can optionally speak the name of the scanned item so that you can confirm that Amazon got the lookup right. It will also speak the error message \"lookup failed\" when things go wrong, so you don't have to constantly glance back at the computer to make sure things are okay. Delicious Library appears to be nicely multi-threaded. Stalled or slow lookups do not seem to prevent other lookups. But wait, there's more. Purchasing a dedicated barcode scanner may be a barrier to entry in its own right, regardless of how easy it makes data entry. Enter what I consider the most important feature of Delicious Library: video barcode scanning. Delicious Library will use your iSight camera or any attached digital camcorder to scan barcodes. The penetration of dedicated barcode scanners is sure to be small, but digital camcorders are everywhere. This opens the floodgates to widespread, easy, fast data entry. Video barcode scanning Attaching and powering up a camera enables a black and white video preview window. The red lines running across the window are reminiscent of the scanning lines used by retail barcode scanners. For a barcode to be scanned by the camera, it must be intersected by one of the red lines. Note that the image is mirrored in the preview window. This setup is ideal for an iSight mounted on a monitor facing the user, but it's backwards for someone holding a camcorder in one hand and a barcoded product in the other. An option to flip the image would be nice. In my testing, I found video scanning to be, by far, the fastest way to add items. It was a little tricky at first (much like real barcode scanning, as anyone who has worked in retail can attest), but I eventually got into a good rhythm. I scanned about 70 CDs in my first 30 minutes of using the application. That number includes several CDs that had no barcodes, and some that had to be touched up by hand (usually to correct incorrect cover art pulled from Amazon). The fastest way to add items that lacked barcodes was usually a title search. The \"Similar\" button in the right-hand pane pulls a list of recommendations from Amazon. The list includes links to view the item's detail page at Amazon.com or to buy the item immediately. (Actually, there's a buffer web page in between that asks for one more click to add the item to the Amazon.com shopping cart, but I'm not sure if that's just because I don't have one-click purchasing enabled at Amazon.) Small iTunes-style arrow icons appear in many places. Each one goes to Amazon.com: either a product page or a search based on the item next to the arrow. All of these Amazon links contain Delicious Monster's Amazon.com \"associate id.\" Delicious Monster gets a small percentage of the purchase price of items purchased directly through one of these links, or even just purchased as part of the same shopping session. The connection with the Amazon.com oracle is a key part of Delicious Library, so much so that I wonder how useful the application would be if Amazon ever pulled the plug on its web services API. This, unfortunately, is the risk all such applications must take...unless the developers are willing to implement their own oracle systems, which is a \"non-trivial\" task, to say the least. Oracle failures were the main source of frustration for me as I scanned my collection. Amazon sometimes provides cover art that is poorly suited to Delicious Library's usage of it. Ideally, the cover art is exactly equivalent to the booklet or piece of paper that is slipped under the clear plastic cover of a CD jewel case or DVD keep case. Many products on Amazon have cover art like this, but others diverge wildly. This trend seems to be getting worse, with many more newer products suffering from it than old. Here are just a few examples. These are the images straight from Amazon, scaled but otherwise unmodified (i.e., empty space has not been added around the edges). A sampling of bad cover art from Amazon.com Image includes keep case, studio logo, and lots of empty space Entire package shown on an angle Package on an angle, plus the bundled CD A total mess You can imagine how awful these images look when scaled and stuck under the virtual clear plastic of Delicious Library's packaging artwork. Some can be edited down to something useful, but many cannot. I also have a lot of imported DVDs and CDs, none of which are listed at the US Amazon.com web site. Amazon's UK site has some of them, but Delicious Library does not query that site. Support for automatically detecting a product's region of origin and then intelligently selecting the best oracle is planned for a future free upgrade. It will be a welcome addition. The big picture Producing a \"1.0\" release, no matter how seemingly trivial the application may be, is always a somewhat painful process. The first version often doesn't do everything that the developer had initially envisioned, and it almost never does everything that customers want it to do. And then, of course, there are bugs. I'm not in a good position to comment on bugs since I've been using a prerelease version of Delicious Library. But even the beta has been relatively bug free. I've never crashed the application and I've never lost data. There were several cosmetic bugs, but most issues were related to data lookup: missing cover art, failed lookups, etc. According to the developers, these are known issues and will be fixed before 1.0. Overall, I think it's safe to expect the release version to be commendably stable. But let's get back to the tension between features and the 1.0 release. Delicious Monster seems to subscribe wholeheartedly to the market-driven strategy demonstrated so successfully in recent years by Apple's iPod, iTunes, iPhoto, and iMovie products. Delicious Monster has sought to understand the mindset of media collector, and has focused nearly all of its attention on satisfying the most primal needs of this market. Their effort has been fundamentally successful. Delicious Library does the most important things it needs to do, and does them exceptionally well. As a card-carrying member of the target market for this product, Delicious Library has fulfilled my basic needs with style and grace. But, inevitably, I want more. Some would say that this is clearly a sign of a version 1.0 product, and they'd be right. That's okay, so long as the features that do exist are distributed appropriately. But a desire for new features, and, more revealingly, a near-compulsion to dwell on the possibilities for new features, is also a sign of a great product that has already begun to inspire loyalty and admiration. I have big dreams for Delicious Library. I want new shelf artwork, new media packaging templates, new ways to manipulate and view items in the shelf. How about a full-screen mode with animated reshuffling and dynamic pan and zoom? What about spine artwork for a more dense shelf view? I want more varied oracles to help with obscure metadata lookups. I have many out of print books and imported movies and CDs that I don't want to enter by hand. I want meta-oracles that aggregate information form many sources. How about using Google's image search and scraping eBay in order to present me with a list of possible cover images? Everything should be extensible by third parties: themes, media art, oracle plug-ins, even the data itself. Let's go beyond oracles. My obscure video game soundtrack CD may not be on Amazon, but I'll bet plenty of other people have it. If even just one of those people enters the metadata by hand and scans the cover art, I want to benefit from that work. Let's go peer-to-peer with everything. Encourage correctness by integrating some form of reputation management for data entry. Do it better than CDDB: stamp out all misspelled album titles and artist names. I want multiple libraries per account, libraries shared by multiple accounts, library subsets published to selected users over the network or through the web. I want scalable packaging that accurately reflects the relative sizes of individual books. I want custom art for boxed sets of all types, with the ability to expand them and view the individual discs as separate items, with their own cover art if applicable. In short, I want to create a Collector's Utopia. If this all sounds way over the top to you, consider this. With increasing bandwidth and personal data storage, there may soon come a time when the electronic distribution of media is the norm, and physical media is the secondary incarnation a collection. Some might say that this has already happened for music. How many people now purchase CDs only to immediately convert their contents to MP3 or AAC and then shelve the CDs permanently? That's how I've been operating for several years, although I won't give up on physical media until the virtual equivalent is of the same quality. But other people are not as picky, and are already content to purchase all of their music in the form of downloadable files. If the final quality barriers can be overcome with the aid of more bandwidth and more storage, then applications like Delicious Library suddenly seem a lot less frivolous. In fact, they start to look like the successor to today's shelf full of optical discs in plastic packaging, rather than a mere imitation of them. In some ways, applications like iTunes already fill this role. But Delicious Library has a broader reach, spanning all kinds of media and addressing some of the fundamental rewards of collecting that applications like iTunes have thus far ignored. On the other hand, Delicious Library is not involved at all with playback or the management of anything but the metadata for digital media. Ideally, both applications would begin to expand towards each other, meeting at some grand unified nexus of digital media collection, consumption, and management. I consider it a sign of an good product when it inspires delusions of grandeur. But there's a dark side to my enthusiastic extrapolations as well. I can also envision the many ways that things can go terribly wrong. In the limited time I've had to test Delicious Library, I have not been able to really stress-test the database system. Can it handle 10,000 items? How about 100,000? What are the limits? How reliable is the data store? And speaking of the data store, here's yet another file with a disproportionately large amount of human effort invested it in?a file that, like my Quicken data file or email database, Must Be Preserved At All Costs. What if I want to export to, or sync with, another database? How dedicated to interoperability is Delicious Monster? What if the product is a flop and they go under shortly after I've invested weeks importing my collection? And then there's the price: $39.95 for the software only, plus $175 more if I want the wireless barcode scanner. Is that too much to ask for an application that, let's face it, no one really needs? In the end, I am optimistic. Considering the potential time sink of data entry and collection and management, $40 buys an awful lot of fun (or \"fun\", if you're not the collecting type) when compared with, say, a moderately priced dinner for two. There's also a special $29.95 price for users of these competing products: Chronopath Library, Intelliscan Collector, Booxter, DVDCollector, iMedia, DVDpedia, Bookpedia, DVD Cache, Readerware, and DVD Shelf X. (As an aside, take a look at the web sites for the competing products. Most of them are simple, attractive, and informative. At least one of the products was created by a 12-year old (who, incidentally, also contributed to Delicious Library). See if you can guess which one.) It's been my experience that the best software is made by developers who are themselves part of the target market in some small (or not so small) way. Something tells me that one or both of Delicious Library's primary developers possess extensive, exquisitely cared for and organized media collections, and have actively sought new ways to manage and augment these collections. They appear to be scratching their own itch, in the very best sense of that expression. Part of what makes the Mac community so special is that so many Mac developers have itches?and, more importantly, corresponding talents?that have little or nothing to do with computers. I invite you to look again at some of the screenshots and artwork in this application. Someone loved those graphics. Someone sweated over every pixel of that application window. Someone knows what it means to be a lover of art, music, books, video games. This is in addition to (not instead of) the ability to write great code. All of these human facilities and experiences have been harnessed to create not just a mere \"program\", \"application\" or (God forbid) \"executable\", but a digital love letter to collectors. Delicious Monster, from its products to its web site, exudes a spirit of passion and fun. \"I've never been happier at work\", Wil Shipley told me in an email. \"I think it shows in the finished product.\" I think so too. It may only be version 1.0, but it's delicious. (8.5 out of 10) Now we come to the more pragmatic portion of the product review, wherein I distill six pages of rambling into a single number between one and ten. Here I must also point out, for those potentially blinded my by own diminutive reality distortion field, that this is a $40 product that lets you sort and search your collection of books, music, movies, and video games. You do not need this product. In fact, this product, if purchased, will undoubtedly absorb time that could be more productively spent doing something else. Shortly thereafter, you may simply get bored and never use it again. You have been warned. If you're still interested, here's how I think Delicious Library shakes out. It's clever, pretty, and fun, but also a bit green. I'd give it a 9 out of 10 if not for the fact that most of my \"dream features\" are not even slated to be considered until at least the next major version. Delicious Monster plans to charge for major version upgrades, so I'm dropping the final score to 8.5 out of 10. (Apparently we only have artwork for integer ratings. I'm not sure how fractions would look in Roman numerals anyway.) Tradition also dictates that I provide a list of pros and cons: Pros: Gorgeous \"virtual packaging\" graphics and shelf-view interface More metadata than you can shake a stick at Well-implemented barcode scanning feature with broad camera support Cons: Poor metadata look-up support for rare, out-of-print, and imported items Some bad cover art from Amazon.com Leaves you wanting more: P2P, third-party themes and packaging art, more/better metadata sources, better support for boxed sets, etc. If you can wait for version 2.0, you'll get a better deal. Of course, if no one buys 1.0, there won't be a version 2.0. I know I'd hate to see enthusiastic, talented, and (it needs to be said) admirably anal-retentive developers like those at Delicious Monster move on to another, potentially more lucrative platform, or another line of work entirely. I've told you what I think, but in the end, the market will decide. John Siracusa has a B.S. in Computer Engineering from Boston University. He has been a Mac user since 1984, a Unix geek since 1993, and is a professional web developer and freelance technology writer. 0 Comments Comments are closed.",
  "image": "https://cdn.arstechnica.net/wp-content/uploads/archive/Media/2004/11/8/dl-icon-64.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"main\"\u003e\n            \u003carticle data-id=\"97203\"\u003e\n  \n  \u003cheader\u003e\n  \u003cdiv\u003e\n      \n\n      \n\n      \u003cp\u003e\n        A review of the cataloging application from Delicious Monster, and exploration …\n      \u003c/p\u003e\n\n      \n    \u003c/div\u003e\n\u003c/header\u003e\n\n\n  \n\n  \n      \n    \n    \u003cdiv\u003e\n                      \n                      \n          \n\u003ch2\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003e\u0026#34;MacLibrary X is a cataloguing application that stores information about your collection of books, movies, music and games.  It also tracks borrowers and suggests other, similar products that you may like.  Product images, descriptions, and other metadata may be pulled from Amazon.com or entered manually.\u0026#34;\u003c/p\u003e\n\u003cp\u003eThat sounds like a pretty boring product, doesn\u0026#39;t it?  In fact, it sounds like a good first project for a programmer just starting to learn how to create Mac applications.  Not surprisingly, there are many Mac OS X applications that do more or less what\u0026#39;s described above.  Why does something like this even warrant a review, let alone a review at Ars?\u003c/p\u003e\n\u003cp\u003eLet\u0026#39;s start with the actual product name.  It\u0026#39;s not \u0026#34;MacLibrary X\u0026#34; or anything similarly predictable.  The application is called \u003cb\u003eDelicious Library\u003c/b\u003e.  That sounds...odd.  On the other hand, it\u0026#39;s also slightly intriguing, maybe even fun.\u003c/p\u003e\n\u003cp\u003eBut come on, it\u0026#39;s a glorified list of books, movies, music, and games. Surely anyone who\u0026#39;s even interested in such a thing already has a text file or Excel spreadsheet or (for the truly industrious) FileMaker database that works just fine, thank you, for tracking media libraries.  Heck, I recall videophiles in the heyday of the VCR proudly displaying tightly-printed sheets of paper containing alphabetized lists of their vast VHS collections.  Putting this stuff on the computer seems like using a sledgehammer to kill an ant.\u003c/p\u003e\n\n\u003cp\u003eAnd yet, if you travel in Mac enthusiast circles on the net, you\u0026#39;ve probably already heard of Delicious Library.  Even if you\u0026#39;re not a Mac user, perhaps a Mac-using friend insisted on showing you some screenshots.  Delicious Library is an application with some buzz.\u003c/p\u003e\n\u003cp\u003eThis phenomenon is quintessentially \u0026#34;Macintosh\u0026#34;, as is Delicious Library itself, from its purpose, concept, and design, to the people that make it and every last pixel and line of code it contains.  If you\u0026#39;re reading this on a PC that you built yourself from carefully selected parts for about the price of a low-end iMac, I hope this review will help you to begin to understand what\u0026#39;s so special about the Mac, Mac software, and the Mac community.  If you\u0026#39;re already one of the faithful, sit back and relax as we examine the latest software offering from some old friends.\u003c/p\u003e\n\n          \n                      \n                  \u003c/div\u003e\n                    \n        \n          \n    \n    \u003cdiv\u003e\n          \n          \n\n\u003ch2\u003eBackground\u003c/h2\u003e\n\u003cp\u003eDelicious Library is the first product from \u003ca href=\"http://delicious-monster.com/\"\u003eDelicious Monster\u003c/a\u003e, a new software company founded by  \u003ca href=\"mailto:wjs@mac.com\"\u003eWil Shipley\u003c/a\u003e and \u003ca href=\"mailto:mike@delicious-monster.com\"\u003eMike Matas\u003c/a\u003e.  Wil was one of the founders and the former president of \u003ca href=\"http://www.omnigroup.com\"\u003eThe Omni Group\u003c/a\u003e.  Mike also worked for The Omni Group from age 15 to his current, ripe-old age of 18.  The Omni Group started as a NeXT software developer, then reinvented itself as a maker of \u003ca href=\"http://arstechnica.com/reviews/apps/ow5.ars\"\u003einnovative\u003c/a\u003e, \u003ca href=\"http://www.omnigroup.com/company/whatisomni/content.html\"\u003eaward winning\u003c/a\u003e Mac OS X software.\u003c/p\u003e\n\u003cp\u003eAs sometimes happens, even in the candy-colored world of Mac software development, Wil decided to leave the company he\u0026#39;d founded to pursue more personal interests.  Mike was of a similar mind, and the two of them are now living their dream in the form of \u003ca href=\"http://delicious-monster.com/\"\u003eDelicious Monster\u003c/a\u003e, a company that, say what you will, certainly has a more provocative personality than the comparatively stodgy \u003ca href=\"http://www.omnigroup.com\"\u003eOmni Group\u003c/a\u003e that they left behind.\u003c/p\u003e\n\u003cp\u003eYou can \u003ca href=\"http://delicious-monster.com/company.php\"\u003eread more\u003c/a\u003e about the backgrounds and philosophies of Wil and Mike on \u003ca href=\"http://delicious-monster.com/company.php\"\u003etheir web site\u003c/a\u003e.  There you\u0026#39;ll also find a list of friends and contributors, including (not surprisingly) a few friends from The Omni Group.\u003c/p\u003e\n\u003ch3\u003e\u003ca name=\"oodie\"\u003e\u003c/a\u003eOut of \u003cspan\u003ebox\u003c/span\u003e disk image experience\u003c/h3\u003e\n\u003cp\u003eThese days, software in a cardboard box seems almost pass?, especially in the Mac market where so many of the best applications are freeware, shareware, or otherwise downloadable.  There aren\u0026#39;t many retail outlets that carry a wide selection of Mac software anyway.  So while, say, The Omni Group may produce and sell retail packaged versions of their applications, they are all also downloadable from their web site.\u003c/p\u003e\n\u003cp\u003eIn short, this is truly the age of downloading.  On the Mac platform, that means disk images.  Apple\u0026#39;s disk image format supports all of the extended features of the Mac OS (resource forks, custom icons, stateful icon sizes and positions, etc.) as well as optional encryption, compression, license agreements, and even auto-expansion and clean-up.\u003c/p\u003e\n\n          \n                  \u003c/div\u003e\n                    \n        \n          \n    \n    \u003cdiv\u003e\n          \n          \n\u003cp\u003eJust as physical packaging makes an \u003ca href=\"http://arstechnica.com/hardware/reviews/2000/10/g4-cube.ars/2\"\u003eimportant first impression\u003c/a\u003e for hardware, so too can downloadable software packaging be elevated from utilitarian to a delight.  On Mac OS X, the first test of quality downloadable software is this: does it come as a disk image, or is it compressed or packaged using some other standard?  While StuffIt, zip, and even tar and friends are all technically compatible with Mac OS X, disk images combine the best features of all of them and have the nicest user experience.\u003c/p\u003e\n\u003cp\u003eApple has \u003ca href=\"http://developer.apple.com/documentation/DeveloperTools/Conceptual/SoftwareDistribution/index.html#//apple_ref/doc/uid/10000145i\"\u003eextensive guidelines\u003c/a\u003e for packaging and distributing software for Mac OS X.  For disk images, there are two \u0026#34;best practices.\u0026#34;  The first is what Apple calls \u003ca href=\"http://developer.apple.com/documentation/DeveloperTools/Conceptual/SoftwareDistribution/Concepts/sd_disk_images.html#//apple_ref/doc/uid/20001759\"\u003einternet-enabled disk images\u003c/a\u003e.  When an internet-enabled disk image is  downloaded, it is automatically mounted, its contents are copied out of it, and then the disk image is unmounted and moved to the trash.\u003c/p\u003e\n\u003cp\u003eSince most Mac OS X applications can and should be single-icon, drag-installed \u003ca href=\"http://developer.apple.com/documentation/CoreFoundation/Conceptual/CFBundles/index.html#//apple_ref/doc/uid/10000123i\"\u003ebundles\u003c/a\u003e, the user experience of internet-enabled disk images is nicely transparent.  The user clicks a download link in a web page, waits for the data transfer to complete, and then finds a single, uncompressed, ready to run application icon in the download location.  From there, he\u0026#39;s free to drag it anywhere he wants, or even run it from its current location (usually the desktop).\u003c/p\u003e\n\u003cp\u003eBut while that\u0026#39;s efficient and straightforward, it\u0026#39;s also essentially the total \u003ci\u003eelimination\u003c/i\u003e of packaging.  What if a software developer wants to make an impression?  By foregoing the auto-copy-and-clean-up features, the developer has the entire contents of the disk image window to play with.  Thanks to the OS X Finder\u0026#39;s ability display custom image backgrounds in windows, the results can be quite attractive.\u003c/p\u003e\n\u003cp\u003eSo let\u0026#39;s see how Delicious Library stacks up.  First, here\u0026#39;s the disk image itself, after being mounted.\u003c/p\u003e\n\n          \n                  \u003c/div\u003e\n                    \n        \n          \n    \n    \u003cdiv\u003e\n          \n          \n\u003cp\u003e\u003cimg decoding=\"async\" width=\"183\" alt=\"Disk image icon\" src=\"https://cdn.arstechnica.net/wp-content/uploads/archive/delicious-library/disk-image-icon.jpg\" height=\"183\"/\u003e\u003c/p\u003e\n\u003cp\u003eYes, they\u0026#39;ve even customized the volume icon: a wood-grain theme with the clever \u003ca href=\"http://arstechnica.com/Media/2004/11/6/delicious-monster-logo.jpg\"\u003eDelicious Monster logo\u003c/a\u003e branded onto it.  The disk opens to reveal a continuation of the theme.\u003c/p\u003e\n\u003cp\u003e\u003cimg fetchpriority=\"high\" decoding=\"async\" width=\"546\" alt=\"Disk image\" src=\"https://cdn.arstechnica.net/wp-content/uploads/archive/delicious-library/disk-image.jpg\" height=\"404\"/\u003e\u003c/p\u003e\n\u003cp\u003eAs is customary, the background image helpfully includes the \u0026#34;installation instructions\u0026#34; (if you can even call them that).\u003c/p\u003e\n\u003cp\u003eI\u0026#39;m pointing these things out not because Delicious Monster is unique among Mac developers in the quality of their artwork and their attention to detail, but because they \u003ci\u003earen\u0026#39;t\u003c/i\u003e unique.  Nearly every popular Mac OS X application is a single-icon drag-installed affair, sporting an attractive icon, distributed in either an internet-enabled or \u003ca href=\"https://cdn.arstechnica.net/wp-content/uploads/archive/delicious-library/dragthing-disk-image.jpg\"\u003emeticulously\u003c/a\u003e \u003ca href=\"https://cdn.arstechnica.net/wp-content/uploads/archive/delicious-library/omni-graffle-disk-image.jpg\"\u003edecorated\u003c/a\u003e and \u003ca href=\"https://cdn.arstechnica.net/wp-content/uploads/archive/delicious-library/office-disk-image.jpg\"\u003earranged\u003c/a\u003e disk image.  Even open source applications like \u003ca href=\"https://cdn.arstechnica.net/wp-content/uploads/archive/delicious-library/fire-disk-image.jpg\"\u003eFire\u003c/a\u003e and multi-platform ports like \u003ca href=\"https://cdn.arstechnica.net/wp-content/uploads/archive/delicious-library/mozilla-disk-image.jpg\"\u003eMozilla\u003c/a\u003e meet this standard on OS X.  Heck, even \u003ca href=\"http://www.real.com/\"\u003eReal\u003c/a\u003e gets it right.  \u003ci\u003eReal\u003c/i\u003e software...think about that!\u003c/p\u003e\n\u003cp\u003eThis is an example of the best kind of peer pressure.  There is simply a \u0026#34;climate of excellence\u0026#34; on the Mac platform.  Any developer that does not live up to community standards is looked down upon, or even shunned.  Commercial, open source, freeware, shareware, it doesn\u0026#39;t matter: pay attention to detail, or else.\u003c/p\u003e\n\u003cp\u003eWindows users, think about what your typical download and installation experience is like.  How many dialogs are you presented with?  What do the file names and icons look like?  Do you have to run an installer?  What kind of manual clean-up is required afterwards?\u003c/p\u003e\n\u003cp\u003eLinux users, when you look at the carefully laid out disk image contents in the screenshot and links above, think about how far \u0026#34;desktop Linux\u0026#34; has to come before it can even begin to think about details like how single-icon drag-installed applications are arranged in their disk image windows.\u003c/p\u003e\n\u003cp\u003eYes, I know, all of this is \u0026#34;pointless\u0026#34; and \u0026#34;dumb\u0026#34; because looks are meaningless.  It\u0026#39;s the software that counts?the code, the bits, not the packaging, right?  And so we come to an important difference between Mac enthusiasts and other computer users.  Mac users understand that \u003ci\u003ethe packaging counts too\u003c/i\u003e (and are willing to pay for it).  Happily, you get a lot of nice things \u0026#34;for free\u0026#34; on the Mac platform these days: composited windows, large icons, rich disk image and application bundle standards, etc.\u003c/p\u003e\n\n          \n                  \u003c/div\u003e\n                    \n        \n          \n    \n    \u003cdiv\u003e\n          \n          \n\u003cp\u003eBefore I move on, I want to include one more example.  This review is based on my experience with a pre-release version of Delicious Library.  Here\u0026#39;s what the beta version splash screen looks like.\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" width=\"365\" alt=\"Beta splash\" src=\"https://cdn.arstechnica.net/wp-content/uploads/archive/Media/2004/11/5/beta-splash.png\" height=\"365\"/\u003e\u003cbr/\u003e\u003cspan\u003e(Here\u0026#39;s a \u003ca href=\"http://arstechnica.com/Media/2004/11/5/beta-splash.jpg\"\u003eJPEG\u003c/a\u003e for the browser-impaired)\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003eLook hard at that graphic.  This is a splash screen for a \u003ci\u003e\u003cb\u003ebeta\u003c/b\u003e\u003c/i\u003e?something that will never be seen by more than a handful of people.  Note the bullet hole, the magic marker graffiti, the scratched-out slogan, the haphazardly placed logo sticker.\u003c/p\u003e\n\u003cp\u003eLinux users, think about this image the next time you download a release version of a product without a comprehensive sample configuration file or with \u0026#34;cosmetic\u0026#34; bugs.  Windows users, think about this the next time you see a poorly drawn 16-color icon or toolbar graphic in a multi-hundred dollar commercial software package.\u003c/p\u003e\n\u003cp\u003ePeople are right when they suspect that something very different is going on over in the Mac corner of the software development universe.  Is it something crazy, or something sublime?  You be the judge.\u003c/p\u003e\n\n\u003ch2\u003eAll the right features\u003c/h2\u003e\n\u003cp\u003eApple\u0026#39;s successful product designs over the past few years have shared an important quality.  Rather than including every possible feature (or even \u003ci\u003emost\u003c/i\u003e features that, say, an Ars reader would expect), they include only the most important features, and package them in such a way that they are accessible to the broadest range of customers.\u003c/p\u003e\n\u003cp\u003eTo \u0026#34;computing enthusiasts\u0026#34; like us, this is often frustrating.  But when Apple correctly identifies the handful of most important features and then concentrates all of its effort on implementing them well, the results are impressive.  The iPod is the latest and greatest example.  Nowhere is the stereotypical reaction of computer geeks to this design philosophy more famously revealed than in Slashdot\u0026#39;s original take on the iPod: \u0026#34;\u003ca href=\"http://slashdot.org/article.pl?sid=01/10/23/1816257\"\u003eNo wireless.  Less space than a nomad.  Lame.\u003c/a\u003e\u0026#34;  Indeed.\u003c/p\u003e\n\u003cp\u003eThere\u0026#39;s an \u003ca href=\"http://www.productmarketing.com/topics/01/10b.htm\"\u003eexcellent essay by Barbara Nelson\u003c/a\u003e that explains the benefits of what she calls this \u0026#34;market-driven\u0026#34; strategy.  In it, ironically, she uses Apple\u0026#39;s Newton product introduction as an example of what \u003ci\u003enot\u003c/i\u003e to do.\u003c/p\u003e\n\n          \n                  \u003c/div\u003e\n                    \n        \n          \n    \n    \u003cdiv\u003e\n          \n          \n\u003cp\u003eChoosing the right features, and only the right features, is important in software development as well.  Every feature takes time to implement, and the cost of the time spent implementing unimportant features is less likely to be recouped by the sales generated by those features.\u003c/p\u003e\n\u003cp\u003eThis is especially important for the very first version of a new product, and \u003ci\u003ecritically\u003c/i\u003e important for the very first version of the very first product from a new software company.  Clearly, Wil and Mike of Delicious Monster have their work cut out for them.\u003c/p\u003e\n\u003cp\u003eSo, what are the right features for a media library application?  What does the media library market want from its software?  Does such a market even exist?  Perhaps that\u0026#39;s the first question to ask.  The quest to identify the market will lead to an understanding of its needs.\u003c/p\u003e\n\u003ch3\u003e\u003ca name=\"understanding\"\u003eUnderstanding the market\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eWhen you get right down to it, no one \u003ci\u003eneeds\u003c/i\u003e software for managing a personal media collection.  Anyone making their living managing media collections (say, Blockbuster Video or the town librarian) has very different needs than a personal collector.  So the first insight is that a personal media collection manager is a form of recreational software.\u003c/p\u003e\n\u003cp\u003eWhat recreational purpose does a media collection serve?  The consumption of the media itself is the obvious end result, but even there, shades of gray exist.  A favorite song may be listened to hundreds of times spread over many years, but how many times is the average book read?  Movies fall somewhere in the middle of the two extremes.  A game\u0026#39;s longevity and replay value depends on even more complex factors.\u003c/p\u003e\n\u003cp\u003eAnd yet these realities seem to have little effect on the relative sizes of each type of media collection.  Book collections may dwarf music collections despite wildly differing frequencies of consumption.  Some voracious readers may choose to get all their books from the library, but collect DVDs that they\u0026#39;ve only seen a few times each.  I\u0026#39;m sure a few readers even know someone who has many more video games than either books or CDs (if not, check the \u003ca href=\"http://episteme.arstechnica.com/6/ubb.x?a=frm\u0026amp;s=50009562\u0026amp;f=39309975\"\u003egaming forum\u003c/a\u003e).\u003c/p\u003e\n\n          \n                  \u003c/div\u003e\n                    \n        \n          \n    \n    \u003cdiv\u003e\n          \n          \n\u003cp\u003eClearly, the act of collection is an end in itself, at least to some degree.  That\u0026#39;s where a personal media library application has to focus, since it really has no participation in the actual consumption of the media.\u003c/p\u003e\n\u003cp\u003eClues to the motivations and rewards collecting are not hard to find.  Most media collections are not just stored, but are \u003ci\u003edisplayed\u003c/i\u003e somehow.  Or if they are not displayed, then they are at least listed or otherwise enumerated.\u003c/p\u003e\n\u003cp\u003eIn some ways, collections are a form of packaging for the collector.  We judge others by what they choose to collect, and in turn expect ourselves to be judged based on the contents of our media collections.  \u0026#34;What\u0026#39;s on your iPod?\u0026#34;  Even media that is only consumed a single time may still fulfill an important role by contributing to our public persona through it\u0026#39;s mere presence in our collection.  At the very far end of the spectrum are those who collect media that is \u003ci\u003enever\u003c/i\u003e consumed.  We have now entered the realm of The Collector, and he may not be as far outside your circle of friends as you think.\u003c/p\u003e\n\u003cp\u003eDigital collections present a problem because they have the potential to remove the traditional rewards of collecting.  As an outward representation of your personality, a digital collection stored in a file on a hard disk fails miserably.  Publishing and sharing these lists (e.g. playlists on your iPod or shared via iTunes) is a start, but it still falls short of the sublime satisfaction of the nicely displayed collection.\u003c/p\u003e\n\u003cp\u003eIn addition to trying to maintain the rewards of physical collections, a media library application must also be sure to provide the benefits that are uniquely possible in the world of software.  Sorting and searching are no-brainers, but the usefulness of both depends on the quality of the data collected for each item.\u003c/p\u003e\n\n          \n                  \u003c/div\u003e\n                    \n        \n          \n    \n    \u003cdiv\u003e\n          \n          \n\u003cp\u003eNow we\u0026#39;re getting into dangerous territory.  The work required to enter enough information for each item to make searching and sorting useful can very quickly eclipse the benefits derived from the completed digital collection.  Only the most hardcore collector is going to dedicate the time necessary to manually enter even the bare minimum title and creator metadata for a collection of any significant size.  Some form of automated data entry is clearly necessary, and the easier, the better.\u003c/p\u003e\n\u003cp\u003eFinally, arbitrary collections, which are such a pain in real life, are nearly trivial in software.  When books or DVDs get rearranged on their shelves or moved to other rooms entirely, it\u0026#39;s a big project.  In the digital world, reorganization is a considerably easier kind of \u0026#34;drag and drop.\u0026#34;\u003c/p\u003e\n\u003cp\u003eAlthough I am not privy to the thought process of Delicious Library\u0026#39;s developers, this list of features seems to be at the core of their application:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e The application should fulfill the desire to display and appreciate a collection.\u003c/li\u003e\n\u003cli\u003e Data entry should be as efficient as possible.\u003c/li\u003e\n\u003cli\u003e Searching, sorting, and arbitrary organization must be fast and easy.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eBut are these really the right features?  Is something important missing?  What should be added to make things better?  Which is the \u003ci\u003emost\u003c/i\u003e important feature?  These are difficult questions to answer without seeing the software in action.  So let\u0026#39;s (finally!) fire up Delicious Library and see how it works in practice.\u003c/p\u003e\n\n\u003ch2\u003eA tour of Delicious Library\u003c/h2\u003e\n\u003cp\u003eDelicious Library is a single-window, brushed-metal application.  This fits nicely with the strategy of providing a simple interface that contains only what the market really needs, without too many extraneous elements to get in the way.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://arstechnica.com/Media/2004/11/5/main-window-big.jpg\"\u003e\u003cimg decoding=\"async\" width=\"600\" alt=\"main window\" src=\"https://cdn.arstechnica.net/wp-content/uploads/archive/Media/2004/11/5/main-window.jpg\" height=\"371\"/\u003e\u003c/a\u003e\u003cbr/\u003e\u003cspan\u003eMain window (click for larger version)\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" width=\"156\" alt=\"sort menu\" src=\"https://cdn.arstechnica.net/wp-content/uploads/archive/Media/2004/11/5/sort-menu.jpg\" height=\"628\"/\u003e\u003cbr/\u003e\u003cspan\u003eSort order menu\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003eOn the first launch, the application asks whether to create a new, empty library or start with a pre-populated sample library in order to get a feel for the application.  I talked before about lowering the barrier to entry by making data entry as easy as possible.  If it\u0026#39;s too much of a pain to add items, the application will not be used (and therefore not paid for either).  But no matter how easy it is to add items, the customer may not be motivated to populate the collection in order to even get an idea of what the application will be like.  Including the optional sample library was a wise decision.\u003c/p\u003e\n\n          \n                  \u003c/div\u003e\n                    \n        \n          \n    \n    \u003cdiv\u003e\n          \n          \n\u003cp\u003eOn the left of the window is a \u0026#34;source list\u0026#34;, familiar to users to Apple\u0026#39;s iApplications.  The top four icons in the list are type-specific views of your collection.  Below that are the arbitrary collections, or \u0026#34;shelves\u0026#34; as they\u0026#39;re called in Delicious Library.\u003c/p\u003e\n\u003cp\u003eA list of \u0026#34;borrowers\u0026#34; is in the lower left.  Delicious Library can track who has borrowed what from your collection, and when the items are due back.\u003c/p\u003e\n\u003cp\u003eOn the bottom of the left side are buttons for adding a new shelf and a new borrower.  Borrowers are pulled from Apple\u0026#39;s system-wide address book database.\u003c/p\u003e\n\u003cp\u003eThe center of the window shows the contents of the currently selected shelf (or the union of several shelves if more than one is selected in the source pane).  There are two view modes, \u0026#34;Cover\u0026#34; and \u0026#34;List\u0026#34;, which can be selected from the \u0026#34;View\u0026#34; menu or by using the small widgets in the upper-left corner of the shelf pane.\u003c/p\u003e\n\u003cp\u003eThe shelf pane\u0026#39;s title bar includes a pop-up menu for selecting the sort order.  The options are extensive, from a simple sort by title to obscure orders based on things like rarity, number of pages, location in the house, or condition.\u003c/p\u003e\n\u003cp\u003eBelow the shelf is a slider for dynamic zooming (cover view only), a search field, and buttons for adding a new item and performing an action on a selected item.\u003c/p\u003e\n\u003cp\u003eThe search field operates, iTunes-like, in real-time as you type.  There\u0026#39;s also a voice search feature that attempts to jump to an item when you speak its name.  Speech input is handled using the OS X\u0026#39;s standard speech recognition system, configured using the Speech preference pane in System Preferences.\u003c/p\u003e\n\u003cp\u003eThe right-hand pane changes based on context.  When an item is selected in the shelf pane, the right-hand pane contains product details, personal annotations, and a list of similar items available for sale at Amazon.  If a similar item is already in the collection, it is grayed out and accompanied by a link to reveal the item in the library.  When adding a new item, the pane offers a list of possible data entry methods.  If manual entry is selected, the pane changes to a data entry form.  You can see an example of each kind of pane below.\u003c/p\u003e\n\n          \n                  \u003c/div\u003e\n                    \n        \n          \n    \n    \u003cdiv\u003e\n          \n          \n\u003cdiv\u003e\u003ctable\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003ctd\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" width=\"309\" alt=\"Show similar items\" src=\"https://cdn.arstechnica.net/wp-content/uploads/archive/Media/2004/11/6/right-pane-similar.jpg\" height=\"431\"/\u003e\u003cbr/\u003e\u003cspan\u003eShow similar items\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" width=\"309\" alt=\"Item details\" src=\"https://cdn.arstechnica.net/wp-content/uploads/archive/Media/2004/11/6/right-pane-details.jpg\" height=\"431\"/\u003e\u003cbr/\u003e\u003cspan\u003eItem details\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" width=\"309\" alt=\"My information\" src=\"https://cdn.arstechnica.net/wp-content/uploads/archive/Media/2004/11/6/right-pane-my-info.jpg\" height=\"305\"/\u003e\u003cbr/\u003e\u003cspan\u003ePersonal annotations\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" width=\"309\" alt=\"Add a new item\" src=\"https://cdn.arstechnica.net/wp-content/uploads/archive/Media/2004/11/6/right-pane-new-item.gif\" height=\"305\"/\u003e\u003cbr/\u003e\u003cspan\u003eAdd a new item\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\u003c/div\u003e\n\u003cp\u003eIt seems like Delicious Library has already covered all the important features in this one, simple, unintimidating window.  That\u0026#39;s swell, but aside from the voice search feature, it doesn\u0026#39;t seem very special.  Let\u0026#39;s take a closer look.\u003c/p\u003e\n\u003ch3\u003e\u003ca name=\"visuals\"\u003e\u003c/a\u003eDelicious visuals\u003c/h3\u003e\n\u003cp\u003eThey say the devil\u0026#39;s in the details, but in the case of Delicious Library, they\u0026#39;re definitely angels.  Let\u0026#39;s start with the shelf pane in cover view.  The dynamic zooming is passably smooth, at least on a G5, but we\u0026#39;ve seen this before in iPhoto.  The wooden shelf art is nice, if a bit corny.  The small \u0026#34;stickers\u0026#34; labeling the range of items on each shelf (e.g. \u0026#34;Giampaolo to Levy\u0026#34;)  are quite clever.  But by far the most impressive element is the product packaging artwork.\u003c/p\u003e\n\u003cp\u003eRather than just showing disembodied cover images sitting on a shelf, Delicious Library includes artwork for each kind of media packaging: jewel cases for CDs, keep cases for DVDs, even packaging for GameBoy Advance games.  But the cover art is not just pasted onto these templates.  Instead, it\u0026#39;s incorporated into them according to the configuration of the physical packaging.\u003c/p\u003e\n\u003cp\u003eFor example, cover art for a jewel case goes \u003ci\u003ebehind\u003c/i\u003e the clear plastic lid.  It\u0026#39;s all composited together into a very pleasing and realistic whole.  Below you can see the empty jewel case art (used for items with no cover art) alongside that same art with a cover inserted.\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" width=\"610\" alt=\"jewel cases\" src=\"https://cdn.arstechnica.net/wp-content/uploads/archive/Media/2004/11/6/jewel-cases.jpg\" height=\"319\"/\u003e\u003cbr/\u003e\u003cspan\u003eJewel cases: empty and filled\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003eThe attention to detail is impressive.  Note the subtle glare of the plastic cover and the slightly more opaque plastic \u0026#34;fingers\u0026#34; that hold the artwork to the case lid.  The  keep case artwork (used for DVDs and console games) is similarly impressive, and there are at least two varieties of book cover templates, one for soft-covers and one for hardcovers.\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" width=\"615\" alt=\"Game and DVD\" src=\"https://cdn.arstechnica.net/wp-content/uploads/archive/Media/2004/11/6/game-dvd.jpg\" height=\"436\"/\u003e\u003cbr/\u003e\u003cspan\u003eA console game and a DVD\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" width=\"665\" alt=\"Game and DVD\" src=\"https://cdn.arstechnica.net/wp-content/uploads/archive/Media/2004/11/6/books.jpg\" height=\"509\"/\u003e\u003cbr/\u003e\u003cspan\u003eBooks: hardcover and softcover\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003eThe examples above are shown at their maximum size, which tends to reveal any flaws in the original artwork.  But the packaging display system actually helps to make low-quality cover art look a lot better, and it makes high-quality cover art look nearly photorealistic.  The satisfaction of displaying your collection using this system is well beyond any other digital media library application that I\u0026#39;ve ever seen.\u003c/p\u003e\n\n          \n                  \u003c/div\u003e\n                    \n        \n          \n    \n    \u003cdiv\u003e\n          \n          \n\u003cp\u003eNeedless to say, this is all made a heck of a lot easier by Mac OS X\u0026#39;s native support for fully composited windows and images.  This is exactly what Apple is talking about when they say that they hope third party developers will use their technologies in new and innovative ways.  And while all of this was technically possible in classic Mac OS, Mac OS X\u0026#39;s rich display system makes the use of techniques like this much more probable in practice.\u003c/p\u003e\n\n\u003ch2\u003eFrom shelf to disk\u003c/h2\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" width=\"294\" alt=\"Item details\" src=\"https://cdn.arstechnica.net/wp-content/uploads/archive/Media/2004/11/6/item-details.gif\" height=\"535\"/\u003e\u003cbr/\u003e\u003cspan\u003eItem details (editable)\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003eData entry is a crucial issue for a media library application.  Adding items has to be fast and easy, and each item has to have enough associated metadata to make searching and sorting useful.  These seemingly contradictory goals can be reconciled with the help of a what I\u0026#39;m going to call an oracle.   The user  supplies enough information to uniquely identify the item, then the oracle fills in the blanks.\u003c/p\u003e\n\u003cp\u003eDelicious Library uses Amazon.com as its oracle, connecting through Amazon\u0026#39;s \u003ca href=\"http://www.amazon.com/gp/browse.html/ref=smm_sn_aws?node=3435361\"\u003eweb services API\u003c/a\u003e.  Given a title, creator, ISBN, or ASIN (Amazon product identifier), Delicious Library will attempt to lookup the metadata and cover art in Amazon\u0026#39;s product database.  The list of applicable metadata depends on the product.  It can be quite  extensive, as seen in the screenshot on the right.\u003c/p\u003e\n\u003cp\u003eIf the lookup fails, then manual entry is the order of the day.  But there\u0026#39;s one more twist to data entry, and it\u0026#39;s a doozy.  As you might have heard, read, or guessed based on the application icon, Delicious Library supports metadata lookups via barcode scanning.  Delicious Monster will sell you a wireless (bluetooth) barcode scanner bundled with Delicious Library for an extra $175.  The scanner has a claimed 50-foot range and will store up to 500 codes while out of range, dumping them all back to the computer when within 50 feet again.\u003c/p\u003e\n\n          \n                  \u003c/div\u003e\n                    \n        \n          \n    \n    \u003cdiv\u003e\n          \n          \n\u003cp\u003eThis is clearly the most efficient way to add many items.  Delicious Library can optionally speak the name of the scanned item so that you can confirm that Amazon got the lookup right.  It will also speak the error message \u0026#34;lookup failed\u0026#34; when things go wrong, so you don\u0026#39;t have to constantly glance back at the computer to make sure things are okay.  Delicious Library appears to be nicely multi-threaded.  Stalled or slow lookups do not seem to prevent other lookups.\u003c/p\u003e\n\u003cp\u003eBut wait, there\u0026#39;s more.  Purchasing a dedicated barcode scanner may be a barrier to entry in its own right, regardless of how easy it makes data entry.  Enter what I consider the most important feature of Delicious Library: video barcode scanning.\u003c/p\u003e\n\u003cp\u003eDelicious Library will use your \u003ca href=\"http://www.apple.com/isight/\"\u003eiSight\u003c/a\u003e camera \u003ci\u003eor any attached digital camcorder\u003c/i\u003e to scan barcodes.  The penetration of dedicated barcode scanners is sure to be small, but digital camcorders are everywhere.  This opens the floodgates to widespread, easy, fast data entry.\u003c/p\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" width=\"320\" alt=\"Item details\" src=\"https://cdn.arstechnica.net/wp-content/uploads/archive/Media/2004/11/6/scanning.jpg\" height=\"256\"/\u003e\u003cbr/\u003e\u003cspan\u003eVideo barcode scanning\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003eAttaching and powering up a camera enables a black and white video preview window.  The red lines running across the window are reminiscent of the scanning lines used by retail barcode scanners.  For a barcode to be scanned by the camera, it must be intersected by one of the red lines.\u003c/p\u003e\n\u003cp\u003eNote that the image is mirrored in the preview window.  This setup is ideal for an iSight mounted on a monitor facing the user, but it\u0026#39;s backwards for someone holding a camcorder in one hand and a barcoded product in the other.  An option to flip the image would be nice.\u003c/p\u003e\n\u003cp\u003eIn my testing, I found video scanning to be, by far, the fastest way to add items.  It was a little tricky at first (much like real barcode scanning, as anyone who has worked in retail can attest), but I eventually got into a good rhythm.  I scanned about 70 CDs in my first 30 minutes of using the application.  That number includes several CDs that had no barcodes, and some that had to be touched up by hand (usually to correct incorrect cover art pulled from Amazon).  The fastest way to add items that lacked barcodes was usually a title search.\u003c/p\u003e\n\n          \n                  \u003c/div\u003e\n                    \n        \n          \n    \n    \u003cdiv\u003e\n          \n          \n\u003cp\u003eThe \u0026#34;Similar\u0026#34; button in the right-hand pane pulls a list of recommendations from Amazon.  The list includes links to view the item\u0026#39;s detail page at Amazon.com or to buy the item immediately.  (Actually, there\u0026#39;s a buffer web page in between that asks for one more click to add the item to the Amazon.com shopping cart, but I\u0026#39;m not sure if that\u0026#39;s just because I don\u0026#39;t have one-click purchasing enabled at Amazon.)\u003c/p\u003e\n\u003cp\u003eSmall iTunes-style arrow icons appear in many places.  Each one goes to Amazon.com: either a product page or a search based on the item next to the arrow.  All of these Amazon links contain Delicious Monster\u0026#39;s Amazon.com \u0026#34;associate id.\u0026#34;  Delicious Monster gets a small percentage of the purchase price of items purchased directly through one of these links, or even just purchased as part of the same shopping session.\u003c/p\u003e\n\u003cp\u003eThe connection with the Amazon.com oracle is a key part of Delicious Library, so much so that I wonder how useful the application would be if Amazon ever pulled the plug on its web services API.  This, unfortunately, is the risk all such applications must take...unless the developers are willing to implement their own oracle systems, which is a \u0026#34;non-trivial\u0026#34; task, to say the least.\u003c/p\u003e\n\u003cp\u003eOracle failures were the main source of frustration for me as I scanned my collection.  Amazon sometimes provides cover art that is poorly suited to Delicious Library\u0026#39;s usage of it.  Ideally, the cover art is exactly equivalent to the booklet or piece of paper that is slipped under the clear plastic cover of a CD jewel case or DVD keep case.  Many products on Amazon have cover art like this, but others diverge wildly.  This trend seems to be getting worse, with many more newer products suffering from it than old.  Here are just a few examples.  These are the images straight from Amazon, scaled but otherwise unmodified (i.e., empty space has \u003ci\u003enot\u003c/i\u003e been added around the edges).\u003c/p\u003e\n\n          \n                  \u003c/div\u003e\n                    \n        \n          \n    \n    \u003cdiv\u003e\n          \n          \n\u003cdiv\u003e\u003ctable\u003e\n\u003ctbody\u003e\u003ctr\u003e\n\u003cth colspan=\"2\"\u003eA sampling of bad cover art from Amazon.com\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" width=\"250\" alt=\"Cover with keep case and studio credit\" src=\"https://cdn.arstechnica.net/wp-content/uploads/archive/Media/2004/11/6/amazon-bad-lotr.jpg\" height=\"371\"/\u003e\u003cbr/\u003e\u003cspan\u003eImage includes keep case, studio logo, and lots of empty space\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" width=\"280\" alt=\"Package on an angle\" src=\"https://cdn.arstechnica.net/wp-content/uploads/archive/Media/2004/11/6/amazon-bad-starwars.jpg\" height=\"371\"/\u003e\u003cbr/\u003e\u003cspan\u003eEntire package shown on an angle\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" width=\"250\" alt=\"Package plus CD\" src=\"https://cdn.arstechnica.net/wp-content/uploads/archive/Media/2004/11/6/amazon-bad-gits-sac.jpg\" height=\"253\"/\u003e\u003cbr/\u003e\u003cspan\u003ePackage on an angle, plus the bundled CD\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\n\u003ctd\u003e\n\u003cp\u003e\u003cimg decoding=\"async\" width=\"391\" alt=\"Package exploded\" src=\"https://cdn.arstechnica.net/wp-content/uploads/archive/Media/2004/11/6/amazon-bad-godfather.jpg\" height=\"253\"/\u003e\u003cbr/\u003e\u003cspan\u003eA total mess\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\u003c/div\u003e\n\u003cp\u003eYou can imagine how awful these images look when scaled and stuck under the virtual clear plastic of Delicious Library\u0026#39;s packaging artwork.  Some can be edited down to something useful, but many cannot.\u003c/p\u003e\n\u003cp\u003eI also have a lot of imported DVDs and CDs, none of which are listed at the US Amazon.com web site.  Amazon\u0026#39;s UK site has some of them, but Delicious Library does not query that site.  Support for automatically detecting a product\u0026#39;s region of origin and then intelligently selecting the best oracle is planned for a future free upgrade.  It will be a welcome addition.\u003c/p\u003e\n\n\u003ch2\u003eThe big picture\u003c/h2\u003e\n\u003cp\u003eProducing a \u0026#34;1.0\u0026#34; release, no matter how seemingly trivial the application may be, is always a somewhat painful process.  The first version often doesn\u0026#39;t do everything that the developer had initially envisioned, and it almost never does everything that customers want it to do.  And then, of course, there are  bugs.\u003c/p\u003e\n\u003cp\u003eI\u0026#39;m not in a good position to comment on bugs since I\u0026#39;ve been using a prerelease version of Delicious Library.  But even the beta has been relatively bug free.  I\u0026#39;ve never crashed the application and I\u0026#39;ve never lost data.  There were several cosmetic bugs, but most issues were related to data lookup: missing cover art, failed lookups, etc.  According to the developers, these are known issues and will be fixed before 1.0.  Overall, I think it\u0026#39;s safe to expect the release version to be commendably stable.\u003c/p\u003e\n\u003cp\u003eBut let\u0026#39;s get back to the tension between features and the 1.0 release.  Delicious Monster seems to subscribe wholeheartedly to the market-driven strategy demonstrated so successfully in recent years by Apple\u0026#39;s iPod, iTunes, iPhoto, and iMovie products.  Delicious Monster has sought to understand the mindset of media collector, and has focused nearly all of its attention on satisfying the most primal needs of this market.\u003c/p\u003e\n\n          \n                  \u003c/div\u003e\n                    \n        \n          \n    \n    \u003cdiv\u003e\n          \n          \n\u003cp\u003eTheir effort has been fundamentally successful.  Delicious Library does the most important things it needs to do, and does them exceptionally well.  As a card-carrying member of the target market for this product, Delicious Library has fulfilled my basic needs with style and grace.\u003c/p\u003e\n\u003cp\u003eBut, inevitably, I want more.  Some would say that this is clearly a sign of a version 1.0 product, and they\u0026#39;d be right.  That\u0026#39;s okay, so long as the features that do exist are distributed appropriately.  But a desire for new features, and, more revealingly, a near-compulsion to dwell on the \u003ci\u003epossibilities\u003c/i\u003e for new features, is also a sign of a great product that has already begun to inspire loyalty and admiration.\u003c/p\u003e\n\u003cp\u003eI have big dreams for Delicious Library.  I want new shelf artwork, new media packaging templates, new ways to manipulate and view items in the shelf.  How about a full-screen mode with animated reshuffling and dynamic pan and zoom?  What about spine artwork for a more dense shelf view?\u003c/p\u003e\n\u003cp\u003eI want more varied oracles to help with obscure metadata lookups.  I have many out of print books and imported movies and CDs that I don\u0026#39;t want to enter by hand.  I want meta-oracles that aggregate information form many sources.  How about using Google\u0026#39;s image search and scraping eBay in order to present me with a list of possible cover images?\u003c/p\u003e\n\u003cp\u003eEverything should be extensible by third parties: themes, media art, oracle plug-ins, even the data itself.  Let\u0026#39;s go beyond oracles.  My obscure video game soundtrack CD may not be on Amazon, but I\u0026#39;ll bet plenty of other people have it.  If even just one of those people enters the metadata by hand and scans the cover art, I want to benefit from that work.  Let\u0026#39;s go peer-to-peer with everything.  Encourage correctness by integrating some form of reputation management for data entry.  Do it better than CDDB: stamp out all misspelled album titles and artist names.\u003c/p\u003e\n\n          \n                  \u003c/div\u003e\n                    \n        \n          \n    \n    \u003cdiv\u003e\n          \n          \n\u003cp\u003eI want multiple libraries per account, libraries shared by multiple accounts, library subsets published to selected users over the network or through the web.  I want scalable packaging that accurately reflects the relative sizes of individual books.  I want custom art for boxed sets of all types, with the ability to expand them and view the individual discs as separate items, with their own cover art if applicable.  In short, I want to create a Collector\u0026#39;s Utopia.\u003c/p\u003e\n\u003cp\u003eIf this all sounds way over the top to you, consider this.  With increasing bandwidth and personal data storage, there may soon come a time when the electronic distribution of media is the norm, and physical media is the secondary incarnation a collection.\u003c/p\u003e\n\u003cp\u003eSome might say that this has already happened for music.  How many people now purchase CDs only to immediately convert their contents to MP3 or AAC and then shelve the CDs permanently?  That\u0026#39;s how I\u0026#39;ve been operating for several years, although I won\u0026#39;t give up on physical media until the virtual equivalent is of the same quality.  But other people are not as picky, and are already content to purchase all of their music in the form of downloadable files.\u003c/p\u003e\n\u003cp\u003eIf the final quality barriers can be overcome with the aid of more bandwidth and more storage, then applications like Delicious Library suddenly seem a lot less frivolous.  In fact, they start to look like the \u003ci\u003esuccessor\u003c/i\u003e to today\u0026#39;s shelf full of optical discs in plastic packaging, rather than a mere imitation of them.\u003c/p\u003e\n\u003cp\u003eIn some ways, applications like iTunes already fill this role.  But Delicious Library has a broader reach, spanning all kinds of media and addressing some of the fundamental rewards of collecting that applications like iTunes have thus far ignored.  On the other hand, Delicious Library is not involved at all with playback or the management of anything but the metadata for digital media.  Ideally, both applications would begin to expand towards each other, meeting at some grand unified nexus of digital media collection, consumption, and management.\u003c/p\u003e\n\n          \n                  \u003c/div\u003e\n                    \n        \n          \n    \n    \u003cdiv\u003e\n          \n          \n\u003cp\u003eI consider it a sign of an good product when it inspires delusions of grandeur.  But there\u0026#39;s a dark side to my enthusiastic extrapolations as well.  I can also envision the many ways that things can go terribly wrong.  In the limited time I\u0026#39;ve had to test Delicious Library, I have not been able to really stress-test the database system.  Can it handle 10,000 items?  How about 100,000?  What are the limits?  How reliable is the data store?  And speaking of the data store, here\u0026#39;s yet another file with a disproportionately large amount of human effort invested it in?a file that, like my Quicken data file or email database, Must Be Preserved At All Costs.\u003c/p\u003e\n\u003cp\u003eWhat if I want to export to, or sync with, another database?  How dedicated to interoperability is Delicious Monster?  What if the product is a flop and they go under shortly after I\u0026#39;ve invested weeks importing my collection?\u003c/p\u003e\n\u003cp\u003eAnd then there\u0026#39;s the price: $39.95 for the software only, plus $175 more if I want the wireless barcode scanner.  Is that too much to ask for an application that, let\u0026#39;s face it, no one really needs?\u003c/p\u003e\n\u003cp\u003eIn the end, I am optimistic.  Considering the potential time sink of data entry and collection and management, $40 buys an awful lot of fun (or \u0026#34;fun\u0026#34;, if you\u0026#39;re not the collecting type) when compared with, say, a moderately priced dinner for two.  There\u0026#39;s also a special $29.95 price for users of these competing products: \u003ca href=\"http://www.chronopath.com/index.php?page=library\"\u003eChronopath Library\u003c/a\u003e, \u003ca href=\"http://www.intellisw.com/intelliscanner/collector/\"\u003eIntelliscan Collector\u003c/a\u003e, \u003ca href=\"http://www.deepprose.com/\"\u003eBooxter\u003c/a\u003e, \u003ca href=\"http://www.scourbase.com/DVDCollector/\"\u003eDVDCollector\u003c/a\u003e, \u003ca href=\"http://www.macupdate.com/info.php/id/13788\"\u003eiMedia\u003c/a\u003e, \u003ca href=\"http://www.bruji.com/dvdpedia/\"\u003eDVDpedia\u003c/a\u003e, \u003ca href=\"http://www.bruji.com/bookpedia/\"\u003eBookpedia\u003c/a\u003e, \u003ca href=\"http://homepage.mac.com/mysoftware/\"\u003eDVD Cache\u003c/a\u003e, \u003ca href=\"http://www.readerware.com/\"\u003eReaderware\u003c/a\u003e, and \u003ca href=\"http://homepage.mac.com/splitcube/splitcube/dvdshelf.htm\"\u003eDVD Shelf X\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e(As an aside, take a look at the web sites for the competing products.  Most of them are simple, attractive, and informative.  At least one of the products was created by a \u003ci\u003e12-year old\u003c/i\u003e (who, incidentally, also contributed to Delicious Library).  See if you can guess which one.)\u003c/p\u003e\n\n          \n                  \u003c/div\u003e\n                    \n        \n          \n    \n    \u003cdiv\u003e\n          \n          \n\u003cp\u003eIt\u0026#39;s been my experience that the best software is made by developers who are themselves part of the target market in some small (or not so small) way.  Something tells me that one or both of Delicious Library\u0026#39;s primary developers possess extensive, exquisitely cared for and organized media collections, and have actively sought new ways to manage and augment these collections.  They appear to be scratching their own itch, in the very best sense of that expression.\u003c/p\u003e\n\u003cp\u003ePart of what makes the Mac community so special is that so many Mac developers have itches?and, more importantly, corresponding \u003ci\u003etalents\u003c/i\u003e?that have little or nothing to do with computers.  I invite you to look again at some of the screenshots and artwork in this application.  Someone loved those graphics.  Someone sweated over every pixel of that application window.  Someone knows what it means to be a lover of art, music, books, video games.  This is \u003ci\u003ein addition to\u003c/i\u003e (not instead of) the ability to write great code.\u003c/p\u003e\n\u003cp\u003eAll of these human facilities and experiences have been harnessed to create not just a mere \u0026#34;program\u0026#34;, \u0026#34;application\u0026#34; or (God forbid) \u0026#34;executable\u0026#34;, but a digital love letter to collectors.  Delicious Monster, from its products to its \u003ca href=\"http://www.delicious-monster.com\"\u003eweb site\u003c/a\u003e, exudes a spirit of passion and fun.  \u0026#34;I\u0026#39;ve never been happier at work\u0026#34;, Wil Shipley told me in an email.  \u0026#34;I think it  shows in the finished product.\u0026#34;\u003c/p\u003e\n\u003cp\u003eI think so too.  It may only be version 1.0, but it\u0026#39;s delicious.\u003c/p\u003e\n\n\u003chr/\u003e\n\n\u003cp\u003e\u003cimg decoding=\"async\" width=\"163\" alt=\"8 out of 10\" src=\"https://cdn.arstechnica.net/wp-content/uploads/archive/images/awards/8.gif\" height=\"135\"/\u003e\u003cbr/\u003e\u003cspan\u003e(8.5 out of 10)\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003eNow we come to the more pragmatic portion of the product review, wherein I distill six pages of rambling into a single number between one and ten.  Here I must also point out, for those potentially blinded my by own diminutive reality distortion field, that this is a $40 product that lets you sort and search your collection of books, music, movies, and video games.  You do not need this product.  In fact, this product, if purchased, will undoubtedly absorb time that could be more productively spent doing something else.  Shortly  thereafter, you may simply get bored and never use it again.  You have been warned.\u003c/p\u003e\n\n          \n                  \u003c/div\u003e\n                    \n        \n          \n    \n    \u003cdiv\u003e\n\n        \n        \u003cdiv\u003e\n          \n          \n\u003cp\u003eIf you\u0026#39;re still interested, here\u0026#39;s how I think Delicious Library shakes out.  It\u0026#39;s clever, pretty, and fun, but also a bit green.  I\u0026#39;d give it a 9 out of 10 if not for the fact that most of my \u0026#34;dream features\u0026#34; are not even slated to be considered until at least the next major version.  Delicious Monster plans to charge for major version upgrades, so I\u0026#39;m dropping the final score to 8.5 out of 10.  (Apparently we only have artwork for integer ratings.  I\u0026#39;m not sure how fractions would look in Roman numerals anyway.)\u003c/p\u003e\n\u003cp\u003eTradition also dictates that I provide a list of pros and cons:\u003c/p\u003e\n\u003cp\u003e\u003cb\u003ePros:\u003c/b\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e Gorgeous \u0026#34;virtual packaging\u0026#34; graphics and shelf-view interface\u003c/li\u003e\n\u003cli\u003e More metadata than you can shake a stick at\u003c/li\u003e\n\u003cli\u003e Well-implemented barcode scanning feature with broad camera support\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cb\u003eCons:\u003c/b\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e Poor metadata look-up support for rare, out-of-print, and imported items\u003c/li\u003e\n\u003cli\u003e Some bad cover art from Amazon.com\u003c/li\u003e\n\u003cli\u003e Leaves you wanting more: P2P, third-party themes and packaging art, more/better metadata sources, better support for boxed sets, etc.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIf you can wait for version 2.0, you\u0026#39;ll get a better deal.  Of course, if no one buys 1.0, there won\u0026#39;t \u003ci\u003ebe\u003c/i\u003e a version 2.0.   I know I\u0026#39;d hate to see enthusiastic, talented, and (it needs to be said) admirably anal-retentive developers like those at Delicious Monster move on to another, potentially more lucrative platform, or another line of work entirely.  I\u0026#39;ve told you what I think, but in the end, the market will decide.\u003c/p\u003e\n\n\n          \n                  \u003c/div\u003e\n\n                  \n          \n\n\n\n\n\n\n  \u003cdiv\u003e\n  \u003cdiv\u003e\n          \u003cp\u003e\u003ca href=\"https://arstechnica.com/author/john-siracusa/\"\u003e\u003cimg src=\"https://arstechnica.com/wp-content/uploads/2016/05/j.siracusa-51.jpg\" alt=\"Photo of John Siracusa\"/\u003e\u003c/a\u003e\u003c/p\u003e\n  \u003c/div\u003e\n\n  \u003cdiv\u003e\n    \n\n    \u003cp\u003e\n      John Siracusa has a B.S. in Computer Engineering from Boston University. He has been a Mac user since 1984, a Unix geek since 1993, and is a professional web developer and freelance technology writer.\n    \u003c/p\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n\n\n  \u003cp\u003e\n    \u003ca href=\"https://arstechnica.com/gadgets/2004/11/delicious-library/#comments\" title=\"0 comments\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 80 80\"\u003e\u003cdefs\u003e\u003cclipPath id=\"bubble-zero_svg__a\"\u003e\u003cpath fill=\"none\" stroke-width=\"0\" d=\"M0 0h80v80H0z\"\u003e\u003c/path\u003e\u003c/clipPath\u003e\u003cclipPath id=\"bubble-zero_svg__b\"\u003e\u003cpath fill=\"none\" stroke-width=\"0\" d=\"M0 0h80v80H0z\"\u003e\u003c/path\u003e\u003c/clipPath\u003e\u003c/defs\u003e\u003cg clip-path=\"url(#bubble-zero_svg__a)\"\u003e\u003cg fill=\"currentColor\" clip-path=\"url(#bubble-zero_svg__b)\"\u003e\u003cpath d=\"M80 40c0 22.09-17.91 40-40 40S0 62.09 0 40 17.91 0 40 0s40 17.91 40 40\"\u003e\u003c/path\u003e\u003cpath d=\"M40 40 .59 76.58C-.67 77.84.22 80 2.01 80H40z\"\u003e\u003c/path\u003e\u003c/g\u003e\u003c/g\u003e\u003c/svg\u003e\n    0 Comments\n  \u003c/a\u003e\n      \u003c/p\u003e\n\n\n\u003cp\u003eComments are closed.\u003c/p\u003e\n\n\n  \n              \u003c/div\u003e\n  \u003c/article\u003e\n\n\n  \u003cdiv\u003e\n    \u003cheader\u003e\n      \u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 40 26\"\u003e\u003cdefs\u003e\u003cclipPath id=\"most-read_svg__a\"\u003e\u003cpath fill=\"none\" d=\"M0 0h40v26H0z\"\u003e\u003c/path\u003e\u003c/clipPath\u003e\u003cclipPath id=\"most-read_svg__b\"\u003e\u003cpath fill=\"none\" d=\"M0 0h40v26H0z\"\u003e\u003c/path\u003e\u003c/clipPath\u003e\u003c/defs\u003e\u003cg clip-path=\"url(#most-read_svg__a)\"\u003e\u003cg fill=\"none\" clip-path=\"url(#most-read_svg__b)\"\u003e\u003cpath fill=\"currentColor\" d=\"M20 2h.8q1.5 0 3 .6c.6.2 1.1.4 1.7.6 1.3.5 2.6 1.3 3.9 2.1.6.4 1.2.8 1.8 1.3 2.9 2.3 5.1 4.9 6.3 6.4-1.1 1.5-3.4 4-6.3 6.4-.6.5-1.2.9-1.8 1.3q-1.95 1.35-3.9 2.1c-.6.2-1.1.4-1.7.6q-1.5.45-3 .6h-1.6q-1.5 0-3-.6c-.6-.2-1.1-.4-1.7-.6-1.3-.5-2.6-1.3-3.9-2.1-.6-.4-1.2-.8-1.8-1.3-2.9-2.3-5.1-4.9-6.3-6.4 1.1-1.5 3.4-4 6.3-6.4.6-.5 1.2-.9 1.8-1.3q1.95-1.35 3.9-2.1c.6-.2 1.1-.4 1.7-.6q1.5-.45 3-.6zm0-2h-1c-1.2 0-2.3.3-3.4.6-.6.2-1.3.4-1.9.7-1.5.6-2.9 1.4-4.3 2.3-.7.5-1.3.9-1.9 1.4C2.9 8.7 0 13 0 13s2.9 4.3 7.5 7.9c.6.5 1.3 1 1.9 1.4 1.3.9 2.7 1.7 4.3 2.3.6.3 1.3.5 1.9.7 1.1.3 2.3.6 3.4.6h2c1.2 0 2.3-.3 3.4-.6.6-.2 1.3-.4 1.9-.7 1.5-.6 2.9-1.4 4.3-2.3.7-.5 1.3-.9 1.9-1.4C37.1 17.3 40 13 40 13s-2.9-4.3-7.5-7.9c-.6-.5-1.3-1-1.9-1.4-1.3-.9-2.8-1.7-4.3-2.3-.6-.3-1.3-.5-1.9-.7C23.3.4 22.1.1 21 .1h-1\"\u003e\u003c/path\u003e\u003cpath fill=\"#ff4e00\" d=\"M20 5c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8m0 11c-1.7 0-3-1.3-3-3s1.3-3 3-3 3 1.3 3 3-1.3 3-3 3\"\u003e\u003c/path\u003e\u003c/g\u003e\u003c/g\u003e\u003c/svg\u003e\n      \n    \u003c/header\u003e\n    \u003col\u003e\n              \u003cli\u003e\n                      \u003ca href=\"https://arstechnica.com/space/2024/11/with-dragonfly-contract-nasa-will-certify-spacex-for-nuclear-powered-payloads/\"\u003e\n              \u003cimg src=\"https://cdn.arstechnica.net/wp-content/uploads/2024/11/graphite-impact-shell-gis-768x432.jpg\" alt=\"Listing image for first story in Most Read: NASA awards SpaceX a contract for one of the few things it hasn’t done yet\" decoding=\"async\" loading=\"lazy\"/\u003e\n            \u003c/a\u003e\n                    \n        \u003c/li\u003e\n                    \u003cli\u003e\n                    \n        \u003c/li\u003e\n                    \u003cli\u003e\n                    \n        \u003c/li\u003e\n                    \u003cli\u003e\n                    \n        \u003c/li\u003e\n                    \u003cli\u003e\n                    \n        \u003c/li\u003e\n                  \u003c/ol\u003e\n\u003c/div\u003e\n\n\n  \n\n  \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "42 min read",
  "publishedTime": "2004-11-08T15:25:00Z",
  "modifiedTime": "2004-11-08T15:25:00Z"
}
