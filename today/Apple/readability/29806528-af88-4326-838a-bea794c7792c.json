{
  "id": "29806528-af88-4326-838a-bea794c7792c",
  "title": "I Have Many Questions About Apple’s Updated Foundation Models and the (Great) ‘Use Model’ Action in Shortcuts",
  "link": "https://www.macstories.net/notes/i-have-many-questions-about-apples-updated-foundation-models-and-the-great-use-model-action-in-shortcuts/",
  "description": "Apple’s ‘Use Model’ action in Shortcuts. I mentioned this on AppStories during the week of WWDC: I think Apple’s new ‘Use Model’ action in Shortcuts for iOS/iPadOS/macOS 26, which lets you prompt either the local or cloud-based Apple Foundation models, is Apple Intelligence’s best and most exciting new feature for power users this year. This […]",
  "author": "Federico Viticci",
  "published": "Sun, 22 Jun 2025 16:48:57 +0000",
  "source": "https://www.macstories.net/feed",
  "categories": [
    "notes",
    "AI",
    "Apple Intelligence",
    "iOS 26",
    "shortcuts"
  ],
  "byline": "Federico Viticci",
  "length": 10930,
  "excerpt": "I mentioned this on AppStories during the week of WWDC: I think Apple’s new ‘Use Model’ action in Shortcuts for iOS/iPadOS/macOS 26, which lets you prompt either the local or cloud-based Apple Foundation models, is Apple Intelligence’s best and most exciting new feature for power users this year. This blog post is a way for",
  "siteName": "",
  "favicon": "https://www.macstories.net/app/themes/macstories4/images/apple-touch-icon-152x152-precomposed.png",
  "text": "I mentioned this on AppStories during the week of WWDC: I think Apple’s new ‘Use Model’ action in Shortcuts for iOS/iPadOS/macOS 26, which lets you prompt either the local or cloud-based Apple Foundation models, is Apple Intelligence’s best and most exciting new feature for power users this year. This blog post is a way for me to better explain why as well as publicly investigate some aspects of the updated Foundation models that I don’t fully understand yet. On the surface, the ‘Use Model’ action is pretty simple: you can choose to prompt Apple’s on-device model, the cloud one hosted on Private Cloud Compute, or ChatGPT. You can type whatever you want in the prompt, and you can choose to enable a follow-up mode in the action that lets you have a chatbot-like conversation with the model. What’s immediately notable here is that, while third-party app developers only got access to the local Foundation model to use in their apps, Shortcuts users can prompt either versions of AFM. It’s not clear if the cloud model is going to be rate-limited if you perform too many requests in a row, which is something I’d like to clarify at some point (but I would expect so). Likewise, while the ChatGPT integration seems to integrate with the native ChatGPT extension in Settings and therefore connects to your OpenAI account, it’s not clear which ChatGPT model is being used at the moment. Trying to ask the model about it from Shortcuts showed that ChatGPT in Shortcuts was using GPT-4 Turbo, which is a very old model at this point (from November 2023). I want to focus on the Apple Foundation models for now. To understand how they work, let’s first take a look at a recent post from Apple’s Machine Learning Research blog. On June 9, the company shared some details on the updated Foundation models, writing: The models have improved tool-use and reasoning capabilities, understand image and text inputs, are faster and more efficient, and are designed to support 15 languages. Our latest foundation models are optimized to run efficiently on Apple silicon, and include a compact, approximately 3-billion-parameter model, alongside a mixture-of-experts server-based model with a novel architecture tailored for Private Cloud Compute. These two foundation models are part of a larger family of generative models created by Apple to support our users. Both Foundation models were originally released last year. Apple doesn’t explicitly mention whether the ‘Use Model’ action in Shortcuts is currently using the updated versions of AFM compared to last year’s versions, but I would assume so? Again, I’d love to know more about this. Assuming that the answer is “yes”, we’re then looking at a small, ~3B model running locally on-device, and a bigger, cloud-hosted model (previously referred to as “AFM-server”) running on Private Cloud Compute. How big is exactly that model, though? Again, let’s go back to the blog post: We found that our on-device model performs favorably against the slightly larger Qwen-2.5-3B across all languages and is competitive against the larger Qwen-3-4B and Gemma-3-4B in English. Our server-based model performs favorably against Llama-4-Scout, whose total size and active number of parameters are comparable to our server model, but is behind larger models such as Qwen-3-235B and the proprietary GPT-4o. If Llama-4-Scout is “comparable” to AFM-server, we may assume that the updated AFM-server based on a MoE architecture is ~17 billion in size. Apple hasn’t officially documented this anywhere. Still, as a frame of reference, Apple is saying that their server model isn’t as good as modern ChatGPT or the latest large Qwen 3 model. But perhaps internally they do have one that matches the current version of ChatGPT in quality and performance? Another aspect of the updated Apple Foundation models I’d like to understand are their vision capabilities. On its blog, Apple writes: \u2028 We compared the on-device model to vision models of similar size, namely InternVL-2.5-4B, Qwen-2.5-VL-3B-Instruct, and Gemma-3-4B, and our server model to Llama-4-Scout, Qwen-2.5-VL-32B, and GPT–4o. We found that Apple’s on-device model performs favorably against the larger InternVL and Qwen and competitively against Gemma, and our server model outperforms Qwen-2.5-VL, at less than half the inference FLOPS, but is behind Llama-4-Scout and GPT–4o. The problem is that, right now, trying to analyze an image using the local model with the ‘Use Model’ action in Shortcuts doesn’t work. When I give it this image, I get this response: \u2028 I’m sorry, but I can’t describe images directly. However, if you provide a detailed description or tell me what you see, I’d be happy to help you analyze or interpret it! Whereas running the same prompt with the cloud model returns a pretty good response: The image shows a person walking two dogs on a paved path. The person is wearing white sneakers and is holding two leashes, one pink and one purple. The dogs are walking side by side, both with light brown fur and wearing harnesses. The path is lined with grass and some small plants on the left side. The scene appears to be outdoors, possibly in a park or a residential area. The lighting suggests it might be daytime. Does this mean that Shortcuts is still using an old version of the on-device model, which didn’t have vision capabilities? Or is it the new model from 2025, but the vision features haven’t been enabled in Shortcuts yet? Also: why is it that, if I give the cloud model the same picture over and over, I always get the exact same response, even after several days? Is Apple caching a static copy of each uploaded file on its servers for days and associating it with a specific description to decrease latency and inference costs? Again: has this been documented anywhere? Please let me know if so. The most fascinating part of the ‘Use Model’ action is that it works with structured data and is able to directly parse native Shortcuts entities as well as return specific data types upon configuration. For example, you can tell the ‘Use Model’ action to return a ‘Dictionary’ for your prompt, and the model’s response will be a native dictionary type in Shortcuts that you can parse with the app’s built-in actions. Or you can choose to return text, lists, and Boolean values. But there’s more: the ‘Use Model’ action can take in Shortcuts variables, understand them, and return them in its output, going beyond the typical limitations of plain text responses from chatbots. From the official description of the ‘Use Model’ action: A request for the model that optionally includes variables and outputs from previous actions, including calendar events, reminders, photos, and more. The “and more” is doing a lot of work here, in the sense that, based on my first tests, this action seems to be able to parse any Shortcuts variable you give it. I put together a simple shortcut that gets all my unread items from GoodLinks and asks the local model: You are an intelligent read-later assistant. Your job is to process multiple articles and return only the ones that match the topic requested by the user. When analyzing articles, consider their Title and Summary as available in those properties of the Link variable. Return a subset of items in the Link variable that ONLY match the user’s query. User Request Can you give me links about Liquid Glass? Links Here are the links: {{Link Variable from GoodLinks}} Once configured to return a ‘Link’ type in its output, the action can parse GoodLinks entities (which contain multiple pieces of metadata about each saved article), filter the ones that don’t match my query, and return a native list of GoodLinks items about Liquid Glass: This also works with Reminders, Calendar events, photos, and other third-party apps I’ve tested. For example, the model was also able to return variables for News Explorer, an iCloud-based RSS reader that has excellent Shortcuts integration. Interestingly, neither Apple Intelligence models were able to parse 43 unread items in my RSS feeds, citing context length issues. This is something else I’d like to know: Apple’s blog post suggests that AFM was trained with prompts up to 65K tokens in size, but is that actually the case in Shortcuts with the ‘Use Model’ action? Regardless, ChatGPT got it done and was able to summarize all my unread items from News Explorer to give me an overview of what my unread feeds were saying: How is this possible? We do actually have an answer to this! The ‘Use Model’ action converts Shortcuts entities from apps (such as my GoodLinks articles or reminders) into a JSON representation that AFM or ChatGPT can understand and return. Everything is, of course, based on the App Intents framework and its related app entities for third-party apps that expose actions to Shortcuts. If you’re logged in with a ChatGPT account, you can even see the request and the raw JSON content coming from Shortcuts: Apple went into more detail about how this works in this WWDC session video, which I’m also embedding below. The relevant section starts at the 1:20 minute mark. Again, I’d love to know some additional details here: are there limits on the numbers of entities converted to JSON behind the scenes that you can pass to a model? Can this JSON-based approach easily scale to more potential Apple Intelligence model integrations in the future, since both Gemini and Claude are pretty great at dealing with JSON content and instruction-following? Is there a specific style of prompting Apple’s Foundation models (similar to Claude or GPT 4.1) that we should be aware of? I’d love to see the system prompt that injects JSON and related instructions into the main action prompt, but I’m guessing that’s never going to happen since Apple doesn’t seem to be interested in sharing system prompts for Apple Intelligence. I’m excited about the prospect of “Apple-approved” hybrid automation in Shortcuts that combines the non-deterministic output of LLMs with the traditional, top-to-bottom approach of workflows in Shortcuts. I have so many ideas for how I could integrate this kind of technology with shortcuts that deal with RSS, tasks, events, articles, and more. The fact that Apple designed the ‘Use Model’ action to “just work” thanks to JSON under the hood is very promising: as I’ve shown in my example, it means that entities from Shortcuts actions don’t have to belong to apps that have been updated for iOS 26; I’m running the iOS 18 version of GoodLinks, and the ‘Use Model’ action worked out of the box with GoodLinks entities. Hopefully, as the dust settles on the first developer betas of iOS/iPadOS/macOS 26, Apple will reveal more details about their Foundation models and their integration with Shortcuts. Who would have thought, just two weeks ago, that I’d be genuinely intrigued by something related to Apple Intelligence?",
  "image": "https://cdn.macstories.net/img_0150-1750583786099.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n                        \n\u003cp id=\"p2\"\u003eI \u003ca href=\"https://appstories.net/episodes/440\" rel=\"noopener noreferrer\"\u003ementioned this on AppStories\u003c/a\u003e during the week of WWDC: I think Apple’s new ‘Use Model’ action in Shortcuts for iOS/iPadOS/macOS 26, which lets you prompt either the local or cloud-based Apple Foundation models, is Apple Intelligence’s best and most exciting new feature for power users this year. This blog post is a way for me to better explain why as well as publicly investigate some aspects of the updated Foundation models that I don’t fully understand yet.\u003c/p\u003e\n\n\u003cp id=\"p4\"\u003eOn the surface, the ‘Use Model’ action is pretty simple: you can choose to prompt Apple’s on-device model, the cloud one hosted on \u003ca href=\"https://security.apple.com/blog/private-cloud-compute/\" rel=\"noopener noreferrer\"\u003ePrivate Cloud Compute\u003c/a\u003e, or ChatGPT. You can type whatever you want in the prompt, and you can choose to enable a follow-up mode in the action that lets you have a chatbot-like conversation with the model.\u003c/p\u003e\n\n\u003cp id=\"p6\"\u003eWhat’s immediately notable here is that, while third-party app developers only got access to the \u003ca href=\"https://developer.apple.com/documentation/foundationmodels\" rel=\"noopener noreferrer\"\u003elocal Foundation model to use in their apps\u003c/a\u003e, Shortcuts users can prompt either versions of \u003ca href=\"https://www.macstories.net/linked/how-could-apple-use-open-source-ai-models/\" rel=\"noopener noreferrer\"\u003eAFM\u003c/a\u003e. It’s not clear if the cloud model is going to be rate-limited if you perform too many requests in a row, which is something I’d like to clarify at some point (but I would expect so). Likewise, while the ChatGPT integration seems to integrate with the native ChatGPT extension in Settings and therefore connects to your OpenAI account, it’s not clear which ChatGPT model is being used at the moment. Trying to ask the model about it from Shortcuts \u003ca href=\"https://mastodon.macstories.net/@viticci/114701298406224603\" rel=\"noopener noreferrer\"\u003eshowed\u003c/a\u003e that ChatGPT in Shortcuts was using \u003ca href=\"https://platform.openai.com/docs/models/gpt-4-turbo\" rel=\"noopener noreferrer\"\u003eGPT-4 Turbo\u003c/a\u003e, which is a \u003cem\u003every\u003c/em\u003e old model at this point (from November 2023).\u003c/p\u003e\n\u003cp id=\"p7\"\u003eI want to focus on the Apple Foundation models for now. To understand how they work, let’s first take a look at a \u003ca href=\"https://machinelearning.apple.com/research/apple-foundation-models-2025-updates\" rel=\"noopener noreferrer\"\u003erecent post\u003c/a\u003e from \u003ca href=\"https://machinelearning.apple.com/\" rel=\"noopener noreferrer\"\u003eApple’s Machine Learning Research blog\u003c/a\u003e. On June 9, the company shared some details on the updated Foundation models, writing:\u003c/p\u003e\n\u003cblockquote id=\"blockquote8\"\u003e\u003cp\u003e\n  The models have improved tool-use and reasoning capabilities, understand image and text inputs, are faster and more efficient, and are designed to support 15 languages. Our latest foundation models are optimized to run efficiently on Apple silicon, and include a compact, approximately 3-billion-parameter model, alongside a mixture-of-experts server-based model with a novel architecture tailored for \u003ca href=\"https://security.apple.com/blog/private-cloud-compute/\" rel=\"noopener noreferrer\"\u003ePrivate Cloud Compute\u003c/a\u003e. These two foundation models are part of a larger family of generative models created by Apple to support our users.\n\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp id=\"p9\"\u003eBoth Foundation models were originally released last year. Apple doesn’t explicitly mention whether the ‘Use Model’ action in Shortcuts is currently using the updated versions of AFM compared to last year’s versions, but I would assume so? Again, I’d love to know more about this. Assuming that the answer is “yes”, we’re then looking at a small, ~3B model running locally on-device, and a bigger, cloud-hosted model (previously referred to as “AFM-server”) running on Private Cloud Compute. How big is exactly that model, though? Again, let’s go back to the blog post:\u003c/p\u003e\n\u003cblockquote id=\"blockquote10\"\u003e\u003cp\u003e\n  We found that our on-device model performs favorably against the slightly larger Qwen-2.5-3B across all languages and is competitive against the larger Qwen-3-4B and Gemma-3-4B in English. Our server-based model performs favorably against Llama-4-Scout, whose total size and active number of parameters are comparable to our server model, but is behind larger models such as Qwen-3-235B and the proprietary GPT-4o.\n\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp id=\"p11\"\u003eIf \u003ca href=\"https://ai.meta.com/blog/llama-4-multimodal-intelligence/\" rel=\"noopener noreferrer\"\u003eLlama-4-Scout\u003c/a\u003e is “comparable” to AFM-server, we may assume that the updated AFM-server based on a \u003ca href=\"https://medium.com/@mne/explaining-the-mixture-of-experts-moe-architecture-in-simple-terms-85de9d19ea73\" rel=\"noopener noreferrer\"\u003eMoE architecture\u003c/a\u003e is ~17 billion in size. Apple hasn’t officially documented this anywhere. Still, as a frame of reference, Apple is saying that their server model isn’t as good as modern ChatGPT or the latest large \u003ca href=\"https://qwenlm.github.io/blog/qwen3/\" rel=\"noopener noreferrer\"\u003eQwen 3\u003c/a\u003e model. But perhaps internally they do have one that \u003ca href=\"https://www.macrumors.com/2025/05/19/next-gen-siri-is-on-par-with-chatgpt/\" rel=\"noopener noreferrer\"\u003ematches the current version of ChatGPT\u003c/a\u003e in quality and performance?\u003c/p\u003e\n\u003cp id=\"p12\"\u003eAnother aspect of the updated Apple Foundation models I’d like to understand are their vision capabilities. On its blog, Apple writes:\u003cbr/\u003e\n\u2028\u003c/p\u003e\n\u003cblockquote id=\"blockquote13\"\u003e\u003cp\u003e\n  We compared the on-device model to vision models of similar size, namely InternVL-2.5-4B, Qwen-2.5-VL-3B-Instruct, and Gemma-3-4B, and our server model to Llama-4-Scout, Qwen-2.5-VL-32B, and GPT–4o. We found that Apple’s on-device model performs favorably against the larger InternVL and Qwen and competitively against Gemma, and our server model outperforms Qwen-2.5-VL, at less than half the inference FLOPS, but is behind Llama-4-Scout and GPT–4o.\n\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp id=\"p14\"\u003eThe problem is that, right now, trying to analyze an image using the local model with the ‘Use Model’ action in Shortcuts doesn’t work. When I give it \u003ca href=\"https://cdn.macstories.net/img_0077-1750549359945.jpeg\" rel=\"noopener noreferrer\"\u003ethis image\u003c/a\u003e, I get this response:\u003cbr/\u003e\n\u2028\u003c/p\u003e\n\u003cblockquote id=\"blockquote15\"\u003e\u003cp\u003e\n  I’m sorry, but I can’t describe images directly. However, if you provide a detailed description or tell me what you see, I’d be happy to help you analyze or interpret it!\n\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp id=\"p16\"\u003eWhereas running the same prompt with the cloud model returns a pretty good response:\u003c/p\u003e\n\u003cblockquote id=\"blockquote17\"\u003e\u003cp\u003e\n  The image shows a person walking two dogs on a paved path. The person is wearing white sneakers and is holding two leashes, one pink and one purple. The dogs are walking side by side, both with light brown fur and wearing harnesses. The path is lined with grass and some small plants on the left side. The scene appears to be outdoors, possibly in a park or a residential area. The lighting suggests it might be daytime.\n\u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp id=\"p19\"\u003eDoes this mean that Shortcuts is still using an old version of the on-device model, which didn’t have vision capabilities? Or is it the new model from 2025, but the vision features haven’t been enabled in Shortcuts yet? Also: why is it that, if I give the cloud model the same picture over and over, I always get the exact same response, even after several days? Is Apple caching a static copy of each uploaded file on its servers for days and associating it with a specific description to decrease latency and inference costs? Again: has this been documented anywhere? Please let me know if so.\u003c/p\u003e\n\u003cp id=\"p20\"\u003eThe most fascinating part of the ‘Use Model’ action is that it works with structured data and is able to directly parse native Shortcuts entities as well as return specific data types upon configuration. For example, you can tell the ‘Use Model’ action to return a ‘Dictionary’ for your prompt, and the model’s response will be a native dictionary type in Shortcuts that you can parse with the app’s built-in actions. Or you can choose to return text, lists, and Boolean values.\u003c/p\u003e\n\n\u003cp id=\"p22\"\u003eBut there’s more: the ‘Use Model’ action can take in Shortcuts variables, understand them, and return them in its output, going beyond the typical limitations of plain text responses from chatbots. From the official description of the ‘Use Model’ action:\u003c/p\u003e\n\u003cblockquote id=\"blockquote23\"\u003e\u003cp\u003e\n  A request for the model that optionally includes variables and outputs from previous actions, including calendar events, reminders, photos, and more.\n\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp id=\"p24\"\u003eThe “and more” is doing a lot of work here, in the sense that, based on my first tests, this action seems to be able to parse \u003cem\u003eany\u003c/em\u003e Shortcuts variable you give it. I put together a simple shortcut that gets all my unread items from \u003ca href=\"https://apps.apple.com/us/app/goodlinks/id1474335294\" rel=\"noopener noreferrer\"\u003eGoodLinks\u003c/a\u003e and asks the local model:\u003c/p\u003e\n\u003cblockquote id=\"blockquote25\"\u003e\u003cp\u003e\n  You are an intelligent read-later assistant. Your job is to process multiple articles and return only the ones that match the topic requested by the user.\u003c/p\u003e\n\u003cp\u003e  When analyzing articles, consider their Title and Summary as available in those properties of the Link variable. Return a subset of items in the Link variable that ONLY match the user’s query.\u003c/p\u003e\n\u003cp\u003e  User Request\u003c/p\u003e\n\u003cp\u003e  Can you give me links about Liquid Glass?\u003c/p\u003e\n\u003cp\u003e  Links\u003c/p\u003e\n\u003cp\u003e  Here are the links:\u003c/p\u003e\n\u003cp\u003e  {{Link Variable from GoodLinks}}\n\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp id=\"p26\"\u003eOnce configured to return a ‘Link’ type in its output, the action can parse GoodLinks entities (which contain multiple pieces of metadata about each saved article), filter the ones that don’t match my query, and return a native list of GoodLinks items about Liquid Glass:\u003c/p\u003e\n\n\u003cp id=\"p28\"\u003eThis also works with Reminders, Calendar events, photos, and other third-party apps I’ve tested. For example, the model was also able to return variables for \u003ca href=\"https://apps.apple.com/us/app/news-explorer/id1032668306\" rel=\"noopener noreferrer\"\u003eNews Explorer\u003c/a\u003e, an iCloud-based RSS reader that has excellent Shortcuts integration. Interestingly, neither Apple Intelligence models were able to parse 43 unread items in my RSS feeds, citing context length issues. This is something else I’d like to know: Apple’s blog post suggests that AFM was trained with prompts up to 65K tokens in size, but is that actually the case in Shortcuts with the ‘Use Model’ action? Regardless, ChatGPT got it done and was able to summarize all my unread items from News Explorer to give me an overview of what my unread feeds were saying:\u003c/p\u003e\n\n\u003cp id=\"p30\"\u003eHow is this possible? We do actually have an answer to this! The ‘Use Model’ action converts Shortcuts entities from apps (such as my GoodLinks articles or reminders) into a \u003cstrong\u003eJSON representation\u003c/strong\u003e that AFM or ChatGPT can understand and return. Everything is, of course, based on the \u003ca href=\"https://developer.apple.com/documentation/appintents\" rel=\"noopener noreferrer\"\u003eApp Intents framework\u003c/a\u003e and its related \u003ca href=\"https://developer.apple.com/documentation/appintents/app-entities\" rel=\"noopener noreferrer\"\u003eapp entities\u003c/a\u003e for third-party apps that expose actions to Shortcuts.\u003c/p\u003e\n\n\u003cp id=\"p32\"\u003eIf you’re logged in with a ChatGPT account, you can even see the request and the raw JSON content coming from Shortcuts:\u003c/p\u003e\n\n\u003cp id=\"p34\"\u003eApple went into more detail about how this works in \u003ca href=\"https://youtu.be/XRDEnbdnIOY?si=utdvuT9ml-3D-BKs\" rel=\"noopener noreferrer\"\u003ethis WWDC session video\u003c/a\u003e, which I’m also embedding below. The relevant section starts at the 1:20 minute mark.\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003ciframe type=\"text/html\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/XRDEnbdnIOY?version=3\u0026amp;rel=1\u0026amp;fs=1\u0026amp;autohide=2\u0026amp;showsearch=0\u0026amp;showinfo=1\u0026amp;iv_load_policy=1\u0026amp;wmode=transparent\" allowfullscreen=\"true\"\u003e\u003c/iframe\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp id=\"p36\"\u003eAgain, I’d love to know some additional details here: are there limits on the numbers of entities converted to JSON behind the scenes that you can pass to a model? Can this JSON-based approach easily scale to more potential Apple Intelligence model integrations in the future, since both Gemini and Claude are pretty great at dealing with JSON content and instruction-following? Is there a specific style of prompting Apple’s Foundation models (similar to \u003ca href=\"https://docs.anthropic.com/en/docs/build-with-claude/prompt-engineering/use-xml-tags\" rel=\"noopener noreferrer\"\u003eClaude\u003c/a\u003e or \u003ca href=\"https://cookbook.openai.com/examples/gpt4-1_prompting_guide\" rel=\"noopener noreferrer\"\u003eGPT 4.1\u003c/a\u003e) that we should be aware of?\u003c/p\u003e\n\u003cp id=\"p37\"\u003eI’d \u003cem\u003elove\u003c/em\u003e to see the system prompt that injects JSON and related instructions into the main action prompt, but I’m guessing that’s never going to happen since Apple doesn’t seem to be interested in sharing system prompts for Apple Intelligence.\u003c/p\u003e\n\u003cp id=\"p38\"\u003eI’m excited about the prospect of “Apple-approved” \u003ca href=\"https://www.macstories.net/tag/hybrid-automation/\" rel=\"noopener noreferrer\"\u003ehybrid automation\u003c/a\u003e in Shortcuts that combines the non-deterministic output of LLMs with the traditional, top-to-bottom approach of workflows in Shortcuts. I have so many ideas for how I could integrate this kind of technology with shortcuts that deal with RSS, tasks, events, articles, and more. The fact that Apple designed the ‘Use Model’ action to “just work” thanks to JSON under the hood \u003cem\u003eis\u003c/em\u003e very promising: as I’ve shown in my example, it means that entities from Shortcuts actions don’t have to belong to apps that have been updated for iOS 26; I’m running the iOS 18 version of GoodLinks, and the ‘Use Model’ action worked out of the box with GoodLinks entities.\u003c/p\u003e\n\u003cp id=\"p39\"\u003eHopefully, as the dust settles on the first developer betas of iOS/iPadOS/macOS 26, Apple will reveal more details about their Foundation models and their integration with Shortcuts. Who would have thought, just two weeks ago, that I’d be genuinely intrigued by something related to Apple Intelligence?\u003c/p\u003e\n            \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "12 min read",
  "publishedTime": "2025-06-22T16:48:57-04:00",
  "modifiedTime": null
}
