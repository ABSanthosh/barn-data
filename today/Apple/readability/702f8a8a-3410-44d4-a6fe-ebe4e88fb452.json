{
  "id": "702f8a8a-3410-44d4-a6fe-ebe4e88fb452",
  "title": "Hyperspace 1.1",
  "link": "https://hypercritical.co/hyperspace/",
  "description": "",
  "author": "John Gruber",
  "published": "2025-03-18T23:03:41Z",
  "source": "https://daringfireball.net/feeds/main",
  "categories": null,
  "byline": "",
  "length": 46440,
  "excerpt": "A: Hyperspace searches for files with identical contents within one or more folders. If it finds any, it can then reclaim the disk space taken by all but one of the identical files—without removing any of the files!",
  "siteName": "",
  "favicon": "https://hypercritical.co/images/tiny-mac-192.png",
  "text": "Q: What does Hyperspace do? A: Hyperspace searches for files with identical contents within one or more folders. If it finds any, it can then reclaim the disk space taken by all but one of the identical files—without removing any of the files! You can learn more about how this is done, if you’re interested, but the short version is that Hyperspace uses a standard feature of the macOS file system: space-saving clones. The Finder does the same thing when you duplicate a file. Q: What are terms that I should know before reading this documentation? A: The following words and phrases will be used in this document and throughout the Hyperspace user interface: Scanning: The process of examining files to determine if they are candidates for reclamation. Reclamation: The process of replacing a set of files that have identical contents with space-saving clones of each other, reclaiming disk space. When a file is “reclaimed” that means it is replaced with a space-saving clone. Space-saving clones: Files that all share a single instance of data on disk. See a longer explanation of how this works, if you’re interested. Disk: The physical device where data is stored. In years past, this might have been a spinning hard disk. These days, it’s more likely to be an SSD. The term “disk space” is mostly a holdover from years past when hard disks were more common. Today we might say “storage space” instead. In this document and in the Hyperspace app itself, the term “disk space” appears often, mostly because it’s still in common use (but also because the app’s creator was born in the 1970s). Identical file group: When Hyperspace finds files with identical contents, it puts them together in a group. The goal is to reclaim disk space by converting all but one of the files in the group into space-saving clones of a single designated source file. Source file: In each group of identical files, one file in the group is designated as the “source” file. This is the file from which all the space-saving clones are created. It is the “original” file for all the clones. The source file is only read. It is never modified. Target file: In each group of identical files, one file in the group is designated as the source file and the rest are “target” files. The target files will be replaced with space-saving clones during reclamation. Package: A “package” is a directory that is presented to the user as a file. For example, a .rtfd file (a “Rich Text Document With Attachments”) created by TextEdit is actually a directory that contains a .rtf file plus any attachments (e.g., images included in the document). The Finder displays and handles this .rtfd directory as if it were a single file. Other common examples of packages are iMovie libraries (.imovielibrary) and Photos libraries (.photoslibrary). Q: How do I use Hyperspace? There are three steps to using Hyperspace: Scan, Review, and Reclaim. Scan After launching Hyperspace, click the “Choose Folder…” button at the top of the main window, then select a folder to scan. (You can also drag and drop a folder onto that area.) This should be a folder that you own. Folders owned by other users or by the system can be scanned, but only files owned by the current user can be reclaimed. Once a folder is selected, a green “+\" and a red “-” button will appear beside it. Click the “-” button to unselect the folder. Click the “+\" button to add another folder. Click the “Reset” button in the lower-left corner of the window to start over, if desired. When more than one folder is selected, Hyperspace will search for duplicates within both folders. Selecting multiple folders offers some new possibilities, described in another section of this document. After selecting one or more folders, click the “Scan” button in the main window to start the scan. Hyperspace will search the contents of the folder, including all sub-folders, looking for files that have identical contents. Hyperspace will only consider files that meet the criteria configured in its Settings and that are not excluded for safety reasons. During the scan, Hyperspace will report any errors it encounters. You can view these errors by clicking the “View” button that will appear next to the “Scan Errors” label in the main window. The kinds of scan errors are explained in another part of this document. When the scan is complete, the number of files eligible for reclamation will be shown next to the “Eligible Files” label in the main window. If no eligible files were found, consider choosing a different folder, choosing an additional folder, or adjusting the Settings to make more files eligible, then scan again. Review If some eligible files were found, the amount of disk space that can be reclaimed is shown next to the “Potential Savings” label. To proceed any further, you will have to make a purchase. Once the app’s full functionality is unlocked, a “Review Files” button will become available after a successful scan. This will open the Review Window. The purpose of the Review Window is to give you a chance to see all the identical files that were found, and to optionally decide which of those files should be replaced with space-saving clones. By default, all the files are selected. The Review Window lists all the groups of identical files, each represented by a designated “Source” file. Each group of identical files has a checkbox next to it. Unchecking that checkbox excludes all the files in the group from the reclamation process. To preview the contents of a file, click the “eye” icon or press the space bar when a file group is selected in the list. Click on a file group to see its contents expanded in the detail view at the bottom of the Review Window. There you can uncheck the checkbox next to individual files to exclude them from the reclamation process. You can also designate a new “Source” file by Control-clicking or right-clicking on a file in the detail view and selecting the “Make Source” item from the context menu. (More tips and tricks for using the review window are described later in this document.) As you make changes, the “Selected Savings” header at the top of the window shows the total amount of the space that will be reclaimed based on which files are included and excluded. When you’re done reviewing the list of files, you may want to save the information in this window by clicking the “Export…” button. The data will be saved in a text file in comma-separated-value format. Click the “Done” button to return to the main window. Reclaim Now it’s finally time to reclaim some space. Click the “Reclaim Space” button to start the reclamation process. Hyperspace will replace all the eligible, selected files with space-saving clones. When the reclamation completes, the total amount of space reclaimed will be shown. You can also see your lifetime space savings by selecting “About Hyperspace” from the “Hyperspace” menu in the menu bar. During reclamation, Hyperspace will report any errors it encounters. You can view these errors by clicking the “View” button that will appear next to the “Reclamation Errors” label in the main window. The kinds of reclamation errors are explained in another part of this document. Certain kinds of errors will immediately stop the reclamation process. These are errors that cause the contents of the disk to be left in an inconsistent state, usually by “stranding” a file that Hyperspace was unable to clean up. As soon as a single file is stranded, the reclamation process stops. The “Reclamation Errors” window will show these kinds of errors in orange or red text, and each error of this kind will include clean-up instructions and a clickable link to reveal the stranded file in the Finder. You should manually clean up these files by either renaming them back to their original names or by deleting them, depending on what kind of operation failed, according to the error message. Q: How do I pay for Hyperspace? Hyperspace is a free download in the Mac App Store. Once downloaded, it’s free to scan an unlimited number of files. Scanning will let you know how much space is eligible to be reclaimed. If you decide you want to reclaim that space, you will need to pay for Hyperspace using the purchase button that appears after a successful scan or by selecting “Purchase Hyperspace…” from the “Hyperspace” menu in the menu bar. Two kinds of purchases are possible: one-time purchases and subscriptions. One-time purchases allow you to unlock the app’s full functionality for one month, one year, or forever. A one-time purchase will never “renew,” so the charge will not be repeated automatically. Subscriptions will automatically renew according to a schedule, and each renewal will incur an additional payment equal to the price of the subscription. You always have the ability to stop a subscription from renewing by cancelling it. Subscription management can be accessed from within Hyperspace’s Settings window by clicking the “Manage Subscription” button. Note that this button will only appear in the Settings window if you have an active subscription. Q: Why am I asked to sign in to my Apple Account when purchasing Hyperspace? As required by Apple, Hyperspace uses Apple’s in-app-purchase framework. Once the purchase process is initiated by the user, Apple’s framework takes over the interaction entirely. During the purchase process, Apple may prompt for sign-in information. Hyperspace has no control over whether or how this sign-in process happens. Hyperspace does not have access to any of your sign-in credentials at any point, ever. Q: How can I get a refund for Hyperspace? Q: What are the limitations of Hyperspace’s reclamation process? Though most files can be scanned, not every scanned file can be reclaimed. In addition to the limitations configured in Hyperspace’s Settings and the safety measures built into the app, a file must meet all the following criteria in order to be successfully reclaimed: Readable - The file must be readable by the current user. Writable - The file and its containing folder must be writable by the current user. Ownership - The file must be owned by the current user and it must belong to a group that has the current user as a member. Unlocked - The file must not be locked or otherwise marked as immutable. Not Busy - The file must not be marked as “busy.” Q: What settings does Hyperspace support? A: To see or update Hyperspace’s settings, select “Settings” from the “Hyperspace” menu in the menu bar. General settings: Minimum File Size - Files below the specified size will not be considered for reclamation. Increasing this size will speed up the preliminary scan for identical files by allowing Hyperspace to immediately skip more files without examining their contents. Conversely, decreasing this size can potentially allow Hyperspace to find more files with identical contents. A minimum size of zero means Hyperspace will examine files of any size. Allowed File Types - The list of file types that will be considered for reclamation. These file types are stored using Apple’s Uniform Type Identifier (“UTI”) format, which provides a hierarchy for file types. For example, there is a UTI for JPEG and a UTI for PNG, but there is also a UTI for “Image” which encompasses all types of images. Using UTIs for the list of allowed file types can make the list a lot shorter, since more general UTIs can encompass many more specific UTIs. The default list of allowed file types is very conservative, which means that Hyperspace will not even consider many kinds of files for reclamation. To view the list of allowed types, click the “File Types…” button in the Settings window. To add to the list, click the “+” button in the lower-left corner of the file types window. The menu that appears contains broad type categories that are not already in the list of allowed types. These broad types are things like “Image” and “Movie” that encompass many individual file types. The menu also contains options to “Allow by Example File…” and “Exclude by Example File…” Select “Allow by Example File…” and “Exclude by Example File…” to open a dialog box where you can select one or more files of the types that you want to allow or exclude. Additional types will be added based on the files selected. (Note that it’s not possible to add any of the broad categories like “Image” or “Movie” by selecting an example file. The specific type of the selected file will be added, not any of the broader categories that encompass it. That’s why those broad type categories exist within the menu itself. There’s no other way to add them.) When selecting an example file, if the file does not expand the set of allowed types, you will be asked whether you still want to add it. For example, if the list of allowed file types already includes “Image” and you select a JPEG image file, you will be asked if you want to add that type to the list even though it does not expand the set of allowed types (since “Image” encompasses all types of image files, including JPEGs). Excluded types will show a 🚫 badge on the right. Any type can be switched from “allow” (the default) to “exclude” by Control-clicking or right-clicking on the type and selecting “Allow” or “Exclude” from the context menu. When evaluating files during scanning, the “allow” rules are considered first. Any file of a type that is not encompassed by the “allow” types is skipped. Next, the “exclude” rules are considered. Any file of a type that is encompassed by the “exclude” types is skipped. In other words, a file must pass both the “allow” and the “exclude” rules in order to be considered during a scan. If an excluded type overrides an allowed type, this will be noted by dimming the overridden type and showing a ⚠️ badge on it. Hover the mouse pointer over the ⚠️ badge to see a tooltip explaining which other type is overriding it. For example, if JPEG is allowed, but the broad category “Image” is excluded, the “allow” of JPEG is overridden by the broader exclusion of all images. The JPEG type would be dimmed and shown with a ⚠️ badge. If you click the “Allow Any File” button or select a file that has no known type (e.g., a file with no file name extension and no other type information), then any file will pass the “allow” check. (Though the other allowed types will remain present in the list, they will be dimmed and disabled because they are superseded by the “Any File” item.) Note that the “exclude” rules are still applied, however. The screenshot above shows the “Any File” type superseding all other allow rules, while the JPEG “exclude” rule still applies. To remove an allowed or excluded type, select it in the list and then click the “-” (minus) button in the lower left. Removing the “Any File” item will re-enable the other allowed types in the list. Free storage space immediately - When enabled, file data that has been replaced with a space-saving clone will be removed immediately. When disabled, redundant data will be moved to the Trash instead. The Trash will have to be emptied (using the Finder or the Dock) before that storage space can be freed. Moving redundant data to the Trash instead of deleting provides some insurance, in case something goes wrong during reclamation. Until you empty the Trash, you can always retrieve the non-clone version of a file that was replaced by a clone. On the other hand, reclaiming storage space immediately is less likely to leave a temporary file “stranded,” requiring manual clean-up. If you’re confused about why there would be any “redundant data” at all, since Hyperspace reclaims space “without removing files,” you can learn more about how this works in another section of this document. Restore folder dates - When enabled, folder modification dates will be restored to the values they had before reclamation began. The act of reclaiming a file will update the modification date of the folder that contains the file. This is an accurate reflection of what has happened: the folder was modified when one of the files it contains was replaced with a space-saving clone. If you prefer that folders not reflect this modification, enable this setting and Hyperspace will reset folder modification dates to their pre-reclamation values. Allow fun - Some features in Hyperspace exist just for fun. This setting enables them. Advanced settings: Scan inside packages - When enabled, the contents of package directories will be scanned. This allows them to be used as source files during reclamation. Files within package directories will not be eligible as targets for reclamation unless the “Reclaim files inside packages” setting is also enabled. Applications (i.e., .app packages) are always ignored, regardless of the state of this setting. Reclaim files inside packages - When enabled, the contents of package directories will be eligible for reclamation. This setting has no effect unless the “Scan inside packages” setting is enabled. Applications (i.e., .app packages) are always ignored, regardless of the state of this setting. Allow Photos access - When enabled, Hyperspace will be allowed to access files within the Apple Photos libraries. Note that Apple Photos libraries are packages, so the “Scan inside packages” and “Reclaim files inside packages” settings apply. Photos libraries need additional permissions beyond those two settings, however. Access to Photos libraries can be granted within Hyperspace on the first request. If access is denied, then allowing access requires following these steps: open the macOS “System Settings” app, then go to “Privacy \u0026 Security”, then “Photos”, then scroll to find Hyperspace in the list of apps and enable access. (Depending on your web browser, this link may take you straight to the relevant settings screen if you’re reading this on a Mac.) Finally, quit Hyperspace and relaunch it, then enable the “Allow Photos access” setting within Hyperspace. Once Photos access has been granted in System Settings, the “Allow Photos access” setting within Hyperspace can be turned on or off as desired at any time. Warn before discarding scan information - When enabled, Hyperspace will show a confirmation dialog before discarding information about a scan or reclamation (e.g., when selecting a new scan source or clicking the “Reset” button in the main window). Scan information includes the list of identical files found as well as any scan or reclamation errors. Q: Why might I want to select multiple folders to scan? As mentioned earlier, the green and red “+” and “-” buttons can be used to add and remove folders to scan. Multiple folders provide more files to scan, of course, but they also potentially allow more duplicates to be found. Consider two folders, Documents and Downloads. A file in the Documents folder may have no duplicates anywhere within the Documents folder. Similarly, a file in the Downloads folder may have no duplicates anywhere within the Downloads folder. Now consider selecting both the Documents and Downloads folders for a single scan. A file in the Documents folder may have duplicates in the Downloads folder, and vice versa. When these two folders are scanned individually, such duplicates would not be found. When scanned together, there are more possible pairs and more potential for duplicates. The other reason to select multiple folders for scanning is that entire folders can be marked as “Source Only”, meaning that the files within those folders will never be modified. They will only be used as the “source” of a clone operation. This is useful if you want to ensure that nothing in a folder is modified during reclamation. To designate a folder as “Source Only”, Control-click or right-click the folder’s icon in the main window when there are two or more folders, then choose the “Source Only” item from the context menu. A lock badge will appear over the folder. Note that there must always be at least one available folder that is not marked as being source-only, otherwise no reclamation will be possible. Also note that a different source can be chosen manually for each group of identical files, and this includes the ability to manually override the source-only nature of individual files within a source-only folder. Q: How can I review files more efficiently? A: When reviewing files, the following shortcuts may be useful: After selecting a file group in the list, the up and down arrow keys will move the selection. When a file group is selected in the list, press the space bar to preview its contents. Press the “x” or “.” key to toggle the checkbox for the group. Press the up or down arrow keys to preview the previous or next file group. The checkbox in the first column header will toggle the checkboxes for all the file groups in the list. If you want to check not just the checkboxes for every file group but also the checkboxes for every file within each group (as seen in the detail area at the bottom of the window when a group is selected), hold down the Option key when clicking the checkbox. Option-click the checkbox for the file group in the detail area at the bottom of the window to check all the checkboxes for every file within the group. Q: How does Hyperspace work? A: Files are made up of data, which is the actual content of the file, and metadata, which is data about the file’s data. Metadata includes things like the file’s name, creation date, modification date, ownership, permissions, and so on. The standard macOS file system, APFS, has the ability to create multiple files that each have their own metadata but that share a single copy of the data. Since data is usually much larger than metadata for any file of a nontrivial size, this saves disk space. The Finder’s “Duplicate” command uses this feature when it duplicates a file. For example, consider a 100 GB video file as the only file on a 256 GB disk, leaving 156 GB of free space. If you duplicate that file, you might think that would leave only 56 GB of free space (256 GB − 100 GB − 100 GB = 56 GB). And with only 56 GB of free space, duplicating that file again seems impossible. But if you actually try this on an APFS volume in macOS, you’ll find that you can make a nearly unlimited number of copies of that 100 GB video file using the Finder’s “Duplicate” command without filling the disk. Furthermore, each copy will be nearly instantaneous. That’s because macOS is only creating and storing the relatively tiny amount of metadata needed for each newly created duplicate file. Only a single copy of the 100 GB of data exists, and it is shared by all the duplicates. Hyperspace searches for files that have identical data, and turns them into space-saving clones of each other using this feature of APFS, leaving only one copy of the data that is shared by all the clones. The essential metadata for the files is preserved during this process. From your perspective, nothing appears to have changed. The files all look the same as they did before Hyperspace did its work. But under the covers, all the files now share a single copy of the data. Importantly, all the files remain independent. Changes to one file do not affect any of the other files. As the files are changed, their data storage, which was previously completely shared, will start to diverge, one piece at a time. The files will still share the pieces they have in common, even as their data changes and is no longer exactly the same for all the files. Q: Are clone files the same thing as symbolic links or hard links? A: No. Symbolic links (\"symlinks\") and hard links are ways to make two entries in the file system that share the same data. This might sound like the same thing as the space-saving clones used by Hyperspace, but there’s one important difference. With symlinks and hard links, a change to one of the files affects all the files. The space-saving clones made by Hyperspace are different. Changes to one clone file do not affect other files. Cloned files should look and behave exactly the same as they did before they were converted into clones. Q: What are the limitations of space-saving clones? A: The first and most obvious limitation of space-saving clones is that they only work on APFS volumes. While APFS is the standard file system for the Mac, macOS can also read and write disks in other formats. Hyperspace can only reclaim space on APFS volumes. Furthermore, APFS only supports space-saving clones for files that are all on the same volume. A “volume” is the thing you see as a “hard drive” icon in the Finder. Even though it’s common for a storage device to contain a single volume and appear as a single icon in the Finder, each physical storage device can actually have multiple volumes on it, so the distinction between storage devices and volumes is important. Clones only work within the same volume. They cannot cross volume boundaries. Q: How does Hyperspace determine if two files are identical? A: For the purposes of finding “identical” files to replace with space-saving clones, the only thing that matters is the contents of a file: the file data. All files will always have their own private metadata: file names, file dates, permissions, ownership, etc. After reclamation, the space savings comes from the fact that multiple copies of the same file data have now been reduced to a single instance of that data on disk. (You can read more about how this works elsewhere in this documentation.) To determine if two files have identical contents, Hyperspace first compares the file sizes. If the files are not exactly the same size, down to the byte, then the files are not identical. Next, Hyperspace reads every byte of each file’s data (which includes the resource fork) and computes three content hashes for the file data (and three for the resource fork, if one exists) using the following algorithms: MD5, SHA-1, and SHA-256. Only if all the hashes match exactly are two files considered to have identical content. For example, consider these content hashes for a file: File Data: MD5:cf60439fb179d2379af1657d8e1af75f SHA1:97eb6d4cbcf75a55dd54322861317c6d3f4de9de SHA256:26661fc18a369c6f9d2f5c9772489ab6d60b680171e7ff06991f59c6d93e37e9 Resource Fork: MD5:a61ebf6dd946633ee5612e934aae8947 SHA1:ea5a0007a0914665fc79d095b5e4aee105c88efe SHA256:b35e45e2c5047e925701e9ce33d53a7cf52e8a36ca1d13e399008cf43f77c662 This file has a resource fork, so there are six total hashes: three hashes for the file data and three hashes for the resource fork. For a file to be considered “identical” to this one for the purposes of reclamation, the three hashes for its data would have to exactly match the three file data hashes above, and the three hashes for its resource fork would have to exactly match the three resource fork hashes above. (If it did not have a resource fork at all, then it would not match this file.) In other words, the file contents must be exactly the same, down to the very last bit. Hyperspace does no interpretation of file contents. For example, it cannot and will not consider two photos to be “identical” if they merely look similar. Every single bit of file data must be exactly the same, or the files are not considered identical. Q: So Hyperspace can reclaim disk space “without removing files.” But what does that really mean? Hyperspace’s tag line (“Reclaim disk space—without removing any files!”) is best explained by example. Let’s say you start with five identical 100 MB files, which occupy a total of 500 MB of disk space (5 x 100 MB). After running Hyperspace on those files and reclaiming disk space from them, you will be left with…five 100 MB files. The files will look exactly the same as they did before Hyperspace ran. You started with five files and you ended with five files. None of the files have been removed. That’s what the tag line means. Of course, after Hyperspace has done its work, those five files now occupy a total of only 100 MB of disk space, for a savings of 400 MB of disk space. You can read more about how this works elsewhere in this document. But what did Hyperspace do to make this happen? There’s no getting around that fact that 400 MB of data was deleted somehow, right? Here’s what Hyperspace does when it’s reclaiming space. First, one file in each group of identical files is designated as the “source” file. This file will not be modified in any way. (You can change which file is the source during review, or more broadly when adding a folder to scan.) Then, for each “target” file in the group, Hyperspace makes a space-saving clone of the source file, copies metadata from the target file into that clone file, and finally, when that clone file looks exactly like the target file in every possible way, the target file is replaced by the clone file. That final “replacement” process can happen in two possible ways, depending on a setting in Hyperspace. One way is that the target file can be moved to the Trash as the clone file replaces it. The other way is that the clone file can be (atomically) moved on top of the target file, causing the target file to cease to be as it is entirely replaced by the clone file. Some of the trade-offs between two approaches are described with the documentation for the relevant setting. Either way, as you can see, Hyperspace does indeed delete data. That’s the only way to get more free disk space, after all. But it does it in such a way that, when it’s done, everything should appear the same as it did before it started. You should have the same number of files with the same names in the same places with the same creation and modification dates, the same Finder labels, the same permissions, and so on. And, yes, the files all remain independent of each other when it comes to any and all modifications. Changes to one file do not affect any of the other files. Everything really does look and work just like it did before Hyperspace reclaimed that 400 MB of disk space. Q: What kinds of errors can occur during the scanning process? Hyperspace will attempt to scan almost any folder or volume, but it may encounter errors during the scanning process. These errors are all instances where Hyperspace tried to perform a task as part of the scan but was unable to complete it successfully. Since scanning is a read-only process, the worst thing that can happen is that one or more files are not able to be scanned. Nevertheless, Hyperspace reports many of these errors to let the user know why certain files that they thought might be eligible for reclamation were not included in the scan. Certain “expected” errors are not reported. For example, finding a file outside the current user’s home directory that is owned by another user is unsurprising. Errors like these are not reported, but these files will not be eligible to be reclaimed. (They may be used as the source file in a file group, however.) The possible scan errors are: File is Unreadable - If a file cannot be read, Hyperspace cannot determine if it is a duplicate. File is Owned by Another User - Only files owned by the current user and that belong to a group that has the current user as a member will be eligible for reclamation. This is because Hyperspace must be able to reproduce the owner and group on the clone file, and it cannot set the owner or group to values that the user running the app does not have. File Information Unavailable - If an attempt to get information about a file fails for any reason, it will be skipped. File Not Found - A file might not be found because it has been moved, renamed, or deleted between the time Hyperspace got the list of directory contents and the time Hyperspace tried to read the file. File Is Immutable or Locked - If a file is marked as immutable or is “Locked” in the Finder, Hyperspace does not consider it eligible for reclamation and it will be skipped during the scan. You may be able to manually unlock the file in the Finder by selecting the file and then selecting “Get Info” from the “File” menu. Then uncheck the “Locked” checkbox in the Get Info window. There are other ways that a file might be marked as immutable as well, but if you don’t understand why a file is designated as immutable, it may be best not to change it. File Is Busy - If a file is marked as “busy,” it will be skipped. You can manually clear the “busy” bit on a file by running the command SetFile -a z myfile.txt from the Terminal. Note that a file being marked as “busy” in this way doesn’t necessarily mean that the file is actually in use by another app. The “busy” bit is just another piece of file metadata, like the file name or creation date, that is persistently stored by the file system. It could have been set years ago and never changed. Or it could have been set moments ago by an app that is using the file. There’s no good way to tell. Most of these errors are caused by situations beyond the control of Hyperspace. Some could be overridden by Hyperspace (e.g., Hyperspace itself could try to clear the “busy” bit), but that would only increase the risk of problems. If you, the user, want to unlock files or clear busy bits, feel free. But Hyperspace will not presume to know that it should ignore such signals. The same goes for permissions issues. A file owned by the current user may still have its permissions set such that it is not readable by anyone. Since it is owned by the current user, Hyperspace could change the permissions on the file to make it readable, but it will not do so. In general, Hyperspace will not alter the attributes of files when those changes would override their current state. Again, if you, the user, want to modify the permissions, ownership, or other attributes of files to allow Hyperspace to read from and write to them, you are free to do so. Q: What kinds of errors can occur during the reclamation process? Hyperspace may encounter errors during the reclamation process. These errors are all instances where Hyperspace tried to perform a task during reclamation but was unable to complete it successfully. Hyperspace reports these errors to let the user know why certain files that they thought would be reclaimed were not. Reclamation is when Hyperspace actually modifies your data. To protect your data, certain kinds of errors will immediately stop the reclamation process. These are errors that cause the contents of the disk to be left in an inconsistent state, usually by “stranding” a file that Hyperspace was unable to clean up. As soon as a single file is stranded, the reclamation process stops. The “Reclamation Errors” window will show these kinds of errors in orange or red text, and each error of this kind will include clean-up instructions and a clickable link to reveal the stranded file in the Finder. You should manually clean up these files by either renaming them back to their original names or by deleting them, depending on what kind of operation failed, according to the error message. Here are some of the possible reclamation errors: Clean-Up Failure - Depending on the Settings, Hyperspace may create, move, and rename various files during reclamation. If anything goes wrong, the goal is to restore all files to their state before the reclamation was attempted. If something goes wrong during this clean-up process, one or more files may be left ”stranded” on the disk. These are files that Hyperspace tried to clean up, but it was unable to do so due to an error. It is up to the user to remedy the situation. The most serious example is when a file was renamed aside before being replaced by a space-saving clone, then the cloning process failed, and then the file could not be renamed back to its original name. In this situation, the user must manually rename the file back to its original name. The “Reclamation Errors” window will include instructions and a link that will reveal the stranded file in the Finder. Less serious stranding errors occur when a temporary file created by Hyperspace could not be cleaned up. These files can safely be deleted. IMPORTANT: Please read the error message carefully to ensure that you can distinguish between a temporary file that can safely be deleted and one of your files that was renamed aside and needs to be renamed back! Do not accidentally manually delete your own files! File is Unreadable - If a file cannot be read, Hyperspace cannot use it as the source for a space-saving clone. File is Owned by Another User - Only files owned by the current user and that belong to a group that has the current user as a member can be reclaimed. This is because Hyperspace must be able to reproduce the owner and group on the clone file, and it cannot set the owner or group to values that the user running the app does not have. File Information Unavailable - If an attempt to get information about a file fails for any reason, it cannot be reclaimed. File Not Found - A file might not be found because it might have been moved, renamed, or deleted between the time it was scanned and the time an attempt was made to reclaim it. File is Immutable or Locked - If a file is marked as immutable or is “Locked” in the Finder, Hyperspace does not consider it eligible for reclamation and it will be skipped. You may be able to manually unlock the file in the Finder by selecting the file, selecting “Get Info” from the “File” menu, and then unchecking the “Locked” checkbox in the Get Info window. There are other ways that a file might be marked as immutable as well, but if you don’t understand why a file is designated as immutable, it may be best not to change it. File is Busy - If a file is marked as “busy,” it will be skipped. You can manually clear the “busy” bit on a file by running the command SetFile -a z myfile.txt from the Terminal. Note that a file being marked as “busy” in this way doesn’t necessarily mean that the file is actually in use by another app. The “busy” bit is just another piece of file metadata, like the file name or creation date, that is persistently stored by the file system. It could have been set years ago and never changed. Or it could have been set moments ago by an app that is using the file. There’s no good way to tell. Most of these errors are caused by situations beyond the control of Hyperspace. Some could be overridden by Hyperspace (e.g., Hyperspace itself could try to clear the “busy” bit), but that would only increase the risk of problems. If you, the user, want to unlock files or clear busy bits, feel free. But Hyperspace will not presume to know that it should ignore such signals. Q: Is there anything that can go wrong during reclamation? A: Yes. An explanation of possible reclamation errors appears elsewhere in this document. But those are just the errors that Hyperspace can detect. There are many kinds of errors that it cannot detect. Depending on the Settings, Hyperspace may replace many different kinds of files with space-saving clones. This includes files created by other applications or macOS itself that might be in active use. There is no way for Hyperspace to cooperate with all other applications and macOS itself to coordinate a “safe” time for those files to be replaced, nor is there a way for Hyperspace to forcibly take exclusive control of those files. This leads to scenarios where other applications or parts of the system might experience unexpected results. For example, if an application is in the middle of writing to a file, and that file is replaced with a space-saving clone by Hyperspace, it is possible that the application will be blissfully unaware and will complete its write operation on the old version of the file, not realizing that file has been replaced by a clone of what the file looked like moments ago. An application might also encounter an error when trying to write to a file that Hyperspace has just replaced. There are many, many possible situations like this that may occur if Hyperspace and some other process are trying to modify the same file at the same moment in time. Hyperspace includes many measures to prevent problems like this from happening, but nothing can prevent it entirely. For best results, run Hyperspace when no other applications are running. Q: What kind of guardrails are included in Hyperspace to prevent problems during reclamation? A: Hyperspace includes many features to decrease the likelihood that something will go wrong during reclamation. Allowed File Types - Only files of the allowed types are considered for reclamation. All other file types are ignored. Ignored Directories - Certain directories are entirely ignored by Hyperspace. This includes the top-level System directory (which is read-only anyway), the Library directories in your home directory and at the top level of a volume, and the dev, private, and cores directories at the top level of a volume. If you have a directory with the same name as one of the excluded directories at the top level of a volume and you want to scan it, you can explicitly select it as a scan source. By default, package directories are also ignored. This can be changed using the relevant settings. Regardless of the settings, applications (i.e., .app packages) are always ignored. Ignored Files - Files known to belong to the system, like .DS_Store files, are ignored. Any file that is unreadable by the current user or that has ownership information that cannot be reproduced by the current user is ignored. Any file that is backed by a cloud storage service (e.g., iCloud Drive, OneDrive, and recent versions of Dropbox) in a way that the app can detect is ignored. Just-In-Time Validation - Since the processes of scanning and reclamation may be separated by some time, the reclamation process will do one final validation before replacing a file with a space-saving clone. If anything has changed since the scan (e.g., if the contents of one of the files has changed so it is no longer identical) then it will not be touched. Moving Redundant Data to the Trash - When replacing a file with a space-saving clone, the redundant data may optionally be put into the Trash, rather than being deleted immediately. This allows the old version of the data to be recovered at any time until the Trash is emptied. Some of these safety features can be modified in Settings, but not all of them. Future versions of Hyperspace may allow more safety features to be disabled. Q: Hyperspace says it has reclaimed space, but the amount of free space on my disk has not changed. Why? A: Increasing the amount of free disk space on an APFS volume can only happen when nothing references some chunk of data. Only then can the space taken by that data be added back to the pool of free space. If Hyperspace is configured to put redundant data in the Trash, the space taken by that data cannot be freed until the Trash is emptied. APFS also supports snapshots, which preserve the contents of a volume at a given moment in time. The Time Machine backup feature of macOS creates local snapshots as part of its backup process. Even if a file is deleted, the space taken by that file cannot be freed if it is still part of one or more snapshots. The local snapshots created by Time Machine are automatically removed when they are no longer needed, so the space taken by deleted files will eventually be freed. But it may be a day or more before this happens. (There are ways to force local snapshots to be deleted, but that is beyond the scope of this document. I recommend just waiting.) Q: Does Hyperspace preserve file metadata during reclamation? A: When Hyperspace replaces a file with a space-saving clone, it attempts to preserve all metadata associated with that file. This includes the creation date, modification date, permissions, ownership, Finder labels, Finder comments, whether or not the file name extension is visible, and even resource forks. If the attempt to preserve any of these pieces of metadata fails, then the file is not replaced. If you find some piece of file metadata that is not preserved, please let us know. Q: How does Hyperspace handle resource forks? A: Hyperspace considers the contents of a file’s resource fork to be part of the file’s data. Two files are considered identical only if their data and resource forks are identical to each other. When a file is replaced by a space-saving clone during reclamation, its resource fork is preserved. Q: Is there a way to tell if two files are already clones of each other? A: There is no easy way to check if two files are already clones of each other. Hyperspace itself makes a “best effort” to determine if two files with identical contents are already clones of each other, and it skips them if it thinks they are. Q: Isn’t it better to have multiple, independent copies of the same data for each file? A: Maybe, if the failure you’re trying to protect against is one where some part of your storage device or file system gets corrupted while another part remains functional. There’s no denying that having more copies of data is better than having fewer. That said, actual backups (i.e., copies of the data that are kept elsewhere, on a different storage device) offer much better protection against data loss. Q: Can space-saving clones make the contents of my disk too big to copy to another disk of the same size? A: Yes. Consider a 256 GB disk containing five space-saving clones of the same 100 GB video file. Thanks to the magic of cloning, those five files only take up a total of 100 GB on the disk. But if you tried to naively copy the contents of that disk to another 256 GB disk, the total amount of data to be copied would be 500 GB (5 x 100 GB), which would not fit on a 256 GB drive. A sufficiently clever file copy operation could reproduce the clones on the target drive, but most file-copying software—including the Finder—does not do that. Also keep in mind that most backup software does not attempt to reproduce cloned files. You may need a larger disk than you think in order to hold a complete copy of your data. Q: Is there a privacy policy? Q: How can I get more help? A: If you have any more questions, contact us.",
  "image": "https://hypercritical.co/hyperspace/images/hyperspace-icon-1024-lossy.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\n\n\n\u003ch3 id=\"what-does-it-do\"\u003eQ: What does Hyperspace do?\u003c/h3\u003e\n\n\u003cdiv\u003e\n\u003cp\u003e\u003cb\u003eA:\u003c/b\u003e \u003ca href=\"https://apps.apple.com/us/app/hyperspace-reclaim-disk-space/id6739505345?mt=12\"\u003eHyperspace\u003c/a\u003e searches for files with identical contents within one or more folders. If it finds any, it can then reclaim the disk space taken by all but one of the identical files—\u003ci\u003ewithout removing any of the files!\u003c/i\u003e\u003c/p\u003e\n\n\u003cp\u003eYou can \u003ca href=\"#how-it-works\"\u003elearn more\u003c/a\u003e about how this is done, if you’re interested, but the short version is that Hyperspace uses a standard feature of the macOS file system: space-saving clones. The Finder does the same thing when you duplicate a file.\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch3 id=\"vocabulary\"\u003eQ: What are terms that I should know before reading this documentation?\u003c/h3\u003e\n\n\u003cdiv\u003e\n\u003cp\u003e\u003cb\u003eA:\u003c/b\u003e The following words and phrases will be used in this document and throughout the Hyperspace user interface:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e \u003cb id=\"scanning\"\u003eScanning\u003c/b\u003e: The process of examining files to determine if they are candidates for \u003ca href=\"#reclamation\"\u003ereclamation\u003c/a\u003e.\u003c/li\u003e\n\n\u003cli\u003e \u003cb id=\"reclamation\"\u003eReclamation\u003c/b\u003e: The process of replacing a set of files that have identical contents with \u003ca href=\"#space-saving-clones\"\u003espace-saving clones\u003c/a\u003e of each other, \u003cb\u003ereclaiming\u003c/b\u003e \u003ca href=\"#disk\"\u003edisk space\u003c/a\u003e. When a file is “reclaimed” that means it is replaced with a space-saving clone.\u003c/li\u003e\n\n\u003cli\u003e \u003cb id=\"space-saving-clones\"\u003eSpace-saving clones\u003c/b\u003e: Files that all share a single instance of data on \u003ca href=\"#disk\"\u003edisk\u003c/a\u003e. See \u003ca href=\"#how-it-works\"\u003ea longer explanation of how this works\u003c/a\u003e, if you’re interested.\u003c/li\u003e\n\n\u003cli\u003e \u003cb id=\"disk\"\u003eDisk\u003c/b\u003e: The physical device where data is stored. In years past, this might have been a \u003ca href=\"https://en.wikipedia.org/wiki/Hard_disk_drive\"\u003espinning hard disk\u003c/a\u003e. These days, it’s more likely to be an \u003ca href=\"https://en.wikipedia.org/wiki/Solid-state_drive\"\u003eSSD\u003c/a\u003e. The term “disk space” is mostly a holdover from years past when hard disks were more common. Today we might say “storage space” instead. In this document and in the Hyperspace app itself, the term “disk space” appears often, mostly because it’s still in common use (but also because the app’s creator was born in the 1970s).\u003c/li\u003e\n\n\u003cli\u003e \u003cb id=\"identical-file-group\"\u003eIdentical file group\u003c/b\u003e: When Hyperspace finds files with identical contents, it puts them together in a group. The goal is to reclaim disk space by converting all but one of the files in the group into \u003ca href=\"#space-saving-clones\"\u003espace-saving clones\u003c/a\u003e of a single designated \u003ca href=\"#source-file\"\u003esource file\u003c/a\u003e.\u003c/li\u003e\n\n\u003cli\u003e \u003cb id=\"source-file\"\u003eSource file\u003c/b\u003e: In each group of identical files, one file in the group is designated as the “source” file. This is the file from which all the \u003ca href=\"#space-saving-clones\"\u003espace-saving clones\u003c/a\u003e are created. It is the “original” file for all the clones. The source file is only read. It is never modified.\u003c/li\u003e\n\n\u003cli\u003e \u003cb id=\"target-file\"\u003eTarget file\u003c/b\u003e: In each group of identical files, one file in the group is designated as the \u003ca href=\"#source-file\"\u003esource file\u003c/a\u003e and the rest are “target” files. The target files will be replaced with \u003ca href=\"#space-saving-clones\"\u003espace-saving clones\u003c/a\u003e during \u003ca href=\"#reclamation\"\u003ereclamation\u003c/a\u003e.\u003c/li\u003e\n\n\u003cli\u003e \u003cb id=\"package\"\u003ePackage\u003c/b\u003e: A “package” is a directory that is presented to the user as a file. For example, a \u003ctt\u003e.rtfd\u003c/tt\u003e file (a “Rich Text Document With Attachments”) created by \u003ca href=\"https://en.wikipedia.org/wiki/TextEdit\"\u003eTextEdit\u003c/a\u003e is actually a directory that contains a \u003ctt\u003e.rtf\u003c/tt\u003e file plus any attachments (e.g., images included in the document). The Finder displays and handles this \u003ctt\u003e.rtfd\u003c/tt\u003e directory as if it were a single file. Other common examples of packages are iMovie libraries (\u003ctt\u003e.imovielibrary\u003c/tt\u003e) and Photos libraries (\u003ctt\u003e.photoslibrary\u003c/tt\u003e).\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e\n\n\u003ch3 id=\"how-to-use\"\u003eQ: How do I use Hyperspace?\u003c/h3\u003e\n\n\u003cdiv\u003e\n\u003cp\u003eThere are three steps to using Hyperspace: \u003ca href=\"#how-scan\"\u003eScan\u003c/a\u003e, \u003ca href=\"#how-review\"\u003eReview\u003c/a\u003e, and \u003ca href=\"#how-reclaim\"\u003eReclaim\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4 id=\"how-scan\"\u003eScan\u003c/h4\u003e\n\n\u003cp\u003eAfter launching Hyperspace, click the “Choose Folder…” button at the top of the main window, then select a folder to scan. (You can also drag and drop a folder onto that area.) This should be a folder that you own. Folders owned by other users or by the system can be scanned, but only files owned by the current user can be reclaimed.\u003c/p\u003e\n\n\u003cp\u003eOnce a folder is selected, a green “+\u0026#34; and a red “-” button will appear beside it. Click the “-” button to unselect the folder. Click the “+\u0026#34; button to add \u003ci\u003eanother\u003c/i\u003e folder. Click the “Reset” button in the lower-left corner of the window to start over, if desired.\u003c/p\u003e\n\n\u003cp\u003eWhen more than one folder is selected, Hyperspace will search for duplicates within \u003ci\u003eboth\u003c/i\u003e folders. Selecting multiple folders offers \u003ca href=\"#multiple-folders\"\u003esome new possibilities\u003c/a\u003e, described in \u003ca href=\"#multiple-folders\"\u003eanother section of this document\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eAfter selecting one or more folders, click the “Scan” button in the main window to start the scan. Hyperspace will search the contents of the folder, including all sub-folders, looking for files that have identical contents. Hyperspace will only consider files that meet the criteria configured in its \u003ca href=\"#settings\"\u003eSettings\u003c/a\u003e and that are not excluded for \u003ca href=\"#guardrails\"\u003esafety reasons\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eDuring the scan, Hyperspace will report any \u003ca href=\"#scan-errors\"\u003eerrors\u003c/a\u003e it encounters. You can view these errors by clicking the “View” button that will appear next to the “Scan Errors” label in the main window. The kinds of scan errors are \u003ca href=\"#scan-errors\"\u003eexplained in another part of this document\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eWhen the scan is complete, the number of files eligible for reclamation will be shown next to the “Eligible Files” label in the main window. If no eligible files were found, consider choosing a different folder, choosing \u003ca href=\"#multiple-folders\"\u003ean \u003ci\u003eadditional\u003c/i\u003e folder\u003c/a\u003e, or adjusting the \u003ca href=\"#settings\"\u003eSettings\u003c/a\u003e to make more files eligible, then scan again.\u003c/p\u003e\n\n\u003ch4 id=\"how-review\"\u003eReview\u003c/h4\u003e\n\n\u003cp\u003eIf some eligible files were found, the amount of disk space that can be reclaimed is shown next to the “Potential Savings” label. To proceed any further, you will have to \u003ca href=\"#purchase\"\u003emake a purchase\u003c/a\u003e. Once the app’s full functionality is unlocked, a “Review Files” button will become available after a successful scan. This will open the Review Window.\u003c/p\u003e\n\n\u003cp\u003eThe purpose of the Review Window is to give you a chance to see all the identical files that were found, and to optionally decide which of those files should be replaced with space-saving clones. By default, all the files are selected.\u003c/p\u003e\n\n\u003cp\u003eThe Review Window lists all the groups of identical files, each represented by a designated “Source” file. Each group of identical files has a checkbox next to it. Unchecking that checkbox excludes all the files in the group from the reclamation process.\u003c/p\u003e\n\n\u003cp\u003eTo preview the contents of a file, click the “eye” icon or press the space bar when a file group is selected in the list.\u003c/p\u003e\n\n\u003cp\u003eClick on a file group to see its contents expanded in the detail view at the bottom of the Review Window. There you can uncheck the checkbox next to individual files to exclude them from the reclamation process. You can also designate a new “Source” file by Control-clicking or right-clicking on a file in the detail view and selecting the “Make Source” item from the context menu.\u003c/p\u003e\n\n\u003cp\u003e(\u003ca href=\"#review-shortcuts\"\u003eMore tips and tricks\u003c/a\u003e for using the review window are \u003ca href=\"#review-shortcuts\"\u003edescribed later in this document\u003c/a\u003e.)\u003c/p\u003e\n\n\u003cp\u003eAs you make changes, the “Selected Savings” header at the top of the window shows the total amount of the space that will be reclaimed based on which files are included and excluded.\u003c/p\u003e\n\n\u003cp\u003eWhen you’re done reviewing the list of files, you may want to save the information in this window by clicking the “Export…” button. The data will be saved in a text file in \u003ca href=\"https://en.wikipedia.org/wiki/Comma-separated_values\"\u003ecomma-separated-value\u003c/a\u003e format.\u003c/p\u003e\n\n\u003cp\u003eClick the “Done” button to return to the main window.\u003c/p\u003e\n\n\u003ch4 id=\"how-reclaim\"\u003eReclaim\u003c/h4\u003e\n\n\u003cp\u003eNow it’s finally time to reclaim some space. Click the “Reclaim Space” button to start the reclamation process. Hyperspace will replace all the eligible, selected files with space-saving clones. When the reclamation completes, the total amount of space reclaimed will be shown. You can also see your lifetime space savings by selecting “About Hyperspace” from the “Hyperspace” menu in the menu bar.\u003c/p\u003e\n\n\u003cp\u003eDuring reclamation, Hyperspace will report any \u003ca href=\"#reclamation-errors\"\u003eerrors\u003c/a\u003e it encounters. You can view these errors by clicking the “View” button that will appear next to the “Reclamation Errors” label in the main window. The kinds of reclamation errors are \u003ca href=\"#scan-errors\"\u003eexplained in another part of this document\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eCertain kinds of errors will immediately stop the reclamation process. These are errors that cause the contents of the disk to be left in an inconsistent state, usually by “stranding” a file that Hyperspace was unable to clean up. As soon as a single file is stranded, the reclamation process stops. The “Reclamation Errors” window will show these kinds of errors in orange or red text, and each error of this kind will include clean-up instructions and a clickable link to reveal the stranded file in the Finder. You should manually clean up these files by either renaming them back to their original names or by deleting them, depending on what kind of operation failed, according to the error message.\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch3 id=\"purchase\"\u003eQ: How do I pay for Hyperspace?\u003c/h3\u003e\n\n\u003cdiv\u003e\u003cp\u003eHyperspace is a \u003ca href=\"https://apps.apple.com/us/app/hyperspace-reclaim-disk-space/id6739505345?mt=12\"\u003efree download\u003c/a\u003e in the Mac App Store. Once downloaded, it’s free to \u003ca href=\"#how-scan\"\u003escan\u003c/a\u003e an unlimited number of files. Scanning will let you know how much space is eligible to be \u003ca href=\"#how-reclaim\"\u003ereclaimed\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf you decide you want to reclaim that space, you will need to pay for Hyperspace using the purchase button that appears after a successful \u003ca href=\"#how-scan\"\u003escan\u003c/a\u003e or by selecting “Purchase Hyperspace…” from the “Hyperspace” menu in the menu bar.\u003c/p\u003e\n\n\u003cp\u003eTwo kinds of purchases are possible: \u003cb\u003eone-time purchases\u003c/b\u003e and \u003cb\u003esubscriptions\u003c/b\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cb\u003eOne-time purchases\u003c/b\u003e allow you to unlock the app’s full functionality for one month, one year, or forever. A one-time purchase will never “renew,” so the charge will not be repeated automatically.\u003c/p\u003e\n\n\u003cp\u003e\u003cb\u003eSubscriptions\u003c/b\u003e will automatically renew according to a schedule, and each renewal will incur an additional payment equal to the price of the subscription. You always have the ability to stop a subscription from renewing by \u003ca href=\"https://support.apple.com/billing\"\u003ecancelling it\u003c/a\u003e. Subscription management can be accessed from within Hyperspace’s Settings window by clicking the “Manage Subscription” button. Note that this button will only appear in the Settings window if you have an active subscription.\u003c/p\u003e\n\n\u003c/div\u003e\n\n\u003ch3 id=\"purchase-sign-in\"\u003eQ: Why am I asked to sign in to my Apple Account when purchasing Hyperspace?\u003c/h3\u003e\n\n\u003cp\u003eAs required by Apple, Hyperspace uses \u003ca href=\"https://developer.apple.com/documentation/storekit/\"\u003eApple’s in-app-purchase framework\u003c/a\u003e. Once the purchase process is initiated by the user, Apple’s framework takes over the interaction entirely. During the purchase process, Apple may prompt for sign-in information. Hyperspace has no control over whether or how this sign-in process happens. Hyperspace does not have access to any of your sign-in credentials at any point, ever.\u003c/p\u003e\n\n\u003ch3 id=\"refund\"\u003eQ: How can I get a refund for Hyperspace?\u003c/h3\u003e\n\n\n\n\u003ch3 id=\"limitations\"\u003eQ: What are the limitations of Hyperspace’s reclamation process?\u003c/h3\u003e\n\n\u003cdiv\u003e\n\u003cp\u003eThough most files can be scanned, not every scanned file can be reclaimed. In addition to the limitations configured in Hyperspace’s \u003ca href=\"#settings\"\u003eSettings\u003c/a\u003e and the \u003ca href=\"#guardrails\"\u003esafety measures\u003c/a\u003e built into the app, a file must meet \u003ci\u003eall\u003c/i\u003e the following criteria in order to be successfully reclaimed:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e \u003cb\u003eReadable\u003c/b\u003e - The file must be readable by the current user.\u003c/li\u003e\n\u003cli\u003e \u003cb\u003eWritable\u003c/b\u003e - The file \u003ci\u003eand\u003c/i\u003e its containing folder must be writable by the current user.\u003c/li\u003e\n\u003cli\u003e \u003cb\u003eOwnership\u003c/b\u003e - The file must be owned by the current user \u003ci\u003eand\u003c/i\u003e it must belong to a \u003ca href=\"https://en.wikipedia.org/wiki/Group_identifier\"\u003egroup\u003c/a\u003e that has the current user as a member.\u003c/li\u003e\n\u003cli\u003e \u003cb\u003eUnlocked\u003c/b\u003e - The file must not be locked or otherwise marked as immutable.\u003c/li\u003e\n\u003cli\u003e \u003cb\u003eNot Busy\u003c/b\u003e - The file must not be marked as “busy.”\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e\n\n\u003ch3 id=\"settings\"\u003eQ: What settings does Hyperspace support?\u003c/h3\u003e\n\n\u003cdiv\u003e\n\u003cp\u003e\u003cb\u003eA:\u003c/b\u003e To see or update Hyperspace’s settings, select “Settings” from the “Hyperspace” menu in the menu bar.\u003c/p\u003e\n\n\u003cdiv\u003e\u003ca href=\"https://apps.apple.com/us/app/hyperspace-reclaim-disk-space/id6739505345?mt=12\"\u003e\u003cpicture\u003e\n\u003csource media=\"(prefers-color-scheme: light)\" srcset=\"https://hypercritical.co/hyperspace/images/settings.png?v4\"/\u003e\n\u003csource media=\"(prefers-color-scheme: dark)\" srcset=\"https://hypercritical.co/hyperspace/images/settings-dark.png?v4\"/\u003e\n\u003cimg src=\"https://hypercritical.co/hyperspace/images/settings.png?v4\" width=\"537\" height=\"668\" alt=\"Settings\"/\u003e\n\u003c/picture\u003e\u003c/a\u003e\u003c/div\u003e\n\n\u003cp id=\"settings-general\"\u003e\u003cb\u003eGeneral settings:\u003c/b\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e \u003cp\u003e\u003cb id=\"minimum-file-size\"\u003eMinimum File Size\u003c/b\u003e - Files below the specified size will not be considered for reclamation. Increasing this size will speed up the preliminary scan for identical files by allowing Hyperspace to immediately skip more files without examining their contents. Conversely, decreasing this size can potentially allow Hyperspace to find more files with identical contents. A minimum size of zero means Hyperspace will examine files of any size.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e \u003cp\u003e\u003cb id=\"allowed-file-types\"\u003eAllowed File Types\u003c/b\u003e - The list of file types that will be considered for \u003ca href=\"#reclamation\"\u003ereclamation\u003c/a\u003e. These file types are stored using Apple’s \u003ca href=\"https://en.wikipedia.org/wiki/Uniform_Type_Identifier\"\u003eUniform Type Identifier\u003c/a\u003e (“UTI”) format, which provides a hierarchy for file types. For example, there is a UTI for \u003ca href=\"https://en.wikipedia.org/wiki/JPEG\"\u003eJPEG\u003c/a\u003e and a UTI for \u003ca href=\"https://en.wikipedia.org/wiki/PNG\"\u003ePNG\u003c/a\u003e, but there is also a UTI for “Image” which encompasses all types of images. Using UTIs for the list of allowed file types can make the list a lot shorter, since more general UTIs can encompass many more specific UTIs.\u003c/p\u003e\n\n\u003cp\u003eThe default list of allowed file types is very conservative, which means that Hyperspace will not even consider many kinds of files for reclamation. To view the list of allowed types, click the “File Types…” button in the Settings window. To add to the list, click the “+” button in the lower-left corner of the file types window.\u003c/p\u003e\n\n\u003cp\u003eThe menu that appears contains broad type categories that are not already in the list of allowed types. These broad types are things like “Image” and “Movie” that encompass many individual file types. The menu also contains options to “Allow by Example File…” and “Exclude by Example File…”\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003cdiv\u003e\u003ca href=\"https://apps.apple.com/us/app/hyperspace-reclaim-disk-space/id6739505345?mt=12\"\u003e\u003cpicture\u003e\n\u003csource media=\"(prefers-color-scheme: light)\" srcset=\"https://hypercritical.co/hyperspace/images/allowed-file-types-add.png?v4\"/\u003e\n\u003csource media=\"(prefers-color-scheme: dark)\" srcset=\"https://hypercritical.co/hyperspace/images/allowed-file-types-add-dark.png\"/\u003e\n\u003cimg src=\"https://hypercritical.co/hyperspace/images/allowed-file-types-add.png?v4\" width=\"582\" height=\"596\" alt=\"Adding to the list of allowed file types\"/\u003e\n\u003c/picture\u003e\u003c/a\u003e\u003c/div\u003e\n\n\u003cul\u003e\n\u003cli\u003e \u003cp\u003eSelect “Allow by Example File…” and “Exclude by Example File…” to open a dialog box where you can select one or more files of the types that you want to allow or exclude. Additional types will be added based on the files selected.\u003c/p\u003e\n\n\u003cp\u003e(Note that it’s not possible to add any of the broad categories like “Image” or “Movie” by selecting an example file. The specific type of the selected file will be added, not any of the broader categories that encompass it. That’s why those broad type categories exist within the menu itself. There’s no other way to add them.)\u003c/p\u003e\n\n\u003cp\u003eWhen selecting an example file, if the file does not expand the set of allowed types, you will be asked whether you still want to add it. For example, if the list of allowed file types already includes “Image” and you select a JPEG image file, you will be asked if you want to add that type to the list even though it does not expand the set of allowed types (since “Image” encompasses all types of image files, including JPEGs).\u003c/p\u003e\n\n\u003cp\u003eExcluded types will show a 🚫 badge on the right. Any type can be switched from “allow” (the default) to “exclude” by Control-clicking or right-clicking on the type and selecting “Allow” or “Exclude” from the context menu.\u003c/p\u003e\n\n\u003cp\u003e\u003cspan id=\"allow-exclude-order\"\u003eWhen evaluating files during \u003ca href=\"#how-scan\"\u003escanning\u003c/a\u003e, the “allow” rules are considered first.\u003c/span\u003e Any file of a type that is not encompassed by the “allow” types is skipped. Next, the “exclude” rules are considered. Any file of a type that is encompassed by the “exclude” types is skipped. In other words, a file must pass both the “allow” and the “exclude” rules in order to be considered during a scan.\u003c/p\u003e\n\n\u003cp\u003eIf an excluded type overrides an allowed type, this will be noted by dimming the overridden type and showing a ⚠️ badge on it. Hover the mouse pointer over the ⚠️ badge to see a tooltip explaining which other type is overriding it.\u003c/p\u003e\n\n\u003cp\u003eFor example, if JPEG is allowed, but the broad category “Image” is excluded, the “allow” of JPEG is overridden by the broader exclusion of all images. The JPEG type would be dimmed and shown with a ⚠️ badge.\u003c/p\u003e\n\n\u003cp\u003eIf you click the “Allow Any File” button or select a file that has no known type (e.g., a file with no file name extension and no other type information), then any file will pass the “allow” check. (Though the other allowed types will remain present in the list, they will be dimmed and disabled because they are superseded by the “Any File” item.) Note that the “exclude” rules are still applied, however.\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003cdiv\u003e\u003ca href=\"https://apps.apple.com/us/app/hyperspace-reclaim-disk-space/id6739505345?mt=12\"\u003e\u003cpicture\u003e\n\u003csource media=\"(prefers-color-scheme: light)\" srcset=\"https://hypercritical.co/hyperspace/images/allowed-file-types-any.png?v4\"/\u003e\n\u003csource media=\"(prefers-color-scheme: dark)\" srcset=\"https://hypercritical.co/hyperspace/images/allowed-file-types-any-dark.png\"/\u003e\n\u003cimg src=\"https://hypercritical.co/hyperspace/images/allowed-file-types-any.png?v4\" width=\"582\" height=\"545\" alt=\"The list of allowed file types with an “any file type” item overriding the other allowed types. The JPEG excluded type still applies.\"/\u003e\n\u003c/picture\u003e\u003c/a\u003e\u003c/div\u003e\n\n\u003cul\u003e\n\u003cli\u003e \u003cp\u003eThe screenshot above shows the “Any File” type superseding all other allow rules, while the JPEG “exclude” rule still applies.\u003c/p\u003e\n\n\u003cp\u003eTo remove an allowed or excluded type, select it in the list and then click the “-” (minus) button in the lower left. Removing the “Any File” item will re-enable the other allowed types in the list.\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli\u003e \u003cp\u003e\u003cb id=\"free-space-immediately\"\u003eFree storage space immediately\u003c/b\u003e - When enabled, file data that has been replaced with a space-saving clone will be removed immediately. When disabled, redundant data will be moved to the Trash instead. The Trash will have to be emptied (using the Finder or the Dock) before that storage space can be freed.\u003c/p\u003e\n\n\u003cp\u003eMoving redundant data to the Trash instead of deleting provides some insurance, in case \u003ca href=\"#reclamation-errors\"\u003esomething goes wrong\u003c/a\u003e during reclamation. Until you empty the Trash, you can always retrieve the non-clone version of a file that was replaced by a clone.\u003c/p\u003e\n\n\u003cp\u003eOn the other hand, reclaiming storage space immediately is less likely to leave a temporary file “stranded,” requiring \u003ca href=\"#clean-up\"\u003emanual clean-up\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf you’re confused about why there would be any “redundant data” at all, since Hyperspace reclaims space “without removing files,” you can \u003ca href=\"#without-removing\"\u003elearn more about how this works\u003c/a\u003e in another section of this document.\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli\u003e \u003cp\u003e\u003cb id=\"restore-folder-dates\"\u003eRestore folder dates\u003c/b\u003e - When enabled, folder modification dates will be restored to the values they had before reclamation began.\u003c/p\u003e\n\n\u003cp\u003eThe act of reclaiming a file will update the modification date of the folder that contains the file. This is an accurate reflection of what has happened: the folder \u003ci\u003ewas\u003c/i\u003e modified when one of the files it contains was replaced with a space-saving clone.\u003c/p\u003e\n\n\u003cp\u003eIf you prefer that folders not reflect this modification, enable this setting and Hyperspace will reset folder modification dates to their pre-reclamation values.\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli\u003e \u003cp\u003e\u003cb id=\"allow-fun\"\u003eAllow fun\u003c/b\u003e - Some features in Hyperspace exist just for fun. This setting enables them.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv\u003e\u003ca href=\"https://apps.apple.com/us/app/hyperspace-reclaim-disk-space/id6739505345?mt=12\"\u003e\u003cpicture\u003e\n\u003csource media=\"(prefers-color-scheme: light)\" srcset=\"https://hypercritical.co/hyperspace/images/settings-advanced.png?v1\"/\u003e\n\u003csource media=\"(prefers-color-scheme: dark)\" srcset=\"https://hypercritical.co/hyperspace/images/settings-advanced-dark.png?v1\"/\u003e\n\u003cimg src=\"https://hypercritical.co/hyperspace/images/settings-advanced.png?v1\" width=\"537\" height=\"566\" alt=\"Settings\"/\u003e\n\u003c/picture\u003e\u003c/a\u003e\u003c/div\u003e\n\n\u003cp id=\"settings-advanced\"\u003e\u003cb\u003eAdvanced settings:\u003c/b\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e \u003cp\u003e\u003cb id=\"scan-packages\"\u003eScan inside packages\u003c/b\u003e - When enabled, the contents of \u003ca href=\"#package\"\u003epackage\u003c/a\u003e directories will be scanned. This allows them to be used as \u003ca href=\"#source-file\"\u003esource files\u003c/a\u003e during \u003ca href=\"#reclamation\"\u003ereclamation\u003c/a\u003e. Files within package directories will not be eligible as \u003ca href=\"#target-file\"\u003etargets\u003c/a\u003e for reclamation unless the “\u003ca href=\"#reclaim-packages\"\u003eReclaim files inside packages\u003c/a\u003e” setting is also enabled.\u003c/p\u003e\n\n\u003cp\u003eApplications (i.e., \u003ctt\u003e.app\u003c/tt\u003e packages) are always ignored, regardless of the state of this setting.\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli\u003e \u003cp\u003e\u003cb id=\"reclaim-packages\"\u003eReclaim files inside packages\u003c/b\u003e - When enabled, the contents of \u003ca href=\"#package\"\u003epackage\u003c/a\u003e directories will be eligible for \u003ca href=\"#reclamation\"\u003ereclamation\u003c/a\u003e. This setting has no effect unless the “\u003ca href=\"#scan-packages\"\u003eScan inside packages\u003c/a\u003e” setting is enabled.\u003c/p\u003e\n\n\u003cp\u003eApplications (i.e., \u003ctt\u003e.app\u003c/tt\u003e packages) are always ignored, regardless of the state of this setting.\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli\u003e \u003cp\u003e\u003cb id=\"photos-access\"\u003eAllow Photos access\u003c/b\u003e - When enabled, Hyperspace will be allowed to access files within the \u003ca href=\"https://support.apple.com/photos\"\u003eApple Photos libraries\u003c/a\u003e. Note that Apple Photos libraries are packages, so the “\u003ca href=\"#scan-packages\"\u003eScan inside packages\u003c/a\u003e” and “\u003ca href=\"#reclaim-packages\"\u003eReclaim files inside packages\u003c/a\u003e” settings apply. Photos libraries need additional permissions beyond those two settings, however.\u003c/p\u003e\n\n\u003cp\u003eAccess to Photos libraries can be granted within Hyperspace on the first request. If access is denied, then allowing access requires following these steps: open the macOS “System Settings” app, then go to “Privacy \u0026amp; Security”, then “Photos”, then scroll to find Hyperspace in the list of apps and enable access. (Depending on your web browser, \u003ca href=\"x-apple.systempreferences:com.apple.preference.security?Privacy_Photos\"\u003ethis link may take you straight to the  relevant settings screen\u003c/a\u003e if you’re reading this on a Mac.) Finally, quit Hyperspace and relaunch it, then enable the “Allow Photos access” setting within Hyperspace.\u003c/p\u003e\n\n\u003cp\u003eOnce Photos access has been granted in System Settings, the “Allow Photos access” setting within Hyperspace can be turned on or off as desired at any time.\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli\u003e \u003cp\u003e\u003cb id=\"warn-before-discarding\"\u003eWarn before discarding scan information\u003c/b\u003e - When enabled, Hyperspace will show a confirmation dialog before discarding information about a scan or reclamation (e.g., when selecting a new scan source or clicking the “Reset” button in the main window). Scan information includes the list of identical files found as well as any scan or reclamation errors.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e\n\n\u003ch3 id=\"multiple-folders\"\u003eQ: Why might I want to select multiple folders to scan?\u003c/h3\u003e\n\n\u003cdiv\u003e\n\u003cp\u003eAs mentioned \u003ca href=\"#how-scan\"\u003eearlier\u003c/a\u003e, the green and red “+” and “-” buttons can be used to add and remove folders to scan. Multiple folders provide more files to scan, of course, but they also potentially allow more duplicates to be found.\u003c/p\u003e\n\n\u003cp\u003eConsider two folders, Documents and Downloads. A file in the Documents folder may have no duplicates anywhere within the Documents folder. Similarly, a file in the Downloads folder may have no duplicates anywhere within the Downloads folder.\u003c/p\u003e\n\n\u003cp\u003eNow consider selecting \u003ci\u003eboth\u003c/i\u003e the Documents and Downloads folders for a single scan. A file in the Documents folder may have duplicates in the Downloads folder, and vice versa. When these two folders are scanned individually, such duplicates would not be found. When scanned together, there are more possible pairs and more potential for duplicates.\u003c/p\u003e\n\n\u003cp\u003e\u003cspan id=\"source-only\"\u003eThe other reason to select multiple folders for scanning is that entire folders can be marked as “Source Only”\u003c/span\u003e, meaning that the files within those folders will never be modified. They will only be used as the “source” of a clone operation. This is useful if you want to ensure that nothing in a folder is modified during reclamation.\u003c/p\u003e\n\n\u003cp\u003eTo designate a folder as “Source Only”, Control-click or right-click the folder’s icon in the main window when there are two or more folders, then choose the “Source Only” item from the context menu. A lock badge will appear over the folder.\u003c/p\u003e\n\n\u003cdiv\u003e\u003ca href=\"https://apps.apple.com/us/app/hyperspace-reclaim-disk-space/id6739505345?mt=12\"\u003e\u003cpicture\u003e\n\u003csource media=\"(prefers-color-scheme: light)\" srcset=\"https://hypercritical.co/hyperspace/images/source-only-folders.png\"/\u003e\n\u003csource media=\"(prefers-color-scheme: dark)\" srcset=\"https://hypercritical.co/hyperspace/images/source-only-folders-dark.png\"/\u003e\n\u003cimg src=\"https://hypercritical.co/hyperspace/images/source-only-folders.png\" width=\"593\" height=\"284\" alt=\"Source-only folders\"/\u003e\n\u003c/picture\u003e\u003c/a\u003e\u003c/div\u003e\n\n\u003cp\u003eNote that there must always be at least one available folder that is not marked as being source-only, otherwise no reclamation will be possible. Also note that a different source can be \u003ca href=\"#how-review\"\u003echosen manually\u003c/a\u003e for each group of identical files, and this includes the ability to manually override the source-only nature of individual files within a source-only folder.\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch3 id=\"review-shortcuts\"\u003eQ: How can I review files more efficiently?\u003c/h3\u003e\n\n\u003cdiv\u003e\n\u003cp\u003e\u003cb\u003eA:\u003c/b\u003e When \u003ca href=\"#how-review\"\u003ereviewing files\u003c/a\u003e, the following shortcuts may be useful:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e \u003cp\u003eAfter selecting a file group in the list, the up and down arrow keys will move the selection.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e \u003cp\u003eWhen a file group is selected in the list, press the space bar to preview its contents. Press the “x” or “.” key to toggle the checkbox for the group. Press the up or down arrow keys to preview the previous or next file group.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e \u003cp\u003eThe checkbox in the first column header will toggle the checkboxes for \u003ci\u003eall\u003c/i\u003e the file groups in the list.\u003c/p\u003e\n\n\u003cp\u003eIf you want to check not just the checkboxes for every file group but also the checkboxes for every file \u003ci\u003ewithin\u003c/i\u003e each group (as seen in the detail area at the bottom of the window when a group is selected), hold down the Option key when clicking the checkbox.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e \u003cp\u003eOption-click the checkbox for the file group in the detail area at the bottom of the window to check all the checkboxes for every file within the group.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e\n\n\u003ch3 id=\"how-it-works\"\u003eQ: How does Hyperspace work?\u003c/h3\u003e\n\n\u003cdiv\u003e\n\u003cp\u003e\u003cb\u003eA:\u003c/b\u003e Files are made up of data, which is the actual content of the file, and \u003cspan id=\"metadata\"\u003emetadata\u003c/span\u003e, which is data \u003ci\u003eabout\u003c/i\u003e the file’s data. Metadata includes things like the file’s name, creation date, modification date, ownership, permissions, and so on.\u003c/p\u003e\n\n\u003cp\u003eThe standard macOS file system, \u003ca href=\"https://en.wikipedia.org/wiki/Apple_File_System\"\u003eAPFS\u003c/a\u003e, has the ability to create multiple files that each have their own metadata but that share a single copy of the data. Since data is usually much larger than metadata for any file of a nontrivial size, this saves disk space.\u003c/p\u003e\n\n\u003cp\u003eThe Finder’s “Duplicate” command uses this feature when it duplicates a file. For example, consider a 100 GB video file as the only file on a 256 GB disk, leaving 156 GB of free space. If you duplicate that file, you might think that would leave only 56 GB of free space (256 GB − 100 GB − 100 GB = 56 GB). And with only 56 GB of free space, duplicating that file again seems impossible.\u003c/p\u003e\n\n\u003cp\u003eBut if you actually try this on an APFS volume in macOS, you’ll find that you can make a nearly \u003ci\u003eunlimited\u003c/i\u003e number of copies of that 100 GB video file using the Finder’s “Duplicate” command \u003ci\u003ewithout\u003c/i\u003e filling the disk. Furthermore, each copy will be nearly instantaneous. That’s because macOS is only creating and storing the relatively tiny amount of \u003ci\u003emetadata\u003c/i\u003e needed for each newly created duplicate file. Only a single copy of the 100 GB of \u003ci\u003edata\u003c/i\u003e exists, and it is shared by all the duplicates.\u003c/p\u003e\n\n\u003cp\u003eHyperspace searches for files that have identical data, and turns them into space-saving clones of each other using this feature of APFS, leaving only one copy of the data that is shared by all the clones. The essential metadata for the files is preserved during this process. From your perspective, nothing appears to have changed. The files all look the same as they did before Hyperspace did its work. But under the covers, all the files now share a single copy of the data.\u003c/p\u003e\n\n\u003cp\u003e\u003cspan id=\"independent\"\u003eImportantly, \u003cb\u003eall the files remain independent\u003c/b\u003e.\u003c/span\u003e Changes to one file do \u003ci\u003e\u003cb\u003enot\u003c/b\u003e\u003c/i\u003e affect any of the other files. As the files are changed, their data storage, which was previously completely shared, will start to diverge, one piece at a time. The files will still share the pieces they have in common, even as their data changes and is no longer exactly the same for all the files.\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch3 id=\"symlinks-and-hardlinks\"\u003eQ: Are clone files the same thing as symbolic links or hard links?\u003c/h3\u003e\n\n\u003cdiv\u003e\n\u003cp\u003e\u003cb\u003eA:\u003c/b\u003e No. \u003ca href=\"https://en.wikipedia.org/wiki/Symbolic_link\"\u003eSymbolic links\u003c/a\u003e (\u0026#34;symlinks\u0026#34;) and \u003ca href=\"https://en.wikipedia.org/wiki/Hard_link\"\u003ehard links\u003c/a\u003e are ways to make two entries in the file system that share the same data. This might sound like the same thing as the \u003ca href=\"#how-it-works\"\u003espace-saving clones\u003c/a\u003e used by Hyperspace, but there’s one important difference. With symlinks and hard links, a change to one of the files affects \u003ci\u003eall\u003c/i\u003e the files.\u003c/p\u003e\n\n\u003cp\u003eThe space-saving clones made by Hyperspace are different. Changes to one clone file do \u003ci\u003enot\u003c/i\u003e affect other files. Cloned files should look and behave exactly the same as they did before they were converted into clones.\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch3 id=\"clone-limitations\"\u003eQ: What are the limitations of space-saving clones?\u003c/h3\u003e\n\n\u003cdiv\u003e\n\u003cp\u003e\u003cb\u003eA:\u003c/b\u003e The first and most obvious limitation of \u003ca href=\"#how-it-works\"\u003espace-saving clones\u003c/a\u003e is that they only work on \u003ca href=\"https://en.wikipedia.org/wiki/Apple_File_System\"\u003eAPFS\u003c/a\u003e volumes. While APFS is the standard file system for the Mac, macOS can also read and write disks in other formats. Hyperspace can only reclaim space on APFS volumes.\u003c/p\u003e\n\n\u003cp\u003eFurthermore, APFS only supports space-saving clones for files that are all on the same volume. A “volume” is the thing you see as a “hard drive” icon in the Finder. Even though it’s common for a storage device to contain a single volume and appear as a single icon in the Finder, each physical storage device can actually have multiple volumes on it, so the distinction between storage devices and volumes is important. Clones only work within the same \u003ci\u003evolume\u003c/i\u003e. They cannot cross volume boundaries.\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch3 id=\"identical\"\u003eQ: How does Hyperspace determine if two files are identical?\u003c/h3\u003e\n\n\u003cdiv\u003e\n\u003cp\u003e\u003cb\u003eA:\u003c/b\u003e For the purposes of finding “identical” files to \u003ca href=\"#how-it-works\"\u003ereplace with space-saving clones\u003c/a\u003e, the only thing that matters is the \u003ci\u003econtents\u003c/i\u003e of a file: the file \u003ci\u003edata\u003c/i\u003e. All files will always have their own private \u003ci\u003e\u003ca href=\"#metadata\"\u003emetadata\u003c/a\u003e\u003c/i\u003e: file names, file dates, permissions, ownership, etc. After \u003ca href=\"#reclamation\"\u003ereclamation\u003c/a\u003e, the space savings comes from the fact that multiple copies of the same file \u003ci\u003edata\u003c/i\u003e have now been reduced to a single instance of that data on disk. (You can read more about \u003ca href=\"#how-it-works\"\u003ehow this works\u003c/a\u003e elsewhere in this documentation.)\u003c/p\u003e\n\n\u003cp\u003eTo determine if two files have identical contents, Hyperspace first compares the file sizes. If the files are not exactly the same size, down to the byte, then the files are not identical.\u003c/p\u003e\n\n\u003cp\u003eNext, Hyperspace reads every byte of each file’s data (which includes the \u003ca href=\"https://en.wikipedia.org/wiki/Resource_fork\"\u003eresource fork\u003c/a\u003e) and computes three \u003ca href=\"https://en.wikipedia.org/wiki/Hash_function\"\u003econtent hashes\u003c/a\u003e for the file data (and three for the resource fork, if one exists) using the following algorithms: \u003ca href=\"https://en.wikipedia.org/wiki/MD5\"\u003eMD5\u003c/a\u003e, \u003ca href=\"https://en.wikipedia.org/wiki/SHA-1\"\u003eSHA-1\u003c/a\u003e, and \u003ca href=\"https://en.wikipedia.org/wiki/SHA-2\"\u003eSHA-256\u003c/a\u003e. Only if \u003ci\u003eall the hashes match exactly\u003c/i\u003e are two files considered to have identical content.\u003c/p\u003e\n\n\u003cp\u003eFor example, consider these content hashes for a file:\u003c/p\u003e\n\n\u003ctable\u003e\n\u003ctbody\u003e\u003ctr\u003e\u003cth colspan=\"2\"\u003eFile Data:\u003c/th\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMD5:\u003c/td\u003e\u003ctd\u003ecf60439fb179d2379af1657d8e1af75f\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eSHA1:\u003c/td\u003e\u003ctd\u003e97eb6d4cbcf75a55dd54322861317c6d3f4de9de\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eSHA256:\u003c/td\u003e\u003ctd\u003e26661fc18a369c6f9d2f5c9772489ab6d60b680171e7ff06991f59c6d93e37e9\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003cth colspan=\"2\"\u003eResource Fork:\u003c/th\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eMD5:\u003c/td\u003e\u003ctd\u003ea61ebf6dd946633ee5612e934aae8947\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eSHA1:\u003c/td\u003e\u003ctd\u003eea5a0007a0914665fc79d095b5e4aee105c88efe\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eSHA256:\u003c/td\u003e\u003ctd\u003eb35e45e2c5047e925701e9ce33d53a7cf52e8a36ca1d13e399008cf43f77c662\u003c/td\u003e\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\n\u003cp\u003eThis file has a resource fork, so there are six total hashes: three hashes for the file data and three hashes for the resource fork.\u003c/p\u003e\n\n\u003cp\u003eFor a file to be considered “identical” to this one for the purposes of \u003ca href=\"#reclamation\"\u003ereclamation\u003c/a\u003e, the three hashes for its data would have to exactly match the three file data hashes above, and the three hashes for its resource fork would have to exactly match the three resource fork hashes above. (If it did not have a resource fork at all, then it would not match this file.)\u003c/p\u003e\n\n\u003cp\u003eIn other words, the file contents must be \u003ci id=\"exactly-the-same\"\u003eexactly the same, down to the very last bit\u003c/i\u003e. Hyperspace does no interpretation of file contents. For example, it cannot and will not consider two photos to be “identical” if they merely look similar. Every single bit of file data must be exactly the same, or the files are not considered identical.\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch3 id=\"without-removing\"\u003eQ: So Hyperspace can reclaim disk space “without removing files.” But what does that really \u003ci\u003emean?\u003c/i\u003e\u003c/h3\u003e\n\n\u003cdiv\u003e\u003cp\u003eHyperspace’s tag line (“Reclaim disk space—\u003ci\u003ewithout removing any files!\u003c/i\u003e”) is best explained by example. Let’s say you start with five identical 100 MB files, which occupy a total of 500 MB of disk space (5 x 100 MB). After running Hyperspace on those files and reclaiming disk space from them, you will be left with…five 100 MB files. The files will look exactly the same as they did before Hyperspace ran. You started with five files and you ended with five files. \u003ci\u003eNone of the files have been removed.\u003c/i\u003e That’s what the tag line means.\u003c/p\u003e\n\n\u003cp\u003eOf course, after Hyperspace has done its work, those five files now occupy a total of only \u003ci\u003e100 MB\u003c/i\u003e of disk space, for a savings of 400 MB of disk space. You can \u003ca href=\"#how-it-works\"\u003eread more about how this works\u003c/a\u003e elsewhere in this document.\u003c/p\u003e\n\n\u003cp\u003eBut what did Hyperspace \u003ci\u003edo\u003c/i\u003e to make this happen? There’s no getting around that fact that 400 MB of data was deleted \u003ci\u003esomehow\u003c/i\u003e, right?\u003c/p\u003e\n\n\u003cp\u003eHere’s what Hyperspace does when it’s reclaiming space. First, one file in each group of identical files is designated as the “source” file. This file will not be modified in any way. (You can change which file is the source \u003ca href=\"#how-review\"\u003eduring review\u003c/a\u003e, or more broadly \u003ca href=\"#multiple-folders\"\u003ewhen adding a folder to scan\u003c/a\u003e.) Then, for each “target” file in the group, Hyperspace makes a \u003ca href=\"#space-saving-clones\"\u003espace-saving clone\u003c/a\u003e of the source file, copies metadata from the target file into that clone file, and finally, when that clone file looks exactly like the target file in every possible way, the target file is \u003ci\u003ereplaced\u003c/i\u003e by the clone file.\u003c/p\u003e\n\n\u003cp\u003eThat final “replacement” process can happen in two possible ways, depending on \u003ca href=\"#free-space-immediately\"\u003ea setting in Hyperspace\u003c/a\u003e. One way is that the target file can be moved to the Trash as the clone file replaces it. The other way is that the clone file can be (atomically) moved \u003ci\u003eon top of\u003c/i\u003e the target file, causing the target file to cease to be as it is entirely replaced by the clone file. Some of the trade-offs between two approaches are described with \u003ca href=\"#free-space-immediately\"\u003ethe documentation for the relevant setting\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eEither way, as you can see, Hyperspace does indeed delete data. That’s the only way to get more free disk space, after all. But it does it in such a way that, when it’s done, everything should appear the same as it did before it started. You should have the same number of files with the same names in the same places with the same creation and modification dates, the same Finder labels, the same permissions, and so on.\u003c/p\u003e\n\n\u003cp\u003eAnd, yes, the files all \u003ca href=\"#independent\"\u003eremain independent\u003c/a\u003e of each other when it comes to any and all modifications. Changes to one file do \u003ci\u003e\u003cb\u003enot\u003c/b\u003e\u003c/i\u003e affect any of the other files. Everything really does look and work just like it did before Hyperspace reclaimed that 400 MB of disk space.\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch3 id=\"scan-errors\"\u003eQ: What kinds of errors can occur during the scanning process?\u003c/h3\u003e\n\n\u003cdiv\u003e\u003cp\u003eHyperspace will attempt to scan almost any folder or volume, but it may encounter errors during the scanning process. These errors are all instances where Hyperspace tried to perform a task as part of the scan but was unable to complete it successfully.\u003c/p\u003e\n\n\u003cp\u003eSince scanning is a read-only process, the worst thing that can happen is that one or more files are not able to be scanned. Nevertheless, Hyperspace reports many of these errors to let the user know why certain files that they thought might be eligible for reclamation were not included in the scan.\u003c/p\u003e\n\n\u003cp\u003e\u003cspan id=\"scan-expected-errors\"\u003eCertain “expected” errors are not reported.\u003c/span\u003e For example, finding a file outside the current user’s home directory that is owned by another user is unsurprising. Errors like these are not reported, but these files will not be eligible to be reclaimed. (They may be used as the \u003ca href=\"#source-file\"\u003esource file\u003c/a\u003e in a file group, however.)\u003c/p\u003e\n\n\u003cp\u003eThe possible scan errors are:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e \u003cp\u003e\u003cb id=\"scan-unreadable\"\u003eFile is Unreadable\u003c/b\u003e - If a file cannot be read, Hyperspace cannot determine if it is a duplicate.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e \u003cp\u003e\u003cb id=\"scan-ownership\"\u003eFile is Owned by Another User\u003c/b\u003e - Only files owned by the current user \u003ci\u003eand\u003c/i\u003e that belong to a \u003ca href=\"https://en.wikipedia.org/wiki/Group_identifier\"\u003egroup\u003c/a\u003e that has the current user as a member will be eligible for reclamation. This is because Hyperspace must be able to reproduce the owner and group on the clone file, and it cannot set the owner or group to values that the user running the app does not have.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e \u003cp\u003e\u003cb id=\"scan-information-unavailable\"\u003eFile Information Unavailable\u003c/b\u003e - If an attempt to get information about a file fails for any reason, it will be skipped.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e \u003cp\u003e\u003cb\u003eFile Not Found\u003c/b\u003e - A file might not be found because it has been moved, renamed, or deleted between the time Hyperspace got the list of directory contents and the time Hyperspace tried to read the file.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e \u003cp\u003e\u003cb id=\"scan-immutable\"\u003eFile Is Immutable or Locked\u003c/b\u003e - If a file is marked as immutable or is “Locked” in the Finder, Hyperspace does not consider it eligible for reclamation and it will be skipped during the scan. You may be able to manually unlock the file in the Finder by selecting the file and then selecting “Get Info” from the “File” menu. Then uncheck the “Locked” checkbox in the Get Info window.\u003c/p\u003e\n\n\u003cp\u003eThere are other ways that a file might be marked as immutable as well, but if you don’t understand why a file is designated as immutable, it may be best not to change it.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e \u003cp\u003e\u003cb id=\"scan-busy\"\u003eFile Is Busy\u003c/b\u003e - If a file is marked as “busy,” it will be skipped. You can manually clear the “busy” bit on a file by running the command \u003ctt\u003eSetFile -a z myfile.txt\u003c/tt\u003e from the Terminal.\u003c/p\u003e\n\n\u003cp\u003eNote that a file being marked as “busy” in this way doesn’t necessarily mean that the file is actually in use by another app. The “busy” bit is just another piece of \u003ca href=\"#how-it-works\"\u003efile metadata\u003c/a\u003e, like the file name or creation date, that is persistently stored by the file system. It could have been set years ago and never changed. Or it could have been set moments ago by an app that is using the file. There’s no good way to tell.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eMost of these errors are caused by situations beyond the control of Hyperspace. Some \u003ci\u003ecould\u003c/i\u003e be overridden by Hyperspace (e.g., Hyperspace itself could try to clear the “busy” bit), but that would only increase the risk of problems. If you, the user, want to unlock files or clear busy bits, feel free. But Hyperspace will not presume to know that it should ignore such signals.\u003c/p\u003e\n\n\u003cp\u003eThe same goes for permissions issues. A file owned by the current user may still have its permissions set such that it is not readable by \u003ci\u003eanyone\u003c/i\u003e. Since it is owned by the current user, Hyperspace \u003ci\u003ecould\u003c/i\u003e change the permissions on the file to make it readable, but it will not do so.\u003c/p\u003e\n\n\u003cp\u003eIn general, Hyperspace will not alter the attributes of files when those changes would override their current state. Again, if you, the user, want to modify the permissions, ownership, or other attributes of files to allow Hyperspace to read from and write to them, you are free to do so.\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch3 id=\"reclamation-errors\"\u003eQ: What kinds of errors can occur during the reclamation process?\u003c/h3\u003e\n\n\u003cdiv\u003e\u003cp\u003eHyperspace may encounter errors during the reclamation process. These errors are all instances where Hyperspace tried to perform a task during reclamation but was unable to complete it successfully. Hyperspace reports these errors to let the user know why certain files that they thought would be reclaimed were not.\u003c/p\u003e\n\n\u003cp\u003eReclamation is when Hyperspace actually modifies your data. To protect your data, certain kinds of errors will immediately stop the reclamation process. These are errors that cause the contents of the disk to be left in an inconsistent state, usually by “stranding” a file that Hyperspace was unable to clean up. As soon as a single file is stranded, the reclamation process stops.\u003c/p\u003e\n\n\u003cp\u003eThe “Reclamation Errors” window will show these kinds of errors in orange or red text, and each error of this kind will include clean-up instructions and a clickable link to reveal the stranded file in the Finder. You should manually clean up these files by either renaming them back to their original names or by deleting them, depending on what kind of operation failed, according to the error message.\u003c/p\u003e\n\n\u003cp\u003eHere are some of the possible reclamation errors:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e \u003cp\u003e\u003cb id=\"clean-up\"\u003eClean-Up Failure\u003c/b\u003e - Depending on the \u003ca href=\"#settings\"\u003eSettings\u003c/a\u003e, Hyperspace may create, move, and rename various files during reclamation. If anything goes wrong, the goal is to restore all files to their state before the reclamation was attempted. If something goes wrong during this clean-up process, one or more files may be left ”stranded” on the disk.\u003c/p\u003e\n\n\u003cp\u003eThese are files that Hyperspace tried to clean up, but it was unable to do so due to an error. It is up to the user to remedy the situation. The most serious example is when a file was renamed aside before being replaced by a space-saving clone, then the cloning process failed, and then the file could not be renamed \u003ci\u003eback\u003c/i\u003e to its original name. In this situation, the user must manually rename the file back to its original name. The “Reclamation Errors” window will include instructions and a link that will reveal the stranded file in the Finder.\u003c/p\u003e\n\n\u003cp\u003eLess serious stranding errors occur when a temporary file created by Hyperspace could not be cleaned up. These files can safely be deleted.\u003c/p\u003e\n\n\u003cp\u003e\u003cb id=\"cleanup-important\"\u003eIMPORTANT:\u003c/b\u003e \u003ci\u003ePlease read the error message carefully\u003c/i\u003e to ensure that you can distinguish between a temporary file that can safely be deleted and one of \u003ci\u003eyour\u003c/i\u003e files that was renamed aside and needs to be renamed back! Do not accidentally manually delete your own files!\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e \u003cp\u003e\u003cb\u003eFile is Unreadable\u003c/b\u003e - If a file cannot be read, Hyperspace cannot use it as the source for a space-saving clone.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e \u003cp\u003e\u003cb id=\"reclamation-ownership\"\u003eFile is Owned by Another User\u003c/b\u003e - Only files owned by the current user \u003ci\u003eand\u003c/i\u003e that belong to a \u003ca href=\"https://en.wikipedia.org/wiki/Group_identifier\"\u003egroup\u003c/a\u003e that has the current user as a member can be reclaimed. This is because Hyperspace must be able to reproduce the owner and group on the clone file, and it cannot set the owner or group to values that the user running the app does not have.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e \u003cp\u003e\u003cb\u003eFile Information Unavailable\u003c/b\u003e - If an attempt to get information about a file fails for any reason, it cannot be reclaimed.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e \u003cp\u003e\u003cb\u003eFile Not Found\u003c/b\u003e - A file might not be found because it might have been moved, renamed, or deleted between the time it was scanned and the time an attempt was made to reclaim it.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e \u003cp\u003e\u003cb id=\"reclamation-immutable\"\u003eFile is Immutable or Locked\u003c/b\u003e - If a file is marked as immutable or is “Locked” in the Finder, Hyperspace does not consider it eligible for reclamation and it will be skipped. You may be able to manually unlock the file in the Finder by selecting the file, selecting “Get Info” from the “File” menu, and then unchecking the “Locked” checkbox in the Get Info window.\u003c/p\u003e\n\n\u003cp\u003eThere are other ways that a file might be marked as immutable as well, but if you don’t understand why a file is designated as immutable, it may be best not to change it.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e \u003cp\u003e\u003cb id=\"reclamation-busy\"\u003eFile is Busy\u003c/b\u003e - If a file is marked as “busy,” it will be skipped. You can manually clear the “busy” bit on a file by running the command \u003ctt\u003eSetFile -a z myfile.txt\u003c/tt\u003e from the Terminal.\u003c/p\u003e\n\n\u003cp\u003eNote that a file being marked as “busy” in this way doesn’t necessarily mean that the file is actually in use by another app. The “busy” bit is just another piece of \u003ca href=\"#how-it-works\"\u003efile metadata\u003c/a\u003e, like the file name or creation date, that is persistently stored by the file system. It could have been set years ago and never changed. Or it could have been set moments ago by an app that is using the file. There’s no good way to tell.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eMost of these errors are caused by situations beyond the control of Hyperspace. Some \u003ci\u003ecould\u003c/i\u003e be overridden by Hyperspace (e.g., Hyperspace itself could try to clear the “busy” bit), but that would only increase the risk of problems. If you, the user, want to unlock files or clear busy bits, feel free. But Hyperspace will not presume to know that it should ignore such signals.\u003c/p\u003e\n\n\u003c/div\u003e\n\n\u003ch3 id=\"go-wrong\"\u003eQ: Is there anything that can go wrong during reclamation?\u003c/h3\u003e\n\n\u003cdiv\u003e\n\u003cp\u003e\u003cb\u003eA:\u003c/b\u003e Yes. An explanation of possible \u003ca href=\"#reclamation-errors\"\u003ereclamation errors\u003c/a\u003e appears \u003ca href=\"#reclamation-errors\"\u003eelsewhere in this document\u003c/a\u003e. But those are just the errors that Hyperspace can detect. There are many kinds of errors that it cannot detect.\u003c/p\u003e\n\n\u003cp\u003eDepending on the \u003ca href=\"#settings\"\u003eSettings\u003c/a\u003e, Hyperspace may replace many different kinds of files with space-saving clones. This includes files created by other applications or macOS itself that might be in active use. There is no way for Hyperspace to cooperate with all other applications and macOS itself to coordinate a “safe” time for those files to be replaced, nor is there a way for Hyperspace to forcibly take exclusive control of those files.\u003c/p\u003e\n\n\u003cp\u003eThis leads to scenarios where other applications or parts of the system might experience unexpected results. For example, if an application is in the middle of writing to a file, and that file is replaced with a space-saving clone by Hyperspace, it is possible that the application will be blissfully unaware and will complete its write operation on the old version of the file, not realizing that file has been replaced by a clone of what the file looked like moments ago. An application might also encounter an error when trying to write to a file that Hyperspace has just replaced.\u003c/p\u003e\n\n\u003cp\u003eThere are many, many possible situations like this that may occur if Hyperspace and some other process are trying to modify the same file at the same moment in time. Hyperspace includes \u003ca href=\"#guardrails\"\u003emany measures to prevent problems like this from happening\u003c/a\u003e, but nothing can prevent it entirely.\u003c/p\u003e\n\n\u003cp\u003eFor best results, run Hyperspace when no other applications are running.\u003c/p\u003e\n\n\u003c/div\u003e\n\n\u003ch3 id=\"guardrails\"\u003eQ: What kind of guardrails are included in Hyperspace to prevent problems during reclamation?\u003c/h3\u003e\n\n\u003cdiv\u003e\n\u003cp\u003e\u003cb\u003eA:\u003c/b\u003e Hyperspace includes many features to decrease the likelihood that something will \u003ca href=\"#go-wrong\"\u003ego wrong\u003c/a\u003e during reclamation.\u003c/p\u003e \n\n\u003cul\u003e\n\u003cli\u003e \u003cp\u003e\u003cb id=\"guardrails-allowed-file-types\"\u003eAllowed File Types\u003c/b\u003e - Only files of the \u003ca href=\"#allowed-file-types\"\u003eallowed types\u003c/a\u003e are considered for reclamation. All other file types are ignored.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e \u003cp\u003e\u003cb id=\"guardrails-ignored-directories\"\u003eIgnored Directories\u003c/b\u003e - Certain directories are entirely ignored by Hyperspace. This includes the top-level \u003ctt\u003eSystem\u003c/tt\u003e directory (which is read-only anyway), the \u003ctt\u003eLibrary\u003c/tt\u003e directories in your home directory and at the top level of a volume, and the \u003ctt\u003edev\u003c/tt\u003e, \u003ctt\u003eprivate\u003c/tt\u003e, and \u003ctt\u003ecores\u003c/tt\u003e directories at the top level of a volume. If you have a directory with the same name as one of the excluded directories at the top level of a volume and you want to scan it, you can explicitly select it as a scan source.\u003c/p\u003e\n\n\u003cp\u003eBy default, \u003ca href=\"#package\"\u003epackage\u003c/a\u003e directories are also ignored. This can be changed using \u003ca href=\"#settings-advanced\"\u003ethe relevant settings\u003c/a\u003e. Regardless of the settings, applications (i.e., \u003ctt\u003e.app\u003c/tt\u003e packages) are always ignored.\u003c/p\u003e\n\n\u003c/li\u003e\u003cli\u003e \u003cp\u003e\u003cb id=\"guardrails-ignored-files\"\u003eIgnored Files\u003c/b\u003e - Files known to belong to the system, like \u003ctt\u003e\u003ca href=\"https://en.wikipedia.org/wiki/.DS_Store\"\u003e.DS_Store\u003c/a\u003e\u003c/tt\u003e files, are ignored. Any file that is unreadable by the current user or that has ownership information that cannot be reproduced by the current user is ignored. Any file that is backed by a cloud storage service (e.g., iCloud Drive, \u003ca href=\"https://www.microsoft.com/en-us/microsoft-365/onedrive/online-cloud-storage\"\u003eOneDrive\u003c/a\u003e, and recent versions of \u003ca href=\"https://www.dropbox.com/\"\u003eDropbox\u003c/a\u003e) in a way that the app can detect is ignored.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e \u003cp\u003e\u003cb id=\"guardrails-validation\"\u003eJust-In-Time Validation\u003c/b\u003e - Since the processes of \u003ca href=\"#scanning\"\u003escanning\u003c/a\u003e and \u003ca href=\"#reclamation\"\u003ereclamation\u003c/a\u003e may be separated by some time, the reclamation process will do one final validation before replacing a file with a space-saving clone. If anything has changed since the scan (e.g., if the contents of one of the files has changed so it is no longer identical) then it will not be touched.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e \u003cp\u003e\u003cb id=\"guardrails-trash\"\u003eMoving Redundant Data to the Trash\u003c/b\u003e - When replacing a file with a space-saving clone, the redundant data may \u003ca href=\"#free-space-immediately\"\u003eoptionally be put into the Trash\u003c/a\u003e, rather than being deleted immediately. This allows the old version of the data to be recovered at any time until the Trash is emptied.\u003c/p\u003e\u003c/li\u003e\n\n\u003c/ul\u003e\n\n\u003cp\u003eSome of these safety features can be modified in \u003ca href=\"#settings\"\u003eSettings\u003c/a\u003e, but not all of them. Future versions of Hyperspace may allow more safety features to be disabled.\u003c/p\u003e\n\n\u003c/div\u003e\n\n\u003ch3 id=\"free-space\"\u003eQ: Hyperspace says it has reclaimed space, but the amount of free space on my disk has not changed. Why?\u003c/h3\u003e\n\n\u003cdiv\u003e\n\u003cp\u003e\u003cb\u003eA:\u003c/b\u003e Increasing the amount of free disk space on an \u003ca href=\"https://en.wikipedia.org/wiki/Apple_File_System\"\u003eAPFS\u003c/a\u003e volume can only happen when nothing references some chunk of data. Only then can the space taken by that data be added back to the pool of free space.\u003c/p\u003e\n\n\u003cp\u003eIf Hyperspace is configured to \u003ca href=\"#free-space-immediately\"\u003eput redundant data in the Trash\u003c/a\u003e, the space taken by that data cannot be freed until the Trash is emptied.\u003c/p\u003e\n\n\u003cp\u003eAPFS also supports \u003ca href=\"https://en.wikipedia.org/wiki/Snapshot_(computer_storage)\"\u003esnapshots\u003c/a\u003e, which preserve the contents of a volume at a given moment in time. The \u003ca href=\"https://en.wikipedia.org/wiki/Time_Machine_(macOS)\"\u003eTime Machine\u003c/a\u003e backup feature of macOS creates local snapshots as part of its backup process. Even if a file is deleted, the space taken by that file cannot be freed if it is still part of one or more snapshots.\u003c/p\u003e\n\n\u003cp\u003eThe local snapshots created by Time Machine are automatically removed when they are no longer needed, so the space taken by deleted files will eventually be freed. But it may be a day or more before this happens. (There are ways to force local snapshots to be deleted, but that is beyond the scope of this document. I recommend just waiting.)\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch3 id=\"metadata-handling\"\u003eQ: Does Hyperspace preserve file metadata during reclamation?\u003c/h3\u003e\n\n\u003cdiv\u003e\n\u003cp\u003e\u003cb\u003eA:\u003c/b\u003e When Hyperspace replaces a file with a \u003ca href=\"#how-it-works\"\u003espace-saving clone\u003c/a\u003e, it attempts to preserve all metadata associated with that file. This includes the creation date, modification date, permissions, ownership, Finder labels, Finder comments, whether or not the file name extension is visible, and even \u003ca href=\"#resource-forks\"\u003eresource forks\u003c/a\u003e. If the attempt to preserve any of these pieces of metadata fails, then the file is not replaced.\u003c/p\u003e\n\n\u003cp\u003eIf you find some piece of file metadata that is not preserved, please \u003ca href=\"mailto:hyperspace@hypercritical.co\"\u003elet us know\u003c/a\u003e.\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch3 id=\"resource-forks\"\u003eQ: How does Hyperspace handle resource forks?\u003c/h3\u003e\n\n\u003cdiv\u003e\n\u003cp\u003e\u003cb\u003eA:\u003c/b\u003e Hyperspace considers the contents of a file’s \u003ca href=\"https://en.wikipedia.org/wiki/Resource_fork\"\u003eresource fork\u003c/a\u003e to be part of the file’s data. Two files are considered identical only if their data and resource forks are identical to each other.\u003c/p\u003e\n\n\u003cp\u003eWhen a file is replaced by a \u003ca href=\"#how-it-works\"\u003espace-saving clone\u003c/a\u003e during reclamation, its resource fork is preserved.\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch3 id=\"clone-check\"\u003eQ: Is there a way to tell if two files are already clones of each other?\u003c/h3\u003e\n\n\u003cp\u003e\u003cb\u003eA:\u003c/b\u003e There is no easy way to check if two files are already clones of each other. Hyperspace itself makes a “best effort” to determine if two files with identical contents are already clones of each other, and it skips them if it thinks they are.\u003c/p\u003e\n\n\u003ch3 id=\"redundancy\"\u003eQ: Isn’t it better to have multiple, independent copies of the same data for each file?\u003c/h3\u003e\n\n\u003cp\u003e\u003cb\u003eA:\u003c/b\u003e Maybe, if the failure you’re trying to protect against is one where some part of your storage device or file system gets corrupted while another part remains functional. There’s no denying that having more copies of data is better than having fewer. That said, actual backups (i.e., copies of the data that are kept elsewhere, on a different storage device) offer much better protection against data loss.\u003c/p\u003e\n\n\u003ch3 id=\"too-big\"\u003eQ: Can space-saving clones make the contents of my disk too big to copy to another disk of the same size?\u003c/h3\u003e\n\n\u003cdiv\u003e\n\u003cp\u003e\u003cb\u003eA:\u003c/b\u003e Yes. Consider a 256 GB disk containing five space-saving clones of the same 100 GB video file. Thanks to \u003ca href=\"#how-it-works\"\u003ethe magic of cloning\u003c/a\u003e, those five files only take up a total of 100 GB on the disk. But if you tried to naively copy the contents of that disk to another 256 GB disk, the total amount of data to be copied would be 500 GB (5 x 100 GB), which would not fit on a 256 GB drive. A sufficiently clever file copy operation could reproduce the clones on the target drive, but most file-copying software—including the Finder—does not do that.\u003c/p\u003e\n\n\u003cp\u003eAlso keep in mind that most backup software does not attempt to reproduce cloned files. You may need a larger disk than you think in order to hold a complete copy of your data.\u003c/p\u003e\n\n\u003c/div\u003e\n\n\u003ch3 id=\"privacy\"\u003eQ: Is there a privacy policy?\u003c/h3\u003e\n\n\n\n\u003ch3 id=\"contact\"\u003eQ: How can I get more help?\u003c/h3\u003e\n\n\u003cp\u003e\u003cb\u003eA:\u003c/b\u003e If you have any more questions, \u003ca href=\"mailto:hyperspace@hypercritical.co\"\u003econtact us\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "49 min read",
  "publishedTime": null,
  "modifiedTime": null
}
