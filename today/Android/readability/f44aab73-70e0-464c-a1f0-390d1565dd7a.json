{
  "id": "f44aab73-70e0-464c-a1f0-390d1565dd7a",
  "title": "How to run DOSBox on your Raspberry PI and turn it into a retro PC",
  "link": "https://www.xda-developers.com/dosbox-on-raspberry-pi/",
  "description": "Who's ready to bring back CGA graphics?",
  "author": "Daniel Allen",
  "published": "Mon, 25 Nov 2024 01:00:15 GMT",
  "source": "https://www.xda-developers.com/feed/",
  "categories": [
    "Single-Board Computers",
    "Raspberry Pi"
  ],
  "byline": "Daniel Allen",
  "length": 7503,
  "excerpt": "Who's ready to bring back CGA graphics?",
  "siteName": "XDA",
  "favicon": "https://www.xda-developers.com/public/build/images/favicon-240x240.43161a66.png",
  "text": "If you were lucky enough to come of age in the golden era of personal computing, you probably have fond memories of using a stack of floppy disks to install the latest game from Babbage’s on your family’s state-of-the-art 386 PC. Back then, Microsoft wasn’t the juggernaut that it is today, and Windows wasn’t an operating system, it was a program that ran on top of a more primitive operating system known as DOS. Many a PC gamer cut their teeth installing games on DOS and figuring out how to tweak their settings to make it run. But as computers have become orders of magnitude more powerful, these incredible games have been forgotten, either because they are incompatible with modern operating systems, or because they run too fast on modern computers to be played. However, thanks to an open-source project called DOSBox, you can bring the golden age of retro computing back to life. 3:06 Related You are officially old if you remember these PC parts Here are five nostalgic components that, despite making our childhood special, failed to withstand the ravages of time Installing DOSBox on your Raspberry Pi Get ready to party like it’s 1995 This is the easy part. Assuming you’re starting with a fresh install of Raspberry Pi OS (I'm running Raspberry Pi OS 32-bit Debian Bullseye on a RPi 3B+), open the terminal and run sudo apt update and sudo apt upgrade to make sure all your software is up-to-date. Once that’s finished, install DOSBox by running sudo apt install dosbox in your terminal. You’re also going to need a place to put your games and programs. You could just dump them in your home directory, but you’ll probably be happier in the long run if you keep things organized, so it’s recommended to make a new folder for your programs in your home folder. mkdir ~/dos Now that you’ve got everything set up, you can go ahead and run DOSBox by typing dosbox into your terminal. If everything so far has gone according to plan, a window with an emulated DOS CLI should pop up on your desktop. You can type exit into the terminal to close it. Related 5 Raspberry Pi projects you can wear Take your Raspberry Pi everywhere you go - literally. Installing DOS games on your Raspberry Pi Shareware is back, baby! The next order of business is to find some games. You’ll have to find them on your own, but it shouldn’t be too hard to find a shareware copy of Doom from 1995. The file you download from the internet will likely be in a .zip format, so the first thing you’ll have to do is decompress it. If you want to decompress it from the terminal, use the unzip command. unzip source_directory/file.zip -d destination_directory/ If you are installing the latest version of the original Doom shareware, your unzip command should look a lot like this: unzip ~/Downloads/doom19s.zip -d ~/dos/ Alternatively, you can unzip a file using the Raspberry Pi OS GUI. Start by moving the .zip file into the /dos directory you created earlier. Right-click on the file icon and select Extract Here. Profit. You’re almost ready to play some Doom. Playing DOS games on your Raspberry Pi I can’t wait anymore, I need to play Doom! When you start up DOSBox, you’ll notice that it defaults to drive Z. The drive Z displayed in the DOSBox emulator is virtual and isn’t connected to the filesystem on your Raspberry Pi. If you want to access your game, you’re going to have to tell DOSBox how to get to it. For that, you’ll need the mount command. When using the mount command, you’ll have to specify a letter for the virtual drive you’re going to create, and a destination in your Raspberry Pi’s filesystem that the virtual drive will link up to. It should look something like this: mount c ~/dos Once that’s done, you can hop over to the newly created C drive by typing c:. Once there, you can see that it’s mirroring your ~/dos directory by typing in the dir command. If you’re ready to play some Doom, go ahead and install it by typing install to run the install.bat file. After some initial setup, you’ll have the original Doom running on your Pi. Customizing the DOSBox settings Dial in your settings This is a good start, but you may want to tinker with the settings a bit before you call it a day and settle down for a few hours of Master of Orion. The most important thing to know is where the configuration file is. For whatever reason, DOSBox installs itself in a hidden folder in your home directory, so it’s not immediately obvious how to find it. You can access and edit the config file via the command line with the command sudo nano ~/.dosbox/dosbox-0.74-3.conf. Granted, the exact version of the config file may have changed by the time you read this, so to be sure you’re accessing the right file, you can navigate to the hidden directory first by typing cd ~/.dosbox to access the hidden directory, then type dir to see the contents. If you want to get there via the GUI, you’ll have to jump through a few hoops first. Start by opening up the file explorer. From the View drop-down menu, select Show Hidden Files. Click on the now-revealed .dosbox directory. Now you can double-click on the configuration file to edit it. So, now that you can edit the configuration file, what should you change? The first thing to do is enable full-screen mode by changing fullscreen=false to fullscreen=true. This will get rid of the small window and give you a more authentic experience. You also might need to change the cycles setting if your game is running too fast. You can either set it to a fixed number (cycles=fixed 5000 equates to 5 MIPS) or a percentage of your Pi’s max (cycles=max 50% limits DOSBox to using 50% of your CPU’s power). If you spent any time with a 286 back in the early 90s, you’ll know how important allocating memory was back in that era. By default, DOSBox allocates 16MB of memory, but if you need more, you can change it with the memsize setting (memsize=32 equates to 32MB of memory). Related 4 deciding factors to help you choose between the Raspberry Pi and other SBCs The community-favorite Raspberry Pi definitely has its perks. But so do SBCs from other manufacturers... The final bit of the config file you should definitely change is in the autoexec section. This is where the AUTOEXEC.BAT batch code is recorded. This code runs every time you start up DOSBox. Why add any code here? The biggest reason is so that you don’t have to run the mount command every time you want to play a game. Here’s how you get that done. Scroll down to the bottom of the config file and add the following lines: @ECHO OFF MOUNT C ~/DOS C: CLS This will mount your DOS drive, change the directory from Z to C, then clear the screen of all previous commands. The @ECHO OFF line sets it so those commands run invisibly. There’s a lot more you can do with the config file, so it doesn’t hurt to look at the documentation. Go back to your DOS gaming roots You are now the proud owner of a Pentium-powered Raspberry Pi! Sure, there are often lots of better ways of playing the old DOS games that got you into computers in the first place. But there’s something about tinkering with the settings and slogging through the command prompt that really scratches that nostalgic itch. If your goal is authenticity, you can augment your setup with a 3.5” disk drive and install some of the old games that have been in the back of your closet for decades.",
  "image": "https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2024/11/raspberry-pi-dosbox.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"article-body\" itemprop=\"articleBody\"\u003e\n\u003cp\u003eIf you were lucky enough to come of age in the golden era of personal computing, you probably have fond memories of using a stack of floppy disks to install the latest game from Babbage’s on your family’s state-of-the-art 386 PC. Back then, Microsoft wasn’t the juggernaut that it is today, and Windows wasn’t an operating system, it was a program that ran on top of a more primitive operating system known as DOS.\u003c/p\u003e\n\n\n\n\n\u003cp\u003eMany a PC gamer cut their teeth installing games on DOS and figuring out how to tweak their settings to make it run. But as computers have become orders of magnitude more powerful, these incredible games have been forgotten, either because they are incompatible with modern operating systems, or because they run too fast on modern computers to be played. However, thanks to an open-source \u003ca href=\"https://www.xda-developers.com/i-use-dosbox-to-play-the-games-that-first-got-me-into-gaming-and-these-10-are-my-favorite/\" target=\"_blank\"\u003eproject called DOSBox\u003c/a\u003e, you can bring the golden age of retro computing back to life.\u003c/p\u003e\n\n\u003cdiv data-include-community-rating=\"false\" id=\"efc8-4456-b924a1cc2ded\" data-nosnippet=\"\"\u003e\u003ca href=\"https://www.xda-developers.com/you-are-officially-old-remember-these-pc-parts/\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cspan\u003e3:06\u003c/span\u003e \u003c/p\u003e\u003cdiv data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/04/old-pc.jpg\" data-modal-id=\"single-image-modal\" data-modal-container-id=\"single-image-modal-container\" data-img-caption=\"\u0026#34;\u0026#34;\"\u003e\u003cfigure\u003e\u003cpicture\u003e\u003csource media=\"(min-width: 1024px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/04/old-pc.jpg?q=49\u0026amp;fit=crop\u0026amp;w=422\u0026amp;h=268\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/04/old-pc.jpg?q=49\u0026amp;fit=crop\u0026amp;w=422\u0026amp;h=268\u0026amp;dpr=2\"/\u003e\u003csource media=\"(min-width: 768px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/04/old-pc.jpg?q=49\u0026amp;fit=crop\u0026amp;w=310\u0026amp;h=220\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/04/old-pc.jpg?q=49\u0026amp;fit=crop\u0026amp;w=310\u0026amp;h=220\u0026amp;dpr=2\"/\u003e\u003csource media=\"(min-width: 481px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/04/old-pc.jpg?q=49\u0026amp;fit=crop\u0026amp;w=720\u0026amp;h=400\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/04/old-pc.jpg?q=49\u0026amp;fit=crop\u0026amp;w=720\u0026amp;h=400\u0026amp;dpr=2\"/\u003e\u003csource media=\"(min-width: 0px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/04/old-pc.jpg?q=49\u0026amp;fit=crop\u0026amp;w=432\u0026amp;h=260\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/04/old-pc.jpg?q=49\u0026amp;fit=crop\u0026amp;w=432\u0026amp;h=260\u0026amp;dpr=2\"/\u003e\u003cimg width=\"1920\" height=\"1080\" loading=\"lazy\" decoding=\"async\" alt=\"Old PC\" data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/04/old-pc.jpg\" src=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/04/old-pc.jpg\"/\u003e \u003c/picture\u003e \u003c/figure\u003e \u003c/div\u003e \u003c/div\u003e \u003c/a\u003e\u003cp\u003e\u003cspan data-field=\"label\"\u003eRelated\u003c/span\u003e\u003c/p\u003e\u003cdiv\u003e\u003ch5\u003e\u003ca href=\"https://www.xda-developers.com/you-are-officially-old-remember-these-pc-parts/\" title=\"You are officially old if you remember these PC parts\" target=\"_blank\"\u003e You are officially old if you remember these PC parts \u003c/a\u003e \u003c/h5\u003e\u003cp\u003eHere are five nostalgic components that, despite making our childhood special, failed to withstand the ravages of time\u003c/p\u003e \u003c/div\u003e \u003c/div\u003e\n\n\u003ch2 id=\"installing-dosbox-on-your-raspberry-pi\"\u003e Installing DOSBox on your Raspberry Pi \u003c/h2\u003e\n\u003ch3 id=\"get-ready-to-party-like-it-rsquo-s-1995\"\u003e Get ready to party like it’s 1995 \u003c/h3\u003e\n\u003cp\u003eThis is the easy part. Assuming you’re starting with a \u003ca href=\"https://www.xda-developers.com/program-your-raspberry-pi/\" target=\"_blank\"\u003efresh install of Raspberry Pi OS\u003c/a\u003e (I\u0026#39;m running Raspberry Pi OS 32-bit Debian Bullseye on a RPi 3B+), open the terminal and run \u003cstrong\u003esudo apt update\u003c/strong\u003e and \u003cstrong\u003esudo apt upgrade\u003c/strong\u003e to make sure all your software is up-to-date. Once that’s finished, install DOSBox by running \u003cstrong\u003esudo apt install dosbox\u003c/strong\u003e in your terminal.\u003c/p\u003e\n\n\n\n\n\u003cp\u003eYou’re also going to need a place to put your games and programs. You could just dump them in your home directory, but you’ll probably be happier in the long run if you keep things organized, so it’s recommended to make a new folder for your programs in your home folder.\u003c/p\u003e\n\n\u003cpre\u003emkdir ~/dos\u003c/pre\u003e\n\n\u003cp\u003eNow that you’ve got everything set up, you can go ahead and run DOSBox by typing \u003cstrong\u003edosbox\u003c/strong\u003e into your terminal. If everything so far has gone according to plan, a window with an emulated DOS CLI should pop up on your desktop. You can type \u003cstrong\u003eexit\u003c/strong\u003e into the terminal to close it.\u003c/p\u003e\n\n\u003cdiv data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-window.jpg\" data-modal-id=\"single-image-modal\" data-modal-container-id=\"single-image-modal-container\" data-img-caption=\"\u0026#34;\u0026#34;\"\u003e\u003cfigure\u003e\u003cpicture\u003e\u003csource media=\"(min-width: 1024px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-window.jpg?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-window.jpg?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 768px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-window.jpg?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-window.jpg?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 481px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-window.jpg?q=70\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=1\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-window.jpg?q=70\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 0px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-window.jpg?q=49\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-window.jpg?q=49\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=2\"/\u003e\u003cimg width=\"1242\" height=\"699\" loading=\"lazy\" decoding=\"async\" alt=\"DOSBox window on Raspberry Pi\" data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-window.jpg\" src=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-window.jpg\"/\u003e \u003c/picture\u003e \u003c/figure\u003e \u003c/div\u003e\n\n\n\n\n\u003cdiv data-include-community-rating=\"false\" id=\"5ac6-47e4-ade730300f7b\" data-nosnippet=\"\"\u003e\u003ca href=\"https://www.xda-developers.com/raspberry-pi-projects-wear/\"\u003e\u003cdiv data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2024/07/raspberry-pi-pico-1.jpg\" data-modal-id=\"single-image-modal\" data-modal-container-id=\"single-image-modal-container\" data-img-caption=\"\u0026#34;\u0026#34;\"\u003e\u003cfigure\u003e\u003cpicture\u003e\u003csource media=\"(min-width: 1024px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2024/07/raspberry-pi-pico-1.jpg?q=49\u0026amp;fit=crop\u0026amp;w=422\u0026amp;h=268\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2024/07/raspberry-pi-pico-1.jpg?q=49\u0026amp;fit=crop\u0026amp;w=422\u0026amp;h=268\u0026amp;dpr=2\"/\u003e\u003csource media=\"(min-width: 768px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2024/07/raspberry-pi-pico-1.jpg?q=49\u0026amp;fit=crop\u0026amp;w=310\u0026amp;h=220\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2024/07/raspberry-pi-pico-1.jpg?q=49\u0026amp;fit=crop\u0026amp;w=310\u0026amp;h=220\u0026amp;dpr=2\"/\u003e\u003csource media=\"(min-width: 481px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2024/07/raspberry-pi-pico-1.jpg?q=49\u0026amp;fit=crop\u0026amp;w=720\u0026amp;h=400\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2024/07/raspberry-pi-pico-1.jpg?q=49\u0026amp;fit=crop\u0026amp;w=720\u0026amp;h=400\u0026amp;dpr=2\"/\u003e\u003csource media=\"(min-width: 0px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2024/07/raspberry-pi-pico-1.jpg?q=49\u0026amp;fit=crop\u0026amp;w=432\u0026amp;h=260\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2024/07/raspberry-pi-pico-1.jpg?q=49\u0026amp;fit=crop\u0026amp;w=432\u0026amp;h=260\u0026amp;dpr=2\"/\u003e\u003cimg width=\"3000\" height=\"2000\" loading=\"lazy\" decoding=\"async\" alt=\"A person holding a Raspberry Pi Pico\" data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2024/07/raspberry-pi-pico-1.jpg\" src=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2024/07/raspberry-pi-pico-1.jpg\"/\u003e \u003c/picture\u003e \u003c/figure\u003e \u003c/div\u003e \u003c/a\u003e\u003cp\u003e\u003cspan data-field=\"label\"\u003eRelated\u003c/span\u003e\u003c/p\u003e\u003cdiv\u003e\u003ch5\u003e\u003ca href=\"https://www.xda-developers.com/raspberry-pi-projects-wear/\" title=\"5 Raspberry Pi projects you can wear\" target=\"_blank\"\u003e 5 Raspberry Pi projects you can wear \u003c/a\u003e \u003c/h5\u003e\u003cp\u003eTake your Raspberry Pi everywhere you go - literally.\u003c/p\u003e \u003c/div\u003e \u003c/div\u003e\n\n\n\u003ch2 id=\"installing-dos-games-on-your-raspberry-pi\"\u003e Installing DOS games on your Raspberry Pi \u003c/h2\u003e\n\u003ch3 id=\"shareware-is-back-baby\"\u003e Shareware is back, baby! \u003c/h3\u003e\n\u003cp\u003eThe next order of business is to find some games. You’ll have to find them on your own, but it shouldn’t be too hard to find a shareware copy of Doom from 1995.\u003c/p\u003e\n\n\n\n\n\u003cp\u003eThe file you download from the internet will likely be in a .zip format, so the first thing you’ll have to do is decompress it. If you want to decompress it from the terminal, use the unzip command.\u003c/p\u003e\n\n\u003cpre\u003eunzip source_directory/file.zip -d destination_directory/\u003c/pre\u003e\n\n\u003cp\u003eIf you are installing the latest version of the original Doom shareware, your unzip command should look a lot like this:\u003c/p\u003e\n\n\u003cpre\u003eunzip ~/Downloads/doom19s.zip -d ~/dos/\u003c/pre\u003e\n\n\u003cdiv data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/unzip-doom.jpg\" data-modal-id=\"single-image-modal\" data-modal-container-id=\"single-image-modal-container\" data-img-caption=\"\u0026#34;\u0026#34;\"\u003e\u003cfigure\u003e\u003cpicture\u003e\u003csource media=\"(min-width: 1024px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/unzip-doom.jpg?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/unzip-doom.jpg?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 768px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/unzip-doom.jpg?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/unzip-doom.jpg?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 481px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/unzip-doom.jpg?q=70\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=1\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/unzip-doom.jpg?q=70\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 0px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/unzip-doom.jpg?q=49\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/unzip-doom.jpg?q=49\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=2\"/\u003e\u003cimg width=\"1243\" height=\"699\" loading=\"lazy\" decoding=\"async\" alt=\"unzipping Doom shareware on Raspberry Pi\" data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/unzip-doom.jpg\" src=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/unzip-doom.jpg\"/\u003e \u003c/picture\u003e \u003c/figure\u003e \u003c/div\u003e\n\n\u003cp\u003eAlternatively, you can unzip a file using the Raspberry Pi OS GUI.\u003c/p\u003e\n\n\u003col\u003e\u003cli\u003e Start by moving the .zip file into the \u003cstrong\u003e/dos\u003c/strong\u003e directory you created earlier. \u003c/li\u003e\u003cli\u003e Right-click on the file icon and select \u003cstrong\u003eExtract Here\u003c/strong\u003e. \u003c/li\u003e\u003cli\u003e Profit. \u003c/li\u003e \u003c/ol\u003e\n\n\u003cp\u003eYou’re almost ready to play some Doom.\u003c/p\u003e\n\n\n\n\n\n\n\u003ch2 id=\"playing-dos-games-on-your-raspberry-pi\"\u003e Playing DOS games on your Raspberry Pi \u003c/h2\u003e\n\u003ch3 id=\"i-can-rsquo-t-wait-anymore-i-need-to-play-doom\"\u003e I can’t wait anymore, I need to play Doom! \u003c/h3\u003e\n\u003cp\u003eWhen you start up DOSBox, you’ll notice that it defaults to drive Z. The drive Z displayed in the DOSBox emulator is virtual and isn’t connected to the filesystem on your Raspberry Pi. If you want to access your game, you’re going to have to tell DOSBox how to get to it. For that, you’ll need the \u003cstrong\u003emount\u003c/strong\u003e command.\u003c/p\u003e\n\n\u003cp\u003eWhen using the mount command, you’ll have to specify a letter for the virtual drive you’re going to create, and a destination in your Raspberry Pi’s filesystem that the virtual drive will link up to. It should look something like this:\u003c/p\u003e\n\n\u003cpre\u003emount c ~/dos\u003c/pre\u003e\n\n\u003cdiv data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-mount.jpg\" data-modal-id=\"single-image-modal\" data-modal-container-id=\"single-image-modal-container\" data-img-caption=\"\u0026#34;\u0026#34;\"\u003e\u003cfigure\u003e\u003cpicture\u003e\u003csource media=\"(min-width: 1024px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-mount.jpg?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-mount.jpg?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 768px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-mount.jpg?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-mount.jpg?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 481px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-mount.jpg?q=70\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=1\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-mount.jpg?q=70\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 0px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-mount.jpg?q=70\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=1\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-mount.jpg?q=70\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=1\"/\u003e\u003cimg width=\"817\" height=\"459\" loading=\"lazy\" decoding=\"async\" alt=\"mounting directory in DOSBox\" data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-mount.jpg\" src=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-mount.jpg\"/\u003e \u003c/picture\u003e \u003c/figure\u003e \u003c/div\u003e\n\n\u003cp\u003eOnce that’s done, you can hop over to the newly created C drive by typing \u003cstrong\u003ec:\u003c/strong\u003e. Once there, you can see that it’s mirroring your \u003cstrong\u003e~/dos\u003c/strong\u003e directory by typing in the \u003cstrong\u003edir\u003c/strong\u003e command. If you’re ready to play some Doom, go ahead and install it by typing \u003cstrong\u003einstall\u003c/strong\u003e to run the install.bat file. After some initial setup, you’ll have the original Doom running on your Pi.\u003c/p\u003e\n\n\n\u003cdiv data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/doom-on-dosbox-on-pi.jpg\" data-modal-id=\"single-image-modal\" data-modal-container-id=\"single-image-modal-container\" data-img-caption=\"\u0026#34;\u0026#34;\"\u003e\u003cfigure\u003e\u003cpicture\u003e\u003csource media=\"(min-width: 1024px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/doom-on-dosbox-on-pi.jpg?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/doom-on-dosbox-on-pi.jpg?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 768px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/doom-on-dosbox-on-pi.jpg?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/doom-on-dosbox-on-pi.jpg?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 481px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/doom-on-dosbox-on-pi.jpg?q=70\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=1\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/doom-on-dosbox-on-pi.jpg?q=70\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 0px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/doom-on-dosbox-on-pi.jpg?q=70\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=1\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/doom-on-dosbox-on-pi.jpg?q=70\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=1\"/\u003e\u003cimg width=\"811\" height=\"456\" loading=\"lazy\" decoding=\"async\" alt=\"Doom running on DOSBox on Raspberry Pi\" data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/doom-on-dosbox-on-pi.jpg\" src=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/doom-on-dosbox-on-pi.jpg\"/\u003e \u003c/picture\u003e \u003c/figure\u003e \u003c/div\u003e\n\n\n\n\u003ch2 id=\"customizing-the-dosbox-settings\"\u003e Customizing the DOSBox settings \u003c/h2\u003e\n\u003ch3 id=\"dial-in-your-settings\"\u003e Dial in your settings \u003c/h3\u003e\n\u003cp\u003eThis is a good start, but you may want to tinker with the settings a bit before you call it a day and settle down for a few hours of Master of Orion. The most important thing to know is where the configuration file is. For whatever reason, DOSBox installs itself in a hidden folder in your home directory, so it’s not immediately obvious how to find it.\u003c/p\u003e\n\n\u003cp\u003eYou can access and edit the config file via the command line with the command \u003cstrong\u003esudo nano ~/.dosbox/dosbox-0.74-3.conf\u003c/strong\u003e. Granted, the exact version of the config file may have changed by the time you read this, so to be sure you’re accessing the right file, you can navigate to the hidden directory first by typing \u003cstrong\u003ecd ~/.dosbox\u003c/strong\u003e to access the hidden directory, then type \u003cstrong\u003edir\u003c/strong\u003e to see the contents.\u003c/p\u003e\n\n\n\n\n\u003cp\u003eIf you want to get there via the GUI, you’ll have to jump through a few hoops first.\u003c/p\u003e\n\n\u003col\u003e\u003cli\u003e Start by opening up the file explorer. \u003c/li\u003e\u003cli\u003e From the \u003cstrong\u003eView\u003c/strong\u003e drop-down menu, select \u003cstrong\u003eShow Hidden Files\u003c/strong\u003e. \u003c/li\u003e\u003cli\u003e Click on the now-revealed \u003cstrong\u003e.dosbox\u003c/strong\u003e directory. \u003c/li\u003e\u003cli\u003e Now you can double-click on the configuration file to edit it. \u003c/li\u003e \u003c/ol\u003e\n\n\u003cdiv data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-config-file.jpg\" data-modal-id=\"single-image-modal\" data-modal-container-id=\"single-image-modal-container\" data-img-caption=\"\u0026#34;\u0026#34;\"\u003e\u003cfigure\u003e\u003cpicture\u003e\u003csource media=\"(min-width: 1024px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-config-file.jpg?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-config-file.jpg?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 768px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-config-file.jpg?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-config-file.jpg?q=70\u0026amp;fit=crop\u0026amp;w=825\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 481px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-config-file.jpg?q=70\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=1\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-config-file.jpg?q=70\u0026amp;fit=crop\u0026amp;w=800\u0026amp;dpr=1\"/\u003e\u003csource media=\"(min-width: 0px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-config-file.jpg?q=49\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-config-file.jpg?q=49\u0026amp;fit=crop\u0026amp;w=500\u0026amp;dpr=2\"/\u003e\u003cimg width=\"1258\" height=\"708\" loading=\"lazy\" decoding=\"async\" alt=\"DOSBox configuration file\" data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-config-file.jpg\" src=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/2024/11/dosbox-config-file.jpg\"/\u003e \u003c/picture\u003e \u003c/figure\u003e \u003c/div\u003e\n\n\u003cp\u003eSo, now that you can edit the configuration file, what should you change? The first thing to do is enable full-screen mode by changing \u003cstrong\u003efullscreen=false\u003c/strong\u003e to \u003cstrong\u003efullscreen=true\u003c/strong\u003e. This will get rid of the small window and give you a more authentic experience.\u003c/p\u003e\n\n\u003cp\u003eYou also might need to change the \u003cstrong\u003ecycles\u003c/strong\u003e setting if your game is running too fast. You can either set it to a fixed number (\u003cstrong\u003ecycles=fixed 5000\u003c/strong\u003e equates to 5 MIPS) or a percentage of your Pi’s max (\u003cstrong\u003ecycles=max 50%\u003c/strong\u003e limits DOSBox to using 50% of your CPU’s power).\u003c/p\u003e\n\n\n\u003cp\u003eIf you spent any time with a 286 back in the early 90s, you’ll know how important allocating memory was back in that era. By default, DOSBox allocates 16MB of memory, but if you need more, you can change it with the memsize setting (\u003cstrong\u003ememsize=32\u003c/strong\u003e equates to 32MB of memory).\u003c/p\u003e\n\n\u003cdiv data-include-community-rating=\"false\" id=\"b06c-4b70-a47306515206\" data-nosnippet=\"\"\u003e\u003ca href=\"https://www.xda-developers.com/choose-between-the-raspberry-pi-and-other-sbcs/\"\u003e\u003cdiv data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2024/08/raspberry-pi-5-milk-vduo-s-mars.jpg\" data-modal-id=\"single-image-modal\" data-modal-container-id=\"single-image-modal-container\" data-img-caption=\"\u0026#34;\u0026#34;\"\u003e\u003cfigure\u003e\u003cpicture\u003e\u003csource media=\"(min-width: 1024px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2024/08/raspberry-pi-5-milk-vduo-s-mars.jpg?q=49\u0026amp;fit=crop\u0026amp;w=422\u0026amp;h=268\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2024/08/raspberry-pi-5-milk-vduo-s-mars.jpg?q=49\u0026amp;fit=crop\u0026amp;w=422\u0026amp;h=268\u0026amp;dpr=2\"/\u003e\u003csource media=\"(min-width: 768px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2024/08/raspberry-pi-5-milk-vduo-s-mars.jpg?q=49\u0026amp;fit=crop\u0026amp;w=310\u0026amp;h=220\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2024/08/raspberry-pi-5-milk-vduo-s-mars.jpg?q=49\u0026amp;fit=crop\u0026amp;w=310\u0026amp;h=220\u0026amp;dpr=2\"/\u003e\u003csource media=\"(min-width: 481px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2024/08/raspberry-pi-5-milk-vduo-s-mars.jpg?q=49\u0026amp;fit=crop\u0026amp;w=720\u0026amp;h=400\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2024/08/raspberry-pi-5-milk-vduo-s-mars.jpg?q=49\u0026amp;fit=crop\u0026amp;w=720\u0026amp;h=400\u0026amp;dpr=2\"/\u003e\u003csource media=\"(min-width: 0px)\" data-srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2024/08/raspberry-pi-5-milk-vduo-s-mars.jpg?q=49\u0026amp;fit=crop\u0026amp;w=432\u0026amp;h=260\u0026amp;dpr=2\" srcset=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2024/08/raspberry-pi-5-milk-vduo-s-mars.jpg?q=49\u0026amp;fit=crop\u0026amp;w=432\u0026amp;h=260\u0026amp;dpr=2\"/\u003e\u003cimg width=\"3840\" height=\"2160\" loading=\"lazy\" decoding=\"async\" alt=\"Raspberry Pi 5 and Zero W kept near the Milk-V Duo S and Mars SBCs\" data-img-url=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2024/08/raspberry-pi-5-milk-vduo-s-mars.jpg\" src=\"https://static1.xdaimages.com/wordpress/wp-content/uploads/wm/2024/08/raspberry-pi-5-milk-vduo-s-mars.jpg\"/\u003e \u003c/picture\u003e \u003c/figure\u003e \u003c/div\u003e \u003c/a\u003e\u003cp\u003e\u003cspan data-field=\"label\"\u003eRelated\u003c/span\u003e\u003c/p\u003e\u003cdiv\u003e\u003ch5\u003e\u003ca href=\"https://www.xda-developers.com/choose-between-the-raspberry-pi-and-other-sbcs/\" title=\"4 deciding factors to help you choose between the Raspberry Pi and other SBCs\" target=\"_blank\"\u003e 4 deciding factors to help you choose between the Raspberry Pi and other SBCs \u003c/a\u003e \u003c/h5\u003e\u003cp\u003eThe community-favorite Raspberry Pi definitely has its perks. But so do SBCs from other manufacturers...\u003c/p\u003e \u003c/div\u003e \u003c/div\u003e\n\u003cp\u003eThe final bit of the config file you should definitely change is in the autoexec section. This is where the AUTOEXEC.BAT batch code is recorded. This code runs every time you start up DOSBox. Why add any code here? The biggest reason is so that you don’t have to run the mount command every time you want to play a game. Here’s how you get that done.\u003c/p\u003e\n\n\u003cp\u003eScroll down to the bottom of the config file and add the following lines:\u003c/p\u003e\n\n\u003cul\u003e\u003cli\u003e @ECHO OFF \u003c/li\u003e\u003cli\u003e MOUNT C ~/DOS \u003c/li\u003e\u003cli\u003e C: \u003c/li\u003e\u003cli\u003e CLS \u003c/li\u003e \u003c/ul\u003e\n\n\u003cp\u003eThis will mount your DOS drive, change the directory from Z to C, then clear the screen of all previous commands. The \u003cstrong\u003e@ECHO OFF\u003c/strong\u003e line sets it so those commands run invisibly.\u003c/p\u003e\n\n\u003cp\u003eThere’s a lot more you can do with the config file, so it doesn’t hurt to \u003ca href=\"https://www.dosbox.com/wiki/Dosbox.conf\" target=\"_blank\"\u003elook at the documentation\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\n\u003ch2 id=\"go-back-to-your-dos-gaming-roots\"\u003e Go back to your DOS gaming roots \u003c/h2\u003e\n\u003cp\u003eYou are now the proud owner of a Pentium-powered Raspberry Pi! Sure, there are often lots of better ways of playing the old DOS games that got you into computers in the first place. But there’s something about tinkering with the settings and slogging through the command prompt that really scratches that nostalgic itch. If your goal is authenticity, you can augment your setup with a 3.5” disk drive and install some of the old games that have been in the back of your closet for decades.\u003c/p\u003e\n\n \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "8 min read",
  "publishedTime": "2024-11-25T01:00:15Z",
  "modifiedTime": "2024-11-25T01:00:15Z"
}
