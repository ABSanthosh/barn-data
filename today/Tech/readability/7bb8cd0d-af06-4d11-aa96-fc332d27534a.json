{
  "id": "7bb8cd0d-af06-4d11-aa96-fc332d27534a",
  "title": "Fui: C library for interacting with the framebuffer in a TTY context",
  "link": "https://github.com/martinfama/fui",
  "description": "Comments",
  "author": "",
  "published": "Thu, 08 May 2025 22:05:37 +0000",
  "source": "https://news.ycombinator.com/rss",
  "categories": null,
  "byline": "martinfama",
  "length": 1658,
  "excerpt": "framebuffer user interface. Contribute to martinfama/fui development by creating an account on GitHub.",
  "siteName": "GitHub",
  "favicon": "https://github.com/fluidicon.png",
  "text": "fui fui, standing for framebuffer user interface, is a C library for interacting with the framebuffer in a tty context. It writes directly to the framebuffer device, using a system of layers for drawing. Some stuff that it does: Draws pixel values to an arbitrary number of layers, which are then composited together and rendered to the framebuffer. Primitive drawing functions for lines, rectangles, and circles. Text rendering using a bitmap font. Event handling for keyboard and mouse input (using libevdev), with a more generic event system implemented that can be used for other events. A cheeky sound system using alsa that can play sine tones and chords for now. Installation The actual library is in fui, and can be compiled and installed with: The library can then be used by including -Lfui -l:libfui.a in your compiler flags. The library is statically linked, so you don't need to worry about shared libraries. Permissions Since both the video and input access needs root privileges, it is recommended to add the user to these groups, to avoid running any compiled program with sudo. You can do this with: sudo usermod -a -G video $USER sudo usermod -a -G input $USER You'll need to logout and log back in after this. If that doesn't work, a reboot should do it. Examples There are some (half-baked for now) examples included, in the examples folder. main.c and bodies.c kind of demonstrates most of the components of the library. In the asteroids folder we have a simple asteroids game, which uses the sound system. Also, in tests, there are a few tests implemented using cmocka. Some stuff running with fui (from main.c). Asteroids!",
  "image": "https://opengraph.githubassets.com/9b3891a6c9858f227e878d81eac1b2859fb6a0b6369ba5cd8213e3a104bdf568/martinfama/fui",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv data-hpc=\"true\"\u003e\u003carticle itemprop=\"text\"\u003e\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003efui\u003c/h2\u003e\u003ca id=\"user-content-fui\" aria-label=\"Permalink: fui\" href=\"#fui\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003efui, standing for framebuffer user interface, is a C library for interacting with the framebuffer in a tty context. It writes directly to the framebuffer device, using a system of layers for drawing. Some stuff that it does:\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eDraws pixel values to an arbitrary number of layers, which are then composited together and rendered to the framebuffer.\u003c/li\u003e\n\u003cli\u003ePrimitive drawing functions for lines, rectangles, and circles.\u003c/li\u003e\n\u003cli\u003eText rendering using a bitmap font.\u003c/li\u003e\n\u003cli\u003eEvent handling for keyboard and mouse input (using libevdev), with a more generic event system implemented that can be used for other events.\u003c/li\u003e\n\u003cli\u003eA cheeky sound system using alsa that can play sine tones and chords for now.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eInstallation\u003c/h2\u003e\u003ca id=\"user-content-installation\" aria-label=\"Permalink: Installation\" href=\"#installation\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eThe actual library is in \u003ccode\u003efui\u003c/code\u003e, and can be compiled and installed with:\u003c/p\u003e\n\n\u003cp dir=\"auto\"\u003eThe library can then be used by including \u003ccode\u003e-Lfui -l:libfui.a\u003c/code\u003e in your compiler flags. The library is statically linked, so you don\u0026#39;t need to worry about shared libraries.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003ePermissions\u003c/h2\u003e\u003ca id=\"user-content-permissions\" aria-label=\"Permalink: Permissions\" href=\"#permissions\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eSince both the video and input access needs root privileges, it is recommended to add the user to these groups, to avoid running any compiled program with sudo. You can do this with:\u003c/p\u003e\n\u003cdiv dir=\"auto\" data-snippet-clipboard-copy-content=\"sudo usermod -a -G video $USER\nsudo usermod -a -G input $USER\"\u003e\u003cpre\u003esudo usermod -a -G video \u003cspan\u003e$USER\u003c/span\u003e\nsudo usermod -a -G input \u003cspan\u003e$USER\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003eYou\u0026#39;ll need to logout and log back in after this. If that doesn\u0026#39;t work, a reboot should do it.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eExamples\u003c/h2\u003e\u003ca id=\"user-content-examples\" aria-label=\"Permalink: Examples\" href=\"#examples\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eThere are some (half-baked for now) examples included, in the \u003ccode\u003eexamples\u003c/code\u003e folder. \u003ccode\u003emain.c\u003c/code\u003e and \u003ccode\u003ebodies.c\u003c/code\u003e kind of demonstrates most of the components of the library. In the \u003ccode\u003easteroids\u003c/code\u003e folder we have a simple asteroids game, which uses the sound system. Also, in \u003ccode\u003etests\u003c/code\u003e, there are a few tests implemented using cmocka.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\n  \u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/martinfama/fui/blob/master/screenshot.png\"\u003e\u003cimg src=\"https://github.com/martinfama/fui/raw/master/screenshot.png\" alt=\"Description\" width=\"600\"/\u003e\u003c/a\u003e\n\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003cem\u003eSome stuff running with fui (from main.c).\u003c/em\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\n  \u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/martinfama/fui/blob/master/examples/asteroids/screenshot.png\"\u003e\u003cimg src=\"https://github.com/martinfama/fui/raw/master/examples/asteroids/screenshot.png\" alt=\"Description\" width=\"600\"/\u003e\u003c/a\u003e\n\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003cem\u003eAsteroids!\u003c/em\u003e\u003c/p\u003e\n\u003c/article\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": null,
  "modifiedTime": null
}
