{
  "id": "02aa21c1-dc3d-497a-ac99-a8cb7bf81c8d",
  "title": "Raspberry Pi Lidar Scanner",
  "link": "https://github.com/PiLiDAR/PiLiDAR",
  "description": "Comments",
  "author": "",
  "published": "Sat, 19 Apr 2025 18:53:32 +0000",
  "source": "https://news.ycombinator.com/rss",
  "categories": null,
  "byline": "PiLiDAR",
  "length": 9737,
  "excerpt": "Contribute to PiLiDAR/PiLiDAR development by creating an account on GitHub.",
  "siteName": "GitHub",
  "favicon": "https://github.githubassets.com/assets/apple-touch-icon-180x180-a80b8e11abe2.png",
  "text": "PiLiDAR - DIY 360° 3D Panorama Scanner WORK IN PROGRESS Core Features: LiDAR: custom serial driver for LDRobot LD06, LD19 or STL27L CRC package integrity check Hardware PWM calibrated using curve fitting 2D live visualization and export (numpy or CSV) Panorama: 6K 360° spherical map stitched from fisheye photos using Hugin Panorama photo stitcher constant camera exposure by reading EXIF data of automatic constant white balance by iterative optimization of color gains 3D Scene: assembly of 3D scenes from 2D planes based on angle and offsets sampling vertex colors from panorama Open3D visualization and export (PCD, PLY or e57) aligning multiple scenes using global registration and ICP fine-tuning Poisson Surface Meshing (very slow on Pi4, recommended to run on PC) preliminary results single scans, no registration, no post processing. klick the images to open the pointclouds in Sketchfab. Exterior Scan (colormapped Intensity) Interior Scan (Vertex Colors) Hardware Specs: LDRobot LD06, LD19 or STL27L LiDAR Raspberry Pi HQ Camera with ArduCam M12 Lens (M25156H18, p.7) Raspberry Pi 4 NEMA17 42-23 stepper with A4988 driver Power Supply: v1: 2x 18650 Batteries (7.2V) with step-down converter v2: 10.000 mAh USB Powerbank with step-up converter Rev. 1 using 2x 18650 Batteries and Buck Converter Rev. 2 using 10.000 mAh Powerbank and Boost Converter stepper driver, motor and gearbox A4988 bipolar stepper driver (tutorial) NEMA17 42x42x23 bipolar stepper (17HE08-1004S, 17 Ncm torque) 3D-printed planetary reduction gearbox (see FDM / 3D printing) LDRobot LiDAR Specs angular resolution of LD06 (left) vs. STL27L (right) LD06: sampling frequency: 4500 Hz baudrate 230400 Sales page mechanical Datasheet Protocol Description STL27L: sampling frequency: 21600 Hz baudrate 921600 datasheet wiki ROS2 driver git Scan duration: 12s initialisation 17s shooting 4x photos 1:24m scanning 0.167° x 0.18° 37s stitching, cleanup wiring Breadboard Rev. 2 LD06 / STL27L: UART Tx (yellow) PWM (white) GND (black) VCC 5V (red) Raspberry Pi: LD06 UART0 Rx: GP15 LD06 PWM0: GP18 Power Button: GP03 Scan Button: GP17 A4988 direction: GP26, step: GP19 A4988 microstepping mode: GP5, GP6, GP13 Setup Power Button (Wakeup \u0026 Shutdown) Wakeup is hardwired to Pin 3 enable gpio-shutdown echo \"dtoverlay=gpio-shutdown\" \u003e\u003e /boot/firmware/config.txt if necesessary: sudo nano /etc/systemd/logind.conf HandlePowerKey=poweroff enable i2c-GPIO for GY-521 Accelerometer GY-521 (MPU 6060): Accelerometer, Gyroscope and thermometer i2c adress: 0x68 Since GPIO3 is hardwired to the Power Button, we need to use i2c-GPIO to map custom i2c pins (tutorial). Unlike serial is not getting crossed, so we connect SDA-SDA and SCL-SCL. SDA: GPIO22 SCL: GPIO27 disable ic2_arm and enable i2c-gpio in /boot/firmware/config.txt dtparam=i2c_arm=off dtoverlay=i2c-gpio,bus=3,i2c_gpio_delay_us=1,i2c_gpio_sda=22,i2c_gpio_scl=27 search for devices on i2c bus 3: Power LED and CPU fan # CPU fan at lower temp echo \"dtoverlay=gpio-fan,gpiopin=4,temp=45000\" \u003e\u003e /boot/firmware/config.txt # Power LED Heartbeat: echo \"dtparam=pwr_led_trigger=timer\" \u003e\u003e /boot/firmware/config.txt Scan Button: register GPIO interrupt make script executable: chmod +x gpio_interrupt.py create new service for autostart sudo nano /etc/systemd/system/pilidar.service content: [Unit] Description=PiLiDAR-Button After=network.target [Service] Type=simple User=pi Environment=LG_WD=/tmp ExecStart=/usr/bin/python3 /home/pi/PiLiDAR/gpio_interrupt.py Restart=no [Install] WantedBy=multi-user.target reload daemon, enable and start service: sudo systemctl daemon-reload sudo systemctl enable pilidar.service sudo systemctl start pilidar.service check service if necessary: sudo systemctl status pilidar.service set Permission for UART on Raspberry Pi temporary solution: sudo chmod a+rw /dev/ttyS0 old solution: make it permanent by disabling password for chmod: sudo visudo pi ALL=(ALL:ALL) NOPASSWD: /usr/bin/chmod a+rw /dev/ttyS0 then execute the temporary solution from python: import subprocess command = \"sudo chmod a+rw /dev/ttyS0\" process = subprocess.Popen(command.split(), stdout=subprocess.PIPE) output, error = process.communicate() new solution: grant permissions to the serial port using udev rules (TODO: check and remove old!) forget about visudo and the subprocess call above. Open a terminal and run the following command: sudo nano /etc/udev/rules.d/50-ttyS0.rules Write the following line in the file and save it: KERNEL==\"ttyS0\",GROUP=\"dialout\",MODE=\"0660\" Run the following command to check if your user is a member of the dialout group: groups If you see dialout in the output, you are already a member of the group. If not, run the following command to add your user to the group: sudo usermod -a -G dialout pi Run the following command to reload the udev rules: sudo udevadm control --reload-rules Unplug and replug the serial device, or reboot the system, to apply the changes. Hardware PWM on Raspberry Pi enable GPIO_18 (PWM0) and GPIO_19 (PWM1) echo \"dtoverlay=pwm-2chan\" \u003e\u003e /boot/firmware/config.txt check if \"pwm_bcm2835\" now exists: Install RPi Hardware PWM library: pip install rpi-hardware-pwm Panorama Stitching install Hugin with enblend plugin sudo apt-get install hugin-tools enblend power switching the USB port using uhubctl cli tool. install: sudo apt-get install uhubctl list all available hubs and devices powering Raspberry Pi's USB-3-Ports (Hub 2) off / on sudo uhubctl -l 2 -a off sudo uhubctl -l 2 -a on jupyter over remote-ssh start jupyter for network access: jupyter notebook --ip 192.168.1.16 --no-browser PiLiDAR.ipynb FDM / 3D printing 3D model files: Housing and additional parts (obj and 3mf) in mechanical_design/v2/export. M12 to C-Mount lens adapter (thingiverse.com) NEMA17 planetary reduction gearbox (printables.com) Housing CAD model Rev. 2 FDM printing the old front panel (Rev. 1) in PETG Serial Protocol LD06 baudrate 230400, data bits 8, no parity, 1 stopbit sampling frequency 4500 Hz, scan frequency 5-13 Hz, distance 2cm - 12 meter, ambient light 30 kLux total package size: 48 Byte, big endian. starting character：Length 1 Byte, fixed value 0x54, means the beginning of data packet; Data Length: Length 1 Byte, the first three digits reserved, the last five digits represent the number of measured points in a packet, currently fixed value 12; speed：Length 2 Byte, in degrees per second; Start angle: Length: 2 Byte; unit: 0.01 degree; Data: Length 36 Byte; containing 12 data points with 3 Byte each: 2 Byte distance (unit: 1 mm), 1 Byte luminance. For white objects within 6m, the typical luminance is around 200. End Angle: Length: 2 Byte; unit: 0.01 degree； Timestamp: Length 2 Bytes in ms, recount if reaching to MAX 30000； CRC check: Length 1 Byte The Angle value of each data point is obtained by linear interpolation of the starting angle and the ending angle. The calculation method of the angle is as following: step = (end_angle – start_angle)/(len – 1) angle = start_angle + step*i len is the length of the packet, and the i value range is [0, len]. remote Open3D Visualization using Web Visualizer Plotly to display 3D pointclouds works great in Jupyter. Plotly seems to render client-sided, unlike Open3D Web Visualizer which renders host-sided and streams jpg sequences, which strains the Pi's both CPU and WIFI. Dumping Scans to USB Storage Clone the Repo and run the installer: cd /home/pi/PiLiDAR git clone https://github.com/LaserBorg/usb_dump --depth 1 cd usb_dump \u0026\u0026 chmod +x install.sh \u0026\u0026 ./install.sh \"$(pwd)\" Create the config file: echo '{\"source_directories\": [\"/home/pi/PiLiDAR/scans\"], \"target_root_directory\": null}' \u003e usbdump.json Troubleshoot USB_dump: Check the log file: to uninstall the service, run chmod +x uninstall.sh \u0026\u0026 ./uninstall.sh if the mount point is still persistend after being removed, just delete them. sudo rm -rf /media/pi/\u003cyour device name\u003e Troubleshooting Windows Serial Driver get CP210x_Universal_Windows_Driver.zip here: https://www.waveshare.com/wiki/DTOF_LIDAR_STL27L#Software_Download RPi.GPIO RuntimeError: Failed to add edge detection current bookworm version has deprecated sysfs GPIO interface removed. use LGPIO as described here: sudo apt remove python3-rpi.gpio sudo apt update sudo apt install python3-rpi-lgpio # or in an env without system packages: pip3 install rpi-lgpio LGPIO creates temp-files (issue) like \".lgd-nfy0\". gpio-interrupt.py executes 'export LG_WD=/tmp' to set it's CWD. poor performance of VS Code on Raspberry Pi disable hardware acceleration for VS Code (source) Preferences: Configure Runtime Arguments Set \"disable-hardware-acceleration\": true pye57 on Raspberry Pi there is no wheel for arm64. build requires libxerces: sudo apt install libxerces-c-dev pip install pye57 add WIFI via SSH tutorial: sudo nano /etc/wpa_supplicant/wpa_supplicant.conf # make sure country code is set: country=DE add entry to wpa_supplicant.conf sudo wpa_passphrase \"YOUR_SSID\" \"YOUR_PASSWORD\" | sudo tee -a /etc/wpa_supplicant/wpa_supplicant.conf references: inspirations LIDAR_LD06_python_loder and Lidar_LD06_for_Arduino by Inoue Minoru (\"henjin0\") ShaunPrice's StereoPi-supporting fork of BrianBock's 360-camera script (Article on Medium) another Lidar implementation in Python pyLIDAR hardware PWM using GPIOZero ICP implementations: Aeva Doppler-ICP Photogrammetry \u0026 Robotics Bonn KISS-ICP and Lidar-Visualizer 3D Demo Data for global registration, ICP, meshing etc.: BunnyMesh.ply from 20220201-data DemoICPPointClouds.zip from 20220301-data Using a MOSFET for switching: tutorial A4988 Enable, Sleep and Reset tutorial",
  "image": "https://opengraph.githubassets.com/3a8c3ee876b367a6a6f7ba2a8b080ae03314319ddd874c374c8cf91408ece3ee/PiLiDAR/PiLiDAR",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv data-hpc=\"true\"\u003e\u003carticle itemprop=\"text\"\u003e\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003ePiLiDAR - DIY 360° 3D Panorama Scanner\u003c/h2\u003e\u003ca id=\"user-content-pilidar---diy-360-3d-panorama-scanner\" aria-label=\"Permalink: PiLiDAR - DIY 360° 3D Panorama Scanner\" href=\"#pilidar---diy-360-3d-panorama-scanner\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003e\u003cem\u003eWORK IN PROGRESS\u003c/em\u003e\u003c/h2\u003e\u003ca id=\"user-content-work-in-progress\" aria-label=\"Permalink: WORK IN PROGRESS\" href=\"#work-in-progress\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eCore Features:\u003c/h2\u003e\u003ca id=\"user-content-core-features\" aria-label=\"Permalink: Core Features:\" href=\"#core-features\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003e\u003cstrong\u003eLiDAR\u003c/strong\u003e: custom serial driver for LDRobot \u003cstrong\u003eLD06\u003c/strong\u003e, \u003cstrong\u003eLD19\u003c/strong\u003e or \u003cstrong\u003eSTL27L\u003c/strong\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eCRC package integrity check\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/Pioreactor/rpi_hardware_pwm\"\u003eHardware PWM\u003c/a\u003e calibrated using curve fitting\u003c/li\u003e\n\u003cli\u003e2D live visualization and export (numpy or CSV)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003e\u003cstrong\u003ePanorama\u003c/strong\u003e: 6K 360° spherical map\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003estitched from fisheye photos using \u003ca href=\"https://hugin.sourceforge.io/\" rel=\"nofollow\"\u003e\u003cstrong\u003eHugin\u003c/strong\u003e Panorama photo stitcher\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003econstant camera exposure by reading EXIF data of automatic\u003c/li\u003e\n\u003cli\u003econstant white balance by iterative optimization of color gains\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003e\u003cstrong\u003e3D Scene\u003c/strong\u003e: assembly of 3D scenes from 2D planes based on angle and offsets\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003esampling \u003cstrong\u003evertex colors from panorama\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eOpen3D visualization and export (PCD, PLY or \u003ca href=\"https://github.com/davidcaron/pye57\"\u003ee57\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ealigning multiple scenes using \u003cstrong\u003eglobal registration\u003c/strong\u003e and \u003cstrong\u003eICP fine-tuning\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePoisson Surface Meshing\u003c/strong\u003e (very slow on Pi4, recommended to run on PC)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003epreliminary results\u003c/h2\u003e\u003ca id=\"user-content-preliminary-results\" aria-label=\"Permalink: preliminary results\" href=\"#preliminary-results\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003esingle scans, no registration, no post processing.\u003cbr/\u003e\nklick the images to open the pointclouds in Sketchfab.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ca href=\"https://sketchfab.com/models/7997b63a3cb747f99b8f161862318bec/embed?autostart=1\u0026amp;ui_animations=0\u0026amp;ui_stop=0\u0026amp;ui_inspector=0\u0026amp;ui_watermark_link=0\u0026amp;ui_watermark=0\u0026amp;ui_ar=0\u0026amp;ui_help=0\u0026amp;ui_settings=0\u0026amp;ui_vr=0\u0026amp;ui_fullscreen=0\u0026amp;ui_annotations=0\" rel=\"nofollow\"\u003e\u003cimg src=\"https://github.com/PiLiDAR/PiLiDAR/raw/main/images/exterior.jpeg\" alt=\"Exterior\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003cem\u003eExterior Scan (colormapped Intensity)\u003c/em\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ca href=\"https://sketchfab.com/models/0311c098c57b458abe3a5d3dda9fe92b/embed?autospin=0\u0026amp;autostart=1\u0026amp;ui_animations=0\u0026amp;ui_inspector=0\u0026amp;ui_watermark_link=0\u0026amp;ui_watermark=0\u0026amp;ui_ar=0\u0026amp;ui_help=0\u0026amp;ui_settings=0\u0026amp;ui_vr=0\u0026amp;ui_fullscreen=0\u0026amp;ui_annotations=0\" rel=\"nofollow\"\u003e\u003cimg src=\"https://github.com/PiLiDAR/PiLiDAR/raw/main/images/interior.jpeg\" alt=\"Interior\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003cem\u003eInterior Scan (Vertex Colors)\u003c/em\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eHardware Specs:\u003c/h2\u003e\u003ca id=\"user-content-hardware-specs\" aria-label=\"Permalink: Hardware Specs:\" href=\"#hardware-specs\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003eLDRobot LD06, LD19 or STL27L LiDAR\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003eRaspberry Pi HQ Camera with ArduCam M12 Lens \u003ca href=\"https://www.arducam.com/doc/Arducam_M12_Lens_Kit_for_Pi_HQ_Camera.pdf\" rel=\"nofollow\"\u003e(M25156H18, p.7)\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003eRaspberry Pi 4\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003eNEMA17 42-23 stepper with A4988 driver\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003ePower Supply:\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003ev1: 2x \u003cem\u003e18650\u003c/em\u003e Batteries (7.2V) with step-down converter\u003c/li\u003e\n\u003cli\u003ev2: 10.000 mAh USB Powerbank with step-up converter\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/PiLiDAR/PiLiDAR/blob/main/images/pilidar_covershot.jpg\"\u003e\u003cimg src=\"https://github.com/PiLiDAR/PiLiDAR/raw/main/images/pilidar_covershot.jpg\" alt=\"PiLiDAR v1\"/\u003e\u003c/a\u003e\n\u003cem\u003eRev. 1 using 2x 18650 Batteries and Buck Converter\u003c/em\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/PiLiDAR/PiLiDAR/blob/main/images/pilidar_covershot_v2.jpg\"\u003e\u003cimg src=\"https://github.com/PiLiDAR/PiLiDAR/raw/main/images/pilidar_covershot_v2.jpg\" alt=\"PiLiDAR v2\"/\u003e\u003c/a\u003e\n\u003cem\u003eRev. 2 using 10.000 mAh Powerbank and Boost Converter\u003c/em\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003estepper driver, motor and gearbox\u003c/h3\u003e\u003ca id=\"user-content-stepper-driver-motor-and-gearbox\" aria-label=\"Permalink: stepper driver, motor and gearbox\" href=\"#stepper-driver-motor-and-gearbox\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eA4988 bipolar stepper driver (\u003ca href=\"https://www.youtube.com/watch?v=PMS5jY7RTjo\" rel=\"nofollow\"\u003etutorial\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eNEMA17 42x42x23 bipolar stepper (\u003ca href=\"https://www.omc-stepperonline.com/e-series-nema-17-bipolar-1-8deg-17ncm-24-07oz-in-1a-42x42x23mm-4-wires-17he08-1004s\" rel=\"nofollow\"\u003e17HE08-1004S\u003c/a\u003e, 17 Ncm torque)\u003c/li\u003e\n\u003cli\u003e3D-printed planetary reduction gearbox (see \u003ca href=\"#fdm--3d-printing\"\u003eFDM / 3D printing\u003c/a\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003eLDRobot LiDAR Specs\u003c/h3\u003e\u003ca id=\"user-content-ldrobot-lidar-specs\" aria-label=\"Permalink: LDRobot LiDAR Specs\" href=\"#ldrobot-lidar-specs\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/PiLiDAR/PiLiDAR/blob/main/images/lidar_comparison.jpg\"\u003e\u003cimg src=\"https://github.com/PiLiDAR/PiLiDAR/raw/main/images/lidar_comparison.jpg\" alt=\"LD06 vs. STL27L\"/\u003e\u003c/a\u003e\n\u003cem\u003eangular resolution of LD06 (left) vs. STL27L (right)\u003c/em\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eLD06:\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003esampling frequency: 4500 Hz\u003c/li\u003e\n\u003cli\u003ebaudrate 230400\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.inno-maker.com/product/lidar-ld06/\" rel=\"nofollow\"\u003eSales page\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.inno-maker.com/wp-content/uploads/2020/11/LDROBOT_LD06_Datasheet.pdf\" rel=\"nofollow\"\u003emechanical Datasheet\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://storage.googleapis.com/mauser-public-images/prod_description_document/2021/315/8fcea7f5d479f4f4b71316d80b77ff45_096-6212_a.pdf\" rel=\"nofollow\"\u003eProtocol Description\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003eSTL27L:\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003esampling frequency: 21600 Hz\u003c/li\u003e\n\u003cli\u003ebaudrate 921600\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/May-DFRobot/DFRobot/blob/master/SEN0589_Datasheet.pdf\"\u003edatasheet\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.waveshare.com/wiki/DTOF_LIDAR_STL27L\" rel=\"nofollow\"\u003ewiki\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eROS2 driver \u003ca href=\"https://github.com/ldrobotSensorTeam/ldlidar_stl_ros2?tab=readme-ov-file#Instructions\"\u003egit\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003eScan duration:\n12s initialisation\n17s shooting 4x photos\n1:24m scanning 0.167° x 0.18°\n37s stitching, cleanup\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003ewiring\u003c/h2\u003e\u003ca id=\"user-content-wiring\" aria-label=\"Permalink: wiring\" href=\"#wiring\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/PiLiDAR/PiLiDAR/blob/main/images/pilidar_breadboard.jpg\"\u003e\u003cimg src=\"https://github.com/PiLiDAR/PiLiDAR/raw/main/images/pilidar_breadboard.jpg\" alt=\"breadboard version 2\"/\u003e\u003c/a\u003e\n\u003cem\u003eBreadboard Rev. 2\u003c/em\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003eLD06 / STL27L:\u003c/h3\u003e\u003ca id=\"user-content-ld06--stl27l\" aria-label=\"Permalink: LD06 / STL27L:\" href=\"#ld06--stl27l\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eUART Tx (yellow)\u003c/li\u003e\n\u003cli\u003ePWM (white)\u003c/li\u003e\n\u003cli\u003eGND (black)\u003c/li\u003e\n\u003cli\u003eVCC 5V (red)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003eRaspberry Pi:\u003c/h3\u003e\u003ca id=\"user-content-raspberry-pi\" aria-label=\"Permalink: Raspberry Pi:\" href=\"#raspberry-pi\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eLD06 UART0 Rx: GP15\u003c/li\u003e\n\u003cli\u003eLD06 PWM0: GP18\u003c/li\u003e\n\u003cli\u003ePower Button: GP03\u003c/li\u003e\n\u003cli\u003eScan Button: GP17\u003c/li\u003e\n\u003cli\u003eA4988 direction: GP26, step: GP19\u003c/li\u003e\n\u003cli\u003eA4988 microstepping mode: GP5, GP6, GP13\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eSetup\u003c/h2\u003e\u003ca id=\"user-content-setup\" aria-label=\"Permalink: Setup\" href=\"#setup\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003ePower Button (Wakeup \u0026amp; Shutdown)\u003c/h3\u003e\u003ca id=\"user-content-power-button-wakeup--shutdown\" aria-label=\"Permalink: Power Button (Wakeup \u0026amp; Shutdown)\" href=\"#power-button-wakeup--shutdown\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003eWakeup is hardwired to Pin 3\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003eenable gpio-shutdown\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"  echo \u0026#34;dtoverlay=gpio-shutdown\u0026#34; \u0026gt;\u0026gt; /boot/firmware/config.txt \"\u003e\u003cpre\u003e\u003ccode\u003e  echo \u0026#34;dtoverlay=gpio-shutdown\u0026#34; \u0026gt;\u0026gt; /boot/firmware/config.txt \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003eif necesessary:\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"  sudo nano /etc/systemd/logind.conf\n  HandlePowerKey=poweroff\"\u003e\u003cpre\u003e\u003ccode\u003e  sudo nano /etc/systemd/logind.conf\n  HandlePowerKey=poweroff\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003eenable i2c-GPIO for GY-521 Accelerometer\u003c/h3\u003e\u003ca id=\"user-content-enable-i2c-gpio-for-gy-521-accelerometer\" aria-label=\"Permalink: enable i2c-GPIO for GY-521 Accelerometer\" href=\"#enable-i2c-gpio-for-gy-521-accelerometer\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eGY-521 (MPU 6060): Accelerometer, Gyroscope and thermometer\u003cbr/\u003e\ni2c adress: 0x68\u003cbr/\u003e\n\u003ca target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/cf7b26631a1deb5b33cb19cdac3382494d9599a97105f380cc05b0846986a4c2/68747470733a2f2f7777772e6d616b657273686f702e64652f646f776e6c6f61642f4d5055363035302d50696e6f75742e706e67\"\u003e\u003cimg src=\"https://camo.githubusercontent.com/cf7b26631a1deb5b33cb19cdac3382494d9599a97105f380cc05b0846986a4c2/68747470733a2f2f7777772e6d616b657273686f702e64652f646f776e6c6f61642f4d5055363035302d50696e6f75742e706e67\" alt=\"GY-521\" data-canonical-src=\"https://www.makershop.de/download/MPU6050-Pinout.png\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eSince GPIO3 is hardwired to the Power Button, we need to use i2c-GPIO to map custom i2c pins (\u003ca href=\"https://www.instructables.com/Raspberry-PI-Multiple-I2c-Devices/\" rel=\"nofollow\"\u003etutorial\u003c/a\u003e). Unlike serial is not getting crossed, so we connect SDA-SDA and SCL-SCL.\u003cbr/\u003e\nSDA: GPIO22\u003cbr/\u003e\nSCL: GPIO27\u003c/p\u003e\n\u003cp dir=\"auto\"\u003edisable ic2_arm and enable i2c-gpio in /boot/firmware/config.txt\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"dtparam=i2c_arm=off\ndtoverlay=i2c-gpio,bus=3,i2c_gpio_delay_us=1,i2c_gpio_sda=22,i2c_gpio_scl=27\"\u003e\u003cpre\u003e\u003ccode\u003edtparam=i2c_arm=off\ndtoverlay=i2c-gpio,bus=3,i2c_gpio_delay_us=1,i2c_gpio_sda=22,i2c_gpio_scl=27\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003esearch for devices on i2c bus 3:\u003c/p\u003e\n\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003ePower LED and CPU fan\u003c/h3\u003e\u003ca id=\"user-content-power-led-and-cpu-fan\" aria-label=\"Permalink: Power LED and CPU fan\" href=\"#power-led-and-cpu-fan\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"# CPU fan at lower temp\necho \u0026#34;dtoverlay=gpio-fan,gpiopin=4,temp=45000\u0026#34; \u0026gt;\u0026gt; /boot/firmware/config.txt\n\n\n# Power LED Heartbeat:\necho \u0026#34;dtparam=pwr_led_trigger=timer\u0026#34; \u0026gt;\u0026gt; /boot/firmware/config.txt\"\u003e\u003cpre\u003e\u003ccode\u003e# CPU fan at lower temp\necho \u0026#34;dtoverlay=gpio-fan,gpiopin=4,temp=45000\u0026#34; \u0026gt;\u0026gt; /boot/firmware/config.txt\n\n\n# Power LED Heartbeat:\necho \u0026#34;dtparam=pwr_led_trigger=timer\u0026#34; \u0026gt;\u0026gt; /boot/firmware/config.txt\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003eScan Button: register GPIO interrupt\u003c/h3\u003e\u003ca id=\"user-content-scan-button-register-gpio-interrupt\" aria-label=\"Permalink: Scan Button: register GPIO interrupt\" href=\"#scan-button-register-gpio-interrupt\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003emake script executable:\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"chmod +x gpio_interrupt.py\"\u003e\u003cpre\u003e\u003ccode\u003echmod +x gpio_interrupt.py\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003ecreate new service for autostart\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"sudo nano /etc/systemd/system/pilidar.service\"\u003e\u003cpre\u003e\u003ccode\u003esudo nano /etc/systemd/system/pilidar.service\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003econtent:\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"[Unit]\nDescription=PiLiDAR-Button\nAfter=network.target\n\n[Service]\nType=simple\nUser=pi\nEnvironment=LG_WD=/tmp\nExecStart=/usr/bin/python3 /home/pi/PiLiDAR/gpio_interrupt.py\nRestart=no\n\n[Install]\nWantedBy=multi-user.target\"\u003e\u003cpre\u003e\u003ccode\u003e[Unit]\nDescription=PiLiDAR-Button\nAfter=network.target\n\n[Service]\nType=simple\nUser=pi\nEnvironment=LG_WD=/tmp\nExecStart=/usr/bin/python3 /home/pi/PiLiDAR/gpio_interrupt.py\nRestart=no\n\n[Install]\nWantedBy=multi-user.target\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003ereload daemon, enable and start service:\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"sudo systemctl daemon-reload\nsudo systemctl enable pilidar.service\nsudo systemctl start pilidar.service\"\u003e\u003cpre\u003e\u003ccode\u003esudo systemctl daemon-reload\nsudo systemctl enable pilidar.service\nsudo systemctl start pilidar.service\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003echeck service if necessary:\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"sudo systemctl status pilidar.service\"\u003e\u003cpre\u003e\u003ccode\u003esudo systemctl status pilidar.service\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003eset Permission for UART on Raspberry Pi\u003c/h3\u003e\u003ca id=\"user-content-set-permission-for-uart-on-raspberry-pi\" aria-label=\"Permalink: set Permission for UART on Raspberry Pi\" href=\"#set-permission-for-uart-on-raspberry-pi\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003etemporary solution:\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"sudo chmod a+rw /dev/ttyS0\"\u003e\u003cpre\u003e\u003ccode\u003esudo chmod a+rw /dev/ttyS0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003e\u003ch4 tabindex=\"-1\" dir=\"auto\"\u003eold solution: make it permanent by disabling password for chmod:\u003c/h4\u003e\u003ca id=\"user-content-old-solution-make-it-permanent-by-disabling-password-for-chmod\" aria-label=\"Permalink: old solution: make it permanent by disabling password for chmod:\" href=\"#old-solution-make-it-permanent-by-disabling-password-for-chmod\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"sudo visudo\npi ALL=(ALL:ALL) NOPASSWD: /usr/bin/chmod a+rw /dev/ttyS0\"\u003e\u003cpre\u003e\u003ccode\u003esudo visudo\npi ALL=(ALL:ALL) NOPASSWD: /usr/bin/chmod a+rw /dev/ttyS0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003ethen execute the \u003cem\u003etemporary\u003c/em\u003e solution from python:\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"import subprocess\ncommand = \u0026#34;sudo chmod a+rw /dev/ttyS0\u0026#34;\nprocess = subprocess.Popen(command.split(), stdout=subprocess.PIPE)\noutput, error = process.communicate()\"\u003e\u003cpre\u003e\u003ccode\u003eimport subprocess\ncommand = \u0026#34;sudo chmod a+rw /dev/ttyS0\u0026#34;\nprocess = subprocess.Popen(command.split(), stdout=subprocess.PIPE)\noutput, error = process.communicate()\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003e\u003ch4 tabindex=\"-1\" dir=\"auto\"\u003enew solution: grant permissions to the serial port using udev rules\u003c/h4\u003e\u003ca id=\"user-content-new-solution-grant-permissions-to-the-serial-port-using-udev-rules\" aria-label=\"Permalink: new solution: grant permissions to the serial port using udev rules\" href=\"#new-solution-grant-permissions-to-the-serial-port-using-udev-rules\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e(TODO: check and remove old!)\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eforget about \u003ccode\u003evisudo\u003c/code\u003e and the subprocess call above.\u003c/li\u003e\n\u003cli\u003eOpen a terminal and run the following command: \u003ccode\u003esudo nano /etc/udev/rules.d/50-ttyS0.rules\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eWrite the following line in the file and save it: \u003ccode\u003eKERNEL==\u0026#34;ttyS0\u0026#34;,GROUP=\u0026#34;dialout\u0026#34;,MODE=\u0026#34;0660\u0026#34;\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eRun the following command to check if your user is a member of the dialout group: \u003ccode\u003egroups\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eIf you see \u003ccode\u003edialout\u003c/code\u003e in the output, you are already a member of the group. If not, run the following command to add your user to the group: \u003ccode\u003esudo usermod -a -G dialout pi\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eRun the following command to reload the udev rules: \u003ccode\u003esudo udevadm control --reload-rules\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eUnplug and replug the serial device, or reboot the system, to apply the changes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003eHardware PWM on Raspberry Pi\u003c/h3\u003e\u003ca id=\"user-content-hardware-pwm-on-raspberry-pi\" aria-label=\"Permalink: Hardware PWM on Raspberry Pi\" href=\"#hardware-pwm-on-raspberry-pi\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eenable GPIO_18 (PWM0) and GPIO_19 (PWM1)\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"echo \u0026#34;dtoverlay=pwm-2chan\u0026#34; \u0026gt;\u0026gt; /boot/firmware/config.txt \"\u003e\u003cpre\u003e\u003ccode\u003eecho \u0026#34;dtoverlay=pwm-2chan\u0026#34; \u0026gt;\u0026gt; /boot/firmware/config.txt \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003echeck if \u0026#34;pwm_bcm2835\u0026#34; now exists:\u003c/p\u003e\n\n\u003cp dir=\"auto\"\u003eInstall \u003ca href=\"https://github.com/Pioreactor/rpi_hardware_pwm\"\u003eRPi Hardware PWM library\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"pip install rpi-hardware-pwm\"\u003e\u003cpre\u003e\u003ccode\u003epip install rpi-hardware-pwm\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003ePanorama Stitching\u003c/h3\u003e\u003ca id=\"user-content-panorama-stitching\" aria-label=\"Permalink: Panorama Stitching\" href=\"#panorama-stitching\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003einstall Hugin with enblend plugin\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"sudo apt-get install hugin-tools enblend\"\u003e\u003cpre\u003e\u003ccode\u003esudo apt-get install hugin-tools enblend\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003epower switching the USB port\u003c/h3\u003e\u003ca id=\"user-content-power-switching-the-usb-port\" aria-label=\"Permalink: power switching the USB port\" href=\"#power-switching-the-usb-port\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eusing \u003ca href=\"https://www.baeldung.com/linux/control-usb-power-supply\" rel=\"nofollow\"\u003euhubctl\u003c/a\u003e cli tool. install:\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"sudo apt-get install uhubctl\"\u003e\u003cpre\u003e\u003ccode\u003esudo apt-get install uhubctl\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003elist all available hubs and devices\u003c/p\u003e\n\n\u003cp dir=\"auto\"\u003epowering Raspberry Pi\u0026#39;s USB-3-Ports (Hub 2) off / on\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"sudo uhubctl -l 2 -a off\nsudo uhubctl -l 2 -a on\"\u003e\u003cpre\u003e\u003ccode\u003esudo uhubctl -l 2 -a off\nsudo uhubctl -l 2 -a on\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003ejupyter over remote-ssh\u003c/h3\u003e\u003ca id=\"user-content-jupyter-over-remote-ssh\" aria-label=\"Permalink: jupyter over remote-ssh\" href=\"#jupyter-over-remote-ssh\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003estart jupyter for network access:\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"jupyter notebook --ip 192.168.1.16 --no-browser PiLiDAR.ipynb\"\u003e\u003cpre\u003e\u003ccode\u003ejupyter notebook --ip 192.168.1.16 --no-browser PiLiDAR.ipynb\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eFDM / 3D printing\u003c/h2\u003e\u003ca id=\"user-content-fdm--3d-printing\" aria-label=\"Permalink: FDM / 3D printing\" href=\"#fdm--3d-printing\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003e3D model files:\u003c/h3\u003e\u003ca id=\"user-content-3d-model-files\" aria-label=\"Permalink: 3D model files:\" href=\"#3d-model-files\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003eHousing and additional parts (obj and 3mf)  in \u003ca href=\"https://github.com/PiLiDAR/PiLiDAR/blob/main/mechanical_design/v2/export\"\u003emechanical_design/v2/export\u003c/a\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003eM12 to C-Mount lens adapter (\u003ca href=\"https://www.thingiverse.com/thing:4444398\" rel=\"nofollow\"\u003ethingiverse.com\u003c/a\u003e)\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003eNEMA17 planetary reduction gearbox (\u003ca href=\"https://www.printables.com/de/model/782336-nema17-planetary-gearbox-fixed\" rel=\"nofollow\"\u003eprintables.com\u003c/a\u003e)\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/PiLiDAR/PiLiDAR/blob/main/images/CAD_v2.jpg\"\u003e\u003cimg src=\"https://github.com/PiLiDAR/PiLiDAR/raw/main/images/CAD_v2.jpg\" alt=\"CAD model\"/\u003e\u003c/a\u003e\n\u003cem\u003eHousing CAD model Rev. 2\u003c/em\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ca target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/PiLiDAR/PiLiDAR/blob/main/images/FDM.jpg\"\u003e\u003cimg src=\"https://github.com/PiLiDAR/PiLiDAR/raw/main/images/FDM.jpg\" alt=\"3D printing\"/\u003e\u003c/a\u003e\n\u003cem\u003eFDM printing the old front panel (Rev. 1) in PETG\u003c/em\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eSerial Protocol\u003c/h2\u003e\u003ca id=\"user-content-serial-protocol\" aria-label=\"Permalink: Serial Protocol\" href=\"#serial-protocol\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003eLD06\u003c/h3\u003e\u003ca id=\"user-content-ld06\" aria-label=\"Permalink: LD06\" href=\"#ld06\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003ebaudrate 230400, data bits 8, no parity, 1 stopbit\u003cbr/\u003e\nsampling frequency 4500 Hz, scan frequency 5-13 Hz, distance 2cm - 12 meter, ambient light 30 kLux\u003c/p\u003e\n\u003cp dir=\"auto\"\u003etotal package size: 48 Byte, big endian.\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003estarting character：Length 1 Byte, fixed value 0x54, means the beginning of data packet;\u003c/li\u003e\n\u003cli\u003eData Length: Length 1 Byte, the first three digits reserved, the last five digits represent the number of measured points in a packet, currently fixed value 12;\u003c/li\u003e\n\u003cli\u003espeed：Length 2 Byte, in degrees per second;\u003c/li\u003e\n\u003cli\u003eStart angle: Length: 2 Byte; unit: 0.01 degree;\u003c/li\u003e\n\u003cli\u003eData: Length 36 Byte; containing 12 data points with 3 Byte each: 2 Byte distance (unit: 1 mm), 1 Byte luminance. For white objects within 6m, the typical luminance is around 200.\u003c/li\u003e\n\u003cli\u003eEnd Angle: Length: 2 Byte; unit: 0.01 degree；\u003c/li\u003e\n\u003cli\u003eTimestamp: Length 2 Bytes in ms, recount if reaching to MAX 30000；\u003c/li\u003e\n\u003cli\u003eCRC check: Length 1 Byte\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003eThe Angle value of each data point is obtained by linear interpolation of the starting angle and the ending angle.\u003cbr/\u003e\nThe calculation method of the angle is as following:\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"step = (end_angle – start_angle)/(len – 1)  \nangle = start_angle + step*i  \"\u003e\u003cpre\u003e\u003ccode\u003estep = (end_angle – start_angle)/(len – 1)  \nangle = start_angle + step*i  \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003elen is the length of the packet, and the i value range is [0, len].\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eremote Open3D Visualization\u003c/h2\u003e\u003ca id=\"user-content-remote-open3d-visualization\" aria-label=\"Permalink: remote Open3D Visualization\" href=\"#remote-open3d-visualization\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eusing \u003cdel\u003e\u003ca href=\"https://www.open3d.org/docs/release/tutorial/visualization/web_visualizer.html\" rel=\"nofollow\"\u003e\u003cem\u003eWeb Visualizer\u003c/em\u003e\u003c/a\u003e\u003c/del\u003e \u003ca href=\"https://plotly.com/python/\" rel=\"nofollow\"\u003ePlotly\u003c/a\u003e to display 3D pointclouds works great in Jupyter.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003ePlotly seems to render client-sided, unlike Open3D Web Visualizer which renders host-sided and streams jpg sequences, which strains the Pi\u0026#39;s both CPU and WIFI.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eDumping Scans to USB Storage\u003c/h2\u003e\u003ca id=\"user-content-dumping-scans-to-usb-storage\" aria-label=\"Permalink: Dumping Scans to USB Storage\" href=\"#dumping-scans-to-usb-storage\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003col dir=\"auto\"\u003e\n\u003cli\u003eClone the Repo and run the installer:\n\u003cdiv data-snippet-clipboard-copy-content=\"cd /home/pi/PiLiDAR\ngit clone https://github.com/LaserBorg/usb_dump --depth 1\ncd usb_dump \u0026amp;\u0026amp; chmod +x install.sh \u0026amp;\u0026amp; ./install.sh \u0026#34;$(pwd)\u0026#34;\"\u003e\u003cpre\u003e\u003ccode\u003ecd /home/pi/PiLiDAR\ngit clone https://github.com/LaserBorg/usb_dump --depth 1\ncd usb_dump \u0026amp;\u0026amp; chmod +x install.sh \u0026amp;\u0026amp; ./install.sh \u0026#34;$(pwd)\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/li\u003e\n\u003cli\u003eCreate the config file:\n\u003cdiv data-snippet-clipboard-copy-content=\"echo \u0026#39;{\u0026#34;source_directories\u0026#34;: [\u0026#34;/home/pi/PiLiDAR/scans\u0026#34;], \u0026#34;target_root_directory\u0026#34;: null}\u0026#39; \u0026gt; usbdump.json\"\u003e\u003cpre\u003e\u003ccode\u003eecho \u0026#39;{\u0026#34;source_directories\u0026#34;: [\u0026#34;/home/pi/PiLiDAR/scans\u0026#34;], \u0026#34;target_root_directory\u0026#34;: null}\u0026#39; \u0026gt; usbdump.json\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003eTroubleshoot USB_dump:\u003c/h3\u003e\u003ca id=\"user-content-troubleshoot-usb_dump\" aria-label=\"Permalink: Troubleshoot USB_dump:\" href=\"#troubleshoot-usb_dump\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003eCheck the log file:\u003c/p\u003e\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003eto uninstall the service, run\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"chmod +x uninstall.sh \u0026amp;\u0026amp; ./uninstall.sh\"\u003e\u003cpre\u003e\u003ccode\u003echmod +x uninstall.sh \u0026amp;\u0026amp; ./uninstall.sh\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003eif the mount point is still persistend after being removed, just delete them.\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"sudo rm -rf /media/pi/\u0026lt;your device name\u0026gt;\"\u003e\u003cpre\u003e\u003ccode\u003esudo rm -rf /media/pi/\u0026lt;your device name\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eTroubleshooting\u003c/h2\u003e\u003ca id=\"user-content-troubleshooting\" aria-label=\"Permalink: Troubleshooting\" href=\"#troubleshooting\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003eWindows Serial Driver\u003c/h3\u003e\u003ca id=\"user-content-windows-serial-driver\" aria-label=\"Permalink: Windows Serial Driver\" href=\"#windows-serial-driver\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eget \u003ca href=\"https://files.waveshare.com/upload/6/63/CP210x_Universal_Windows_Driver.zip\" rel=\"nofollow\"\u003eCP210x_Universal_Windows_Driver.zip\u003c/a\u003e here:\u003cbr/\u003e\n\u003ca href=\"https://www.waveshare.com/wiki/DTOF_LIDAR_STL27L#Software_Download\" rel=\"nofollow\"\u003ehttps://www.waveshare.com/wiki/DTOF_LIDAR_STL27L#Software_Download\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003eRPi.GPIO RuntimeError: Failed to add edge detection\u003c/h3\u003e\u003ca id=\"user-content-rpigpio-runtimeerror-failed-to-add-edge-detection\" aria-label=\"Permalink: RPi.GPIO RuntimeError: Failed to add edge detection\" href=\"#rpigpio-runtimeerror-failed-to-add-edge-detection\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003ecurrent bookworm version has deprecated sysfs GPIO interface removed.\u003cbr/\u003e\nuse \u003ca href=\"https://pypi.org/project/rpi-lgpio/\" rel=\"nofollow\"\u003eLGPIO\u003c/a\u003e as described \u003ca href=\"https://raspberrypi.stackexchange.com/questions/147332/rpi-gpio-runtimeerror-failed-to-add-edge-detection\" rel=\"nofollow\"\u003ehere\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"sudo apt remove python3-rpi.gpio\nsudo apt update\n\nsudo apt install python3-rpi-lgpio\n\n# or in an env without system packages:\npip3 install rpi-lgpio\"\u003e\u003cpre\u003e\u003ccode\u003esudo apt remove python3-rpi.gpio\nsudo apt update\n\nsudo apt install python3-rpi-lgpio\n\n# or in an env without system packages:\npip3 install rpi-lgpio\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003eLGPIO creates temp-files (\u003ca href=\"https://github.com/joan2937/lg/issues/12\" data-hovercard-type=\"issue\" data-hovercard-url=\"/joan2937/lg/issues/12/hovercard\"\u003eissue\u003c/a\u003e) like \u0026#34;.lgd-nfy0\u0026#34;. gpio-interrupt.py executes \u0026#39;export LG_WD=/tmp\u0026#39; to set it\u0026#39;s CWD.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003epoor performance of VS Code on Raspberry Pi\u003c/h3\u003e\u003ca id=\"user-content-poor-performance-of-vs-code-on-raspberry-pi\" aria-label=\"Permalink: poor performance of VS Code on Raspberry Pi\" href=\"#poor-performance-of-vs-code-on-raspberry-pi\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003edisable hardware acceleration for VS Code (\u003ca href=\"https://code.visualstudio.com/docs/setup/raspberry-pi\" rel=\"nofollow\"\u003esource\u003c/a\u003e)\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"Preferences: Configure Runtime Arguments  \nSet \u0026#34;disable-hardware-acceleration\u0026#34;: true\"\u003e\u003cpre\u003e\u003ccode\u003ePreferences: Configure Runtime Arguments  \nSet \u0026#34;disable-hardware-acceleration\u0026#34;: true\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003epye57 on Raspberry Pi\u003c/h3\u003e\u003ca id=\"user-content-pye57-on-raspberry-pi\" aria-label=\"Permalink: pye57 on Raspberry Pi\" href=\"#pye57-on-raspberry-pi\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003ethere is no wheel for arm64. build requires libxerces:\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"sudo apt install libxerces-c-dev\npip install pye57\"\u003e\u003cpre\u003e\u003ccode\u003esudo apt install libxerces-c-dev\npip install pye57\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" dir=\"auto\"\u003eadd WIFI via SSH\u003c/h3\u003e\u003ca id=\"user-content-add-wifi-via-ssh\" aria-label=\"Permalink: add WIFI via SSH\" href=\"#add-wifi-via-ssh\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ca href=\"https://u-labs.de/portal/raspberry-pi-wlan-verbindung-nachtraeglich-einrichten-oder-aendern-so-geht-es-grafisch-konsole/\" rel=\"nofollow\"\u003etutorial\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"sudo nano /etc/wpa_supplicant/wpa_supplicant.conf\n\n# make sure country code is set:\ncountry=DE\"\u003e\u003cpre\u003e\u003ccode\u003esudo nano /etc/wpa_supplicant/wpa_supplicant.conf\n\n# make sure country code is set:\ncountry=DE\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003eadd entry to wpa_supplicant.conf\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"sudo wpa_passphrase \u0026#34;YOUR_SSID\u0026#34; \u0026#34;YOUR_PASSWORD\u0026#34; | sudo tee -a /etc/wpa_supplicant/wpa_supplicant.conf\"\u003e\u003cpre\u003e\u003ccode\u003esudo wpa_passphrase \u0026#34;YOUR_SSID\u0026#34; \u0026#34;YOUR_PASSWORD\u0026#34; | sudo tee -a /etc/wpa_supplicant/wpa_supplicant.conf\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003ereferences:\u003c/h2\u003e\u003ca id=\"user-content-references\" aria-label=\"Permalink: references:\" href=\"#references\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003einspirations\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/henjin0/LIDAR_LD06_python_loder\"\u003eLIDAR_LD06_python_loder\u003c/a\u003e and \u003ca href=\"https://github.com/henjin0/Lidar_LD06_for_Arduino\"\u003eLidar_LD06_for_Arduino\u003c/a\u003e by Inoue Minoru (\u0026#34;\u003ca href=\"https://github.com/henjin0\"\u003ehenjin0\u003c/a\u003e\u0026#34;)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/ShaunPrice/360-camera\"\u003eShaunPrice\u0026#39;s\u003c/a\u003e StereoPi-supporting fork of \u003ca href=\"https://github.com/BrianBock/360-camera\"\u003eBrianBock\u0026#39;s\u003c/a\u003e 360-camera script (Article on \u003ca href=\"https://medium.com/stereopi/stitching-360-panorama-with-raspberry-pi-cm3-stereopi-and-two-fisheye-cameras-step-by-step-guide-aeca3ff35871\" rel=\"nofollow\"\u003eMedium\u003c/a\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003eanother Lidar implementation in Python\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/Paradoxdruid/pyLIDAR\"\u003epyLIDAR\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003ehardware PWM using \u003ca href=\"https://gpiozero.readthedocs.io/en/stable/migrating_from_rpigpio.html#pwm-pulse-width-modulation\" rel=\"nofollow\"\u003eGPIOZero\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eICP implementations:\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eAeva \u003ca href=\"https://github.com/aevainc/Doppler-ICP/blob/main/README.md\"\u003eDoppler-ICP\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ePhotogrammetry \u0026amp; Robotics Bonn \u003ca href=\"https://github.com/PRBonn/kiss-icp\"\u003eKISS-ICP\u003c/a\u003e and \u003ca href=\"https://github.com/PRBonn/lidar-visualizer\"\u003eLidar-Visualizer\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e3D Demo Data for global registration, ICP, meshing etc.:\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/isl-org/open3d_downloads/releases/download/20220201-data/BunnyMesh.ply\"\u003eBunnyMesh.ply\u003c/a\u003e from \u003ca href=\"https://github.com/isl-org/open3d_downloads/releases/tag/20220201-data\"\u003e20220201-data\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/isl-org/open3d_downloads/releases/download/20220301-data/DemoICPPointClouds.zip\"\u003eDemoICPPointClouds.zip\u003c/a\u003e from \u003ca href=\"https://github.com/isl-org/open3d_downloads/releases/tag/20220301-data\"\u003e20220301-data\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003eUsing a MOSFET for switching: \u003ca href=\"https://elinux.org/RPi_GPIO_Interface_Circuits#Using_a_FET\" rel=\"nofollow\"\u003etutorial\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eA4988 Enable, Sleep and Reset \u003ca href=\"https://www.youtube.com/watch?v=PMS5jY7RTjo\" rel=\"nofollow\"\u003etutorial\u003c/a\u003e\u003c/p\u003e\n\u003c/article\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "11 min read",
  "publishedTime": null,
  "modifiedTime": null
}
