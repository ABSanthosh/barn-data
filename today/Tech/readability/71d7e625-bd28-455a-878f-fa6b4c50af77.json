{
  "id": "71d7e625-bd28-455a-878f-fa6b4c50af77",
  "title": "Ntfs2btrfs does in-place conversion of NTFS filesystem to the open-source Btrfs",
  "link": "https://github.com/maharmstone/ntfs2btrfs",
  "description": "Comments",
  "author": "",
  "published": "Sat, 30 Nov 2024 20:50:08 +0000",
  "source": "https://news.ycombinator.com/rss",
  "categories": null,
  "byline": "maharmstone",
  "length": 3896,
  "excerpt": "Contribute to maharmstone/ntfs2btrfs development by creating an account on GitHub.",
  "siteName": "GitHub",
  "favicon": "https://github.com/fluidicon.png",
  "text": "Ntfs2btrfs Ntfs2btrfs is a tool which does in-place conversion of Microsoft's NTFS filesystem to the open-source filesystem Btrfs, much as btrfs-convert does for ext2. The original image is saved as a reflink copy at image/ntfs.img, and if you want to keep the conversion you can delete this to free up space. Although I believe this tool to be stable, please note that I take no responsibility if something goes awry! You're probably also interested in WinBtrfs, which is a Btrfs filesystem driver for Windows. Thanks to Eric Biggers, who successfully reverse-engineered Windows 10's \"WOF compressed data\", and whose code I've used here. Usage On Windows, from an Administrator command prompt: ntfs2btrfs.exe D:\\ Bear in mind that it won't work with your boot drive or a drive containing a pagefile that's currently in use. If you are using WinBtrfs, you will need to clear the readonly flag on the image subvolume before you can delete it. On Linux, as root: ntfs2btrfs /dev/sda1 Installation On Windows, go to the Releases page and download the latest Zip file, or use Scoop. For Linux: Arch Fedora (thanks to Conan-Kudo) Gentoo - available as sys-fs/ntfs2btrfs in the guru repository Debian (thanks to alexmyczko) Ubuntu (thanks to alexmyczko) openSUSE (thanks to David Sterba) For other distributions or operating systems, you will need to compile it yourself - see below. Changelog 20240115 Fixed compilation on GCC 14 (-Werror=incompatible-pointer-types now enabled by default) 20230501 Fixed inline extent items being written out of order (not diagnosed by btrfs check) Fixed metadata items being written with wrong level value (not diagnosed by btrfs check) ADSes with overly-long names now get skipped 20220812 Added --no-datasum option, to skip calculating checksums LXSS / WSL metadata is now preserved Fixed lowercase drive letters not being recognized Fixed crash due to iterator invalidation (thanks to nyanpasu64) Fixed corruption when NTFS places file in last megabyte of disk 20210923 Added (Btrfs) compression support (zlib, lzo, and zstd) Added support for other hash algorithms: xxhash, sha256, and blake2 Added support for rolling back to NTFS Added support for NT4-style security descriptors Increased conversion speed for volume with many inodes Fixed bug when fragmented file was in superblock location Fixed buffer overflow when reading security descriptors Fixed bug where filesystems would be corrupted in a way that btrfs check doesn't pick up 20210523 Improved handling of large compressed files 20210402 (source code only release) Fixes for compilation on non-amd64 architectures 20210105 Added support for NTFS compression Added support for \"WOF compressed data\" Fixed problems caused by sparse files Miscellaneous bug fixes 20201108 Improved error handling Added better message if NTFS is corrupted or unclean Better handling of relocations 20200330 Initial release Compilation On Windows, open the source directory in a recent version of MSVC, right-click on CMakeLists.txt, and click Compile. On Linux: mkdir build cd build cmake .. make You'll also need libfmt installed - it should be in your package manager. Compression support requires zlib, lzo, and/or zstd - again, they will be in your package manager. See also the cmake options WITH_ZLIB, WITH_LZO, and WITH_ZSTD, if you want to disable this. What works Files Directories Symlinks Other reparse points Security descriptors Alternate data streams DOS attributes (hidden, system, etc.) Rollback to original NTFS image Preservation of LXSS metadata What doesn't work Windows' old extended attributes (you're not using these) Large (i.e \u003e16KB) ADSes (you're not using these either) Preservation of the case-sensitivity flag Unusual cluster sizes (i.e. not 4 KB) Encrypted files Can I boot Windows from Btrfs with this? Yes, if the stars are right. See Quibble.",
  "image": "https://opengraph.githubassets.com/4c8bede0c7465a2cdab2c4261d3702d0e2ebab379397fd6d95601acba65da092/maharmstone/ntfs2btrfs",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv data-hpc=\"true\"\u003e\u003carticle itemprop=\"text\"\u003e\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eNtfs2btrfs\u003c/h2\u003e\u003ca id=\"user-content-ntfs2btrfs\" aria-label=\"Permalink: Ntfs2btrfs\" href=\"#ntfs2btrfs\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eNtfs2btrfs is a tool which does in-place conversion of Microsoft\u0026#39;s NTFS\nfilesystem to the open-source filesystem Btrfs, much as \u003ccode\u003ebtrfs-convert\u003c/code\u003e\ndoes for ext2. The original image is saved as a reflink copy at\n\u003ccode\u003eimage/ntfs.img\u003c/code\u003e, and if you want to keep the conversion you can delete\nthis to free up space.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eAlthough I believe this tool to be stable, please note that I take no\nresponsibility if something goes awry!\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eYou\u0026#39;re probably also interested in \u003ca href=\"https://github.com/maharmstone/btrfs\"\u003eWinBtrfs\u003c/a\u003e,\nwhich is a Btrfs filesystem driver for Windows.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eThanks to \u003ca href=\"https://github.com/ebiggers\"\u003eEric Biggers\u003c/a\u003e, who \u003ca href=\"https://github.com/ebiggers/ntfs-3g-system-compression/\"\u003esuccessfully reverse-engineered\u003c/a\u003e Windows 10\u0026#39;s\n\u0026#34;WOF compressed data\u0026#34;, and whose code I\u0026#39;ve used here.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eUsage\u003c/h2\u003e\u003ca id=\"user-content-usage\" aria-label=\"Permalink: Usage\" href=\"#usage\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eOn Windows, from an Administrator command prompt:\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ccode\u003entfs2btrfs.exe D:\\\u003c/code\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eBear in mind that it won\u0026#39;t work with your boot drive or a drive containing a\npagefile that\u0026#39;s currently in use.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eIf you are using WinBtrfs, you will need to clear the readonly flag on the\n\u003ccode\u003eimage\u003c/code\u003e subvolume before you can delete it.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eOn Linux, as root:\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ccode\u003entfs2btrfs /dev/sda1\u003c/code\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eInstallation\u003c/h2\u003e\u003ca id=\"user-content-installation\" aria-label=\"Permalink: Installation\" href=\"#installation\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eOn Windows, go to the \u003ca href=\"https://github.com/maharmstone/ntfs2btrfs/releases\"\u003eReleases page\u003c/a\u003e and\ndownload the latest Zip file, or use \u003ca href=\"https://github.com/ScoopInstaller/Main/blob/master/bucket/ntfs2btrfs.json\"\u003eScoop\u003c/a\u003e.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eFor Linux:\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003e\u003ca href=\"https://aur.archlinux.org/packages/ntfs2btrfs\" rel=\"nofollow\"\u003eArch\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://src.fedoraproject.org/rpms/ntfs2btrfs\" rel=\"nofollow\"\u003eFedora\u003c/a\u003e (thanks to \u003ca href=\"https://github.com/Conan-Kudo\"\u003eConan-Kudo\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eGentoo - available as sys-fs/ntfs2btrfs in the guru repository\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://packages.debian.org/ntfs2btrfs\" rel=\"nofollow\"\u003eDebian\u003c/a\u003e (thanks to \u003ca href=\"https://github.com/alexmyczko\"\u003ealexmyczko\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://packages.ubuntu.com/ntfs2btrfs\" rel=\"nofollow\"\u003eUbuntu\u003c/a\u003e (thanks to \u003ca href=\"https://github.com/alexmyczko\"\u003ealexmyczko\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://build.opensuse.org/package/show/filesystems/ntfs2btrfs\" rel=\"nofollow\"\u003eopenSUSE\u003c/a\u003e (thanks to David Sterba)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003eFor other distributions or operating systems, you will need to compile it yourself - see\nbelow.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eChangelog\u003c/h2\u003e\u003ca id=\"user-content-changelog\" aria-label=\"Permalink: Changelog\" href=\"#changelog\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003e20240115\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eFixed compilation on GCC 14 (\u003ccode\u003e-Werror=incompatible-pointer-types\u003c/code\u003e now enabled by default)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003e20230501\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eFixed inline extent items being written out of order (not diagnosed by \u003ccode\u003ebtrfs check\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003eFixed metadata items being written with wrong level value (not diagnosed by \u003ccode\u003ebtrfs check\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003eADSes with overly-long names now get skipped\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003e20220812\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eAdded --no-datasum option, to skip calculating checksums\u003c/li\u003e\n\u003cli\u003eLXSS / WSL metadata is now preserved\u003c/li\u003e\n\u003cli\u003eFixed lowercase drive letters not being recognized\u003c/li\u003e\n\u003cli\u003eFixed crash due to iterator invalidation (thanks to nyanpasu64)\u003c/li\u003e\n\u003cli\u003eFixed corruption when NTFS places file in last megabyte of disk\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003e20210923\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eAdded (Btrfs) compression support (zlib, lzo, and zstd)\u003c/li\u003e\n\u003cli\u003eAdded support for other hash algorithms: xxhash, sha256, and blake2\u003c/li\u003e\n\u003cli\u003eAdded support for rolling back to NTFS\u003c/li\u003e\n\u003cli\u003eAdded support for NT4-style security descriptors\u003c/li\u003e\n\u003cli\u003eIncreased conversion speed for volume with many inodes\u003c/li\u003e\n\u003cli\u003eFixed bug when fragmented file was in superblock location\u003c/li\u003e\n\u003cli\u003eFixed buffer overflow when reading security descriptors\u003c/li\u003e\n\u003cli\u003eFixed bug where filesystems would be corrupted in a way that \u003ccode\u003ebtrfs check\u003c/code\u003e doesn\u0026#39;t pick up\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003e20210523\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eImproved handling of large compressed files\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003e20210402 (source code only release)\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eFixes for compilation on non-amd64 architectures\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003e20210105\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eAdded support for NTFS compression\u003c/li\u003e\n\u003cli\u003eAdded support for \u0026#34;WOF compressed data\u0026#34;\u003c/li\u003e\n\u003cli\u003eFixed problems caused by sparse files\u003c/li\u003e\n\u003cli\u003eMiscellaneous bug fixes\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003e20201108\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eImproved error handling\u003c/li\u003e\n\u003cli\u003eAdded better message if NTFS is corrupted or unclean\u003c/li\u003e\n\u003cli\u003eBetter handling of relocations\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp dir=\"auto\"\u003e20200330\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eInitial release\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eCompilation\u003c/h2\u003e\u003ca id=\"user-content-compilation\" aria-label=\"Permalink: Compilation\" href=\"#compilation\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eOn Windows, open the source directory in a recent version of MSVC, right-click\non CMakeLists.txt, and click Compile.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eOn Linux:\u003c/p\u003e\n\u003cdiv data-snippet-clipboard-copy-content=\"mkdir build\ncd build\ncmake ..\nmake\"\u003e\u003cpre\u003e\u003ccode\u003emkdir build\ncd build\ncmake ..\nmake\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003eYou\u0026#39;ll also need \u003ca href=\"https://github.com/fmtlib/fmt\"\u003elibfmt\u003c/a\u003e installed - it should be\nin your package manager.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eCompression support requires zlib, lzo, and/or zstd - again, they will be in your\npackage manager. See also the cmake options WITH_ZLIB, WITH_LZO, and WITH_ZSTD,\nif you want to disable this.\u003c/p\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eWhat works\u003c/h2\u003e\u003ca id=\"user-content-what-works\" aria-label=\"Permalink: What works\" href=\"#what-works\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eFiles\u003c/li\u003e\n\u003cli\u003eDirectories\u003c/li\u003e\n\u003cli\u003eSymlinks\u003c/li\u003e\n\u003cli\u003eOther reparse points\u003c/li\u003e\n\u003cli\u003eSecurity descriptors\u003c/li\u003e\n\u003cli\u003eAlternate data streams\u003c/li\u003e\n\u003cli\u003eDOS attributes (hidden, system, etc.)\u003c/li\u003e\n\u003cli\u003eRollback to original NTFS image\u003c/li\u003e\n\u003cli\u003ePreservation of LXSS metadata\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eWhat doesn\u0026#39;t work\u003c/h2\u003e\u003ca id=\"user-content-what-doesnt-work\" aria-label=\"Permalink: What doesn\u0026#39;t work\" href=\"#what-doesnt-work\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003eWindows\u0026#39; old extended attributes (you\u0026#39;re not using these)\u003c/li\u003e\n\u003cli\u003eLarge (i.e \u0026gt;16KB) ADSes (you\u0026#39;re not using these either)\u003c/li\u003e\n\u003cli\u003ePreservation of the case-sensitivity flag\u003c/li\u003e\n\u003cli\u003eUnusual cluster sizes (i.e. not 4 KB)\u003c/li\u003e\n\u003cli\u003eEncrypted files\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" dir=\"auto\"\u003eCan I boot Windows from Btrfs with this?\u003c/h2\u003e\u003ca id=\"user-content-can-i-boot-windows-from-btrfs-with-this\" aria-label=\"Permalink: Can I boot Windows from Btrfs with this?\" href=\"#can-i-boot-windows-from-btrfs-with-this\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eYes, if the stars are right. See \u003ca href=\"https://github.com/maharmstone/quibble\"\u003eQuibble\u003c/a\u003e.\u003c/p\u003e\n\u003c/article\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": null,
  "modifiedTime": null
}
