{
  "id": "56950008-d514-45cd-9cf4-130abd3d73bd",
  "title": "Launch HN: Codebuff (YC F24) – CLI tool that writes code for you",
  "link": "https://news.ycombinator.com/item?id=42078536",
  "description": "Comments",
  "author": "",
  "published": "Thu, 07 Nov 2024 17:06:28 +0000",
  "source": "https://news.ycombinator.com/rss",
  "categories": null,
  "byline": "",
  "length": 6335,
  "excerpt": "Hey HN! We’re James and Brandon building Codebuff (https://codebuff.com). Codebuff is like Cursor Composer, but in your terminal: it modifies files based on your natural language requests. You can try it with `npm i -g codebuff` and start using it immediately for free. We have no login gate, and we give all accounts up to $20 worth of credits.",
  "siteName": "",
  "favicon": "",
  "text": "Launch HN: Codebuff (YC F24) – CLI tool that writes code for you 185 points by jahooma 7 hours ago | hide | past | favorite | 155 comments Hey HN! We’re James and Brandon building Codebuff (https://codebuff.com). Codebuff is like Cursor Composer, but in your terminal: it modifies files based on your natural language requests. You can try it with `npm i -g codebuff` and start using it immediately for free. We have no login gate, and we give all accounts up to $20 worth of credits.Codebuff is different because we simplified the input to one step: you type what you want done in your terminal and hit enter. Then Codebuff looks through your whole codebase and makes the edits it wants, to existing source files or new ones. It also can run your tests, the type checker, or install packages to fulfill your request.Demo video: https://www.youtube.com/watch?v=dQ0NOMsu0dAIt all started at a hackathon. I was trying out Sonnet 3.5 which had recently come out and seeing if I could use it to write code. The script I cobbled together that day pulled codebase context in one step and used it to rewrite files with changes in the second step. This two step process still exists today. Incidentally, my hackathon script worked rather poorly and my demo failed to produce any useful code.But that weekend I thought about the kind of errors it made, and realized that with more context on our codebase, it might have been able to get the change right. For example, it tried to create an endpoint on our server (at my previous startup), but it didn't know that you needed to edit 3 specific files to do this (yeah... our backend was not that clean). So I hand-wrote a guide to our codebase, like I was instructing a new hire. I put it in a markdown file and passed it into Sonnet 3.5's system prompt. And the crazy thing is that it started producing wayyy better code. So, I started getting excited. In fact, this code guide idea still exists in Codebuff today as knowledge.md files which are automatically read on every request.I didn't think of this project as a startup idea at first. I thought it was just a simple script anyone could write. But after another week, I could see there were more problems to solve and it should be a product.In the week between applying to YC and the interview, I could not get Codebuff to edit files consistently. I tried many prompting strategies to get it to replace strings in the original file, but nothing worked reliably. How could I face my interviewer if I could not get something basic like this to work? On the day before my interview, in a Hail Mary attempt, I fine-tuned GPT-4o to turn Claude's sketch of changes into a git patch, which would add and remove lines to make the edits. I only finished generating the training data late at night, and the fine-tuning job ran as I slept.And, holy hell, the next morning it worked! I pushed it to production just in time for my YC interview with Dalton. Soon after, Brandon joined and we were off to the races.So, how does Codebuff work exactly? You invoke it in your terminal, and it starts by running through the source files in that directory and subdirectories and parsing out all the function and class names (or equivalents in 11 languages). We use the tree-sitter library to do this. It builds out a codebase map that includes these symbols and the file tree.Then, it fires off a request to Claude Haiku 3.5 to cache this codebase context so user inputs can be responded to with lower latency. (Prompt caching is OP!). We have a stateless server that passes messages along to Anthropic or OpenAI. We use websockets to ferry data back and forth to clients. We didn't have authentication or even a database for the first three months. Codebuff was free to install and used our API keys for all requests. Luckily, no one exploited us for too much free Claude usage haha. Major thanks to Brandon for saving this situation by building out our database (Postgres + Drizzle), server (Bun, hosted on Render, auth (using the free Auth.js), website (NextJS also hosted on Render), billing (Stripe), logging (BetterStack), and dashboard (Retool). This is the best tech stack I’ve ever had.When the user sends an input message, we prompt Claude to pick files that would be relevant (step 1). After picking files, we load them into context and the agent responds. It invokes tools using xml tags that we parse. It literally writes out \u003cedit_file path=\"src/app.ts\"\u003e…\u003c/edit_file\u003e to edit a particular file, and has other tags to run terminal commands, or to ask to read more files. This is all we really need, since Anthropic has already trained Claude with very similar tools reach state of the art on the SWE benchmark.Codebuff has limited free usage, but if you like it you can pay $99/mo to get more credits. We realize this is a lot more than competitors, but that’s because we do more expensive LLM calls with more context.We’re already seeing Codebuff used in surprising ways. One user racked up a $500 bill by building out two Flutter apps in parallel. He never even looked at the code it generated. Instead, he had long conversations with Codebuff to make progress and fix errors, until the apps were built to his satisfaction. Many users built real apps over a weekend for their teams and personal use.Of course, those aren't the typical use cases. Users also frequently use Codebuff to write unit tests. They would build a feature in parallel with unit tests and have Codebuff do loops to fix up the code until the tests pass. They would also ask it to do drudge work like set up Oauth flows or API scaffolding.What's really exciting with all of these examples is that we're seeing people's creativity becoming unbridled. They're spending more of their time thinking about architecture and design, instead of implementation details. It's so cool that we're just at the beginning, and the technology is only going to improve from here.If you would want to use Codebuff inside your own systems, we have an alpha SDK that exposes the same natural language interface for your apps to call and receive code edits! You can sign up here for early access: https://codebuff.retool.com/form/c8b15919-52d0-4572-aca5-533....Thank you for reading! We’re excited for you to try out Codebuff and let us know what you think!",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003ctd\u003e\u003ctable\u003e\n        \u003ctbody\u003e\u003ctr id=\"42078536\"\u003e\n      \u003ctd\u003e\u003cspan\u003e\u003c/span\u003e\u003c/td\u003e      \u003ctd\u003e\u003ccenter\u003e\u003ca id=\"up_42078536\" href=\"https://news.ycombinator.com/vote?id=42078536\u0026amp;how=up\u0026amp;goto=item%3Fid%3D42078536\"\u003e\u003c/a\u003e\u003c/center\u003e\u003c/td\u003e\u003ctd\u003e\u003cspan\u003e\u003ca href=\"https://news.ycombinator.com/item?id=42078536\"\u003eLaunch HN: Codebuff (YC F24) – CLI tool that writes code for you\u003c/a\u003e\u003c/span\u003e\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd colspan=\"2\"\u003e\u003c/td\u003e\u003ctd\u003e\u003cspan\u003e\n          \u003cspan id=\"score_42078536\"\u003e185 points\u003c/span\u003e by \u003ca href=\"https://news.ycombinator.com/user?id=jahooma\"\u003ejahooma\u003c/a\u003e \u003cspan title=\"2024-11-07T17:06:28 1730999188\"\u003e\u003ca href=\"https://news.ycombinator.com/item?id=42078536\"\u003e7 hours ago\u003c/a\u003e\u003c/span\u003e \u003cspan id=\"unv_42078536\"\u003e\u003c/span\u003e | \u003ca href=\"https://news.ycombinator.com/hide?id=42078536\u0026amp;goto=item%3Fid%3D42078536\"\u003ehide\u003c/a\u003e | \u003ca href=\"https://hn.algolia.com/?query=Launch%20HN%3A%20Codebuff%20%28YC%20F24%29%20%E2%80%93%20CLI%20tool%20that%20writes%20code%20for%20you\u0026amp;type=story\u0026amp;dateRange=all\u0026amp;sort=byDate\u0026amp;storyText=false\u0026amp;prefix\u0026amp;page=0\"\u003epast\u003c/a\u003e | \u003ca href=\"https://news.ycombinator.com/fave?id=42078536\u0026amp;auth=57af416abdaa31819dec42a0627ff811f7ad671c\"\u003efavorite\u003c/a\u003e | \u003ca href=\"https://news.ycombinator.com/item?id=42078536\"\u003e155 comments\u003c/a\u003e        \u003c/span\u003e\n              \u003c/td\u003e\u003c/tr\u003e\n    \u003ctr\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd colspan=\"2\"\u003e\u003c/td\u003e\u003ctd\u003e\u003cdiv\u003e\u003cp\u003eHey HN! We’re James and Brandon building Codebuff (\u003ca href=\"https://codebuff.com\"\u003ehttps://codebuff.com\u003c/a\u003e). Codebuff is like Cursor Composer, but in your terminal: it modifies files based on your natural language requests. You can try it with `npm i -g codebuff` and start using it immediately for free. We have no login gate, and we give all accounts up to $20 worth of credits.\u003c/p\u003e\u003cp\u003eCodebuff is different because we simplified the input to one step: you type what you want done in your terminal and hit enter. Then Codebuff looks through your whole codebase and makes the edits it wants, to existing source files or new ones. It also can run your tests, the type checker, or install packages to fulfill your request.\u003c/p\u003e\u003cp\u003eDemo video: \u003ca href=\"https://www.youtube.com/watch?v=dQ0NOMsu0dA\" rel=\"nofollow\"\u003ehttps://www.youtube.com/watch?v=dQ0NOMsu0dA\u003c/a\u003e\u003c/p\u003e\u003cp\u003eIt all started at a hackathon. I was trying out Sonnet 3.5 which had recently come out and seeing if I could use it to write code. The script I cobbled together that day pulled codebase context in one step and used it to rewrite files with changes in the second step. This two step process still exists today. Incidentally, my hackathon script worked rather poorly and my demo failed to produce any useful code.\u003c/p\u003e\u003cp\u003eBut that weekend I thought about the kind of errors it made, and realized that with more context on our codebase, it might have been able to get the change right. For example, it tried to create an endpoint on our server (at my previous startup), but it didn\u0026#39;t know that you needed to edit 3 specific files to do this (yeah... our backend was not that clean). So I hand-wrote a guide to our codebase, like I was instructing a new hire. I put it in a markdown file and passed it into Sonnet 3.5\u0026#39;s system prompt.  And the crazy thing is that it started producing wayyy better code. So, I started getting excited. In fact, this code guide idea still exists in Codebuff today as knowledge.md files which are automatically read on every request.\u003c/p\u003e\u003cp\u003eI didn\u0026#39;t think of this project as a startup idea at first. I thought it was just a simple script anyone could write. But after another week, I could see there were more problems to solve and it should be a product.\u003c/p\u003e\u003cp\u003eIn the week between applying to YC and the interview, I could not get Codebuff to edit files consistently. I tried many prompting strategies to get it to replace strings in the original file, but nothing worked reliably. How could I face my interviewer if I could not get something basic like this to work? On the day before my interview, in a Hail Mary attempt, I fine-tuned GPT-4o to turn Claude\u0026#39;s sketch of changes into a git patch, which would add and remove lines to make the edits. I only finished generating the training data late at night, and the fine-tuning job ran as I slept.\u003c/p\u003e\u003cp\u003eAnd, holy hell, the next morning it worked! I pushed it to production just in time for my YC interview with Dalton. Soon after, Brandon joined and we were off to the races.\u003c/p\u003e\u003cp\u003eSo, how does Codebuff work exactly? You invoke it in your terminal, and it starts by running through the source files in that directory and subdirectories and parsing out all the function and class names (or equivalents in 11 languages). We use the tree-sitter library to do this. It builds out a codebase map that includes these symbols and the file tree.\u003c/p\u003e\u003cp\u003eThen, it fires off a request to Claude Haiku 3.5 to cache this codebase context so user inputs can be responded to with lower latency. (Prompt caching is OP!). We have a stateless server that passes messages along to Anthropic or OpenAI. We use websockets to ferry data back and forth to clients. We didn\u0026#39;t have authentication or even a database for the first three months. Codebuff was free to install and used our API keys for all requests. Luckily, no one exploited us for too much free Claude usage haha. Major thanks to Brandon for saving this situation by building out our database (Postgres + Drizzle), server (Bun, hosted on Render, auth (using the free Auth.js), website (NextJS also hosted on Render), billing (Stripe), logging (BetterStack), and dashboard (Retool). This is the best tech stack I’ve ever had.\u003c/p\u003e\u003cp\u003eWhen the user sends an input message, we prompt Claude to pick files that would be relevant (step 1). After picking files, we load them into context and the agent responds. It invokes tools using xml tags that we parse. It literally writes out \u0026lt;edit_file path=\u0026#34;src/app.ts\u0026#34;\u0026gt;…\u0026lt;/edit_file\u0026gt; to edit a particular file, and has other tags to run terminal commands, or to ask to read more files. This is all we really need, since Anthropic has already trained Claude with very similar tools reach state of the art on the SWE benchmark.\u003c/p\u003e\u003cp\u003eCodebuff has limited free usage, but if you like it you can pay $99/mo to get more credits. We realize this is a lot more than competitors, but that’s because we do more expensive LLM calls with more context.\u003c/p\u003e\u003cp\u003eWe’re already seeing Codebuff used in surprising ways. One user racked up a $500 bill by building out two Flutter apps in parallel. He never even looked at the code it generated. Instead, he had long conversations with Codebuff to make progress and fix errors, until the apps were built to his satisfaction. Many users built real apps over a weekend for their teams and personal use.\u003c/p\u003e\u003cp\u003eOf course, those aren\u0026#39;t the typical use cases. Users also frequently use Codebuff to write unit tests. They would build a feature in parallel with unit tests and have Codebuff do loops to fix up the code until the tests pass. They would also ask it to do drudge work like set up Oauth flows or API scaffolding.\u003c/p\u003e\u003cp\u003eWhat\u0026#39;s really exciting with all of these examples is that we\u0026#39;re seeing people\u0026#39;s creativity becoming unbridled. They\u0026#39;re spending more of their time thinking about architecture and design, instead of implementation details. It\u0026#39;s so cool that we\u0026#39;re just at the beginning, and the technology is only going to improve from here.\u003c/p\u003e\u003cp\u003eIf you would want to use Codebuff inside your own systems, we have an alpha SDK that exposes the same natural language interface for your apps to call and receive code edits! You can sign up here for early access: \u003ca href=\"https://codebuff.retool.com/form/c8b15919-52d0-4572-aca5-533317403dde\" rel=\"nofollow\"\u003ehttps://codebuff.retool.com/form/c8b15919-52d0-4572-aca5-533...\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eThank you for reading! We’re excited for you to try out Codebuff and let us know what you think!\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e        \u003ctr\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd colspan=\"2\"\u003e\u003c/td\u003e\u003ctd\u003e\u003cform action=\"comment\" method=\"post\"\u003e\u003c/form\u003e\u003c/td\u003e\u003c/tr\u003e  \u003c/tbody\u003e\u003c/table\u003e\n  \u003c/td\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": null,
  "modifiedTime": null
}
