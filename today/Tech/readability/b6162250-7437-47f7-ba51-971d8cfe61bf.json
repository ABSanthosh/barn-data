{
  "id": "b6162250-7437-47f7-ba51-971d8cfe61bf",
  "title": "Rails for Everything",
  "link": "https://literallythevoid.com/blog/rails_for_everything.html",
  "description": "Comments",
  "author": "",
  "published": "Wed, 01 Jan 2025 20:58:04 +0000",
  "source": "https://news.ycombinator.com/rss",
  "categories": null,
  "byline": "",
  "length": 3250,
  "excerpt": "Published: 2025-01-01",
  "siteName": "",
  "favicon": "https://literallythevoid.com/icon.png",
  "text": "Rails for everything Published: 2025-01-01 After spending part of my holiday building and deploying a new Rails 8 application, It's clearer than ever that Rails is awesome, and it's especially great for small projects with a single developer. Guide is good The latest Getting Started with Rails guide is really excellent. There's a bit of hand waving around installing Ruby (which is still more difficult than it needs to be). But if you follow it start to finish, you'll have a Rails app in production. And it isn't just hello world. Your app will have authentication, caching, rich text, continuous integration, and a database. That's a real application. If you're brand new to Rails, the guide is the best place to start. SQLite is all you need SQlite is a great tool, but its focus on backwards compatibility means that it wasn't ideal for a production database out of the box. You had to add some gems to get it ready to perform. However Rails 8 deals with that for you, and SQLite is ready for production. Now that you SQLite is a more robust choice, you don't have to worry about spinning up a PostgreSQL server. On top of that, with tools like solid cache you don't need to stand up redis either. Everything is running under Rails and within SQLite. Superb. Easy CI After I pushed my initial Rails commit, I got an unexpected email: Run failed: CI - main. My first thought was actually a malicious actor, but I was wrong. Rails 8 comes with basic CI config and Github comes with 2000 free minutes per month of actions usage. Aside from it being really cool to have CI with no effort, 2000 minutes of run time is a lot for solo developer! Authentication generator Devise is the canonical authentication gem. But it hides a lot of complexity and it's not exactly easy to configure correctly, especially for a beginner. Rails 8 adds a new authentication generator. It add a simple sign in flow for existing users. All you need to do is add a user via the Rails console and boom. You can log in. The generated code is pretty minimal and easy to read about. Easy and fast deploys with Kamal I am more than happy to leave deploys to my very smart friends in the ops team. To deploy a new Rails 8 app, I just needed to update a few items in deploy.yml, follow a few directions, and I had an app live! With SSL! Honestly it took less time to get a web app up than it took me to get SSL on a Github page. CI + easy deploys might be the best part about Rails 8. Even just using the getting started guide, it encourages best practices. Conclusion Rails is not dead; It's better than ever. Try using it to make something new this year.",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003carticle\u003e\n      \u003ch2\u003eRails for everything\u003c/h2\u003e\n\n      \u003cp\u003e\u003cem\u003ePublished: 2025-01-01\u003c/em\u003e\u003c/p\u003e\n\n      \u003cp\u003e\n        After spending part of my holiday building and deploying a new Rails 8\n        application, It\u0026#39;s clearer than ever that Rails is awesome, and it\u0026#39;s\n        especially great for small projects with a single developer.\n      \u003c/p\u003e\n\n      \u003ch3\u003eGuide is good\u003c/h3\u003e\n\n      \u003cp\u003e\n        The latest\n        \u003ca href=\"https://guides.rubyonrails.org/getting_started.html#Rails-philosophy\"\u003eGetting Started with Rails\u003c/a\u003e\n        guide is really excellent. There\u0026#39;s a bit of hand waving around\n        installing Ruby (which is still more difficult than it needs to be). But\n        if you follow it start to finish, you\u0026#39;ll have a Rails app\n        \u003cstrong\u003ein production\u003c/strong\u003e. And it isn\u0026#39;t just\n        \u003ccode\u003ehello world\u003c/code\u003e. Your app will have authentication, caching,\n        rich text, continuous integration, and a database. That\u0026#39;s a real\n        application.\n      \u003c/p\u003e\n\n      \u003cp\u003eIf you\u0026#39;re brand new to Rails, the guide is the best place to start.\u003c/p\u003e\n\n      \u003ch3\u003eSQLite is all you need\u003c/h3\u003e\n\n      \u003cp\u003e\n        SQlite is a great tool, but its focus on backwards compatibility means\n        that it wasn\u0026#39;t ideal for a production database out of the box. You\n        \u003ca href=\"https://fractaledmind.github.io/2024/04/15/sqlite-on-Rails-the-how-and-why-of-optimal-performance/\"\u003ehad to add some gems\u003c/a\u003e\n        to get it ready to perform. However\n        \u003ca href=\"https://fractaledmind.github.io/2024/10/16/sqlite-supercharges-Rails/\"\u003eRails 8\u003c/a\u003e\n        deals with that for you, and SQLite is ready for production.\n      \u003c/p\u003e\n\n      \u003cp\u003e\n        Now that you SQLite is a more robust choice, you don\u0026#39;t have to worry\n        about spinning up a PostgreSQL server. On top of that, with tools like\n        \u003ca href=\"https://dev.37signals.com/solid-cache/\"\u003esolid cache\u003c/a\u003e you\n        don\u0026#39;t need to stand up redis either.\n      \u003c/p\u003e\n\n      \u003cp\u003eEverything is running under Rails and within SQLite. Superb.\u003c/p\u003e\n\n      \u003ch3\u003eEasy CI\u003c/h3\u003e\n\n      \u003cp\u003e\n        After I pushed my initial Rails commit, I got an unexpected email:\n        \u003ccode\u003eRun failed: CI - main\u003c/code\u003e. My first thought was actually a\n        malicious actor, but I was wrong.\n        \u003ca href=\"https://guides.rubyonrails.org/getting_started.html#continuous-integration-with-github-actions\"\u003eRails 8 comes with basic CI config\u003c/a\u003e\n        and\n        \u003ca href=\"https://docs.github.com/en/billing/managing-billing-for-your-products/managing-billing-for-github-actions/about-billing-for-github-actions\"\u003eGithub comes with 2000 free minutes per month\u003c/a\u003e\n        of actions usage.\n      \u003c/p\u003e\n\n      \u003cp\u003e\n        Aside from it being really cool to have CI with no effort, 2000 minutes\n        of run time is a lot for solo developer!\n      \u003c/p\u003e\n\n      \u003ch3\u003eAuthentication generator\u003c/h3\u003e\n\n      \u003cp\u003e\n        \u003ca href=\"https://github.com/heartcombo/devise\"\u003eDevise\u003c/a\u003e is the\n        canonical authentication gem. But it hides a lot of complexity and it\u0026#39;s\n        not exactly easy to configure correctly, especially for a beginner.\n      \u003c/p\u003e\n\n      \u003cp\u003e\n        Rails 8 adds a new authentication generator. It add a simple sign in\n        flow for existing users. All you need to do is add a user via the Rails\n        console and boom. You can log in.\n      \u003c/p\u003e\n\n      \u003cp\u003eThe generated code is pretty minimal and easy to read about.\u003c/p\u003e\n\n      \u003ch3\u003eEasy and fast deploys with Kamal\u003c/h3\u003e\n\n      \u003cp\u003e\n        I am more than happy to leave deploys to my very smart friends in the\n        ops team. To deploy a new Rails 8 app, I just needed to update a few\n        items in \u003ccode\u003edeploy.yml\u003c/code\u003e, follow a few directions, and I had an\n        app live! With SSL!\n      \u003c/p\u003e\n\n      \u003cp\u003e\n        Honestly it took less time to get a web app up than it took me to get\n        SSL on a Github page.\n      \u003c/p\u003e\n\n      \u003cp\u003e\n        CI + easy deploys might be the best part about Rails 8. Even just using\n        the getting started guide, it encourages best practices.\n      \u003c/p\u003e\n\n      \u003ch3\u003eConclusion\u003c/h3\u003e\n\n      \u003cp\u003e\n        \u003ca href=\"https://israilsdead.com/\"\u003eRails is not dead\u003c/a\u003e; It\u0026#39;s better\n        than ever. Try using it to make something new this year.\n      \u003c/p\u003e\n    \u003c/article\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": null,
  "modifiedTime": null
}
