{
  "id": "77288819-cf3b-4fee-8241-204183fd42e4",
  "title": "255 - Data Oriented Programming",
  "link": "https://fragmentedpodcast.com/episodes/255/",
  "description": "In this episode, we dive into the programming paradigm — Data Oriented Programming (DOP) and why making data the star can simplify your code. Learn how well-modeled data reduces defensive logic, prevents invalid states, and keeps your apps stable. We’ll also contrast DOP with Object Oriented Programming (OOP) and Functional Programming (FP), sharing practical examples, tips, and resource links to deepen your understanding.The full shownotes with illustrations are on fragmentedpodcast.com.Show Notes[announcement] Fragmented has an email newsletter.Programming ParadigmsObject Oriented ProgrammingFunctional ProgrammingData Oriented Programming (DOP)UUIDRFC 4122Kotlin now includes UUID in the standard lib even for kotlin multiplatform.ResourcesBrian Goetz's seminal article on DOPTies Van de Ven Advanced Kotlin Dev Day in 2022Data Oriented Programming in Java by Chris Kiehl (by Manning Publications)Devoxx talk by Nicolai Parlog on youtubeContact usfragmentedpodcast.comContact usYoutubeKaushik:kau.sh (links to everything)ThreadsBlueskyYoutube@kaushikgopal",
  "author": "Kaushik Gopal",
  "published": "Tue, 18 Feb 2025 05:36:21 +0000",
  "source": "https://feeds.simplecast.com/LpAGSLnY",
  "categories": [
    "functional programming",
    " data oriented programming",
    " object oriented programming",
    " dop"
  ],
  "byline": "",
  "length": 2152,
  "excerpt": "Download directly In this episode, we dive into the programming paradigm — Data Oriented Programming (DOP) and why making data the star can simplify your code. Learn how well-modeled data reduces defensive logic, prevents invalid states, and keeps your apps stable. We’ll also contrast DOP with Object Oriented Programming (OOP) and Functional Programming (FP), sharing practical examples, tips, and resource links to deepen your understanding.",
  "siteName": "",
  "favicon": "https://fragmentedpodcast.com/images/favicon.png",
  "text": "Download directly In this episode, we dive into the programming paradigm — Data Oriented Programming (DOP) and why making data the star can simplify your code. Learn how well-modeled data reduces defensive logic, prevents invalid states, and keeps your apps stable. We’ll also contrast DOP with Object Oriented Programming (OOP) and Functional Programming (FP), sharing practical examples, tips, and resource links to deepen your understanding. The full shownotes with illustrations are on fragmentedpodcast.com. Show Notes [announcement] Fragmented has an email newsletter. Programming Paradigms Object Oriented Programming Functional Programming Bank Transaction - OOP style Bank Transaction - DOP style UUID RFC 4122 Kotlin now includes UUID in the standard lib even for kotlin multiplatform. Network Result api Search or find api Resources Brian Goetz’s seminal article on DOP Ties Van de Ven Advanced Kotlin Dev Day in 2022 Data Oriented Programming in Java by Chris Kiehl (by Manning Publications) Devoxx talk by Nicolai Parlog on youtube fragmentedpodcast.com Contact us Youtube Kaushik: kau.sh (links to everything) Threads Bluesky Youtube @kaushikgopal Discuss on Reddit, Youtube.",
  "image": "http://fragmentedpodcast.com/images/branding/banner-3000x1000-dark.webp",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003csection\u003e\n\n    \n\n    \n    \u003carticle\u003e\n        \n\u003cp\u003e\n    \u003ca href=\"https://cdn.simplecast.com/audio/20f35050-e836-44cd-8f7f-fd13e8cb2e44/episodes/9bcca143-e2b6-4afb-a7f3-0dce45e31cc1/audio/f3ab5d78-6763-4031-a9fa-57d164604420/default_tc.mp3\"\u003eDownload directly\u003c/a\u003e\n\u003c/p\u003e\n\u003cp\u003eIn this episode, we dive into the programming paradigm — Data Oriented Programming (DOP) and why making data the star can simplify your code. Learn how well-modeled data reduces defensive logic, prevents invalid states, and keeps your apps stable. We’ll also contrast DOP with Object Oriented Programming (OOP) and Functional Programming (FP), sharing practical examples, tips, and resource links to deepen your understanding.\u003c/p\u003e\n\u003cp\u003eThe \u003ca href=\"https://fragmentedpodcast.com/episodes/255/\"\u003efull shownotes with illustrations are on fragmentedpodcast.com\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"show-notes\"\u003eShow Notes\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e[announcement] Fragmented has an \u003ca href=\"https://buttondown.com/fragmentedcast?tag=podcast\"\u003eemail newsletter\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eProgramming Paradigms\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Object-oriented_programming\"\u003eObject Oriented Programming\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Functional_programming\"\u003eFunctional Programming\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cfigure\u003e\n\n    \u003cdiv\u003e\n        \n            \u003cp\u003e\u003cimg src=\"https://fragmentedpodcast.com/images/uploads/2025/255-dop-1.png\" alt=\"Bank Transaction - OOP style\" loading=\"lazy\" decoding=\"async\"/\u003e\u003c/p\u003e\u003cfigcaption\u003e\n                \n\n                \n                        Bank Transaction - OOP style\n\n                        \n\n                                \n\n                            \n                \n\n            \u003c/figcaption\u003e\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003cfigure\u003e\n\n    \u003cdiv\u003e\n        \n            \u003cp\u003e\u003cimg src=\"https://fragmentedpodcast.com/images/uploads/2025/255-dop-2.png\" alt=\"Bank Transaction - DOP style\" loading=\"lazy\" decoding=\"async\"/\u003e\u003c/p\u003e\u003cfigcaption\u003e\n                \n\n                \n                        Bank Transaction - DOP style\n\n                        \n\n                                \n\n                            \n                \n\n            \u003c/figcaption\u003e\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Universally_unique_identifier\"\u003eUUID\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.rfc-editor.org/rfc/rfc4122\"\u003eRFC 4122\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eKotlin \u003ca href=\"https://www.youtube.com/watch?v=V5EOsE_eJLE\"\u003enow\u003c/a\u003e \u003ca href=\"https://github.com/Kotlin/KEEP/blob/uuid/proposals/stdlib/uuid.md\"\u003eincludes\u003c/a\u003e \u003ca href=\"https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.uuid/-uuid/\"\u003eUUID\u003c/a\u003e in the standard lib even for kotlin multiplatform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfigure\u003e\n\n    \u003cdiv\u003e\n        \n            \u003cp\u003e\u003cimg src=\"https://fragmentedpodcast.com/images/uploads/2025/255-dop-3.png\" alt=\"Network Result api\" loading=\"lazy\" decoding=\"async\"/\u003e\u003c/p\u003e\u003cfigcaption\u003e\n                \n\n                \n                        Network Result api\n\n                        \n\n                                \n\n                            \n                \n\n            \u003c/figcaption\u003e\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003cfigure\u003e\n\n    \u003cdiv\u003e\n        \n            \u003cp\u003e\u003cimg src=\"https://fragmentedpodcast.com/images/uploads/2025/255-dop-4.png\" alt=\"Search or find api\" loading=\"lazy\" decoding=\"async\"/\u003e\u003c/p\u003e\u003cfigcaption\u003e\n                \n\n                \n                        Search or find api\n\n                        \n\n                                \n\n                            \n                \n\n            \u003c/figcaption\u003e\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003ch2 id=\"resources\"\u003eResources\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBrian Goetz’s \u003ca href=\"https://www.infoq.com/articles/data-oriented-programming-java/\"\u003eseminal article\u003c/a\u003e on DOP\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://youtu.be/ixLMO4iPIHo?si=Ikokk9UyXYERGFsJ\"\u003eTies Van de Ven\u003c/a\u003e Advanced Kotlin Dev Day in 2022\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.manning.com/books/data-oriented-programming-in-java\"\u003eData Oriented Programming in Java\u003c/a\u003e by Chris Kiehl (by Manning Publications)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=8FRU_aGY4mY\"\u003eDevoxx talk by Nicolai Parlog\u003c/a\u003e on youtube\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://fragmentedpodcast.com\"\u003efragmentedpodcast.com\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://fragmentedpodcast.com/contact\"\u003eContact us\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/@fragmentedpodcast\"\u003eYoutube\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"kaushik\"\u003eKaushik:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://kau.sh/contact\"\u003ekau.sh\u003c/a\u003e (links to everything)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://threads.kau.sh\"\u003eThreads\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://bluesky.kau.sh\"\u003eBluesky\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://youtube.kau.sh\"\u003eYoutube\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://twitter.kau.sh\"\u003e@kaushikgopal\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cem\u003eDiscuss on \u003ca href=\"https://www.reddit.com/r/androiddev/comments/1isc8l4/data_oriented_programming_fragmented_255/\"\u003eReddit\u003c/a\u003e, \u003ca href=\"https://www.youtube.com/watch?v=-LKvqPQZaU4\"\u003eYoutube\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n    \u003c/article\u003e\n\n\u003c/section\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": null,
  "modifiedTime": null
}
