{
  "id": "9238abbb-7721-4937-ac62-3b3ac8b56018",
  "title": "Android Weekly Issue #667",
  "link": "https://androidweekly.net/issues/issue-667/rss.xml",
  "description": "Articles \u0026 Tutorials Sponsored New: Secure In-Person Payments for Mobile Apps Highlights of Square’s Mobile Payments SDK: *PCI-compliant, embedded payment system *Supports diverse hardware for in-person payments *Reliable on the move, over the counter, \u0026 at a kiosk *Free to integrate and no API usage costs. Try Square Mobile Payments now Exploring Jetpack Compose: SearchBar Joe Birch explores Jetpack Compose’s SearchBar composable, showing how to implement an expandable floating search bar with recommendations. Streamline your KMP development with Pale Blue KMP Core Anil Kumar Beesetti introduces Pale Blue KMP Core, an open-source library designed to streamline Kotlin Multiplatform development by providing abstractions for networking and key-value storage. Sponsored Advertise your Android dev course to over 80k readers We reach out to more than 80k Android developers around the world, every week, through our email newsletter and social media channels. Advertise your Android development course! Material3 Color System Basics for Android Developers Matti Mäki-Kihniä explains the Material3 color system, highlighting its structured approach with primary, secondary, and tertiary roles, and demonstrates how to implement it in Android projects using the Material Theme Builder for automatic theming. From an Android to a Kotlin Multiplatform library Marco Gomiero details the migration of his RSS-Parser library to Kotlin Multiplatform, covering project structure, dependency management, and platform-specific implementations. Modularizing with Intent: Finding the Right Module Naming Convention Chris Keenan proposes a module naming convention to organize Kotlin Multiplatform projects, aiming for clarity and scalability. UseCases: Injectable Functions Chris Keenan clarifies that use cases in software development are essentially single-purpose functions encapsulated within classes, leveraging dependency injection to manage their dependencies, thereby enhancing code modularity and testability. Advanced Generics and Variance in Kotlin: A Comprehensive Guide Ignacio Carrión provides a comprehensive guide on advanced generics and variance in Kotlin, explaining important concepts like covariance, contravariance, and invariance. Being Quick: Resolve what's dirty. Sebastian Sellmair discusses the process of identifying and resolving “dirty” scopes in Compose Hot Reload, focusing on how changes in code can affect the state and behavior of composable functions. Libraries \u0026 Code Scratchify Scratchify is a lightweight and customizable scratch card SDK built using Jetpack Compose Multiplatform kobweb A modern framework for full stack web apps in Kotlin, built upon Compose HTML modelcontextprotocol/kotlin-sdk Kotlin implementation of the Model Context Protocol (MCP), providing both client and server capabilities for integrating with LLM surfaces. pale-blue-kmp-core A Kotlin Multiplatform (KMP) library for shared logic and common utilities across platforms (Android, iOS) News Kotlin 2.1.20 Released The Kotlin 2.1.20 release is out! This version includes performance improvements and bug fixes for Kotlin 2.1.0. Videos \u0026 Podcasts Android Devs Live Stream - 19-Mar-2025 Jov Mit continues an Android development live stream. Create Boilerplate Files With ONE Click With Multi-File Templates In Android Studio Philipp Lackner shows how you can setup super useful multi-file templates for similar repetitive file structures that only differ in small details. All this works in any JetBrains IDE. Building MCP with Kotlin: Claude Desktop Controls My Smart Home Lights! The Model Context Protocol Kotlin SDK makes it easy for you to build integrations between LLM clients like Claude Desktop and your own applications, whether that's software or hardware. Mastering UI Events and States in Jetpack Compose Learn more about mastering UI events and states in Jetpack Compose. Parsing XML namespaces and trying not to lose our minds Dive deep into parsing, debugging, and untangling XML namespaces. Watch as we navigate the quirks, pitfalls, and unexpected joys of working with XML! Specials Android Architecture Patterns: A Comprehensive Pre-Interview Guide Ishan Khanna provides a comprehensive guide on Android architecture patterns, covering a wide variety of patterns and their integration with Jetpack Compose, to help developers prepare for interviews. Events KotlinConf 2025, May 21–23, Copenhagen KotlinConf 2025, happening May 21–23, is the must-attend event for Kotlin developers, featuring hands-on workshops and 100+ talks on Multiplatform, Compose, coroutines, Ktor, Spring, functional programming, and more. Learn from experts at JetBrains, Google, AWS, and beyond—don’t miss this chance to level up your Kotlin skills and connect with the global community!",
  "author": "",
  "published": "Sun, 23 Mar 2025 16:57:33 +0000",
  "source": "https://androidweekly.net/rss.xml",
  "categories": null,
  "byline": "",
  "length": 1910,
  "excerpt": "",
  "siteName": "",
  "favicon": "",
  "text": "Highlights of Square’s Mobile Payments SDK: *PCI-compliant, embedded payment system *Supports diverse hardware for in-person payments *Reliable on the move, over the counter, \u0026 at a kiosk *Free to integrate and no API usage costs. Try Square Mobile Payments now Matti Mäki-Kihniä explains the Material3 color system, highlighting its structured approach with primary, secondary, and tertiary roles, and demonstrates how to implement it in Android projects using the Material Theme Builder for automatic theming. Chris Keenan clarifies that use cases in software development are essentially single-purpose functions encapsulated within classes, leveraging dependency injection to manage their dependencies, thereby enhancing code modularity and testability. Sebastian Sellmair discusses the process of identifying and resolving “dirty” scopes in Compose Hot Reload, focusing on how changes in code can affect the state and behavior of composable functions. Scratchify is a lightweight and customizable scratch card SDK built using Jetpack Compose Multiplatform A modern framework for full stack web apps in Kotlin, built upon Compose HTML Kotlin implementation of the Model Context Protocol (MCP), providing both client and server capabilities for integrating with LLM surfaces. A Kotlin Multiplatform (KMP) library for shared logic and common utilities across platforms (Android, iOS) The Kotlin 2.1.20 release is out! This version includes performance improvements and bug fixes for Kotlin 2.1.0. KotlinConf 2025, happening May 21–23, is the must-attend event for Kotlin developers, featuring hands-on workshops and 100+ talks on Multiplatform, Compose, coroutines, Ktor, Spring, functional programming, and more. Learn from experts at JetBrains, Google, AWS, and beyond—don’t miss this chance to level up your Kotlin skills and connect with the global community! ]]\u003e",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://fnf.dev/4kNHQPs\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/67df2c/0a3c93bc68710055a8/square_Square_85x85.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003cdiv\u003e\u003cp\u003eHighlights of Square’s Mobile Payments SDK: *PCI-compliant, embedded payment system *Supports diverse hardware for in-person payments *Reliable on the move, over the counter, \u0026amp; at a kiosk *Free to integrate and no API usage costs. Try Square Mobile Payments now\n\n\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\n\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://androidweekly.net/jobs/new\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/67df2c/233c93bc68710055b1/square_aw.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp\u003eMatti Mäki-Kihniä explains the Material3 color system, highlighting its structured approach with primary, secondary, and tertiary roles, and demonstrates how to implement it in Android projects using the Material Theme Builder for automatic theming.\n\u003c/p\u003e\u003c/div\u003e\n\n\n\u003cdiv\u003e\u003cp\u003eChris Keenan clarifies that use cases in software development are essentially single-purpose functions encapsulated within classes, leveraging dependency injection to manage their dependencies, thereby enhancing code modularity and testability.\n\u003c/p\u003e\u003c/div\u003e\n\n\u003cdiv\u003e\u003cp\u003eSebastian Sellmair discusses the process of identifying and resolving “dirty” scopes in Compose Hot Reload, focusing on how changes in code can affect the state and behavior of composable functions.\n\u003c/p\u003e\u003c/div\u003e\n\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://github.com/gsrathoreniks/Scratchify\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/67df7a/4a3c93bc6871005f60/square_Bildschirmfoto_2025-03-23_um_17.56.07.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003cdiv\u003e\u003cp\u003eScratchify is a lightweight and customizable scratch card SDK built using Jetpack Compose Multiplatform\n\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp\u003eA modern framework for full stack web apps in Kotlin, built upon Compose HTML \n\u003c/p\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cp\u003eKotlin implementation of the Model Context Protocol (MCP), providing both client and server capabilities for integrating with LLM surfaces.\n\u003c/p\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cp\u003eA Kotlin Multiplatform (KMP) library for shared logic and common utilities across platforms (Android, iOS)\n\u003c/p\u003e\u003c/div\u003e\n\n\u003cdiv\u003e\u003cp\u003eThe Kotlin 2.1.20 release is out! This version includes performance improvements and bug fixes for Kotlin 2.1.0.\n\u003c/p\u003e\u003c/div\u003e\n\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://www.youtube.com/watch?v=Dc-BKdnmBpM\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/67df79/083c93bc6871005f23/square_Bildschirmfoto_2025-03-23_um_17.56.40.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\n\n\n\n\n\n\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://jb.gg/tf37vx\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/67df7d/c13c93bc6871005fb5/square_Bildschirmfoto_2025-03-23_um_17.57.04.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003cdiv\u003e\u003cp\u003eKotlinConf 2025, happening May 21–23, is the must-attend event for Kotlin developers, featuring hands-on workshops and 100+ talks on Multiplatform, Compose, coroutines, Ktor, Spring, functional programming, and more. Learn from experts at JetBrains, Google, AWS, and beyond—don’t miss this chance to level up your Kotlin skills and connect with the global community!\n\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e]]\u0026gt;\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": null,
  "modifiedTime": null
}
