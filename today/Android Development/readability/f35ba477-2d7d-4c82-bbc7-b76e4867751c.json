{
  "id": "f35ba477-2d7d-4c82-bbc7-b76e4867751c",
  "title": "Fancy Filter",
  "link": "https://android-arsenal.com/details/1/8482",
  "description": "An Android Library for applying easy, fast and effective 63 (will be added more) LUT filters to photos.",
  "author": "",
  "published": "Sun, 10 Mar 2024 06:39:15 +0300",
  "source": "https://feeds.feedburner.com/Android_Arsenal",
  "categories": null,
  "byline": "Vladislav Bauer",
  "length": 1838,
  "excerpt": "Image Processing | Fancy Filter by Zeki Erciyas (zekierciyas)",
  "siteName": "Android Arsenal",
  "favicon": "https://android-arsenal.com/favicon.png",
  "text": "Fancy Filter An Android Library for applying easy, fast and effective 62 (will be added more) LUT filters to photos. With RenderScript, it is aimed to process the color spaces in the LUT and apply them to the picture in the form of a filter. What is LUT? The direct translation of LUT (\"Lookup Table\") from English means \"lookup table\". In computer science, it means data where input (input) values and output (output) values are mapped and calculated. Initial Installation Gradle Add below codes to your root build.gradle file (not your module build.gradle file). allprojects { repositories { maven { url 'https://jitpack.io' } } } And add a dependency code to your module's build.gradle file. dependencies { implementation 'com.github.zekierciyas:FancyFilter:Tag' } Usage The Fancy Filter library, which is fast and easy to use, generally includes a simple Builder Pattern. It is based on providing the necessary parameters and obtaining the filtered image in bitmap type. FancyFilter.Builder() .withContext(this) .filter(FancyFilters.NO_1) .bitmap(bitmap) .applyFilter { bitmap -\u003e // Getting the filtered bitmap here } License Copyright 2022 github/zekierciyas (Zeki Erciyas) Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.",
  "image": "https://avatars.githubusercontent.com/u/71823127?v=4",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"description\"\u003e\u003carticle\u003e\u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003eFancy Filter\u003c/h2\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003eAn Android Library for applying easy, fast and effective 62 (will be added more) LUT filters to photos. With RenderScript, it is aimed to process the color spaces in the LUT and apply them to the picture in the form of a filter.\u003c/p\u003e \u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003eWhat is LUT?\u003c/h2\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003eThe direct translation of LUT (\u0026#34;Lookup Table\u0026#34;) from English means \u0026#34;lookup table\u0026#34;. In computer science, it means data where input (input) values and output (output) values are mapped and calculated.\u003c/p\u003e \u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003eInitial Installation\u003c/h2\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003e\u003ch3 dir=\"auto\"\u003eGradle\u003c/h3\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003eAdd below codes to your \u003cstrong\u003eroot\u003c/strong\u003e \u003ccode\u003ebuild.gradle\u003c/code\u003e file (not your module build.gradle file).\u003c/p\u003e \u003cdiv dir=\"auto\" data-snippet-clipboard-copy-content=\"allprojects { repositories { maven { url \u0026#39;https://jitpack.io\u0026#39; } } }\"\u003e\u003cpre\u003e\u003cspan\u003eallprojects\u003c/span\u003e {\n    repositories {\n        maven { url \u003cspan\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003ehttps://jitpack.io\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e }\n    }\n}\u003c/pre\u003e\u003c/div\u003e \u003cp dir=\"auto\"\u003eAnd add a dependency code to your \u003cstrong\u003emodule\u003c/strong\u003e\u0026#39;s \u003ccode\u003ebuild.gradle\u003c/code\u003e file.\u003c/p\u003e \u003cdiv dir=\"auto\" data-snippet-clipboard-copy-content=\"dependencies { implementation \u0026#39;com.github.zekierciyas:FancyFilter:Tag\u0026#39; }\"\u003e\u003cpre\u003e\u003cspan\u003edependencies\u003c/span\u003e {\n         implementation \u003cspan\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003ecom.github.zekierciyas:FancyFilter:Tag\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n }\u003c/pre\u003e\u003c/div\u003e \u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003eUsage\u003c/h2\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003eThe Fancy Filter library, which is fast and easy to use, generally includes a simple Builder Pattern. It is based on providing the necessary parameters and obtaining the filtered image in bitmap type.\u003c/p\u003e \u003cdiv dir=\"auto\" data-snippet-clipboard-copy-content=\"FancyFilter.Builder() .withContext(this) .filter(FancyFilters.NO_1) .bitmap(bitmap) .applyFilter { bitmap -\u0026gt; // Getting the filtered bitmap here }\"\u003e\u003cpre\u003e \u003cspan\u003eFancyFilter\u003c/span\u003e.\u003cspan\u003eBuilder\u003c/span\u003e()\n            .withContext(\u003cspan\u003ethis\u003c/span\u003e)\n            .filter(\u003cspan\u003eFancyFilters\u003c/span\u003e.\u003cspan\u003eNO_1\u003c/span\u003e)\n            .bitmap(bitmap)\n            .applyFilter { bitmap \u003cspan\u003e-\u0026gt;\u003c/span\u003e\n                \u003cspan\u003e\u003cspan\u003e//\u003c/span\u003e Getting the filtered bitmap here\u003c/span\u003e\n            }\u003c/pre\u003e\u003c/div\u003e \u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003eLicense\u003c/h2\u003e\u003c/p\u003e \u003cdiv dir=\"auto\" data-snippet-clipboard-copy-content=\"Copyright 2022 github/zekierciyas (Zeki Erciyas) Licensed under the Apache License, Version 2.0 (the \u0026#34;License\u0026#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \u0026#34;AS IS\u0026#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\"\u003e\u003cpre\u003eCopyright 2022 github/zekierciyas (Zeki Erciyas)\n\n    Licensed under the Apache License, Version 2.0 (the \u0026#34;License\u0026#34;);\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \u0026#34;AS IS\u0026#34; BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\u003c/pre\u003e\u003c/div\u003e \u003c/article\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": null,
  "modifiedTime": null
}
