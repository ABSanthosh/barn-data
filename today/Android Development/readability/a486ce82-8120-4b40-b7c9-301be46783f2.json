{
  "id": "a486ce82-8120-4b40-b7c9-301be46783f2",
  "title": "New features just dropped in Inspektify",
  "link": "https://blog.kotlin-academy.com/new-features-just-dropped-in-inspektify-1dbea71d8708?source=rss----e57b304801ef---4",
  "description": "",
  "author": "Blaž Vantur",
  "published": "Thu, 10 Oct 2024 08:49:46 GMT",
  "source": "https://blog.kotlin-academy.com/feed",
  "categories": [
    "android",
    "kotlin-multiplatform",
    "ktor",
    "ios",
    "desktop"
  ],
  "byline": "Blaž Vantur",
  "length": 5660,
  "excerpt": "Since the public release of Inspektify, our Kotlin Multiplatform (KMP) network inspection library, a lot has changed and improved with it. Today, I’m excited to announce a new update that introduces…",
  "siteName": "Kt. Academy",
  "favicon": "https://miro.medium.com/v2/resize:fill:256:256/1*2grDGjzH0tfX8XiaF4Izaw.png",
  "text": "Since the public release of Inspektify, our Kotlin Multiplatform (KMP) network inspection library, a lot has changed and improved with it. Today, I’m excited to announce a new update that introduces several new features, making network debugging and inspection easier for teams working with Kotlin Multiplatform projects.In this article, I will walk you through the latest features in Inspektify version 1.0.0-beta03, including:Support for Desktop TargetRetention Policy SettingsEnhanced Search with Suggestion ChipsShare Network Transactions DetailsGenerating cURL Commands for Network TransactionsLet’s dive in and explore what’s new!1. Support for Desktop TargetOne of the requested features was adding support for Desktop targets. With this new release, I am excited to announce that Inspektify now also workswith Desktop targets!What Developers Need to Know for Desktop TargetsWith the addition of desktop support, developers now have an easy way to monitor and inspect network traffic directly within desktop applications. Inspektify implements its default behavior for opening the Inspektify window, making it easy to access the network inspection tool without extra configuration. On mobile devices, the debug window opens by shaking your phone, and the debug window is opened. However, for desktop apps, detecting a ‘shake’ event isn’t possible. That’s why we’ve implemented a default keyboard shortcut for the desktop environment.By default, you can open the Inspektify window using the keyboard shortcut: Control + Shift + D. This shortcut works right out of the box, allowing quick access to the network inspektor on desktop targets.Customization Options:If you prefer to customize how and when the Inspektify window opens, you can override this behavior for desktop targets. By changing the PresentationType configuration to Custom, you gain full control when and where the Inspektify window appears. Just make sure to include the following call to open the Inspektify window as part of your custom solution.InspektifyKtor.startInspektify()2. Retention Policy SettingsIn the first version of the Inspektify library, the only way to remove cached network traffic data was by manually clicking the delete button. Now, Inspektify introduces Retention Policy Settings and gives you the flexibility to automatically remove network traffic that is no longer relevant.Key features of the Retention Policy:Session-based Retention: You can specify how many sessions to retain, with a limit of 1 to 20 sessions. For example, if you want to keep data from the last 5 sessions, Inspektify will automatically remove older sessions once the limit is reached. This ensures that only the most recent and relevant data is preserved.Time-based Retention: Alternatively, you can set the retention period based on days, with the option to retain data from 1 to 14 days. Once the specified number of days has passed, older data is automatically deleted, keeping your database clean and focused on recent network traffic.How to use it:You can configure the retention policy in your setup code. Here’s an example of how to set the retention policy to keep data from the last 3 sessions:install(InspektifyKtor) { dataRetentionPolicy = DataRetentionPolicy.SessionCount(3)}And here’s an example of how to set it to retain data for 7 days:install(InspektifyKtor) { dataRetentionPolicy = DataRetentionPolicy.DayDuration(7)}3. Enhanced Search with Suggestion ChipsNavigating through a large list of network transactions can be time-consuming, but Inspektify makes it easier with a new search feature. On the network transaction list screen, you can quickly search for specific network requests using keywords.To make searching even more efficient, Inspektify also provides suggestion chips. These suggestion chips are automatically generated based on the entire list of network transactions. The library scans the request method names (like GET, POST, etc.) and status responses (such as 200, 404, etc.), creating quick access buttons (chips) that you can tap or click to filter your transactions.This allows you to instantly narrow down your search based on method types or response statuses, saving you time and helping you find the exact data you need.Search with suggestion chips4. Share Network Transactions DetailsWe know that sharing network insights with team members or reporting bugs is an essential part of the development process. With this update, Inspektify provides an easy way to share the details of a single network transaction.How it works:For any recorded network transaction, you can now share it directly from the Network transaction details screen. This feature allows you to send detailed information about a specific transaction (including headers, response data, and more) to your team or a third-party service with just a few clicks.5. Generate cURL Commands for Network TransactionsWhen debugging APIs, it’s often helpful to replicate network calls outside your app. To make this easier, Inspektify now provides the option to generate and share a cURL command for any network transaction.What is cURL and why is it useful?cURL is a command-line tool used for making HTTP requests. By generating a cURL command from Inspektify, you can quickly replicate network requests in the terminal, test your API endpoints, or share it with other developers for faster debugging.How to use it:In the network transaction details screen, simply select the button labeled cURL. Inspektify will automatically generate a ready-to-use cURL command, which you can share on mobile targets or paste directly into your terminal app if you’re using desktop targets.",
  "image": "https://miro.medium.com/v2/resize:fit:1200/1*rQM06l3VYuoRCqOgGtfL1g.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cdiv\u003e\u003ca href=\"https://bvantur.medium.com/?source=post_page-----1dbea71d8708--------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003cp\u003e\u003cimg alt=\"Blaž Vantur\" src=\"https://miro.medium.com/v2/resize:fill:88:88/1*rQ0ljsPvkhPKOZ-weWj0tA.jpeg\" width=\"44\" height=\"44\" loading=\"lazy\" data-testid=\"authorPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003ca href=\"https://blog.kotlin-academy.com/?source=post_page-----1dbea71d8708--------------------------------\" rel=\"noopener  ugc nofollow\"\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003cp\u003e\u003cimg alt=\"Kt. Academy\" src=\"https://miro.medium.com/v2/resize:fill:48:48/1*2grDGjzH0tfX8XiaF4Izaw.png\" width=\"24\" height=\"24\" loading=\"lazy\" data-testid=\"publicationPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"706c\"\u003eSince the public release of \u003cstrong\u003eInspektify\u003c/strong\u003e, our Kotlin Multiplatform (KMP) network inspection library, a lot has changed and improved with it. Today, I’m excited to announce a new update that introduces several new features, making network debugging and inspection easier for teams working with Kotlin Multiplatform projects.\u003c/p\u003e\u003cp id=\"d53f\"\u003eIn this article, I will walk you through the latest features in Inspektify version \u003cstrong\u003e1.0.0-beta03\u003c/strong\u003e, including:\u003c/p\u003e\u003cul\u003e\u003cli id=\"19d0\"\u003e\u003cstrong\u003eSupport for Desktop Target\u003c/strong\u003e\u003c/li\u003e\u003cli id=\"eb31\"\u003e\u003cstrong\u003eRetention Policy Settings\u003c/strong\u003e\u003c/li\u003e\u003cli id=\"f811\"\u003e\u003cstrong\u003eEnhanced Search with Suggestion Chips\u003c/strong\u003e\u003c/li\u003e\u003cli id=\"d96f\"\u003e\u003cstrong\u003eShare Network Transactions Details\u003c/strong\u003e\u003c/li\u003e\u003cli id=\"3ce1\"\u003e\u003cstrong\u003eGenerating cURL Commands for Network Transactions\u003c/strong\u003e\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"d800\"\u003eLet’s dive in and explore what’s new!\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003ch2 id=\"9aec\"\u003e1. Support for Desktop Target\u003c/h2\u003e\u003cp id=\"ce8d\"\u003eOne of the requested features was adding support for Desktop targets. With this new release, I am excited to announce that Inspektify now also workswith \u003cstrong\u003eDesktop targets\u003c/strong\u003e!\u003c/p\u003e\u003ch2 id=\"41a7\"\u003eWhat Developers Need to Know for Desktop Targets\u003c/h2\u003e\u003cp id=\"43b1\"\u003eWith the addition of desktop support, developers now have an easy way to monitor and inspect network traffic directly within desktop applications. Inspektify implements its \u003cstrong\u003edefault behavior\u003c/strong\u003e for opening the Inspektify window, making it easy to access the network inspection tool without extra configuration. On mobile devices, the debug window opens by shaking your phone, and the debug window is opened. However, for desktop apps, detecting a ‘shake’ event isn’t possible. That’s why we’ve implemented a default keyboard shortcut for the desktop environment.\u003c/p\u003e\u003cp id=\"15f1\"\u003eBy default, you can open the Inspektify window using the \u003cstrong\u003ekeyboard shortcut: \u003cem\u003eControl + Shift + D\u003c/em\u003e\u003c/strong\u003e. This shortcut works right out of the box, allowing quick access to the network inspektor on desktop targets.\u003c/p\u003e\u003ch2 id=\"4543\"\u003eCustomization Options:\u003c/h2\u003e\u003cp id=\"185d\"\u003eIf you prefer to customize how and when the Inspektify window opens, you can override this behavior for desktop targets. By changing the \u003ccode\u003ePresentationType\u003c/code\u003e configuration to \u003ccode\u003eCustom\u003c/code\u003e, you gain full control when and where the Inspektify window appears. Just make sure to include the following call to open the Inspektify window as part of your custom solution.\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"f7a2\"\u003eInspektifyKtor.startInspektify()\u003c/span\u003e\u003c/pre\u003e\u003ch2 id=\"5cb5\"\u003e2. \u003cstrong\u003eRetention Policy Settings\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"2453\"\u003eIn the first version of the Inspektify library, the only way to remove cached network traffic data was by manually clicking the delete button. Now, Inspektify introduces \u003cstrong\u003eRetention Policy Settings\u003c/strong\u003e and gives you the flexibility to automatically remove network traffic that is no longer relevant.\u003c/p\u003e\u003ch2 id=\"1ae2\"\u003eKey features of the Retention Policy:\u003c/h2\u003e\u003cul\u003e\u003cli id=\"7416\"\u003e\u003cstrong\u003eSession-based Retention\u003c/strong\u003e: You can specify how many sessions to retain, with a limit of \u003cstrong\u003e1 to 20 sessions\u003c/strong\u003e. For example, if you want to keep data from the last 5 sessions, Inspektify will automatically remove older sessions once the limit is reached. This ensures that only the most recent and relevant data is preserved.\u003c/li\u003e\u003cli id=\"7914\"\u003e\u003cstrong\u003eTime-based Retention\u003c/strong\u003e: Alternatively, you can set the retention period based on \u003cstrong\u003edays\u003c/strong\u003e, with the option to retain data from \u003cstrong\u003e1 to 14 days\u003c/strong\u003e. Once the specified number of days has passed, older data is automatically deleted, keeping your database clean and focused on recent network traffic.\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"8672\"\u003eHow to use it:\u003c/h2\u003e\u003cp id=\"3d69\"\u003eYou can configure the retention policy in your setup code. Here’s an example of how to set the retention policy to keep data from the last 3 sessions:\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"a4ad\"\u003einstall(InspektifyKtor) {\u003cbr/\u003e    dataRetentionPolicy = DataRetentionPolicy.SessionCount(3)\u003cbr/\u003e}\u003c/span\u003e\u003c/pre\u003e\u003cp id=\"fec3\"\u003eAnd here’s an example of how to set it to retain data for 7 days:\u003c/p\u003e\u003cpre\u003e\u003cspan id=\"6a44\"\u003einstall(InspektifyKtor) {\u003cbr/\u003e    dataRetentionPolicy = DataRetentionPolicy.DayDuration(7)\u003cbr/\u003e}\u003c/span\u003e\u003c/pre\u003e\u003ch2 id=\"8932\"\u003e3. Enhanced Search with Suggestion Chips\u003c/h2\u003e\u003cp id=\"8693\"\u003eNavigating through a large list of network transactions can be time-consuming, but \u003cstrong\u003eInspektify\u003c/strong\u003e makes it easier with a new search feature. On the \u003cstrong\u003enetwork transaction list\u003c/strong\u003e screen, you can quickly search for specific network requests using keywords.\u003c/p\u003e\u003cp id=\"5a72\"\u003eTo make searching even more efficient, Inspektify also provides \u003cstrong\u003esuggestion chips\u003c/strong\u003e. These suggestion chips are automatically generated based on the entire list of network transactions. The library scans the request \u003cstrong\u003emethod names\u003c/strong\u003e (like GET, POST, etc.) and \u003cstrong\u003estatus responses\u003c/strong\u003e (such as 200, 404, etc.), creating quick access buttons (chips) that you can tap or click to filter your transactions.\u003c/p\u003e\u003cp id=\"72cb\"\u003eThis allows you to instantly narrow down your search based on method types or response statuses, saving you time and helping you find the exact data you need.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eSearch with suggestion chips\u003c/figcaption\u003e\u003c/figure\u003e\u003ch2 id=\"3c95\"\u003e4. Share Network Transactions Details\u003c/h2\u003e\u003cp id=\"5afb\"\u003eWe know that sharing network insights with team members or reporting bugs is an essential part of the development process. With this update, Inspektify provides an easy way to share the details of a \u003cstrong\u003esingle network transaction\u003c/strong\u003e.\u003c/p\u003e\u003ch2 id=\"6843\"\u003eHow it works:\u003c/h2\u003e\u003cp id=\"688b\"\u003eFor any recorded network transaction, you can now share it directly from the Network transaction details screen. This feature allows you to send detailed information about a specific transaction (including headers, response data, and more) to your team or a third-party service with just a few clicks.\u003c/p\u003e\u003ch2 id=\"ccce\"\u003e5. Generate cURL Commands for Network Transactions\u003c/h2\u003e\u003cp id=\"844c\"\u003eWhen debugging APIs, it’s often helpful to replicate network calls outside your app. To make this easier, Inspektify now provides the option to \u003cstrong\u003egenerate and share a cURL command\u003c/strong\u003e for any network transaction.\u003c/p\u003e\u003ch2 id=\"661a\"\u003eWhat is cURL and why is it useful?\u003c/h2\u003e\u003cp id=\"d511\"\u003ecURL is a command-line tool used for making HTTP requests. By generating a cURL command from Inspektify, you can quickly replicate network requests in the terminal, test your API endpoints, or share it with other developers for faster debugging.\u003c/p\u003e\u003ch2 id=\"96e0\"\u003eHow to use it:\u003c/h2\u003e\u003cp id=\"8eb2\"\u003eIn the network transaction details screen, simply select the button labeled \u003cstrong\u003ecURL\u003c/strong\u003e. Inspektify will automatically generate a ready-to-use cURL command, which you can share on mobile targets or paste directly into your terminal app if you’re using desktop targets.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": "2024-10-10T08:49:46.568Z",
  "modifiedTime": null
}
