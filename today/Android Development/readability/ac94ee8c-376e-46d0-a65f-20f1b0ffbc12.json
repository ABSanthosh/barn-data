{
  "id": "ac94ee8c-376e-46d0-a65f-20f1b0ffbc12",
  "title": "PopcornView",
  "link": "https://android-arsenal.com/details/1/8483",
  "description": "PopcornView is a Android Library generates popcorn-like animation.",
  "author": "",
  "published": "Mon, 11 Mar 2024 04:52:52 +0300",
  "source": "https://feeds.feedburner.com/Android_Arsenal",
  "categories": null,
  "byline": "Vladislav Bauer",
  "length": 3409,
  "excerpt": "Views | PopcornView by Lou Park (gold24park)",
  "siteName": "Android Arsenal",
  "favicon": "https://android-arsenal.com/favicon.png",
  "text": "???? PopcornView A Lightweight Popping Animation Android Library! Easy to use Small Size Highly Customizable Getting Started To use this library in your project, add the following dependency to your build.gradle file: allprojects { repositories { ... maven { url 'https://jitpack.io' } } } dependencies { implementation 'com.github.gold24park:PopcornView:release-1.0.2' } Usage Add the PopcornView to your layout XML file: \u003ccom.gold24park.popcornview.popcornview.PopcornView android:id=\"@+id/popcornView\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" app:popcornAmount=\"30\" /\u003e Or, configure the popcorn properties and start the animation programmatically: val popcornView = findViewById\u003cPopcornView\u003e(R.id.popcornView) val shape = PopcornShape.DrawableShape( size = 100F, drawable = ContextCompat.getDrawable(context, R.drawable.popcorn)!!, ) popcornView.start( shape = shape, amount = 40, interval = 10, ) gravity: The acceleration due to gravity in pixels per second squared. (Default: 0.37F) minVelocity: The minimum velocity of the popcorn in pixels per second. (Default: 20) maxVelocity: The maximum velocity of the popcorn in pixels per second. (Default: 40) angleRangeStart: The minimum launch angle of the popcorn in degrees. (Default: 45) angleRangeEnd: The maximum launch angle of the popcorn in degrees. (Default: 135) elasticity: The elasticity of the collisions between the popcorn and the walls. (Default: 0.6F) friction: The friction coefficient of the popcorn on the walls. (Default: 0.39F) ttl: The time-to-live of the popcorn in milliseconds. (Default: 30,000L) fadeout: Whether the popcorn should fade out before disappearing. (Default: true) Customize Shapes with PopcornShape TextShape TextShape represents a shape that is drawn as text. It has the following properties: val shape = PopcornShape.TextShape( size = 100F, text = \"Pop!\", textColor = ContextCompat.getColor(this, R.color.yellow) ) size (required): The size of the text to be drawn. text (required): The text to be drawn. textColor (optional): The color of the text to be drawn. (Default: Color.BLACK). DrawableShape val shape = PopcornShape.DrawableShape( size = 100F, drawable = ContextCompat.getDrawable(this, R.drawable.popcorn)!!, ) DrawableShape represents a shape that is drawn as a drawable. It has the following properties: size (required): The size of the drawable to be drawn. drawable (required): The drawable to be drawn. Setting position to pop You can specify the position where the popcorn will be generated from in the start() method. PopcornView.start(...startX: Float, startY): Generates popcorn from the coordinates (startX, startY). Alternatively, you can use the StartPosition: StartPosition StartPosition( xAxis: XAxisPosition.CENTER, yAxis: YAxisPosition.CENTER, ) xAxis: XAxisPosition.LEFT | XAxisPosition.CENTER | XAxisPosition.RIGHT yAxis: YAxisPosition.TOP | YAxisPosition.CENTER | YAxisPosition.BOTTOM Contribute You are welcome to contribute to this project. If you find any bugs, have any feature requests or suggestions, or just want to improve the code, feel free to open an issue or submit a pull request. Your contributions are greatly appreciated. License This project is licensed under the terms of the MIT license. See LICENSE for more information.",
  "image": "https://raw.githubusercontent.com/gold24park/PopcornView/main/images/emoji.gif",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"description\"\u003e\u003carticle\u003e\u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003e???? PopcornView\u003c/h2\u003e\u003c/p\u003e  \u003cp dir=\"auto\"\u003eA Lightweight Popping Animation Android Library!\u003c/p\u003e \u003cul dir=\"auto\"\u003e \u003cli\u003eEasy to use\u003c/li\u003e \u003cli\u003eSmall Size\u003c/li\u003e \u003cli\u003eHighly Customizable\u003c/li\u003e \u003c/ul\u003e  \u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003eGetting Started\u003c/h2\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003eTo use this library in your project, add the following dependency to your build.gradle file:\u003c/p\u003e \u003cdiv data-snippet-clipboard-copy-content=\"allprojects { repositories { ... maven { url \u0026#39;https://jitpack.io\u0026#39; } } }\"\u003e\u003cpre\u003e\u003ccode\u003eallprojects {\n    repositories {\n        ...\n        maven { url \u0026#39;https://jitpack.io\u0026#39; }\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e \u003cdiv data-snippet-clipboard-copy-content=\"dependencies { implementation \u0026#39;com.github.gold24park:PopcornView:release-1.0.2\u0026#39; }\"\u003e\u003cpre lang=\"agsl\"\u003e\u003ccode\u003edependencies {\n    implementation \u0026#39;com.github.gold24park:PopcornView:release-1.0.2\u0026#39;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e \u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003eUsage\u003c/h2\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003eAdd the PopcornView to your layout XML file:\u003c/p\u003e \u003cdiv data-snippet-clipboard-copy-content=\"\u0026lt;com.gold24park.popcornview.popcornview.PopcornView android:id=\u0026#34;@+id/popcornView\u0026#34; android:layout_width=\u0026#34;match_parent\u0026#34; android:layout_height=\u0026#34;match_parent\u0026#34; app:popcornAmount=\u0026#34;30\u0026#34; /\u0026gt;\"\u003e\u003cpre lang=\"agsl\"\u003e\u003ccode\u003e\u0026lt;com.gold24park.popcornview.popcornview.PopcornView\n    android:id=\u0026#34;@+id/popcornView\u0026#34;\n    android:layout_width=\u0026#34;match_parent\u0026#34;\n    android:layout_height=\u0026#34;match_parent\u0026#34;\n    app:popcornAmount=\u0026#34;30\u0026#34; /\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e \u003cp dir=\"auto\"\u003eOr, configure the popcorn properties and start the animation programmatically:\u003c/p\u003e \u003cdiv data-snippet-clipboard-copy-content=\"val popcornView = findViewById\u0026lt;PopcornView\u0026gt;(R.id.popcornView) val shape = PopcornShape.DrawableShape( size = 100F, drawable = ContextCompat.getDrawable(context, R.drawable.popcorn)!!, ) popcornView.start( shape = shape, amount = 40, interval = 10, )\"\u003e\u003cpre\u003e\u003ccode\u003eval popcornView = findViewById\u0026lt;PopcornView\u0026gt;(R.id.popcornView)\nval shape = PopcornShape.DrawableShape(\n    size = 100F,\n    drawable = ContextCompat.getDrawable(context, R.drawable.popcorn)!!,\n)\npopcornView.start(\n    shape = shape,\n    amount = 40,\n    interval = 10,\n)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e \u003cul dir=\"auto\"\u003e \u003cli\u003e\u003ccode\u003egravity\u003c/code\u003e: The acceleration due to gravity in pixels per second squared. (Default: 0.37F)\u003c/li\u003e \u003cli\u003e\u003ccode\u003eminVelocity\u003c/code\u003e: The minimum velocity of the popcorn in pixels per second. (Default: 20)\u003c/li\u003e \u003cli\u003e\u003ccode\u003emaxVelocity\u003c/code\u003e: The maximum velocity of the popcorn in pixels per second. (Default: 40)\u003c/li\u003e \u003cli\u003e\u003ccode\u003eangleRangeStart\u003c/code\u003e: The minimum launch angle of the popcorn in degrees. (Default: 45)\u003c/li\u003e \u003cli\u003e\u003ccode\u003eangleRangeEnd\u003c/code\u003e: The maximum launch angle of the popcorn in degrees. (Default: 135)\u003c/li\u003e \u003cli\u003e\u003ccode\u003eelasticity\u003c/code\u003e: The elasticity of the collisions between the popcorn and the walls. (Default: 0.6F)\u003c/li\u003e \u003cli\u003e\u003ccode\u003efriction\u003c/code\u003e: The friction coefficient of the popcorn on the walls. (Default: 0.39F)\u003c/li\u003e \u003cli\u003e\u003ccode\u003ettl\u003c/code\u003e: The time-to-live of the popcorn in milliseconds. (Default: 30,000L)\u003c/li\u003e \u003cli\u003e\u003ccode\u003efadeout\u003c/code\u003e: Whether the popcorn should fade out before disappearing. (Default: true)\u003c/li\u003e \u003c/ul\u003e \u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003eCustomize Shapes with PopcornShape\u003c/h2\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003e\u003ch3 dir=\"auto\"\u003eTextShape\u003c/h3\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003eTextShape represents a shape that is drawn as text. It has the following properties:\u003c/p\u003e \u003cdiv data-snippet-clipboard-copy-content=\"val shape = PopcornShape.TextShape( size = 100F, text = \u0026#34;Pop!\u0026#34;, textColor = ContextCompat.getColor(this, R.color.yellow) )\"\u003e\u003cpre\u003e\u003ccode\u003eval shape = PopcornShape.TextShape(\n    size = 100F,\n    text = \u0026#34;Pop!\u0026#34;,\n    textColor = ContextCompat.getColor(this, R.color.yellow)\n)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e \u003cul dir=\"auto\"\u003e \u003cli\u003e\u003ccode\u003esize\u003c/code\u003e (required): The size of the text to be drawn.\u003c/li\u003e \u003cli\u003e\u003ccode\u003etext\u003c/code\u003e (required): The text to be drawn.\u003c/li\u003e \u003cli\u003e\u003ccode\u003etextColor\u003c/code\u003e (optional): The color of the text to be drawn. (Default: Color.BLACK).\u003c/li\u003e \u003c/ul\u003e \u003cp dir=\"auto\"\u003e\u003ch3 dir=\"auto\"\u003eDrawableShape\u003c/h3\u003e\u003c/p\u003e \u003cdiv data-snippet-clipboard-copy-content=\"val shape = PopcornShape.DrawableShape( size = 100F, drawable = ContextCompat.getDrawable(this, R.drawable.popcorn)!!, )\"\u003e\u003cpre\u003e\u003ccode\u003eval shape = PopcornShape.DrawableShape(\n    size = 100F,\n    drawable = ContextCompat.getDrawable(this, R.drawable.popcorn)!!,\n)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e \u003cp dir=\"auto\"\u003e\u003ccode\u003eDrawableShape\u003c/code\u003e represents a shape that is drawn as a drawable. It has the following properties:\u003c/p\u003e \u003cul dir=\"auto\"\u003e \u003cli\u003e\u003ccode\u003esize\u003c/code\u003e (required): The size of the drawable to be drawn.\u003c/li\u003e \u003cli\u003e\u003ccode\u003edrawable\u003c/code\u003e (required): The drawable to be drawn.\u003c/li\u003e \u003c/ul\u003e \u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003eSetting position to pop\u003c/h2\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003eYou can specify the position where the popcorn will be generated from in the \u003ccode\u003estart()\u003c/code\u003e method.\u003c/p\u003e \u003cul dir=\"auto\"\u003e \u003cli\u003e\u003ccode\u003ePopcornView.start(...startX: Float, startY)\u003c/code\u003e: Generates popcorn from the coordinates (startX, startY).\u003c/li\u003e \u003c/ul\u003e \u003cp dir=\"auto\"\u003eAlternatively, you can use the \u003ccode\u003eStartPosition\u003c/code\u003e:\u003c/p\u003e \u003cp dir=\"auto\"\u003e\u003ch3 dir=\"auto\"\u003eStartPosition\u003c/h3\u003e\u003c/p\u003e \u003cdiv data-snippet-clipboard-copy-content=\"StartPosition( xAxis: XAxisPosition.CENTER, yAxis: YAxisPosition.CENTER, )\"\u003e\u003cpre\u003e\u003ccode\u003eStartPosition(\n    xAxis: XAxisPosition.CENTER,\n    yAxis: YAxisPosition.CENTER,\n)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e \u003cul dir=\"auto\"\u003e \u003cli\u003e\u003ccode\u003exAxis\u003c/code\u003e: XAxisPosition.LEFT | XAxisPosition.CENTER | XAxisPosition.RIGHT\u003c/li\u003e \u003cli\u003e\u003ccode\u003eyAxis\u003c/code\u003e: YAxisPosition.TOP | YAxisPosition.CENTER | YAxisPosition.BOTTOM\u003c/li\u003e \u003c/ul\u003e \u003chr/\u003e \u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003eContribute\u003c/h2\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003eYou are welcome to contribute to this project. If you find any bugs, have any feature requests or suggestions, or just want to improve the code, feel free to open an issue or submit a pull request. Your contributions are greatly appreciated.\u003c/p\u003e \u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003eLicense\u003c/h2\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003eThis project is licensed under the terms of the MIT license. See \u003ca href=\"https://github.com/gold24park/PopcornView/blob/main/LICENSE\" rel=\"nofollow\" target=\"_blank\"\u003eLICENSE\u003c/a\u003e for more information.\u003c/p\u003e \u003c/article\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": null,
  "modifiedTime": null
}
