{
  "id": "78a6533f-346e-436d-bcc1-bea4f8f040f9",
  "title": "Android Weekly Issue #645",
  "link": "https://androidweekly.net/issues/issue-645/rss.xml",
  "description": "Articles \u0026 Tutorials Sponsored Your releases will never be fully automated The more you can automate away the busywork of software development and mobile releases, the more you’ll be able to focus on actually building and improving your product. But there is no panacea coming. Not even the largest language model can do the hard work of strategizing, planning, adapting, and releasing complex apps and systems. AI and automation are tools we wield, not magic spells that can create and ship any idea we have. Implementing Overslide interaction in Jetpack Compose sinasamaki shows how to add a stretchy animation on a slider. Unplugged DI - DI.Y Basics Sergej Shafarenka considers what dependency injection looks like without a framework. Sponsored Genius Scan SDK: a document scanner in your app Embed a reliable document scanner with OCR in your app, enabling your customers to capture high-quality, legible documents that you can process effortlessly. Hundreds of companies and millions of users trust the Genius Scan technology. Supports Android, iOS, and cross-platform frameworks. Making my concurrent algorithm 6000% better Would you trade a little bit of memory for a whole lot of concurrency? CharlieTap shares the concept behind a concurrent data structure implemented in a Kotlin Multiplatform library. Using Kotlin Reflection to Automate Compose Navigation Jimly Asshiddiqy examines the new Type Safety that was introduced in Compose Navigation. Analyzing App Startup and Shutdown details in Android 15 Tomáš Repčík shows how ApplicationExitInfo and the new ApplicationStartInfo can be used to analyze the causes of why and how the app was launched. CameraX update makes dual concurrent camera even easier CameraX gets an update to its Dual Concurrent Camera feature, making it even easier to integrate this feature into your app. Creating a responsive dashboard layout for JetLagged Using Jetpack Compose enables you to build a responsive dashboard-like layouts by leveraging several different techniques. First Impressions of Compose Multiplatform Eevis Panula shares first impressions about using Compose Multiplatform. Reusable Styles in Compose Donovan LaDuke looks at several ways to build reusable styles in Jetpack Compose. Using popBackStack()? Then Your App Likely Has a Bug Kai Cilliers shares a better understanding of how popBackStack() and navigateUp() behave. That Weird Compose Crash theapache64 writes some raw notes about how to track down a curious issue in Jetpack Compose. Place a sponsored post Advertise your Android dev course to over 80k readers We reach out to more than 80k Android developers around the world, every week, through our email newsletter and social media channels. Advertise your Android development course! Libraries \u0026 Code Jentry Jentry is a command line tool to analyze Kotlin/Java public information inside the jar/aar files XLauncherIcons Sample App: Changing Launcher Icon Programmatically News Gradle Build Tool - 2024 Software Developer Survey This year's survey for the Gradle build tool. Compose Multiplatform 1.7.0 Released The 1.7.0 release brings more components to common code, support for type-safe navigation, significant performance improvements on iOS, and changes from the latest Jetpack Compose update. Chrome on Android to support third-party autofill services natively Chrome on Android will soon allow third-party autofill services (like password managers) to natively autofill forms on websites. Videos \u0026 Podcasts Applying the Builder Pattern in Kotlin Dave Leeds shares a traditional version of the Builder Pattern, and then considers how to improve upon it with Kotlin's language and library features. Beyond The Success Of Kotlin / The Documentary by EngX This is how the story of Kotlin began. What led to the success of Kotlin, and what were the costs to earn its spot in the industry? In this documentary, you will hear the story from the source. Adaptive Learn more about adaptive on all form factors like tablets and foldables, including using adaptive layouts, adopting the Ink API, and supporting desktop windowing. Region specific resources and broken localization  with Nav Singh Nav Singh shares a recent experience with an application's localization support being broken due to resource configurations. A Beginner Guide to Compose Locals! Charfaoui Younes looks at a feature of Compose that allows us to share some objects within the Compose tree to achieve many behaviors;. Chucker with Nicola Corti Nicola dives into the world of Chucker, an open-source library that helps you debug network requests in Android. Custom Adaptive layouts in Compose Learn the principles for how to build Adaptive layouts in Compose following the phase system, with examples of custom layouts using tips and tricks to bring designs to life. Integrate Native iOS Libraries in a Kotlin Multiplatform with Cocoapods! Learn how to integrate native iOS Libraries in a Kotlin Multiplatform app with Cocoapods. Roberto Orgiu Shares Secrets for Mastering Large Screens Code with the Italians, along with guest, Roberto Orgiu, AndroidDev Relations Engineer at Google, as they explore the cutting-edge developments shaping the future of mobile and foldable devices. Preferences DataStore - Best Way Of Storing Small Data In Your App Daniel Atitienei looks at Preferences DataStore, which is ideal for storing user preferences such as basic app configurations. droidcon New York 2024 Videos of all the presentations from droidcon New York 2024.",
  "author": "",
  "published": "Sun, 20 Oct 2024 11:46:48 +0000",
  "source": "https://androidweekly.net/rss.xml",
  "categories": null,
  "byline": "",
  "length": 1698,
  "excerpt": "",
  "siteName": "",
  "favicon": "",
  "text": "The more you can automate away the busywork of software development and mobile releases, the more you’ll be able to focus on actually building and improving your product. But there is no panacea coming. Not even the largest language model can do the hard work of strategizing, planning, adapting, and releasing complex apps and systems. AI and automation are tools we wield, not magic spells that can create and ship any idea we have. Embed a reliable document scanner with OCR in your app, enabling your customers to capture high-quality, legible documents that you can process effortlessly. Hundreds of companies and millions of users trust the Genius Scan technology. Supports Android, iOS, and cross-platform frameworks. Would you trade a little bit of memory for a whole lot of concurrency? CharlieTap shares the concept behind a concurrent data structure implemented in a Kotlin Multiplatform library. Jentry is a command line tool to analyze Kotlin/Java public information inside the jar/aar files The 1.7.0 release brings more components to common code, support for type-safe navigation, significant performance improvements on iOS, and changes from the latest Jetpack Compose update. Learn more about adaptive on all form factors like tablets and foldables, including using adaptive layouts, adopting the Ink API, and supporting desktop windowing. Nicola dives into the world of Chucker, an open-source library that helps you debug network requests in Android. Learn the principles for how to build Adaptive layouts in Compose following the phase system, with examples of custom layouts using tips and tricks to bring designs to life. ]]\u003e",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://www.runway.team/blog/ai-will-never-build-your-app-and-your-releases-will-never-be-fully-automated?utm_source=newsletter\u0026amp;utm_medium=android-weekly\u0026amp;utm_campaign=oct-sponsors\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/6714ec/863c93bc615a009e3d/square_square_square_runway.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003cdiv\u003e\u003cp\u003eThe more you can automate away the busywork of software development and mobile releases, the more you’ll be able to focus on actually building and improving your product. But there is no panacea coming. Not even the largest language model can do the hard work of strategizing, planning, adapting, and releasing complex apps and systems. AI and automation are tools we wield, not magic spells that can create and ship any idea we have.\n\n\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\n\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://geniusscansdk.com/?utm_source=android_weekly\u0026amp;utm_medium=referral\u0026amp;utm_campaign=android_weekly_2024_10_20\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/6714ec/b03c93bc615a009e45/square_Rendered-85w.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003cdiv\u003e\u003cp\u003eEmbed a reliable document scanner with OCR in your app, enabling your customers to capture high-quality, legible documents that you can process effortlessly. Hundreds of companies and millions of users trust the Genius Scan technology. Supports Android, iOS, and cross-platform frameworks.\n\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp\u003eWould you trade a little bit of memory for a whole lot of concurrency? CharlieTap shares the concept behind a concurrent data structure implemented in a Kotlin Multiplatform library.\n\u003c/p\u003e\u003c/div\u003e\n\n\n\n\n\n\n\n\n\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://androidweekly.net/jobs/new\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/6714ed/143c93bc615a009e54/square_aw.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cp\u003eJentry is a command line tool to analyze Kotlin/Java public information inside the jar/aar files \n\u003c/p\u003e\u003c/div\u003e\n\n\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://community.gradle.org/surveys/developer-survey/#take-the-survey\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/671446/213c93bc615a00887f/square_Bildschirmfoto_2024-10-20_um_13.45.08.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp\u003eThe 1.7.0 release brings more components to common code, support for type-safe navigation, significant performance improvements on iOS, and changes from the latest Jetpack Compose update.\n\u003c/p\u003e\u003c/div\u003e\n\n\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://www.youtube.com/watch?v=7lEDGpa7sGw\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/67143b/8c3c93bc615a00877a/square_Bildschirmfoto_2024-10-20_um_13.46.06.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cp\u003eLearn more about adaptive on all form factors like tablets and foldables, including using adaptive layouts, adopting the Ink API, and supporting desktop windowing.\n\n\u003c/p\u003e\u003c/div\u003e\n\n\n\u003cdiv\u003e\u003cp\u003eNicola dives into the world of Chucker, an open-source library that helps you debug network requests in Android.\n\u003c/p\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cp\u003eLearn the principles for how to build Adaptive layouts in Compose following the phase system, with examples of custom layouts using tips and tricks to bring designs to life.\n\n\u003c/p\u003e\u003c/div\u003e\n\n\n\n\n]]\u0026gt;\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": null,
  "modifiedTime": null
}
