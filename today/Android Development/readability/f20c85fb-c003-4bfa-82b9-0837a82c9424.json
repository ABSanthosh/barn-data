{
  "id": "f20c85fb-c003-4bfa-82b9-0837a82c9424",
  "title": "SAP integrated NavigationSuiteScaffold in just 5 minutes to create adaptive navigation UI",
  "link": "http://android-developers.googleblog.com/2024/09/sap-integrates-compose-adaptive-api-for-responsive-navigation-ui.html",
  "description": "",
  "author": "Android Developers",
  "published": "2024-09-09T09:59:00.000-07:00",
  "source": "http://feeds.feedburner.com/blogspot/hsDu",
  "categories": [
    "case study",
    "Compose",
    "Jetpack Compose"
  ],
  "byline": "",
  "length": 6174,
  "excerpt": "News and insights on the Android platform, developer tools, and events.",
  "siteName": "Android Developers Blog",
  "favicon": "",
  "text": "Posted by Alex Vanyo – Developer Relations Engineer SAP Mobile Start is an app that centralizes access to SAP's mobile business suite, a hub for users to keep track of their companies’ processes and data so they can efficiently manage their daily to-dos while on the move. Recently, SAP Mobile Start developers prioritized building an adaptive app that looks great across devices, including tablets and foldables, to create a more seamless user experience. Using Jetpack Compose and Material 3 design, the team efficiently implemented intuitive, user-friendly features to increase accessibility across its users’ preferred devices. Adaptive design across devices With over 300 million daily active users on foldables, tablets, and Chromebooks today, building apps that adapt to varied screen sizes is important for providing an optimal user experience. But simply stretching the UI to fit different screen sizes can drastically alter it from its original form, obscuring the interface and impairing the user experience. “We focused on situations where we could make better use of available space on large screens,” said Laura Bergmann, UX designer for SAP. “We wanted to get rid of screens that are stretched from edge to edge, full-screen drill-downs or dialogs, and use space more efficiently.” Now, after optimizing for different devices, SAP Mobile Start dynamically adjusts its layouts by swapping components and showing or hiding content based on the available window size instead of stretching UI elements to match a device's screen. The SAP team also implemented canonical layouts, common UI designs that split a screen into panes according to its size. By separating content into panes, SAP’s users can manage their business workflows more productively. Depending on the window size class, the supporting pane adjusts the UI without additional custom logic. For example, compact windows typically utilize one pane, while larger windows can utilize multiple. “Adopting the new canonical layouts from Google helped us focus more on designing unique app capabilities for SAP’s business scenarios,” said Laura. “With the available navigational elements and patterns, we can now channel our efforts into creating a more engaging user experience without reinventing the wheel.” SAP developers started by implementing supporting panes to create multi-pane layouts that efficiently utilize on-screen space. The first place developers added supporting panes was on the app’s “To-Do” details page. To-dos used to be managed in a single pane, making it difficult to review the comments and tickets simultaneously. Now, tickets and comments are reviewed in primary and secondary panes on the same screen using SupportingPaneScaffold. Fast implementation using Compose Material 3 Adaptive library SAP Mobile Start is built entirely with Jetpack Compose, Android’s modern declarative toolkit for building native UI. Compose helped SAP developers build new UI faster and easier than ever before thanks to composables, reusable code blocks for building common UI components. The team also used Compose Navigation to integrate seamless navigation between composables, optimizing travel between new UI on all screens. It took developers only five minutes to integrate the NavigationSuiteScaffold from the new Compose Material 3 adaptive library, rapidly adapting the app’s navigation UI to different window sizes, switching between a bottom navigation bar and a vertical navigation rail. It also eliminated the need for custom logic, which previously determined the navigation component based on various window size classes. The NavigationSuiteScaffold also reduced the custom navigation UI logic code by 59%, from 379 lines to 156. “Jetpack Compose simplified UI development,” said Aditya Arora, lead Android developer. “Its declarative nature, coupled with built-in support for Material Design and dark theme, significantly increased our development efficiency. By simply describing the desired UI, we've reduced code complexity and improved maintainability.” SAP developers used live edit and layout inspector in Android Studio to test and optimize the app for large screens. These features were “total game changers” for the SAP team because they helped iterate and inspect layout issues faster when optimizing for new screens. With its @PreviewScreenSizes annotation and device streaming powered by Firebase, Jetpack Compose also made testing the app's UI across various screen sizes easier. SAP developers look forward to Compose Screenshot Testing being completed, which will further streamline UI testing and ensure greater visual consistency within the app. Using Jetpack Compose, SAP developers also quickly and easily implemented new Material 3 design concepts from the Compose M3 Adaptive library. Material 3 design emphasizes personalizing the app experience, improving interactions with modern visual aesthetics. Compose's flexibility made replacing the standard Material Theme with their own custom Fiori Horizon Theme simple, ensuring a consistent visual appearance across SAP apps. “As early adopters of the Compose M3 Adaptive library, we collaborated with Google to refine the API,” said Aditya. “Since our app is completely Compose-based, leveraging the new Compose Material 3 Adaptive library was a piece of cake.” As large-screen devices like tablets, foldables, and Chromebooks become more popular, building layouts that adapt to varied screen sizes becomes increasingly crucial. For SAP Mobile Start developers, reimagining their app across devices using Jetpack Compose and Material 3 design guidelines was simple. Using Android’s collection of tools and resources, creating adaptive UIs for all the new form factors hitting the market today is faster and easier than ever. “Optimizing for large screens is crucial. The market for tablets, foldables, and Chromebooks is booming. Don't miss out on this opportunity to improve your user experience and expand your app's reach,” said Aditya. Get started Learn how to improve your UX by optimizing for large screens and foldables using Jetpack Compose and Material 3 design.",
  "image": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiBzW7JV84Qr9OyMrtdTAkzQmXZEdgVW_IPoSdPqumWq7OzNXus8EKI0658MD8mTe97-YURygLNuOSvRZjFCD2plbvoYogBC_TSg_g7bd45PueLMk2eUEPjWGWQG4y_j5SCu4TGkMiAXLjttq9sKzMBATNdCSL9Ax55vS92yNbrftfTJsAAmfxw0IxG00w/w1200-h630-p-k-no-nu/4%20%284%29.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\u003cmeta content=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiBzW7JV84Qr9OyMrtdTAkzQmXZEdgVW_IPoSdPqumWq7OzNXus8EKI0658MD8mTe97-YURygLNuOSvRZjFCD2plbvoYogBC_TSg_g7bd45PueLMk2eUEPjWGWQG4y_j5SCu4TGkMiAXLjttq9sKzMBATNdCSL9Ax55vS92yNbrftfTJsAAmfxw0IxG00w/s1600/4%20%284%29.png\" name=\"twitter:image\"/\u003e\n\u003cp\u003e\n\n\u003cem\u003ePosted by \u003cauthor\u003eAlex Vanyo – Developer Relations Engineer\u003c/author\u003e\u003c/em\u003e\n\n\u003ca href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiBzW7JV84Qr9OyMrtdTAkzQmXZEdgVW_IPoSdPqumWq7OzNXus8EKI0658MD8mTe97-YURygLNuOSvRZjFCD2plbvoYogBC_TSg_g7bd45PueLMk2eUEPjWGWQG4y_j5SCu4TGkMiAXLjttq9sKzMBATNdCSL9Ax55vS92yNbrftfTJsAAmfxw0IxG00w/s1600/4%20%284%29.png\"\u003e\u003cimg data-original-height=\"800\" data-original-width=\"100%\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiBzW7JV84Qr9OyMrtdTAkzQmXZEdgVW_IPoSdPqumWq7OzNXus8EKI0658MD8mTe97-YURygLNuOSvRZjFCD2plbvoYogBC_TSg_g7bd45PueLMk2eUEPjWGWQG4y_j5SCu4TGkMiAXLjttq9sKzMBATNdCSL9Ax55vS92yNbrftfTJsAAmfxw0IxG00w/s1600/4%20%284%29.png\"/\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://play.google.com/store/apps/details?id=com.sap.mobile.apps.sapstart\u0026amp;hl=en_US\u0026amp;pli=1\" target=\"_blank\"\u003eSAP Mobile Start\u003c/a\u003e is an app that centralizes access to SAP\u0026#39;s mobile business suite, a hub for users to keep track of their companies’ processes and data so they can efficiently manage their daily to-dos while on the move.\u003c/p\u003e\n\n\u003cp\u003eRecently, SAP Mobile Start developers prioritized building an adaptive app that looks great across devices, including tablets and foldables, to create a more seamless user experience. Using Jetpack Compose and Material 3 design, the team efficiently implemented intuitive, user-friendly features to increase accessibility across its users’ preferred devices.\u003c/p\u003e\u003cbr/\u003e\n\n\u003ciframe allowfullscreen=\"\" height=\"398\" src=\"https://www.youtube.com/embed/Nwnj01s-gOo\" width=\"100%\" youtube-src-id=\"Nwnj01s-gOo\"\u003e\u003c/iframe\u003e\n\n\u003ch3\u003eAdaptive design across devices\u003c/h3\u003e\n\n\u003cp\u003eWith over 300 million daily active users on foldables, tablets, and Chromebooks today, building apps that adapt to varied screen sizes is important for providing an optimal user experience. But simply stretching the UI to fit different screen sizes can drastically alter it from its original form, obscuring the interface and impairing the user experience.\u003c/p\u003e\n\n\u003cp\u003e“We focused on situations where we could make better use of available space on large screens,” said Laura Bergmann, UX designer for SAP. “We wanted to get rid of screens that are stretched from edge to edge, full-screen drill-downs or dialogs, and use space more efficiently.”\u003c/p\u003e\n\n\u003cp\u003eNow, after optimizing for different devices, SAP Mobile Start dynamically adjusts its layouts by swapping components and showing or hiding content based on the available window size instead of stretching UI elements to match a device\u0026#39;s screen.\u003c/p\u003e\n\n\u003cp\u003eThe SAP team also implemented \u003ca href=\"https://m3.material.io/foundations/layout/canonical-layouts/overview\" target=\"_blank\"\u003ecanonical layouts\u003c/a\u003e, common UI designs that split a screen into panes according to its size. By separating content into panes, SAP’s users can manage their business workflows more productively. Depending on the window size class, the supporting pane adjusts the UI without additional custom logic. For example, compact windows typically utilize one pane, while larger windows can utilize multiple.\u003c/p\u003e\n\n\u003cp\u003e“Adopting the new canonical layouts from Google helped us focus more on designing unique app capabilities for SAP’s business scenarios,” said Laura. “With the available navigational elements and patterns, we can now channel our efforts into creating a more engaging user experience without reinventing the wheel.”\u003c/p\u003e\n\n\u003cp\u003eSAP developers started by implementing supporting panes to create multi-pane layouts that efficiently utilize on-screen space. The first place developers added supporting panes was on the app’s “To-Do” details page. To-dos used to be managed in a single pane, making it difficult to review the comments and tickets simultaneously. Now, tickets and comments are reviewed in primary and secondary panes on the same screen using \u003cspan\u003e\u003ca href=\"https://developer.android.com/develop/ui/compose/layouts/adaptive/build-a-supporting-pane-layout\" target=\"_blank\"\u003eSupportingPaneScaffold\u003c/a\u003e\u003c/span\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"We focused on making better use of the available space in large screens. We wanted to move away from UIs that are stretched to adaptive layouts that enhance productivity.”  — Laura Bergmann, UX designer at SAP\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg653W8qwIb9_AFI7ITBBsTlxb5mCdrniD26hsY6x5GEJ_LT2KxGYcSQgnsmpY8S6fC9Cd69hJgNB83MtSPbEqVjhWemB1_C9p-7L08NW4b2KGrX6fp_RfBm49EAv0N1fGbBvT8a_SqMN7udREittNaq53u6gXyY8sUTogoVlxxrnjcnYs7LsQBRzSa-Mw/s1600/Quote%20card.png\" width=\"100%\"/\u003e\u003c/p\u003e\u003cbr/\u003e\n\n\u003ch3\u003eFast implementation using Compose Material 3 Adaptive library\u003c/h3\u003e\n\n\u003cp\u003eSAP Mobile Start is built  entirely with Jetpack Compose, Android’s modern declarative toolkit for building native UI. Compose helped SAP developers build new UI faster and easier than ever before thanks to composables, reusable code blocks for building common UI components. The team also used \u003ca href=\"https://developer.android.com/develop/ui/compose/navigation\" target=\"_blank\"\u003eCompose Navigation\u003c/a\u003e to integrate seamless navigation between composables, optimizing travel between new UI on all screens.\u003c/p\u003e \n\n\u003cp\u003e\u003cb\u003eIt took developers only five minutes to integrate the \u003cspan\u003e\u003ca href=\"https://developer.android.com/develop/ui/compose/layouts/adaptive/build-adaptive-navigation\" target=\"_blank\"\u003eNavigationSuiteScaffold\u003c/a\u003e\u003c/span\u003e from the new Compose Material 3 adaptive library\u003c/b\u003e, rapidly adapting the app’s navigation UI to different window sizes, switching between a bottom navigation bar and a vertical navigation rail. It also eliminated the need for custom logic, which previously determined the navigation component based on various window size classes. The \u003cb\u003e\u003cspan\u003eNavigationSuiteScaffold\u003c/span\u003e also reduced the custom navigation UI logic code by 59%\u003c/b\u003e, from 379 lines to 156.\u003c/p\u003e \n\n\u003cp\u003e“Jetpack Compose simplified UI development,” said Aditya Arora, lead Android developer. “Its declarative nature, coupled with built-in support for Material Design and dark theme, significantly increased our development efficiency. By simply describing the desired UI, we\u0026#39;ve reduced code complexity and improved maintainability.”\u003c/p\u003e \n\n\u003cp\u003eSAP developers used live edit and layout inspector in \u003ca href=\"https://developer.android.com/studio?gad_source=1\u0026amp;gclid=CjwKCAjwlbu2BhA3EiwA3yXyu49PJrxggvHzNbZDQursYHUMrDR2r6DO4y_sZ1wETWZrivolJgWmZxoCiuoQAvD_BwE\u0026amp;gclsrc=aw.ds\" target=\"_blank\"\u003eAndroid Studio\u003c/a\u003e to test and optimize the app for large screens. These features were “total game changers” for the SAP team because they helped iterate and inspect layout issues faster when optimizing for new screens.\u003c/p\u003e \n\n\u003cp\u003eWith its \u003ca href=\"https://developer.android.com/reference/kotlin/androidx/compose/ui/tooling/preview/PreviewScreenSizes\" target=\"_blank\"\u003e@PreviewScreenSizes\u003c/a\u003e annotation and device streaming powered by Firebase, Jetpack Compose also made testing the app\u0026#39;s UI across various screen sizes easier. SAP developers look forward to \u003ca href=\"https://developer.android.com/studio/preview/compose-screenshot-testing\" target=\"_blank\"\u003eCompose Screenshot Testing\u003c/a\u003e being completed, which will further streamline UI testing and ensure greater visual consistency within the app.\u003c/p\u003e \n\n\u003cp\u003eUsing Jetpack Compose, SAP developers also quickly and easily implemented new Material 3 design concepts from the \u003ca href=\"https://developer.android.com/reference/kotlin/androidx/compose/material3/adaptive/package-summary\" target=\"_blank\"\u003eCompose M3 Adaptive library\u003c/a\u003e. Material 3 design emphasizes personalizing the app experience, improving interactions with modern visual aesthetics.\u003c/p\u003e  \n\n\u003cp\u003eCompose\u0026#39;s flexibility made replacing the standard Material Theme with their own custom Fiori Horizon Theme simple, ensuring a consistent visual appearance across SAP apps. “As early adopters of the Compose M3 Adaptive library, we collaborated with Google to refine the API,” said Aditya. “Since our app is completely Compose-based, leveraging the new Compose Material 3 Adaptive library was a piece of cake.”\u003c/p\u003e \n\n\u003cp\u003e\u003cimg alt=\"A list layout adapting to and from a list detail layout depending on the window size\" height=\"402\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi-tOL7mvrIQLIVHrGK2-NDRDsdfOubusup5gIRteyKiovyj1GVp1GO0c-V9ITT4fxezOwwTbR8ts253rfzukHsuWGPl6NtmH523sGxyECD-Vm7AagTpke5TNyyc6yvHk4CtoZubp6gw6yuWMvEcK59OIAx8qyrJ9Wwmaa-DcmkrVon3NlVqCQBzx2SI9c/w640-h402/SAP-UI-example-foldable.png\" width=\"640\"/\u003e\u003c/p\u003e\n\n\u003cp\u003eAs large-screen devices like tablets, foldables, and Chromebooks become more popular, building layouts that adapt to varied screen sizes becomes increasingly crucial. For SAP Mobile Start developers, reimagining their app across devices using Jetpack Compose and Material 3 design guidelines was simple. Using Android’s collection of tools and resources, creating adaptive UIs for all the new form factors hitting the market today is faster and easier than ever.\u003c/p\u003e\n\n\u003cp\u003e“Optimizing for large screens is crucial. The market for tablets, foldables, and Chromebooks is booming. Don\u0026#39;t miss out on this opportunity to improve your user experience and expand your app\u0026#39;s reach,” said Aditya.\u003c/p\u003e\n\n\u003ch3\u003eGet started\u003c/h3\u003e\n\n\u003cp\u003eLearn how to improve your UX by optimizing for \u003ca href=\"https://developer.android.com/multidevice\" target=\"_blank\"\u003elarge screens and foldables\u003c/a\u003e using \u003ca href=\"https://developer.android.com/develop/ui/compose\" target=\"_blank\"\u003eJetpack Compose\u003c/a\u003e and \u003ca href=\"https://m3.material.io/\" target=\"_blank\"\u003eMaterial 3\u003c/a\u003e design.\u003c/p\u003e\n\n\n\n\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": null,
  "modifiedTime": null
}
