{
  "id": "0d097e66-f7c8-4444-a67d-cb800babb9bd",
  "title": "Android Weekly Issue #633",
  "link": "https://androidweekly.net/issues/issue-633/rss.xml",
  "description": "Articles \u0026 Tutorials Sponsored Want to try OpenTelemetry for Android? Check out this quick walkthrough on how to get started with OpenTelemetry for Android. You‚Äôll learn how to instrument traces in your app with the open source Embrace SDK and then export them to any observability backend. This is a great way for Android engineers to try out OTel. Text Field Features Hidden in Plain Sight Nirbhay Pherwani helps you discover the true potential of text fields with Compose in Android. Koin Annotations 1.4 ‚Äî Better Multimodule \u0026 KMP Arnaud Giuliani announces the latest release of Koin Annotations, version 1.4.0, which brings great improvements for ViewModel, Kotlin Multiplatform (KMP), and compiler safety. Sponsored Add paywalls in one line of code Take the pain out of configuring and testing your app's paywalls. With RevenueCat Paywalls you can remotely configure and edit your entire paywall view without waiting on App Review. Creating Scalable Composables in Jetpack Compose Oƒüuzhan Aslan shows how creating scalable composables in Jetpack Compose is essential for building maintainable, consistent, and user-friendly UI components. Lint Revisit: Providing Alternatives Zarah Dominguez continues the series building a TODO Detector lint rule, this time making it more flexible. Accessibility Considerations with Stacked Cards Custom Layout Eevis Panula continues the series on accessibility. In the previous article, the layout has some accessibility issues and here some of them are fixed. The Little Things: Persistent pop-ups Annyce Davis shows how to ditch the automatic Run tool window in Android Studio. Make Things Easy Ryan Harter shares a technique for making it easier to work with code hidden behind feature flags. Using kotlin-inject in a Kotlin/Compose Multiplatform project John O'Reilly outlines changes made to add kotlin-inject to the BikeShare KMP sample. Why Kotlin Multiplatform Teams Should Share Source, not Binaries Kevin Galligan recommends using Kotlin source to publish KMP code instead of binaries, which allows the iOS team to browse and debug the Kotlin code. Setting up Kotlin Multiplatform (+Compose) Sebastian Sellmair's step-by-step guide to building Kotlin for Android, iOS, and Desktop. Place a sponsored post Advertise your Android dev course to over 80k readers We reach out to more than 80k Android developers around the world, every week, through our email newsletter and social media channels. Advertise your Android development course! Videos \u0026 Podcasts TypeAlias Show #1 - Let's try out kotlinx.rpc ‚Ä¢ and more! Dave Leeds examines what's new in the Kotlin world, converts a desktop + service app to use the exciting new kotlinx.rpc library, and answer some of your questions. Build Android and iOS apps with Compose Multiplatform¬†(CMP) Daniel Atitienei introduces how to build iOS and Android apps using Compose Multiplatform. Use These Tricks for Efficient Bug Fixing üêû Charfaoui Younes shares several tips and tricks that can help you fix bugs quickly and efficiently. Advanced layout animations in Compose (Shared elements) Dive into the depths of using the new shared element transitions in Compose with feature-rich examples. From Swift to Kotlin: A Complete Guide to Cinterop in a KMP Project Stevdza-San's complete guide to Cinterop in a KMP project Create a Splash Screen in Compose Multiplatform for iOS \u0026 Android Philipp Lackner shows how you can create a splash screen on Android \u0026 iOS using Kotlin Multiplatform. Pager | Compose Tips This episode covers how to use the Pager composable, configuration parameters such as controlling the fling distance, and tying into the PagerState to create animations. Getting started with sign in with Google on Android In this video, Marina‚Ä¨ walks you through how to get started with Sign in with Google on Android. Troubleshoot your app faster with AI in Crashlytics AI insights in Crashlytics and Device Streaming in Android Studio can help you quickly troubleshoot your app, and test it on a variety of physical Android devices! Kotlin Design Patterns \u0026 Best Practices - Part 1: Build a Chess Game Part 1 of Mohamad Rejeb's Kotlin Design Patterns \u0026 Best Practices series. Practical Jetpack Compose: Authentication Form In this preview of the Practical Jetpack Compose video course, learn how to build an Authentication Form using Jetpack Compose Specials The Decline Of Mobile Development Donn Felker contemplates how building mobile apps is getting harder and harder to develop, and devs are leaving the platforms out of frustration and annoyance.",
  "author": "",
  "published": "Sun, 28 Jul 2024 15:45:22 +0000",
  "source": "https://androidweekly.net/rss.xml",
  "categories": null,
  "byline": "",
  "length": 935,
  "excerpt": "",
  "siteName": "",
  "favicon": "",
  "text": "Check out this quick walkthrough on how to get started with OpenTelemetry for Android. You‚Äôll learn how to instrument traces in your app with the open source Embrace SDK and then export them to any observability backend. This is a great way for Android engineers to try out OTel. Take the pain out of configuring and testing your app's paywalls. With RevenueCat Paywalls you can remotely configure and edit your entire paywall view without waiting on App Review. Ryan Harter shares a technique for making it easier to work with code hidden behind feature flags. This episode covers how to use the Pager composable, configuration parameters such as controlling the fling distance, and tying into the PagerState to create animations. Donn Felker contemplates how building mobile apps is getting harder and harder to develop, and devs are leaving the platforms out of frustration and annoyance. ]]\u003e",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://embrace.io/blog/android-opentelemetry-exporter-walkthrough/?utm_source=newsletter\u0026amp;utm_medium=email\u0026amp;utm_campaign=android-weekly-7-28-24\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/66a562/603c93bc54610093a1/square_EmbraceLogo_Alt_yellow-on-lead_85x85.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003cdiv\u003e\u003cp\u003eCheck out this quick walkthrough on how to get started with OpenTelemetry for Android. You‚Äôll learn how to instrument traces in your app with the open source Embrace SDK and then export them to any observability backend. This is a great way for Android engineers to try out OTel.\n\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\n\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://www.revenuecat.com/docs/tools/paywalls?utm_medium=sponsored\u0026amp;utm_source=newsletter\u0026amp;utm_campaign=android_weekly\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/66a562/2d3c93bc5461009395/square_rc-logo-500w.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003cdiv\u003e\u003cp\u003eTake the pain out of configuring and testing your app\u0026#39;s paywalls. With RevenueCat Paywalls you can remotely configure and edit your entire paywall view without waiting on App Review.\n\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\n\n\n\n\u003cdiv\u003e\u003cp\u003eRyan Harter shares a technique for making it easier to work with code hidden behind feature flags.\n\u003c/p\u003e\u003c/div\u003e\n\n\n\n\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://androidweekly.net/jobs/new\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/66a562/9a3c93bc54610093b1/square_aw.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://www.youtube.com/watch?v=S_JKbmN_A8o\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/66a57b/ed3c93bc54610097ea/square_Bildschirmfoto_2024-07-28_um_17.45.00.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\n\n\n\n\n\u003cdiv\u003e\u003cp\u003eThis episode covers how to use the Pager composable, configuration parameters such as controlling the fling distance, and tying into the PagerState to create animations. \n\n\u003c/p\u003e\u003c/div\u003e\n\n\n\n\n\n\u003cdiv\u003e\u003cp\u003eDonn Felker contemplates how building mobile apps is getting harder and harder to develop, and devs are leaving the platforms out of frustration and annoyance.\n\u003c/p\u003e\u003c/div\u003e\n]]\u0026gt;\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": null,
  "modifiedTime": null
}
