{
  "id": "2d8eff87-69b6-46b1-8650-2aecd836d9fc",
  "title": "Gemini in Android Studio: Code Completion Gains Powerful Model Improvements",
  "link": "http://android-developers.googleblog.com/2024/09/gemini-android-studio-code-completion-model-improvements.html",
  "description": "",
  "author": "Android Developers",
  "published": "2024-09-30T08:58:00.000-07:00",
  "source": "http://feeds.feedburner.com/blogspot/hsDu",
  "categories": [
    "AI code completion",
    "Android Studio",
    "code completion",
    "Gemini"
  ],
  "byline": "",
  "length": 5968,
  "excerpt": "The Android Studio team has been experimenting with several enhancements to code completion, resulting in a 40% relative increase in acceptance rate.",
  "siteName": "Android Developers Blog",
  "favicon": "",
  "text": "Posted by Sandhya Mohan – Product Manager, Android Studio and Sarmad Hashmi – Software Engineer, Labs The Android team believes AI has the potential to revolutionize coding, drive unprecedented innovation and productivity in software development, and supercharge your development productivity. AI code completion is a key part of this effort within Gemini in Android Studio. Since launching in May 2024, we've been hard at work improving this feature to provide the best possible experience for all Android developers. In this post, we want to take you “under the hood” on how we achieved a 40% relative increase in acceptance rate since release, and share some of our excitement for how we have seen Android developers use this feature. We hope you'll give it a try and let us know what you think. An AI coding companion for every developer Our vision for Gemini in Android Studio is to empower developers to build high quality Android apps — making it easy for developers to quickly write correct code aligned with Android's best practices. Launched last year, the first version of Studio Bot provided a chat experience where developers could access Android-specific guidance, powered by Google's latest AI models. Developers are able to ask Gemini in Android Studio to provide developer guidance, summarize technical documentation, and critique their Android code. But in all these cases the feedback is reactive, responding to a user's question. AI code completion takes these capabilities a step further by providing real-time feedback as you work as a developer, thinking ahead and suggesting the next few lines of code that you are likely to type based on the context from the surrounding file and what was just typed. You can think of AI Code Completion as a partner in your work — a coding companion waiting to offer guidance when you need it. This feature is particularly well suited for tasks like defining business logic, creating database schemas, making network requests, or even writing tests — tasks that are often time-consuming and distract from building the core experience for your app. Many developers have told us how much they enjoy the speed AI completions brings to their app development workflow. Bringing more intelligent code completion to Android development While we are excited to see how AI Code Completions have improved developers’ workflows, we know there's still more we can do to improve developer productivity. Development of Gemini in Android Studio is an ongoing, large-scale collaborative effort by many teams across Google. Earlier this year, we switched to Gemini 1.5 models and saw a significant improvement in the quality of code completions, resulting in a 2x increase in our developer productivity metrics, including overall acceptance rate for suggestions. Once we started doing A/B test experiments to improve AI code completion we found several improvements around model quality, context, and heuristics. This overall effort led to a 40% relative increase in acceptance rate — how often users accept the AI's proposed code suggestions — since we launched. Since then, we've been exploring several improvements like: Retrieval augmentation: With your opt-in consent, we use the files and dependencies most relevant to your current coding context to enhance the accuracy of suggestions. This is just the first step and we're continuing to experiment with adding even more context from the IDE as part of each request. Filtering out low-confidence completions: Prioritize showing high quality suggestions where they are most relevant, and therefore most likely to be accepted. We do this by using a combination of the probabilities returned by the model and using a classifier trained to identify high-quality completions based on developer feedback. Smarter post-processing: The LLM's output for AI Code Completion is fundamentally different from the output users expect in a chat session. Responses need to be tightly scoped in order to quickly output useful code, without surrounding expository text. We apply additional heuristics on the model output to ensure responses are concise and accurate, as well as making sure that the generated code is valid within the context of the user's codebase. Improved models: We use opt-in feedback from Android Studio users, such as noting when a code suggestion is accepted or rejected, to adapt the code completion model to their coding style and preferences over time. We regularly ship new models with higher quality data based on your feedback. We are also exploring metrics beyond acceptance rate to better measure AI impact on developer velocity, such as the percentage of total code written by AI. Try it out! We are rolling out these successful experiments and others as quickly as possible. If you haven't tried AI code completions yet, you can enable this feature by clicking on the Gemini button in your editor window and signing in to your Google account. Figure 1. Launching Gemini in Android Studio for the first time After doing so, navigate to Settings \u003e Tools \u003e Gemini and select \"Enable AI-based inline code completions\". Figure 2. Enabling \"AI-based inline code completions\" As always, Google is committed to the responsible use of AI. Android Studio won't send any of your source code to servers without your consent — which means you'll need to opt-in to enable Gemini's developer assistance features in Android Studio. You can read more on Gemini in Android Studio's commitment to privacy. Try enabling AI Code Completions in your project and tell us what you think on social media with #AndroidGeminiEra. We're excited to see how these enhancements help you build amazing apps! This blog post is part of our series: AI on Android Spotlight Week, where we provide resources — blog posts, videos, sample code, and more — all designed to to explore the latest in AI and its potential for Android app development.",
  "image": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEikFIJcygIrGJJy0Mb-13Tn9-rk8d29RvMenYTGJj11JZVUr2nt0ZqC1xvElwyVuE_EL3JklDjn-b3muY58rCDXzM-NtSprpY3hAuvlHejDFepHbA39v2TijL-ZNcqqB9jm08Sn-rEZj2eg1Kl22IETuvqr6M9LdG02OMSxmDwCPJRCsWWtWRGUsSNxDjI/w1200-h630-p-k-no-nu/Android-Studio-Social%20%281%29.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\u003cmeta content=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEikFIJcygIrGJJy0Mb-13Tn9-rk8d29RvMenYTGJj11JZVUr2nt0ZqC1xvElwyVuE_EL3JklDjn-b3muY58rCDXzM-NtSprpY3hAuvlHejDFepHbA39v2TijL-ZNcqqB9jm08Sn-rEZj2eg1Kl22IETuvqr6M9LdG02OMSxmDwCPJRCsWWtWRGUsSNxDjI/s1600/Android-Studio-Social%20%281%29.png\" name=\"twitter:image\"/\u003e\n\u003cp\u003e\n\n\u003cem\u003ePosted by \u003ca href=\"https://x.com/sandhyam1312\" target=\"_blank\"\u003eSandhya Mohan\u003c/a\u003e – Product Manager, Android Studio and Sarmad Hashmi – Software Engineer, Labs\u003c/em\u003e\n\n\u003ca href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjvHXIMfkb-nMGzPO3F4wJrZ-lJb1Rxzo9C4IF5LAKQMtDNyZodJBeeK26Q81ILuJHpYmHpTFQ_gIMLixAeS6SSe9KEsj4B8D1iPHiwqFz69VaNQ78cMC5El6wOytLc0NJVjXA-2J6ZjQzx9peGGNGTIiEI11akrGCMG-NUW9j_9jcigjYSurIBuSFLlCQ/s1600/AIonAndroid_SpotlightWeek_androidstudio.png\"\u003e\u003cimg data-original-height=\"800\" data-original-width=\"100%\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjvHXIMfkb-nMGzPO3F4wJrZ-lJb1Rxzo9C4IF5LAKQMtDNyZodJBeeK26Q81ILuJHpYmHpTFQ_gIMLixAeS6SSe9KEsj4B8D1iPHiwqFz69VaNQ78cMC5El6wOytLc0NJVjXA-2J6ZjQzx9peGGNGTIiEI11akrGCMG-NUW9j_9jcigjYSurIBuSFLlCQ/s1600/AIonAndroid_SpotlightWeek_androidstudio.png\"/\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThe Android team believes AI has the potential to revolutionize coding, drive unprecedented innovation and productivity in software development, and supercharge your development productivity. \u003cb\u003eAI code completion\u003c/b\u003e is a key part of this effort within Gemini in Android Studio.\u003c/p\u003e\n\n\u003cp\u003eSince launching in May 2024, we\u0026#39;ve been hard at work improving this feature to provide the best possible experience for all Android developers.  In this post, we want to take you “under the hood” on how we achieved a 40% relative increase in acceptance rate since release, and share some of our excitement for how we have seen Android developers use this feature. We hope you\u0026#39;ll give it a try and let us know what you think.\u003c/p\u003e\u003cbr/\u003e\n\n\u003ch3\u003eAn AI coding companion for every developer\u003c/h3\u003e\n\n\u003cp\u003eOur vision for Gemini in Android Studio is to empower developers to build high quality Android apps — making it easy for developers to quickly write correct code aligned with Android\u0026#39;s best practices. Launched last year, the first version of Studio Bot provided a chat experience where developers could access Android-specific guidance, powered by Google\u0026#39;s latest AI models. Developers are able to ask Gemini in Android Studio to provide developer guidance, summarize technical documentation, and critique their Android code. But in all these cases the feedback is reactive, responding to a user\u0026#39;s question.\u003c/p\u003e\n\n\u003cp\u003eAI code completion takes these capabilities a step further by providing real-time feedback as you work as a  developer, thinking ahead and suggesting the next few lines of code that you are likely to type based on the context from the surrounding file and what was just typed. You can think of AI Code Completion as a partner in your work — a coding companion waiting to offer guidance when you need it.\n\u003c/p\u003e\n\n\u003cp\u003eThis feature is particularly well suited for tasks like defining business logic, creating database schemas, making network requests, or even writing tests — tasks that are often time-consuming and distract from building the core experience for your app. Many developers have told us how much they enjoy the speed AI completions brings to their app development workflow.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"A moving image demonstrating AI autocomplete in Android Studio\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjHTZtJfNID7cO_q5pxwLnGjLpqSoVG2gVVYrltKuEE_13vohLtcpSMIG4f5GrDEvmSrzQEtbeO4pvjkotd8a2SifenIckK3xZL0DELDj48HN5bO13BSVBUMFnMR6UcsYYdCTHzXQigGHgECC-disXG2Lk43HdDzZQjTM8lxbx5Dlgwc93vCM0QrqyH_Sc/s16000/Autocomplete%20Screencast%20(Optimized).gif\"/\u003e\u003c/p\u003e\u003cbr/\u003e\n\n\n\u003ch3\u003eBringing more intelligent code completion to Android development\u003c/h3\u003e\n\n\u003cp\u003eWhile we are  excited to see how AI Code Completions have improved developers’ workflows, we know there\u0026#39;s still more we can do to improve developer productivity. Development of Gemini in Android Studio is an ongoing, large-scale collaborative effort by many teams across Google. Earlier this year, we switched to Gemini 1.5 models and saw a significant improvement in the quality of code completions, resulting in a 2x increase in our developer productivity metrics, including overall acceptance rate for suggestions.\u003c/p\u003e\n\n\u003cp\u003eOnce we started doing A/B test experiments to improve AI code completion we found several improvements around model quality, context, and heuristics. This overall effort led to a \u003cb\u003e40% relative increase in acceptance rate\u003c/b\u003e — how often users accept the AI\u0026#39;s proposed code suggestions — since we launched. Since then, we\u0026#39;ve been exploring several improvements like:\u003c/p\u003e\n\u003cul\u003e\u003cul\u003e\n\u003cli\u003e\u003cb\u003eRetrieval augmentation:\u003c/b\u003e With your opt-in consent, we use the files and dependencies most relevant to your current coding context to enhance the accuracy of suggestions. This is just the first step and we\u0026#39;re continuing to experiment with adding even more context from the IDE as part of each request.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\n  \n\u003cli\u003e\u003cb\u003eFiltering out low-confidence completions:\u003c/b\u003e Prioritize showing high quality suggestions where they are most relevant, and therefore most likely to be accepted. We do this by using a combination of the probabilities returned by the model and using a classifier trained to identify high-quality completions based on developer feedback. \u003c/li\u003e\u003c/ul\u003e\u003cul\u003e \n  \n\u003cli\u003e\u003cb\u003eSmarter post-processing:\u003c/b\u003e The LLM\u0026#39;s output for AI Code Completion is fundamentally different from the output users expect in a chat session. Responses need to be tightly scoped in order to quickly output useful code, without surrounding expository text. We apply additional heuristics on the model output to ensure responses are concise and accurate, as well as making sure that the generated code is valid within the context of the user\u0026#39;s codebase.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\n  \n\u003cli\u003e\u003cb\u003eImproved models:\u003c/b\u003e We use opt-in feedback from Android Studio users, such as noting when a code suggestion is accepted or rejected, to adapt the code completion model to their coding style and preferences over time. We regularly ship new models with higher quality data based on your feedback.\u003c/li\u003e\n\u003c/ul\u003e\u003c/ul\u003e\n  \n  \n\u003cp\u003eWe are also exploring metrics beyond acceptance rate to better measure AI impact on developer velocity, such as the percentage of total code written by AI.\u003c/p\u003e\u003cbr/\u003e\n\n\u003ch3\u003eTry it out!\u003c/h3\u003e\n\n\u003cp\u003eWe are rolling out these successful experiments and others as quickly as possible.\u003c/p\u003e\n\n\u003cp\u003eIf you haven\u0026#39;t tried AI code completions yet, you can enable this feature by clicking on the \u003cimg alt=\"Gemini spark\" height=\"200\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiLoJVsUYlLnh_d9fyDNskyokszNg4XiQkzyFTEHjidl27MzfiDkQgOdHsv_OOZaHBGonBI5xmXSKvwHoIN9rJyEaO4qAALLmcKVYsE0RPtMNSD1M3zDlIcbsseHX_XJ5hDC8Vs-M_2YOlg-SB4tk_lhEHRrvoelIyoHYBCGmgV6KzNQWh_LXjKdbu5kUI/w200-h200/image6.png\" title=\"Gemini spark\" width=\"20\"/\u003eGemini button in your editor window and signing in to your Google account.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"A screenshot of Android Studio with a pop-up notification about the Gemini AI coding companion. The notification explains that Gemini is a free feature in preview and requires a Google account login to use.\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgBZRX-fCGDEHH3BMUq921_5lL681UVhhyphenhyphenlLiV2L4lYgHSAaM7FWbtZ4VUlnGuCt-wWretkhVLmITO8mJmBxtoza8EUXnw-HMzk0Y7DSNybPXbiMGj7pqNNFhAQSFAfhfYfAs_NfKCOl2c0JZKPkeAApxgzAbqpKkqNyEqc9JlkT7MKQDJU_qeBKXu7yB8/s1600/Gemini-companion.png\" width=\"50%\"/\u003e\u003c/p\u003e\u003cimgcaption\u003e\u003ccenter\u003e\u003cem\u003eFigure 1. Launching Gemini in Android Studio for the first time\u003c/em\u003e\u003c/center\u003e\u003c/imgcaption\u003e\n\n\u003cp\u003eAfter doing so, navigate to \u003cb\u003eSettings \u0026gt; Tools \u0026gt; Gemini\u003c/b\u003e and select \u003cb\u003e\u0026#34;Enable AI-based inline code completions\u0026#34;\u003c/b\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"A screenshot of the settings menu within Android Studio, with the \u0026#39;Gemini\u0026#39; section expanded showing options related to the AI coding companion, including privacy and context awareness.\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhIE8E1LOnezyGsqp69BVcxlBy_XvOsPEoptnF1tSJblaMaRpMlTuS21RQp5JGGdEOKTg3wB7NupZgV9MG68ENwhADljCMk5DJXhNB1bSa2pHU91k67Azo6RCmx9w2aE_0xhc-0czkRz_lvQj_aK8WPf51X0k7xtjAGRQgmCIZzYeADymkOpGtqjAzobxY/s1600/settings-menu-android-studio-gemini-ai-coding-companion.png\" width=\"100%\"/\u003e\u003c/p\u003e\u003cimgcaption\u003e\u003ccenter\u003e\u003cem\u003eFigure 2. Enabling \u0026#34;AI-based inline code completions\u0026#34;\u003c/em\u003e\u003c/center\u003e\u003c/imgcaption\u003e\n\n\u003cp\u003eAs always, Google is committed to the \u003ca href=\"https://ai.google/responsibility/principles/\" target=\"_blank\"\u003eresponsible use of AI\u003c/a\u003e. Android Studio won\u0026#39;t send any of your source code to servers without your consent — which means you\u0026#39;ll need to opt-in to enable Gemini\u0026#39;s developer assistance features in Android Studio. You can read more on Gemini in Android Studio\u0026#39;s \u003ca href=\"https://developer.android.com/studio/preview/gemini/data-and-privacy\" target=\"_blank\"\u003ecommitment to privacy\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eTry enabling AI Code Completions in your project and tell us what you think on social media with #AndroidGeminiEra. We\u0026#39;re excited to see how these enhancements help you build amazing apps!\u003c/p\u003e\n\n\u003chr/\u003e\n\n\u003cp\u003e\u003ci\u003eThis blog post is part of our series: \u003ca href=\"https://android-developers.googleblog.com/2024/09/welcome-to-ai-on-android-spotlight-week.html\" target=\"_blank\"\u003eAI on Android Spotlight Week\u003c/a\u003e, where we provide resources — blog posts, videos, sample code, and more — all designed to to explore the latest in AI and its potential for Android app development.\u003c/i\u003e\u003c/p\u003e\n\n\n\n\n\n\n\n\n\n\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": null,
  "modifiedTime": null
}
