{
  "id": "d33bfb9f-fac8-4c64-8c69-4f556a600909",
  "title": "survey-compose",
  "link": "https://android-arsenal.com/details/1/8480",
  "description": "Android library written in Jetpack Compose, containing a fully configurable survey/questionnaire screen.",
  "author": "",
  "published": "Fri, 08 Mar 2024 05:09:19 +0300",
  "source": "https://feeds.feedburner.com/Android_Arsenal",
  "categories": null,
  "byline": "Vladislav Bauer",
  "length": 3456,
  "excerpt": "Views | survey-compose by Zeki Erciyas (zekierciyas)",
  "siteName": "Android Arsenal",
  "favicon": "https://android-arsenal.com/favicon.png",
  "text": "Survey View Android library written in Jetpack Compose, containing a fully configurable survey/questionnaire screen. Gradle Step 1 : Add the JitPack repository to your build file dependencyResolutionManagement { repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS) repositories { mavenCentral() maven { url 'https://jitpack.io' } } } Step 2 : Add the dependency implementation 'com.github.zekierciyas:survey-compose:1.0.0' Usage @Composable fun SurveyView() { var showMessage by remember { mutableStateOf(false) } val sampleSurvey = listOf( SurveyModel( questionType = QuestionType.MULTIPLE_CHOICE, questionId = \"id1\", questionTitle = \"1) Select your favorite color:\", answers = listOf(\"Red\", \"Green\", \"Blue\"), questionDescription = \"Description\" ), SurveyModel( questionType = QuestionType.SINGLE_CHOICE, questionId =\"id2\", questionTitle =\"2) Choose your preferred programming language:\", answers = listOf(\"Java\", \"Kotlin\", \"Swift\", \"Python\"), questionDescription = \"Description\" ), SurveyModel( questionType = QuestionType.TEXT, questionId =\"id3\", questionTitle =\"3) Choose your preferred programming language:\", questionDescription = \"Description\" ) ) SurveyScreen( survey = sampleSurvey, backgroundColor = Color.White, singleOptionUI = SingleOptionUI( questionTitle = SurveyText( color = Color.DarkGray, fontWeight = FontWeight.ExtraBold ), answer = SurveyText( color = Color.DarkGray, fontWeight = FontWeight.Medium ), selectedColor = Color.White, unSelectedColor = Color.Gray, borderColor = Color.Gray ), multipleOptionUI = MultipleOptionUI( questionTitle = SurveyText( color = Color.DarkGray, fontWeight = FontWeight.ExtraBold ), answer = SurveyText( color = Color.DarkGray, fontWeight = FontWeight.Medium ), checkedColor = Color.Gray, uncheckedColor = Color.White, borderColor = Color.Gray ), textOptionUI = TextOptionUI( questionTitle = SurveyText( color = Color.DarkGray, fontWeight = FontWeight.ExtraBold ), answer = SurveyText( color = Color.Gray, fontWeight = FontWeight.Medium ), borderColor = Color.Gray, backgroundColor = Color.White, surveyOutlinedText = SurveyOutlinedText( focusedTextColor = Color.DarkGray, unfocusedContainerColor = Color.White, focuedLabelColor = Color.DarkGray ) ), callbackAnswers = { }, callbackAllAnswered = { showMessage = true }) if (showMessage) { Snackbar( action = { Button( onClick = { showMessage = false } ) { Text(\"Dismiss\") } } ) { Text(text = \"All questions are done\") } } }",
  "image": "https://raw.githubusercontent.com/zekierciyas/survey-compose/main/previews/preview_video.gif",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"description\"\u003e\u003carticle\u003e\u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003eSurvey View\u003c/h2\u003e\u003c/p\u003e  \u003cp dir=\"auto\"\u003eAndroid library written in Jetpack Compose, containing a fully configurable survey/questionnaire screen.\u003c/p\u003e  \u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003eGradle\u003c/h2\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003e\u003cstrong\u003eStep 1\u003c/strong\u003e : Add the JitPack repository to your build file\u003c/p\u003e \u003cdiv dir=\"auto\" data-snippet-clipboard-copy-content=\"dependencyResolutionManagement { repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS) repositories { mavenCentral() maven { url \u0026#39;https://jitpack.io\u0026#39; } } }\"\u003e\u003cpre\u003e\u003cspan\u003edependencyResolutionManagement\u003c/span\u003e {\n  repositoriesMode\u003cspan\u003e.\u003c/span\u003eset(\u003cspan\u003eRepositoriesMode\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eFAIL_ON_PROJECT_REPOS\u003c/span\u003e)\n  repositories {\n   mavenCentral()\n   maven { url \u003cspan\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003ehttps://jitpack.io\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e }\n  }\n }\u003c/pre\u003e\u003c/div\u003e \u003cp dir=\"auto\"\u003e\u003cstrong\u003eStep 2\u003c/strong\u003e : Add the dependency\u003c/p\u003e \u003cdiv dir=\"auto\" data-snippet-clipboard-copy-content=\"implementation \u0026#39;com.github.zekierciyas:survey-compose:1.0.0\u0026#39;\"\u003e\u003cpre\u003eimplementation \u003cspan\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003ecom.github.zekierciyas:survey-compose:1.0.0\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e \u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003eUsage\u003c/h2\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003e\u003ca href=\"https://github.com/zekierciyas/survey-compose/raw/main/previews/preview_image.jpg\" rel=\"nofollow\" target=\"_blank\"\u003e\u003cimg height=\"660\" data-layzr=\"https://raw.githubusercontent.com/zekierciyas/survey-compose/main/previews/preview_image.jpg\" src=\"https://raw.githubusercontent.com/zekierciyas/survey-compose/main/previews/preview_image.jpg\"/\u003e\u003c/a\u003e\u003c/p\u003e \u003cdiv dir=\"auto\" data-snippet-clipboard-copy-content=\"@Composable fun SurveyView() { var showMessage by remember { mutableStateOf(false) } val sampleSurvey = listOf( SurveyModel( questionType = QuestionType.MULTIPLE_CHOICE, questionId = \u0026#34;id1\u0026#34;, questionTitle = \u0026#34;1) Select your favorite color:\u0026#34;, answers = listOf(\u0026#34;Red\u0026#34;, \u0026#34;Green\u0026#34;, \u0026#34;Blue\u0026#34;), questionDescription = \u0026#34;Description\u0026#34; ), SurveyModel( questionType = QuestionType.SINGLE_CHOICE, questionId =\u0026#34;id2\u0026#34;, questionTitle =\u0026#34;2) Choose your preferred programming language:\u0026#34;, answers = listOf(\u0026#34;Java\u0026#34;, \u0026#34;Kotlin\u0026#34;, \u0026#34;Swift\u0026#34;, \u0026#34;Python\u0026#34;), questionDescription = \u0026#34;Description\u0026#34; ), SurveyModel( questionType = QuestionType.TEXT, questionId =\u0026#34;id3\u0026#34;, questionTitle =\u0026#34;3) Choose your preferred programming language:\u0026#34;, questionDescription = \u0026#34;Description\u0026#34; ) ) SurveyScreen( survey = sampleSurvey, backgroundColor = Color.White, singleOptionUI = SingleOptionUI( questionTitle = SurveyText( color = Color.DarkGray, fontWeight = FontWeight.ExtraBold ), answer = SurveyText( color = Color.DarkGray, fontWeight = FontWeight.Medium ), selectedColor = Color.White, unSelectedColor = Color.Gray, borderColor = Color.Gray ), multipleOptionUI = MultipleOptionUI( questionTitle = SurveyText( color = Color.DarkGray, fontWeight = FontWeight.ExtraBold ), answer = SurveyText( color = Color.DarkGray, fontWeight = FontWeight.Medium ), checkedColor = Color.Gray, uncheckedColor = Color.White, borderColor = Color.Gray ), textOptionUI = TextOptionUI( questionTitle = SurveyText( color = Color.DarkGray, fontWeight = FontWeight.ExtraBold ), answer = SurveyText( color = Color.Gray, fontWeight = FontWeight.Medium ), borderColor = Color.Gray, backgroundColor = Color.White, surveyOutlinedText = SurveyOutlinedText( focusedTextColor = Color.DarkGray, unfocusedContainerColor = Color.White, focuedLabelColor = Color.DarkGray ) ), callbackAnswers = { }, callbackAllAnswered = { showMessage = true }) if (showMessage) { Snackbar( action = { Button( onClick = { showMessage = false } ) { Text(\u0026#34;Dismiss\u0026#34;) } } ) { Text(text = \u0026#34;All questions are done\u0026#34;) } } }\"\u003e\u003cpre\u003e@Composable\n\u003cspan\u003efun\u003c/span\u003e \u003cspan\u003eSurveyView\u003c/span\u003e() {\n\n    \u003cspan\u003evar\u003c/span\u003e showMessage by remember { mutableStateOf(\u003cspan\u003efalse\u003c/span\u003e) }\n\n    \u003cspan\u003eval\u003c/span\u003e sampleSurvey \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003elistOf\u003c/span\u003e(\n        \u003cspan\u003eSurveyModel\u003c/span\u003e(\n            questionType \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eQuestionType\u003c/span\u003e.\u003cspan\u003eMULTIPLE_CHOICE\u003c/span\u003e,\n            questionId \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003eid1\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e,\n            questionTitle \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e1) Select your favorite color:\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e,\n            answers \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003elistOf\u003c/span\u003e(\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003eRed\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e, \u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003eGreen\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e, \u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003eBlue\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e),\n            questionDescription \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003eDescription\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e\n        ),\n        \u003cspan\u003eSurveyModel\u003c/span\u003e(\n            questionType \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eQuestionType\u003c/span\u003e.\u003cspan\u003eSINGLE_CHOICE\u003c/span\u003e,\n            questionId \u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003eid2\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e,\n            questionTitle \u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e2) Choose your preferred programming language:\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e,\n            answers \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003elistOf\u003c/span\u003e(\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003eJava\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e, \u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003eKotlin\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e, \u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003eSwift\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e, \u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003ePython\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e),\n            questionDescription \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003eDescription\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e\n        ),\n        \u003cspan\u003eSurveyModel\u003c/span\u003e(\n            questionType \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eQuestionType\u003c/span\u003e.\u003cspan\u003eTEXT\u003c/span\u003e,\n            questionId \u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003eid3\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e,\n            questionTitle \u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e3) Choose your preferred programming language:\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e,\n            questionDescription \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003eDescription\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e\n        )\n    )\n    \u003cspan\u003eSurveyScreen\u003c/span\u003e(\n        survey \u003cspan\u003e=\u003c/span\u003e sampleSurvey,\n        backgroundColor \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eColor\u003c/span\u003e.\u003cspan\u003eWhite\u003c/span\u003e,\n        singleOptionUI \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eSingleOptionUI\u003c/span\u003e(\n            questionTitle \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eSurveyText\u003c/span\u003e(\n                color \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eColor\u003c/span\u003e.\u003cspan\u003eDarkGray\u003c/span\u003e,\n                fontWeight \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eFontWeight\u003c/span\u003e.\u003cspan\u003eExtraBold\u003c/span\u003e\n            ),\n            answer \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eSurveyText\u003c/span\u003e(\n                color \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eColor\u003c/span\u003e.\u003cspan\u003eDarkGray\u003c/span\u003e,\n                fontWeight \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eFontWeight\u003c/span\u003e.\u003cspan\u003eMedium\u003c/span\u003e\n            ),\n            selectedColor \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eColor\u003c/span\u003e.\u003cspan\u003eWhite\u003c/span\u003e,\n            unSelectedColor \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eColor\u003c/span\u003e.\u003cspan\u003eGray\u003c/span\u003e,\n            borderColor \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eColor\u003c/span\u003e.\u003cspan\u003eGray\u003c/span\u003e\n        ),\n        multipleOptionUI \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eMultipleOptionUI\u003c/span\u003e(\n            questionTitle \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eSurveyText\u003c/span\u003e(\n                color \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eColor\u003c/span\u003e.\u003cspan\u003eDarkGray\u003c/span\u003e,\n                fontWeight \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eFontWeight\u003c/span\u003e.\u003cspan\u003eExtraBold\u003c/span\u003e\n            ),\n            answer \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eSurveyText\u003c/span\u003e(\n                color \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eColor\u003c/span\u003e.\u003cspan\u003eDarkGray\u003c/span\u003e,\n                fontWeight \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eFontWeight\u003c/span\u003e.\u003cspan\u003eMedium\u003c/span\u003e\n            ),\n            checkedColor \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eColor\u003c/span\u003e.\u003cspan\u003eGray\u003c/span\u003e,\n            uncheckedColor \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eColor\u003c/span\u003e.\u003cspan\u003eWhite\u003c/span\u003e,\n            borderColor \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eColor\u003c/span\u003e.\u003cspan\u003eGray\u003c/span\u003e\n        ),\n        textOptionUI \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eTextOptionUI\u003c/span\u003e(\n            questionTitle \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eSurveyText\u003c/span\u003e(\n                color \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eColor\u003c/span\u003e.\u003cspan\u003eDarkGray\u003c/span\u003e,\n                fontWeight \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eFontWeight\u003c/span\u003e.\u003cspan\u003eExtraBold\u003c/span\u003e\n            ),\n            answer \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eSurveyText\u003c/span\u003e(\n                color \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eColor\u003c/span\u003e.\u003cspan\u003eGray\u003c/span\u003e,\n                fontWeight \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eFontWeight\u003c/span\u003e.\u003cspan\u003eMedium\u003c/span\u003e\n            ),\n            borderColor \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eColor\u003c/span\u003e.\u003cspan\u003eGray\u003c/span\u003e,\n            backgroundColor \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eColor\u003c/span\u003e.\u003cspan\u003eWhite\u003c/span\u003e,\n            surveyOutlinedText \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eSurveyOutlinedText\u003c/span\u003e(\n                focusedTextColor \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eColor\u003c/span\u003e.\u003cspan\u003eDarkGray\u003c/span\u003e,\n                unfocusedContainerColor \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eColor\u003c/span\u003e.\u003cspan\u003eWhite\u003c/span\u003e,\n                focuedLabelColor \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eColor\u003c/span\u003e.\u003cspan\u003eDarkGray\u003c/span\u003e\n            )\n        ),\n        callbackAnswers \u003cspan\u003e=\u003c/span\u003e  {\n\n        },\n        callbackAllAnswered \u003cspan\u003e=\u003c/span\u003e {\n            showMessage \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003etrue\u003c/span\u003e\n        })\n\n    \u003cspan\u003eif\u003c/span\u003e (showMessage) {\n        \u003cspan\u003eSnackbar\u003c/span\u003e(\n            action \u003cspan\u003e=\u003c/span\u003e {\n                \u003cspan\u003eButton\u003c/span\u003e(\n                    onClick \u003cspan\u003e=\u003c/span\u003e { showMessage \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003efalse\u003c/span\u003e }\n                ) {\n                    \u003cspan\u003eText\u003c/span\u003e(\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003eDismiss\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e)\n                }\n            }\n        ) {\n            \u003cspan\u003eText\u003c/span\u003e(text \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003eAll questions are done\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e)\n        }\n    }\n}\u003c/pre\u003e\u003c/div\u003e \u003c/article\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": null,
  "modifiedTime": null
}
