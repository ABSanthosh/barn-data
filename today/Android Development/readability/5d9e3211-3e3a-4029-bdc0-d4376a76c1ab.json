{
  "id": "5d9e3211-3e3a-4029-bdc0-d4376a76c1ab",
  "title": "X improved login success rate by 2x after adopting passkeys",
  "link": "http://android-developers.googleblog.com/2024/11/x-improved-login-success-rate-after-adopting-passkeys.html",
  "description": "",
  "author": "Android Developers",
  "published": "2024-11-21T09:00:00.000-08:00",
  "source": "http://feeds.feedburner.com/blogspot/hsDu",
  "categories": [
    "case study"
  ],
  "byline": "",
  "length": 5952,
  "excerpt": "X improved their login success rate by implementing passkeys using the Credential Manager API for a simpler, more secure login experience for users.",
  "siteName": "Android Developers Blog",
  "favicon": "",
  "text": "Posted by Niharika Arora – Developer Relations Engineer From breaking news and entertainment to sports and politics, X is a social media app that aims to help nearly 500 million users worldwide get the full story with all the live commentary. Recently, X developers revamped the Android app’s login process so users never miss out on the conversations they’re interested in. Using the Credential Manager API, the team implemented new passkey authentication for quicker, easier, and safer access to the app. Simplifying login with passkeys Today, traditional password-based authentication systems are less secure and more prone to cyber attacks. Many users often choose easy-to-guess passwords, which bad actors can easily crack using brute force attacks. They also reuse the same passwords across multiple accounts, meaning if one password is hacked, all accounts are compromised. Passkeys address the growing concern of account security from weak passwords and phishing attacks by eliminating the need for passwords entirely. The feature provides a safer, more seamless sign-in experience, freeing users from having to remember their usernames or passwords. “Passkeys are a simpler, more secure way to log in, replacing passwords with pins or biometric data like fingerprints or facial recognition,” said Kylie McRoberts, head of safety at X. “We explored using passkeys to make signing in easier and safer for users, helping protect their accounts without the hassle of remembering passwords.” Since implementing passkeys, the X team has seen a substantial reduction in login times and metrics showing improved login flow. With passkeys, the app’s successful login rate has doubled compared to when it only relied on passwords. The team has also seen a decline in password reset requests from users who have enabled passkeys. According to X developers, adopting passkeys even came with benefits beyond enhanced security and a simplified login experience, like lower costs and improved UX. “Passkeys allowed us to cut down on expenses related to SMS-based two-factor authentication because they offer strong, inherent authentication,” said Kylie. “And with the ease of login, users are more likely to engage with our platform since there’s less friction to remember or reset passwords.” Passkeys rely on public-key cryptography to authenticate users and provide them with private keys. That means websites and apps can see and store the public key, but never the private key, which is encrypted and stored by the user’s credential provider. As keys are unique and tied to the website or app, they cannot be phished, further enhancing their security. Seamless integration using the Credential Manager API To integrate passkeys, X developers used Android’s Credential Manager API, which made the process “extremely smooth,” according to Kylie. The API unifies Smart Lock, One Tap, and Google Sign-In into a single, streamlined workflow. This also allowed developers to remove hundreds of lines of code, boosting implementation and reducing maintenance overhead. In the end, the migration to Credential Manager took X developers only two weeks to complete, followed by an additional two weeks to fully support passkeys. This was a “very fast migration” and the team “didn’t expect it to be that simple and straightforward,” said Saurabh Arora, a staff engineer at X. Thanks to Credential Manager’s simple, coroutine-powered API, the complexities of handling multiple authentication options were essentially removed, reducing code, the likelihood of bugs, and overall developer efforts. X developers saw a significant improvement in developer velocity by integrating the Credential Manager API. With their shift to passkey adoption through Credential Manager API, they achieved an: 80% code reduction in the authentication module 90% resolution of legacy edge case bugs 85% decrease in GIS, One Tap, and Smart Lock handling code Using the Credential Manager API's top-level methods, like createCredential and getCredential, simplified integration by removing custom logic complexities surrounding individual protocols. This uniform approach also meant X developers could use a single, consistent interface to handle various authentication types, such as passkeys, passwords, and federated sign-ins like Sign in with Google. “With Credential Manager’s simple API methods, we could retrieve passkeys, passwords, and federated tokens with a single call, cutting down on branching logic and making response handling cleaner,” said Saurabh. “Using different API methods, like createCredential() and getCredential(), also simplified credential storage, letting us handle passwords and passkeys in one place.” X developers didn’t face many challenges when adopting Sign in With Google using the Credential Manager API. Replacing X’s previous Google Sign In, One Tap, and Smart Lock code with a simpler Credential Manager implementation meant developers no longer had to handle connection or disconnection statuses and activity results, reducing the margin of error. A future with passkeys X's integration of passkeys shows that achieving a more secure and user-friendly authentication experience can be achieved. By leveraging Credential Manager API, X developers simplified the integration process, reduced potential bugs, and improved both security and developer velocity—all while sharpening the user experience. “Our advice for developers considering passkey integration would be to take advantage of the Credential Manager API,” said Saurabh. “It really simplifies the process and reduces code you need to write and maintain, making implementation better for developers.” Looking ahead, X plans to further enhance the user experience by allowing sign-ups with passkeys alone and providing a dedicated passkey management screen. Get started Learn how to improve your app’s login UX using passkeys and the Credential Manager API.",
  "image": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiJBDCUgyNU3PZGJjKyeLncL_zp7FIivM5V5Y1sVvf5ftjwbnughwJszK4JvMgcNu_oIukprwUBSwMoEQlGz9Cq4CUNV1iy2OsHwnjLaLVoQ5U5juzQ4u-D9gDFJMwtlSGzEAuv7XdrQMPXzsAObarEhYOWXTicQFQdhQDx4lX3brOWMMCIn4vGOh89CgQ/w1200-h630-p-k-no-nu/image1.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\u003cmeta name=\"twitter:image\" content=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiJBDCUgyNU3PZGJjKyeLncL_zp7FIivM5V5Y1sVvf5ftjwbnughwJszK4JvMgcNu_oIukprwUBSwMoEQlGz9Cq4CUNV1iy2OsHwnjLaLVoQ5U5juzQ4u-D9gDFJMwtlSGzEAuv7XdrQMPXzsAObarEhYOWXTicQFQdhQDx4lX3brOWMMCIn4vGOh89CgQ/s1600/image1.png\"/\u003e\n\u003cp\u003e\n\n\u003cem\u003ePosted by Niharika Arora – Developer Relations Engineer\u003c/em\u003e\n\n\u003ca href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiJBDCUgyNU3PZGJjKyeLncL_zp7FIivM5V5Y1sVvf5ftjwbnughwJszK4JvMgcNu_oIukprwUBSwMoEQlGz9Cq4CUNV1iy2OsHwnjLaLVoQ5U5juzQ4u-D9gDFJMwtlSGzEAuv7XdrQMPXzsAObarEhYOWXTicQFQdhQDx4lX3brOWMMCIn4vGOh89CgQ/s1600/image1.png\" imageanchor=\"1\"\u003e\u003cimg data-original-height=\"800\" data-original-width=\"100%\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiJBDCUgyNU3PZGJjKyeLncL_zp7FIivM5V5Y1sVvf5ftjwbnughwJszK4JvMgcNu_oIukprwUBSwMoEQlGz9Cq4CUNV1iy2OsHwnjLaLVoQ5U5juzQ4u-D9gDFJMwtlSGzEAuv7XdrQMPXzsAObarEhYOWXTicQFQdhQDx4lX3brOWMMCIn4vGOh89CgQ/s1600/image1.png\"/\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003eFrom breaking news and entertainment to sports and politics, \u003ca href=\"https://play.google.com/store/apps/details?id=com.twitter.android\u0026amp;hl=en_US\" target=\"_blank\"\u003eX\u003c/a\u003e is a social media app that aims to help nearly 500 million users worldwide get the full story with all the live commentary. Recently, X developers revamped the Android app’s login process so users never miss out on the conversations they’re interested in. Using the \u003ca href=\"https://developer.android.com/identity/sign-in/credential-manager\" target=\"_blank\"\u003eCredential Manager API\u003c/a\u003e, the team implemented new \u003ca href=\"https://developer.android.com/design/ui/mobile/guides/patterns/passkeys\" target=\"_blank\"\u003epasskey\u003c/a\u003e authentication for quicker, easier, and safer access to the app.\u003c/p\u003e\n\n\u003ch3\u003eSimplifying login with passkeys\u003c/h3\u003e\n\n\u003cp\u003eToday, traditional password-based authentication systems are \u003ca href=\"https://www.youtube.com/watch?v=2xdV-xut7EQ\" target=\"_blank\"\u003eless secure and more prone to cyber attacks\u003c/a\u003e. Many users often choose easy-to-guess passwords, which bad actors can easily crack using brute force attacks. They also reuse the same passwords across multiple accounts, meaning if one password is hacked, all accounts are compromised.\u003c/p\u003e\n\n\u003cp\u003ePasskeys address the growing concern of account security from weak passwords and phishing attacks by eliminating the need for passwords entirely. The feature provides a safer, more seamless sign-in experience, freeing users from having to remember their usernames or passwords.\u003c/p\u003e\n\n\u003cp\u003e“Passkeys are a simpler, more secure way to log in, replacing passwords with pins or biometric data like fingerprints or facial recognition,” said Kylie McRoberts, head of safety at X. “We explored using passkeys to make signing in easier and safer for users, helping protect their accounts without the hassle of remembering passwords.”\u003c/p\u003e\n\n\u003cp\u003eSince implementing passkeys, the X team has seen a substantial reduction in login times and metrics showing improved login flow. With passkeys, \u003cb\u003ethe app’s successful login rate has doubled\u003c/b\u003e compared to when it only relied on passwords. The team has also seen a decline in password reset requests from users who have enabled passkeys.\u003c/p\u003e\n\n\u003cp\u003eAccording to X developers, adopting passkeys even came with benefits beyond enhanced security and a simplified login experience, like lower costs and improved UX.\u003c/p\u003e\n\n\u003cp\u003e“Passkeys allowed us to cut down on expenses related to SMS-based two-factor authentication because they offer strong, inherent authentication,” said Kylie. “And with the ease of login, users are more likely to engage with our platform since there’s less friction to remember or reset passwords.”\u003c/p\u003e\n\n\u003cp\u003ePasskeys rely on public-key cryptography to authenticate users and provide them with private keys. That means websites and apps can see and store the public key, but never the private key, which is encrypted and stored by the user’s credential provider. As keys are unique and tied to the website or app, they cannot be phished, further enhancing their security.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"We achieved an 80% code reduction in the authentication module, a 90% resolution of legacy edge case bugs, and an 85% decrease in GIS, One Tap, and Smart Lock code using passkeys.” — Saurabh Arora, Staff Engineer at X.\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjdOQTlO7rbhdnDJJUNpjwWvbCTFpsaRuBPgqVk4hZ4wiyNS5S7uAb8vZN27OhYfuco2MOed59sX3XDebYku_A3T4RaNuo-vwaBaCC_uayVjccYqwyNaUANRIw8b8m5ax4RWNLAvxFhqkJNVC4BWbU0NdHf_4s55gbggc54eTMZomYM943MP9qe4RKjKgc/s1600/image5.png\" width=\"100%\"/\u003e\u003c/p\u003e\u003cbr/\u003e\n\n\n\u003ch3\u003eSeamless integration using the Credential Manager API\u003c/h3\u003e\n\n\u003cp\u003eTo integrate passkeys, X developers used Android’s Credential Manager API, which made the process “extremely smooth,” according to Kylie. The API unifies Smart Lock, One Tap, and Google Sign-In into a single, streamlined workflow. This also allowed developers to remove hundreds of lines of code, boosting implementation and reducing maintenance overhead.\u003c/p\u003e\n\n\u003cp\u003eIn the end, the migration to Credential Manager took X developers only two weeks to complete, followed by an additional two weeks to fully support passkeys. This was a “very fast migration” and the team “didn’t expect it to be that simple and straightforward,” said Saurabh Arora, a staff engineer at X. Thanks to Credential Manager’s simple, coroutine-powered API, the complexities of handling multiple authentication options were essentially removed, reducing code, the likelihood of bugs, and overall developer efforts.\u003c/p\u003e\n\n\u003cp\u003eX developers saw a significant improvement in developer velocity by integrating the Credential Manager API. With their shift to passkey adoption through Credential Manager API, they achieved an:\u003c/p\u003e\n\u003cul\u003e\u003cul\u003e\n\u003cli\u003e\u003cb\u003e80% code reduction in the authentication module\u003c/b\u003e\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\n\u003cli\u003e\u003cb\u003e90% resolution of legacy edge case bugs\u003c/b\u003e\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\n\u003cli\u003e\u003cb\u003e85% decrease in GIS, One Tap, and Smart Lock handling code\u003c/b\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/ul\u003e\n\n\u003cp\u003eUsing the Credential Manager API\u0026#39;s top-level methods, like \u003cspan\u003ecreateCredential\u003c/span\u003e and \u003cspan\u003egetCredential\u003c/span\u003e, simplified integration by removing custom logic complexities surrounding individual protocols. This uniform approach also meant X developers could use a single, consistent interface to handle various authentication types, such as passkeys, passwords, and federated sign-ins like Sign in with Google.\u003c/p\u003e\n\n\u003cp\u003e“With Credential Manager’s simple API methods, we could retrieve passkeys, passwords, and federated tokens with a single call, cutting down on branching logic and making response handling cleaner,” said Saurabh. “Using different API methods, like \u003cspan\u003ecreateCredential()\u003c/span\u003e and \u003cspan\u003egetCredential()\u003c/span\u003e, also simplified credential storage, letting us handle passwords and passkeys in one place.”\u003c/p\u003e\n\n\u003cp\u003eX developers didn’t face many challenges when adopting Sign in With Google using the Credential Manager API. Replacing X’s previous Google Sign In, One Tap, and Smart Lock code with a simpler Credential Manager implementation meant developers no longer had to handle connection or disconnection statuses and activity results, reducing the margin of error.\u003c/p\u003e\n\n\n\u003cp\u003e\u003cimg alt=\"A UI example of passkeys on X\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhM0eHIHOGdMmQIr50uNo7ACAavH1YEvJkhn7RTdb4JWfBYyfxir45Ws0pBVk0s4oVDDX2KvTDFgB6aJkE2yZdqtycecb61RAP4MePkm0QJVEGjRXtp99o1CPl5UJHquTh9ENoPlEZjeiOu2LITV67L-HgvqkKPbyiOk3I-RbkDzueU6FIgHBn7NY9IVJc/s1600/image6.png\" width=\"100%\"/\u003e\u003c/p\u003e\u003cbr/\u003e\n\n\u003ch3\u003eA future with passkeys\u003c/h3\u003e\n\n\u003cp\u003eX\u0026#39;s integration of passkeys shows that achieving a more secure and user-friendly authentication experience can be achieved. By leveraging Credential Manager API, X developers simplified the integration process, reduced potential bugs, and improved both security and developer velocity—all while sharpening the user experience.\u003c/p\u003e\n\n\u003cp\u003e“Our advice for developers considering passkey integration would be to take advantage of the Credential Manager API,” said Saurabh. “It really simplifies the process and reduces code you need to write and maintain, making implementation better for developers.”\u003c/p\u003e\n\n\u003cp\u003eLooking ahead, X plans to further enhance the user experience by allowing sign-ups with passkeys alone and providing a dedicated passkey management screen.\u003c/p\u003e\n\n\u003ch3\u003eGet started\u003c/h3\u003e\n\n\u003cp\u003eLearn how to improve your app’s login UX using \u003ca href=\"https://developer.android.com/design/ui/mobile/guides/patterns/passkeys\" target=\"_blank\"\u003epasskeys\u003c/a\u003e and the \u003ca href=\"https://developer.android.com/identity/sign-in/credential-manager\" target=\"_blank\"\u003eCredential Manager API\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\n\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": null,
  "modifiedTime": null
}
