{
  "id": "dc68f67a-74a7-4778-b053-f0b8df22099b",
  "title": "You Are Not Blocked",
  "link": "https://www.zacsweers.dev/you-are-not-blocked/",
  "description": "A common complaint I see in the Kotlin/Java/Android community is that someone is \"blocked\" waiting for an open source library release.This is a bit of a red flag from a developer standpoint and a nuisance as an OSS maintainer. It leads to folks making noise",
  "author": "Zac Sweers",
  "published": "Mon, 23 May 2022 04:26:13 GMT",
  "source": "https://www.zacsweers.dev/rss/",
  "categories": null,
  "byline": "Zac Sweers",
  "length": 2292,
  "excerpt": "A common complaint I see in the Kotlin/Java/Android community is that someone is \"blocked\" waiting for an open source library release. This is a bit of a red flag from a developer standpoint and a nuisance as an OSS maintainer. It leads to folks making noise in the issue trackers of those projects, varying from demanding immediate release to complaining about the lack of one. It's easy to let your frustration boil over into impatience, I'm certainly not perfect in this either. However, I've f",
  "siteName": "Zac Sweers",
  "favicon": "",
  "text": "A common complaint I see in the Kotlin/Java/Android community is that someone is \"blocked\" waiting for an open source library release.This is a bit of a red flag from a developer standpoint and a nuisance as an OSS maintainer. It leads to folks making noise in the issue trackers of those projects, varying from demanding immediate release to complaining about the lack of one. It's easy to let your frustration boil over into impatience, I'm certainly not perfect in this either. However, I've found there are solutions for this in basically every case. Not all of them are perfect and none of them are as convenient as a simple version bump, but there is always something else you can do to temporarily unblock yourself.Build from source, host on your own internal artifactory or GitHub packages. This is the ideal case and a worthwhile investment.Use a source-based repository like jitpack.io.Use a snapshot, many libraries publish them.Build from source, check the jar/aar into your repo + a Gradle substitution rule.Complaints don't make maintainers release faster. It may be with intent to imply urgency, but your urgency is not theirs. However well-intended, it is more likely than not going to come off as entitled and you are never entitled to something that is free.The most effective way to speed up a release is to test the bugfix or feature ahead of time through any of the means mentioned above and report that on the issue tracker.Circling back to confirm the fix resolves it for us!We tried out the new API and it works great!Or the most important of all:We tried out the new change and found an issue, here are the details!Constructive actions like these water two plants with one hose: you build rapport with the maintainer and you give them confidence that releasing the desired change is safe. Those are infinitely more valuable than a drive-by release request or complaint.If you're an OSS maintainer, feel free to link this post as a response to commenters that would benefit from this insight. I also highly recommend Tony George's Etiquette in open source projects post.*There are of course some projects very specific situations that waiting is their only option, such as an SDK that depends on a third party library in its public API.Thanks Jesse for reviewing this.",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n    \u003cp\u003eA common complaint I see in the Kotlin/Java/Android community is that someone is \u0026#34;blocked\u0026#34; waiting for an open source library release.\u003c/p\u003e\u003cp\u003eThis is a bit of a red flag from a developer standpoint and a nuisance as an OSS maintainer. It leads to folks making noise in the issue trackers of those projects, varying from demanding immediate release to complaining about the lack of one. \u003c/p\u003e\u003cp\u003eIt\u0026#39;s easy to let your frustration boil over into impatience, I\u0026#39;m certainly not perfect in this either. However, I\u0026#39;ve found there are solutions for this in basically every case. Not all of them are perfect and none of them are as convenient as a simple version bump, but there is always something else you can do to temporarily unblock yourself.\u003c/p\u003e\u003cul\u003e\u003cli\u003eBuild from source, host on your own internal \u003ca href=\"https://jfrog.com/artifactory/?ref=zacsweers.dev\"\u003eartifactory\u003c/a\u003e or GitHub packages. This is the ideal case and a worthwhile investment.\u003c/li\u003e\u003cli\u003eUse a source-based repository like \u003ca href=\"https://www.zacsweers.dev/you-are-not-blocked/jitpack.io\"\u003ejitpack.io\u003c/a\u003e.\u003c/li\u003e\u003cli\u003eUse a snapshot, many libraries publish them.\u003c/li\u003e\u003cli\u003eBuild from source, check the jar/aar into your repo + a Gradle substitution rule.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eComplaints don\u0026#39;t make maintainers release faster. It may be with intent to imply urgency, but your urgency is not theirs. However well-intended, it is more likely than not going to come off as entitled and you are never entitled to something that is \u003cstrong\u003efree\u003c/strong\u003e.\u003c/p\u003e\u003cp\u003eThe most effective way to speed up a release is to test the bugfix or feature ahead of time through any of the means mentioned above and \u003cem\u003ereport that\u003c/em\u003e on the issue tracker.\u003c/p\u003e\u003cblockquote\u003eCircling back to confirm the fix resolves it for us!\u003cbr/\u003eWe tried out the new API and it works great!\u003c/blockquote\u003e\u003cp\u003eOr the most important of all:\u003c/p\u003e\u003cblockquote\u003eWe tried out the new change and found an issue, here are the details!\u003c/blockquote\u003e\u003cp\u003eConstructive actions like these water two plants with one hose: you build rapport with the maintainer and you give them confidence that releasing the desired change is safe. Those are infinitely more valuable than a drive-by release request or complaint.\u003c/p\u003e\u003chr/\u003e\u003cp\u003eIf you\u0026#39;re an OSS maintainer, feel free to link this post as a response to commenters that would benefit from this insight. I also highly recommend \u003ca href=\"https://teejeetech.medium.com/etiquette-in-open-source-projects-f302b6e19c38?ref=zacsweers.dev\"\u003eTony George\u0026#39;s Etiquette in open source projects\u003c/a\u003e post.\u003c/p\u003e\u003chr/\u003e\u003cp\u003e*There are of course some projects very specific situations that waiting is their only option, such as an SDK that depends on a third party library in its public API.\u003c/p\u003e\u003cp\u003e\u003cem\u003eThanks \u003ca href=\"https://twitter.com/jessewilson?ref=zacsweers.dev\"\u003eJesse\u003c/a\u003e for reviewing this.\u003c/em\u003e\u003c/p\u003e\n  \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "3 min read",
  "publishedTime": "2022-05-23T04:26:13Z",
  "modifiedTime": "2022-05-23T04:26:13Z"
}
