{
  "id": "52fa2546-7772-49af-80b2-44f6613cf0ea",
  "title": "Shake Http Tracking Log",
  "link": "https://android-arsenal.com/details/1/8490",
  "description": "Shake to see the HTTP, BLE, NFC Tracking log. It is a development library that can be easily viewed with BottomSheetDialog without looking at Log.d when developing an app.",
  "author": "",
  "published": "Fri, 29 Mar 2024 13:27:05 +0300",
  "source": "https://feeds.feedburner.com/Android_Arsenal",
  "categories": null,
  "byline": "Vladislav Bauer",
  "length": 1621,
  "excerpt": "REST | Shake Http Tracking Log by jimbo (sieunju)",
  "siteName": "Android Arsenal",
  "favicon": "https://android-arsenal.com/favicon.png",
  "text": "앱 개발시 Log.d 보지 않고 BottomSheetDialog 로 간단하게 볼수 있는 개발용 라이브러리입니다. 안드로이드 HTTP 통신을 Netty로 사용한다면...빠르게 뒤로가기를 눌러주세요 ???? 이 라이브러리는 OkHttp3 기준으로 동작합니다. 앱을 사용하다가 단말기를 흔들면 트래킹한 로그들을 간단히 볼수 있습니다. 라이브러리 추가 하는 방법 Project Gradle (kts) allprojects { repositories { maven { url = URI(\"https://jitpack.io\") } } } App Module Gradle dependencies { // UI implementation(\"com.github.sieunju.httptracking:ui:$latestVersion\") // Interceptor Java Module implementation(\"com.github.sieunju.httptracking:interceptor:$latestVersion\") } 유의사항 혹시나 머티리얼을 사용하시거나 프로젝트에 사용중인 라이브러리랑 충돌이 일어나는 경우에는 아래와 같이 사용해주시면 됩니다. ????‍♂️ A.K.A exclude implementation(\"com.github.sieunju.httptracking:ui:${lateversion}\") { exclude(\"com.google.android.material\") exclude(\"androidx.appcompat:appcompat\") exclude(\"androidx.constraintlayout\") } 사용방법 Builder 패턴으로 Application Class 에서 간단히 빌드 타입을 설정합니다. Application.kt HttpTracking.Builder() .setBuildType(BuildConfig.DEBUG) .setLogMaxSize(3000) .build(this) OkHttpClient 에서 ‘addInterceptor’ 를 통해 TrackingHttpInterceptor 를 추가합니다. 해당 라이브러리는 되도록이면 디버그모드에만 처리하도록 지향합니다. OkHttpClient.Builder().apply{ if(Debug) { addInterceptor(TrackingHttpInterceptor) } } UI Example PC로 로그 확인 하는 방법 setWifiShare(true) HttpTracking.Builder() .setBuildType(BuildConfig.DEBUG) .setWifiShare(true) .setLogMaxSize(3000) .build(this) Step 1 Step 2 Step 3 위에 화면처럼 원하는 로그를 선택하시고 공유 하기 버튼을 선택하시면 http://{ip}:{port}/tracking 주소가 노출되는데 해당 주소를 PC에 입력하시면 선택한 로그를 볼수 있습니다. ???? ???? 공공장소에서 사용은 절대로 지양합니다. (본인의 HTTP 통신 로그를 누군가 볼수 있습니다..)",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"description\"\u003e\u003carticle\u003e\u003cblockquote\u003e \u003cp dir=\"auto\"\u003e\u003ca href=\"https://jitpack.io/#sieunju/httptracking\" rel=\"nofollow\" target=\"_blank\"\u003e\u003c/a\u003e\u003cbr/\u003e 앱 개발시 Log.d 보지 않고 BottomSheetDialog 로 간단하게 볼수 있는 개발용 라이브러리입니다.\u003c/p\u003e \u003c/blockquote\u003e \u003chr/\u003e  \u003cp dir=\"auto\"\u003e안드로이드 HTTP 통신을 Netty로 사용한다면...빠르게 뒤로가기를 눌러주세요 ????\u003c/p\u003e \u003cp dir=\"auto\"\u003e이 라이브러리는 OkHttp3 기준으로 동작합니다.\u003c/p\u003e \u003cblockquote\u003e \u003cp dir=\"auto\"\u003e앱을 사용하다가 단말기를 흔들면 트래킹한 로그들을 간단히 볼수 있습니다.\u003c/p\u003e \u003c/blockquote\u003e \u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003e라이브러리 추가 하는 방법\u003c/h2\u003e\u003c/p\u003e \u003cul dir=\"auto\"\u003e \u003cli\u003eProject Gradle (kts)\u003c/li\u003e \u003c/ul\u003e \u003cdiv dir=\"auto\" data-snippet-clipboard-copy-content=\"allprojects { repositories { maven { url = URI(\u0026#34;https://jitpack.io\u0026#34;) } } }\"\u003e\u003cpre\u003eallprojects {\n    repositories {\n        maven { url \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eURI\u003c/span\u003e(\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003ehttps://jitpack.io\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e) }\n    }\n}\u003c/pre\u003e\u003c/div\u003e \u003cul dir=\"auto\"\u003e \u003cli\u003eApp Module Gradle\u003c/li\u003e \u003c/ul\u003e \u003cdiv dir=\"auto\" data-snippet-clipboard-copy-content=\"dependencies { // UI implementation(\u0026#34;com.github.sieunju.httptracking:ui:$latestVersion\u0026#34;) // Interceptor Java Module implementation(\u0026#34;com.github.sieunju.httptracking:interceptor:$latestVersion\u0026#34;) }\"\u003e\u003cpre\u003edependencies {\n    \u003cspan\u003e\u003cspan\u003e//\u003c/span\u003e UI\u003c/span\u003e\n    implementation(\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003ecom.github.sieunju.httptracking:ui:\u003cspan\u003e$l\u003cspan\u003eatestVersion\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e)\n    \u003cspan\u003e\u003cspan\u003e//\u003c/span\u003e Interceptor Java Module\u003c/span\u003e\n    implementation(\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003ecom.github.sieunju.httptracking:interceptor:\u003cspan\u003e$l\u003cspan\u003eatestVersion\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e)\n}\u003c/pre\u003e\u003c/div\u003e \u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003e유의사항\u003c/h2\u003e\u003c/p\u003e \u003cul dir=\"auto\"\u003e \u003cli\u003e혹시나 머티리얼을 사용하시거나 프로젝트에 사용중인 라이브러리랑 충돌이 일어나는 경우에는 아래와 같이 사용해주시면 됩니다. ????‍♂️\u003c/li\u003e \u003cli\u003eA.K.A exclude\u003c/li\u003e \u003c/ul\u003e \u003cdiv dir=\"auto\" data-snippet-clipboard-copy-content=\"implementation(\u0026#34;com.github.sieunju.httptracking:ui:${lateversion}\u0026#34;) { exclude(\u0026#34;com.google.android.material\u0026#34;) exclude(\u0026#34;androidx.appcompat:appcompat\u0026#34;) exclude(\u0026#34;androidx.constraintlayout\u0026#34;) }\"\u003e\u003cpre\u003eimplementation(\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003ecom.github.sieunju.httptracking:ui:\u003cspan\u003e\u003cspan\u003e${\u003c/span\u003elateversion\u003cspan\u003e}\u003c/span\u003e\u003c/span\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e) {\n    exclude(\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003ecom.google.android.material\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e)\n    exclude(\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003eandroidx.appcompat:appcompat\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e)\n    exclude(\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003eandroidx.constraintlayout\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e)\n}\u003c/pre\u003e\u003c/div\u003e \u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003e사용방법\u003c/h2\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003eBuilder 패턴으로 Application Class 에서 간단히 빌드 타입을 설정합니다.\u003c/p\u003e \u003cdiv dir=\"auto\" data-snippet-clipboard-copy-content=\"Application.kt HttpTracking.Builder() .setBuildType(BuildConfig.DEBUG) .setLogMaxSize(3000) .build(this)\"\u003e\u003cpre\u003e\u003cspan\u003eApplication\u003c/span\u003e.kt\n\n\u003cspan\u003eHttpTracking\u003c/span\u003e.\u003cspan\u003eBuilder\u003c/span\u003e()\n    .setBuildType(\u003cspan\u003eBuildConfig\u003c/span\u003e.\u003cspan\u003eDEBUG\u003c/span\u003e)\n    .setLogMaxSize(\u003cspan\u003e3000\u003c/span\u003e)\n    .build(\u003cspan\u003ethis\u003c/span\u003e)\u003c/pre\u003e\u003c/div\u003e \u003cp dir=\"auto\"\u003eOkHttpClient 에서 ‘addInterceptor’ 를 통해 TrackingHttpInterceptor 를 추가합니다.\u003c/p\u003e \u003cp dir=\"auto\"\u003e해당 라이브러리는 되도록이면 디버그모드에만 처리하도록 지향합니다.\u003c/p\u003e \u003cdiv dir=\"auto\" data-snippet-clipboard-copy-content=\"OkHttpClient.Builder().apply{ if(Debug) { addInterceptor(TrackingHttpInterceptor) } }\"\u003e\u003cpre\u003e\u003cspan\u003eOkHttpClient\u003c/span\u003e.\u003cspan\u003eBuilder\u003c/span\u003e().\u003cspan\u003eapply\u003c/span\u003e{\n    \u003cspan\u003eif\u003c/span\u003e(\u003cspan\u003eDebug\u003c/span\u003e) {\n        addInterceptor(\u003cspan\u003eTrackingHttpInterceptor\u003c/span\u003e)\n    }\n}\u003c/pre\u003e\u003c/div\u003e \u003ctable\u003e \u003cthead\u003e \u003ctr\u003e \u003cth\u003eUI Example\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody\u003e \u003ctr\u003e \u003ctd\u003e\u003ca href=\"https://raw.githubusercontent.com/sieunju/httptracking/develop/storage/list_example_1.png\" rel=\"nofollow\" target=\"_blank\"\u003e\u003cimg data-layzr=\"https://raw.githubusercontent.com/sieunju/httptracking/develop/storage/list_example_1.png\" src=\"https://raw.githubusercontent.com/sieunju/httptracking/develop/storage/list_example_1.png\"/\u003e\u003c/a\u003e\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e \u003c/table\u003e \u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003ePC로 로그 확인 하는 방법\u003c/h2\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003esetWifiShare(true)\u003c/p\u003e \u003cdiv dir=\"auto\" data-snippet-clipboard-copy-content=\"HttpTracking.Builder() .setBuildType(BuildConfig.DEBUG) .setWifiShare(true) .setLogMaxSize(3000) .build(this)\"\u003e\u003cpre\u003e\u003cspan\u003eHttpTracking\u003c/span\u003e.\u003cspan\u003eBuilder\u003c/span\u003e()\n    .setBuildType(\u003cspan\u003eBuildConfig\u003c/span\u003e.\u003cspan\u003eDEBUG\u003c/span\u003e)\n    .setWifiShare(\u003cspan\u003etrue\u003c/span\u003e)\n    .setLogMaxSize(\u003cspan\u003e3000\u003c/span\u003e)\n    .build(\u003cspan\u003ethis\u003c/span\u003e)\u003c/pre\u003e\u003c/div\u003e \u003ctable\u003e \u003cthead\u003e \u003ctr\u003e \u003cth\u003eStep 1\u003c/th\u003e \u003cth\u003eStep 2\u003c/th\u003e \u003cth\u003eStep 3\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody\u003e \u003ctr\u003e \u003ctd\u003e\u003ca href=\"https://raw.githubusercontent.com/sieunju/httptracking/develop/storage/example_wifi_share_1.png\" rel=\"nofollow\" target=\"_blank\"\u003e\u003cimg data-layzr=\"https://raw.githubusercontent.com/sieunju/httptracking/develop/storage/example_wifi_share_1.png\" src=\"https://raw.githubusercontent.com/sieunju/httptracking/develop/storage/example_wifi_share_1.png\"/\u003e\u003c/a\u003e\u003c/td\u003e \u003ctd\u003e\u003ca href=\"https://raw.githubusercontent.com/sieunju/httptracking/develop/storage/example_wifi_share_2.png\" rel=\"nofollow\" target=\"_blank\"\u003e\u003cimg data-layzr=\"https://raw.githubusercontent.com/sieunju/httptracking/develop/storage/example_wifi_share_2.png\" src=\"https://raw.githubusercontent.com/sieunju/httptracking/develop/storage/example_wifi_share_2.png\"/\u003e\u003c/a\u003e\u003c/td\u003e \u003ctd\u003e\u003ca href=\"https://raw.githubusercontent.com/sieunju/httptracking/develop/storage/example_wifi_share_3.png\" rel=\"nofollow\" target=\"_blank\"\u003e\u003cimg data-layzr=\"https://raw.githubusercontent.com/sieunju/httptracking/develop/storage/example_wifi_share_3.png\" src=\"https://raw.githubusercontent.com/sieunju/httptracking/develop/storage/example_wifi_share_3.png\"/\u003e\u003c/a\u003e\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e \u003c/table\u003e \u003cp dir=\"auto\"\u003e위에 화면처럼 원하는 로그를 선택하시고 공유 하기 버튼을 선택하시면 http://{ip}:{port}/tracking 주소가 노출되는데 해당 주소를 PC에 입력하시면 선택한 로그를 볼수 있습니다. ????\u003c/p\u003e \u003cp dir=\"auto\"\u003e\u003ch4 dir=\"auto\"\u003e???? 공공장소에서 사용은 절대로 지양합니다. (본인의 HTTP 통신 로그를 누군가 볼수 있습니다..)\u003c/h4\u003e\u003c/p\u003e \u003c/article\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": null,
  "modifiedTime": null
}
