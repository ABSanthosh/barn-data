{
  "id": "ef7e735d-526b-440c-9103-55946a2c2d64",
  "title": "MaterialStoryView",
  "link": "https://android-arsenal.com/details/1/8479",
  "description": "MaterialStoryView is an Android library for implementing a story carousel, similar to those found on social networks like Instagram and Facebook. This library makes it easy to add a story viewing component to your Android application, allowing for quick and simple integration.",
  "author": "",
  "published": "Wed, 06 Mar 2024 08:36:22 +0300",
  "source": "https://feeds.feedburner.com/Android_Arsenal",
  "categories": null,
  "byline": "Vladislav Bauer",
  "length": 5510,
  "excerpt": "User Stories | MaterialStoryView by Welbert Moreira (welbert6)",
  "siteName": "Android Arsenal",
  "favicon": "https://android-arsenal.com/favicon.png",
  "text": "StoryView Você pode ler em português (https://github.com/welbert6/MaterialStoryView/edit/master/ReadmePT.md) Screenshots Introduction MaterialStoryView is an Android library for implementing a story carousel, similar to those found on social networks like Instagram and Facebook. This library makes it easy to add a story viewing component to your Android application, allowing for quick and simple integration. ✅ Saves story as seen in SharedPreferences: Ensures users don’t repeatedly see the same story, enhancing user experience. ✅ Action button on story: Allows for direct interactions, such as visiting a link or performing a specific action, right from the story. ✅ Navigation between stories by tapping on the right and left side of the screen: Makes navigating through stories easy, letting users advance or go back with a simple tap. ✅ Supports RTL and LTR: Accommodates users of languages that are read from right to left (RTL) and left to right (LTR), ensuring a global and inclusive user experience. ✅ Supports stories with and without titles: Offers flexibility to display stories both with titles for context and without titles for a cleaner design. ✅ 100% Customization: Allows full customization of the story appearance, including duration, indicator color, image radius size, text color, etc., to perfectly match your application’s visual identity. Setup 1. Add the gradle dependency Add JitPack repository to your root build.gradle at the end of repositories: allprojects { repositories { ... maven { url 'https://jitpack.io' } } } Add the dependency: dependencies { implementation 'com.github.welbert6:MaterialStoryView:1.0.0' } 2. Usage Add CarouselStoryView to your XML layout: \u003ccom.moreirasoft.materialstoryview.presentation.customviews.CarouselStoryView android:id=\"@+id/carouselStoryView\" android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:orientation=\"horizontal\" android:layout_margin=\"10dp\" app:miniStoryTextColor=\"#000\" app:miniStoryImageRadius=\"36dp\" app:miniStorySpaceBetweenImageAndIndicator=\"2dp\" app:miniStoryItemIndicatorWidth=\"3dp\" app:storyDuration=\"6000\" /\u003e Initialize and configure CarouselStoryView in your Activity: val carrosselStoryView: CarouselStoryView = findViewById(R.id.carouselStoryView) //Ensure to call init With Activity to init lib carrosselStoryView.initWithActivity(this) // You can addStory or addStories if you have a list of stories carrosselStoryView.addStory(getCopasaStories()) carrosselStoryView.addStory(getCemigStories()) carrosselStoryView.addStory(getCminStories()) carrosselStoryView.addStories(getModelStorys()) Customization MaterialStoryView offers various customization options through XML attributes, allowing for modifications of: Text size and color Colors of visited and pending story indicators Story image radius Story item indicator width Story duration For more details on customization options, refer to the available options in the declare-styleable XML attributes section. miniStoryTextSize (Mini Story Text Size): Sets the text size of mini story captions, allowing customization of text scale for better readability. miniStoryTextColor (Mini Story Text Color): Specifies the text color for mini story captions, offering the ability to match the text color with the app theme. miniStoryTextFont (Mini Story Text Font): Allows setting the text font for mini stories through a reference, enabling typography customization to align with the visual identity. miniStoryVisitedIndicatorColor (Mini Story Visited Indicator Color): Defines the indicator color for stories that have been viewed by the user, helping distinguish between new and reviewed content. miniStoryPendingIndicatorColor (Mini Story Pending Indicator Color): Specifies the indicator color for stories that have not yet been viewed, facilitating the identification of new content. miniStoryImageRadius (Mini Story Image Radius): Determines the radius of images in mini stories, allowing the corners of images to be rounded for a softer look. miniStorySpaceBetweenImageAndIndicator (Space Between Mini Story Image and Indicator): Sets the space Credit shts/StoriesProgressView: This Library was used to display the progress of the stories Developed By Welbert Moreira LinkedIn Feel free to contribute improvements, bug fixes, or new features. Your contribution is welcome! License MIT License Copyright (c) 2024 Welbert Moreira Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "image": "https://raw.githubusercontent.com/welbert6/MaterialStoryView/master/images/Screenshot_7.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"description\"\u003e\u003carticle\u003e\u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003eStoryView\u003c/h2\u003e\u003c/p\u003e  \u003cp dir=\"auto\"\u003eVocê pode ler em português (\u003ca href=\"https://github.com/welbert6/MaterialStoryView/blob/master/ReadmePT.md\" rel=\"nofollow\" target=\"_blank\"\u003ehttps://github.com/welbert6/MaterialStoryView/edit/master/ReadmePT.md\u003c/a\u003e)\u003c/p\u003e \u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003eScreenshots\u003c/h2\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003e\u003ca href=\"https://github.com/welbert6/MaterialStoryView/raw/master/images/Screenshot_7.png\" rel=\"nofollow\" target=\"_blank\"\u003e\u003cimg data-layzr=\"https://raw.githubusercontent.com/welbert6/MaterialStoryView/master/images/Screenshot_7.png\" src=\"https://raw.githubusercontent.com/welbert6/MaterialStoryView/master/images/Screenshot_7.png\"/\u003e\u003c/a\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003e\u003ca href=\"https://github.com/welbert6/MaterialStoryView/raw/master/images/Screenshot1.png\" rel=\"nofollow\" target=\"_blank\"\u003e\u003cimg width=\"480\" data-layzr=\"https://raw.githubusercontent.com/welbert6/MaterialStoryView/master/images/Screenshot1.png\" src=\"https://raw.githubusercontent.com/welbert6/MaterialStoryView/master/images/Screenshot1.png\"/\u003e\u003c/a\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003eIntroduction\u003c/h2\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003eMaterialStoryView is an Android library for implementing a story carousel, similar to those found on social networks like Instagram and Facebook. This library makes it easy to add a story viewing component to your Android application, allowing for quick and simple integration.\u003c/p\u003e \u003cp dir=\"auto\"\u003e✅ Saves story as seen in SharedPreferences: Ensures users don’t repeatedly see the same story, enhancing user experience.\u003c/p\u003e \u003cp dir=\"auto\"\u003e✅ Action button on story: Allows for direct interactions, such as visiting a link or performing a specific action, right from the story.\u003c/p\u003e \u003cp dir=\"auto\"\u003e✅ Navigation between stories by tapping on the right and left side of the screen: Makes navigating through stories easy, letting users advance or go back with a simple tap.\u003c/p\u003e \u003cp dir=\"auto\"\u003e✅ Supports RTL and LTR: Accommodates users of languages that are read from right to left (RTL) and left to right (LTR), ensuring a global and inclusive user experience.\u003c/p\u003e \u003cp dir=\"auto\"\u003e✅ Supports stories with and without titles: Offers flexibility to display stories both with titles for context and without titles for a cleaner design.\u003c/p\u003e \u003cp dir=\"auto\"\u003e✅ 100% Customization: Allows full customization of the story appearance, including duration, indicator color, image radius size, text color, etc., to perfectly match your application’s visual identity.\u003c/p\u003e \u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003eSetup\u003c/h2\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003e\u003ch4 dir=\"auto\"\u003e1. Add the gradle dependency\u003c/h4\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003eAdd JitPack repository to your root build.gradle at the end of repositories:\u003c/p\u003e \u003cdiv data-snippet-clipboard-copy-content=\"allprojects { repositories { ... maven { url \u0026#39;https://jitpack.io\u0026#39; } } }\"\u003e\u003cpre\u003e\u003ccode\u003eallprojects {\n  repositories {\n   ...\n   maven { url \u0026#39;https://jitpack.io\u0026#39; }\n  }\n }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e \u003cp dir=\"auto\"\u003eAdd the dependency:\u003c/p\u003e \u003cdiv data-snippet-clipboard-copy-content=\"dependencies { implementation \u0026#39;com.github.welbert6:MaterialStoryView:1.0.0\u0026#39; }\"\u003e\u003cpre\u003e\u003ccode\u003edependencies {\n                 implementation \u0026#39;com.github.welbert6:MaterialStoryView:1.0.0\u0026#39;\n }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e \u003cp dir=\"auto\"\u003e\u003ch4 dir=\"auto\"\u003e2. Usage\u003c/h4\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003eAdd CarouselStoryView to your XML layout:\u003c/p\u003e \u003cdiv dir=\"auto\" data-snippet-clipboard-copy-content=\"\u0026lt;com.moreirasoft.materialstoryview.presentation.customviews.CarouselStoryView android:id=\u0026#34;@+id/carouselStoryView\u0026#34; android:layout_width=\u0026#34;match_parent\u0026#34; android:layout_height=\u0026#34;wrap_content\u0026#34; android:orientation=\u0026#34;horizontal\u0026#34; android:layout_margin=\u0026#34;10dp\u0026#34; app:miniStoryTextColor=\u0026#34;#000\u0026#34; app:miniStoryImageRadius=\u0026#34;36dp\u0026#34; app:miniStorySpaceBetweenImageAndIndicator=\u0026#34;2dp\u0026#34; app:miniStoryItemIndicatorWidth=\u0026#34;3dp\u0026#34; app:storyDuration=\u0026#34;6000\u0026#34; /\u0026gt;\"\u003e\u003cpre\u003e\u0026lt;\u003cspan\u003ecom\u003c/span\u003e.moreirasoft.materialstoryview.presentation.customviews.CarouselStoryView\n    \u003cspan\u003eandroid\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003eid\u003c/span\u003e=\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e@+id/carouselStoryView\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e\n    \u003cspan\u003eandroid\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003elayout_width\u003c/span\u003e=\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003ematch_parent\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e\n    \u003cspan\u003eandroid\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003elayout_height\u003c/span\u003e=\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003ewrap_content\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e\n    \u003cspan\u003eandroid\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003eorientation\u003c/span\u003e=\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003ehorizontal\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e\n    \u003cspan\u003eandroid\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003elayout_margin\u003c/span\u003e=\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e10dp\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e\n    \u003cspan\u003eapp\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003eminiStoryTextColor\u003c/span\u003e=\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e#000\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e\n    \u003cspan\u003eapp\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003eminiStoryImageRadius\u003c/span\u003e=\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e36dp\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e\n    \u003cspan\u003eapp\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003eminiStorySpaceBetweenImageAndIndicator\u003c/span\u003e=\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e2dp\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e\n    \u003cspan\u003eapp\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003eminiStoryItemIndicatorWidth\u003c/span\u003e=\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e3dp\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e\n    \u003cspan\u003eapp\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003estoryDuration\u003c/span\u003e=\u003cspan\u003e\u003cspan\u003e\u0026#34;\u003c/span\u003e6000\u003cspan\u003e\u0026#34;\u003c/span\u003e\u003c/span\u003e /\u0026gt;\n\u003c/pre\u003e\u003c/div\u003e \u003cp dir=\"auto\"\u003e\u003ch4 dir=\"auto\"\u003eInitialize and configure CarouselStoryView in your Activity:\u003c/h4\u003e\u003c/p\u003e \u003cdiv dir=\"auto\" data-snippet-clipboard-copy-content=\"val carrosselStoryView: CarouselStoryView = findViewById(R.id.carouselStoryView) //Ensure to call init With Activity to init lib carrosselStoryView.initWithActivity(this) // You can addStory or addStories if you have a list of stories carrosselStoryView.addStory(getCopasaStories()) carrosselStoryView.addStory(getCemigStories()) carrosselStoryView.addStory(getCminStories()) carrosselStoryView.addStories(getModelStorys())\"\u003e\u003cpre\u003e\u003cspan\u003eval\u003c/span\u003e \u003cspan\u003ecarrosselStoryView\u003c/span\u003e: \u003cspan\u003eCarouselStoryView\u003c/span\u003e = \u003cspan\u003efindViewById\u003c/span\u003e(\u003cspan\u003eR\u003c/span\u003e.\u003cspan\u003eid\u003c/span\u003e.\u003cspan\u003ecarouselStoryView\u003c/span\u003e)\n\n\u003cspan\u003e//Ensure to call init With Activity to init lib\u003c/span\u003e\n\u003cspan\u003ecarrosselStoryView\u003c/span\u003e.\u003cspan\u003einitWithActivity\u003c/span\u003e(\u003cspan\u003ethis\u003c/span\u003e)\n\n\u003cspan\u003e// You can addStory or addStories if you have a list of stories \u003c/span\u003e\n\u003cspan\u003ecarrosselStoryView\u003c/span\u003e.\u003cspan\u003eaddStory\u003c/span\u003e(\u003cspan\u003egetCopasaStories\u003c/span\u003e())\n\u003cspan\u003ecarrosselStoryView\u003c/span\u003e.\u003cspan\u003eaddStory\u003c/span\u003e(\u003cspan\u003egetCemigStories\u003c/span\u003e())\n\u003cspan\u003ecarrosselStoryView\u003c/span\u003e.\u003cspan\u003eaddStory\u003c/span\u003e(\u003cspan\u003egetCminStories\u003c/span\u003e())\n\u003cspan\u003ecarrosselStoryView\u003c/span\u003e.\u003cspan\u003eaddStories\u003c/span\u003e(\u003cspan\u003egetModelStorys\u003c/span\u003e())\u003c/pre\u003e\u003c/div\u003e \u003cp dir=\"auto\"\u003e\u003ch4 dir=\"auto\"\u003eCustomization\u003c/h4\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003eMaterialStoryView offers various customization options through XML attributes, allowing for modifications of:\u003c/p\u003e \u003cdiv data-snippet-clipboard-copy-content=\"Text size and color Colors of visited and pending story indicators Story image radius Story item indicator width Story duration\"\u003e\u003cpre\u003e\u003ccode\u003eText size and color\nColors of visited and pending story indicators\nStory image radius\nStory item indicator width\nStory duration\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e \u003cp dir=\"auto\"\u003eFor more details on customization options, refer to the available options in the declare-styleable XML attributes section.\u003c/p\u003e \u003cul dir=\"auto\"\u003e \u003cli\u003eminiStoryTextSize (Mini Story Text Size): Sets the text size of mini story captions, allowing customization of text scale for better readability.\u003c/li\u003e \u003cli\u003eminiStoryTextColor (Mini Story Text Color): Specifies the text color for mini story captions, offering the ability to match the text color with the app theme.\u003c/li\u003e \u003cli\u003eminiStoryTextFont (Mini Story Text Font): Allows setting the text font for mini stories through a reference, enabling typography customization to align with the visual identity.\u003c/li\u003e \u003cli\u003eminiStoryVisitedIndicatorColor (Mini Story Visited Indicator Color): Defines the indicator color for stories that have been viewed by the user, helping distinguish between new and reviewed content.\u003c/li\u003e \u003cli\u003eminiStoryPendingIndicatorColor (Mini Story Pending Indicator Color): Specifies the indicator color for stories that have not yet been viewed, facilitating the identification of new content.\u003c/li\u003e \u003cli\u003eminiStoryImageRadius (Mini Story Image Radius): Determines the radius of images in mini stories, allowing the corners of images to be rounded for a softer look.\u003c/li\u003e \u003cli\u003eminiStorySpaceBetweenImageAndIndicator (Space Between Mini Story Image and Indicator): Sets the space\u003c/li\u003e \u003c/ul\u003e \u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003eCredit\u003c/h2\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003e\u003ca href=\"https://github.com/OMARIHAMZA/StoryView\" rel=\"nofollow\" target=\"_blank\"\u003eshts/StoriesProgressView\u003c/a\u003e: This Library was used to display the progress of the stories\u003c/p\u003e \u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003eDeveloped By\u003c/h2\u003e\u003c/p\u003e \u003cp dir=\"auto\"\u003e\u003ch4 dir=\"auto\"\u003eWelbert Moreira\u003c/h4\u003e\u003c/p\u003e \u003cul dir=\"auto\"\u003e \u003cli\u003e\u003ca href=\"https://www.linkedin.com/in/welbertim/\" rel=\"nofollow\" target=\"_blank\"\u003eLinkedIn\u003c/a\u003e\u003c/li\u003e \u003c/ul\u003e \u003cp dir=\"auto\"\u003eFeel free to contribute improvements, bug fixes, or new features. Your contribution is welcome!\u003c/p\u003e \u003cp dir=\"auto\"\u003e\u003ch2 dir=\"auto\"\u003eLicense\u003c/h2\u003e\u003c/p\u003e \u003cdiv data-snippet-clipboard-copy-content=\"MIT License Copyright (c) 2024 Welbert Moreira Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \u0026#34;Software\u0026#34;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \u0026#34;AS IS\u0026#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\"\u003e\u003cpre\u003e\u003ccode\u003eMIT License\n\nCopyright (c) 2024 Welbert Moreira \nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \u0026#34;Software\u0026#34;), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \u0026#34;AS IS\u0026#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e \u003c/article\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": null,
  "modifiedTime": null
}
