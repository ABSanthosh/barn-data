{
  "id": "6cf90852-0bb4-472a-a403-df2c23b9c23e",
  "title": "Run HTTP Requests in Android Studio",
  "link": "https://blog.jetbrains.com/blog/2025/06/12/run-http-requests-in-android-studio/",
  "description": "We are happy to announce that our HTTP Client plugin is now available in Android Studio! HTTP Client is a powerful tool for making HTTP, gRPC, GraphQL, and WebSocket requests. Its text-based interface offers seamless integration with the editor, along with extensive coding assistance including highlighting, code completion, refactorings, and inline documentation. While it was […]",
  "author": "Ekaterina Valeeva",
  "published": "Thu, 12 Jun 2025 08:55:56 +0000",
  "source": "https://blog.jetbrains.com/blog/feed",
  "categories": [
    "ecosystem",
    "news",
    "android-studio"
  ],
  "byline": "Ekaterina Valeeva",
  "length": 3828,
  "excerpt": "We are happy to announce that our HTTP Client plugin is now available in Android Studio! HTTP Client is a powerful tool for making HTTP, gRPC, GraphQL, and WebSocket requests. Its text-based interf",
  "siteName": "The JetBrains Blog",
  "favicon": "https://blog.jetbrains.com/wp-content/uploads/2024/01/cropped-mstile-310x310-1-180x180.png",
  "text": "Ecosystem News We are happy to announce that our HTTP Client plugin is now available in Android Studio! HTTP Client is a powerful tool for making HTTP, gRPC, GraphQL, and WebSocket requests. Its text-based interface offers seamless integration with the editor, along with extensive coding assistance including highlighting, code completion, refactorings, and inline documentation. While it was previously bundled with paid IDE subscriptions only, this powerful plugin is now free for Android Studio users – it just requires creating a JetBrains Account. Now you can test server API calls right from the IDE before implementing them in the application.  The HTTP Client plugin is available for Android Studio 2024.3.2 Meerkat from JetBrains Marketplace – either download it from the web or via the Android Studio Settings | Plugins, Marketplace tab. Generate and run HTTP requests right from your code: Retrofit, OkHttp, and Ktor! Whenever you have a URL in your app source code, you can launch an HTTP request right away from the URL inlay or gutter indicator.  The generated request opens in the right split where you can run it, modify it, or add pre- and post-request scripts, all without switching away from your code and losing context. The request result will be shown in a dedicated tool window. Configure environments Environment files allow you to define and store environment variables and configurations for HTTP requests. You can switch between different environments (for example – dev, prod, and test), apply environment-specific values to requests, and reuse previously defined configurations.  Run integration tests and manage HTTP requests with scripts HTTP Client supports complex scenarios written in JavaScript. Pre-scripts allow you to generate data for requests. Response handler scripts run after receiving responses, allowing you to pass data to subsequent requests. With these scripts, you can also set up various tests and run them in the corresponding tab of the Services tool window. Import curl commands, convert Postman collections curl commands copied to the clipboard can automatically be converted when pasted to an HTTP file or via the dedicated import action. If you already have a Postman collection saved as a JSON file, it can also be imported and converted, so you can run requests from it in the IDE. Work with OpenAPI / Swagger specifications With the OpenAPI Specifications plugin, you can: Create HTTP requests directly from OpenAPI files. Complete URL and request bodies in HTTP requests based on the API specification. For more details about HTTP request syntax and available features, please refer to the official documentation. There are also built-in examples demonstrating different scenarios using the test environment that you might want to try. Happy coding!  Subscribe to JetBrains Blog updates Discover more",
  "image": "https://blog.jetbrains.com/wp-content/uploads/2025/06/JB-social-BlogSocialShare-1280x720-2x-1.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"main\"\u003e\n    \n                            \u003csection data-clarity-region=\"article\"\u003e\n                \u003cdiv\u003e\n                    \t\t\t\t\u003cp\u003e\u003ca href=\"https://blog.jetbrains.com/blog/category/ecosystem/\"\u003eEcosystem\u003c/a\u003e\n\t\t\t\u003ca href=\"https://blog.jetbrains.com/blog/category/news/\"\u003eNews\u003c/a\u003e\u003c/p\u003e                    \n                    \n\u003cp\u003eWe are happy to announce that our \u003ca href=\"https://plugins.jetbrains.com/plugin/13121-http-client/edit\" target=\"_blank\" rel=\"noopener\"\u003eHTTP Client plugin\u003c/a\u003e is now available in Android Studio!\u003c/p\u003e\n\n\n\n\u003cp\u003eHTTP Client is a powerful tool for making HTTP, gRPC, GraphQL, and WebSocket requests. Its text-based interface offers seamless integration with the editor, along with extensive coding assistance including highlighting, code completion, refactorings, and inline documentation.\u003c/p\u003e\n\n\n\n\u003cp\u003eWhile it was previously bundled with paid IDE subscriptions only, this powerful plugin is now free for Android Studio users – it just requires creating a \u003ca href=\"https://sales.jetbrains.com/hc/en-gb/articles/207737419-Create-a-JetBrains-Account\" target=\"_blank\" rel=\"noopener\"\u003eJetBrains Account\u003c/a\u003e. Now you can test server API calls right from the IDE before implementing them in the application. \u003c/p\u003e\n\n\n\n\u003cp\u003eThe HTTP Client plugin is available for Android Studio 2024.3.2 Meerkat from JetBrains Marketplace – either download it from the \u003ca href=\"https://plugins.jetbrains.com/plugin/13121-http-client/\" target=\"_blank\" rel=\"noopener\"\u003eweb\u003c/a\u003e or via the Android Studio\u003cem\u003e Settings | Plugins, Marketplace\u003c/em\u003e tab.\u003c/p\u003e\n\n\n\n\u003ch2\u003eGenerate and run HTTP requests right from your code: Retrofit, OkHttp, and Ktor!\u003c/h2\u003e\n\n\n\n\u003cp\u003eWhenever you have a URL in your app source code, you can launch an HTTP request right away from the URL inlay or gutter indicator. \u003c/p\u003e\n\n\n\n\u003cp\u003eThe generated request opens in the right split where you can run it, modify it, or add pre- and post-request scripts, all without switching away from your code and losing context. The request result will be shown in a dedicated tool window.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" fetchpriority=\"high\" width=\"1503\" height=\"603\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/06/generate_request_okhttp-1.gif\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003ch2\u003eConfigure environments\u003c/h2\u003e\n\n\n\n\u003cp\u003eEnvironment files allow you to define and store environment variables and configurations for HTTP requests. You can switch between different environments (for example – \u003cem\u003edev\u003c/em\u003e, \u003cem\u003eprod\u003c/em\u003e, and \u003cem\u003etest\u003c/em\u003e), apply environment-specific values to requests, and reuse previously defined configurations. \u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" width=\"1500\" height=\"600\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/06/Environment_select.png\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003ch2\u003eRun integration tests and manage HTTP requests with scripts\u003c/h2\u003e\n\n\n\n\u003cp\u003eHTTP Client supports complex scenarios written in JavaScript. Pre-scripts allow you to generate data for requests. Response handler scripts run after receiving responses, allowing you to pass data to subsequent requests. With these scripts, you can also set up various tests and run them in the corresponding tab of the \u003cem\u003eServices\u003c/em\u003e tool window.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" width=\"1500\" height=\"600\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/06/JS_response_handler_test.png\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003ch2\u003eImport curl commands, convert Postman collections\u003c/h2\u003e\n\n\n\n\u003cp\u003ecurl commands copied to the clipboard can automatically be converted when pasted to an HTTP file or via the dedicated import action.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" loading=\"lazy\" width=\"1503\" height=\"603\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/06/curl_convert.gif\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eIf you already have a Postman collection saved as a JSON file, it \u003ca href=\"https://www.jetbrains.com/help/idea/http-client-in-product-code-editor.html?top\u0026amp;keymap=Windows\u0026amp;utm_source=product\u0026amp;utm_medium=link\u0026amp;utm_campaign=IU\u0026amp;utm_content=2025.2#import-postman-collections\" target=\"_blank\" rel=\"noopener\"\u003ecan also be imported and converted\u003c/a\u003e, so you can run requests from it in the IDE.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" loading=\"lazy\" width=\"1500\" height=\"600\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/06/Postman_collection_convert.png\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003ch2\u003eWork with OpenAPI / Swagger specifications\u003c/h2\u003e\n\n\n\n\u003cp\u003eWith the \u003ca href=\"https://plugins.jetbrains.com/plugin/14394-openapi-specifications\" target=\"_blank\" rel=\"noopener\"\u003eOpenAPI Specifications\u003c/a\u003e plugin, you can:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003eCreate HTTP requests directly from OpenAPI files.\u003c/li\u003e\n\n\n\n\u003cli\u003eComplete URL and request bodies in HTTP requests based on the API specification.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" loading=\"lazy\" width=\"1500\" height=\"599\" src=\"https://blog.jetbrains.com/wp-content/uploads/2025/06/OpenAPI_generate_request-1.png\" alt=\"\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eFor more details about HTTP request syntax and available features, please refer to the \u003ca href=\"https://www.jetbrains.com/help/idea/2024.3/http-client-in-product-code-editor.html\" target=\"_blank\" rel=\"noopener\"\u003eofficial documentation\u003c/a\u003e. There are also built-in examples demonstrating different scenarios using the test environment that you might want to try.\u003c/p\u003e\n\n\n\n\u003cp\u003eHappy coding! \u003c/p\u003e\n                    \n                                                                                                                                                                                                                            \u003cdiv\u003e\n                                \u003cdiv\u003e\n                                                                            \u003ch4\u003eSubscribe to JetBrains Blog updates\u003c/h4\u003e\n                                                                                                            \n                                \u003c/div\u003e\n                                \n                                \u003cp\u003e\u003cimg src=\"https://blog.jetbrains.com/wp-content/themes/jetbrains/assets/img/img-form.svg\" alt=\"image description\"/\u003e\n                                                                    \u003c/p\u003e\n                            \u003c/div\u003e\n                                                            \u003c/div\u003e\n                \u003ca href=\"#\"\u003e\u003c/a\u003e\n                \n                \n            \u003c/section\u003e\n                    \u003cdiv\u003e\n                \u003cp\u003e\n                    \u003ch2\u003eDiscover more\u003c/h2\u003e\n                \u003c/p\u003e\n                \n            \u003c/div\u003e\n                \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": null,
  "modifiedTime": null
}
