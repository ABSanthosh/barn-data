{
  "id": "7f7ed189-858e-4137-a021-046775726e14",
  "title": "Android App Update Prompts using the Google Play Console",
  "link": "https://joebirch.co/android/android-app-update-prompts-using-the-google-play-console/",
  "description": "Many apps regularly release new versions to the Google Play Store – be it for new features, fixes or more urgent changes due to security or breaking changes. Even though many users have automatic updates enabled, we often see slow adoption for new app releases. Not only does this mean a delay in users seeing... Continue reading →",
  "author": "hitherejoe",
  "published": "Fri, 16 Feb 2024 09:34:39 +0000",
  "source": "https://joebirch.co/feed",
  "categories": [
    "Android",
    "Android App Development",
    "Android Apps",
    "Android Development",
    "AndroidDev",
    "App Development",
    "Mobile App Development"
  ],
  "byline": "by hitherejoe",
  "length": 4098,
  "excerpt": "Many apps regularly release new versions to the Google Play Store - be it for new features, fixes or more urgent changes due to security or breaking changes. Even though many users have automatic updates enabled, we often see slow adoption for new app releases. Not only does this mean a delay in use",
  "siteName": "Joe Birch",
  "favicon": "",
  "text": "Many apps regularly release new versions to the Google Play Store – be it for new features, fixes or more urgent changes due to security or breaking changes. Even though many users have automatic updates enabled, we often see slow adoption for new app releases. Not only does this mean a delay in users seeing further value in our apps, but for more urgent fix releases, this can be problematic. In recent years we saw the introduction of In-app update prompts which allowed developers to prompt for updates from within the app itself. While this was an improvement, there is friction when it comes to being able to control what users should receive the prompts (as this needed to be implemented on your own server). To improve things here, Google recently announced a new way to prompt users to update their apps, based on specified criteria by the developer, through the Google Play Console. In this post, we’ll be taking a look at how this works so that we can start using it for our own apps. If your app is distributed using the App Bundle and using Google Play Signing, then you can utilise this new feature to prompt users to update their app versions. When it comes to these app updates coming from Google Play Services, if the app meets the criteria for an update prompt, these will be shown for every cold restart of the app until the user updates the app version. It’s important to note that this is not a blocking upgrade prompt, but it will be presented on every (cold) launch until the update is carried out. To be able to display these prompts to users, we need to trigger them from within the Google Play Console. To do this, we can head on over to the console for our app where we’ll need to head int the App bundle explorer (this is found in the navigation menu on the left-hand side). After selecting this option, we’ll be taken to the App bundle explorer. Here, we’ll see a list of all App bundles that exist for our app. This will be across multiple tracks (production, beta etc). I have committed some data in these screenshots for security purposes. Here, you’ll want to select the App Bundle that you want to perform the update prompt for. When selecting the bundle, you’ll be taken to the detail screen where you’ll find the option for Recovery Tools – selecting this will present you the option to “Prompt users to update”. When selecting this option, you’ll be presented with a screen that requires you to confirm the app version that you are wishing to prompt update from. If you have selected a version for which no newer version exists, you will be presented with the following information and will not be able to proceed. However, if there is a newer version available for the selected version, then we’ll be able to progress through the flow. After selecting “Next”, we’ll be presented with the option to select criteria for targeting. When it comes to this targeting criteria, we’ll be able to select one of three options: all users on this version – all users on the selected version will receive the prompt to update by country/region – select the locations for the devices which this prompt should be displayed by Android version – select the Android versions for which this prompt should be displayed on Once you have selected the criteria for the prompt, selecting “Initiate prompt” will save the configuration and the prompt will start showing. You can change the criteria for the prompt, or even disable it, at any point after the prompt has initiated. With this new functionality within the Google Play Console, developers will be able to improve adoption of newer app versions, as well as reduce any friction that comes from breaking changes / urgent update requirements. It’s important to note that we will still need to be mindful of our users when prompting for updates, its not something that we’re going to want to do every time we release a new app version. However, with the right strategy in place, these app update prompts will prove to be extremely helpful.",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\t\t\t\t\t\t\t\t\t\n\u003cp\u003eMany apps regularly release new versions to the Google Play Store – be it for new features, fixes or more urgent changes due to security or breaking changes. Even though many users have automatic updates enabled, we often see slow adoption for new app releases. Not only does this mean a delay in users seeing further value in our apps, but for more urgent fix releases, this can be problematic.\u003c/p\u003e\n\n\n\n\u003cp\u003eIn recent years we saw the introduction of \u003ca href=\"https://developer.android.com/guide/playcore/in-app-updates\"\u003eIn-app update prompts\u003c/a\u003e which allowed developers to prompt for updates from within the app itself. While this was an improvement, there is friction when it comes to being able to control what users should receive the prompts (as this needed to be implemented on your own server). \u003c/p\u003e\n\n\n\n\u003cp\u003eTo improve things here, Google \u003ca href=\"https://android-developers.googleblog.com/2024/01/prompt-users-to-update-to-your-latest-app-version-google-play.html\"\u003erecently announced\u003c/a\u003e a new way to prompt users to update their apps, based on specified criteria by the developer, through the Google Play Console. In this post, we’ll be taking a look at how this works so that we can start using it for our own apps.\u003c/p\u003e\n\n\n\n\u003chr/\u003e\n\n\n\n\u003cp\u003eIf your app is distributed using the App Bundle and using Google Play Signing, then you can utilise this new feature to prompt users to update their app versions.\u003c/p\u003e\n\n\n\n\u003cp\u003eWhen it comes to these app updates coming from Google Play Services, if the app meets the criteria for an update prompt, these will be shown for every cold restart of the app until the user updates the app version. It’s important to note that this is not a blocking upgrade prompt, but it will be presented on every (cold) launch until the update is carried out.\u003c/p\u003e\n\n\n\u003cdiv\u003e\n\u003cfigure\u003e\u003cimg decoding=\"async\" width=\"1024\" height=\"227\" src=\"https://joebirch.co/wp-content/uploads/2024/02/pp-1024x227.png\" alt=\"\" srcset=\"https://joebirch.co/wp-content/uploads/2024/02/pp-1024x227.png 1024w, https://joebirch.co/wp-content/uploads/2024/02/pp-300x66.png 300w, https://joebirch.co/wp-content/uploads/2024/02/pp-768x170.png 768w, https://joebirch.co/wp-content/uploads/2024/02/pp-1536x340.png 1536w, https://joebirch.co/wp-content/uploads/2024/02/pp-2048x453.png 2048w, https://joebirch.co/wp-content/uploads/2024/02/pp-500x111.png 500w, https://joebirch.co/wp-content/uploads/2024/02/pp-150x33.png 150w, https://joebirch.co/wp-content/uploads/2024/02/pp-1200x266.png 1200w, https://joebirch.co/wp-content/uploads/2024/02/pp-400x89.png 400w, https://joebirch.co/wp-content/uploads/2024/02/pp-800x177.png 800w, https://joebirch.co/wp-content/uploads/2024/02/pp-200x44.png 200w\" sizes=\"(max-width: 1024px) 100vw, 1024px\"/\u003e\u003c/figure\u003e\u003c/div\u003e\n\n\n\u003cp\u003eTo be able to display these prompts to users, we need to trigger them from within the Google Play Console. To do this, we can head on over to the console for our app where we’ll need to head int the App bundle explorer (this is found in the navigation menu on the left-hand side).\u003c/p\u003e\n\n\n\n\n\n\n\u003cdiv\u003e\n\u003cfigure\u003e\u003cimg decoding=\"async\" loading=\"lazy\" src=\"https://joebirch.co/wp-content/uploads/2024/02/side.png\" alt=\"\" width=\"302\" height=\"848\" srcset=\"https://joebirch.co/wp-content/uploads/2024/02/side.png 302w, https://joebirch.co/wp-content/uploads/2024/02/side-107x300.png 107w, https://joebirch.co/wp-content/uploads/2024/02/side-150x421.png 150w, https://joebirch.co/wp-content/uploads/2024/02/side-200x562.png 200w\" sizes=\"(max-width: 302px) 100vw, 302px\"/\u003e\u003c/figure\u003e\u003c/div\u003e\n\n\n\u003cp\u003eAfter selecting this option, we’ll be taken to the App bundle explorer. Here, we’ll see a list of all App bundles that exist for our app. This will be across multiple tracks (production, beta etc). I have committed some data in these screenshots for security purposes.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" loading=\"lazy\" width=\"1024\" height=\"517\" src=\"https://joebirch.co/wp-content/uploads/2024/02/exporer-1024x517.png\" alt=\"\" srcset=\"https://joebirch.co/wp-content/uploads/2024/02/exporer-1024x517.png 1024w, https://joebirch.co/wp-content/uploads/2024/02/exporer-300x152.png 300w, https://joebirch.co/wp-content/uploads/2024/02/exporer-768x388.png 768w, https://joebirch.co/wp-content/uploads/2024/02/exporer-1536x776.png 1536w, https://joebirch.co/wp-content/uploads/2024/02/exporer-500x253.png 500w, https://joebirch.co/wp-content/uploads/2024/02/exporer-150x76.png 150w, https://joebirch.co/wp-content/uploads/2024/02/exporer-1200x606.png 1200w, https://joebirch.co/wp-content/uploads/2024/02/exporer-400x202.png 400w, https://joebirch.co/wp-content/uploads/2024/02/exporer-800x404.png 800w, https://joebirch.co/wp-content/uploads/2024/02/exporer-200x101.png 200w, https://joebirch.co/wp-content/uploads/2024/02/exporer.png 1600w\" sizes=\"(max-width: 1024px) 100vw, 1024px\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eHere, you’ll want to select the App Bundle that you want to perform the update prompt for. When selecting the bundle, you’ll be taken to the detail screen where you’ll find the option for Recovery Tools – selecting this will present you the option to “Prompt users to update”.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" loading=\"lazy\" width=\"1024\" height=\"116\" src=\"https://joebirch.co/wp-content/uploads/2024/02/prompt-1024x116.png\" alt=\"\" srcset=\"https://joebirch.co/wp-content/uploads/2024/02/prompt-1024x116.png 1024w, https://joebirch.co/wp-content/uploads/2024/02/prompt-300x34.png 300w, https://joebirch.co/wp-content/uploads/2024/02/prompt-768x87.png 768w, https://joebirch.co/wp-content/uploads/2024/02/prompt-1536x174.png 1536w, https://joebirch.co/wp-content/uploads/2024/02/prompt-500x57.png 500w, https://joebirch.co/wp-content/uploads/2024/02/prompt-150x17.png 150w, https://joebirch.co/wp-content/uploads/2024/02/prompt-1200x136.png 1200w, https://joebirch.co/wp-content/uploads/2024/02/prompt-400x45.png 400w, https://joebirch.co/wp-content/uploads/2024/02/prompt-800x91.png 800w, https://joebirch.co/wp-content/uploads/2024/02/prompt-200x23.png 200w, https://joebirch.co/wp-content/uploads/2024/02/prompt.png 1600w\" sizes=\"(max-width: 1024px) 100vw, 1024px\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eWhen selecting this option, you’ll be presented with a screen that requires you to confirm the app version that you are wishing to prompt update from. If you have selected a version for which no newer version exists, you will be presented with the following information and will not be able to proceed.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" loading=\"lazy\" width=\"1024\" height=\"556\" src=\"https://joebirch.co/wp-content/uploads/2024/02/no_prompt-1024x556.png\" alt=\"\" srcset=\"https://joebirch.co/wp-content/uploads/2024/02/no_prompt-1024x556.png 1024w, https://joebirch.co/wp-content/uploads/2024/02/no_prompt-300x163.png 300w, https://joebirch.co/wp-content/uploads/2024/02/no_prompt-768x417.png 768w, https://joebirch.co/wp-content/uploads/2024/02/no_prompt-1536x835.png 1536w, https://joebirch.co/wp-content/uploads/2024/02/no_prompt-500x272.png 500w, https://joebirch.co/wp-content/uploads/2024/02/no_prompt-150x82.png 150w, https://joebirch.co/wp-content/uploads/2024/02/no_prompt-1200x652.png 1200w, https://joebirch.co/wp-content/uploads/2024/02/no_prompt-400x217.png 400w, https://joebirch.co/wp-content/uploads/2024/02/no_prompt-800x435.png 800w, https://joebirch.co/wp-content/uploads/2024/02/no_prompt-200x109.png 200w, https://joebirch.co/wp-content/uploads/2024/02/no_prompt.png 1682w\" sizes=\"(max-width: 1024px) 100vw, 1024px\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eHowever, if there is a newer version available for the selected version, then we’ll be able to progress through the flow.\u003c/p\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" loading=\"lazy\" width=\"1024\" height=\"555\" src=\"https://joebirch.co/wp-content/uploads/2024/02/version_avail-1024x555.png\" alt=\"\" srcset=\"https://joebirch.co/wp-content/uploads/2024/02/version_avail-1024x555.png 1024w, https://joebirch.co/wp-content/uploads/2024/02/version_avail-300x163.png 300w, https://joebirch.co/wp-content/uploads/2024/02/version_avail-768x416.png 768w, https://joebirch.co/wp-content/uploads/2024/02/version_avail-1536x832.png 1536w, https://joebirch.co/wp-content/uploads/2024/02/version_avail-500x271.png 500w, https://joebirch.co/wp-content/uploads/2024/02/version_avail-150x81.png 150w, https://joebirch.co/wp-content/uploads/2024/02/version_avail-1200x650.png 1200w, https://joebirch.co/wp-content/uploads/2024/02/version_avail-400x217.png 400w, https://joebirch.co/wp-content/uploads/2024/02/version_avail-800x433.png 800w, https://joebirch.co/wp-content/uploads/2024/02/version_avail-200x108.png 200w, https://joebirch.co/wp-content/uploads/2024/02/version_avail.png 1678w\" sizes=\"(max-width: 1024px) 100vw, 1024px\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eAfter selecting “Next”, we’ll be presented with the option to select criteria for targeting. When it comes to this targeting criteria, we’ll be able to select one of three options:\u003c/p\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eall users on this version\u003c/strong\u003e – all users on the selected version will receive the prompt to update\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eby country/region\u003c/strong\u003e – select the locations for the devices which this prompt should be displayed\u003c/li\u003e\n\n\n\n\u003cli\u003e\u003cstrong\u003eby Android version \u003c/strong\u003e– select the Android versions for which this prompt should be displayed on\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\n\u003cfigure\u003e\u003cimg decoding=\"async\" loading=\"lazy\" width=\"1024\" height=\"551\" src=\"https://joebirch.co/wp-content/uploads/2024/02/Screenshot-2024-02-14-at-13.59.06-1024x551.png\" alt=\"\" srcset=\"https://joebirch.co/wp-content/uploads/2024/02/Screenshot-2024-02-14-at-13.59.06-1024x551.png 1024w, https://joebirch.co/wp-content/uploads/2024/02/Screenshot-2024-02-14-at-13.59.06-300x161.png 300w, https://joebirch.co/wp-content/uploads/2024/02/Screenshot-2024-02-14-at-13.59.06-768x413.png 768w, https://joebirch.co/wp-content/uploads/2024/02/Screenshot-2024-02-14-at-13.59.06-1536x826.png 1536w, https://joebirch.co/wp-content/uploads/2024/02/Screenshot-2024-02-14-at-13.59.06-500x269.png 500w, https://joebirch.co/wp-content/uploads/2024/02/Screenshot-2024-02-14-at-13.59.06-150x81.png 150w, https://joebirch.co/wp-content/uploads/2024/02/Screenshot-2024-02-14-at-13.59.06-1200x645.png 1200w, https://joebirch.co/wp-content/uploads/2024/02/Screenshot-2024-02-14-at-13.59.06-400x215.png 400w, https://joebirch.co/wp-content/uploads/2024/02/Screenshot-2024-02-14-at-13.59.06-800x430.png 800w, https://joebirch.co/wp-content/uploads/2024/02/Screenshot-2024-02-14-at-13.59.06-200x108.png 200w, https://joebirch.co/wp-content/uploads/2024/02/Screenshot-2024-02-14-at-13.59.06.png 1683w\" sizes=\"(max-width: 1024px) 100vw, 1024px\"/\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eOnce you have selected the criteria for the prompt, selecting “\u003cstrong\u003eInitiate prompt\u003c/strong\u003e” will save the configuration and the prompt will start showing. You can change the criteria for the prompt, or even disable it, at any point after the prompt has initiated.\u003c/p\u003e\n\n\n\n\u003chr/\u003e\n\n\n\n\u003cp\u003eWith this new functionality within the Google Play Console, developers will be able to improve adoption of newer app versions, as well as reduce any friction that comes from breaking changes / urgent update requirements.\u003c/p\u003e\n\n\n\n\u003cp\u003eIt’s important to note that we will still need to be mindful of our users when prompting for updates, its not something that we’re going to want to do every time we release a new app version. However, with the right strategy in place, these app update prompts will prove to be extremely helpful. \u003c/p\u003e\n\n\n\n\n\n\n\n\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": "2024-02-16T09:34:39Z",
  "modifiedTime": "2024-02-16T09:34:39Z"
}
