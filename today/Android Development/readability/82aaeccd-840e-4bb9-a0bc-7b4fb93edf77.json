{
  "id": "82aaeccd-840e-4bb9-a0bc-7b4fb93edf77",
  "title": "Debugging Android Intents",
  "link": "https://handstandsam.com/2022/10/06/debugging-android-intents/",
  "description": "With new behaviors for apps using targetSdk=33 (Android 13) regarding Intents, it may be necessary to dive in and figure out how to make things compatible. In doing this myself, I needed to figure out what was in the Intent, so I could handle it appropriately. I started with this StackOverflow post, but ended up […]",
  "author": "Sam Edwards",
  "published": "Thu, 06 Oct 2022 15:24:31 +0000",
  "source": "https://handstandsam.com/feed/",
  "categories": [
    "Updates"
  ],
  "byline": "Sam Edwards Published October 6, 2022",
  "length": 1317,
  "excerpt": "With new behaviors for apps using targetSdk=33 (Android 13) regarding Intents, it may be necessary to dive in and figure out how to make things compatible.",
  "siteName": "",
  "favicon": "",
  "text": "With new behaviors for apps using targetSdk=33 (Android 13) regarding Intents, it may be necessary to dive in and figure out how to make things compatible. In doing this myself, I needed to figure out what was in the Intent, so I could handle it appropriately. I started with this StackOverflow post, but ended up adding more info and doing it cleanly in Kotlin. fun Intent?.toDebugString(): String { val intent = this ?: return \"\" return StringBuilder().apply { appendLine(\"--- Intent ---\") appendLine(\"type: ${intent.type}\") appendLine(\"package: ${intent.`package`}\") appendLine(\"scheme: ${intent.scheme}\") appendLine(\"component: ${intent.component}\") appendLine(\"flags: ${intent.flags}\") appendLine(\"categories: ${intent.categories}\") appendLine(\"selector: ${intent.selector}\") appendLine(\"action: ${intent.action}\") appendLine(\"dataString: ${intent.dataString}\") intent.extras?.keySet()?.forEach { key -\u003e appendLine(\"* extra: $key=${intent.extras!![key]}\") } }.toString() } Use the extension function above with println(myIntent.toDebugString()). You can then filter Logcat with “System.out” and see the results! I hope this helps someone figure out what’s inside your Intents!",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"page\"\u003e\n\t\t\u003cmain id=\"content\" role=\"main\"\u003e\n\n\t\t\t\n\t\t\t\t\n\u003carticle id=\"post-1902\" itemscope=\"itemscope\" itemtype=\"http://schema.org/BlogPosting\" itemprop=\"blogPost\"\u003e\n\t\t\n\t\n\t\u003cdiv itemprop=\"mainContentOfPage\"\u003e\n\t\t\n\u003cp\u003eWith \u003ca href=\"https://developer.android.com/about/versions/13/behavior-changes-all#intents\"\u003enew behaviors for apps using \u003ccode\u003etargetSdk=33\u003c/code\u003e (Android 13) regarding Intents\u003c/a\u003e, it may be necessary to dive in and figure out how to make things compatible.\u003c/p\u003e\n\n\n\n\u003cp\u003eIn doing this myself, I needed to figure out what was in the \u003ca href=\"https://developer.android.com/reference/android/content/Intent\"\u003eIntent\u003c/a\u003e, so I could handle it appropriately.\u003c/p\u003e\n\n\n\n\u003cp\u003eI started with \u003ca href=\"https://stackoverflow.com/a/36842135\"\u003ethis StackOverflow post\u003c/a\u003e, but ended up adding more info and doing it cleanly in Kotlin.\u003c/p\u003e\n\n\n\n\u003cpre\u003e\u003ccode lang=\"kotlin\"\u003efun Intent?.toDebugString(): String {\n    val intent = this ?: return \u0026#34;\u0026#34;\n    return StringBuilder().apply {\n        appendLine(\u0026#34;--- Intent ---\u0026#34;)\n        appendLine(\u0026#34;type: ${intent.type}\u0026#34;)\n        appendLine(\u0026#34;package: ${intent.`package`}\u0026#34;)\n        appendLine(\u0026#34;scheme: ${intent.scheme}\u0026#34;)\n        appendLine(\u0026#34;component: ${intent.component}\u0026#34;)\n        appendLine(\u0026#34;flags: ${intent.flags}\u0026#34;)\n        appendLine(\u0026#34;categories: ${intent.categories}\u0026#34;)\n        appendLine(\u0026#34;selector: ${intent.selector}\u0026#34;)\n        appendLine(\u0026#34;action: ${intent.action}\u0026#34;)\n        appendLine(\u0026#34;dataString: ${intent.dataString}\u0026#34;)\n        intent.extras?.keySet()?.forEach { key -\u0026gt;\n            appendLine(\u0026#34;* extra: $key=${intent.extras!![key]}\u0026#34;)\n        }\n    }.toString()\n}\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eUse the extension function above with \u003ccode\u003eprintln(myIntent.toDebugString())\u003c/code\u003e.\u003c/p\u003e\n\n\n\n\u003cp\u003eYou can then filter \u003ca href=\"https://developer.android.com/studio/debug/am-logcat\"\u003eLogcat\u003c/a\u003e with “\u003ccode\u003eSystem.out\u003c/code\u003e” and see the results!  I hope this helps someone figure out what’s inside your Intents!\u003c/p\u003e\n\n\t\t\n\t\t\t\t\t\t\t\t\t\u003c/div\u003e\n\t\n\n\t\t\t\n\t\t\n\t\t\n\t\n\t\n\n\u003c/article\u003e\n\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\u003c/main\u003e\n\t\t\n\t\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": null,
  "modifiedTime": null
}
