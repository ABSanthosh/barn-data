{
  "id": "dacae59b-80cb-42ef-9dfe-7ee6260a8e9e",
  "title": "Android Studio‚Äôs 10 year anniversary",
  "link": "http://android-developers.googleblog.com/2025/01/android-studios-10-year-anniversary.html",
  "description": "",
  "author": "Android Developers",
  "published": "2025-01-24T10:00:00.000-08:00",
  "source": "http://feeds.feedburner.com/blogspot/hsDu",
  "categories": [
    "Android Developer",
    "Android Studio",
    "Gradle",
    "JetBrains",
    "Tools"
  ],
  "byline": "",
  "length": 6173,
  "excerpt": "Highlights from Android Studio's 10th anniversary of its stable release, showcasing its mission to empower Android developers with excellent tools.",
  "siteName": "Android Developers Blog",
  "favicon": "",
  "text": "Posted by Tor Norbye ‚Äì Engineering Director, Jamal Eason ‚Äì Director of Product Management, and Xavier Ducrohet ‚Äì Tech Lead | Android Studio Android Studio provides you an integrated development environment (IDE) to develop, test, debug, and package Android apps that can reach billions of users across a diverse set of Android devices. Last month we reached a big milestone for the product: 10 years since the Android Studio 1.0 release reached the stable channel. You can hear a bit more about its history in the most recent episode of Android Developers Backstage, or watch some of the team‚Äôs favorite moments: üéâ When we set out to develop Android Studio we started with these three principles: First, we wanted to build and release a complete IDE, not just a plugin. Before Android Studio, users had to go download a JDK, then download Eclipse, then configure it with an update center to point to Android, install the Eclipse plugin for Android, and then configure that plugin to point to an Android SDK install. Not only did we want everything to work out-of-the-box, but we also wanted to be able to configure and improve everything: from having an integrated dependency management system to offering code inspections that were relevant to Android app developers to having a single place to report bugs. Second, we wanted to build it on top of an actively maintained, open-sourced, and best-of-breed Java programing language IDE. Not too long before releasing Android Studio, we had all used IntelliJ and felt it was superior from a code editing perspective. And third, we wanted to not only provide a build system that was better suited for Android app development, but to also enable this build system to work consistently from both from the command line and from inside the IDE. This was important because in the previous tool chain, we found that there were discrepancies in behavior and capability between the in-IDE builds with Eclipse, and CI builds with Ant. This led to the release of Android Studio, including these highlights: The initial announcement of Android Studio at I/O 2013 Announcement of Gradle as the integrated build system at I/O 2013 What‚Äôs New in Android Developer tools talk from I/O 2014 Here are some nostalgic screenshots from that first version of Android Studio: First-run setup wizard of Android Studio Editing code within Android Studio Editing and previewing layouts across different screen sizes Android Studio has come a long way since those early days, but our mission of empowering Android developers with excellent tools continues to be our focus. Let‚Äôs hear from some team members across Android, JetBrains, and Gradle as they reflect on this milestone and how far the ecosystem has come since then. Android Studio team ‚ÄúInside the Android team, engineers who didn't work on apps had the choice between using Eclipse and using IntelliJ, and most of them chose IntelliJ. We knew that it was the gold standard for Java development (and still is, all these years later.) So we asked ourselves: if this is what developers prefer when given a choice, wouldn't this be for our users as well?¬† And the warm reception when we unveiled the alpha at I/O in 2013 made it clear that it was the right choice.‚Äù¬† ¬†- Tor Norbye, Engineering Director of Android Studio at Google ‚ÄúWe had a vision of creating a truly Integrated Development Environment for Android app development instead of a collection of related tools. In our previous working model, we had contributions of Android tools from a range of frameworks and UX flows that did not 100% work well end-to-end. The move to the open-sourced JetBrains IntelliJ platform enabled the Google team to tie tools together in a thoughtful way with Android Studio, plus it allowed others to contribute in a more seamless way. Lastly, looking back at the last 10 years, I‚Äôm proud of the partnership with Jetbrains and Gradle, plus the community of contributors to bring the best suite of tools to Android app developers.‚Äù¬† ¬†‚Äì Jamal Eason, Director of Product Management of Android Studio at Google JetBrains ‚ÄúGoogle choosing IntelliJ as the platform to build Android Studio was a very exciting moment for us at JetBrains. It allowed us to strengthen and build on the platform even further, and paved the way for further collaboration in other projects such as Kotlin.‚Äù¬† ¬†‚Äì Hadi Hariri, VP of Program Management at JetBrains Gradle ‚ÄúAndroid Studio's 10th anniversary marks a decade of incredible progress for Android developers. We are proud that Gradle Build Tool has continued to be a foundational part of the Android toolchain, enabling millions of Android developers to build their apps faster, more elegantly, and at scale.‚Äù ¬†‚Äì Hans Dockter, creator of Gradle Build Tool and CEO/Founder of Gradle Inc. ‚ÄúOur long-standing strategic partnership with Google and our mutual commitment to improving the developer experience continues to impact millions of developers. We look forward to continuing that journey for many years to come.‚Äù¬† ¬†‚Äì Piotr Jagielski, VP of Engineering, Gradle Build Tool Last but not least, we want to thank you for your feedback and support over the last decade. Android Studio wouldn‚Äôt be where it is today without the active community of developers who are using it to build Android apps for their communities and the world and providing input on how we can make it better each day. As we head into this new year, we‚Äôll be bringing Gemini into more aspects of Android Studio to help you across the development lifecycle to build quality apps faster. We‚Äôll strive to make it easier and more seamless to build, test, and deploy your apps with Jetpack Compose across the range of form factors. We are proud of what we launch, but we always have room to improve in the evolving mobile ecosystem. Therefore, quality and stability of the IDE is our top priority so that you can be as productive as possible. We look forward to continuing to empower you with great tools and improvements as we take Android Studio forward into the next decade. üöÄ We also welcome you to be a part of our developer community on LinkedIn, Medium, YouTube, or X.",
  "image": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhQyYbcPMgIpypX_OlECbvLSCVhGduWYwQnscwIMlxTd6DXZvUmTtnuRNisNKdm5ciRZFzYCCFROr6zLWAVarOjkbSobJtrKmMDjIGAshLJj68d5RKEjHM23T8oJ2U3xLazNiiriO-76GE57SIuIZuAAvDIQdeFk7CBnLoV-47Fm4eiZnXfEXmY9nIc4DE/w1200-h630-p-k-no-nu/AfD%20_%20%20Android%20Studio%27s%2010%20Year%20Anniversary%20_%20Blog%20Header%20and%20Metadata%20Card_meta%20card.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\u003cmeta content=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhQyYbcPMgIpypX_OlECbvLSCVhGduWYwQnscwIMlxTd6DXZvUmTtnuRNisNKdm5ciRZFzYCCFROr6zLWAVarOjkbSobJtrKmMDjIGAshLJj68d5RKEjHM23T8oJ2U3xLazNiiriO-76GE57SIuIZuAAvDIQdeFk7CBnLoV-47Fm4eiZnXfEXmY9nIc4DE/s1600/AfD%20_%20%20Android%20Studio%27s%2010%20Year%20Anniversary%20_%20Blog%20Header%20and%20Metadata%20Card_meta%20card.png\" name=\"twitter:image\"/\u003e\n\u003cp\u003e\n\n\u003cem\u003ePosted by \u003cauthor\u003eTor Norbye ‚Äì Engineering Director\u003c/author\u003e, \u003cauthor\u003eJamal Eason ‚Äì Director of Product Management\u003c/author\u003e, and \u003cauthor\u003eXavier Ducrohet ‚Äì Tech Lead\u003c/author\u003e | Android Studio\u003c/em\u003e\n\n\u003ca href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEipAmsX93oJBpk3ZW5bPdOGU44fHllgNnFbA9rAURmMbugvmKwXKlkNqPg0IeRE01WTqyXAckEEjPgHhEXF-DAuTo-7fwjTPCNuCnCDnZu82rGQdzEx6_p82IUSVKECViORkjvCCaaOr8LYO6z1NiLoqjk6iRlf1yJL9xVHFFNlNCdj9_gIZdixBgfSmjM/s1600/AfD%20_%20%20Android%20Studio%27s%2010%20Year%20Anniversary%20_%20Blog%20Header%20and%20Metadata%20Card_banner.png\"\u003e\u003cimg data-original-height=\"800\" data-original-width=\"100%\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEipAmsX93oJBpk3ZW5bPdOGU44fHllgNnFbA9rAURmMbugvmKwXKlkNqPg0IeRE01WTqyXAckEEjPgHhEXF-DAuTo-7fwjTPCNuCnCDnZu82rGQdzEx6_p82IUSVKECViORkjvCCaaOr8LYO6z1NiLoqjk6iRlf1yJL9xVHFFNlNCdj9_gIZdixBgfSmjM/s1600/AfD%20_%20%20Android%20Studio%27s%2010%20Year%20Anniversary%20_%20Blog%20Header%20and%20Metadata%20Card_banner.png\"/\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAndroid Studio provides you an integrated development environment (IDE) to develop, test, debug, and package Android apps that can reach billions of users across a diverse set of Android devices. Last month we reached a big milestone for the product: 10 years since the \u003ca href=\"https://android-developers.googleblog.com/2014/12/android-studio-10.html\" target=\"_blank\"\u003eAndroid Studio 1.0 release\u003c/a\u003e reached the stable channel. You can hear a bit more about its history in the \u003ca href=\"https://youtu.be/IhP4xwRPJGY\" target=\"_blank\"\u003emost recent episode of Android Developers Backstage\u003c/a\u003e, or watch some of the team‚Äôs favorite moments: üéâ\u003c/p\u003e\n\n\u003ciframe allowfullscreen=\"\" youtube-src-id=\"R1uWWjQMYOI\" width=\"280\" height=\"210\" src=\"https://www.youtube.com/embed/R1uWWjQMYOI\"\u003e\u003c/iframe\u003e\n\n\u003cp\u003eWhen we set out to develop Android Studio we started with these three principles:\u003c/p\u003e\n\n\u003cp\u003eFirst, we wanted to build and release a complete IDE, not just a plugin. Before Android Studio, users had to go download a JDK, then download Eclipse, then configure it with an update center to point to Android, install the Eclipse plugin for Android, and then configure that plugin to point to an Android SDK install. Not only did we want everything to work out-of-the-box, but we also wanted to be able to configure and improve everything: from having an integrated dependency management system to offering code inspections that were relevant to Android app developers to having a single place to report bugs.\u003c/p\u003e\n\n\u003cp\u003eSecond, we wanted to build it on top of an actively maintained, open-sourced, and best-of-breed Java programing language IDE. Not too long before releasing Android Studio, we had all used IntelliJ and felt it was superior from a code editing perspective.\u003c/p\u003e\n\n\u003cp\u003eAnd third, we wanted to not only provide a build system that was better suited for Android app development, but to also enable this build system to work consistently from both from the command line and from inside the IDE. This was important because in the previous tool chain, we found that there were discrepancies in behavior and capability between the in-IDE builds with Eclipse, and CI builds with Ant.\u003c/p\u003e\n\n\u003cp\u003eThis led to the release of Android Studio, including these highlights:\u003c/p\u003e\n\u003cul\u003e\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=lmv1dTnhLH4\" target=\"_blank\"\u003eThe initial announcement of Android Studio at I/O 2013\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=LCJAgPkpmR0\" target=\"_blank\"\u003eAnnouncement of Gradle as the integrated build system at I/O 2013\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=hu4U8XKmJGA\" target=\"_blank\"\u003eWhat‚Äôs New in Android Developer tools talk from I/O 2014\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/ul\u003e\n\n\u003cp\u003eHere are some nostalgic screenshots from that first version of Android Studio:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg alt=\"The Setup Wizard welcome screen displays icons of a tablet, a watch, glasses, a TV, and a car, indicating the variety of devices supported in Android Studio\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjtI7Zu2DgZyR4oLENJP4FIZlfjl77i4KDxx9iXT-xQFHwWeB2l2SGJ5dUjwd9Phyphenhyphen39HmXZK_Z6YyA_h5tWqWsKL-6vqBbqTj6feCX6rI4W4FYflFchyOXFV5JNDw4oL7rX8CofIvYnyCPYcx5rByZESFWfVoLwUDDRV2V46AIWShZI5rLHn7OViqthEww/s1600/image4.png\" width=\"100%\"/\u003e\u003c/p\u003e\u003cimgcaption\u003e\u003ccenter\u003e\u003cem\u003eFirst-run setup wizard of Android Studio\u003c/em\u003e\u003c/center\u003e\u003c/imgcaption\u003e\n\n\u003cp\u003e\u003cimg alt=\"Android Studio is open with Java code visible in the main window and project files listed in the left sidebar.  A documentation window is open, displaying translation strings for a schedule view.\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjRCaNtss7ojB9lHJDMQ4eyFXji7bwQDI6aCC3t4pOBI6VZhANTpb8K8uSm7v2MIMBcZYKf8WbTlaz5a0tUt9SNQQ97LfYKomzK03ImOC_XABd1K9GqGO9lzLd9d_n-n4EEFtSMsaUsh_q9iSW68_ZpGfU3-2L21MBq2sS-mWUVobG3qlGRTyJv_atpZjo/s1600/image1.png\" width=\"100%\"/\u003e\u003c/p\u003e\u003cimgcaption\u003e\u003ccenter\u003e\u003cem\u003eEditing code within Android Studio\u003c/em\u003e\u003c/center\u003e\u003c/imgcaption\u003e\n\n\u003cp\u003e\u003cimg alt=\"A screenshot of Android Studio shows XML code on the left and previews of a messaging app layout on different Android devices on the right.\" id=\"imgCaption\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhZxduFm1fmr8-ehXX3yK63cILdGZwVuFFZgiaM4SLk7klCYYqihWm9vllkyAFnJjmtNTpPTPPsKBNCbFvF-TZcenhnEwaqh8sdqSWnF5X7xAkGgmr0RyLh4m9NNPwA1dKoH3_HxgABFFpeqyLKk5iNhe51ftrBFr7-1hp2kriGpXvAQVt6100pP0XC23w/s1600/image5.png\" width=\"100%\"/\u003e\u003c/p\u003e\u003cimgcaption\u003e\u003ccenter\u003e\u003cem\u003eEditing and previewing layouts across different screen sizes\u003c/em\u003e\u003c/center\u003e\u003c/imgcaption\u003e\n\n\u003cp\u003eAndroid Studio has come a long way since those early days, but \u003cb\u003eour mission of empowering Android developers with excellent tools continues to be our focus\u003c/b\u003e.\u003c/p\u003e\n\n\u003cp\u003eLet‚Äôs hear from some team members across Android, JetBrains, and Gradle as they reflect on  this milestone and how far the ecosystem has come since then.\u003c/p\u003e\n\n\u003ch4\u003e\u003cspan\u003eAndroid Studio team\u003c/span\u003e\u003c/h4\u003e\n\n\u003cp\u003e\u003ci\u003e‚ÄúInside the Android team, engineers who didn\u0026#39;t work on apps had the choice between using Eclipse and using IntelliJ, and most of them chose IntelliJ. We knew that it was the gold standard for Java development (and still is, all these years later.) So we asked ourselves: if this is what developers prefer when given a choice, wouldn\u0026#39;t this be for our users as well?¬†\u003c/i\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ci\u003eAnd the warm reception when we unveiled the alpha at I/O in 2013 made it clear that it was the right choice.‚Äù\u003c/i\u003e¬†\u003c/p\u003e\n\n\u003cp\u003e¬†- \u003cb\u003eTor Norbye\u003c/b\u003e, Engineering Director of Android Studio at Google\u003c/p\u003e\n\n\u003cp\u003e\u003ci\u003e‚ÄúWe had a vision of creating a truly Integrated Development Environment for Android app development instead of a collection of related tools. In our previous working model, we had contributions of Android tools from a range of frameworks and UX flows that did not 100% work well end-to-end. The move to the open-sourced JetBrains IntelliJ platform enabled the Google team to tie tools together in a thoughtful way with Android Studio, plus it allowed others to contribute in a more seamless way. Lastly, looking back at the last 10 years, I‚Äôm proud of the partnership with Jetbrains and Gradle, plus the community of contributors to bring the best suite of tools to Android app developers.‚Äù\u003c/i\u003e¬†\u003c/p\u003e \n\n\u003cp\u003e¬†‚Äì \u003cb\u003eJamal Eason\u003c/b\u003e, Director of Product Management of Android Studio at Google\u003c/p\u003e\n\n\u003ch4\u003e\u003cspan\u003eJetBrains\u003c/span\u003e\u003c/h4\u003e\n\n\u003cp\u003e\u003ci\u003e‚ÄúGoogle choosing IntelliJ as the platform to build Android Studio was a very exciting moment for us at JetBrains. It allowed us to strengthen and build on the platform even further, and paved the way for further collaboration in other projects such as Kotlin.‚Äù\u003c/i\u003e¬†\u003c/p\u003e\n\n\u003cp\u003e¬†‚Äì \u003cb\u003eHadi Hariri\u003c/b\u003e, VP of Program Management at JetBrains\u003c/p\u003e\n\n\u003ch4\u003e\u003cspan\u003eGradle\u003c/span\u003e\u003c/h4\u003e\n\n\u003cp\u003e\u003ci\u003e‚ÄúAndroid Studio\u0026#39;s 10th anniversary marks a decade of incredible progress for Android developers. We are proud that Gradle Build Tool has continued to be a foundational part of the Android toolchain, enabling millions of Android developers to build their apps faster, more elegantly, and at scale.‚Äù\u003c/i\u003e\u003c/p\u003e \n\n\u003cp\u003e¬†‚Äì \u003cb\u003eHans Dockter\u003c/b\u003e, creator of Gradle Build Tool and CEO/Founder of Gradle Inc.\u003c/p\u003e\n\n\u003cp\u003e\u003ci\u003e‚ÄúOur long-standing strategic partnership with Google and our mutual commitment to improving the developer experience continues to impact millions of developers. We look forward to continuing that journey for many years to come.‚Äù\u003c/i\u003e¬†\u003c/p\u003e\n\n\u003cp\u003e¬†‚Äì \u003cb\u003ePiotr Jagielski\u003c/b\u003e, VP of Engineering, Gradle Build Tool\u003c/p\u003e\n\n\u003cp\u003eLast but not least, we want to thank you for your feedback and support over the last decade. Android Studio wouldn‚Äôt be where it is today without the active community of developers who are using it to build Android apps for their communities and the world and providing input on how we can make it better each day.\u003c/p\u003e\n\n\u003cp\u003eAs we head into this new year, we‚Äôll be bringing Gemini into more aspects of Android Studio \u003ca href=\"https://android-developers.googleblog.com/2024/10/whats-new-in-gemini-in-android.html\" target=\"_blank\"\u003eto help you across the development lifecycle\u003c/a\u003e to build quality apps faster. We‚Äôll strive to make it easier and more seamless to build, test, and deploy your apps with Jetpack Compose across the range of form factors. We are proud of what we launch, but we always have room to improve in the evolving mobile ecosystem. Therefore, quality and stability of the IDE is our top priority so that you can be as productive as possible.\u003c/p\u003e\n\n\u003cp\u003eWe look forward to continuing to empower you with great tools and improvements as we take Android Studio forward into the next decade. üöÄ  We also welcome you to be a part of our developer community on \u003ca href=\"https://www.linkedin.com/showcase/androiddev/posts/?feedView=all\" target=\"_blank\"\u003eLinkedIn\u003c/a\u003e, \u003ca href=\"https://medium.com/androiddevelopers\" target=\"_blank\"\u003eMedium\u003c/a\u003e, \u003ca href=\"https://www.youtube.com/c/AndroidDevelopers/videos\" target=\"_blank\"\u003eYouTube\u003c/a\u003e, or \u003ca href=\"https://twitter.com/androidstudio\" target=\"_blank\"\u003eX\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": null,
  "modifiedTime": null
}
