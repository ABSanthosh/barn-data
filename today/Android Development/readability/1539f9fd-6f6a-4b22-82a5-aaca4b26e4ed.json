{
  "id": "1539f9fd-6f6a-4b22-82a5-aaca4b26e4ed",
  "title": "Now in Android #110",
  "link": "https://medium.com/androiddevelopers/now-in-android-110-a8ae5802604f?source=rss----95b274b437c2---4",
  "description": "",
  "author": "Chris Assigbe",
  "published": "Thu, 10 Oct 2024 22:35:24 GMT",
  "source": "https://medium.com/feed/androiddevelopers",
  "categories": [
    "now-in-android",
    "android-15",
    "rcs-messaging",
    "featured",
    "android-studio"
  ],
  "byline": "Chris Assigbe",
  "length": 13467,
  "excerpt": "Welcome to episode 110 of Now in Android: your ongoing guide to what‚Äôs new and notable in the world of Android development. In this episode, we‚Äôll cover Android 15 is released in AOSP, RCS support on‚Ä¶",
  "siteName": "Android Developers",
  "favicon": "https://miro.medium.com/v2/resize:fill:1000:1000/7*GAOKVe--MXbEJmV9230oOQ.png",
  "text": "Android 15 is in AOSP üí•In early September, Android 15 was released into the Android Open Source Project (AOSP). Support for Pixel devices as well as select devices from Samsung, Honor, iQOO, Lenovo, Motorola, Nothing, OnePlus, Oppo, realme, Sharp, Sony, Tecno, vivo, and Xiaomi has rolled out and will continue for the coming months.Android 15 comes with privacy and security enhancements such as Private space and passkeys amongst others. It also adds camera and media improvements in addition to improving the developer experience via productivity enhancements in Android Studio, Jetpack Compose, and Jetpack libraries.A new era for texting ü•≥Texting between Android and Apple devices is getting a whole lot better. With Apple‚Äôs adoption of Rich Chat Service (RCS) comes text message reaction, high resolution pictures and videos, adding and removing people from group chats, and more.Android Developers blog üìùPixel Hardware Event üì≤At our ninth Made By Google event on August 13th, we announced new AI experiences across Gemini and Android, along with our largest lineup of Pixel devices ever ‚Äî including the Pixel 9 family, our first phones with Gemini baked in as our next-generation assistant. Plus, with Gemini Live, you can now have free-flowing voice conversations with Gemini on your phone.‚ÄúWe believe that AI can make day-to-day life more productive, open up new ways to learn, and create ways for people to express themselves,‚Äù says Platforms \u0026 Devices SVP Rick Osterloh. ‚ÄúWe‚Äôre excited to bring the best of Google AI to more people and more phones with updates across Gemini, Android, and Pixel.‚ÄùOn the hardware front, we introduced the Pixel 9, Pixel 9 Pro, Pixel 9 Pro XL, and the Pixel 9 Pro Fold. We also unveiled the Pixel Watch 3 ‚Äî available in two sizes ‚Äî and the snug-fitting and AI-powered Pixel Buds Pro 2.Android Studio Koala Feature Drop üê®The latest Android Studio Koala Feature Drop has cutting-edge features like new devices in Android Device streaming (including the Pixel 9 series \u0026 new Samsung devices), Compose previews for Glance widgets, USB cable speed detection, support for Android 15 in the Android SDK Upgrade Assistant, UI debugging enhancements and profiler tools to improve app start-up time.#WeArePlayIn the latest #WeArePlay episode, Google Play showcases and celebrates Robson from Rio de Janeiro, Brazil. He co-founded Estante M√°gica, which is an app that inspire kids to become published authorsRobson, who grew up himself in a favela, wants to make a lasting impact on the education system by giving kids the opportunity to nurture literacy and write books.Google Maps adopts User Initiated Data Transfer üó∫Ô∏èIn Android 14, we introduced User Initiate Data Transfer that addresses gaps found in foreground services and WorkManager for long duration user initiated data transfers. The new setUserInitiated API in JobScheduler aims to be an alternative to retries and constraints.In fact, Google Maps adapted it, and saw a 10%+ improvement in download failure rate for offline downloads.‚ÄúWe successfully launched UIDT on Android 14 in early 2024 migrating from our foreground service implementation. After a retroactive analysis on Android 14 vs Android 13 implementation, we now see a 10%+ improvement in download failure rate of offline downloads!‚Äù ‚Äî Matthew Valgenti, Software Engineer at GoogleIntroducing Spotlight Weeks ‚ú®We are introducing a new series called Spotlight Week designed to help developers learn a specific topic during a week. The week will include technical deep dive videos, new documentation, and developer stories.On the first episode of the series, Ash covers Android 15‚Äôs edge-to-edge, foreground services, and passkeys.Spotlight Week also brought you a whole host of Android AI news, technical deep dives and so on. You got to learn about generative AI, Gemini Nano, how to bring your own model to Android, Cloud models, among many others.Edge-to-edge inset tips üìèAsh wrote an in-depth Medium blog post covering inset handling tips in order for developers to prepare for Android 15‚Äôs edge-to-edge enforcement.‚ÄôIt discusses what insets are and why they are important to user experience. It also details tips for handling insets, for both Compose and Views. Some of the tips it mentions are to use material components, draw backgrounds edge-to-edge, and inset critical UI. It emphasizes that insets should be handled to ensure critical UI elements remain accessible.Edge-to-edgeTesting üìèGiven Android 15‚Äôs enforcement of edge-to-edge, testing is now more important than ever for developers. Meghan covers the topic with a blog post that provides information on automated testing strategies. Some of the important points are that edge-to-edge UI will be enforced starting in Android 15 and that Compose Previews can help achieve a seamless edge-to-edge layout. Compose Preview has a number of new features for testing edge-to-edge, including improvements to showSystemUI, the ability to test specific devices, and support for different types of cutouts.Talkback adopts Gemini Nano ü¶úIn another Spotlight Week episode, Terence showcased Talkback, Android‚Äôs screen reader in the Accessibility suite.The talkback team recently updated their feature that describe images when developers don‚Äôt include descriptive alt text to use Gemini Nano with multimodality vs s previous small ML model called Garcon.Gemini Nano has given Talkback capabilities beyond basic image descriptions. For example, when Garcon is presented with a panorama of the Sydney, Australia shoreline at night, it might read: ‚ÄúFull moon over the ocean.‚Äù Gemini Nano with multimodality can paint a richer picture, with a description like: ‚ÄúA panoramic view of Sydney Opera House and the Sydney Harbour Bridge from the north shore of Sydney, New South Wales, Australia.‚ÄùType safe navigation for Compose üß≠Jetpack Navigation 2.8.0 is the latest stable version to be released in September. Don wrote a comprehensive article covering type safe navigation introduced in this version and how to use it. The article covers how navigation now allows you to define your destinations using serializable types and benefit from compile-time safety. It is simpler and safer to define your navigation destinations and arguments. The article also provides some tips on testing navigation use cases.Compose TV stable release üì∫Compose TV is also now stable with its 1.0.0 release in August. The changes going from alpha to stable release include the renaming of some APIs such as from TvLazyColumn to LazyColumn, some API modifications, and the removal of other APIs that were redundant or had better alternatives.Paul wrote a guide to help developers migrate from alpha to stable smoothly.One Credential Manager to rule them all üíçOut with the old: Android used to rely on things like ‚ÄúSmart Lock‚Äù and ‚ÄúGoogle Sign-In‚Äù to help users sign into apps. These are now being replaced.In with the new: Credential Manager is the new, unified way to handle sign-ins on Android. It supports the latest technology like passkeys (a more secure alternative to passwords), along with the familiar ‚ÄúSign in with Google‚Äù and traditional passwords.Why the change? Credential Manager aims to make signing into apps easier and more secure for users. It also simplifies things for developers, giving them one system to work with.Diego Zavala and Jason Lucibello wrote the announcement on Android Developer Blog that also provides resources for developers for migration.The article also highlights how companies like X (formerly Twitter) and Pinterest have already made the switch to Credential Manager with positive results.Adaptive layouts building made easy üìÇBack at I/O 2024 in May, we announced the beta release of Compose Adaptive APIs to help developers build adaptive layouts more easily and efficiently. Its stable version has now been released with Material guidance for production use.Alex wrote a blog to cover the announcement, and to discuss the various APIs and their use cases. In short, you can now create layouts that adapt seamlessly to different screen sizes and device postures without custom breakpoint handlers.Desktop windowing goodness üñ•Ô∏èFrancesco and Fahd announced the preview for desktop windowing on Android tablet. The feature will allow apps to run in resizable windows just like you would do on desktops.Call to action for developers: The article urges developers to optimize their apps for this new windowing environment.Android Developers BackstageüéôÔ∏èThe episode 209 of Android Developers Backstage features Doris Liu from the Jetpack Compose team discussing Compose‚Äôs animation APIs. They delve into the layered structure of these APIs, highlighting the benefits over traditional View system animation approaches.Listen to it in podcast or youtube format.Videosüí°The summer edition of #TheAndroidShow recaps all the hardware and software announcements made at the latest Made By Google eventRebecca and Simona share with you tips how to make delightful UI covering topics like how to set up edge-to-edge and inset, working with nested scrolling to create Dynamic UI, pager tricks to tie into the gestures to painting with different gradient brushes and complex graphic shaders, and much more.Overview of the new features and improvements in the latest release of Android Studio, version 20241 by Sandhya.Rebecca explores the use of shaders for enhanced graphics rendering in Android apps using Jetpack Compose.#WeArePlay tells the story of Estante M√°gica, a mobile app that helps children become authors of their own books. Robson, the creator of the app, shares his personal journey and the inspiration behind the project.Ash introduces ‚ÄúSpotlight Weeks,‚Äù a new series focused on helping developers deep-dive into specific Android topics. The first Spotlight Week focuses on Android 15.Daniel and Ash recap and expand on their Google I/O 2024 talks with a focus on new Android 15 features and developer considerations for building future-proof apps.A panel of Google Engineers answers questions collected from social media using the #AskAndroid tag and live chat during the session focused on Android 15.Aditya and Laura, lead Android developer and UX designer respectively at SAP share the story of how the company optimized their ‚ÄúSAP Mobile Start‚Äù app for large screens and foldables using Jetpack Compose Adaptive layouts in 5 minutes.Clara introduces new type-safe APIs for Jetpack Compose Navigation, starting with version 2.8.0. Clara explains how these APIs improve compile-time safety and reduce code complexity when defining navigation destinations and arguments in your Kotlin DSLRebecca provides a comprehensive guide to using flow layouts in Jetpack Compose for building flexible and responsive UIs.AndroidX Releases üöÄWe had numerous updates to AndroidX libraries that include the following:Wear Compose 1.4.0 adds default rotary input support for ScalingLazyColumn and Picker, introduces a new Modifier.rotaryScrollable for connecting rotary events, and includes entry animation for SwipeDismissableNavHost and default PositionIndicator display.Health Connect 1.0.0-alpha01 release enables read and write access to user health and fitness data, with testing support through the jetpack library.Compose UI 1.7.0 introduces significant enhancements like shared element transitions for smoother animations, Lazy list animations for enhanced visual appeal, and text formatting improvements, along with the Compose compiler being hosted in the Kotlin repository. More details on this blog written by Ben Trengrove.Compose Runtime 1.7.0 enhances composition locals with computed defaults, optimizes state object accessibility and composable function generation, and improves lambda invalidation and callback ordering.Compose Material 3 Adaptive 1.0.0 provides tools and components to build adaptive Android UIs for different screen sizes and devices.Compose Material 1.7.0 stabilizes BottomDrawer, ModalBottomSheet, and BackdropScaffold components, migrates to new ripple APIs, and improves performance by optimizing MutableInteractionSource usage.Compose Foundation 1.7.0 significantly boosts performance in key modifiers, introduces a new Indication API for efficiency, refines clickable components, and adds new features for text, layout, and animations.Compose Animation 1.7.0 introduces new shared element transition APIs for smoother animations, improves existing APIs with features like custom content alignment and deferred target animation, and stabilizes several APIs including AnimatedVisibilityScope and LookaheadScope.Collection 1.4.3 enhances performance, particularly for ScatterMap and ScatterSet, and addresses a data corruption bug in those collections.Camera 1.5.0-alpha01 introduces new APIs for dual camera video capture configuration and audio control in recordings, along with bug fixes for crashes and black screen issues.Media3 1.4.1 addresses various issues, including handling preload callbacks asynchronously, allowing playback even with loading failures, fixing errors in MP3 and TTML handling, resolving DRM issues on API 31+ devices, and improving media control and session management.Now then‚Ä¶ üëãThat‚Äôs it for this week with Android 15 in AOSP, the Made By Google event, RCS support in iOS, inspirational stories from #WeArePlay series, the latest #AndroidShow, Android Studio Koala, and lots of stable and alpha AndroidX releases.Check back soon for your next update from the Android developer universe! üí´",
  "image": "https://miro.medium.com/v2/resize:fit:1200/1*Sy3ea40KCd6LSmU6QFUgDA.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003ch2 id=\"a1b7\"\u003e\u003cstrong\u003eAndroid 15 is in AOSP üí•\u003c/strong\u003e\u003c/h2\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"b31b\"\u003eIn early September, Android 15 was released into the Android Open Source Project (AOSP). Support for Pixel devices as well as select devices from Samsung, Honor, iQOO, Lenovo, Motorola, Nothing, OnePlus, Oppo, realme, Sharp, Sony, Tecno, vivo, and Xiaomi has rolled out and will continue for the coming months.\u003c/p\u003e\u003cp id=\"4208\"\u003eAndroid 15 comes with privacy and security enhancements such as \u003ca href=\"https://developer.android.com/about/versions/15/features#private-space\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ePrivate space\u003c/a\u003e and \u003ca href=\"https://developer.android.com/identity/sign-in/single-tap-biometric\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003epasskeys\u003c/a\u003e amongst others. It also adds camera and media improvements in addition to improving the developer experience via productivity enhancements in Android Studio, Jetpack Compose, and Jetpack libraries.\u003c/p\u003e\u003ch2 id=\"03fd\"\u003e\u003cstrong\u003eA new era for texting ü•≥\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"18fd\"\u003eTexting between Android and Apple devices is getting a whole lot better. With Apple‚Äôs adoption of Rich Chat Service (RCS) comes text message reaction, high resolution pictures and videos, adding and removing people from group chats, and more.\u003c/p\u003e\u003ch2 id=\"e0e8\"\u003e\u003ca href=\"https://android-developers.googleblog.com/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eAndroid Developers blog\u003c/a\u003e üìù\u003c/h2\u003e\u003ch2 id=\"1724\"\u003e\u003cstrong\u003ePixel Hardware Event üì≤\u003c/strong\u003e\u003c/h2\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"8601\"\u003eAt our ninth \u003ca href=\"https://www.youtube.com/live/N_y2tP9of8A\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eMade By Google\u003c/a\u003e event on August 13th, we announced new AI experiences across Gemini and Android, along with our largest lineup of Pixel devices ever ‚Äî including the Pixel 9 family, our first phones with Gemini baked in as our next-generation assistant. Plus, with Gemini Live, you can now have free-flowing voice conversations with Gemini on your phone.\u003c/p\u003e\u003cp id=\"484e\"\u003e‚ÄúWe believe that AI can make day-to-day life more productive, open up new ways to learn, and create ways for people to express themselves,‚Äù says Platforms \u0026amp; Devices SVP Rick Osterloh. ‚ÄúWe‚Äôre excited to bring the best of Google AI to more people and more phones with updates across Gemini, Android, and Pixel.‚Äù\u003c/p\u003e\u003cp id=\"d184\"\u003eOn the hardware front, we introduced the Pixel 9, Pixel 9 Pro, Pixel 9 Pro XL, and the Pixel 9 Pro Fold. We also unveiled the Pixel Watch 3 ‚Äî available in two sizes ‚Äî and the snug-fitting and AI-powered Pixel Buds Pro 2.\u003c/p\u003e\u003ch2 id=\"d6f6\"\u003e\u003cstrong\u003eAndroid Studio Koala Feature Drop \u003c/strong\u003eüê®\u003c/h2\u003e\u003cp id=\"268b\"\u003eThe latest Android Studio Koala Feature Drop has cutting-edge features like new devices in Android Device streaming (including the Pixel 9 series \u0026amp; new Samsung devices), Compose previews for Glance widgets, USB cable speed detection, support for Android 15 in the Android SDK Upgrade Assistant, UI debugging enhancements and profiler tools to improve app start-up time.\u003c/p\u003e\u003ch2 id=\"01fd\"\u003e\u003cstrong\u003e#WeArePlay\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"e786\"\u003eIn the latest #WeArePlay episode, Google Play showcases and celebrates Robson from Rio de Janeiro, Brazil. He co-founded\u003ca href=\"https://play.google.com/store/apps/details?id=br.com.estantemagica.simplificacao.app\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e Estante M√°gica\u003c/a\u003e, which is an app that inspire kids to become published authors\u003c/p\u003e\u003cp id=\"d15a\"\u003eRobson, who grew up himself in a favela, wants to make a lasting impact on the education system by giving kids the opportunity to nurture literacy and write books.\u003c/p\u003e\u003ch2 id=\"8143\"\u003e\u003cstrong\u003eGoogle Maps adopts User Initiated Data Transfer üó∫Ô∏è\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"690e\"\u003eIn Android 14, we introduced User Initiate Data Transfer that addresses gaps found in foreground services and WorkManager for long duration user initiated data transfers. The new setUserInitiated API in JobScheduler aims to be an alternative to retries and constraints.\u003c/p\u003e\u003cp id=\"58f2\"\u003eIn fact, Google Maps adapted it, and saw a \u003ca href=\"https://android-developers.googleblog.com/2024/09/google-maps-improved-download-reliability-user-initiated-data-transfer-api.html\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e10%+ improvement in download failure rate for offline downloads\u003c/a\u003e.\u003c/p\u003e\u003cp id=\"c53b\"\u003e‚ÄúWe successfully launched UIDT on Android 14 in early 2024 migrating from our foreground service implementation. After a retroactive analysis on Android 14 vs Android 13 implementation, we now see a 10%+ improvement in download failure rate of offline downloads!‚Äù ‚Äî Matthew Valgenti, Software Engineer at Google\u003c/p\u003e\u003ch2 id=\"bce0\"\u003e\u003cstrong\u003eIntroducing Spotlight Weeks ‚ú®\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"23e1\"\u003eWe are introducing a new series called Spotlight Week designed to help developers learn a specific topic during a week. The week will include technical deep dive videos, new documentation, and developer stories.\u003c/p\u003e\u003cp id=\"696f\"\u003eOn the first episode of the series, \u003ca rel=\"noopener\" href=\"https://medium.com/@ashley.nohe\"\u003eAsh\u003c/a\u003e covers Android 15‚Äôs edge-to-edge, foreground services, and passkeys.\u003c/p\u003e\u003cp id=\"91e9\"\u003eSpotlight Week also brought you a whole host of \u003ca href=\"https://android-developers.googleblog.com/2024/09/welcome-to-ai-on-android-spotlight-week.html\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eAndroid AI news\u003c/a\u003e, technical deep dives and so on. You got to learn about generative AI, Gemini Nano, how to bring your own model to Android, Cloud models, among many others.\u003c/p\u003e\u003ch2 id=\"b34f\"\u003e\u003cstrong\u003eEdge-to-edge inset tips üìè\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"5976\"\u003e\u003ca rel=\"noopener\" href=\"https://medium.com/@ashley.nohe\"\u003eAsh\u003c/a\u003e wrote an in-depth Medium blog post covering inset handling tips in order for developers to prepare for Android 15‚Äôs edge-to-edge enforcement.‚Äô\u003c/p\u003e\u003cp id=\"b179\"\u003eIt discusses what insets are and why they are important to user experience. It also details tips for handling insets, for both Compose and Views. Some of the tips it mentions are to use material components, draw backgrounds edge-to-edge, and inset critical UI. It emphasizes that insets should be handled to ensure critical UI elements remain accessible.\u003c/p\u003e\u003ch2 id=\"76c9\"\u003e\u003cstrong\u003eEdge-to-edgeTesting üìè\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"07fd\"\u003eGiven Android 15‚Äôs enforcement of edge-to-edge, testing is now more important than ever for developers. \u003ca rel=\"noopener\" href=\"https://medium.com/@magicalmeghan\"\u003eMeghan\u003c/a\u003e covers the topic with a blog post that provides information on automated testing strategies. Some of the important points are that edge-to-edge UI will be enforced starting in Android 15 and that Compose Previews can help achieve a seamless edge-to-edge layout. Compose Preview has a number of new features for testing edge-to-edge, including improvements to showSystemUI, the ability to test specific devices, and support for different types of cutouts.\u003c/p\u003e\u003ch2 id=\"c0e8\"\u003e\u003cstrong\u003eTalkback adopts Gemini Nano ü¶ú\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"bfb9\"\u003eIn another Spotlight Week episode, \u003ca rel=\"noopener\" href=\"https://medium.com/@tzterencezhang\"\u003eTerence\u003c/a\u003e showcased Talkback, Android‚Äôs screen reader in the Accessibility suite.\u003c/p\u003e\u003cp id=\"891a\"\u003eThe talkback team recently updated their feature that describe images when developers don‚Äôt include descriptive alt text to use Gemini Nano with multimodality vs s previous small ML model called Garcon.\u003c/p\u003e\u003cp id=\"7e7a\"\u003eGemini Nano has given Talkback capabilities beyond basic image descriptions. For example, when Garcon is presented with a panorama of the Sydney, Australia shoreline at night, it might read: ‚ÄúFull moon over the ocean.‚Äù Gemini Nano with multimodality can paint a richer picture, with a description like: ‚ÄúA panoramic view of Sydney Opera House and the Sydney Harbour Bridge from the north shore of Sydney, New South Wales, Australia.‚Äù\u003c/p\u003e\u003ch2 id=\"a42e\"\u003e\u003cstrong\u003eType safe navigation for Compose üß≠\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"02ad\"\u003eJetpack Navigation 2.8.0 is the latest stable version to be released in September. \u003ca rel=\"noopener\" href=\"https://medium.com/@donturner\"\u003eDon\u003c/a\u003e wrote a comprehensive article covering type safe navigation introduced in this version and how to use it. The article covers how navigation now allows you to define your destinations using serializable types and benefit from compile-time safety. It is simpler and safer to define your navigation destinations and arguments. The article also provides some tips on testing navigation use cases.\u003c/p\u003e\u003ch2 id=\"7363\"\u003e\u003cstrong\u003eCompose TV stable release üì∫\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"9bb2\"\u003eCompose TV is also now stable with its 1.0.0 release in August. The changes going from alpha to stable release include the renaming of some APIs such as from \u003ccode\u003eTvLazyColumn\u003c/code\u003e to \u003ccode\u003eLazyColumn\u003c/code\u003e, some API modifications, and the removal of other APIs that were redundant or had better alternatives.\u003c/p\u003e\u003cp id=\"aec5\"\u003e\u003ca rel=\"noopener\" href=\"https://medium.com/@paul-lammertsma\"\u003ePaul\u003c/a\u003e wrote a guide to help developers migrate from alpha to stable smoothly.\u003c/p\u003e\u003ch2 id=\"51b1\"\u003e\u003cstrong\u003eOne Credential Manager to rule them all üíç\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"b2cf\"\u003eOut with the old: Android used to rely on things like ‚ÄúSmart Lock‚Äù and ‚ÄúGoogle Sign-In‚Äù to help users sign into apps. These are now being replaced.\u003c/p\u003e\u003cp id=\"9ff4\"\u003eIn with the new: Credential Manager is the new, unified way to handle sign-ins on Android. It supports the latest technology like passkeys (a more secure alternative to passwords), along with the familiar ‚ÄúSign in with Google‚Äù and traditional passwords.\u003c/p\u003e\u003cp id=\"8ad9\"\u003eWhy the change? Credential Manager aims to make signing into apps easier and more secure for users. It also simplifies things for developers, giving them one system to work with.\u003c/p\u003e\u003cp id=\"531b\"\u003eDiego Zavala and Jason Lucibello wrote \u003ca href=\"https://android-developers.googleblog.com/2024/09/streamlining-android-authentication-credential-manager-replaces-legacy-apis.html\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ethe announcement \u003c/a\u003eon Android Developer Blog that also provides resources for developers for migration.\u003c/p\u003e\u003cp id=\"fce9\"\u003eThe article also highlights how companies like X (formerly Twitter) and Pinterest have already made the switch to Credential Manager with positive results.\u003c/p\u003e\u003ch2 id=\"fc46\"\u003e\u003cstrong\u003eAdaptive layouts building made easy üìÇ\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"7933\"\u003eBack at I/O 2024 in May, we announced the beta release of Compose Adaptive APIs to help developers build adaptive layouts more easily and efficiently. Its stable version has now been released with Material guidance for production use.\u003c/p\u003e\u003cp id=\"2352\"\u003e\u003ca rel=\"noopener\" href=\"https://medium.com/@alexvanyo\"\u003eAlex\u003c/a\u003e wrote a blog to cover the announcement, and to discuss the various APIs and their use cases. In short, you can now create layouts that adapt seamlessly to different screen sizes and device postures without custom breakpoint handlers.\u003c/p\u003e\u003ch2 id=\"acd1\"\u003e\u003cstrong\u003eDesktop windowing goodness üñ•Ô∏è\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"bfa1\"\u003e\u003ca rel=\"noopener\" href=\"https://medium.com/@romanofranz\"\u003eFrancesco\u003c/a\u003e and Fahd announced the preview for desktop windowing on Android tablet. The feature will allow apps to run in resizable windows just like you would do on desktops.\u003c/p\u003e\u003cp id=\"1bb1\"\u003eCall to action for developers: The article urges developers to optimize their apps for this new windowing environment.\u003c/p\u003e\u003ch2 id=\"7293\"\u003e\u003cstrong\u003eAndroid Developers BackstageüéôÔ∏è\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"3819\"\u003eThe\u003ca href=\"https://adbackstage.libsyn.com/episode-209-compose-animations\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e episode 209 of Android Developers Backstage\u003c/a\u003e features Doris Liu from the Jetpack Compose team discussing Compose‚Äôs animation APIs. They delve into the layered structure of these APIs, highlighting the benefits over traditional View system animation approaches.\u003c/p\u003e\u003cp id=\"d1e7\"\u003eListen to it in \u003ca href=\"https://adbackstage.libsyn.com/episode-209-compose-animations\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003epodcast\u003c/a\u003e or \u003ca href=\"https://www.youtube.com/watch?v=kFtFP5dBJDo\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eyoutube\u003c/a\u003e format.\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003ch2 id=\"f970\"\u003eVideosüí°\u003c/h2\u003e\u003cp id=\"e379\"\u003eThe summer edition of #TheAndroidShow recaps all the hardware and software announcements made at the latest Made By Google event\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"8e0f\"\u003e\u003ca rel=\"noopener\" href=\"https://medium.com/@riggaroo\"\u003eRebecca\u003c/a\u003e and \u003ca rel=\"noopener\" href=\"https://medium.com/@anomisSi\"\u003eSimona\u003c/a\u003e share with you tips how to make delightful UI covering topics like how to set up edge-to-edge and inset, working with nested scrolling to create Dynamic UI, pager tricks to tie into the gestures to painting with different gradient brushes and complex graphic shaders, and much more.\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"09a3\"\u003eOverview of the new features and improvements in the latest release of Android Studio, version 20241 by Sandhya.\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"9ee7\"\u003e\u003ca rel=\"noopener\" href=\"https://medium.com/@riggaroo\"\u003eRebecca \u003c/a\u003eexplores the use of shaders for enhanced graphics rendering in Android apps using Jetpack Compose.\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"3acc\"\u003e#WeArePlay tells the story of Estante M√°gica, a mobile app that helps children become authors of their own books. Robson, the creator of the app, shares his personal journey and the inspiration behind the project.\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"c9df\"\u003e\u003ca rel=\"noopener\" href=\"https://medium.com/@ashley.nohe\"\u003eAsh\u003c/a\u003e introduces ‚ÄúSpotlight Weeks,‚Äù a new series focused on helping developers deep-dive into specific Android topics. The first Spotlight Week focuses on Android 15.\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"7b65\"\u003e\u003ca rel=\"noopener\" href=\"https://medium.com/@dagalpin\"\u003eDanie\u003c/a\u003el and \u003ca rel=\"noopener\" href=\"https://medium.com/@ashley.nohe\"\u003eAsh\u003c/a\u003e recap and expand on their Google I/O 2024 talks with a focus on new Android 15 features and developer considerations for building future-proof apps.\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"ce58\"\u003eA panel of Google Engineers answers questions collected from social media using the #AskAndroid tag and live chat during the session focused on Android 15.\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"b8fb\"\u003eAditya and Laura, lead Android developer and UX designer respectively at SAP share the story of how the company optimized their ‚ÄúSAP Mobile Start‚Äù app for large screens and foldables using Jetpack Compose Adaptive layouts in 5 minutes.\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"dcc9\"\u003eClara introduces new type-safe APIs for Jetpack Compose Navigation, starting with version 2.8.0. Clara explains how these APIs improve compile-time safety and reduce code complexity when defining navigation destinations and arguments in your Kotlin DSL\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"747b\"\u003e\u003ca rel=\"noopener\" href=\"https://medium.com/@riggaroo\"\u003eRebecca\u003c/a\u003e provides a comprehensive guide to using flow layouts in Jetpack Compose for building flexible and responsive UIs.\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003ch2 id=\"ca41\"\u003e\u003ca href=\"https://developer.android.com/jetpack/androidx/versions/all-channel\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eAndroidX Releases\u003c/a\u003e üöÄ\u003c/h2\u003e\u003cp id=\"18a8\"\u003eWe had numerous updates to AndroidX libraries that include the following:\u003c/p\u003e\u003cp id=\"d2a6\"\u003e\u003ca href=\"https://developer.android.com/jetpack/androidx/releases/wear-compose#1.4.0\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eWear Compose 1.4.0\u003c/strong\u003e\u003c/a\u003e adds default rotary input support for ScalingLazyColumn and Picker, introduces a new Modifier.rotaryScrollable for connecting rotary events, and includes entry animation for SwipeDismissableNavHost and default PositionIndicator display.\u003c/p\u003e\u003cp id=\"c020\"\u003e\u003ca href=\"https://developer.android.com/jetpack/androidx/releases/health-connect#testing-1.0.0-alpha01\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eHealth Connect 1.0.0-alpha01\u003c/strong\u003e\u003c/a\u003e release enables read and write access to user health and fitness data, with testing support through the jetpack library.\u003c/p\u003e\u003cp id=\"808c\"\u003e\u003ca href=\"https://developer.android.com/jetpack/androidx/releases/compose-ui#1.7.0\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eCompose UI 1.7.0\u003c/strong\u003e\u003c/a\u003e introduces significant enhancements like shared element transitions for smoother animations, Lazy list animations for enhanced visual appeal, and text formatting improvements, along with the Compose compiler being hosted in the Kotlin repository. More details on this blog written by \u003ca href=\"mailto:bentrengrove@google.com\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eBen Trengrove\u003c/a\u003e.\u003c/p\u003e\u003cp id=\"ada1\"\u003e\u003ca href=\"https://developer.android.com/jetpack/androidx/releases/compose-runtime#1.7.0\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eCompose Runtime 1.7.0\u003c/strong\u003e\u003c/a\u003e enhances composition locals with computed defaults, optimizes state object accessibility and composable function generation, and improves lambda invalidation and callback ordering.\u003c/p\u003e\u003cp id=\"7ab7\"\u003e\u003ca href=\"https://developer.android.com/jetpack/androidx/releases/compose-material3-adaptive#1.0.0\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eCompose Material 3 Adaptive 1.0.0\u003c/strong\u003e\u003c/a\u003e provides tools and components to build adaptive Android UIs for different screen sizes and devices.\u003c/p\u003e\u003cp id=\"47fc\"\u003e\u003ca href=\"https://developer.android.com/jetpack/androidx/releases/compose-material#1.7.0\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eCompose Material 1.7.0\u003c/strong\u003e\u003c/a\u003e stabilizes BottomDrawer, ModalBottomSheet, and BackdropScaffold components, migrates to new ripple APIs, and improves performance by optimizing MutableInteractionSource usage.\u003c/p\u003e\u003cp id=\"1a82\"\u003e\u003ca href=\"https://developer.android.com/jetpack/androidx/releases/compose-foundation#1.7.0\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eCompose Foundation 1.7.0\u003c/strong\u003e\u003c/a\u003e significantly boosts performance in key modifiers, introduces a new Indication API for efficiency, refines clickable components, and adds new features for text, layout, and animations.\u003c/p\u003e\u003cp id=\"b916\"\u003e\u003ca href=\"https://developer.android.com/jetpack/androidx/releases/compose-animation#1.7.0\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eCompose Animation 1.7.0\u003c/strong\u003e\u003c/a\u003e introduces new shared element transition APIs for smoother animations, improves existing APIs with features like custom content alignment and deferred target animation, and stabilizes several APIs including AnimatedVisibilityScope and LookaheadScope.\u003c/p\u003e\u003cp id=\"8003\"\u003e\u003ca href=\"https://developer.android.com/jetpack/androidx/releases/collection#1.4.3\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eCollection 1.4.3\u003c/strong\u003e\u003c/a\u003e enhances performance, particularly for ScatterMap and ScatterSet, and addresses a data corruption bug in those collections.\u003c/p\u003e\u003cp id=\"2198\"\u003e\u003ca href=\"https://developer.android.com/jetpack/androidx/releases/camera#1.5.0-alpha01\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eCamera 1.5.0-alpha01\u003c/strong\u003e\u003c/a\u003e introduces new APIs for dual camera video capture configuration and audio control in recordings, along with bug fixes for crashes and black screen issues.\u003c/p\u003e\u003cp id=\"a72a\"\u003e\u003ca href=\"https://developer.android.com/jetpack/androidx/releases/media3#alpha01\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eMedia3 1.4.1\u003c/strong\u003e\u003c/a\u003e addresses various issues, including handling preload callbacks asynchronously, allowing playback even with loading failures, fixing errors in MP3 and TTML handling, resolving DRM issues on API 31+ devices, and improving media control and session management.\u003c/p\u003e\u003ch2 id=\"ac49\"\u003eNow then‚Ä¶ üëã\u003c/h2\u003e\u003cp id=\"2c65\"\u003eThat‚Äôs it for this week with Android 15 in AOSP, the Made By Google event, RCS support in iOS, inspirational stories from #WeArePlay series, the latest #AndroidShow, Android Studio Koala, and lots of stable and alpha AndroidX releases.\u003c/p\u003e\u003cp id=\"a4cf\"\u003eCheck back soon for your next update from the Android developer universe! üí´\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "15 min read",
  "publishedTime": "2024-10-10T22:35:24.592Z",
  "modifiedTime": null
}
