{
  "id": "9c52bc8e-a383-4755-9a6d-37831f41f932",
  "title": "Playing Trombone Champ... with a Trombone",
  "link": "https://blog.danlew.net/2023/10/31/playing-trombone-champ-with-a-trombone/",
  "description": "As a lover of both rhythm games and trombone, of course I got Trombone Champ. Naturally, I wondered: can I control it on an actual trombone?",
  "author": "Dan Lew",
  "published": "Tue, 31 Oct 2023 13:00:49 GMT",
  "source": "https://blog.danlew.net/rss/",
  "categories": [
    "music",
    "kotlin",
    "games"
  ],
  "byline": "Dan Lew",
  "length": 4120,
  "excerpt": "As a lover of both rhythm games and trombone, of course I got Trombone Champ. Naturally, I wondered: can I control it on an actual trombone?",
  "siteName": "Dan Lew Codes",
  "favicon": "",
  "text": "As a lover of both rhythm games and trombone, of course I got Trombone Champ. Naturally, I wondered: can I control it on an actual trombone? Trombone Champ is a silly little rhythm game that took the world by storm last year (for approximately two weeks). The trombone is an instrument I've been playing for 25 years.As a lover of both rhythm games and trombone, of course I got Trombone Champ. Naturally, I wondered: can I control it on an actual trombone?The answer is: yes!This video isn't new; I posted it a year ago on Twitter but that site is dead to me now. This longer-form content also gives me an opportunity to better explain the mechanics behind the video.First, the trombone controller.You'd think that you could easily control Trombone Champ by just detecting how far out the slide is, but you'd be wrong.Trombone Champ songs have a two octave range, which is 39 notes; imagine splitting up a trombone slide into that many pieces. The slide on a tenor trombone is ~27 inches long, so each pitch would be less than an inch away from each other. That's too precise to be all that accurate. (Of course, people made controllers like this anyways, but you can see how much they struggle to get all the notes right.)What if you could just play the notes on an actual trombone and detect the pitch? It turns out the range of pitches in Trombone Champ go from low C (in the staff) to high C (way above the staff). Is that possible to play on trombone? Some streamer in the \"make wacky controllers for influencer points\" industry said that this range is impossible to play IRL but that's simply not true. High C is very doable; the highest note I can play is actually a few notes above it, and I'm not a professional trombone player.As such, for me, it was easiest to play the actual pitches on my trombone, and translate those into input.With the method settled, let's look at the code.It's extremely slapdash. I'm not a member of the \"make wacky controller for influencer points\" industry; I'm in the \"I bet I could hack this together in an hour\" industry (last seen on Hacker News declaring \"I could build THAT in a weekend\"). This code was not designed to stand the test of time; it was designed to stand up to a two minute song, then fall over due to a slight summer breeze.I setup the game window in a very specific spot on my computer (so I could figure out where each mouse position equated to which tone). I then used Robot to send mouse events to the game. When I detect sound, I press the mouse down; when the sound ends, I lift it up again. Then I simply detect the pitch and, based on that, determine the Y-position of the mouse cursor.Ah, but \"simply detecting the pitch\" turns out to be the extremely hard part of this problem. I thought this would be stupid easy - tuners exist, after all! But no, of course digital signal processing is hard. (Well, it might not be hard for someone who knows anything at all about processing audio, but all I know is how to hit \"record\" in Audacity).I found a library, TarsosDSP, which provided the algorithms I needed (or at least, were good enough to hack this together). I'll be honest: I just played with configuration values until the pitches it detected seemed close enough.The last tricky bit: pitches do not scale linearly. A low C is ~130hz, middle C is ~261hz, and high C is ~523hz. Thus I had to translate the pitches (log scale) into a linear scale to get the right position to place the mouse.All that being done, I was too excited to try it out to properly transcribe or memorize the music ahead of time. Thus, I was playing it all by ear, which is why I flubbed some of the notes. Also, the pitch detection was laggy - it would sometimes take it a couple hundred milliseconds to catch up, meaning my input was always a little behind.(I didn't render the actual trombone into the recording, either, because it's really distracting hearing both a real trombone and the silly Trombone Champ trombone at the same time. Obviously the silly one is more fun to hear.)Anyways, that's that. Hope you enjoyed this silly endeavor.",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"site-main\"\u003e\n\u003carticle\u003e\n\n    \u003cheader\u003e\n\n        \n\n        \n\n            \u003cp\u003eAs a lover of both rhythm games and trombone, of course I got Trombone Champ. Naturally, I wondered: can I control it on an actual trombone?\u003c/p\u003e\n\n        \n\n\n    \u003c/header\u003e\n\n    \u003csection\u003e\n        \u003cp\u003e\u003ca href=\"https://www.trombonechamp.com/?ref=blog.danlew.net\" rel=\"noreferrer\"\u003eTrombone Champ\u003c/a\u003e is a silly little rhythm game that took the world by storm last year (for approximately two weeks). The \u003ca href=\"https://en.wikipedia.org/wiki/Trombone?ref=blog.danlew.net\" rel=\"noreferrer\"\u003etrombone\u003c/a\u003e is an instrument I\u0026#39;ve been playing for 25 years.\u003c/p\u003e\u003cp\u003eAs a lover of both rhythm games and trombone, of course I got Trombone Champ. Naturally, I wondered: can I control it on an actual trombone?\u003c/p\u003e\u003cfigure\u003e\u003ciframe width=\"200\" height=\"113\" src=\"https://www.youtube.com/embed/LVQ_4Sl8mgw?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"\" title=\"Trombone Champ\"\u003e\u003c/iframe\u003e\u003cfigcaption\u003e\u003cp dir=\"ltr\"\u003e\u003cspan\u003eThe answer is: yes!\u003c/span\u003e\u003c/p\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003cp\u003eThis video isn\u0026#39;t new; I posted it \u003ca href=\"https://twitter.com/danlew42/status/1573681731730800643?ref=blog.danlew.net\" rel=\"noreferrer\"\u003ea year ago on Twitter\u003c/a\u003e but that site is dead to me now. This longer-form content also gives me an opportunity to better explain the mechanics behind the video.\u003c/p\u003e\u003chr/\u003e\u003cp\u003eFirst, the trombone controller.\u003c/p\u003e\u003cp\u003eYou\u0026#39;d think that you could easily control Trombone Champ by just detecting how far out the slide is, but you\u0026#39;d be wrong.\u003c/p\u003e\u003cp\u003eTrombone Champ songs have a two octave range, which is 39 notes; imagine splitting up a trombone slide into that many pieces. The slide on a tenor trombone is ~27 inches long, so each pitch would be less than an inch away from each other. That\u0026#39;s too precise to be all that accurate. (Of course, people made controllers like this anyways, but you can see how much they struggle to get all the notes right.)\u003c/p\u003e\u003cp\u003eWhat if you could just \u003cem\u003eplay\u003c/em\u003e the notes on an actual trombone and detect the pitch? \u003c/p\u003e\u003cp\u003eIt turns out the range of pitches in Trombone Champ go from low C (in the staff) to high C (way above the staff). Is that possible to play on trombone? Some streamer in the \u0026#34;make wacky controllers for influencer points\u0026#34; industry said that this range is impossible to play IRL but that\u0026#39;s simply not true. High C is very doable; the highest note I can play is actually a few notes above it, and I\u0026#39;m not a professional trombone player.\u003c/p\u003e\u003cp\u003eAs such, for me, it was easiest to play the \u003cem\u003eactual\u003c/em\u003e pitches on my trombone, and translate those into input.\u003c/p\u003e\u003chr/\u003e\u003cp\u003eWith the method settled, let\u0026#39;s look at \u003ca href=\"https://gist.github.com/dlew/9d3e60c22872b9637033436910e86201?ref=blog.danlew.net\" rel=\"noreferrer\"\u003ethe code\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eIt\u0026#39;s extremely slapdash. I\u0026#39;m not a member of the \u0026#34;make wacky controller for influencer points\u0026#34; industry; I\u0026#39;m in the \u0026#34;I bet I could hack this together in an hour\u0026#34; industry (last seen on Hacker News declaring \u0026#34;I could build THAT in a weekend\u0026#34;). This code was not designed to stand the test of time; it was designed to stand up to a two minute song, then fall over due to a slight summer breeze.\u003c/p\u003e\u003cp\u003eI setup the game window in a very specific spot on my computer (so I could figure out where each mouse position equated to which tone). I then used \u003ca href=\"https://docs.oracle.com/javase%2F9%2Fdocs%2Fapi%2F%2F/java/awt/Robot.html?ref=blog.danlew.net\" rel=\"noreferrer\"\u003e\u003ccode\u003eRobot\u003c/code\u003e\u003c/a\u003e to send mouse events to the game. When I detect sound, I press the mouse down; when the sound ends, I lift it up again. Then I simply detect the pitch and, based on that, determine the Y-position of the mouse cursor.\u003c/p\u003e\u003cp\u003eAh, but \u0026#34;simply detecting the pitch\u0026#34; turns out to be the extremely hard part of this problem. I thought this would be stupid easy - tuners exist, after all! But no, of course digital signal processing is hard. (Well, it might not be hard for someone who knows \u003cem\u003eanything at all\u003c/em\u003e about processing audio, but all I know is how to hit \u0026#34;record\u0026#34; in Audacity).\u003c/p\u003e\u003cp\u003eI found a library, \u003ca href=\"https://github.com/JorenSix/TarsosDSP?ref=blog.danlew.net\" rel=\"noreferrer\"\u003eTarsosDSP\u003c/a\u003e, which provided the algorithms I needed (or at least, were good enough to hack this together). I\u0026#39;ll be honest: I just played with configuration values until the pitches it detected seemed close enough.\u003c/p\u003e\u003cp\u003eThe last tricky bit: pitches do not scale linearly. A low C is ~130hz, middle C is ~261hz, and high C is ~523hz. Thus I had to translate the pitches (log scale) into a linear scale to get the right position to place the mouse.\u003c/p\u003e\u003cp\u003eAll that being done, I was too excited to try it out to properly transcribe or memorize the music ahead of time. Thus, I was playing it all by ear, which is why I flubbed some of the notes. Also, the pitch detection was laggy - it would sometimes take it a couple hundred milliseconds to catch up, meaning my input was always a little behind.\u003c/p\u003e\u003cp\u003e(I didn\u0026#39;t render the actual trombone into the recording, either, because it\u0026#39;s really distracting hearing both a real trombone \u003cem\u003eand\u003c/em\u003e the silly Trombone Champ trombone at the same time. Obviously the silly one is more fun to hear.)\u003c/p\u003e\u003cp\u003eAnyways, that\u0026#39;s that. Hope you enjoyed this silly endeavor.\u003c/p\u003e\n    \u003c/section\u003e\n\n    \n    \n\n\u003c/article\u003e\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "5 min read",
  "publishedTime": "2023-10-31T13:00:49Z",
  "modifiedTime": "2023-10-31T13:00:48Z"
}
