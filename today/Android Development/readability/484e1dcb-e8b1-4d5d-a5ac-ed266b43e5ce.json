{
  "id": "484e1dcb-e8b1-4d5d-a5ac-ed266b43e5ce",
  "title": "Android Weekly Issue #665",
  "link": "https://androidweekly.net/issues/issue-665/rss.xml",
  "description": "Articles \u0026 Tutorials Sponsored Discover How AI Enables Zero-Maintenance Apps Watch Instabug’s CPO, Kenny Johnston in this recorded webinar as he showcases how cutting-edge AI is changing the mobile observability and app quality game. Discover how AI automates the detection and fixing of app quality issues, leaving mobile teams to focus on new features and innovation. TrustedTime API: A Reliable Approach to Time Keeping in Android Victor Brandalise describes the TrustedTime API, which provides Android applications with a tamper-resistant time source derived from secure sources like GPS and NTP, ensuring accurate timekeeping even if the system clock is altered. Strong skipping does not fix Kotlin collections in Jetpack Compose Jorge Castillo explains why strong skipping in Jetpack Compose doesn’t fully solve recomposition issues with Kotlin collections and suggests better state management practices. Sponsored Is Your Testing Stack Holding You Back? Tired of slow test cycles, scattered tools, endless context switching? Meet BrowserStack Test Platform—an open, flexible solution with AI-driven workflows, 20,000+ real devices, \u0026 real-time insights. Deliver high-quality software up to 50% faster. Let’s build the test stack your team wants. Try now! Composing with Accessibility in Mind: Because Every User Matters! — Part 1 Bhoomi Vaghasiya Gadhiya emphasizes the importance of accessibility in app development, encouraging developers to create inclusive applications that cater to all users. Implementing the Magic Eraser Feature in the ProperShot android app Guillaume Béranger explains how the ProperShot Android app’s Magic Eraser feature allows users to remove unwanted objects with precision tools and automation. Kotlin runCatching vs try-catch: A Cleaner Way to Handle Exceptions Elena van Engelen - Maslova introduces Kotlin’s runCatching function as a cleaner alternative to traditional try-catch blocks for exception handling, highlighting how it encapsulates operations and returns a Result object, thereby enhancing code readability and safety How to Use Swift Packages in Kotlin Multiplatform using Koin Mirzamehdi Karimov explains how to integrate Swift packages into Kotlin Multiplatform using Koin for dependency management. Accelerating Android UI Testing Through Parallelization Mohamed Fotouh Shalan explains how test sharding in Firebase Test Lab and Flank can significantly reduce Android UI test execution time. Android Automotive OS Architecture: Definitive Guide Rashik explores Android Automotive OS architecture, explaining its key layers and how it integrates with vehicle hardware for in-car infotainment. How to Display Styled Strings in Jetpack Compose Joseph James demonstrates how to display styled text from strings.xml in Jetpack Compose by using an AnnotatedString using a custom toAnnotatedString() extension function. Design with Widget Canonical Layouts A review of Widget Canonical Layouts which are common layout patterns that works for various screen sizes. Common media processing operations with Jetpack Media3 Transformer Jetpack Media3’s Transformer APIs provide native Android solutions for efficient media editing tasks such as transcoding, trimming, muting, and resizing. Bridging Compose and View: Seamless Interop Communication Julien Salvi demonstrates how to utilize Jetpack Compose’s CompositionLocal to facilitate seamless interoperability and communication between Compose and traditional Android Views. Understanding Hot and Cold Flows in Kotlin Ignacio Carrión explains the differences between hot and cold flows in Kotlin. Place a sponsored post Advertise your Android dev course to over 80k readers We reach out to more than 80k Android developers around the world, every week, through our email newsletter and social media channels. Advertise your Android development course! News Widgets on lock screen: FAQ Google has announced that widgets are now available on your Pixel Tablet lock screens! Koin Annotations 2.0 — Release is out! Arnaud Giuliani announces Koin Annotations 2.0, featuring an improved compiler, better code generation, and full Kotlin Multiplatform support. Google Play enhances widget discovery to drive engagement with your app Google encourages you to revisit your app strategy and consider the potential of widgets. Introducing Widget Quality Tiers In order to help you achieve a great widget, Google is pleased to introduce Android Widget Quality Tiers. Generate Stunning Visuals in Your Android Apps with Imagen 3 Imagen 3, Google's most advanced image generation model, is now available through Vertex AI in Firebase, making it even easier to integrate it to your Android apps. Videos \u0026 Podcasts Future of AndroidDev in an AI world with Vinay Gaba Vinay Gaba shares insights from interviews with top Android devs on their three-year predictions, and offers his own perspective. Genkit is GA, Imagen 3 support in Vertex AI SDKs, and Apple SDK updates! Welcome to the February 2025 edition of Firebase Release Notes. Compose runtime and performance Tor and Romain chat with Leland and Chuck from the Compose team about performance -- recent optimizations, upcoming optimizations, and challenges. Is It Worth to Learn Native Android as a Beginner In 2025? Philipp Lackner shares recommendations on what to do to dive into native Android development nowadays. Widgets This week's Spotlight Series dives deep into widget benefits, design, implementation and discovery. Coding Widget layouts Writing a widget that takes advantage of the rich visual design available in Android can be daunting. Code-along with Developer Relations Engineer Summers Pittman. Chris Sinco shows us how Mesh simplifies gradient design in Compose Chris Sinco introduces Mesh, his latest tool for creating and editing mesh gradients with ease. How Koin's Plugin for Android Studio Helps You Spot Kotlin App Issues Arnaud Giuliani and Miguel Valdes-Faura demonstrate how Koin's official plugin for IntelliJ and Android Studio helps you catch issues in your Kotlin applications directly in your IDE.",
  "author": "",
  "published": "Sun, 09 Mar 2025 16:15:08 +0000",
  "source": "https://androidweekly.net/rss.xml",
  "categories": null,
  "byline": "",
  "length": 1321,
  "excerpt": "",
  "siteName": "",
  "favicon": "",
  "text": "Watch Instabug’s CPO, Kenny Johnston in this recorded webinar as he showcases how cutting-edge AI is changing the mobile observability and app quality game. Discover how AI automates the detection and fixing of app quality issues, leaving mobile teams to focus on new features and innovation. Tired of slow test cycles, scattered tools, endless context switching? Meet BrowserStack Test Platform—an open, flexible solution with AI-driven workflows, 20,000+ real devices, \u0026 real-time insights. Deliver high-quality software up to 50% faster. Let’s build the test stack your team wants. Try now! Elena van Engelen - Maslova introduces Kotlin’s runCatching function as a cleaner alternative to traditional try-catch blocks for exception handling, highlighting how it encapsulates operations and returns a Result object, thereby enhancing code readability and safety Tor and Romain chat with Leland and Chuck from the Compose team about performance -- recent optimizations, upcoming optimizations, and challenges. This week's Spotlight Series dives deep into widget benefits, design, implementation and discovery. Writing a widget that takes advantage of the rich visual design available in Android can be daunting. Code-along with Developer Relations Engineer Summers Pittman. ]]\u003e",
  "image": "",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://www.instabug.com/blog/webinar-how-ai-transforms-mobile-observability-to-deliver-zero-maintenance-mobile-apps?utm_source=androidweekly\u0026amp;utm_medium=newsletters\u0026amp;utm_campaign=androidweekly-q424-webinar-7-nov-24\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/67cdbd/dc3c93bc4e360036e2/square_webinar-04.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003cdiv\u003e\u003cp\u003eWatch Instabug’s CPO, Kenny Johnston in this recorded webinar as he showcases how cutting-edge AI is changing the mobile observability and app quality game. Discover how AI automates the detection and fixing of app quality issues, leaving mobile teams to focus on new features and innovation.\n\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\n\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://www.browserstack.com/test-platform?utm_source=newsletter\u0026amp;utm_medium=email\u0026amp;utm_platform=\u0026amp;utm_content=product-updates\u0026amp;utm_campaign=Newsletter-to-landing-page-10-Feb-2025-GA-Launch-Test-Platform\u0026amp;utm_campaigncode=701OW00000JYOElYAP\u0026amp;utm_term=androidweekly\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/67cdbd/a23c93bc4e360036d4/square_Android_Weekly__1_.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003cdiv\u003e\u003cp\u003eTired of slow test cycles, scattered tools, endless context switching? Meet BrowserStack Test Platform—an open, flexible solution with AI-driven workflows, 20,000+ real devices, \u0026amp; real-time insights. Deliver high-quality software up to 50% faster. Let’s build the test stack your team wants. Try now!\n\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\n\n\u003cdiv\u003e\u003cp\u003eElena van Engelen - Maslova introduces Kotlin’s runCatching function as a cleaner alternative to traditional try-catch blocks for exception handling, highlighting how it encapsulates operations and returns a Result object, thereby enhancing code readability and safety\n\u003c/p\u003e\u003c/div\u003e\n\n\n\n\n\n\n\n\n\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://androidweekly.net/jobs/new\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/67cdbe/113c93bc4e360036ef/square_aw.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\n\u003ctable\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e\n\u003cdiv\u003e\u003cp\u003e\u003ca href=\"https://android-developers.googleblog.com/2025/03/widgets-on-lock-screen-faq.html\" target=\"_blank\"\u003e\n\u003cimg alt=\"\" width=\"90\" src=\"https://androidweekly.net/system/images/67ccc9/663c93bc4e36001453/square_Bildschirmfoto_2025-03-09_um_17.14.34.png\"/\u003e\n\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\n\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"\" width=\"5\" height=\"1\" src=\"https://imgssl.constantcontact.com/letters/images/1101116784221/S.gif\"/\u003e\u003c/p\u003e\u003c/div\u003e\n\n\n\n\n\n\n\u003cdiv\u003e\u003cp\u003eTor and Romain chat with Leland and Chuck from the Compose team about performance -- recent optimizations, upcoming optimizations, and challenges.\n\u003c/p\u003e\u003c/div\u003e\n\n\u003cdiv\u003e\u003cp\u003eThis week\u0026#39;s Spotlight Series dives deep into widget benefits, design, implementation and discovery. \n\n\u003c/p\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cp\u003eWriting a widget that takes advantage of the rich visual design available in Android can be daunting. Code-along with Developer Relations Engineer Summers Pittman.\n\u003c/p\u003e\u003c/div\u003e\n\n\n]]\u0026gt;\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": null,
  "modifiedTime": null
}
