{
  "id": "b8f2fce3-de7a-4e01-b538-9cd1aabfcf14",
  "title": "Unleashing Linux on Android: A Developer’s Playground",
  "link": "https://proandroiddev.com/unleashing-linux-on-android-a-developers-playground-a269f91d689e?source=rss----c72404660798---4",
  "description": "",
  "author": "Cedric Ferry",
  "published": "Mon, 24 Mar 2025 20:43:24 GMT",
  "source": "https://proandroiddev.com/feed",
  "categories": [
    "android",
    "androiddev",
    "android-15-new-features",
    "virtualization",
    "termina"
  ],
  "byline": "Cedric Ferry",
  "length": 7500,
  "excerpt": "Imagine having a Linux terminal right in your pocket, available on your Android device. With the “Linux development environment” feature, hidden within Developer Options on Android 15 (build…",
  "siteName": "ProAndroidDev",
  "favicon": "https://miro.medium.com/v2/resize:fill:256:256/1*A8VytPZQhvUf_MG6hm_Dlw.png",
  "text": "IntroductionImagine having a Linux terminal right in your pocket, available on your Android device. With the “Linux development environment” feature, hidden within Developer Options on Android 15 (build BP1A.250305.019), this becomes a reality. This feature opens up a new possibilities for developers and advanced users, allowing for scripting, coding, and running familiar Linux tools directly on their smartphone or tablet.What is the Linux Development Environment?This feature creates a containerized Linux environment. It is running alongside your Android OS. It’s not a desktop experience, but rather a command-line interface, hacker style. This environment is powered by the Debian Linux distribution.Containerization powered by AVFImagine having a super-secure little room inside your Android phone! That’s essentially what the Android Virtualization Framework (AVF) does. It creates safe and isolated virtual machines, using clever technology known as pKVM (protected Kernel-based Virtual Machine). This helps keep your private data and important apps extra protected. Developers can use AVF to build apps that are even more secure and private. The Terminal App leverage AVF to run an prevent attackers to have access to the OS from the Debian environment.A Developers and DevOps playgroundThis feature is a boon for developers. You can work on a script, ssh to your remote box, write, execute and test code like Bash, C, C++,Python or even Kotlin and PHP.All the developers tools available on a regular Linux box are right in the palm of your hand.You can setup you very own developers configuration, with Zsh and all the bells and whistles. Edit your files with vim or emacs. Pick your team!Finally, there is an option for port forwarding which allow you to run a webserver for example.How do I Enable the Linux Development Environment?First, you’ll need to unlock Developer options. Go to Settings \u003e About phone and tap the “Build number” repeatedly until you see a message confirming that Developer options are enabled. Then, navigate to Settings \u003e System \u003e Developer options. Scroll down until you find “Linux development environment” and toggle it on. You may be prompted to download some initial files. Once enabled, you’ll need a terminal application to interact with the Linux environment.Let’s take a lap.Open your Terminal application. You’ll be greeted with a sober black and white Linux command prompt. You can start with the mandatory uname -a, ls and cd command to explore the file system.Checkout the system health with free -hand df-hThen get the very latest updates apt update \u0026\u0026 apt upgrade .free and df command show the ram and storage — a fraction of the RAM is allocated to the Linux box (only 4G/12G available)Note: the filesystem structure within the Linux environment differs from the Android file system and you won’t find your Android apps nor documents.Let’s create a simple web serverI want to demonstrate the capabilities of the terminal app when it comes to web development. Let’s create a simple web server and access it from the Android system.First, open the port 8080 with iptables:iptables -A INPUT -p tcp --dport 8080 -j ACCEPTbefore opening port, the Android OS will ask if you AcceptRun your python tiny server: python3 -m http.server 8080tiny python server and logs showing accessthen open you Chrome browser on Android and connect to localhost:8080, and voilà!accessing the python server from Android (Chrome Browser)Some limitations to keep in mindThe Terminal is a really powerful tool, but it remains a text based experience (is it? read until the end ;) ).The performance you get will directly depend on your device’s hardware specs. It seems that Debian has access to the entire CPU and but only a fraction of the RAM.lscpu command show that we have access to the hardware.3.8G are available while this device has 12G installedThe storage used by the Linux environment is shared with the Android system, so you’ll want to manage space accordingly. You might also notice a slight increase in battery usage, especially during resource-intensive tasks. For security, the Linux environment is sandboxed, meaning it’s isolated from the rest of your Android system, which limits direct access to some Android features. As the name suggests, this feature is geared towards development and experimentation, and not necessarily for running high-performance applications.The machine runs on a different network, you can access it from your phone, but I wasn’t able to access it from another computer on the same wifi.Android device: 192.168.20.12 / 192.168.0.1Linux Box: 192.168.0.2Notice the IP of the linux box is not on the same subnet (0 vs 20). Therefor we can’t access the Linux box from a computer on the same network.I also tried to access 192.168.20.12:8080, but the port is not open. So port forwarding seem to work only within the android device.You may consider using a reverse-proxy to access the Debian box externally, but be careful with that.Portrait, Landscape and External keyboardUsing the Terminal requires a lot of typing. It can rapidly be tiring to use the virtual keyboard. The Terminal App support external keyboard and you can use the phone in landscape for a slightly more comfortable experience. There are many bluetooth keyboards for Android, you can also plug a USB-C keyboard to the charging port.SecurityEven though Linux runs in a sandbox, bad actors can turn your phone to trash by consuming enormous resources like CPU (crypto mining…) or network (DDoS bots). In addition, the terminal mount a shared storage and an internal storage.Shared storage is your “Download” folder.I was able to create and remove files from shared storage.This can be useful to transfer data between your phone and the Debian box. It also means, in the worst case you could loose all your downloaded files.Internal storage contains files related to Debian. It is accessible only as root.show the files in /mnt/internalMy recommendation, only install software from trusted sources, that is the Debian repository. Be cautious when running scripts or applications from unknown sources.A few use caseSSH-ing to your serversI think the Terminal app is a great way for you to access your servers via SSH, you save your access keys and can put your terminal app in the Private Space provided in Android 15 for additional security.Scripting/light programmingYou can write scripts and programs in many languages as long as you are happy with pure text editors like vim and emacs. Port-forwarding allow you to develop for the web.Running Linux-only programsRunning some lightweight linux-only programs such as nmap , ssh or curl.One More Thing: source codeYou can find the source code of the Terminal App on the AOSP repository, that’s a good way to learn how AVF works and find out upcoming features.ConclusionThe Linux Development Environment on Android 15 QPR2 provides a valuable tool for developers and advanced users. It offers a convenient way to access a Linux terminal and run familiar tools on your Android device. It is a unique feature in the world of mobile devices. I may be challenging to spend a long time in the Terminal unless you have an external keyboard and/or a big screen (tablet, foldable, external monitor).Thanks for reading this far! I hope you learned something and you are excited about this new feature!In the next article, I will explain how to get GUI Linux environment on your Android device, stay-tuned, clap and follow!",
  "image": "https://miro.medium.com/v2/resize:fit:1200/1*2A3E8tdudAbv5Y8E55oCzA.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cdiv\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://sonique6784.medium.com/?source=post_page---byline--a269f91d689e---------------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Cedric Ferry\" src=\"https://miro.medium.com/v2/resize:fill:88:88/1*gBeiRFttIu-v4tJxInQ-6w.jpeg\" width=\"44\" height=\"44\" loading=\"lazy\" data-testid=\"authorPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://proandroiddev.com/?source=post_page---byline--a269f91d689e---------------------------------------\" rel=\"noopener  ugc nofollow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"ProAndroidDev\" src=\"https://miro.medium.com/v2/resize:fill:48:48/1*XVtdl45m8YaYrPI4buJ5yQ.png\" width=\"24\" height=\"24\" loading=\"lazy\" data-testid=\"publicationPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/div\u003e\u003ch2 id=\"a815\"\u003eIntroduction\u003c/h2\u003e\u003cp id=\"ef36\"\u003eImagine having a Linux terminal right in your pocket, available on your Android device. With the “Linux development environment” feature, hidden within Developer Options on Android 15 (build BP1A.250305.019), this becomes a reality. \u003cbr/\u003eThis feature opens up a new possibilities for developers and advanced users, allowing for scripting, coding, and running familiar Linux tools directly on their smartphone or tablet.\u003c/p\u003e\u003ch2 id=\"b79d\"\u003eWhat is the Linux Development Environment?\u003c/h2\u003e\u003cp id=\"4a29\"\u003eThis feature creates a containerized Linux environment. It is running alongside your Android OS. It’s not a desktop experience, but rather a command-line interface, hacker style. This environment is powered by the Debian Linux distribution.\u003c/p\u003e\u003ch2 id=\"7e17\"\u003eContainerization powered by AVF\u003c/h2\u003e\u003cp id=\"9ea6\"\u003eImagine having a super-secure little room inside your Android phone! That’s essentially what the \u003ca href=\"https://source.android.com/docs/core/virtualization\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eAndroid Virtualization Framework\u003c/a\u003e (AVF) does. It creates safe and isolated virtual machines, using clever technology known as \u003ca href=\"https://source.android.com/docs/core/virtualization/architecture#pkm-vendor-modules\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003epKVM\u003c/a\u003e (protected Kernel-based Virtual Machine). This helps keep your private data and important apps extra protected. Developers can use AVF to build apps that are even more secure and private. The Terminal App leverage AVF to run an prevent attackers to have access to the OS from the Debian environment.\u003c/p\u003e\u003ch2 id=\"8f3a\"\u003eA Developers and DevOps playground\u003c/h2\u003e\u003cp id=\"b893\"\u003eThis feature is a boon for developers. You can work on a script, ssh to your remote box, write, execute and test code like Bash, C, C++,Python or even Kotlin and PHP.\u003cbr/\u003eAll the developers tools available on a regular Linux box are right in the palm of your hand.\u003c/p\u003e\u003cp id=\"8839\"\u003eYou can setup you very own developers configuration, with \u003ca href=\"https://en.wikipedia.org/wiki/Z_shell\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eZsh\u003c/a\u003e and all the bells and whistles. Edit your files with \u003ca href=\"https://www.vim.org/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003evim\u003c/a\u003e or \u003ca href=\"https://www.gnu.org/software/emacs/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eemacs\u003c/a\u003e. Pick your team!\u003c/p\u003e\u003cp id=\"640a\"\u003eFinally, there is an option for port forwarding which allow you to run a webserver for example.\u003c/p\u003e\u003ch2 id=\"5dec\"\u003eHow do I Enable the Linux Development Environment?\u003c/h2\u003e\u003cp id=\"2ba2\"\u003eFirst, you’ll need to unlock Developer options. Go to Settings \u0026gt; About phone and tap the “Build number” repeatedly until you see a message confirming that Developer options are enabled. \u003cbr/\u003eThen, navigate to Settings \u0026gt; System \u0026gt; Developer options. Scroll down until you find “Linux development environment” and toggle it on. You may be prompted to download some initial files. Once enabled, you’ll need a terminal application to interact with the Linux environment.\u003c/p\u003e\u003ch2 id=\"f937\"\u003eLet’s take a lap.\u003c/h2\u003e\u003cp id=\"1445\"\u003eOpen your Terminal application. You’ll be greeted with a sober black and white Linux command prompt. \u003cbr/\u003eYou can start with the mandatory uname -a, ls and cd command to explore the file system.\u003cbr/\u003eCheckout the system health with \u003ccode\u003efree -h\u003c/code\u003eand \u003ccode\u003edf-h\u003c/code\u003e\u003cbr/\u003eThen get the very latest updates \u003ccode\u003eapt update \u0026amp;\u0026amp; apt upgrade\u003c/code\u003e .\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003efree and df command show the ram and storage — a fraction of the RAM is allocated to the Linux box (only 4G/12G available)\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"a704\"\u003eNote: the filesystem structure within the Linux environment differs from the Android file system and you won’t find your Android apps nor documents.\u003c/p\u003e\u003ch2 id=\"e356\"\u003eLet’s create a simple web server\u003c/h2\u003e\u003cp id=\"d6f1\"\u003eI want to demonstrate the capabilities of the terminal app when it comes to web development. Let’s create a simple web server and access it from the Android system.\u003c/p\u003e\u003cp id=\"6bff\"\u003eFirst, open the port 8080 with iptables:\u003c/p\u003e\u003cp id=\"af67\"\u003e\u003ccode\u003eiptables -A INPUT -p tcp --dport 8080 -j ACCEPT\u003c/code\u003e\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003ebefore opening port, the Android OS will ask if you Accept\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"499a\"\u003eRun your python tiny server: \u003ccode\u003epython3 -m http.server 8080\u003c/code\u003e\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003etiny python server and logs showing access\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"758e\"\u003ethen open you Chrome browser on Android and connect to localhost:8080, and voilà!\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eaccessing the python server from Android (Chrome Browser)\u003c/figcaption\u003e\u003c/figure\u003e\u003ch2 id=\"f9c4\"\u003eSome limitations to keep in mind\u003c/h2\u003e\u003cp id=\"fd0b\"\u003eThe Terminal is a really powerful tool, but it remains a text based experience (is it? read until the end ;) ).\u003cbr/\u003eThe performance you get will directly depend on your device’s hardware specs. It seems that Debian has access to the entire CPU and but only a fraction of the RAM.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003elscpu command show that we have access to the hardware.\u003c/figcaption\u003e\u003c/figure\u003e\u003cfigure\u003e\u003cfigcaption\u003e3.8G are available while this device has 12G installed\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"ac26\"\u003eThe storage used by the Linux environment is shared with the Android system, so you’ll want to manage space accordingly. You might also notice a slight increase in battery usage, especially during resource-intensive tasks. \u003cbr/\u003eFor security, the Linux environment is sandboxed, meaning it’s isolated from the rest of your Android system, which limits direct access to some Android features. \u003cbr/\u003eAs the name suggests, this feature is geared towards development and experimentation, and not necessarily for running high-performance applications.\u003c/p\u003e\u003cp id=\"a6eb\"\u003eThe machine runs on a different network, you can access it from your phone, but I wasn’t able to access it from another computer on the same wifi.\u003c/p\u003e\u003cp id=\"2934\"\u003eAndroid device: 192.168.\u003cstrong\u003e20\u003c/strong\u003e.12 / 192.168.0.1\u003c/p\u003e\u003cp id=\"b9a9\"\u003eLinux Box: 192.168.\u003cstrong\u003e0\u003c/strong\u003e.2\u003c/p\u003e\u003cp id=\"c9f8\"\u003eNotice the IP of the linux box is not on the same subnet (0 vs 20). Therefor we can’t access the Linux box from a computer on the same network.\u003c/p\u003e\u003cp id=\"c5cc\"\u003eI also tried to access 192.168.\u003cstrong\u003e20\u003c/strong\u003e.12:8080, but the port is not open. So port forwarding seem to work only within the android device.\u003c/p\u003e\u003cp id=\"3ad7\"\u003eYou may consider using a reverse-proxy to access the Debian box externally, but be careful with that.\u003c/p\u003e\u003ch2 id=\"fd85\"\u003ePortrait, Landscape and External keyboard\u003c/h2\u003e\u003cp id=\"91ca\"\u003eUsing the Terminal requires a lot of typing. It can rapidly be tiring to use the virtual keyboard. The Terminal App support external keyboard and you can use the phone in landscape for a slightly more comfortable experience. There are many bluetooth keyboards for Android, you can also plug a USB-C keyboard to the charging port.\u003c/p\u003e\u003ch2 id=\"b8c3\"\u003eSecurity\u003c/h2\u003e\u003cp id=\"193f\"\u003eEven though Linux runs in a sandbox, bad actors can turn your phone to trash by consuming enormous resources like CPU (crypto mining…) or network (DDoS bots). \u003cbr/\u003eIn addition, the terminal mount a shared storage and an internal storage.\u003cbr/\u003eShared storage is your “Download” folder.\u003cbr/\u003eI was able to create and remove files from shared storage.\u003cbr/\u003eThis can be useful to transfer data between your phone and the Debian box. It also means, in the worst case you could loose all your downloaded files.\u003c/p\u003e\u003cp id=\"9907\"\u003eInternal storage contains files related to Debian. It is accessible only as root.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eshow the files in /mnt/internal\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"786f\"\u003eMy recommendation, only install software from trusted sources, that is the Debian repository. Be cautious when running scripts or applications from unknown sources.\u003c/p\u003e\u003ch2 id=\"9fc9\"\u003eA few use case\u003c/h2\u003e\u003ch2 id=\"70da\"\u003eSSH-ing to your servers\u003c/h2\u003e\u003cp id=\"192f\"\u003eI think the Terminal app is a great way for you to access your servers via SSH, you save your access keys and can put your terminal app in the Private Space provided in Android 15 for additional security.\u003c/p\u003e\u003ch2 id=\"759c\"\u003eScripting/light programming\u003c/h2\u003e\u003cp id=\"e945\"\u003eYou can write scripts and programs in many languages as long as you are happy with pure text editors like vim and emacs. Port-forwarding allow you to develop for the web.\u003c/p\u003e\u003ch2 id=\"ed8e\"\u003eRunning Linux-only programs\u003c/h2\u003e\u003cp id=\"299e\"\u003eRunning some lightweight linux-only programs such as \u003ccode\u003enmap\u003c/code\u003e , \u003ccode\u003essh\u003c/code\u003e or \u003ccode\u003ecurl\u003c/code\u003e.\u003c/p\u003e\u003ch2 id=\"1e9f\"\u003eOne More Thing: source code\u003c/h2\u003e\u003cp id=\"6e53\"\u003eYou can find the source code of the \u003ca href=\"https://cs.android.com/android/platform/superproject/main/+/main:packages/modules/Virtualization/android/TerminalApp/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eTerminal App\u003c/a\u003e on the AOSP repository, that’s a good way to learn how \u003ca href=\"https://source.android.com/docs/core/virtualization\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eAVF\u003c/a\u003e works and find out upcoming features.\u003c/p\u003e\u003ch2 id=\"4e47\"\u003eConclusion\u003c/h2\u003e\u003cp id=\"8f76\"\u003eThe Linux Development Environment on Android 15 QPR2 provides a valuable tool for developers and advanced users. It offers a convenient way to access a Linux terminal and run familiar tools on your Android device. It is a unique feature in the world of mobile devices. I may be challenging to spend a long time in the Terminal unless you have an external keyboard and/or a big screen (tablet, foldable, external monitor).\u003c/p\u003e\u003cp id=\"5fd4\"\u003eThanks for reading this far! I hope you learned something and you are excited about this new feature!\u003c/p\u003e\u003cp id=\"3e62\"\u003eIn the next article, I will explain how to get GUI Linux environment on your Android device, stay-tuned, clap and follow!\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "8 min read",
  "publishedTime": "2025-03-20T14:46:49.807Z",
  "modifiedTime": null
}
