{
  "id": "690282de-f9b3-41a0-aee4-afdccab7da62",
  "title": "CodeSOD: Using the Old Bean",
  "link": "https://thedailywtf.com/articles/using-the-old-bean",
  "description": "If you write a lot of Java, you're going to end up writing a lot of getters and setters. Without debating the merits of loads of getters and setters versus bare properties, ideally, getters and setters are the easiest code to write. Many IDEs will just generate them for you! How can you screw up getters and setters? Well, Dave found someone who could. private ReportDatesDao reportDatesDao; @Resource(name = CensusDao.BEAN_NAME) public void setAuditDao(CensusDao censusDao) { this.reportDatesDao = reportDatesDao; } The function is called setAuditDao, takes a CensusDao input, but manipulates reportDatesDao, because clearly someone copy/pasted and didn't think about what they were doing. The result, however, is that this just sets this.reportDatesDao equal to itself. I'm always impressed by code which given the chance to make multiple decisions makes every wrong choice, even if it is just lazy copy/paste. [Advertisement] Plan Your .NET 9 Migration with ConfidenceYour journey to .NET 9 is more than just one decision.Avoid migration migraines with the advice in this free guide. Download Free Guide Now!",
  "author": "Remy Porter",
  "published": "Thu, 19 Jun 2025 06:30:00 GMT",
  "source": "http://syndication.thedailywtf.com/TheDailyWtf",
  "categories": [
    "CodeSOD"
  ],
  "byline": "Remy Porter",
  "length": 1375,
  "excerpt": "If you write a lot of Java, you're going to end up writing a lot of getters and setters. Without debating the merits of loads of getters and setters versus bare properties, ideally, getters and setters are the easiest code to write. Many IDEs will just generate them for you! How can you screw up getters and setters? Well, Dave found someone who could.",
  "siteName": "The Daily WTF",
  "favicon": "",
  "text": "by in CodeSOD on 2025-06-19 Edit Remy PorterComputers were a mistake, which is why I'm trying to shoot them into space. Editor-in-Chief for TDWTF. If you write a lot of Java, you're going to end up writing a lot of getters and setters. Without debating the merits of loads of getters and setters versus bare properties, ideally, getters and setters are the easiest code to write. Many IDEs will just generate them for you! How can you screw up getters and setters? Well, Dave found someone who could. private ReportDatesDao reportDatesDao; @Resource(name = CensusDao.BEAN_NAME) public void setAuditDao(CensusDao censusDao) { this.reportDatesDao = reportDatesDao; } The function is called setAuditDao, takes a CensusDao input, but manipulates reportDatesDao, because clearly someone copy/pasted and didn't think about what they were doing. The result, however, is that this just sets this.reportDatesDao equal to itself. I'm always impressed by code which given the chance to make multiple decisions makes every wrong choice, even if it is just lazy copy/paste. [Advertisement] Plan Your .NET 9 Migration with ConfidenceYour journey to .NET 9 is more than just one decision.Avoid migration migraines with the advice in this free guide. Download Free Guide Now!",
  "image": "https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv itemscope=\"\" itemtype=\"http://schema.org/Article\" id=\"article-page\"\u003e\n\n        \n        \u003cp\u003e\u003cspan\u003eby \n            in \u003ca itemprop=\"articleSection\" href=\"https://thedailywtf.com/series/code-sod\"\u003eCodeSOD\u003c/a\u003e\n            on \u003cspan itemprop=\"datePublished\" content=\"2025-06-19\"\u003e2025-06-19\u003c/span\u003e\n            \u003ca href=\"https://thedailywtf.com/admin/article/edit/10940\" rel=\"nofollow\"\u003eEdit\u003c/a\u003e\n        \u003c/span\u003e\u003c/p\u003e\n        \u003cdiv itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\"\u003e\n            \u003cp\u003e\u003cimg itemprop=\"image\" src=\"https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg\"/\u003e\n            \u003ca itemprop=\"name\" href=\"https://thedailywtf.com/authors/remy-porter\"\u003eRemy Porter\u003c/a\u003e\u003c/p\u003e\u003cp itemprop=\"description\"\u003eComputers were a mistake, which is why I\u0026#39;m trying to shoot them into space. Editor-in-Chief for TDWTF.\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv itemprop=\"articleBody\"\u003e\n            \u003cp\u003eIf you write a lot of Java, you\u0026#39;re going to end up writing a lot of getters and setters. Without debating the merits of loads of getters and setters versus bare properties, ideally, getters and setters are the easiest code to write. Many IDEs will just generate them for you! How can you screw up getters and setters?\u003c/p\u003e\n\u003cp\u003eWell, \u003cstrong\u003eDave\u003c/strong\u003e found someone who could.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u003cspan\u003eprivate\u003c/span\u003e ReportDatesDao reportDatesDao;\n\u003cspan\u003e@Resource(name = CensusDao.BEAN_NAME)\u003c/span\u003e\n\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003evoid\u003c/span\u003e \u003cspan\u003esetAuditDao\u003c/span\u003e\u003cspan\u003e(CensusDao censusDao)\u003c/span\u003e {\n   \u003cspan\u003ethis\u003c/span\u003e.reportDatesDao = reportDatesDao;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe function is called \u003ccode\u003esetAuditDao\u003c/code\u003e, takes a \u003ccode\u003eCensusDao\u003c/code\u003e input, but manipulates \u003ccode\u003ereportDatesDao\u003c/code\u003e, because clearly someone copy/pasted and didn\u0026#39;t think about what they were doing.\u003c/p\u003e\n\u003cp\u003eThe result, however, is that this just sets \u003ccode\u003ethis.reportDatesDao\u003c/code\u003e equal to itself.\u003c/p\u003e\n\u003cp\u003eI\u0026#39;m always impressed by code which given the chance to make multiple decisions makes \u003cem\u003eevery wrong choice\u003c/em\u003e, even if it is just lazy copy/paste.\u003c/p\u003e\n\u003cp\u003e\n\t[Advertisement] \u003cb\u003ePlan Your .NET 9 Migration with Confidence\u003c/b\u003e\u003cbr/\u003eYour journey to .NET 9 is more than just one decision.Avoid migration migraines with the advice in this free guide. \u003cb\u003e\u003ca href=\"https://inedo.com/support/whitepapers/dotnet-guide?utm_campaign=dotnet\u0026amp;utm_source=tdwtf-footer\"\u003eDownload Free Guide Now!\u003c/a\u003e\u003c/b\u003e\n\u003c/p\u003e\n\n        \u003c/div\u003e\n\n        \n    \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": "2025-06-19T06:30:00Z",
  "modifiedTime": null
}
