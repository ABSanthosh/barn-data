{
  "id": "1a863aac-13a9-4677-9f03-6b75bf7e148b",
  "title": "CodeSOD: The Variable Toggle",
  "link": "https://thedailywtf.com/articles/the-variable-toggle",
  "description": "A common class of bad code is the code which mixes server side code with client side code. This kind of thing: \u003cspan class=\"hljs-meta\"\u003e\u003c?php\u003c/span\u003e \u003cspan class=\"hljs-keyword\"\u003eif\u003c/span\u003e (someVal) { \u003cspan class=\"hljs-meta\"\u003e?\u003e\u003c/span\u003e \u003cspan class=\"hljs-keyword\"\u003evar\u003c/span\u003e foo = \u003cspan class=\"hljs-meta\"\u003e\u003c?\u003c/span\u003e \u003cspan class=\"hljs-keyword\"\u003eecho\u003c/span\u003e someOtherVal \u003cspan class=\"hljs-meta\"\u003e?\u003e\u003c/span\u003e; \u003cspan class=\"hljs-meta\"\u003e\u003c?php\u003c/span\u003e } \u003cspan class=\"hljs-keyword\"\u003eelse\u003c/span\u003e { \u003cspan class=\"hljs-meta\"\u003e?\u003e\u003c/span\u003e \u003cspan class=\"hljs-keyword\"\u003evar\u003c/span\u003e foo = \u003cspan class=\"hljs-number\"\u003e5\u003c/span\u003e; \u003cspan class=\"hljs-meta\"\u003e\u003c?php\u003c/span\u003e } \u003cspan class=\"hljs-meta\"\u003e?\u003e\u003c/span\u003e We've seen it, we hate it, and is there really anything new to say about it? Well, today's anonymous submitter found an \"interesting\" take on the pattern. \u003cspan class=\"hljs-keyword\"\u003eif\u003c/span\u003e(linkfromwhere_srfid==\u003cspan class=\"hljs-string\"\u003e'vff'\u003c/span\u003e) { \u003cspan class=\"hljs-meta\"\u003e\u003c?php\u003c/span\u003e \u003cspan class=\"hljs-variable\"\u003e$vff\u003c/span\u003e = \u003cspan class=\"hljs-number\"\u003e1\u003c/span\u003e; \u003cspan class=\"hljs-meta\"\u003e?\u003e\u003c/span\u003e } Here, they have a client-side conditional, and based on that conditional, they attempt to set a variable on the server side. This does not work. This cannot work: the PHP code executes on the server, the client code executes on the client, and you need to be a lot more thoughtful about how they interact than this. And yet, the developer responsible has done this all over the code base, pushed the non-working code out to production, and when it doesn't work, just adds bug tickets to the backlog to eventually figure out why- tickets that never get picked up, because there's always something with a higher priority out there. [Advertisement] Keep all your packages and Docker containers in one place, scan for vulnerabilities, and control who can access different feeds. ProGet installs in minutes and has a powerful free version with a lot of great features that you can upgrade when ready.Learn more.",
  "author": "Remy Porter",
  "published": "Mon, 21 Apr 2025 06:30:00 GMT",
  "source": "http://syndication.thedailywtf.com/TheDailyWtf",
  "categories": [
    "CodeSOD"
  ],
  "byline": "Remy Porter",
  "length": 1683,
  "excerpt": "A common class of bad code is the code which mixes server side code with client side code. This kind of thing: \u003cscript\u003e \u003c?php if (someVal) { ?\u003e var foo = \u003c? echo someOtherVal ?\u003e; \u003c?php } else { ?\u003e var foo = 5; \u003c?php } ?\u003e \u003c/script\u003e",
  "siteName": "The Daily WTF",
  "favicon": "",
  "text": "by in CodeSOD on 2025-04-21 Edit Remy PorterComputers were a mistake, which is why I'm trying to shoot them into space. Editor-in-Chief for TDWTF. A common class of bad code is the code which mixes server side code with client side code. This kind of thing: \u003cscript\u003e \u003c?php if (someVal) { ?\u003e var foo = \u003c? echo someOtherVal ?\u003e; \u003c?php } else { ?\u003e var foo = 5; \u003c?php } ?\u003e \u003c/script\u003e We've seen it, we hate it, and is there really anything new to say about it? Well, today's anonymous submitter found an \"interesting\" take on the pattern. \u003cscript\u003e if(linkfromwhere_srfid=='vff') { \u003c?php $vff = 1; ?\u003e } \u003c/script\u003e Here, they have a client-side conditional, and based on that conditional, they attempt to set a variable on the server side. This does not work. This cannot work: the PHP code executes on the server, the client code executes on the client, and you need to be a lot more thoughtful about how they interact than this. And yet, the developer responsible has done this all over the code base, pushed the non-working code out to production, and when it doesn't work, just adds bug tickets to the backlog to eventually figure out why- tickets that never get picked up, because there's always something with a higher priority out there. [Advertisement] Keep all your packages and Docker containers in one place, scan for vulnerabilities, and control who can access different feeds. ProGet installs in minutes and has a powerful free version with a lot of great features that you can upgrade when ready.Learn more.",
  "image": "https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv itemscope=\"\" itemtype=\"http://schema.org/Article\" id=\"article-page\"\u003e\n\n        \n        \u003cp\u003e\u003cspan\u003eby \n            in \u003ca itemprop=\"articleSection\" href=\"https://thedailywtf.com/series/code-sod\"\u003eCodeSOD\u003c/a\u003e\n            on \u003cspan itemprop=\"datePublished\" content=\"2025-04-21\"\u003e2025-04-21\u003c/span\u003e\n            \u003ca href=\"https://thedailywtf.com/admin/article/edit/10896\" rel=\"nofollow\"\u003eEdit\u003c/a\u003e\n        \u003c/span\u003e\u003c/p\u003e\n        \u003cdiv itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\"\u003e\n            \u003cp\u003e\u003cimg itemprop=\"image\" src=\"https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg\"/\u003e\n            \u003ca itemprop=\"name\" href=\"https://thedailywtf.com/authors/remy-porter\"\u003eRemy Porter\u003c/a\u003e\u003c/p\u003e\u003cp itemprop=\"description\"\u003eComputers were a mistake, which is why I\u0026#39;m trying to shoot them into space. Editor-in-Chief for TDWTF.\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv itemprop=\"articleBody\"\u003e\n            \u003cp\u003eA common class of bad code is the code which mixes server side code with client side code. This kind of thing:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u0026lt;script\u0026gt;\n    \u003cspan\u003e\u0026lt;?php\u003c/span\u003e \u003cspan\u003eif\u003c/span\u003e (someVal) { \u003cspan\u003e?\u0026gt;\u003c/span\u003e\n        \u003cspan\u003evar\u003c/span\u003e foo = \u003cspan\u003e\u0026lt;?\u003c/span\u003e \u003cspan\u003eecho\u003c/span\u003e someOtherVal \u003cspan\u003e?\u0026gt;\u003c/span\u003e;\n    \u003cspan\u003e\u0026lt;?php\u003c/span\u003e } \u003cspan\u003eelse\u003c/span\u003e { \u003cspan\u003e?\u0026gt;\u003c/span\u003e\n        \u003cspan\u003evar\u003c/span\u003e foo = \u003cspan\u003e5\u003c/span\u003e;\n    \u003cspan\u003e\u0026lt;?php\u003c/span\u003e } \u003cspan\u003e?\u0026gt;\u003c/span\u003e\n\u0026lt;/script\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWe\u0026#39;ve seen it, we hate it, and is there really anything new to say about it?\u003c/p\u003e\n\u003cp\u003eWell, today\u0026#39;s anonymous submitter found an \u0026#34;interesting\u0026#34; take on the pattern.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u0026lt;script\u0026gt;\n    \u003cspan\u003eif\u003c/span\u003e(linkfromwhere_srfid==\u003cspan\u003e\u0026#39;vff\u0026#39;\u003c/span\u003e)\n      {\n    \u003cspan\u003e\u0026lt;?php\u003c/span\u003e\n    \u003cspan\u003e$vff\u003c/span\u003e = \u003cspan\u003e1\u003c/span\u003e;\n    \u003cspan\u003e?\u0026gt;\u003c/span\u003e\n      }\n\u0026lt;/script\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eHere, they have a client-side conditional, and based on that conditional, they attempt to set a variable on the server side. This does not work. This \u003cem\u003ecannot\u003c/em\u003e work: the PHP code executes on the server, the client code executes on the client, and you need to be a lot more thoughtful about how they interact than this.\u003c/p\u003e\n\u003cp\u003eAnd yet, the developer responsible has done this all over the code base, pushed the non-working code out to production, and when it doesn\u0026#39;t work, just adds bug tickets to the backlog to eventually figure out why- tickets that never get picked up, because there\u0026#39;s always something with a higher priority out there.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://thedailywtf.com/images/inedo/proget-icon.png\"/\u003e [Advertisement] \n\tKeep all your packages and Docker containers in one place, scan for vulnerabilities, and control who can access different feeds. ProGet installs in minutes and has a powerful free version with a lot of great features that you can upgrade when ready.\u003ca href=\"https://inedo.com/proget?utm_source=tdwtf\u0026amp;utm_medium=footer\u0026amp;utm_content=PlebsFooter\"\u003eLearn more.\u003c/a\u003e\n\u003c/p\u003e\n\n\n        \u003c/div\u003e\n\n        \n    \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": "2025-04-21T06:30:00Z",
  "modifiedTime": null
}
