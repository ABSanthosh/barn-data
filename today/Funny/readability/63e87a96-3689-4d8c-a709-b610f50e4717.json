{
  "id": "63e87a96-3689-4d8c-a709-b610f50e4717",
  "title": "Representative Line: JSONception",
  "link": "https://thedailywtf.com/articles/jsonception",
  "description": "I am on record as not particularly loving JSON as a serialization format. It's fine, and I'm certainly not going to die on any hills over it, but I think that as we stripped down the complexity of XML we threw away too much. On the flip side, the simplicity means that it's harder to use it wrong. It's absent many footguns. Well, one might think. But then Hootentoot ran into a problem. You see, an internal partner needed to send them a JSON document which contains a JSON document. Now, one might say, \"isn't any JSON object a valid sub-document? Can't you just nest JSON inside of JSON all day? What could go wrong here?\" \"value\":\"[{\\\"value\\\":\\\"1245\\\",\\\"begin_datum\\\":\\\"2025-05-19\\\",\\\"eind_datum\\\":null},{\\\"value\\\":\\\"1204\\\",\\\"begin_datum\\\":\\\"2025-05-19\\\",\\\"eind_datum\\\":\\\"2025-05-19\\\"}]\", This. This could go wrong. They embedded JSON inside of JSON… as a string. Hootentoot references the hottest memes of a decade and a half ago to describe this Xzibit: Yo dawg, i heard you like JSON, so i've put some JSON in your JSON [Advertisement] BuildMaster allows you to create a self-service release management platform that allows different teams to manage their applications. Explore how!",
  "author": "Remy Porter",
  "published": "Wed, 23 Jul 2025 06:30:00 GMT",
  "source": "http://syndication.thedailywtf.com/TheDailyWtf",
  "categories": [
    "Representative Line"
  ],
  "byline": "Remy Porter",
  "length": 1464,
  "excerpt": "I am on record as not particularly loving JSON as a serialization format. It's fine, and I'm certainly not going to die on any hills over it, but I think that as we stripped down the complexity of XML we threw away too much. On the flip side, the simplicity means that it's harder to use it wrong. It's absent many footguns.",
  "siteName": "The Daily WTF",
  "favicon": "",
  "text": "by in Representative Line on 2025-07-23 Edit Remy PorterComputers were a mistake, which is why I'm trying to shoot them into space. Editor-in-Chief for TDWTF. I am on record as not particularly loving JSON as a serialization format. It's fine, and I'm certainly not going to die on any hills over it, but I think that as we stripped down the complexity of XML we threw away too much. On the flip side, the simplicity means that it's harder to use it wrong. It's absent many footguns. Well, one might think. But then Hootentoot ran into a problem. You see, an internal partner needed to send them a JSON document which contains a JSON document. Now, one might say, \"isn't any JSON object a valid sub-document? Can't you just nest JSON inside of JSON all day? What could go wrong here?\" \"value\":\"[{\\\"value\\\":\\\"1245\\\",\\\"begin_datum\\\":\\\"2025-05-19\\\",\\\"eind_datum\\\":null},{\\\"value\\\":\\\"1204\\\",\\\"begin_datum\\\":\\\"2025-05-19\\\",\\\"eind_datum\\\":\\\"2025-05-19\\\"}]\", This. This could go wrong. They embedded JSON inside of JSON… as a string. Hootentoot references the hottest memes of a decade and a half ago to describe this Xzibit: Yo dawg, i heard you like JSON, so i've put some JSON in your JSON [Advertisement] BuildMaster allows you to create a self-service release management platform that allows different teams to manage their applications. Explore how!",
  "image": "https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv itemscope=\"\" itemtype=\"http://schema.org/Article\" id=\"article-page\"\u003e\n\n        \n        \u003cp\u003e\u003cspan\u003eby \n            in \u003ca itemprop=\"articleSection\" href=\"https://thedailywtf.com/series/representative-line\"\u003eRepresentative Line\u003c/a\u003e\n            on \u003cspan itemprop=\"datePublished\" content=\"2025-07-23\"\u003e2025-07-23\u003c/span\u003e\n            \u003ca href=\"https://thedailywtf.com/admin/article/edit/10967\" rel=\"nofollow\"\u003eEdit\u003c/a\u003e\n        \u003c/span\u003e\u003c/p\u003e\n        \u003cdiv itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\"\u003e\n            \u003cp\u003e\u003cimg itemprop=\"image\" src=\"https://s3.amazonaws.com/remy.jetpackshark.com/remy-thumb.jpg\"/\u003e\n            \u003ca itemprop=\"name\" href=\"https://thedailywtf.com/authors/remy-porter\"\u003eRemy Porter\u003c/a\u003e\u003c/p\u003e\u003cp itemprop=\"description\"\u003eComputers were a mistake, which is why I\u0026#39;m trying to shoot them into space. Editor-in-Chief for TDWTF.\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv itemprop=\"articleBody\"\u003e\n            \u003cp\u003eI am on record as not particularly loving JSON as a serialization format. It\u0026#39;s \u003cem\u003efine\u003c/em\u003e, and I\u0026#39;m certainly not going to die on any hills over it, but I think that as we stripped down the complexity of XML we threw away too much.\u003c/p\u003e\n\u003cp\u003eOn the flip side, the simplicity means that it\u0026#39;s harder to use it \u003cem\u003ewrong\u003c/em\u003e. It\u0026#39;s absent many footguns.\u003c/p\u003e\n\u003cp\u003eWell, one might think. But then \u003cstrong\u003eHootentoot\u003c/strong\u003e ran into a problem. You see, an internal partner needed to send them a JSON document which contains a JSON document. Now, one might say, \u0026#34;isn\u0026#39;t any JSON object a valid sub-document? Can\u0026#39;t you just nest JSON inside of JSON all day? What could go wrong here?\u0026#34;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e\u0026#34;value\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e\u0026#34;[{\\\u0026#34;value\\\u0026#34;:\\\u0026#34;1245\\\u0026#34;,\\\u0026#34;begin_datum\\\u0026#34;:\\\u0026#34;2025-05-19\\\u0026#34;,\\\u0026#34;eind_datum\\\u0026#34;:null},{\\\u0026#34;value\\\u0026#34;:\\\u0026#34;1204\\\u0026#34;,\\\u0026#34;begin_datum\\\u0026#34;:\\\u0026#34;2025-05-19\\\u0026#34;,\\\u0026#34;eind_datum\\\u0026#34;:\\\u0026#34;2025-05-19\\\u0026#34;}]\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis. This could go wrong. They embedded JSON inside of JSON… as a string.\u003c/p\u003e\n\u003cp\u003eHootentoot references the hottest memes of a decade and a half ago to describe this Xzibit:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eYo dawg, i heard you like JSON, so i\u0026#39;ve put some JSON in your JSON\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cimg src=\"https://thedailywtf.com/images/inedo/buildmaster-icon.png\"/\u003e [Advertisement] \n\t\u003ca href=\"https://inedo.com/BuildMaster?utm_source=tdwtf\u0026amp;utm_medium=footerad\u0026amp;utm_term=2018\u0026amp;utm_content=Self_Service\u0026amp;utm_campaign=Buildmaster_Footer\"\u003eBuildMaster\u003c/a\u003e allows you to create a self-service release management platform that allows different teams to manage their applications. \u003ca href=\"https://inedo.com/BuildMaster/download?utm_source=tdwtf\u0026amp;utm_medium=footerad\u0026amp;utm_term=2018\u0026amp;utm_content=Self_Service\u0026amp;utm_campaign=Buildmaster_Footer\"\u003eExplore how!\u003c/a\u003e \n\u003c/p\u003e\n\n\n        \u003c/div\u003e\n\n        \n    \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": "2025-07-23T06:30:00Z",
  "modifiedTime": null
}
