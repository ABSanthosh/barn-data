{
  "id": "f0f53b3b-b40d-4eaf-82d5-62975b014aba",
  "title": "Zero To Custom MacroPad In 37 Easy Steps",
  "link": "https://hackaday.com/2024/10/21/zero-to-custom-macropad-in-37-easy-steps/",
  "description": "[Jeremy Weatherford] clearly has a knack for explaining projects well enough for easy reproduction but goes way further than most and has created a four-part YouTube series detailing every step …read more",
  "author": "Dave Rowntree",
  "published": "Mon, 21 Oct 2024 23:00:07 +0000",
  "source": "https://hackaday.com/blog/feed/",
  "categories": [
    "Peripherals Hacks",
    "cad",
    "firmware",
    "keyboard",
    "keyboard layouts",
    "KiCAD",
    "macropad",
    "OnShape",
    "QMK",
    "wsl"
  ],
  "byline": "",
  "length": 3468,
  "excerpt": "[Jeremy Weatherford] clearly has a knack for explaining projects well enough for easy reproduction but goes way further than most and has created a four-part YouTube series detailing every step fro…",
  "siteName": "Hackaday",
  "favicon": "https://hackaday.com/wp-content/themes/hackaday-2/img/hackaday-logo_1024x1024.png?v=3",
  "text": "Skip to content [Jeremy Weatherford] clearly has a knack for explaining projects well enough for easy reproduction but goes way further than most and has created a four-part YouTube series detailing every step from project inception to the final assembly, covering all aspects of 3D modelling and PCB design for a custom MacroPad design. Many tools are introduced along the way, all of which help reduce complexity and, by extension, the scope for errors. As every beginner hacker knows, early successes breed confidence and make for better and more ambitious projects. Part 1 covers the project motivation and scope and introduces a keyboard layout editor tool. This tool allows one to take a layout idea and generate a JSON file, which is then used to drive keyboard tools. XYZ to produce a usable KiCAD project. The tool only generates a PCB project and an associated netlist file. No schematic is created; you don’t need one for a simple layout. A very basic keyboard layout Part 2 is a walkthrough of the design process in KiCAD, culminating in ordering the PCB from JLCPCB and assembling the surface-mount parts. This particular design uses a controller based on the Sea-Picro RP2040 module, but there are many options if you have other preferences. [Jeremy] shows what’s possible with the selected suppliers, but you need not follow this step precisely if you have other ideas or want to use someone local. Part 3 covers exporting the mechanical aspects of the PCB out of KiCAD and into a 3D CAD program, specifically OnShape. [Jeremy] covers some crucial details, such as how to read the mechanical drawing of the keys to work out where to place the top plate. It’s very easy to plough straight in at this stage and make a design which cannot be assembled! The plan is to use a simple laser-cut box with a bottom plate with mounting holes lining up with those on the PCB. A Top plate is created by taking the outline of the PCB and adding a little margin. An array of rectangular cutouts are designed for the keys to protrude, lining up perfectly with where the keys would be when mounted on the PCB below.  The sides of the case are formed from laser-cut sections that lock into each other and the laser-cut base—using the laser joint feature-script addon tool from the OnShape community channel. A second feature script addon is used to auto-layout the laser-cut components onto a single sheet. A CAM application called Kiri Moto is used to export for laser cutting and is available on the OnShape store. Part 4 concerns the firmware. The QMK WSL build is compiled on Windows using WSL, minimizing the barrier to entry for intrepid hackers who are likely to start out with Windows-based hardware. The QMK layout is configured as an ortho_4x4, but [Jeremy] calmly and clearly explains how the other layouts are used and how they align with the earlier design choices. Finally, the VIAL keyboard layout editor is shown to be used for testing the finished macropad, and how it is used for programming those delicious macros we want to emit into the world. Macropads are very individual things, and you really need to be pushing the limits of productivity to need one, let alone build a custom device. Here’s one for those who get stuck in MS Teams calls a lot. If you’re into video editing, that’s a valid use case. Video editing macropads have existed for decades, but have they been made out of wood?",
  "image": "https://hackaday.com/wp-content/uploads/2024/10/Screenshot-2024-10-21-122535-featured.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"page\"\u003e\n    \n\n    \u003cp\u003e\u003ca href=\"#content\"\u003eSkip to content\u003c/a\u003e\u003c/p\u003e\n\n    \u003cdiv id=\"content\"\u003e\n        \u003cmain id=\"main\" role=\"main\"\u003e\n\n        \n            \n\u003carticle itemscope=\"\" itemtype=\"http://schema.org/Article\" id=\"post-728127\"\u003e\n    \n\n    \u003cdiv itemprop=\"articleBody\"\u003e\n        \u003cp\u003e[Jeremy Weatherford] clearly has a knack for explaining projects well enough for easy reproduction but goes way further than most and has created a four-part YouTube series detailing every step from project inception to the final assembly, covering \u003ca href=\"https://jweather.github.io/macro.html\" target=\"_blank\"\u003eall aspects of 3D modelling and PCB design for a custom MacroPad design\u003c/a\u003e. Many tools are introduced along the way, \u003cspan\u003e\u003cspan\u003eall of which help reduce complexity and, by extension, the scope for errors. As every beginner hacker knows, early successes breed confidence and make for better and more ambitious projects.\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan\u003e\u003cspan\u003e\u003ca href=\"https://www.youtube.com/watch?v=PetCHwrCgGk\u0026amp;list=PLvpUCOCK8jv3PU4pR0Gunug12xrJHWhxj\u0026amp;index=1\" target=\"_blank\" rel=\"noopener\" target=\"_blank\"\u003ePart 1\u003c/a\u003e covers the project motivation and scope and introduces a \u003ca href=\"https://keyboard-layout-editor.com/\" target=\"_blank\" rel=\"noopener\" target=\"_blank\"\u003ekeyboard layout editor\u003c/a\u003e tool. This tool allows one to take a layout idea and generate a JSON file, which is then used to drive \u003ca href=\"https://keyboard-tools.xyz/\" target=\"_blank\" rel=\"noopener\" target=\"_blank\"\u003ekeyboard tools\u003c/a\u003e\u003c/span\u003e\u003ca href=\"https://keyboard-tools.xyz/\" target=\"_blank\" rel=\"noopener\" target=\"_blank\"\u003e. XYZ to\u003c/a\u003e produce a usable KiCAD project. \u003c/span\u003eThe tool only generates a PCB project and an associated netlist file. No schematic is created; you don’t need one for a simple layout.\u003c/p\u003e\n\u003cfigure id=\"attachment_729355\" aria-describedby=\"caption-attachment-729355\"\u003e\u003cimg decoding=\"async\" data-attachment-id=\"729355\" data-permalink=\"https://hackaday.com/2024/10/21/zero-to-custom-macropad-in-37-easy-steps/screenshot-2024-10-21-122421/\" data-orig-file=\"https://hackaday.com/wp-content/uploads/2024/10/Screenshot-2024-10-21-122421.png\" data-orig-size=\"702,705\" data-comments-opened=\"1\" data-image-meta=\"{\u0026#34;aperture\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;credit\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;camera\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;caption\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;created_timestamp\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;copyright\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;focal_length\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;iso\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;shutter_speed\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;title\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;orientation\u0026#34;:\u0026#34;0\u0026#34;}\" data-image-title=\"Screenshot 2024-10-21 122421\" data-image-description=\"\u0026lt;p\u0026gt;https://www.youtube.com/watch?v=_bRvMNMAWvo\u0026amp;amp;list=PLvpUCOCK8jv3PU4pR0Gunug12xrJHWhxj\u0026amp;amp;index=2\u0026lt;/p\u0026gt;\n\" data-image-caption=\"\" data-medium-file=\"https://hackaday.com/wp-content/uploads/2024/10/Screenshot-2024-10-21-122421.png?w=398\" data-large-file=\"https://hackaday.com/wp-content/uploads/2024/10/Screenshot-2024-10-21-122421.png?w=622\" tabindex=\"0\" role=\"button\" src=\"https://hackaday.com/wp-content/uploads/2024/10/Screenshot-2024-10-21-122421.png?w=398\" alt=\"\" width=\"398\" height=\"400\" srcset=\"https://hackaday.com/wp-content/uploads/2024/10/Screenshot-2024-10-21-122421.png 702w, https://hackaday.com/wp-content/uploads/2024/10/Screenshot-2024-10-21-122421.png?resize=250,250 250w, https://hackaday.com/wp-content/uploads/2024/10/Screenshot-2024-10-21-122421.png?resize=398,400 398w, https://hackaday.com/wp-content/uploads/2024/10/Screenshot-2024-10-21-122421.png?resize=622,625 622w\" sizes=\"(max-width: 398px) 100vw, 398px\"/\u003e\u003cfigcaption id=\"caption-attachment-729355\"\u003eA very basic keyboard layout\u003c/figcaption\u003e\u003c/figure\u003e\n\u003cp\u003e\u003ca href=\"https://www.youtube.com/watch?v=_bRvMNMAWvo\u0026amp;list=PLvpUCOCK8jv3PU4pR0Gunug12xrJHWhxj\u0026amp;index=2\" target=\"_blank\"\u003ePart 2\u003c/a\u003e is a walkthrough of the design process in KiCAD, culminating in ordering the PCB from JLCPCB and assembling the surface-mount parts. This particular design uses a controller based on the Sea-Picro RP2040 module, but there are many options if you have other preferences. [Jeremy] shows what’s possible with the selected suppliers, but you need not follow this step precisely if you have other ideas or want to use someone local.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.youtube.com/watch?v=egOOHS-34-c\u0026amp;list=PLvpUCOCK8jv3PU4pR0Gunug12xrJHWhxj\u0026amp;index=4\" target=\"_blank\"\u003ePart 3\u003c/a\u003e covers exporting the mechanical aspects of the PCB out of KiCAD and into a 3D CAD program, specifically OnShape. [Jeremy] covers some crucial details, such as how to read the mechanical drawing of the keys to work out where to place the top plate. It’s very easy to plough straight in at this stage and make a design which cannot be assembled! The plan is to use a simple laser-cut box with a bottom plate with mounting holes lining up with those on the PCB. A Top plate is created by taking the outline of the PCB and adding a little margin. An array of rectangular cutouts are designed for the keys to protrude, lining up perfectly with where the keys would be when mounted on the PCB below.  The sides of the case are formed from laser-cut sections that lock into each other and the laser-cut base—using the laser joint feature-script addon tool from the OnShape community channel. A second feature script addon is used to auto-layout the laser-cut components onto a single sheet. A CAM application called Kiri Moto is used to export for laser cutting and is available on the OnShape store.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.youtube.com/watch?v=fo02kYzCapY\u0026amp;list=PLvpUCOCK8jv3PU4pR0Gunug12xrJHWhxj\u0026amp;index=5\" target=\"_blank\"\u003ePart 4\u003c/a\u003e concerns the firmware. The QMK WSL build is compiled on Windows using WSL, minimizing the barrier to entry for intrepid hackers who are likely to start out with Windows-based hardware. The QMK layout is configured as an ortho_4x4, but [Jeremy] calmly and clearly explains how the other layouts are used and how they align with the earlier design choices. Finally, the VIAL keyboard layout editor is shown to be used for testing the finished macropad, and how it is used for programming those delicious macros we want to emit into the world.\u003c/p\u003e\n\u003cp\u003eMacropads are very individual things, and you really need to be pushing the limits of productivity to need one, let alone build a custom device. Here’s one for those who get stuck in \u003ca href=\"https://hackaday.com/2021/04/20/a-useful-macro-pad-for-microsoft-teams/\"\u003eMS Teams calls a lot\u003c/a\u003e. If you’re into video editing, that’s a valid use case\u003cspan\u003e. Video editing macropads have existed for decades, but \u003ca href=\"https://hackaday.com/2023/01/25/diy-macro-keyboard-wood-be-nice/\" target=\"_blank\" rel=\"noopener\"\u003ehave they been made out of wood?\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003ciframe title=\"Zero to custom MacroPad in 37 easy steps - Part 1: Layout\" width=\"800\" height=\"450\" src=\"https://www.youtube.com/embed/PetCHwrCgGk?list=PLvpUCOCK8jv3PU4pR0Gunug12xrJHWhxj\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\u003cp\u003e\u003ciframe loading=\"lazy\" title=\"Zero to custom MacroPad in 37 easy steps - Part 2: PCB\" width=\"800\" height=\"450\" src=\"https://www.youtube.com/embed/_bRvMNMAWvo?list=PLvpUCOCK8jv3PU4pR0Gunug12xrJHWhxj\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\u003cp\u003e\u003ciframe loading=\"lazy\" title=\"Zero to custom MacroPad in 37 easy steps - Part 3: CAD\" width=\"800\" height=\"450\" src=\"https://www.youtube.com/embed/egOOHS-34-c?list=PLvpUCOCK8jv3PU4pR0Gunug12xrJHWhxj\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\u003cp\u003e\u003ciframe loading=\"lazy\" title=\"Zero to custom MacroPad in 37 easy steps - Part 4: Firmware\" width=\"800\" height=\"450\" src=\"https://www.youtube.com/embed/fo02kYzCapY?list=PLvpUCOCK8jv3PU4pR0Gunug12xrJHWhxj\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\n\t            \u003c/div\u003e\n    \u003cul\u003e\n    \t\t\t\t\t\u003cli\u003e\n    \t\t\t\t\u003ca href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fhackaday.com%2F2024%2F10%2F21%2Fzero-to-custom-macropad-in-37-easy-steps%2F\" target=\"_blank\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_face.png\"/\u003e \u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\t\t\u003cli\u003e\n                        \u003ca href=\"https://twitter.com/intent/tweet?text=Zero%20To%20Custom%20MacroPad%20In%2037%20Easy%20Steps%20via%20@hackaday\u0026amp;url=https://hackaday.com/2024/10/21/zero-to-custom-macropad-in-37-easy-steps/\" target=\"_blank\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_twitter.png\"/\u003e\u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\t\t\u003cli\u003e\n    \t\t\t\t\u003ca href=\"https://www.linkedin.com/shareArticle?url=https%3A%2F%2Fhackaday.com%2F2024%2F10%2F21%2Fzero-to-custom-macropad-in-37-easy-steps%2F\" target=\"_blank\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_in.png\"/\u003e\u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\t\t\u003cli\u003e\n                \u003ca href=\"mailto:?subject=Zero+To+Custom+MacroPad+In+37+Easy+Steps | Hackaday\u0026amp;body=https%3A%2F%2Fhackaday.com%2F2024%2F10%2F21%2Fzero-to-custom-macropad-in-37-easy-steps%2F\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_mail1.png\"/\u003e\u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\u003c/ul\u003e\n    \n\u003c/article\u003e\n\n            \t\n\t\n            \n\n            \n\n\n        \n        \n\n        \n        \n\n        \n        \u003c/main\u003e\n    \u003c/div\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": "2024-10-21T23:00:07Z",
  "modifiedTime": "2024-10-21T17:12:17Z"
}
