{
  "id": "d801b466-4360-41aa-922b-a336023ddfec",
  "title": "15 Hidden Safari 18.4 Features That Quietly Improve the Web on Your iPhone",
  "link": "https://apple.gadgethacks.com/how-to/safari-18-4-hidden-web-features/",
  "description": "Safari is always evolving, but most of its improvements happen behind the scenes, making the web feel faster, more secure, and more polished without you even noticing. There aren't any flashy new browser UI changes in iOS 18.4 and iPadOS 18.4, but it does upgrade what Safari is capable of in small but meaningful ways. With Safari 18.4, you get a handful of quiet but meaningful upgrades that make modern websites work more smoothly, securely, and responsively. Whether it's checking a site's identity, enjoying better color pickers, or having your scroll-to-text links work more reliably, these changes are the kind that web developers get excited about — and everyday users benefit from, often without even noticing. Here's what's new — and why it matters. You can now check a website's security details like a proEver tap a suspicious link and wonder, \"Is this site legit?\" Safari now helps you dig deeper. In iOS 18.4 and iPadOS 18.4, you can tap the Page Menu icon in the address bar, hit the...more",
  "author": "Justin Meyers",
  "published": "Wed, 02 Apr 2025 16:22:08 GMT",
  "source": "https://www.wonderhowto.com/rss.xml",
  "categories": null,
  "byline": "By Justin Meyers",
  "length": 20069,
  "excerpt": "Safari is always evolving, but most of its improvements happen behind the scenes, making the web feel faster, more secure, and more polished without you even noticing. There aren't any flashy new browser UI changes in iOS 18.4 and iPadOS 18.4, but it does upgrade what Safari is capable of in small but meaningful ways. With Safari 18.4, you get a handful of quiet but meaningful upgrades that make modern websites work more smoothly, securely, and responsively. Whether it's checking a site's identi...",
  "siteName": "Gadget Hacks",
  "favicon": "",
  "text": "Safari is always evolving, but most of its improvements happen behind the scenes, making the web feel faster, more secure, and more polished without you even noticing. There aren't any flashy new browser UI changes in iOS 18.4 and iPadOS 18.4, but it does upgrade what Safari is capable of in small but meaningful ways.With Safari 18.4, you get a handful of quiet but meaningful upgrades that make modern websites work more smoothly, securely, and responsively. Whether it's checking a site's identity, enjoying better color pickers, or having your scroll-to-text links work more reliably, these changes are the kind that web developers get excited about — and everyday users benefit from, often without even noticing.Here's what's new — and why it matters.You can now check a website's security details like a proEver tap a suspicious link and wonder, \"Is this site legit?\" Safari now helps you dig deeper.In iOS 18.4 and iPadOS 18.4, you can tap the Page Menu icon in the address bar, hit the More (•••), and choose Connection Security Details to view a mobile-friendly interface of who issued the site's certificate and whether it's using proper encryption. This feature was previously only available on macOS but is now also available on iPhone and iPad. [Full guide.]💡 Why it matters: More transparency when checking out, logging in, or visiting lesser-known sites.🔧 Technical details: The certificate viewer exposes core metadata from a site's TLS certificate chain, including the issuer, subject, validity period, public key details, cryptographic fingerprints, policy extensions, subject alternative names, and OCSP-signed timestamps. These fields help validate that the site is using proper encryption and that the certificate was issued to the correct domain. The structured layout mirrors the macOS version and brings Safari's mobile certificate inspection in line with the transparency offered by browsers like Chrome and Firefox. Safari now shows (and lets you disable) recent searchesSafari just got a little more helpful — or a little too revealing, depending on how you browse. In iOS 18.4 and iPadOS 18.4, Safari automatically shows your recent search terms when you open a new tab or tap into the address bar, even on existing pages. It's great for picking up where you left off, but it could also show your search history to anyone who grabs your iPhone. [Full guide.]💡 Why it matters: This makes Safari more convenient but also more exposed. If you'd rather keep your search history private, you can clear or disable this new behavior in Settings.🔧 Technical details: Safari 18.4 adds system-level support for showing recent search suggestions inline when the address bar is focused and the field is empty. This behavior is tied to a new setting called Show Recent Searches under Settings » Apps » Safari, which is enabled by default. Recent search terms are pulled from standard, non-private browsing sessions and are shown even if you're not on the Start Page. You can clear the list manually from the suggestion view or disable it entirely in Settings. The feature is available on iPhones and iPads only. Safari just got smarter about blocking trackersSafari 18.4 introduces support for partitioned cookies, also called CHIPS (Cookies Having Independent Partitioned State). This privacy feature stops companies from tracking you across different sites while still allowing things like embedded logins and media players to work properly.💡 Why it matters: Websites can still function (like embedded YouTube or comment boxes), but advertisers can't use those to follow you around.🔧 Technical details: CHIPS allows third-party content, such as an iframe, to set cookies that are scoped to the top-level site they appear on. This means if a third-party service is embedded across different websites, its cookies are siloed per site — stopping cross-site tracking while enabling local functionality like staying logged in or remembering preferences. Safari uses the Partitioned cookie attribute (set alongside SameSite=None and Secure) to opt into this behavior. These partitioned cookies are accessible only in the context in which they were set and can't be shared across unrelated domains. For example, if chat.example.com is embedded on both ios.gadgethacks.com and apple.gadgethacks.com, it can access the same partitioned cookie — because both are considered part of the same \"site\" under WebKit's site-level partitioning. But if that same chat.example.com iframe is embedded on null-byte.com, it receives a separate, isolated cookie for that context. This aligns Safari with Chrome and Firefox and helps web developers move away from legacy cross-site cookie behavior — without breaking core functionality for users. Partitioned cookies cannot be used by known tracking domains and are blocked accordingly. Color pickers now support transparency (and look way better)Safari's color inputs on webpages just got a significant upgrade. Sites can now show alpha sliders for transparency and offer more accurate color options like Display P3. If you've ever used a website to tweak colors for a design or customize a theme, expect more advanced controls that feel closer to native iOS apps.You can see the difference clearly in the example image below. The color picker in Safari 18.4 (right) shows a rich red color with a visible transparency slider and a checkered background preview — just like you'd expect in a design app. In Safari 18.3.2 (left), the same color input appears much more limited: no transparency slider, no wide color options, and a simpler, less accurate color preview. That's because the test asks for a vivid red with some transparency in the Display P3 color space — and only Safari 18.4 understands and supports it.💡 Why it matters: More powerful tools in creative apps and website builders. Transparency sliders = a huge win for designers.🔧 Technical details: Safari 18.4 enhances \u003cinput type=\"color\"\u003e by supporting alpha and colorspace attributes. This allows developers to let users choose colors with transparency (via an opacity slider) and to select colors from extended gamuts like display-p3, not just sRGB. The input also now accepts modern CSS color formats — such as color(display-p3 ...) or rgba() — and will convert them correctly based on the specified color space. Previously, iOS color pickers were limited to opaque RGB colors only and lacked support for alpha blending or wide color profiles. Safari supports more web audio formatsSafari 18.4 adds full support for the Ogg container, which means it can now play audio files encoded in Ogg Opus or Ogg Vorbis — two popular open-source formats used by apps like Telegram, Wikipedia, and open-source media sites.💡 Why it matters: You'll see fewer broken audio players and \"file not supported\" errors on privacy-focused or open-source sites.🔧 Technical details: Safari 18.4 supports the Ogg container format (.ogg) with Vorbis and Opus audio codecs in \u003caudio\u003e elements and direct file links — something previously missing on iOS. It also supports .opus files, which typically use the same Ogg container format but with the Opus codec. While Safari already supported Vorbis in WebRTC contexts, this update allows native playback of standalone .ogg and .opus files, including embedded players and streamed audio. Formats like Speex and Theora remain unsupported. Vertical and sideways text renders more naturallySafari now supports CSS sideways writing modes, which may sound niche — but if you browse websites in Chinese, Japanese, or Korean or visit magazines with vertical text layouts, things will now look much more polished. It also opens up new creative options for developers, like sideways navigation text or vertical buttons.💡 Why it matters: Websites written in East Asian languages now look more natural and readable, and Western sites may also become more creative.🔧 Technical details: Safari 18.4 supports writing-mode: sideways-rl and sideways-lr, part of the CSS Writing Modes Level 4 spec. These modes are similar to vertical-rl and vertical-lr, but instead of reflowing text for vertical scripts, they rotate horizontal text 90 degrees for layout effects like vertical headings or labels. Unlike vertical-*, which preserves native vertical glyph rendering (especially for CJK), sideways-* keeps characters upright and rotates the entire line, ensuring punctuation and baseline alignment stay typographically correct. This allows designers to create vertical layouts using horizontal scripts without breaking formatting or readability. Previously, Safari only supported horizontal-tb, vertical-rl, and vertical-lr. This update aligns with other modern browsers and gives web designers more control over-stylized, vertical UI elements. Scroll to Text links are more reliableYou've probably seen this in action — someone sends you a link that scrolls you directly to a highlighted line of text. That's called Scroll to Text. Viewing these links has been supported since Safari 16.1 and Safari 18.2 finally let us create Scroll to Text links to share with others. Now, Safari 18.4 lets websites check whether your browser supports it before trying to use it. [Full guide.]💡 Why it matters: Fewer broken jumps when clicking anchored links. You'll land on the right line more often.🔧 Technical details: Safari 18.4 adds support for the document.fragmentDirective API, which enables feature detection for Scroll-To-Text Fragments (#:~:text= URLs). The browser now exposes a fragmentDirective property on the document object, allowing developers to check if this functionality is supported before generating or linking to these deep-link URLs. This aligns Safari with other browsers and allows for more reliable implementation of link-to-highlight features across the web. Web apps can now record in WebM (smaller, smarter files)Safari 18.4 now lets websites record audio and video in WebM format, which is more efficient than older formats. That means web-based tools like screen recorders, video editors, and voice memos can create smaller files that upload faster and take up less space.💡 Why it matters: Web-based recording tools will now create smaller, more shareable files that still look and sound great.🔧 Technical details: Safari 18.4 adds full support for recording WebM files via the MediaRecorder API — something previously unavailable on iOS. When developers specify mimeType: 'video/webm', Safari will encode video using VP8 or VP9 and audio using Opus, depending on what the device supports. This aligns Safari with other browsers and allows web apps to produce smaller, widely compatible media files — ideal for screen recordings, video messages, or browser-based editing tools. In addition to WebM, Safari 18.4 expands MediaRecorder with support for fragmented MP4 (fMP4), which works well with MediaSource streaming APIs. New audio options include lossless formats like ALAC and PCM, while supported video tracks now include H.264, HEVC, and AV1 (on devices with AV1 hardware decoding). Together, these updates give developers far more flexibility in capturing, encoding, and streaming media through the web. More accurate layout for emoji and multilingual textSafari 18.4 updates how text is rendered when mixing multiple writing directions, such as left-to-right (English) and right-to-left (Arabic or Hebrew), or when using emoji in-line with text. You'll notice fewer bugs or strange text alignments when viewing multilingual sites or rich comment threads with emojis and symbols.💡 Why it matters: More readable messages and cleaner layout when reading content with mixed languages and emoji — especially in international articles or forums.🔧 Technical details: Safari 18.4 implements User Agent (UA) rendering rules for the unicode-bidi property, as defined in the CSS Text specification. This improves how the browser lays out bidirectional text — such as left-to-right and right-to-left scripts appearing in the same sentence — and better handles mixed content like emoji, symbols, and numbers. The update results in more consistent alignment, cursor movement, and glyph ordering across input fields and inline content. Note: this implementation currently excludes ruby annotations. Expandable sections on websites look more polishedSafari 18.4 makes the humble \u003cdetails\u003e element much more flexible — both in how it looks and how it behaves. You've probably seen it before: it's often used for collapsible sections like FAQs or \"Show More\" toggles. Until now, customizing these elements in Safari has been frustrating. However, with 18.4, developers finally have better tools to style them and make them feel native to their site or app.You can see the difference in the example below. In Safari 18.3.2, the default disclosure triangle is black ▼, and the expanded content looks like regular text. In Safari 18.4, that triangle has been replaced with a customizable marker (in this case, an orange + symbol), and the opened section has its own background style thanks to a new styling hook. It finally feels polished and professional — not like a browser default.💡 Why it matters: Websites can now create stylish expand/collapse sections without relying on JavaScript — and still stay accessible and semantic.🔧 Technical details: Safari 18.4 adds support for the ::details-content pseudo-element, allowing developers to independently style the open section of a \u003cdetails\u003e element — including background color, spacing, or animations. It also reimplements the \u003csummary\u003e marker as a true list item, enabling full styling control with list-style and ::marker. For example, developers can now change the triangle to any symbol (summary { list-style: \"+ \"; }) or apply color, size, or animation to the marker. Combined with modern CSS animation support, it's now possible to animate the height or opacity of the details panel without extra containers or JavaScript workarounds. These changes align Safari with other modern browsers and make native collapsible UI more attractive and flexible — with full accessibility built in. Home Screen web apps can now keep your screen awakeIf you've ever followed a recipe or presentation on a web app and had your screen dim or lock mid-step, Safari 18.4 fixes that. Home Screen web apps can now keep your display awake as long as needed — just like native apps do. 💡 Why it matters: Helpful for reading long instructions, recipes, or presentations without constantly tapping the screen. 🔧 Technical details: Safari 18.4 enables the Screen Wake Lock API in Home Screen-installed web apps on iOS and iPadOS. Developers can call navigator.wakeLock.request(\"screen\") to keep the device's screen from dimming or locking. Previously, this API only worked in Safari itself, not in standalone PWAs. Now, web apps behave more like their native counterparts during passive use. Web notifications are more efficient with Declarative Web PushSafari 18.4 enables Declarative Web Push for web apps added to the Home Screen, allowing them to send push notifications without needing a constantly running service worker in the background. This results in fewer battery drains, faster and more reliable delivery, and a more consistent experience — especially for messaging, reminders, or news alert web apps.💡 Why it matters: You'll get faster, more reliable notifications from web apps — and your battery will thank you.🔧 Technical details: Safari 18.4 introduces Declarative Web Push on iOS and iPadOS for web apps added to the Home Screen. Traditionally, Web Push requires a service worker — a background script that stays active (or gets reawakened) to receive and handle push messages. However, this model can drain the battery and add complexity for developers. Declarative Web Push takes a different approach: instead of requiring JavaScript to run in the background, web apps define their notification behavior up front when the app is installed or registered. This means push notifications can be delivered instantly — even when the app isn’t running — without waking up a Service Worker or consuming background resources. This model is better for iOS, where background execution is tightly limited. It improves reliability, reduces energy use, and makes Web Push more accessible to developers — especially for messaging, reminders, or passive alerts in Home Screen-installed web apps. Number inputs no longer change with your scrollScrolling over a number input field with a trackpad or mouse on iPadOS and macOS no longer changes its value — fixing an old annoyance iPads and Macs. The old behavior often led to accidental changes when scrolling through forms. This update brings number inputs more in line with native system controls. 💡 Why it matters: Less chance of unintentionally changing values when using a mouse or trackpad on Mac or iPad.🔧 Technical details: WebKit has removed default wheel event handling on \u003cinput type=\"number\"\u003e elements in Safari on macOS and iPadOS. Previously, users could increment or decrement number values just by scrolling — even unintentionally. This behavior was not consistent with native platform inputs and often required custom JavaScript to override. Developers who want to keep the behavior can still implement it manually. Text spacing gets a subtle upgrade for multilingual websitesSafari 18.4 supports a new CSS property called text-autospace, which fine-tunes the spacing between characters in multilingual text — especially when Chinese, Japanese, or Korean (CJK) scripts are mixed with Latin letters or numerals. The difference is subtle but helps text feel less cramped and more readable in modern CJK layouts. 💡 Why it matters: Improves legibility on multilingual sites — though most users won't notice unless designers adopt the new behavior.🔧 Technical details: The text-autospace property supports values like ideograph-alpha, ideograph-numeric, and normal, which add breathing room between runs of CJK characters and Western letters or numbers. Safari 18.4 defaults to text-autospace: no-autospace to match legacy behavior, but web developers can explicitly set text-autospace: normal to opt in. This aligns with the evolving CSS text spec and may become the default in future versions once it's better tested and more widely adopted. Better font compatibility in Lockdown ModeSafari 18.4 makes web browsing more usable for those with Apple's ultra-secure Lockdown Mode enabled. In past versions, many websites could appear broken or unreadable because Safari blocked most web fonts by default. With a new safe font parser, Safari can now render more fonts securely, helping pages keep their intended design without compromising protection.💡 Why it matters: A smoother, more readable web experience for users in Lockdown Mode — with the same strong protection against targeted attacks.🔧 Technical details: Safari 18.4 replaces Lockdown Mode's restrictive font allowlist with a safe font parsing system that inspects and sanitizes downloaded font files before rendering them. This removes the need to hardcode which fonts are \"safe,\" allowing broader typographic support while still protecting against malicious fonts that might exploit memory vulnerabilities or parsing bugs. The secure parser is built to reject malformed or potentially unsafe font data at load time, preventing the execution of any embedded code. As a result, Lockdown Mode can now render many custom fonts correctly while maintaining its high-security guarantees. Final thoughtsThese aren't flashy features — but they're the kind that quietly make Safari better. More secure, more private, and more compatible. And the web gets just a little nicer every time Apple ships one of these under-the-hood improvements.If you use Safari regularly, you already benefit from these changes — even if you never visit a settings screen.To see more of what's changed in the background of Safari, check out Apple's WebKit release notes for Safari 18.4.Don't Miss: 70+ iPhone Features in iOS 18.4 — Here's Everything That's New and ChangedCover photo and screenshots by Gadget Hacks.",
  "image": "https://assets.content.technologyadvice.com/safari_18_4_cover_83c75653af.webp",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"contents\" itemprop=\"articleBody\"\u003e \u003cp\u003e\u003ca target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://ios.gadgethacks.com/collection/apple-safari-tips-tricks/\"\u003eSafari\u003c/a\u003e is always evolving, but most of its improvements happen behind the scenes, making the web feel faster, more secure, and more polished without you even noticing. There aren\u0026#39;t any flashy new browser UI changes in \u003ca target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://ios.gadgethacks.com/news/ios-18.4-features/\"\u003eiOS 18.4\u003c/a\u003e and \u003ca target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://ios.gadgethacks.com/news/ios-18.4-features/\"\u003eiPadOS 18.4\u003c/a\u003e, but it does upgrade what Safari is capable of in small but meaningful ways.\u003c/p\u003e\u003cp\u003eWith Safari 18.4, you get a handful of quiet but meaningful upgrades that make modern websites work more smoothly, securely, and responsively. Whether it\u0026#39;s checking a site\u0026#39;s identity, enjoying better color pickers, or having your scroll-to-text links work more reliably, these changes are the kind that web developers get excited about — and everyday users benefit from, often without even noticing.\u003c/p\u003e\u003cp\u003eHere\u0026#39;s what\u0026#39;s new — and why it matters.\u003c/p\u003e\u003ch2 data-ordered=\"\" data-ordered-count=\"1\"\u003e\u003cspan id=\"jump-undefined1youcannowcheckawebsitessecuritydetailslikeapro\"\u003e\u003c/span\u003e\u003cstrong\u003eYou can now check a website\u0026#39;s security details like a pro\u003c/strong\u003e\u003c/h2\u003e\u003cp\u003eEver tap a suspicious link and wonder, \u0026#34;Is this site legit?\u0026#34; Safari now helps you dig deeper.\u003c/p\u003e\u003cp\u003eIn iOS 18.4 and iPadOS 18.4, you can tap the Page Menu icon in the address bar, hit the More (•••), and choose \u003ca target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://apple.gadgethacks.com/how-to/check-site-connection-safari-iphone-ipad/\"\u003eConnection Security Details\u003c/a\u003e to view a mobile-friendly interface of who issued the site\u0026#39;s certificate and whether it\u0026#39;s using proper encryption. This feature was previously only available on macOS but is now also available on iPhone and iPad. [\u003ca target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://apple.gadgethacks.com/how-to/check-site-connection-safari-iphone-ipad/\"\u003eFull guide.\u003c/a\u003e]\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e💡 Why it matters: \u003c/strong\u003eMore transparency when checking out, logging in, or visiting lesser-known sites.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e🔧 Technical details: \u003c/strong\u003eThe certificate viewer exposes core metadata from a site\u0026#39;s TLS certificate chain, including the issuer, subject, validity period, public key details, cryptographic fingerprints, policy extensions, subject alternative names, and OCSP-signed timestamps. These fields help validate that the site is using proper encryption and that the certificate was issued to the correct domain. The structured layout mirrors the macOS version and brings Safari\u0026#39;s mobile certificate inspection in line with the transparency offered by browsers like Chrome and Firefox.\u003c/p\u003e\u003castro-island uid=\"Zt2w5C\" prefix=\"v25\" component-url=\"https://static.gadgethacks.com/_astro/CarouselArticleImages.BbWvd2o7.js\" component-export=\"default\" renderer-url=\"https://static.gadgethacks.com/_astro/client.CD_APfvn.js\" props=\"{\u0026#34;images\u0026#34;:[1,[[0,\u0026#34;\u0026lt;img src=\\\u0026#34;https://assets.content.technologyadvice.com/safari_page_security_certs_view_cede774d7f.webp\\\u0026#34; alt=\\\u0026#34;Three iPhone screenshots of Safari’s connection security details. They show a secure connection to gadgethacks.com, certificate details, and issuer information.\\\u0026#34; srcset=\\\u0026#34;https://assets.content.technologyadvice.com/xsmall_safari_page_security_certs_view_cede774d7f.webp 64w, https://assets.content.technologyadvice.com/thumbnail_safari_page_security_certs_view_cede774d7f.webp 214w, https://assets.content.technologyadvice.com/small_safari_page_security_certs_view_cede774d7f.webp 500w, https://assets.content.technologyadvice.com/medium_safari_page_security_certs_view_cede774d7f.webp 750w, https://assets.content.technologyadvice.com/large_safari_page_security_certs_view_cede774d7f.webp 1000w, https://assets.content.technologyadvice.com/xlarge_safari_page_security_certs_view_cede774d7f.webp 1920w\\\u0026#34; sizes=\\\u0026#34;(min-width: 768px) 80vw, 100vw\\\u0026#34; data-id=\\\u0026#34;631835\\\u0026#34;\u0026gt;\u0026#34;]]]}\" ssr=\"\" client=\"visible\" opts=\"{\u0026#34;name\u0026#34;:\u0026#34;CarouselArticleImages\u0026#34;,\u0026#34;value\u0026#34;:true}\" await-children=\"\"\u003e\u003c/astro-island\u003e \u003ch2 data-ordered=\"\" data-ordered-count=\"2\"\u003e\u003cspan id=\"jump-undefined2safarinowshowsandletsyoudisablerecentsearches\"\u003e\u003c/span\u003e\u003cstrong\u003eSafari now shows (and lets you disable) recent searches\u003c/strong\u003e\u003c/h2\u003e\u003cp\u003eSafari just got a little more helpful — or a little too revealing, depending on how you browse. In iOS 18.4 and iPadOS 18.4, Safari \u003ca target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://ios.gadgethacks.com/how-to/stop-safari-recent-searches-iphone/\"\u003eautomatically shows your recent search terms\u003c/a\u003e when you open a new tab or tap into the address bar, even on existing pages. It\u0026#39;s great for picking up where you left off, but it could also show your search history to anyone who grabs your iPhone. [\u003ca target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://ios.gadgethacks.com/how-to/stop-safari-recent-searches-iphone/\"\u003eFull guide.\u003c/a\u003e]\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e💡 Why it matters: \u003c/strong\u003eThis makes Safari more convenient but also more exposed. If you\u0026#39;d rather keep your search history private, you can clear or disable this new behavior in Settings.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e🔧 Technical details: \u003c/strong\u003eSafari 18.4 adds system-level support for showing recent search suggestions inline when the address bar is focused and the field is empty. This behavior is tied to a new setting called Show Recent Searches under Settings » Apps » Safari, which is enabled by default. Recent search terms are pulled from standard, non-private browsing sessions and are shown even if you\u0026#39;re not on the Start Page. You can clear the list manually from the suggestion view or disable it entirely in Settings. The feature is available on iPhones and iPads only.\u003c/p\u003e\u003castro-island uid=\"Nb6mw\" prefix=\"v26\" component-url=\"https://static.gadgethacks.com/_astro/CarouselArticleImages.BbWvd2o7.js\" component-export=\"default\" renderer-url=\"https://static.gadgethacks.com/_astro/client.CD_APfvn.js\" props=\"{\u0026#34;images\u0026#34;:[1,[[0,\u0026#34;\u0026lt;img src=\\\u0026#34;https://assets.content.technologyadvice.com/safari_recent_searches_cc33ba2e7d.webp\\\u0026#34; alt=\\\u0026#34;Side-by-side iPhone screenshots showing Safari’s recent searches list with terms like “ios harry potter spells” on the left and a cleared, empty search history on the right.\\\u0026#34; srcset=\\\u0026#34;https://assets.content.technologyadvice.com/xsmall_safari_recent_searches_cc33ba2e7d.webp 60w, https://assets.content.technologyadvice.com/thumbnail_safari_recent_searches_cc33ba2e7d.webp 147w, https://assets.content.technologyadvice.com/small_safari_recent_searches_cc33ba2e7d.webp 470w, https://assets.content.technologyadvice.com/medium_safari_recent_searches_cc33ba2e7d.webp 704w, https://assets.content.technologyadvice.com/large_safari_recent_searches_cc33ba2e7d.webp 939w, https://assets.content.technologyadvice.com/xlarge_safari_recent_searches_cc33ba2e7d.webp 1803w\\\u0026#34; sizes=\\\u0026#34;(min-width: 768px) 80vw, 100vw\\\u0026#34; data-id=\\\u0026#34;631949\\\u0026#34;\u0026gt;\u0026#34;]]]}\" ssr=\"\" client=\"visible\" opts=\"{\u0026#34;name\u0026#34;:\u0026#34;CarouselArticleImages\u0026#34;,\u0026#34;value\u0026#34;:true}\" await-children=\"\"\u003e\u003c/astro-island\u003e \u003ch2 data-ordered=\"\" data-ordered-count=\"3\"\u003e\u003cspan id=\"jump-undefined3safarijustgotsmarteraboutblockingtrackers\"\u003e\u003c/span\u003e\u003cstrong\u003eSafari just got smarter about blocking trackers\u003c/strong\u003e\u003c/h2\u003e\u003cp\u003eSafari 18.4 introduces support for partitioned cookies, also called CHIPS (Cookies Having Independent Partitioned State). This privacy feature stops companies from tracking you across different sites while still allowing things like embedded logins and media players to work properly.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e💡 Why it matters: \u003c/strong\u003eWebsites can still function (like embedded YouTube or comment boxes), but advertisers can\u0026#39;t use those to follow you around.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e🔧 Technical details: \u003c/strong\u003eCHIPS allows third-party content, such as an iframe, to set cookies that are scoped to the top-level site they appear on. This means if a third-party service is embedded across different websites, its cookies are siloed per site — stopping cross-site tracking while enabling local functionality like staying logged in or remembering preferences. Safari uses the \u003ccode\u003ePartitioned\u003c/code\u003e cookie attribute (set alongside \u003ccode\u003eSameSite=None\u003c/code\u003e and \u003ccode\u003eSecure\u003c/code\u003e) to opt into this behavior. These partitioned cookies are accessible only in the context in which they were set and can\u0026#39;t be shared across unrelated domains. For example, if \u003ccode\u003echat.example.com\u003c/code\u003e is embedded on both \u003ccode\u003eios.gadgethacks.com\u003c/code\u003e and \u003ccode\u003eapple.gadgethacks.com\u003c/code\u003e, it can access the same partitioned cookie — because both are considered part of the same \u0026#34;site\u0026#34; under WebKit\u0026#39;s site-level partitioning. But if that same \u003ccode\u003echat.example.com\u003c/code\u003e iframe is embedded on \u003ccode\u003enull-byte.com\u003c/code\u003e, it receives a separate, isolated cookie for that context. This aligns Safari with Chrome and Firefox and helps web developers move away from legacy cross-site cookie behavior — without breaking core functionality for users. Partitioned cookies cannot be used by known tracking domains and are blocked accordingly.\u003c/p\u003e \u003ch2 data-ordered=\"\" data-ordered-count=\"4\"\u003e\u003cspan id=\"jump-undefined4colorpickersnowsupporttransparencyandlookwaybetter\"\u003e\u003c/span\u003e\u003cstrong\u003eColor pickers now support transparency (and look way better)\u003c/strong\u003e\u003c/h2\u003e\u003cp\u003eSafari\u0026#39;s color inputs on webpages just got a significant upgrade. Sites can now show alpha sliders for transparency and offer more accurate color options like Display P3. If you\u0026#39;ve ever used a website to tweak colors for a design or customize a theme, expect more advanced controls that feel closer to native iOS apps.\u003c/p\u003e\u003cp\u003eYou can see the difference clearly in the example image below. The color picker in Safari 18.4 (right) shows a rich red color with a visible transparency slider and a checkered background preview — just like you\u0026#39;d expect in a design app. In Safari 18.3.2 (left), the same color input appears much more limited: no transparency slider, no wide color options, and a simpler, less accurate color preview. That\u0026#39;s because the test asks for a vivid red with some transparency in the Display P3 color space — and only Safari 18.4 understands and supports it.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e💡 Why it matters:\u003c/strong\u003e More powerful tools in creative apps and website builders. Transparency sliders = a huge win for designers.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e🔧 Technical details: \u003c/strong\u003eSafari 18.4 enhances \u003ccode\u003e\u0026lt;input type=\u0026#34;color\u0026#34;\u0026gt;\u003c/code\u003e by supporting \u003ccode\u003ealpha\u003c/code\u003e and \u003ccode\u003ecolorspace\u003c/code\u003e attributes. This allows developers to let users choose colors with transparency (via an opacity slider) and to select colors from extended gamuts like \u003ccode\u003edisplay-p3\u003c/code\u003e, not just sRGB. The input also now accepts modern CSS color formats — such as \u003ccode\u003ecolor(display-p3 ...)\u003c/code\u003e or \u003ccode\u003ergba()\u003c/code\u003e — and will convert them correctly based on the specified color space. Previously, iOS color pickers were limited to opaque RGB colors only and lacked support for alpha blending or wide color profiles.\u003c/p\u003e\u003castro-island uid=\"Z2o0aik\" prefix=\"v27\" component-url=\"https://static.gadgethacks.com/_astro/CarouselArticleImages.BbWvd2o7.js\" component-export=\"default\" renderer-url=\"https://static.gadgethacks.com/_astro/client.CD_APfvn.js\" props=\"{\u0026#34;images\u0026#34;:[1,[[0,\u0026#34;\u0026lt;img src=\\\u0026#34;https://assets.content.technologyadvice.com/safari_color_picker_alpha_comparison_110afa135f.webp\\\u0026#34; alt=\\\u0026#34;Side-by-side comparison of Safari’s color input sliders on iOS 18.3.2 and iOS 18.4, showing the addition of opacity and Display P3 color support in the newer version.\\\u0026#34; srcset=\\\u0026#34;https://assets.content.technologyadvice.com/xsmall_safari_color_picker_alpha_comparison_110afa135f.webp 60w, https://assets.content.technologyadvice.com/thumbnail_safari_color_picker_alpha_comparison_110afa135f.webp 147w, https://assets.content.technologyadvice.com/small_safari_color_picker_alpha_comparison_110afa135f.webp 470w, https://assets.content.technologyadvice.com/medium_safari_color_picker_alpha_comparison_110afa135f.webp 704w, https://assets.content.technologyadvice.com/large_safari_color_picker_alpha_comparison_110afa135f.webp 939w, https://assets.content.technologyadvice.com/xlarge_safari_color_picker_alpha_comparison_110afa135f.webp 1803w\\\u0026#34; sizes=\\\u0026#34;(min-width: 768px) 80vw, 100vw\\\u0026#34; data-id=\\\u0026#34;632043\\\u0026#34;\u0026gt;\u0026#34;]]]}\" ssr=\"\" client=\"visible\" opts=\"{\u0026#34;name\u0026#34;:\u0026#34;CarouselArticleImages\u0026#34;,\u0026#34;value\u0026#34;:true}\" await-children=\"\"\u003e\u003c/astro-island\u003e \u003ch2 data-ordered=\"\" data-ordered-count=\"5\"\u003e\u003cspan id=\"jump-undefined5safarisupportsmorewebaudioformats\"\u003e\u003c/span\u003e\u003cstrong\u003eSafari supports more web audio formats\u003c/strong\u003e\u003c/h2\u003e\u003cp\u003eSafari 18.4 adds full support for the Ogg container, which means it can now play audio files encoded in Ogg Opus or Ogg Vorbis — two popular open-source formats used by apps like Telegram, Wikipedia, and open-source media sites.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e💡 Why it matters: \u003c/strong\u003eYou\u0026#39;ll see fewer broken audio players and \u0026#34;file not supported\u0026#34; errors on privacy-focused or open-source sites.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e🔧 Technical details: \u003c/strong\u003eSafari 18.4 supports the Ogg container format (\u003ccode\u003e.ogg\u003c/code\u003e) with Vorbis and Opus audio codecs in \u003ccode\u003e\u0026lt;audio\u0026gt;\u003c/code\u003e elements and direct file links — something previously missing on iOS. It also supports \u003ccode\u003e.opus\u003c/code\u003e files, which typically use the same Ogg container format but with the Opus codec. While Safari already supported Vorbis in WebRTC contexts, this update allows native playback of standalone \u003ccode\u003e.ogg\u003c/code\u003e and \u003ccode\u003e.opus\u003c/code\u003e files, including embedded players and streamed audio. Formats like Speex and Theora remain unsupported.\u003c/p\u003e\u003castro-island uid=\"Z10BAii\" prefix=\"v28\" component-url=\"https://static.gadgethacks.com/_astro/CarouselArticleImages.BbWvd2o7.js\" component-export=\"default\" renderer-url=\"https://static.gadgethacks.com/_astro/client.CD_APfvn.js\" props=\"{\u0026#34;images\u0026#34;:[1,[[0,\u0026#34;\u0026lt;img src=\\\u0026#34;https://assets.content.technologyadvice.com/safari_ogg_opus_b0f7fc1586.webp\\\u0026#34; alt=\\\u0026#34;Side-by-side comparison of Safari on iOS 18.3.2 and 18.4 showing that .opus audio playback now works on HTML5 testers in 18.4, with visible audio controls and timeline.\\\u0026#34; srcset=\\\u0026#34;https://assets.content.technologyadvice.com/xsmall_safari_ogg_opus_b0f7fc1586.webp 60w, https://assets.content.technologyadvice.com/thumbnail_safari_ogg_opus_b0f7fc1586.webp 147w, https://assets.content.technologyadvice.com/small_safari_ogg_opus_b0f7fc1586.webp 470w, https://assets.content.technologyadvice.com/medium_safari_ogg_opus_b0f7fc1586.webp 704w, https://assets.content.technologyadvice.com/large_safari_ogg_opus_b0f7fc1586.webp 939w, https://assets.content.technologyadvice.com/xlarge_safari_ogg_opus_b0f7fc1586.webp 1803w\\\u0026#34; sizes=\\\u0026#34;(min-width: 768px) 80vw, 100vw\\\u0026#34; data-id=\\\u0026#34;632040\\\u0026#34;\u0026gt;\u0026#34;]]]}\" ssr=\"\" client=\"visible\" opts=\"{\u0026#34;name\u0026#34;:\u0026#34;CarouselArticleImages\u0026#34;,\u0026#34;value\u0026#34;:true}\" await-children=\"\"\u003e\u003c/astro-island\u003e \u003ch2 data-ordered=\"\" data-ordered-count=\"6\"\u003e\u003cspan id=\"jump-undefined6verticalandsidewaystextrendersmorenaturally\"\u003e\u003c/span\u003e\u003cstrong\u003eVertical and sideways text renders more naturally\u003c/strong\u003e\u003c/h2\u003e\u003cp\u003eSafari now supports CSS sideways writing modes, which may sound niche — but if you browse websites in Chinese, Japanese, or Korean or visit magazines with vertical text layouts, things will now look much more polished. It also opens up new creative options for developers, like sideways navigation text or vertical buttons.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e💡 Why it matters: \u003c/strong\u003eWebsites written in East Asian languages now look more natural and readable, and Western sites may also become more creative.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e🔧 Technical details: \u003c/strong\u003eSafari 18.4 supports \u003ccode\u003ewriting-mode: sideways-rl\u003c/code\u003e and \u003ccode\u003esideways-lr\u003c/code\u003e, part of the CSS Writing Modes Level 4 spec. These modes are similar to \u003ccode\u003evertical-rl\u003c/code\u003e and \u003ccode\u003evertical-lr\u003c/code\u003e, but instead of reflowing text for vertical scripts, they rotate horizontal text 90 degrees for layout effects like vertical headings or labels. Unlike \u003ccode\u003evertical-*\u003c/code\u003e, which preserves native vertical glyph rendering (especially for CJK), \u003ccode\u003esideways-*\u003c/code\u003e keeps characters upright and rotates the entire line, ensuring punctuation and baseline alignment stay typographically correct. This allows designers to create vertical layouts using horizontal scripts without breaking formatting or readability. Previously, Safari only supported \u003ccode\u003ehorizontal-tb\u003c/code\u003e, \u003ccode\u003evertical-rl\u003c/code\u003e, and \u003ccode\u003evertical-lr\u003c/code\u003e. This update aligns with other modern browsers and gives web designers more control over-stylized, vertical UI elements.\u003c/p\u003e\u003castro-island uid=\"QBsnq\" prefix=\"v29\" component-url=\"https://static.gadgethacks.com/_astro/CarouselArticleImages.BbWvd2o7.js\" component-export=\"default\" renderer-url=\"https://static.gadgethacks.com/_astro/client.CD_APfvn.js\" props=\"{\u0026#34;images\u0026#34;:[1,[[0,\u0026#34;\u0026lt;img src=\\\u0026#34;https://assets.content.technologyadvice.com/safari_sideways_lr_rl_479f1f4b73.webp\\\u0026#34; alt=\\\u0026#34;Side-by-side comparison of WebKit’s sideways-lr and sideways-rl writing modes on iOS 18.3.2 vs iOS 18.4, showing improved vertical text spacing and wrapping in Safari on the latter.\\\u0026#34; srcset=\\\u0026#34;https://assets.content.technologyadvice.com/xsmall_safari_sideways_lr_rl_479f1f4b73.webp 60w, https://assets.content.technologyadvice.com/thumbnail_safari_sideways_lr_rl_479f1f4b73.webp 147w, https://assets.content.technologyadvice.com/small_safari_sideways_lr_rl_479f1f4b73.webp 470w, https://assets.content.technologyadvice.com/medium_safari_sideways_lr_rl_479f1f4b73.webp 704w, https://assets.content.technologyadvice.com/large_safari_sideways_lr_rl_479f1f4b73.webp 939w, https://assets.content.technologyadvice.com/xlarge_safari_sideways_lr_rl_479f1f4b73.webp 1803w\\\u0026#34; sizes=\\\u0026#34;(min-width: 768px) 80vw, 100vw\\\u0026#34; data-id=\\\u0026#34;632041\\\u0026#34;\u0026gt;\u0026#34;]]]}\" ssr=\"\" client=\"visible\" opts=\"{\u0026#34;name\u0026#34;:\u0026#34;CarouselArticleImages\u0026#34;,\u0026#34;value\u0026#34;:true}\" await-children=\"\"\u003e\u003c/astro-island\u003e \u003ch2 data-ordered=\"\" data-ordered-count=\"7\"\u003e\u003cspan id=\"jump-undefined7scrolltotextlinksaremorereliable\"\u003e\u003c/span\u003e\u003cstrong\u003eScroll to Text links are more reliable\u003c/strong\u003e\u003c/h2\u003e\u003cp\u003eYou\u0026#39;ve probably seen this in action — someone sends you a link that scrolls you directly to a highlighted line of text. That\u0026#39;s called \u003ca target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://apple.gadgethacks.com/how-to/share-highlighted-text-safari-ios-ipados/\"\u003eScroll to Text\u003c/a\u003e. Viewing these links has been supported since Safari 16.1 and Safari 18.2 finally let us create Scroll to Text links to share with others. Now, Safari 18.4 lets websites check whether your browser supports it before trying to use it. [\u003ca target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://apple.gadgethacks.com/how-to/share-highlighted-text-safari-ios-ipados/\"\u003eFull guide.\u003c/a\u003e]\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e💡 Why it matters: \u003c/strong\u003eFewer broken jumps when clicking anchored links. You\u0026#39;ll land on the right line more often.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e🔧 Technical details: \u003c/strong\u003eSafari 18.4 adds support for the \u003ccode\u003edocument.fragmentDirective\u003c/code\u003e API, which enables feature detection for Scroll-To-Text Fragments (\u003ccode\u003e#:~:text=\u003c/code\u003e URLs). The browser now exposes a \u003ccode\u003efragmentDirective\u003c/code\u003e property on the document object, allowing developers to check if this functionality is supported before generating or linking to these deep-link URLs. This aligns Safari with other browsers and allows for more reliable implementation of link-to-highlight features across the web.\u003c/p\u003e\u003castro-island uid=\"Z1Y0p5D\" prefix=\"v30\" component-url=\"https://static.gadgethacks.com/_astro/CarouselArticleImages.BbWvd2o7.js\" component-export=\"default\" renderer-url=\"https://static.gadgethacks.com/_astro/client.CD_APfvn.js\" props=\"{\u0026#34;images\u0026#34;:[1,[[0,\u0026#34;\u0026lt;img src=\\\u0026#34;https://assets.content.technologyadvice.com/scroll_to_text_fragment_feature_detection_8f643df838.webp\\\u0026#34; alt=\\\u0026#34;WebKit Feature Flags screen on iPhone highlighting the enabled Scroll To Text Fragment Feature Detection option in Safari settings.\\\u0026#34; srcset=\\\u0026#34;https://assets.content.technologyadvice.com/xsmall_scroll_to_text_fragment_feature_detection_8f643df838.webp 60w, https://assets.content.technologyadvice.com/thumbnail_scroll_to_text_fragment_feature_detection_8f643df838.webp 147w, https://assets.content.technologyadvice.com/small_scroll_to_text_fragment_feature_detection_8f643df838.webp 470w, https://assets.content.technologyadvice.com/medium_scroll_to_text_fragment_feature_detection_8f643df838.webp 704w, https://assets.content.technologyadvice.com/large_scroll_to_text_fragment_feature_detection_8f643df838.webp 939w, https://assets.content.technologyadvice.com/xlarge_scroll_to_text_fragment_feature_detection_8f643df838.webp 1803w\\\u0026#34; sizes=\\\u0026#34;(min-width: 768px) 80vw, 100vw\\\u0026#34; data-id=\\\u0026#34;632042\\\u0026#34;\u0026gt;\u0026#34;]]]}\" ssr=\"\" client=\"visible\" opts=\"{\u0026#34;name\u0026#34;:\u0026#34;CarouselArticleImages\u0026#34;,\u0026#34;value\u0026#34;:true}\" await-children=\"\"\u003e\u003c/astro-island\u003e \u003ch2 data-ordered=\"\" data-ordered-count=\"8\"\u003e\u003cspan id=\"jump-undefined8webappscannowrecordinwebmsmallersmarterfiles\"\u003e\u003c/span\u003e\u003cstrong\u003eWeb apps can now record in WebM (smaller, smarter files)\u003c/strong\u003e\u003c/h2\u003e\u003cp\u003eSafari 18.4 now lets websites record audio and video in WebM format, which is more efficient than older formats. That means web-based tools like screen recorders, video editors, and voice memos can create smaller files that upload faster and take up less space.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e💡 Why it matters: \u003c/strong\u003eWeb-based recording tools will now create smaller, more shareable files that still look and sound great.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e🔧 Technical details: \u003c/strong\u003eSafari 18.4 adds full support for recording WebM files via the MediaRecorder API — something previously unavailable on iOS. When developers specify \u003ccode\u003emimeType: \u0026#39;video/webm\u0026#39;\u003c/code\u003e, Safari will encode video using VP8 or VP9 and audio using Opus, depending on what the device supports. This aligns Safari with other browsers and allows web apps to produce smaller, widely compatible media files — ideal for screen recordings, video messages, or browser-based editing tools. In addition to WebM, Safari 18.4 expands MediaRecorder with support for fragmented MP4 (fMP4), which works well with MediaSource streaming APIs. New audio options include lossless formats like ALAC and PCM, while supported video tracks now include H.264, HEVC, and AV1 (on devices with AV1 hardware decoding). Together, these updates give developers far more flexibility in capturing, encoding, and streaming media through the web.\u003c/p\u003e \u003ch2 data-ordered=\"\" data-ordered-count=\"9\"\u003e\u003cspan id=\"jump-undefined9moreaccuratelayoutforemojiandmultilingualtext\"\u003e\u003c/span\u003e\u003cstrong\u003eMore accurate layout for emoji and multilingual text\u003c/strong\u003e\u003c/h2\u003e\u003cp\u003eSafari 18.4 updates how text is rendered when mixing multiple writing directions, such as left-to-right (English) and right-to-left (Arabic or Hebrew), or when using emoji in-line with text. You\u0026#39;ll notice fewer bugs or strange text alignments when viewing multilingual sites or rich comment threads with emojis and symbols.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e💡 Why it matters: \u003c/strong\u003eMore readable messages and cleaner layout when reading content with mixed languages and emoji — especially in international articles or forums.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e🔧 Technical details: \u003c/strong\u003eSafari 18.4 implements User Agent (UA) rendering rules for the \u003ccode\u003eunicode-bidi\u003c/code\u003e property, as defined in the CSS Text specification. This improves how the browser lays out bidirectional text — such as left-to-right and right-to-left scripts appearing in the same sentence — and better handles mixed content like emoji, symbols, and numbers. The update results in more consistent alignment, cursor movement, and glyph ordering across input fields and inline content. Note: this implementation currently excludes ruby annotations.\u003c/p\u003e \u003ch2 data-ordered=\"\" data-ordered-count=\"10\"\u003e\u003cspan id=\"jump-undefined10expandablesectionsonwebsiteslookmorepolished\"\u003e\u003c/span\u003e\u003cstrong\u003eExpandable sections on websites look more polished\u003c/strong\u003e\u003c/h2\u003e\u003cp\u003eSafari 18.4 makes the humble \u003ccode\u003e\u0026lt;details\u0026gt;\u003c/code\u003e element much more flexible — both in how it looks and how it behaves. You\u0026#39;ve probably seen it before: it\u0026#39;s often used for collapsible sections like FAQs or \u0026#34;Show More\u0026#34; toggles. Until now, customizing these elements in Safari has been frustrating. However, with 18.4, developers finally have better tools to style them and make them feel native to their site or app.\u003c/p\u003e\u003cp\u003eYou can see the difference in the example below. In Safari 18.3.2, the default disclosure triangle is black ▼, and the expanded content looks like regular text. In Safari 18.4, that triangle has been replaced with a customizable marker (in this case, an orange \u003cstrong\u003e+\u003c/strong\u003e symbol), and the opened section has its own background style thanks to a new styling hook. It finally feels polished and professional — not like a browser default.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e💡 Why it matters:\u003c/strong\u003e Websites can now create stylish expand/collapse sections without relying on JavaScript — and still stay accessible and semantic.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e🔧 Technical details: \u003c/strong\u003eSafari 18.4 adds support for the \u003ccode\u003e::details-content\u003c/code\u003e pseudo-element, allowing developers to independently style the open section of a \u003ccode\u003e\u0026lt;details\u0026gt;\u003c/code\u003e element — including background color, spacing, or animations. It also reimplements the \u003ccode\u003e\u0026lt;summary\u0026gt;\u003c/code\u003e marker as a true list item, enabling full styling control with \u003ccode\u003elist-style\u003c/code\u003e and \u003ccode\u003e::marker\u003c/code\u003e. For example, developers can now change the triangle to any symbol (\u003ccode\u003esummary { list-style: \u0026#34;+ \u0026#34;; }\u003c/code\u003e) or apply color, size, or animation to the marker. Combined with modern CSS animation support, it\u0026#39;s now possible to animate the height or opacity of the details panel without extra containers or JavaScript workarounds. These changes align Safari with other modern browsers and make native collapsible UI more attractive and flexible — with full accessibility built in.\u003c/p\u003e\u003castro-island uid=\"Z1SlJFk\" prefix=\"v31\" component-url=\"https://static.gadgethacks.com/_astro/CarouselArticleImages.BbWvd2o7.js\" component-export=\"default\" renderer-url=\"https://static.gadgethacks.com/_astro/client.CD_APfvn.js\" props=\"{\u0026#34;images\u0026#34;:[1,[[0,\u0026#34;\u0026lt;img src=\\\u0026#34;https://i.giphy.com/xWyvuaRcbJoYd863OM.gif\\\u0026#34; sizes=\\\u0026#34;(min-width: 768px) 80vw, 100vw\\\u0026#34;\u0026gt;\u0026#34;]]]}\" ssr=\"\" client=\"visible\" opts=\"{\u0026#34;name\u0026#34;:\u0026#34;CarouselArticleImages\u0026#34;,\u0026#34;value\u0026#34;:true}\" await-children=\"\"\u003e\u003c/astro-island\u003e \u003ch2 data-ordered=\"\" data-ordered-count=\"11\"\u003e\u003cspan id=\"jump-undefined11homescreenwebappscannowkeepyourscreenawake\"\u003e\u003c/span\u003eHome Screen web apps can now keep your screen awake\u003c/h2\u003e\u003cp\u003eIf you\u0026#39;ve ever followed a recipe or presentation on a web app and had your screen dim or lock mid-step, Safari 18.4 fixes that. Home Screen web apps can now keep your display awake as long as needed — just like native apps do.\n\n\u003cstrong\u003e💡 Why it matters:\u003c/strong\u003e Helpful for reading long instructions, recipes, or presentations without constantly tapping the screen.\n\n\u003cstrong\u003e🔧 Technical details:\u003c/strong\u003e Safari 18.4 enables the Screen Wake Lock API in Home Screen-installed web apps on iOS and iPadOS. Developers can call\u003ccode\u003e navigator.wakeLock.request(\u0026#34;screen\u0026#34;)\u003c/code\u003e to keep the device\u0026#39;s screen from dimming or locking. Previously, this API only worked in Safari itself, not in standalone PWAs. Now, web apps behave more like their native counterparts during passive use.\u003c/p\u003e \u003ch2 data-ordered=\"\" data-ordered-count=\"12\"\u003e\u003cspan id=\"jump-undefined12webnotificationsaremoreefficientwithdeclarativewebpush\"\u003e\u003c/span\u003e\u003cstrong\u003eWeb notifications are more efficient with Declarative Web Push\u003c/strong\u003e\u003c/h2\u003e\u003cp\u003eSafari 18.4 enables Declarative Web Push for web apps added to the Home Screen, allowing them to send push notifications without needing a constantly running service worker in the background. This results in fewer battery drains, faster and more reliable delivery, and a more consistent experience — especially for messaging, reminders, or news alert web apps.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e💡 Why it matters: \u003c/strong\u003eYou\u0026#39;ll get faster, more reliable notifications from web apps — and your battery will thank you.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e🔧 Technical details: \u003c/strong\u003eSafari 18.4 introduces Declarative Web Push on iOS and iPadOS for web apps added to the Home Screen. Traditionally, Web Push requires a service worker — a background script that stays active (or gets reawakened) to receive and handle push messages. However, this model can drain the battery and add complexity for developers. Declarative Web Push takes a different approach: instead of requiring JavaScript to run in the background, web apps define their notification behavior up front when the app is installed or registered. This means push notifications can be delivered instantly — even when the app isn’t running — without waking up a Service Worker or consuming background resources. This model is better for iOS, where background execution is tightly limited. It improves reliability, reduces energy use, and makes Web Push more accessible to developers — especially for messaging, reminders, or passive alerts in Home Screen-installed web apps.\u003c/p\u003e \u003ch2 data-ordered=\"\" data-ordered-count=\"13\"\u003e\u003cspan id=\"jump-undefined13numberinputsnolongerchangewithyourscroll\"\u003e\u003c/span\u003eNumber inputs no longer change with your scroll\u003c/h2\u003e\u003cp\u003eScrolling over a number input field with a trackpad or mouse on iPadOS and macOS no longer changes its value — fixing an old annoyance iPads and Macs. The old behavior often led to accidental changes when scrolling through forms. This update brings number inputs more in line with native system controls. \u003c/p\u003e\u003cp\u003e\u003cstrong\u003e💡 Why it matters:\u003c/strong\u003e Less chance of unintentionally changing values when using a mouse or trackpad on Mac or iPad.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e🔧 Technical details:\u003c/strong\u003e WebKit has removed default wheel event handling on \u003ccode\u003e\u0026lt;input type=\u0026#34;number\u0026#34;\u0026gt;\u003c/code\u003e elements in Safari on macOS and iPadOS. Previously, users could increment or decrement number values just by scrolling — even unintentionally. This behavior was not consistent with native platform inputs and often required custom JavaScript to override. Developers who want to keep the behavior can still implement it manually.\u003c/p\u003e \u003ch2 data-ordered=\"\" data-ordered-count=\"14\"\u003e\u003cspan id=\"jump-undefined14textspacinggetsasubtleupgradeformultilingualwebsites\"\u003e\u003c/span\u003eText spacing gets a subtle upgrade for multilingual websites\u003c/h2\u003e\u003cp\u003eSafari 18.4 supports a new CSS property called \u003ccode\u003etext-autospace\u003c/code\u003e, which fine-tunes the spacing between characters in multilingual text — especially when Chinese, Japanese, or Korean (CJK) scripts are mixed with Latin letters or numerals. The difference is subtle but helps text feel less cramped and more readable in modern CJK layouts. \u003c/p\u003e\u003cp\u003e\u003cstrong\u003e💡 Why it matters:\u003c/strong\u003e Improves legibility on multilingual sites — though most users won\u0026#39;t notice unless designers adopt the new behavior.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e🔧 Technical details:\u003c/strong\u003e The \u003ccode\u003etext-autospace\u003c/code\u003e property supports values like \u003ccode\u003eideograph-alpha\u003c/code\u003e, \u003ccode\u003eideograph-numeric\u003c/code\u003e, and \u003ccode\u003enormal\u003c/code\u003e, which add breathing room between runs of CJK characters and Western letters or numbers. Safari 18.4 defaults to \u003ccode\u003etext-autospace: no-autospace\u003c/code\u003e to match legacy behavior, but web developers can explicitly set \u003ccode\u003etext-autospace: normal\u003c/code\u003e to opt in. This aligns with the evolving CSS text spec and may become the default in future versions once it\u0026#39;s better tested and more widely adopted.\u003c/p\u003e\u003castro-island uid=\"NMKGb\" prefix=\"v32\" component-url=\"https://static.gadgethacks.com/_astro/CarouselArticleImages.BbWvd2o7.js\" component-export=\"default\" renderer-url=\"https://static.gadgethacks.com/_astro/client.CD_APfvn.js\" props=\"{\u0026#34;images\u0026#34;:[1,[[0,\u0026#34;\u0026lt;img src=\\\u0026#34;https://assets.content.technologyadvice.com/safari_cjk_western_text_1b6c146159.webp\\\u0026#34; alt=\\\u0026#34;Comparison of Safari on iOS 18.3.2 vs. 18.4 showing improved text-autospace rendering for Latin and Japanese text.\\\u0026#34; srcset=\\\u0026#34;https://assets.content.technologyadvice.com/xsmall_safari_cjk_western_text_1b6c146159.webp 60w, https://assets.content.technologyadvice.com/thumbnail_safari_cjk_western_text_1b6c146159.webp 147w, https://assets.content.technologyadvice.com/small_safari_cjk_western_text_1b6c146159.webp 470w, https://assets.content.technologyadvice.com/medium_safari_cjk_western_text_1b6c146159.webp 704w, https://assets.content.technologyadvice.com/large_safari_cjk_western_text_1b6c146159.webp 939w, https://assets.content.technologyadvice.com/xlarge_safari_cjk_western_text_1b6c146159.webp 1803w\\\u0026#34; sizes=\\\u0026#34;(min-width: 768px) 80vw, 100vw\\\u0026#34; data-id=\\\u0026#34;632052\\\u0026#34;\u0026gt;\u0026#34;]]]}\" ssr=\"\" client=\"visible\" opts=\"{\u0026#34;name\u0026#34;:\u0026#34;CarouselArticleImages\u0026#34;,\u0026#34;value\u0026#34;:true}\" await-children=\"\"\u003e\u003c/astro-island\u003e \u003ch2 data-ordered=\"\" data-ordered-count=\"15\"\u003e\u003cspan id=\"jump-undefined15betterfontcompatibilityinlockdownmode\"\u003e\u003c/span\u003e\u003cstrong\u003eBetter font compatibility in Lockdown Mode\u003c/strong\u003e\u003c/h2\u003e\u003cp\u003eSafari 18.4 makes web browsing more usable for those with Apple\u0026#39;s ultra-secure Lockdown Mode enabled. In past versions, many websites could appear broken or unreadable because Safari blocked most web fonts by default. With a new safe font parser, Safari can now render more fonts securely, helping pages keep their intended design without compromising protection.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e💡 Why it matters:\u003c/strong\u003e A smoother, more readable web experience for users in Lockdown Mode — with the same strong protection against targeted attacks.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e🔧 Technical details: \u003c/strong\u003eSafari 18.4 replaces Lockdown Mode\u0026#39;s restrictive font allowlist with a safe font parsing system that inspects and sanitizes downloaded font files before rendering them. This removes the need to hardcode which fonts are \u0026#34;safe,\u0026#34; allowing broader typographic support while still protecting against malicious fonts that might exploit memory vulnerabilities or parsing bugs. The secure parser is built to reject malformed or potentially unsafe font data at load time, preventing the execution of any embedded code. As a result, Lockdown Mode can now render many custom fonts correctly while maintaining its high-security guarantees.\u003c/p\u003e \u003ch2\u003e\u003cspan id=\"jump-finalthoughts\"\u003e\u003c/span\u003e\u003cstrong\u003eFinal thoughts\u003c/strong\u003e\u003c/h2\u003e\u003cp\u003eThese aren\u0026#39;t flashy features — but they\u0026#39;re the kind that quietly make Safari better. More secure, more private, and more compatible. And the web gets just a little nicer every time Apple ships one of these under-the-hood improvements.\u003c/p\u003e\u003cp\u003eIf you use Safari regularly, you already benefit from these changes — even if you never visit a settings screen.\u003c/p\u003e\u003cp\u003eTo see more of what\u0026#39;s changed in the background of Safari, check out \u003ca target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://webkit.org/blog/16574/webkit-features-in-safari-18-4/\"\u003eApple\u0026#39;s WebKit release notes for Safari 18.4\u003c/a\u003e.\u003c/p\u003e\u003cblockquote data-type=\"pullquote\"\u003e\u003cp\u003e\u003cstrong\u003eDon\u0026#39;t Miss: \u003c/strong\u003e\u003ca target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://ios.gadgethacks.com/news/ios-18.4-features/\"\u003e\u003cstrong\u003e70+ iPhone Features in iOS 18.4 — Here\u0026#39;s Everything That\u0026#39;s New and Changed\u003c/strong\u003e\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003cp\u003e\u003cem\u003eCover photo and screenshots by Gadget Hacks.\u003c/em\u003e\u003c/p\u003e \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "22 min read",
  "publishedTime": null,
  "modifiedTime": null
}
