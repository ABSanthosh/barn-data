{
  "id": "ea9b659f-ef39-4f8d-ba78-1655f8c3e26c",
  "title": "2025 One-Hertz Challenge: It’s Hexadecimal Unix Time",
  "link": "https://hackaday.com/2025/07/21/2025-one-hertz-challenge-its-hexadecimal-unix-time/",
  "description": "[danjovic] came up with a nifty entry for our 2025 One-Hertz Challenge that lands somewhere between the categories of Ridiculous and Clockwork. It’s a clock that few hackers, if any, …read more",
  "author": "Lewin Day",
  "published": "Mon, 21 Jul 2025 20:00:31 +0000",
  "source": "https://hackaday.com/blog/feed/",
  "categories": [
    "clock hacks",
    "2025 One Hertz Contest",
    "clock",
    "unix time"
  ],
  "byline": "",
  "length": 1344,
  "excerpt": "[danjovic] came up with a nifty entry for our 2025 One-Hertz Challenge that lands somewhere between the categories of Ridiculous and Clockwork. It’s a clock that few hackers, if any, could re…",
  "siteName": "Hackaday",
  "favicon": "https://hackaday.com/wp-content/themes/hackaday-2/img/hackaday-logo_1024x1024.png?v=3",
  "text": "Skip to content [danjovic] came up with a nifty entry for our 2025 One-Hertz Challenge that lands somewhere between the categories of Ridiculous and Clockwork. It’s a clock that few hackers, if any, could read on sight—just the way we like them around here! The clock is called Hexa U.T.C, which might give you an idea why this one is a little tricky to parse. It displays the current Unix time in hexadecimal format. If you’re unfamiliar, Unix time is represented as the number of non-leap seconds that have ticked by since 1 January 1970 at 00:00:00 UTC. Even if you can turn the long hex number into decimal in your head, you’re still going to have to then convert the seconds into years, days, hours, minutes, and seconds before you can figure out the actual time. The build relies on an ESP32-S2 module, paired with a 7-segment display module driven by the TM1638 I/O expander. The ESP32 syncs itself up with an NTP time server, and then spits out the relevant signals to display the current Unix time in hex on the 7-segment displays. It’s a fun build that your programmer friends might actually figure out at a glance. As a bonus it makes an easy kicking-off point for explaining the Year 2038 problem. We’ve featured other similar Unix clocks before, too. Video after the break.",
  "image": "https://hackaday.com/wp-content/uploads/2025/07/UTC-clock-teste-0-6-screenshot.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"page\"\u003e\n    \n\n    \u003cp\u003e\u003ca href=\"#content\"\u003eSkip to content\u003c/a\u003e\u003c/p\u003e\n\n    \u003cdiv id=\"content\"\u003e\n        \u003cmain id=\"main\" role=\"main\"\u003e\n\n        \n            \n\u003carticle itemscope=\"\" itemtype=\"http://schema.org/Article\" id=\"post-793071\"\u003e\n    \n\n    \u003cdiv itemprop=\"articleBody\"\u003e\n        \u003cp\u003e[danjovic] came up with a nifty entry for our 2025 One-Hertz Challenge that lands somewhere between the categories of Ridiculous and Clockwork. \u003ca href=\"https://hackaday.io/project/203435-hexa-utc\" target=\"_blank\"\u003eIt’s a clock that few hackers, if any, could read on sight\u003c/a\u003e—just the way we like them around here!\u003c/p\u003e\n\u003cp\u003eThe clock is called Hexa U.T.C, which might give you an idea why this one is a little tricky to parse. It displays the current Unix time in hexadecimal format. If you’re unfamiliar, \u003ca href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\"\u003eUnix time\u003c/a\u003e is represented as the number of non-leap seconds that have ticked by since 1 January 1970 at 00:00:00 UTC. Even if you can turn the long hex number into decimal in your head, you’re still going to have to then convert the seconds into years, days, hours, minutes, and seconds before you can figure out the actual time.\u003c/p\u003e\n\u003cp\u003eThe build relies on an ESP32-S2 module, paired with a 7-segment display module driven by the TM1638 I/O expander. The ESP32 syncs itself up with an NTP time server, and then spits out the relevant signals to display the current Unix time in hex on the 7-segment displays.\u003c/p\u003e\n\u003cp\u003eIt’s a fun build that your programmer friends might actually figure out at a glance. As a bonus it makes an easy kicking-off point for explaining the \u003ca href=\"https://en.wikipedia.org/wiki/Year_2038_problem\" target=\"_blank\"\u003eYear 2038 problem\u003c/a\u003e. We’ve featured \u003ca href=\"https://hackaday.com/2018/09/18/epic-clock-clocks-the-unix-epoch/\"\u003eother similar Unix clocks before, too.\u003c/a\u003e Video after the break.\u003c/p\u003e\n\n\u003cp\u003e\u003ciframe title=\"UTC clock teste\" width=\"800\" height=\"450\" src=\"https://www.youtube.com/embed/git1te5nhhI?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\n\t            \u003c/div\u003e\n    \u003cul\u003e\n    \t\t\t\t\t\u003cli\u003e\n    \t\t\t\t\u003ca href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fhackaday.com%2F2025%2F07%2F21%2F2025-one-hertz-challenge-its-hexadecimal-unix-time%2F\" target=\"_blank\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_face.png\"/\u003e \u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\t\t\u003cli\u003e\n                        \u003ca href=\"https://twitter.com/intent/tweet?text=2025%20One-Hertz%20Challenge:%20It’s%20Hexadecimal%20Unix%20Time%20via%20@hackaday\u0026amp;url=https://hackaday.com/2025/07/21/2025-one-hertz-challenge-its-hexadecimal-unix-time/\" target=\"_blank\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_twitter.png\"/\u003e\u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\t\t\u003cli\u003e\n    \t\t\t\t\u003ca href=\"https://www.linkedin.com/shareArticle?url=https%3A%2F%2Fhackaday.com%2F2025%2F07%2F21%2F2025-one-hertz-challenge-its-hexadecimal-unix-time%2F\" target=\"_blank\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_in.png\"/\u003e\u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\t\t\u003cli\u003e\n                \u003ca href=\"mailto:?subject=2025+One-Hertz+Challenge%3A+It%E2%80%99s+Hexadecimal+Unix+Time | Hackaday\u0026amp;body=https%3A%2F%2Fhackaday.com%2F2025%2F07%2F21%2F2025-one-hertz-challenge-its-hexadecimal-unix-time%2F\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_mail1.png\"/\u003e\u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\u003c/ul\u003e\n    \n\u003c/article\u003e\n\n            \t\n\t\n            \n\n            \n\n\n        \n        \n\n        \n        \n\n        \n        \u003c/main\u003e\n    \u003c/div\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "2 min read",
  "publishedTime": "2025-07-21T20:00:31Z",
  "modifiedTime": "2025-07-21T18:51:21Z"
}
