{
  "id": "c604efda-5276-4c2b-b8d4-97b1ebf2546f",
  "title": "How To Train A New Voice For Piper With Only A Single Phrase",
  "link": "https://hackaday.com/2025/07/09/how-to-train-a-new-voice-for-piper-with-only-a-single-phrase/",
  "description": "[Cal Bryant] hacked together a home automation system years ago, which more recently utilizes Piper TTS (text-to-speech) voices for various undisclosed purposes. Not satisfied with the robotic-sounding standard voices available, …read more",
  "author": "Dave Rowntree",
  "published": "Wed, 09 Jul 2025 23:00:39 +0000",
  "source": "https://hackaday.com/blog/feed/",
  "categories": [
    "Artificial Intelligence",
    "Chatterbox",
    "gpu",
    "PiperVoice",
    "pytorch",
    "speech synthesis",
    "text to speech",
    "whisper"
  ],
  "byline": "",
  "length": 2656,
  "excerpt": "[Cal Bryant] hacked together a home automation system years ago, which more recently utilizes Piper TTS (text-to-speech) voices for various undisclosed purposes. Not satisfied with the robotic-soun…",
  "siteName": "Hackaday",
  "favicon": "https://hackaday.com/wp-content/themes/hackaday-2/img/hackaday-logo_1024x1024.png?v=3",
  "text": "Skip to content [Cal Bryant] hacked together a home automation system years ago, which more recently utilizes Piper TTS (text-to-speech) voices for various undisclosed purposes. Not satisfied with the robotic-sounding standard voices available, [Cal] set about an experiment to fine-tune the Piper TTS AI voice model using a clone of a single phrase created by a commercial TTS voice as a starting point. Before the release of Piper TTS in 2023, existing free-to-use TTS systems such as espeak and Festival sounded robotic and flat. Piper delivered much more natural-sounding output, without requiring massive resources to run. To change the voice style, the Piper AI model can be either retrained from scratch or fine-tuned with less effort. In the latter case, the problem to be solved first was how to generate the necessary volume of training phrases to run the fine-tuning of Piper’s AI model. This was solved using a heavyweight AI model, ChatterBox, which is capable of so-called zero-shot training. Check out the Chatterbox demo here. As the loss function gets smaller, the model’s accuracy gets better Training began with a corpus of test phrases in text format to ensure decent coverage of everyday English. [Cal] used ChatterBox to clone audio from a single test phrase generated by a ‘mystery TTS system’ and created 1,300 test phrases from this new voice. This audio set served as training data to fine-tune the Piper AI model on the lashed-up GPU rig. To verify accuracy, [Cal] used OpenAI’s Whisper software to transcribe the audio back to text, in order to compare with the original text corpus. To overcome issues with punctuation and differences between US and UK English, the text was converted into phonemes using espeak-ng, resulting in a 98% phrase matching accuracy. After down-sampling the training set using SoX, it was ready for the Piper TTS training system. Despite all the preparation, running the software felt anticlimactic. A few inconsistencies in the dataset necessitated the removal of some data points. After five days of training parked outside in the shade due to concerns about heat, TensorBoard indicated that the model’s loss function was converging. That’s AI-speak for: the model was tuned and ready for action! We think it sounds pretty slick. If all this new-fangled AI speech synthesis is too complex and, well, a bit creepy for you, may we offer a more 1980s solution to making stuff talk? Finally, most people take the ability to speak for granted, until they can no longer do so. Here’s a team using cutting-edge AI to give people back that ability.",
  "image": "https://hackaday.com/wp-content/uploads/2025/07/IMG_9908-featured.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv id=\"page\"\u003e\n    \n\n    \u003cp\u003e\u003ca href=\"#content\"\u003eSkip to content\u003c/a\u003e\u003c/p\u003e\n\n    \u003cdiv id=\"content\"\u003e\n        \u003cmain id=\"main\" role=\"main\"\u003e\n\n        \n            \n\u003carticle itemscope=\"\" itemtype=\"http://schema.org/Article\" id=\"post-790367\"\u003e\n    \n\n    \u003cdiv itemprop=\"articleBody\"\u003e\n        \u003cp\u003e[Cal Bryant] hacked together a home automation system years ago, which more recently utilizes Piper TTS (text-to-speech) voices for various undisclosed purposes. Not satisfied with the robotic-sounding standard voices available, [Cal] set about an experiment to \u003ca href=\"https://calbryant.uk/blog/training-a-new-voice-for-piper-tts-with-only-a-single-phrase/\" target=\"_blank\"\u003efine-tune the Piper TTS AI voice model using a clone of a single phrase created by a commercial TTS voice as a starting point\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eBefore the release of \u003ca href=\"https://github.com/rhasspy/piper\" target=\"_blank\"\u003ePiper TTS\u003c/a\u003e in 2023, existing free-to-use TTS systems such as \u003ca href=\"https://espeak.sourceforge.net\" target=\"_blank\"\u003eespeak\u003c/a\u003e and \u003ca href=\"https://github.com/festvox/festival\" target=\"_blank\"\u003eFestival\u003c/a\u003e sounded robotic and flat. Piper delivered much more natural-sounding output, without requiring massive resources to run. To change the voice style, the Piper AI model can be either retrained from scratch or fine-tuned with less effort. In the latter case, the problem to be solved first was how to generate the necessary volume of training phrases to run the fine-tuning of Piper’s AI model. This was solved using a heavyweight AI model, ChatterBox, which is capable of so-called zero-shot training. Check out the Chatterbox demo \u003ca href=\"https://huggingface.co/spaces/ResembleAI/Chatterbox\" target=\"_blank\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003cfigure id=\"attachment_790446\" aria-describedby=\"caption-attachment-790446\"\u003e\u003cimg decoding=\"async\" data-attachment-id=\"790446\" data-permalink=\"https://hackaday.com/2025/07/09/how-to-train-a-new-voice-for-piper-with-only-a-single-phrase/lossfn/\" data-orig-file=\"https://hackaday.com/wp-content/uploads/2025/07/lossfn.png\" data-orig-size=\"1051,478\" data-comments-opened=\"1\" data-image-meta=\"{\u0026#34;aperture\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;credit\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;camera\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;caption\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;created_timestamp\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;copyright\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;focal_length\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;iso\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;shutter_speed\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;title\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;orientation\u0026#34;:\u0026#34;0\u0026#34;}\" data-image-title=\"lossfn\" data-image-description=\"\u0026lt;p\u0026gt;https://calbryant.uk/blog/training-a-new-voice-for-piper-tts-with-only-a-single-phrase/#hardware\u0026lt;/p\u0026gt;\n\" data-image-caption=\"\" data-medium-file=\"https://hackaday.com/wp-content/uploads/2025/07/lossfn.png?w=400\" data-large-file=\"https://hackaday.com/wp-content/uploads/2025/07/lossfn.png?w=800\" src=\"https://hackaday.com/wp-content/uploads/2025/07/lossfn.png?w=400\" alt=\"\" width=\"431\" height=\"195\" srcset=\"https://hackaday.com/wp-content/uploads/2025/07/lossfn.png 1051w, https://hackaday.com/wp-content/uploads/2025/07/lossfn.png?resize=250,114 250w, https://hackaday.com/wp-content/uploads/2025/07/lossfn.png?resize=400,182 400w, https://hackaday.com/wp-content/uploads/2025/07/lossfn.png?resize=800,364 800w\" sizes=\"(max-width: 431px) 100vw, 431px\"/\u003e\u003cfigcaption id=\"caption-attachment-790446\"\u003eAs the loss function gets smaller, the model’s accuracy gets better\u003c/figcaption\u003e\u003c/figure\u003e\n\u003cp\u003eTraining began with a corpus of test phrases in text format to ensure decent coverage of everyday English. [Cal] used ChatterBox to clone audio from a \u003ca href=\"https://getyarn.io/yarn-clip/4f49854b-b7c7-44fb-90cc-39d8bbabdc48\" target=\"_blank\"\u003esingle test phrase\u003c/a\u003e generated by a ‘mystery TTS system’ and created 1,300 test phrases from this new voice. This audio set served as training data to fine-tune the Piper AI model on the lashed-up GPU rig.\u003c/p\u003e\n\u003cp\u003eTo verify accuracy, [Cal] used OpenAI’s Whisper software to transcribe the audio back to text, in order to compare with the original text corpus. To overcome issues with punctuation and differences between US and UK English, the text was converted into phonemes using espeak-ng, resulting in a 98% phrase matching accuracy.\u003c/p\u003e\n\u003cp\u003eAfter down-sampling the training set using SoX, it was ready for the Piper TTS training system. Despite all the preparation, running the software felt anticlimactic. A few inconsistencies in the dataset necessitated the removal of some data points. After five days of training parked outside in the shade due to concerns about heat, \u003ca href=\"https://www.tensorflow.org/tensorboard\" target=\"_blank\"\u003eTensorBoard\u003c/a\u003e indicated that the model’s loss function was converging. That’s AI-speak for: the model was tuned and ready for action! We think it sounds pretty slick.\u003c/p\u003e\n\u003cp\u003eIf all this new-fangled AI speech synthesis is too complex and, well, a bit creepy for you, may we offer a \u003ca href=\"https://hackaday.com/2017/02/22/microvox-puts-the-80s-back-into-your-computers-voice/\"\u003emore 1980s solution to making stuff talk\u003c/a\u003e? Finally, most people take the ability to speak for granted, until they can no longer do so. Here’s a team \u003ca href=\"https://hackaday.com/2025/05/01/researchers-create-a-brain-implant-for-near-real-time-speech-synthesis/\"\u003eusing cutting-edge AI to give people back that ability\u003c/a\u003e.\u003c/p\u003e\n\t            \u003c/div\u003e\n    \u003cul\u003e\n    \t\t\t\t\t\u003cli\u003e\n    \t\t\t\t\u003ca href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fhackaday.com%2F2025%2F07%2F09%2Fhow-to-train-a-new-voice-for-piper-with-only-a-single-phrase%2F\" target=\"_blank\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_face.png\"/\u003e \u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\t\t\u003cli\u003e\n                        \u003ca href=\"https://twitter.com/intent/tweet?text=How%20To%20Train%20A%20New%20Voice%20For%20Piper%20With%20Only%20A%20Single%20Phrase%20via%20@hackaday\u0026amp;url=https://hackaday.com/2025/07/09/how-to-train-a-new-voice-for-piper-with-only-a-single-phrase/\" target=\"_blank\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_twitter.png\"/\u003e\u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\t\t\u003cli\u003e\n    \t\t\t\t\u003ca href=\"https://www.linkedin.com/shareArticle?url=https%3A%2F%2Fhackaday.com%2F2025%2F07%2F09%2Fhow-to-train-a-new-voice-for-piper-with-only-a-single-phrase%2F\" target=\"_blank\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_in.png\"/\u003e\u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\t\t\u003cli\u003e\n                \u003ca href=\"mailto:?subject=How+To+Train+A+New+Voice+For+Piper+With+Only+A+Single+Phrase | Hackaday\u0026amp;body=https%3A%2F%2Fhackaday.com%2F2025%2F07%2F09%2Fhow-to-train-a-new-voice-for-piper-with-only-a-single-phrase%2F\"\u003e\n    \t\t\t\t\t\u003ci\u003e\u003cimg src=\"https://hackaday.com/wp-content/themes/hackaday-2/img/share_mail1.png\"/\u003e\u003c/i\u003e\n    \t\t\t\t\t\t\t\t\t\u003c/a\u003e\n    \t\t\t\u003c/li\u003e\n    \t\t\t\u003c/ul\u003e\n    \n\u003c/article\u003e\n\n            \t\n\t\n            \n\n            \n\n\n        \n        \n\n        \n        \n\n        \n        \u003c/main\u003e\n    \u003c/div\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "4 min read",
  "publishedTime": "2025-07-09T23:00:39Z",
  "modifiedTime": "2025-07-09T19:32:04Z"
}
