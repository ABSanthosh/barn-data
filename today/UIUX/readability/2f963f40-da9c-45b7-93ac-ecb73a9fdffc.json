{
  "id": "2f963f40-da9c-45b7-93ac-ecb73a9fdffc",
  "title": "Designing for Serial Task Switching",
  "link": "https://www.nngroup.com/articles/serial-task-switching/?utm_source=rss\u0026utm_medium=feed\u0026utm_campaign=rss-syndication",
  "description": "Serial task switching, or rapidly shifting attention between tasks, is a natural user behavior that lowers productivity and increases stress and the chance of errors.",
  "author": "Megan Chan",
  "published": "Fri, 23 May 2025 17:00:00 +0000",
  "source": "https://www.nngroup.com/feed/rss/",
  "categories": [
    "Article"
  ],
  "byline": "Megan Chan",
  "length": 11780,
  "excerpt": "Serial task switching, or rapidly shifting attention between tasks, is a natural user behavior that lowers productivity and increases stress and the chance of errors.",
  "siteName": "Nielsen Norman Group",
  "favicon": "",
  "text": "Summary:  Serial task switching, or rapidly shifting attention between tasks, is a natural user behavior that lowers productivity and increases stress and the chance of errors. Be honest. How many tabs do you have open right now? If you’re like me, it’s probably more than you’d like to admit. Serial task switching is a natural behavior that has become part of our daily lives, whether you’re jumping between projects or exploring a thought that just popped into your head. Designing for this reality means helping users stay productive, reduce errors as they switch between tasks, and maintain focus when they choose to concentrate on just one. Multitasking on the Web Is a Myth Impact of Task Switching Interface Patterns That Support Task Switching Guidelines to Support Task Switching Multitasking on the Web Is a Myth To understand serial task switching, let’s first clarify what multitasking really means and why it’s often misunderstood. Multitasking is the act of doing two or more tasks at the same time. This is what most people believe they’re doing when they juggle multiple tasks at once, whether they are answering emails while attending a virtual meeting or listening to a podcast while working. The idea of multitasking implies that the brain can effectively manage multiple cognitive tasks in parallel, distributing attention equally across each one. However, research in cognitive science has shown that true multitasking is a myth. When tasks demand similar cognitive resources, our brain cannot process both simultaneously. On the web, even simple tasks, like reading or searching, draw on similar cognitive resources, making it nearly impossible to truly multitask without sacrificing performance. In these cases, we are not multitasking, we are serial task-switching. Serial task-switching is a rapid switch between two or more tasks. Instead of managing both tasks simultaneously, attention shifts between them. With serial task switching, attention is fragmented as we rapidly shift between tasks. Each time we switch tasks, the brain must reset and reacquire the context of the new task, which slows down productivity. Everyone does serial task switching. Serial task switching is a natural part of how we interact with our incredibly busy environments. Impact of Task Switching While constantly shifting between tasks may feel productive, over time, it has several negative effects, including errors, low productivity, and stress. Errors The more we switch between tasks, the more likely we are to make mistakes. We are striving to retain information from both tasks in our limited working memory, so we end up taking into account fewer details from each task, and, as a result, we increase the chance that we’ll ignore something important. For example, writing an email while in a virtual meeting can lead to miscommunications, typos, or missed details in both activities. Error-prevention tools like undo buttons and confirmation dialogs are especially helpful for recovering from mistakes caused by serial task switching. Low Productivity While task switching may feel like you’re getting more done in less time, that is not the case. Many studies (such as the one by Bogdan Vasliescu and colleagues on GitHub multitasking) show that people who switch between many tasks take longer to finish them and produce lower-quality work than those who focus on fewer tasks at a time. Constant interruptions prevent us from entering a flow state, where deep work happens. Users may leave several tasks incomplete or poorly executed instead of finishing multiple tasks quickly. Stress Every time we shift our focus to a different task, the brain has to work a bit harder to refocus and rebuild context. This frequent resetting strains cognitive resources and leaves us feeling overwhelmed. Over time, this cognitive overload makes it hard to concentrate and can lead to stress, as shown by research by Linda Becker and colleagues. Interface Patterns That Support Task Switching Designing for task switching means creating interfaces that accommodate this behavior and help reduce the errors, productivity losses, and stress it can cause. The following examples show how different design solutions can reduce friction when attention is split. Multi-View Interfaces Interfaces that let users keep multiple resources visible at once can reduce the interaction cost of switching between tasks. These designs don’t eliminate the cognitive load of task switching, but they help by reducing the cost of jumping back and forth. Common multi-view interface patterns include split screen and picture-in-picture. Split Screen Some tools allow users to access multiple resources within a platform at once. Platforms like Google Workspace, Microsoft Office, and Zoom use interactive sidebars and extendable windows to enable users to interact with two activities simultaneously. An interactive sidebar offers quick access to multiple tools within the Google Workspace. Here, the user can write an email while referencing their schedule. Beyond split screen in individual tools, operating systems like Windows and MacOS allow users to split their screens or open multiple windows. For instance, a student might follow along with a lecture in one window, while completing an assignment in another window. Dividing cognitive resources between the two will still be inefficient and distracting, but by having both tasks in front of them, they will at least be able to minimize the effort of switching between them. Split-screen functionality across different applications supports task switching by allowing users to engage with multiple screens side by side. Picture-in-Picture Another type of multi-view interface is picture-in-picture. Video platforms offer picture-in-picture mode, which allows video content to remain visible in a small, movable window while users perform other tasks. A user watches a YouTube video in the corner of her screen while simultaneously checking the weather. Running Tasks Simultaneously Another way to support task switching is by allowing users to continue to use the interface while working on tasks that involve a delay, like waiting for a support agent, processing a file, or loading content. Live-chat tools on websites often allow users to keep shopping, reading, or exploring the site while waiting for a chat agent’s response. This minimizes frustration with the chat agent and supports a more productive use of time. Users can continue browsing the SF Travel website while the chat interface loads and responds. Refusing Interruptions It’s natural for attention to fragment, but systems can help users stay on track when they decide it’s time to focus. Features like Do Not Disturb or Focus Mode create a boundary between the user and any potential distractions. By minimizing notifications and external triggers, these tools give users the space to stay engaged. MacOS Focus Mode shields users from potential distractions by temporarily silencing notifications. Notetaking Assistants Catch Details that Users Miss Note-taking assistants give users the option to revisit important aspects of the conversation later when needed. Tools like Otter.ai and Granola help users stay on track by capturing meeting notes, action items, and Q\u0026A automatically. Granola captures meeting notes, action items, and Q\u0026A, making it easy to revisit important details afterwards. Guidelines to Support Task Switching Task switching is part of users’ natural behavior, and interfaces should be designed to support that reality. You don’t need to design an operating system or a full productivity suite to support task switching. Thoughtful design choices in everyday tools can make task switching less stressful and less error-prone. Let Users Arrange Their Workspace Users often have multiple goals within the same tool, such as referencing past work while completing a task or comparing two pieces of information. Flexible, adjustable layouts help support this behavior by reducing the cost of switching between tasks. To do this, allow users to arrange their workspace and keep multiple views open at once through features like split-screen layouts, expandable windows, or side-by-side panels. Another option is to use collapsible sections or accordions to let users access relevant content without overwhelming the interface. Zoom allows users to arrange their workspace by detaching and repositioning panels such as video, chat, polls, and notes. Keep Users Oriented With serial task switching, users often bounce back to an app after only a short interruption. They’re not fully recontextualizing, they just need quick indicators to recognize where they are and what they’re looking at. To keep users oriented, use navigation elements like breadcrumbs and section headers for immediate location awareness. Label buttons and links clearly so users understand the context of the interface and can move forward confidently. These cues minimize errors and help users resume work without needing to think too hard. Framer orients users with breadcrumb tabs at the top of the interface, showing the exact location within the project hierarchy (e.g., Home \u003e Tabs \u003e Button). Allow Tasks to Run in Parallel When users encounter a task with a long wait, allow them to continue to complete other tasks using the interface. Interfaces that support parallel tasks help users stay productive. While designing for parallel tasks, keep tasks that are in progress visible but unobtrusive. Use collapsible popups that remain visible as the user navigates, and avoid blocking important interface elements. In Google Drive, users can continue organizing or browsing files while uploads run in the background. Design for Error Prevention and Recovery Task switching increases the chance of mistakes. Interfaces should include safeguards that help users avoid mistakes and recover when they do occur. To design for error prevention and recovery: Use confirmation dialogs for high-impact actions to help users avoid accidental mistakes. Include undo options for actions like deleting, sending, or submitting, so users can quickly recover from unintended actions. Display clear, actionable error messages that help users understand what went wrong and how to fix it. Provide forgiving defaults, such as autosaving and confirming with users before they exit a page with unsaved changes. These practices will help reduce errors when their attention is divided. Gmail’s Undo Send feature allows users to recover if they act too quickly or miss a detail while task switching. Conclusion Task switching is inevitable in today’s world, where it often feels like a million things are happening at once. Evaluating your own product with task switching in mind can reveal opportunities to reduce friction while task switching and support focus when users decide to give their full attention to one task. By designing with task switching in mind, we can create experiences that adapt to the way people actually work. References Linda Becker, Helena Kaltenegger, Dennis Nowak, Matthias Weigl, and Nicolas Rohleder. 2023. Biological stress responses to multitasking and work interruptions: A randomized controlled trial. Psychoneuroendocrinology, 156, 106358–106358. https://doi.org/10.1016/j.psyneuen.2023.106358 Bogdan Vasilescu, Kelly Blincoe, Qi Xuan, Casey Casalnuovo, Daniela Damian, Premkumar Devanbu, and Vladimir Filkov. 2016. The sky is not the limit: multitasking across GitHub projects. In Proceedings of the 38th International Conference on Software Engineering (ICSE '16). Association for Computing Machinery, New York, NY, USA, 994–1005. https://doi.org/10.1145/2884781.2884875[RB19]",
  "image": "https://media.nngroup.com/media/articles/opengraph_images/Social-Card-Serial-Task-Switching-opengraph.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cp\u003e\u003cspan\u003e\n                  Summary: \n                \u003c/span\u003eSerial task switching, or rapidly shifting attention between tasks, is a natural user behavior that lowers productivity and increases stress and the chance of errors.\n              \u003c/p\u003e\u003cdiv\u003e\n              \u003cp\u003eBe honest. How many tabs do you have open right now? If you’re like me, it’s probably more than you’d like to admit. Serial task switching is a natural behavior that has become part of our daily lives, whether you’re jumping between projects or exploring a thought that just popped into your head. Designing for this reality means helping users stay productive, reduce errors as they switch between tasks, and maintain focus when they choose to concentrate on just one.\u003c/p\u003e\n\u003cdiv\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-multitasking-on-the-web-is-a-myth-1\"\u003eMultitasking on the Web Is a Myth\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-impact-of-task-switching-2\"\u003eImpact of Task Switching\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-interface-patterns-that-support-task-switching-3\"\u003eInterface Patterns That Support Task Switching\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-guidelines-to-support-task-switching-4\"\u003eGuidelines to Support Task Switching\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e\u003ch2 id=\"toc-multitasking-on-the-web-is-a-myth-1\"\u003eMultitasking on the Web Is a Myth\u003c/h2\u003e\n\u003cp\u003eTo understand serial task switching, let’s first clarify what multitasking really means and why it’s often misunderstood.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eMultitasking\u003c/strong\u003e is the act of doing two or more tasks at the same time.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThis is what most people believe they’re doing when they juggle multiple tasks at once, whether they are answering emails while attending a virtual meeting or listening to a podcast while working. The idea of multitasking implies that the brain can effectively manage multiple cognitive tasks in parallel, distributing attention equally across each one. However, research in cognitive science has shown that true multitasking is a myth. \u003cstrong\u003eWhen tasks demand similar cognitive resources, our brain cannot process both simultaneously.\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eOn the web, even simple tasks, like reading or searching, draw on similar cognitive resources, making it nearly impossible to truly multitask without sacrificing performance. \u003cstrong\u003eIn these cases, we are not multitasking, we are serial task-switching.\u003c/strong\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eSerial task-switching\u003c/strong\u003e is a rapid switch between two or more tasks. Instead of managing both tasks simultaneously, attention shifts between them.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eWith serial task switching, attention is fragmented as we rapidly shift between tasks. Each time we switch tasks, the brain must reset and reacquire the context of the new task, which slows down productivity.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eEveryone\u003c/em\u003e\u003c/strong\u003e\u003cstrong\u003e does serial task switching\u003c/strong\u003e. Serial task switching is a natural part of how we interact with our incredibly busy environments.\u003c/p\u003e\n\u003ch2 id=\"toc-impact-of-task-switching-2\"\u003eImpact of Task Switching\u003c/h2\u003e\n\u003cp\u003eWhile constantly shifting between tasks may feel productive, over time, it has several negative effects, including errors, low productivity, and stress.\u003c/p\u003e\n\u003ch3\u003eErrors\u003c/h3\u003e\n\u003cp\u003eThe more we switch between tasks, the more likely we are to make mistakes. We are striving to retain information from both tasks in our limited \u003ca href=\"https://www.nngroup.com/articles/working-memory-external-memory/\"\u003eworking memory\u003c/a\u003e, so we end up taking into account fewer details from each task, and, as a result, we increase the chance that we’ll ignore something important. For example, writing an email while in a virtual meeting can lead to miscommunications, typos, or missed details in both activities. \u003ca href=\"https://www.nngroup.com/articles/slips/\"\u003eError-prevention\u003c/a\u003e tools like undo buttons and \u003ca href=\"https://www.nngroup.com/articles/confirmation-dialog/\"\u003econfirmation dialogs \u003c/a\u003eare especially helpful for recovering from mistakes caused by serial task switching.\u003c/p\u003e\n\u003ch3\u003eLow Productivity\u003c/h3\u003e\n\u003cp\u003eWhile task switching may feel like you’re getting more done in less time, that is not the case. Many studies (such as the one by Bogdan Vasliescu and colleagues on GitHub multitasking) show that people who switch between many tasks take longer to finish them and produce lower-quality work than those who focus on fewer tasks at a time. Constant interruptions prevent us from entering a \u003ca href=\"https://www.nngroup.com/videos/flow-state/\"\u003eflow state\u003c/a\u003e, where deep work happens. Users may leave several tasks incomplete or poorly executed instead of finishing multiple tasks quickly.\u003c/p\u003e\n\u003ch3\u003eStress\u003c/h3\u003e\n\u003cp\u003eEvery time we shift our focus to a different task, the brain has to work a bit harder to refocus and rebuild context. This frequent resetting strains cognitive resources and leaves us feeling overwhelmed. Over time, this cognitive overload makes it hard to concentrate and can lead to stress, as shown by research by Linda Becker and colleagues.\u003c/p\u003e\n\u003ch2 id=\"toc-interface-patterns-that-support-task-switching-3\"\u003eInterface Patterns That Support Task Switching\u003c/h2\u003e\n\u003cp\u003eDesigning for task switching means creating interfaces that accommodate this behavior and help reduce the errors, productivity losses, and stress it can cause. The following examples show how different design solutions can reduce friction when attention is split.\u003c/p\u003e\n\u003ch3\u003eMulti-View Interfaces\u003c/h3\u003e\n\u003cp\u003eInterfaces that let users keep multiple resources visible at once can reduce the \u003ca href=\"https://www.nngroup.com/articles/interaction-cost-definition/\"\u003einteraction cost\u003c/a\u003e of switching between tasks. These designs don’t eliminate the \u003ca href=\"https://www.nngroup.com/articles/minimize-cognitive-load/\"\u003ecognitive load\u003c/a\u003e of task switching, but they help by reducing the cost of jumping back and forth. Common multi-view interface patterns include split screen and picture-in-picture.\u003c/p\u003e\n\u003ch4\u003eSplit Screen\u003c/h4\u003e\n\u003cp\u003eSome tools allow users to access multiple resources within a platform at once. Platforms like Google Workspace, Microsoft Office, and Zoom use interactive sidebars and extendable windows to enable users to interact with two activities simultaneously.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"\" height=\"498\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/05/23/interactivesidebar.png\" width=\"1384px\"/\u003e\n\u003cfigcaption\u003e\u003cem\u003eAn interactive sidebar offers quick access to multiple tools within the Google Workspace. Here, the user can write an email while referencing their schedule.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003cp\u003eBeyond split screen in individual tools, operating systems like Windows and MacOS allow users to split their screens or open multiple windows. For instance, a student might follow along with a lecture in one window, while completing an assignment in another window. Dividing cognitive resources between the two will still be inefficient and distracting, but by having both tasks in front of them, they will at least be able to minimize the effort of switching between them.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"\" height=\"1234\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/05/19/multiview.png\" width=\"1384px\"/\u003e\n\u003cfigcaption\u003e\u003cem\u003eSplit-screen functionality across different applications supports task switching by allowing users to engage with multiple screens side by side.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch4\u003ePicture-in-Picture\u003c/h4\u003e\n\u003cp\u003eAnother type of multi-view interface is picture-in-picture. Video platforms offer picture-in-picture mode, which allows video content to remain visible in a small, movable window while users perform other tasks.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"\" height=\"4320\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/05/19/new-weather-1.png\" width=\"1384px\"/\u003e\n\u003cfigcaption\u003e\u003cem\u003eA user watches a YouTube video in the corner of her screen while simultaneously checking the weather.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch3\u003eRunning Tasks Simultaneously\u003c/h3\u003e\n\u003cp\u003eAnother way to support task switching is by allowing users to continue to use the interface while working on tasks that involve a delay, like waiting for a support agent, processing a file, or loading content. Live-chat tools on websites often allow users to keep shopping, reading, or exploring the site while waiting for a chat agent’s response. This minimizes frustration with the chat agent and supports a more productive use of time.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"\" height=\"2500\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/05/19/parallel-tasks-1.png\" width=\"1384px\"/\u003e\n\u003cfigcaption\u003e\u003cem\u003eUsers can continue browsing the SF Travel website while the chat interface loads and responds. \u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch3\u003eRefusing Interruptions\u003c/h3\u003e\n\u003cp\u003eIt’s natural for attention to fragment, but systems can help users stay on track when they decide it’s time to focus. Features like \u003cem\u003eDo Not Disturb\u003c/em\u003e or \u003cem\u003eFocus Mode\u003c/em\u003e create a boundary between the user and any potential distractions. By minimizing notifications and external triggers, these tools give users the space to stay engaged.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"\" height=\"554\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/05/19/focus-1.png\" width=\"1384px\"/\u003e\n\u003cfigcaption\u003e\u003cem\u003eMacOS Focus Mode shields users from potential distractions by temporarily silencing notifications. \u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch3\u003eNotetaking Assistants Catch Details that Users Miss\u003c/h3\u003e\n\u003cp\u003eNote-taking assistants give users the option to revisit important aspects of the conversation later when needed. Tools like Otter.ai and Granola help users stay on track by capturing meeting notes, action items, and Q\u0026amp;A automatically.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"\" height=\"2400\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/05/19/granola.png\" width=\"1384px\"/\u003e\n\u003cfigcaption\u003e\u003cem\u003eGranola captures meeting notes, action items, and Q\u0026amp;A, making it easy to revisit important details afterwards.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch2 id=\"toc-guidelines-to-support-task-switching-4\"\u003eGuidelines to Support Task Switching\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eTask switching is part of users’ natural behavior, and interfaces should be designed to support that reality.\u003c/strong\u003e You don’t need to design an operating system or a full productivity suite to support task switching. Thoughtful design choices in everyday tools can make task switching less stressful and less error-prone.\u003c/p\u003e\n\u003ch3\u003eLet Users Arrange Their Workspace\u003c/h3\u003e\n\u003cp\u003eUsers often have multiple goals within the same tool, such as referencing past work while completing a task or comparing two pieces of information. Flexible, adjustable layouts help support this behavior by reducing the cost of switching between tasks.\u003c/p\u003e\n\u003cp\u003eTo do this, allow users to arrange their workspace and keep multiple views open at once through features like split-screen layouts, expandable windows, or side-by-side panels. Another option is to use collapsible sections or accordions to let users access relevant content without overwhelming the interface.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"\" height=\"3612\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/05/19/zoom.png\" width=\"1384px\"/\u003e\n\u003cfigcaption\u003e\u003cem\u003eZoom allows users to arrange their workspace by detaching and repositioning panels such as video, chat, polls, and notes.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch3\u003eKeep Users Oriented\u003c/h3\u003e\n\u003cp\u003eWith serial task switching, users often bounce back to an app after only a short interruption. They’re not fully recontextualizing, they just need quick indicators to recognize where they are and what they’re looking at.\u003c/p\u003e\n\u003cp\u003eTo keep users oriented, use navigation elements like \u003ca href=\"https://www.nngroup.com/articles/breadcrumbs/\"\u003ebreadcrumbs\u003c/a\u003e and \u003ca href=\"https://www.nngroup.com/articles/microcontent-how-to-write-headlines-page-titles-and-subject-lines/\"\u003esection headers\u003c/a\u003e for immediate location awareness. \u003ca href=\"https://www.nngroup.com/articles/ui-copy/\"\u003eLabel buttons and links clearly\u003c/a\u003e so users understand the context of the interface and can move forward confidently. These cues minimize errors and help users resume work without needing to think too hard.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"\" height=\"2268\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/05/19/new-framer-1.png\" width=\"1384px\"/\u003e\n\u003cfigcaption\u003e\u003cem\u003eFramer orients users with breadcrumb tabs at the top of the interface, showing the exact location within the project hierarchy (e.g., \u003c/em\u003eHome \u0026gt; Tabs \u0026gt; Button\u003cem\u003e).\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch3\u003eAllow Tasks to Run in Parallel\u003c/h3\u003e\n\u003cp\u003eWhen users encounter a task with a long wait, allow them to continue to complete other tasks using the interface. Interfaces that support parallel tasks help users stay productive.\u003c/p\u003e\n\u003cp\u003eWhile designing for parallel tasks, keep tasks that are in progress visible but unobtrusive. Use collapsible \u003ca href=\"https://www.nngroup.com/articles/ui-elements-glossary/#Lightbox\"\u003epopups\u003c/a\u003e that remain visible as the user navigates, and avoid blocking important interface elements.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"\" height=\"3036\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/05/19/googledrive.png\" width=\"1384px\"/\u003e\n\u003cfigcaption\u003e\u003cem\u003eIn Google Drive, users can continue organizing or browsing files while uploads run in the background.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch3\u003eDesign for Error Prevention and Recovery\u003c/h3\u003e\n\u003cp\u003eTask switching increases the chance of mistakes. Interfaces should include safeguards that help users avoid mistakes and recover when they do occur. To design for error prevention and recovery:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse \u003ca href=\"https://www.nngroup.com/articles/confirmation-dialog/\"\u003econfirmation dialogs\u003c/a\u003e for high-impact actions to help users avoid accidental mistakes.\u003c/li\u003e\n\u003cli\u003eInclude \u003ca href=\"https://www.nngroup.com/articles/user-control-and-freedom/\"\u003eundo options\u003c/a\u003e for actions like deleting, sending, or submitting, so users can quickly recover from unintended actions.\u003c/li\u003e\n\u003cli\u003eDisplay \u003ca href=\"https://www.nngroup.com/articles/error-message-guidelines/\"\u003eclear, actionable error messages\u003c/a\u003e that help users understand what went wrong and how to fix it.\u003c/li\u003e\n\u003cli\u003eProvide forgiving defaults, such as autosaving and confirming with users before they exit a page with unsaved changes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThese practices will help reduce errors when their attention is divided.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"\" height=\"1260\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/05/19/undo.png\" width=\"1384px\"/\u003e\n\u003cfigcaption\u003e\u003cem\u003eGmail’s \u003c/em\u003eUndo Send\u003cem\u003e feature allows users to recover if they act too quickly or miss a detail while task switching.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch3\u003eConclusion\u003c/h3\u003e\n\u003cp\u003eTask switching is inevitable in today’s world, where it often feels like a million things are happening at once. Evaluating your own product with task switching in mind can reveal opportunities to reduce friction while task switching and support focus when users decide to give their full attention to one task. By designing with task switching in mind, we can create experiences that adapt to the way people actually work.\u003c/p\u003e\n\u003ch3\u003eReferences\u003c/h3\u003e\n\u003cp\u003eLinda Becker, Helena Kaltenegger, Dennis Nowak, Matthias Weigl, and Nicolas Rohleder. 2023. Biological stress responses to multitasking and work interruptions: A randomized controlled trial. \u003cem\u003ePsychoneuroendocrinology,\u003c/em\u003e 156, 106358–106358. \u003ca href=\"https://doi.org/10.1016/j.psyneuen.2023.106358\"\u003ehttps://doi.org/10.1016/j.psyneuen.2023.106358\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBogdan Vasilescu, Kelly Blincoe, Qi Xuan, Casey Casalnuovo, Daniela Damian, Premkumar Devanbu, and Vladimir Filkov. 2016. The sky is not the limit: multitasking across GitHub projects. In \u003cem\u003eProceedings of the 38th International Conference on Software Engineering (ICSE \u0026#39;16)\u003c/em\u003e. Association for Computing Machinery, New York, NY, USA, 994–1005. \u003ca href=\"https://doi.org/10.1145/2884781.2884875\"\u003ehttps://doi.org/10.1145/2884781.2884875\u003c/a\u003e\u003ca href=\"#_msocom_19\"\u003e[RB19]\u003c/a\u003e \u003c/p\u003e\n            \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "13 min read",
  "publishedTime": "2025-05-23T17:00:00Z",
  "modifiedTime": null
}
