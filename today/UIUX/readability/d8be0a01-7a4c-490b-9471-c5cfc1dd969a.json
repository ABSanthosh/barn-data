{
  "id": "d8be0a01-7a4c-490b-9471-c5cfc1dd969a",
  "title": "Avoiding UX malpractice",
  "link": "https://uxdesign.cc/avoiding-ux-malpractice-28035c07dffa?source=rss----138adf9c44c---4",
  "description": "",
  "author": "Jon Daiello",
  "published": "Wed, 18 Jun 2025 11:42:36 GMT",
  "source": "https://uxdesign.cc/feed",
  "categories": [
    "design",
    "product-design",
    "design-thinking",
    "ux",
    "user-experience"
  ],
  "byline": "Jon Daiello",
  "length": 14993,
  "excerpt": "You walk into a doctor’s office with sharp stomach pain. You describe your symptoms in great detail, outlining all the issues and how they’re impacting you. The doctor patiently listens, then says…",
  "siteName": "UX Collective",
  "favicon": "https://miro.medium.com/v2/resize:fill:256:256/1*dn6MbbIIlwobt0jnUcrt_Q.png",
  "text": "Avoiding UX malpracticeYou walk into a doctor’s office with sharp stomach pain. You describe your symptoms in great detail, outlining all the issues and how they’re impacting you. The doctor patiently listens, then says, “I have just the thing. BRB.” After a few moments, the doc returns and hands you a little bottle. “Try this,” they say. “It works for most people.” You look at the bottle, and it’s a basic, over the counter pain killer.You leave with that bottle and a weird feeling in your gut (both literal and metaphorical). Sure, this might dull the pain, but does it really solve it? What if the real issue isn’t temporary? Or it’s something deeper that needs more than a brief description to understand?But it gets worse. No matter how many times you go back to that doctor, you keep getting the same bottle handed to you.Or, you might have the other extreme: you visit a doctor for a mild rash. You’re not sure what’s going on. So you see your doctor and they say, “Well, we can cut it off.” Cut it off? Does it need to be cut off? That’s serious business! And, when you visit them next because your head cold isn’t going away, they recommend the same treatment plan: “Let’s just cut that part of your face and head off.”I’d bet you won’t keep going back to that doctor.How to apply diagnosis methods in UX design.This example is incredibly extreme. It’s absurd. But, I wanted to get the point across because we see similar absurdities all the time in the world of digital experience design.A team spots a problem — conversion drop, user confusion, customer dissatisfaction — and designers will reach for their favorite tool to diagnose and solve the problem. It feels like progress. But it’s often a poor fit for the kind of problem they’re dealing with. Sure, we have our fancy problem statement, but we haven’t understood the type of problem it is. We understand the symptoms. Now we need a diagnosis.That’s why I keep coming back to time-tested Elements of User Experience by Jesse James Garrett . They’re fantastic as definitions. But they also work as a great diagnostic framework. It helps us figure out where a UX problem actually lives, so we can apply the right methods, the right tools, and the best match of design artifacts to focus on.Why We Default to Tools, Not DiagnosisAs designers, we love to do. Give us a problem and we want to open Figma and build a prototype. Making things feels good. It feels productive. And feeling productive is what we often thrive on.But just because we’re producing artifacts doesn’t mean we’re understanding the right problem and problem type to solve.Pain blockers don’t resolve the problem, they just mask it.Over the years, we’ve developed our favorite tools, the ones we are comfortable with, the ones we keep as our “secret weapon”. Too often, when we’re faced with a problem, our reflex is to grab for that favorite tool that we know and love…usually one tied to the skeleton or surface or some other layer of the user experience. Then, without checking to see if it fits the problem, we plow ahead and wind up spinning our wheels at some point. The hammer might be shiny, but that doesn’t make it the right tool for driving a screw.That’s why we need to slow down and diagnose the type of problem we’re dealing with. Take that problem statement and understand the context and what’s really behind it. Garrett’s layered model gives us a clear frame for our problems.The Five Layers, Reframed for DiagnosisThink of the five layers (strategy, scope, structure, skeleton, surface) as a kind of UX diagnosis tool. They give you criteria to examine the experience and identify where things might be breaking down. And once you know the type of problem, you can decide which tools, artifacts, and processes are appropriate.Each layer comes with its own symptoms, signals, and tools. Let’s take a quick peek:Utilizing the Elements of User Experience to diagnose UX problemsStrategy LayerThis is the foundation of everything. This is where you find the value match between what the business offers and the users want. The product exists because there should be a mutually beneficial relationship between these two.SymptomsYou’re launching a new product and can’t seem to gain a profitable user base.Your product has seen subscriptions declining steadily for the past 2 years.Ask YourselfDoes the value of the product fit the market you’re going after?Is your pricing model sustainable?Has our market shifted?What data do we have on our user and market needs?ToolsJobs-to-be-DoneBusiness Model CanvasValue Proposition CanvasIf this layer isn’t formed, clear, and communicated, everything above it will fail. Period. Overlook this layer to the peril of your product or project.Scope LayerThis is where your strategy becomes a plan. It’s about defining what the product should do. And, just as importantly, what it shouldn’t. This is where your value becomes defined as concrete features and functions that a user can interact with.SymptomsUnclear requirements that shift constantlyPressure to design before understanding what you’re buildingTeams building features that don’t ladder up to user or business goalsStakeholders asking “Can we also add…” without understanding tradeoffsFeatures that are disconnected and don’t compound value to the user.Ask YourselfWhat are the boundaries of this experience? Are we solving the right parts of the problem?What specific capabilities does this product need to deliver on our strategy?What are we explicitly NOT building, and why?How do these features connect to create a cohesive experience?ToolsJourney mapsService blueprintsObject-oriented UX (OOUX) mappingUser story mappingCompetitive analysisMany teams try to structure flows without having clarified the scope. That’s like laying out floor plans without knowing how many rooms you need. If you find yourself constantly redesigning the same screens or if stakeholders keep asking for “one more feature,” you’re probably dealing with a scope problem, not a design execution problem. Get clear on what you’re building before you figure out how to build it.Structure LayerThis is where we define how users move through the experience. It’s the bones of the navigation, flow, and logical relationships. This layer encompasses both information architecture (how content and features are organized) and interaction design (how users move between and within those organized spaces).Symptoms:Users drop off mid-flow or abandon tasks partway through.High bounce rates on key pages or screens.Users taking unexpected paths through your product.Complaints about not being able to find things.Analytics showing users repeatedly visiting the same pages without progressing.Support tickets asking “How do I…” for basic tasks.Ask YourselfDoes the experience have a clear and usable shape?Can users predict where actions will take them?Are we organizing information in a way that matches user expectations?Do the interaction patterns feel consistent and predictable?Are we asking users to make decisions without enough context?ToolsInformation architecture diagrams including site maps and navigation models.Content modeling and taxonomy work.Wireflows that show both layout and flow.Task flows and user flows.Process flows for complex multi-step interactions.If you’re getting feedback like “I didn’t know where to go next” or “I can never find what I’m looking for,” this is the layer to investigate. Many teams jump straight to redesigning interfaces when the real issue is that the underlying structure doesn’t make sense to users. You can move information around if you redesign enough screens, but it’s far more efficient to fix the arrangement of the bones before you worry about the skin.Skeleton LayerThere is where we finally enter layout, interface patterns, and interaction design at the screen and component level. This is the layer where you start creating pictures of what a user might see. It’s visual and functional. It’s the arrangement of elements and the specific ways users interact with them.SymptomsUsers can complete tasks, but it takes longer than expected.High abandonment rates in workflows or tasks.Users frequently click the wrong buttons or controls.Users miss important information that’s technically “on the page.”Complaints about interfaces feeling cluttered or overwhelming.Inconsistent interaction patterns across similar functions.Users struggle with form completion or data entry tasks.Ask YourselfDoes the user flow have a smooth progression?Is this screen structured in a way that supports the task efficiently?Are the most important actions and information prominent?Do interactive elements look and behave consistently?Are we following established interaction patterns users expect?Is the layout optimized for the user’s context and device?ToolsUser flow diagrams based on service blueprints and user journeys.Wireframes and low-fidelity prototypes.Heuristic evaluations and expert reviews.Component libraries and design systems.Usability testing focused on task completion.Click tracking and heat map analysis.A/B testing of layout variations.If the flow makes sense but users stumble on individual screens or interactions, you’re dealing with skeleton issues. This layer is about making the good structure you’ve built usable and efficient. Users should easily progress through steps in a flow. They shouldn’t have to think hard about how to use your interface. It should feel obvious.Surface LayerThis is the final coat of paint. It’s the veneer that people perceive on top of everything else we’ve explored so far. This is the visual design, typography, color, imagery, and aesthetic polish that users actually see and touch. This is where usability is optimized, and your brand can visually resonate with your audience. But don’t mistake “final” for “least important”. Surface problems can destroy trust and credibility instantly. Likewise, this final layer has nothing to stand on if the previous layers aren’t solid.SymptomsUsers express lack of trust or credibility concerns.Brand recognition problems or misalignment with company identity.Accessibility complaints about contrast, readability, or visual clarity.Users perceive the product as outdated, unprofessional, or “cheap”.Users miss important information due to poor visual emphasis.Different emotional response than intended.Ask YourselfDoes this look and feel professional and trustworthy?Is our brand clearly represented?Are we meeting WCAG standards for visual elements?Does the visual hierarchy support the functional hierarchy?Are we fostering the right emotional response?Is the aesthetic appropriate for our users and context?ToolsVisual frameworks like PARC, gestalt principles, and color theory.Brand guidelines and visual identity frameworks.Design systems and style guides.Illustration libraries and micro-animations.Accessibility audits for visual elements.First impression testing and aesthetic usability studies.Surface layer problems are real UX problems, not just “making things pretty.” But they aren’t the only UX problems. They’re the ones that we “see” most easily. When users don’t trust your product because it looks unprofessional, or when they can’t read your text because of poor contrast, that’s a user experience failure. The key is making sure you’re actually solving surface problems, not using surface solutions for deeper structural issues.Some Practical ExamplesLet’s look at some hypothetical scenarios and apply some diagnosis questions based on the layers:“Our checkout abandonment rate is terrible.” → This might sound like a surface problem, but dig a little deeper. Is the checkout process asking for too much information too early (scope)? Are users getting lost in a confusing multi-step flow (structure)? Or are your product costs so high that no amount of pretty buttons will help (strategy)?“Adoption for our new feature is extremely low. Let’s add more tooltips and help text.” → Feels like a skeleton problem, more guidance should help, right? But if users fundamentally don’t value the feature, you’ve got a scope problem. No amount of visual polish will compel them to use it.“Designers want to rebuild the entire app because it looks old.” → This opinion-based diagnosis is focused on the surface. But if your data shows declining user engagement, ask whether the underlying product strategy still matches market needs. Sometimes “it looks old” is really “it doesn’t meet the needs anymore.” Both may be needed, but don’t confuse value for a brand problem. They are different levels of problems to solve for.“Our onboarding completion rate dropped after we added that new step.” → Teams often jump to structure solutions, “Let’s optimize the flow!” But maybe you’re asking users to do something that doesn’t align with their goals at that moment (scope issue), or maybe the step feels pointless because it doesn’t provide any value to users (strategy problem).When teams misdiagnose, they often end up wasting time on inefficient methods of problem-solving. You may still arrive at a solution, but in a roundabout way. Applying surface and skeleton solutions to strategy and scope problems means a lot of extra work. You ship one or two changes, but symptoms keep coming back because you’re treating the wrong layer.Becoming a Better UX DoctorRemember that doctor? The one handing out generic pain killers for every ailment, or recommending surgery for a simple rash? Simply treating the surface of the presented problem? Yeah, I wouldn’t go to them after the 2nd or 3rd visit once I realized what was going on.The best doctors don’t immediately reach for their favorite prescription. They spend time gathering data and creating a diagnosis first. They ask questions, run tests, and understand the root cause before recommending treatment. They know that the same symptom (like a headache) could be caused by a variety of issues. The treatment depends entirely on the diagnosis. The diagnosis depends entirely on data available to inform the diagnosis. A proper diagnosis leads to proper treatment.Spend time diagnosing the problem.As UX professionals, we need to be more like good doctors. When someone comes to us with “users are confused” or “conversion is low,” our first instinct shouldn’t be to grab our favorite “design treatment”. We should ask: I wonder what layers this problem lives in?Since users perceive everything through the surface layer, it takes some time and analysis to get the diagnosis right. Garrett’s five layers give us a great framework to slow down, investigate, and prescribe the right treatment. Sometimes that treatment is a comprehensive strategy refresh. Sometimes it’s a simple interface tweak. The magic is in knowing the difference.Because the last thing we want is UX malpractice. The one who keeps prescribing the same solution regardless of the actual problem. Your users (and your stakeholders) deserve better diagnosis than that…whether they follow it or not.",
  "image": "https://miro.medium.com/v2/resize:fit:1146/1*sp4_jY1TasmCMuMSy4Qspg.jpeg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cp\u003e\u003ch2 id=\"bd2e\" data-testid=\"storyTitle\"\u003e\u003cstrong\u003eAvoiding UX malpractice\u003c/strong\u003e\u003c/h2\u003e\u003c/p\u003e\u003cp id=\"538e\"\u003eYou walk into a doctor’s office with sharp stomach pain. You describe your symptoms in great detail, outlining all the issues and how they’re impacting you. The doctor patiently listens, then says, “I have just the thing. BRB.” After a few moments, the doc returns and hands you a little bottle. “Try this,” they say. “It works for most people.” You look at the bottle, and it’s a basic, over the counter pain killer.\u003c/p\u003e\u003cp id=\"c03f\"\u003eYou leave with that bottle and a weird feeling in your gut (both literal and metaphorical). Sure, this might dull the pain, but does it really solve it? What if the real issue isn’t temporary? Or it’s something deeper that needs more than a brief description to understand?\u003c/p\u003e\u003cp id=\"aa51\"\u003eBut it gets worse. No matter how many times you go back to that doctor, you keep getting the same bottle handed to you.\u003c/p\u003e\u003cp id=\"1160\"\u003eOr, you might have the other extreme: you visit a doctor for a mild rash. You’re not sure what’s going on. So you see your doctor and they say, “Well, we can cut it off.” Cut it off? Does it need to be cut off? That’s serious business! And, when you visit them next because your head cold isn’t going away, they recommend the same treatment plan: “Let’s just cut that part of your face and head off.”\u003c/p\u003e\u003cp id=\"c325\"\u003eI’d bet you won’t keep going back to that doctor.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eHow to apply diagnosis methods in UX design.\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"185a\"\u003eThis example is incredibly extreme. It’s absurd. But, I wanted to get the point across because we see similar absurdities all the time in the world of digital experience design.\u003c/p\u003e\u003cp id=\"5900\"\u003eA team spots a problem — conversion drop, user confusion, customer dissatisfaction — and designers will reach for their favorite tool to diagnose and solve the problem. It feels like progress. But it’s often a poor fit for the kind of problem they’re dealing with. Sure, we have our fancy problem statement, but we haven’t understood the type of problem it is. We understand the symptoms. Now we need a diagnosis.\u003c/p\u003e\u003cp id=\"528d\"\u003eThat’s why I keep coming back to time-tested \u003ca href=\"https://www.jondaiello.com/book-reviews/the-elements-of-user-experience\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cem\u003eElements of User Experience\u003c/em\u003e\u003c/a\u003e\u003cem\u003e \u003c/em\u003eby\u003cem\u003e \u003c/em\u003eJesse James Garrett . They’re fantastic as definitions. But they also work as a great diagnostic framework. It helps us figure out where a UX problem \u003cem\u003eactually\u003c/em\u003e lives, so we can apply the right methods, the right tools, and the best match of design artifacts to focus on.\u003c/p\u003e\u003ch2 id=\"8278\"\u003e\u003cstrong\u003eWhy We Default to Tools, Not Diagnosis\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"2648\"\u003eAs designers, we love to \u003cem\u003edo\u003c/em\u003e. Give us a problem and we want to open Figma and build a prototype. Making things feels good. It feels productive. And feeling productive is what we often thrive on.\u003c/p\u003e\u003cp id=\"ec37\"\u003eBut just because we’re producing artifacts doesn’t mean we’re understanding the right problem and problem type to solve.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003ePain blockers don’t resolve the problem, they just mask it.\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"2c3d\"\u003eOver the years, we’ve developed our favorite tools, the ones we are comfortable with, the ones we keep as our “secret weapon”. Too often, when we’re faced with a problem, our reflex is to grab for that favorite tool that we know and love…usually one tied to the skeleton or surface or some other layer of the user experience. Then, without checking to see if it fits the problem, we plow ahead and wind up spinning our wheels at some point. The hammer might be shiny, but that doesn’t make it the right tool for driving a screw.\u003c/p\u003e\u003cp id=\"4fdc\"\u003eThat’s why we need to slow down and diagnose the type of problem we’re dealing with. Take that problem statement and understand the context and what’s really behind it. Garrett’s layered model gives us a clear frame for our problems.\u003c/p\u003e\u003ch2 id=\"b0fc\"\u003e\u003cstrong\u003eThe Five Layers, Reframed for Diagnosis\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"cb91\"\u003eThink of the five layers (strategy, scope, structure, skeleton, surface) as a kind of UX diagnosis tool. They give you criteria to examine the experience and identify where things might be breaking down. And once you know the type of problem, you can decide\u003cem\u003e \u003c/em\u003ewhich tools, artifacts, and processes are appropriate.\u003c/p\u003e\u003cp id=\"f194\"\u003eEach layer comes with its own symptoms, signals, and tools. Let’s take a quick peek:\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eUtilizing the Elements of User Experience to diagnose UX problems\u003c/figcaption\u003e\u003c/figure\u003e\u003ch2 id=\"b90c\"\u003e\u003cstrong\u003eStrategy Layer\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"e84a\"\u003eThis is the foundation of everything. This is where you find the value match between what the business offers and the users want. The product exists because there should be a mutually beneficial relationship between these two.\u003c/p\u003e\u003cp id=\"27c5\"\u003e\u003cstrong\u003eSymptoms\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"785b\"\u003eYou’re launching a new product and can’t seem to gain a profitable user base.\u003c/li\u003e\u003cli id=\"3b92\"\u003eYour product has seen subscriptions declining steadily for the past 2 years.\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"634f\"\u003e\u003cstrong\u003eAsk Yourself\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"bfd3\"\u003eDoes the value of the product fit the market you’re going after?\u003c/li\u003e\u003cli id=\"8a3f\"\u003eIs your pricing model sustainable?\u003c/li\u003e\u003cli id=\"3077\"\u003eHas our market shifted?\u003c/li\u003e\u003cli id=\"496b\"\u003eWhat data do we have on our user and market needs?\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"59b7\"\u003e\u003cstrong\u003eTools\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"ddd9\"\u003eJobs-to-be-Done\u003c/li\u003e\u003cli id=\"6610\"\u003eBusiness Model Canvas\u003c/li\u003e\u003cli id=\"3069\"\u003eValue Proposition Canvas\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"0220\"\u003eIf this layer isn’t formed, clear, and communicated, everything above it will fail. Period. Overlook this layer to the peril of your product or project.\u003c/p\u003e\u003ch2 id=\"9303\"\u003e\u003cstrong\u003eScope Layer\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"54aa\"\u003eThis is where your strategy becomes a plan. It’s about defining what the product \u003cem\u003eshould\u003c/em\u003e do. And, just as importantly, what it shouldn’t. This is where your value becomes defined as concrete features and functions that a user can interact with.\u003c/p\u003e\u003cp id=\"576f\"\u003e\u003cstrong\u003eSymptoms\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"e6a8\"\u003eUnclear requirements that shift constantly\u003c/li\u003e\u003cli id=\"ba19\"\u003ePressure to design before understanding what you’re building\u003c/li\u003e\u003cli id=\"9411\"\u003eTeams building features that don’t ladder up to user or business goals\u003c/li\u003e\u003cli id=\"d5cb\"\u003eStakeholders asking “Can we also add…” without understanding tradeoffs\u003c/li\u003e\u003cli id=\"4784\"\u003eFeatures that are disconnected and don’t compound value to the user.\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"4609\"\u003e\u003cstrong\u003eAsk Yourself\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"bde5\"\u003eWhat are the boundaries of this experience? Are we solving the right parts of the problem?\u003c/li\u003e\u003cli id=\"8bdc\"\u003eWhat specific capabilities does this product need to deliver on our strategy?\u003c/li\u003e\u003cli id=\"20f9\"\u003eWhat are we explicitly NOT building, and why?\u003c/li\u003e\u003cli id=\"9edc\"\u003eHow do these features connect to create a cohesive experience?\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"d123\"\u003e\u003cstrong\u003eTools\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"e9d2\"\u003eJourney maps\u003c/li\u003e\u003cli id=\"d870\"\u003eService blueprints\u003c/li\u003e\u003cli id=\"0e63\"\u003eObject-oriented UX (OOUX) mapping\u003c/li\u003e\u003cli id=\"2156\"\u003eUser story mapping\u003c/li\u003e\u003cli id=\"7622\"\u003eCompetitive analysis\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"f9d1\"\u003eMany teams try to structure flows without having clarified the scope. That’s like laying out floor plans without knowing how many rooms you need. If you find yourself constantly redesigning the same screens or if stakeholders keep asking for “one more feature,” you’re probably dealing with a scope problem, not a design execution problem. Get clear on what you’re building before you figure out how to build it.\u003c/p\u003e\u003ch2 id=\"690b\"\u003e\u003cstrong\u003eStructure Layer\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"154f\"\u003eThis is where we define how users move through the experience. It’s the bones of the navigation, flow, and logical relationships. This layer encompasses both information architecture (how content and features are organized) and interaction design (how users move between and within those organized spaces).\u003c/p\u003e\u003cp id=\"9334\"\u003e\u003cstrong\u003eSymptoms:\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"fbb7\"\u003eUsers drop off mid-flow or abandon tasks partway through.\u003c/li\u003e\u003cli id=\"8a78\"\u003eHigh bounce rates on key pages or screens.\u003c/li\u003e\u003cli id=\"d8f6\"\u003eUsers taking unexpected paths through your product.\u003c/li\u003e\u003cli id=\"8be3\"\u003eComplaints about not being able to find things.\u003c/li\u003e\u003cli id=\"d204\"\u003eAnalytics showing users repeatedly visiting the same pages without progressing.\u003c/li\u003e\u003cli id=\"ac74\"\u003eSupport tickets asking “How do I…” for basic tasks.\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"b017\"\u003e\u003cstrong\u003eAsk Yourself\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"4724\"\u003eDoes the experience have a clear and usable shape?\u003c/li\u003e\u003cli id=\"2640\"\u003eCan users predict where actions will take them?\u003c/li\u003e\u003cli id=\"118a\"\u003eAre we organizing information in a way that matches user expectations?\u003c/li\u003e\u003cli id=\"052d\"\u003eDo the interaction patterns feel consistent and predictable?\u003c/li\u003e\u003cli id=\"4b2b\"\u003eAre we asking users to make decisions without enough context?\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"8bbc\"\u003e\u003cstrong\u003eTools\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"61e5\"\u003eInformation architecture diagrams including site maps and navigation models.\u003c/li\u003e\u003cli id=\"e2f3\"\u003eContent modeling and taxonomy work.\u003c/li\u003e\u003cli id=\"4fae\"\u003eWireflows that show both layout and flow.\u003c/li\u003e\u003cli id=\"e696\"\u003eTask flows and user flows.\u003c/li\u003e\u003cli id=\"d2d0\"\u003eProcess flows for complex multi-step interactions.\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"594e\"\u003eIf you’re getting feedback like “I didn’t know where to go next” or “I can never find what I’m looking for,” this is the layer to investigate. Many teams jump straight to redesigning interfaces when the real issue is that the underlying structure doesn’t make sense to users. You can move information around if you redesign enough screens, but it’s far more efficient to fix the arrangement of the bones before you worry about the skin.\u003c/p\u003e\u003ch2 id=\"29fc\"\u003e\u003cstrong\u003eSkeleton Layer\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"c41c\"\u003eThere is where we finally enter layout, interface patterns, and interaction design at the screen and component level. This is the layer where you start creating pictures of what a user might see. It’s visual and functional. It’s the arrangement of elements and the specific ways users interact with them.\u003c/p\u003e\u003cp id=\"4fc9\"\u003e\u003cstrong\u003eSymptoms\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"a7b9\"\u003eUsers can complete tasks, but it takes longer than expected.\u003c/li\u003e\u003cli id=\"18f2\"\u003eHigh abandonment rates in workflows or tasks.\u003c/li\u003e\u003cli id=\"3934\"\u003eUsers frequently click the wrong buttons or controls.\u003c/li\u003e\u003cli id=\"514a\"\u003eUsers miss important information that’s technically “on the page.”\u003c/li\u003e\u003cli id=\"7770\"\u003eComplaints about interfaces feeling cluttered or overwhelming.\u003c/li\u003e\u003cli id=\"34ba\"\u003eInconsistent interaction patterns across similar functions.\u003c/li\u003e\u003cli id=\"7d7a\"\u003eUsers struggle with form completion or data entry tasks.\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"f5ba\"\u003e\u003cstrong\u003eAsk Yourself\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"4710\"\u003eDoes the user flow have a smooth progression?\u003c/li\u003e\u003cli id=\"83c0\"\u003eIs this screen structured in a way that supports the task efficiently?\u003c/li\u003e\u003cli id=\"5b0d\"\u003eAre the most important actions and information prominent?\u003c/li\u003e\u003cli id=\"0993\"\u003eDo interactive elements look and behave consistently?\u003c/li\u003e\u003cli id=\"ac2e\"\u003eAre we following established interaction patterns users expect?\u003c/li\u003e\u003cli id=\"2753\"\u003eIs the layout optimized for the user’s context and device?\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"08e5\"\u003e\u003cstrong\u003eTools\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"114f\"\u003eUser flow diagrams based on service blueprints and user journeys.\u003c/li\u003e\u003cli id=\"1a53\"\u003eWireframes and low-fidelity prototypes.\u003c/li\u003e\u003cli id=\"3566\"\u003eHeuristic evaluations and expert reviews.\u003c/li\u003e\u003cli id=\"4c4c\"\u003eComponent libraries and design systems.\u003c/li\u003e\u003cli id=\"e84e\"\u003eUsability testing focused on task completion.\u003c/li\u003e\u003cli id=\"805e\"\u003eClick tracking and heat map analysis.\u003c/li\u003e\u003cli id=\"3845\"\u003eA/B testing of layout variations.\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"24b0\"\u003eIf the flow makes sense but users stumble on individual screens or interactions, you’re dealing with skeleton issues. This layer is about making the good structure you’ve built usable and efficient. Users should easily progress through steps in a flow. They shouldn’t have to think hard about how to use your interface. It should feel obvious.\u003c/p\u003e\u003ch2 id=\"4bd0\"\u003e\u003cstrong\u003eSurface Layer\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"b933\"\u003eThis is the final coat of paint. It’s the veneer that people perceive on top of everything else we’ve explored so far. This is the visual design, typography, color, imagery, and aesthetic polish that users actually see and touch. This is where usability is optimized, and your brand can visually resonate with your audience. But don’t mistake “final” for “least important”. Surface problems can destroy trust and credibility instantly. Likewise, this final layer has nothing to stand on if the previous layers aren’t solid.\u003c/p\u003e\u003cp id=\"5025\"\u003e\u003cstrong\u003eSymptoms\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"2638\"\u003eUsers express lack of trust or credibility concerns.\u003c/li\u003e\u003cli id=\"deeb\"\u003eBrand recognition problems or misalignment with company identity.\u003c/li\u003e\u003cli id=\"2004\"\u003eAccessibility complaints about contrast, readability, or visual clarity.\u003c/li\u003e\u003cli id=\"2093\"\u003eUsers perceive the product as outdated, unprofessional, or “cheap”.\u003c/li\u003e\u003cli id=\"6a77\"\u003eUsers miss important information due to poor visual emphasis.\u003c/li\u003e\u003cli id=\"a5fc\"\u003eDifferent emotional response than intended.\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"5345\"\u003e\u003cstrong\u003eAsk Yourself\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"d3b5\"\u003eDoes this look and feel professional and trustworthy?\u003c/li\u003e\u003cli id=\"e0f8\"\u003eIs our brand clearly represented?\u003c/li\u003e\u003cli id=\"f616\"\u003eAre we meeting WCAG standards for visual elements?\u003c/li\u003e\u003cli id=\"c3d9\"\u003eDoes the visual hierarchy support the functional hierarchy?\u003c/li\u003e\u003cli id=\"7135\"\u003eAre we fostering the right emotional response?\u003c/li\u003e\u003cli id=\"9c9b\"\u003eIs the aesthetic appropriate for our users and context?\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"bd64\"\u003e\u003cstrong\u003eTools\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli id=\"aaba\"\u003eVisual frameworks like PARC, gestalt principles, and color theory.\u003c/li\u003e\u003cli id=\"b640\"\u003eBrand guidelines and visual identity frameworks.\u003c/li\u003e\u003cli id=\"74ea\"\u003eDesign systems and style guides.\u003c/li\u003e\u003cli id=\"1c56\"\u003eIllustration libraries and micro-animations.\u003c/li\u003e\u003cli id=\"aa3a\"\u003eAccessibility audits for visual elements.\u003c/li\u003e\u003cli id=\"866a\"\u003eFirst impression testing and aesthetic usability studies.\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"8246\"\u003eSurface layer problems are real UX problems, not just “making things pretty.” But they aren’t the only UX problems. They’re the ones that we “see” most easily. When users don’t trust your product because it looks unprofessional, or when they can’t read your text because of poor contrast, that’s a user experience failure. The key is making sure you’re actually solving surface problems, not using surface solutions for deeper structural issues.\u003c/p\u003e\u003ch2 id=\"83dd\"\u003e\u003cstrong\u003eSome Practical Examples\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"4c3a\"\u003eLet’s look at some hypothetical scenarios and apply some diagnosis questions based on the layers:\u003c/p\u003e\u003cul\u003e\u003cli id=\"bf11\"\u003e\u003cstrong\u003e“Our checkout abandonment rate is terrible.”\u003c/strong\u003e → This might sound like a surface problem, but dig a little deeper. Is the checkout process asking for too much information too early (scope)? Are users getting lost in a confusing multi-step flow (structure)? Or are your product costs so high that no amount of pretty buttons will help (strategy)?\u003c/li\u003e\u003cli id=\"4dbf\"\u003e\u003cstrong\u003e“Adoption for our new feature is extremely low. Let’s add more tooltips and help text.”\u003c/strong\u003e → Feels like a skeleton problem, more guidance should help, right? But if users fundamentally don’t value the feature, you’ve got a scope problem. No amount of visual polish will compel them to use it.\u003c/li\u003e\u003cli id=\"a7f5\"\u003e\u003cstrong\u003e“Designers want to rebuild the entire app because it looks old.”\u003c/strong\u003e → This opinion-based diagnosis is focused on the surface. But if your data shows declining user engagement, ask whether the underlying product strategy still matches market needs. Sometimes “it looks old” is really “it doesn’t meet the needs anymore.” Both may be needed, but don’t confuse value for a brand problem. They are different levels of problems to solve for.\u003c/li\u003e\u003cli id=\"3419\"\u003e\u003cstrong\u003e“Our onboarding completion rate dropped after we added that new step.”\u003c/strong\u003e → Teams often jump to structure solutions, “Let’s optimize the flow!” But maybe you’re asking users to do something that doesn’t align with their goals at that moment (scope issue), or maybe the step feels pointless because it doesn’t provide any value to users (strategy problem).\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"75af\"\u003eWhen teams misdiagnose, they often end up wasting time on inefficient methods of problem-solving. You may still arrive at a solution, but in a roundabout way. Applying surface and skeleton solutions to strategy and scope problems means a lot of extra work. You ship one or two changes, but symptoms keep coming back because you’re treating the wrong layer.\u003c/p\u003e\u003ch2 id=\"80ad\"\u003e\u003cstrong\u003eBecoming a Better UX Doctor\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"92d8\"\u003eRemember that doctor? The one handing out generic pain killers for every ailment, or recommending surgery for a simple rash? Simply treating the surface of the presented problem? Yeah, I wouldn’t go to them after the 2nd or 3rd visit once I realized what was going on.\u003c/p\u003e\u003cp id=\"5b79\"\u003eThe best doctors don’t immediately reach for their favorite prescription. They spend time gathering data and creating a diagnosis first. They ask questions, run tests, and understand the root cause before recommending treatment. They know that the same symptom (like a headache) could be caused by a variety of issues. The treatment depends entirely on the diagnosis. The diagnosis depends entirely on data available to inform the diagnosis. A proper diagnosis leads to proper treatment.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eSpend time diagnosing the problem.\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"2335\"\u003eAs UX professionals, we need to be more like good doctors. When someone comes to us with “users are confused” or “conversion is low,” our first instinct shouldn’t be to grab our favorite “design treatment”. We should ask: I wonder what layers this problem lives in?\u003c/p\u003e\u003cp id=\"7f3e\"\u003eSince users perceive everything through the surface layer, it takes some time and analysis to get the diagnosis right. Garrett’s five layers give us a great framework to slow down, investigate, and prescribe the right treatment. Sometimes that treatment is a comprehensive strategy refresh. Sometimes it’s a simple interface tweak. The magic is in knowing the difference.\u003c/p\u003e\u003cp id=\"ed1b\"\u003eBecause the last thing we want is UX malpractice. The one who keeps prescribing the same solution regardless of the actual problem. Your users (and your stakeholders) deserve better diagnosis than that…whether they follow it or not.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "16 min read",
  "publishedTime": "2025-06-18T11:42:36.208Z",
  "modifiedTime": null
}
