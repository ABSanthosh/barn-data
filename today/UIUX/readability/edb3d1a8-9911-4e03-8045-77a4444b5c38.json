{
  "id": "edb3d1a8-9911-4e03-8045-77a4444b5c38",
  "title": "Testing your UX ideas with vibe coding",
  "link": "https://uxdesign.cc/testing-your-ux-ideas-with-vibe-coding-8302620c17af?source=rss----138adf9c44c---4",
  "description": "",
  "author": "Allie Paschal",
  "published": "Wed, 16 Apr 2025 15:41:43 GMT",
  "source": "https://uxdesign.cc/feed",
  "categories": [
    "design",
    "figma",
    "vibe-coding",
    "ai",
    "ux"
  ],
  "byline": "Allie Paschal",
  "length": 9273,
  "excerpt": "As AI continues to disrupt many industries (particularly software development), it’s critical to continue to stay up-to-date with new tools that change traditional processes–making them more…",
  "siteName": "UX Collective",
  "favicon": "https://miro.medium.com/v2/resize:fill:256:256/1*dn6MbbIIlwobt0jnUcrt_Q.png",
  "text": "Testing your UX ideas with vibe codingHow UX designers can use AI app builders to their advantageAs AI continues to disrupt many industries (particularly software development), it’s critical to continue to stay up-to-date with new tools that change traditional processes–making them more efficient and opening opportunities to more people.UX designers have historically been constrained to creating high-fidelity wireframes or limited prototypes for user testing or developer hand-off. But designers now have the chance to expand their skill set to generating coded versions of their designs using vibe coding.Use vibe coding to go from Figma designs to a live demoVibe coding, coined by Andrej Karpathy, has become the new tech buzzword. With vibe coding, you simply describe what you want in an AI prompt and submit it to an LLM (large language model). For developers, vibe coding can take out some of the manual labor and be used as a starting place to then refine. For designers, vibe coding opens the doors to generating quick, working code without using developer resources.To dive deeper into UX design and vibe coding, let’s review vibe coding for UX designers, best practices for vibe coding, then demo vibe coding in Anima.Vibe coding for UX designersBefore we get into the weeds, vibe coding certainly doesn’t produce code that meets testing standards; at least for now. I’m not saying UX designers can use vibe coding to create code that’s ready to push to a target environment (QA and Security engineers would be appalled by the damage).“Screw the unit tests, the vibes will carry us.”-Persomatey via RedditInstead, UX designers can use vibe coding to produce working prototypes for user testing or to show how specific interactions should function to stakeholders and developers. Designers know how strenuous and time-consuming prototypes can be; even then, the prototypes may not fully reflect interactions (like drag and drop) or just act wonky.Let’s take a look at how vibe coding works, then review the benefits and limitations of vibe coding for UX designers.How does vibe coding work?Vibe coding allows you to use natural language to describe an idea or app you want in a prompt, then have AI build the code for you–no manual coding needed. Developers can use any LLM tool, such as ChatGPT or Claude, to vibe code. Then, insert any simple prompt like, “Create a dashboard for a health tracking app for college students, and use colorful, modern colors and fonts.” After getting the initial AI-generated code, developers will refine and test it to fit their standards.Using Claude to build a dashboard for a “Health tracking app”But for UX designers, we don’t really care about how clean or functional the code is–we just want to see our ideas in action (and quickly). Instead of using an LLM like ChatGPT to generate code, designers can use AI app builders.There are two ways you can use vibe coding tools: start from a prompt with tools like Bubble and Replit, or start with a Figma design with tools like Anima Playground or Lovable (we’ll look at the tools integrated with Figma later).Replit AI app builder allows creation with their agent, templates, or GitHubBenefits and limitationsAs a UX designer, you might be thinking, “I don’t know how to code, so how does vibe coding help me?” The level of code knowledge varies from designer to designer–some can read basic HTML and CSS, while others can write code straight from their designs. Either way, designers can use vibe coding to their advantage to enhance their UX process.But with every benefit comes limitations; let’s examine both to fully grasp how UX designers should use vibe coding.Benefits of vibe coding:Faster iteration: Designers can quickly visualize and interact with UX ideas; this can expedite validating initial concepts with your product team or target usersReduced dependency: To get fully-functional demos to test with users, designers have to wait for development; vibe coding allows designers to jump over this barrier and create demos themselvesGreater exploration: Because vibe coding allows easy and quick creation of live concepts, designers can explore more ideas with stakeholders and users–ensuring optimal design directionLimitations of vibe coding:Complexity: AI app builders struggle with complex projects; for instance, designers can’t upload multiple pages from Figma and ask the AI agent to create interactions between pages (but maybe one day…)Lack of context: The AI agent helping to generate the code for your designs will not have all the context you have–leaving gaps; expect more surface-level functionality and designCode quality: The code generated through these AI agents typically includes bugs and errors–requiring someone with a deep understanding of programming to fix; for designers, vibe coding should only be used to explore ideas withBest practices for vibe codingAs vibe coding gains more traction and you begin to incorporate AI app builders into your UX workflow, it’s critical to know vibe coding’s best practices to ensure you get useful and optimized output from the AI agent.1. Use specific and simple promptsPrompts should be only 1–2 sentences longUse any context-specific language for more predictable resultsPrioritize specific information, such as the target audience and their overall goal2. Start with Figma (if you can)Use a Figma plug-in, such as Anima or Builder.ioImport any level of fidelity UI design from Figma into the AI agent to referenceBuild the intended interactions and remaining app from the initial UI designAnima’s Figma plugin allows you get working code straight from your designs3. Breakup complex tasksStart with a base request for the AI agent to completeRefine the output to meet your expectations for design and functionalityAdd additional criteria for the AI agent to build (still considering simplicity)4. Use the AI agent as your collaborative partnerBe patient as you try multiple times to get the output you wantAI agents are designed to be conversational–use it to your advantageGive the AI agent any helpful examples (images, scripts, etc.) to referenceDemo of vibe coding in AnimaThere are many AI app builder tools out there–some are better for UX designers versus others. Most designers want to start out with the designs they’ve built in Figma instead of starting from scratch with a prompt for the AI agent. Tools like Anima, Lovable, and Framer each integrate with Figma to allow this.I prefer Anima to Lovable since Lovable requires you to use the Builder.io Figma plug-in to then import into Lovable. On the other hand, Anima allows you to go straight from Figma into the Anima Playground tool (plus you get good functionality on the free plan!).Let’s look at how you can vibe code in the Anima Playground tool.1. Import Figma designs into Anima PlaygroundThere are two ways you can import into Anima:I. Paste the Figma link into the Anima desktop siteHere, you can customize the framework, UI library, language, and styling using the dropdowns below the URL text field (I kept the default selections).Paste your Figma link in Anima’s desktop site to get working codeII. Use Anima’s Figma plug-inIn the plug-in, select the purple button name, “Prompt in Playground” to automatically import the Figma designs into Anima Playground.Select “Prompt in Playground” to import the Figma designs into Anima2. Review and refine the live preview of your working designsIn Anima Playground, you can toggle between the code, preview, and Figma design. As you begin interacting with the first draft of the working app, you’ll probably notice some items you want to change–this could be a button’s hover state, the color palette, or the responsiveness of the app.Request changes to the design and code using the Anima Playground chatHere are two prompts I asked in the chat after getting the initial preview of the coded designs:Make the designs responsive to the screen size changingAdd a login modal once you select “Sign in to add”Full-screen preview of the designs and interactions made from Anima PlaygroundYou can make requests to the AI agent in a natural and conversational way–making it easy to get changes in the working preview.3. Publish the live app or website in AnimaOnce you’re happy with the live preview of the designs, you can publish the live app or website using the “Publish” button near the top-right of the Anima desktop site.This will allow you to share the link with the live app to users for testing sessions or to developers for hand-off.Publish your Anima project to get a URL link to the live versionNote: You can download the code and push to GitHub, but you must upgrade to a paid plan to access these features.AI will continue to improve and disrupt our UX processes. Fortunately, certain AI tools, like Anima, allow designers to vibe code–expediting steps in the design process that are usually time-consuming and tedious.Instead of waiting for engineering resources, UX designers can take their ideas into their own hands and create full-functional demos to show stakeholders or test with target users.Vibe coding opens more opportunities for designers, no matter their experience with programming, to generate working demos to explore, iterate, and test (then repeat).",
  "image": "https://miro.medium.com/v2/da:true/resize:fit:1200/0*Xan7v7m78jVgCRbv",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003carticle\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cp\u003e\u003ch2 id=\"a0b2\" data-testid=\"storyTitle\"\u003eTesting your UX ideas with vibe coding\u003c/h2\u003e\u003c/p\u003e\u003cdiv\u003e\u003ch2 id=\"60f1\"\u003e\u003cem\u003eHow UX designers can use AI app builders to their advantage\u003c/em\u003e\u003c/h2\u003e\u003cdiv\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://paschalallie.medium.com/?source=post_page---byline--8302620c17af---------------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Allie Paschal\" src=\"https://miro.medium.com/v2/resize:fill:88:88/1*fpy4J0gheIdnAy3snP-GRg.png\" width=\"44\" height=\"44\" loading=\"lazy\" data-testid=\"authorPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://uxdesign.cc/?source=post_page---byline--8302620c17af---------------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"UX Collective\" src=\"https://miro.medium.com/v2/resize:fill:48:48/1*mDhF9X4VO0rCrJvWFatyxg.png\" width=\"24\" height=\"24\" loading=\"lazy\" data-testid=\"publicationPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cp id=\"a9c0\"\u003eAs AI continues to disrupt many industries (particularly software development), it’s critical to continue to stay up-to-date with new tools that change traditional processes–making them more efficient and opening opportunities to more people.\u003c/p\u003e\u003cp id=\"44ab\"\u003eUX designers have historically been constrained to creating high-fidelity wireframes or limited prototypes for user testing or developer hand-off. \u003cstrong\u003eBut designers now have the chance to expand their skill set to generating coded versions of their designs using vibe coding.\u003c/strong\u003e\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfigure\u003e\u003cfigcaption\u003e\u003cem\u003eUse vibe coding to go from Figma designs to a live demo\u003c/em\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"502c\"\u003eVibe coding, coined by \u003ca href=\"https://x.com/karpathy/status/1886192184808149383?lang=en\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eAndrej Karpathy\u003c/a\u003e, has become the new tech buzzword. With vibe coding, you simply describe what you want in an AI prompt and submit it to an LLM (large language model). For developers, vibe coding can take out some of the manual labor and be used as a starting place to then refine. For designers, vibe coding opens the doors to generating quick, working code without using developer resources.\u003c/p\u003e\u003cp id=\"bacb\"\u003eTo dive deeper into UX design and vibe coding, let’s review vibe coding for UX designers, best practices for vibe coding, then demo vibe coding in Anima.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv\u003e\u003cdiv\u003e\u003ch2 id=\"e318\"\u003eVibe coding for UX designers\u003c/h2\u003e\u003cp id=\"1579\"\u003eBefore we get into the weeds, vibe coding certainly doesn’t produce code that meets testing standards; at least for now. \u003cstrong\u003eI’m not saying UX designers can use vibe coding to create code that’s ready to push to a target environment\u003c/strong\u003e (QA and Security engineers would be appalled by the damage).\u003c/p\u003e\u003cblockquote\u003e\u003cp id=\"cd4b\"\u003e\u003cem\u003e“Screw the unit tests, the vibes will carry us.”\u003c/em\u003e\u003c/p\u003e\u003cp id=\"dce2\"\u003e\u003ca href=\"https://www.reddit.com/r/OutOfTheLoop/comments/1jfwxxw/whats_up_with_vibe_coding/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cem\u003e-Persomatey via Reddit\u003c/em\u003e\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003cp id=\"92bf\"\u003eInstead, UX designers can use vibe coding to produce working prototypes for user testing or to show how specific interactions should function to stakeholders and developers. Designers know how strenuous and time-consuming prototypes can be; even then, the prototypes may not fully reflect interactions (like drag and drop) or just act wonky.\u003c/p\u003e\u003cp id=\"51ac\"\u003eLet’s take a look at how vibe coding works, then review the benefits and limitations of vibe coding for UX designers.\u003c/p\u003e\u003ch2 id=\"ad5e\"\u003eHow does vibe coding work?\u003c/h2\u003e\u003cp id=\"2dc5\"\u003eVibe coding allows you to use natural language to describe an idea or app you want in a prompt, then have AI build the code for you–no manual coding needed. Developers can use any LLM tool, such as ChatGPT or Claude, to vibe code. Then, insert any simple prompt like, “Create a dashboard for a health tracking app for college students, and use colorful, modern colors and fonts.” After getting the initial AI-generated code, developers will refine and test it to fit their standards.\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfigure\u003e\u003cfigcaption\u003e\u003cem\u003eUsing Claude to build a dashboard for a “Health tracking app”\u003c/em\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"decc\"\u003eBut for UX designers, we don’t really care about how clean or functional the code is–we just want to see our ideas in action (and quickly). Instead of using an LLM like ChatGPT to generate code, designers can use AI app builders.\u003c/p\u003e\u003cp id=\"42f1\"\u003e\u003cstrong\u003eThere are two ways you can use vibe coding tools: start from a prompt with tools like \u003c/strong\u003e\u003ca href=\"https://bubble.io/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eBubble\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e and \u003c/strong\u003e\u003ca href=\"https://replit.com/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eReplit\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e, or start with a Figma design with tools like \u003c/strong\u003e\u003ca href=\"https://www.animaapp.com/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eAnima Playground\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e or \u003c/strong\u003e\u003ca href=\"https://lovable.dev/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eLovable\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e \u003c/strong\u003e(we’ll look at the tools integrated with Figma later).\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfigure\u003e\u003cfigcaption\u003e\u003cem\u003eReplit AI app builder allows creation with their agent, templates, or GitHub\u003c/em\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003cdiv\u003e\u003ch2 id=\"d6fd\"\u003eBenefits and limitations\u003c/h2\u003e\u003cp id=\"1dc8\"\u003eAs a UX designer, you might be thinking, “I don’t know how to code, so how does vibe coding help me?” The level of code knowledge varies from designer to designer–some can read basic HTML and CSS, while others can write code straight from their designs. Either way, designers can use vibe coding to their advantage to enhance their UX process.\u003c/p\u003e\u003cp id=\"9e5d\"\u003eBut with every benefit comes limitations; let’s examine both to fully grasp how UX designers should use vibe coding.\u003c/p\u003e\u003cp id=\"0005\"\u003e\u003cstrong\u003eBenefits of vibe coding\u003c/strong\u003e:\u003c/p\u003e\u003cul\u003e\u003cli id=\"0625\"\u003e\u003cstrong\u003eFaster iteration\u003c/strong\u003e: Designers can quickly visualize and interact with UX ideas; this can expedite validating initial concepts with your product team or target users\u003c/li\u003e\u003cli id=\"94eb\"\u003e\u003cstrong\u003eReduced dependency\u003c/strong\u003e: To get fully-functional demos to test with users, designers have to wait for development; vibe coding allows designers to jump over this barrier and create demos themselves\u003c/li\u003e\u003cli id=\"8ba8\"\u003e\u003cstrong\u003eGreater exploration\u003c/strong\u003e: Because vibe coding allows easy and quick creation of live concepts, designers can explore more ideas with stakeholders and users–ensuring optimal design direction\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"ab3e\"\u003e\u003cstrong\u003eLimitations of vibe coding\u003c/strong\u003e:\u003c/p\u003e\u003cul\u003e\u003cli id=\"3ffc\"\u003e\u003cstrong\u003eComplexity\u003c/strong\u003e: AI app builders struggle with complex projects; for instance, designers can’t upload multiple pages from Figma and ask the AI agent to create interactions between pages (but maybe one day…)\u003c/li\u003e\u003cli id=\"9c4d\"\u003e\u003cstrong\u003eLack of context\u003c/strong\u003e: The AI agent helping to generate the code for your designs will not have all the context you have–leaving gaps; expect more surface-level functionality and design\u003c/li\u003e\u003cli id=\"e9d9\"\u003e\u003cstrong\u003eCode quality\u003c/strong\u003e: The code generated through these AI agents typically includes bugs and errors–requiring someone with a deep understanding of programming to fix; for designers, vibe coding should only be used to explore ideas with\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"63a9\"\u003eBest practices for vibe coding\u003c/h2\u003e\u003cp id=\"5eba\"\u003eAs vibe coding gains more traction and you begin to incorporate AI app builders into your UX workflow, it’s critical to know vibe coding’s best practices to ensure you get useful and optimized output from the AI agent.\u003c/p\u003e\u003ch2 id=\"1f7a\"\u003e1. Use specific and simple prompts\u003c/h2\u003e\u003cul\u003e\u003cli id=\"11ce\"\u003ePrompts should be only 1–2 sentences long\u003c/li\u003e\u003cli id=\"ca3e\"\u003eUse any \u003ca href=\"https://sendbird.com/blog/ai-prompts\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003econtext-specific language\u003c/a\u003e for more predictable results\u003c/li\u003e\u003cli id=\"29f6\"\u003ePrioritize specific information, such as the target audience and their overall goal\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"fb10\"\u003e2. Start with Figma (if you can)\u003c/h2\u003e\u003cul\u003e\u003cli id=\"6f1a\"\u003eUse a Figma plug-in, such as \u003ca href=\"https://www.figma.com/community/plugin/857346721138427857/anima-figma-to-code-react-html-css-tailwind-mui-devmode-inspect-react-html-vue-css\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eAnima\u003c/a\u003e or \u003ca href=\"https://www.figma.com/community/plugin/747985167520967365/builder-io-ai-powered-figma-to-code-react-vue-tailwind-more\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eBuilder.io\u003c/a\u003e\u003c/li\u003e\u003cli id=\"37b8\"\u003eImport any level of fidelity UI design from Figma into the AI agent to reference\u003c/li\u003e\u003cli id=\"1ddc\"\u003eBuild the intended interactions and remaining app from the initial UI design\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfigure\u003e\u003cfigcaption\u003e\u003cem\u003eAnima’s Figma plugin allows you get working code straight from your designs\u003c/em\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003cdiv\u003e\u003ch2 id=\"6ebc\"\u003e3. Breakup complex tasks\u003c/h2\u003e\u003cul\u003e\u003cli id=\"8a0d\"\u003eStart with a \u003ca href=\"https://zapier.com/blog/vibe-coding/#tips\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ebase request\u003c/a\u003e for the AI agent to complete\u003c/li\u003e\u003cli id=\"1e94\"\u003eRefine the output to meet your expectations for design and functionality\u003c/li\u003e\u003cli id=\"f62d\"\u003eAdd additional criteria for the AI agent to build (still considering simplicity)\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"1ec9\"\u003e4. Use the AI agent as your collaborative partner\u003c/h2\u003e\u003cul\u003e\u003cli id=\"0544\"\u003eBe patient as you try multiple times to get the output you want\u003c/li\u003e\u003cli id=\"cf49\"\u003eAI agents are designed to be conversational–use it to your advantage\u003c/li\u003e\u003cli id=\"2f73\"\u003eGive the AI agent any \u003ca href=\"https://zapier.com/blog/ai-prompt/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ehelpful examples\u003c/a\u003e (images, scripts, etc.) to reference\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"f579\"\u003eDemo of vibe coding in Anima\u003c/h2\u003e\u003cp id=\"b581\"\u003eThere are many AI app builder tools out there–some are better for UX designers versus others. Most designers want to start out with the designs they’ve built in Figma instead of starting from scratch with a prompt for the AI agent. Tools like Anima, Lovable, and Framer each integrate with Figma to allow this.\u003c/p\u003e\u003cp id=\"be1d\"\u003eI prefer Anima to Lovable since Lovable requires you to use the Builder.io Figma plug-in to then import into Lovable. On the other hand, \u003cstrong\u003eAnima allows you to go straight from Figma into the Anima Playground tool\u003c/strong\u003e (plus you get good functionality on the free plan!).\u003c/p\u003e\u003cp id=\"0d93\"\u003eLet’s look at how you can vibe code in the Anima Playground tool.\u003c/p\u003e\u003ch2 id=\"0a94\"\u003e1. Import Figma designs into Anima Playground\u003c/h2\u003e\u003cp id=\"f569\"\u003eThere are two ways you can import into Anima:\u003c/p\u003e\u003cp id=\"4738\"\u003e\u003cstrong\u003eI. Paste the Figma link into the \u003c/strong\u003e\u003ca href=\"https://www.animaapp.com/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eAnima desktop site\u003c/strong\u003e\u003c/a\u003e\u003c/p\u003e\u003cp id=\"2b93\"\u003eHere, you can customize the framework, UI library, language, and styling using the dropdowns below the URL text field (I kept the default selections).\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003e\u003cem\u003ePaste your Figma link in Anima’s desktop site to get working code\u003c/em\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"1574\"\u003e\u003cstrong\u003eII. Use \u003c/strong\u003e\u003ca href=\"https://www.figma.com/community/plugin/857346721138427857/anima-figma-to-code-react-html-css-tailwind-mui-devmode-inspect-react-html-vue-css\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003eAnima’s Figma plug-in\u003c/strong\u003e\u003c/a\u003e\u003c/p\u003e\u003cp id=\"b6f4\"\u003eIn the plug-in, select the purple button name, “Prompt in Playground” to automatically import the Figma designs into Anima Playground.\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfigure\u003e\u003cfigcaption\u003e\u003cem\u003eSelect “Prompt in Playground” to import the Figma designs into Anima\u003c/em\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003cdiv\u003e\u003ch2 id=\"d890\"\u003e2. Review and refine the live preview of your working designs\u003c/h2\u003e\u003cp id=\"dbc7\"\u003eIn Anima Playground, you can toggle between the code, preview, and Figma design. As you begin interacting with the first draft of the working app, you’ll probably notice some items you want to change–this could be a button’s hover state, the color palette, or the responsiveness of the app.\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfigure\u003e\u003cfigcaption\u003e\u003cem\u003eRequest changes to the design and code using the Anima Playground chat\u003c/em\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"6f92\"\u003eHere are two prompts I asked in the chat after getting the initial preview of the coded designs:\u003c/p\u003e\u003cul\u003e\u003cli id=\"9490\"\u003eMake the designs responsive to the screen size changing\u003c/li\u003e\u003cli id=\"20a0\"\u003eAdd a login modal once you select “Sign in to add”\u003c/li\u003e\u003c/ul\u003e\u003cfigure\u003e\u003cfigcaption\u003e\u003cem\u003eFull-screen preview of the designs and interactions made from Anima Playground\u003c/em\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"00c7\"\u003eYou can make requests to the AI agent in a natural and conversational way–making it easy to get changes in the working preview.\u003c/p\u003e\u003ch2 id=\"5d03\"\u003e3. Publish the live app or website in Anima\u003c/h2\u003e\u003cp id=\"df44\"\u003eOnce you’re happy with the live preview of the designs, you can publish the live app or website using the “Publish” button near the top-right of the Anima desktop site.\u003c/p\u003e\u003cp id=\"e8ac\"\u003eThis will allow you to share the link with the live app to users for testing sessions or to developers for hand-off.\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfigure\u003e\u003cfigcaption\u003e\u003cem\u003ePublish your Anima project to get a URL link to the live version\u003c/em\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003cdiv\u003e\u003cblockquote\u003e\u003cp id=\"f403\"\u003eNote: You can download the code and push to GitHub, but you must upgrade to a paid plan to access these features.\u003c/p\u003e\u003c/blockquote\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"4264\"\u003eAI will continue to improve and disrupt our UX processes. Fortunately, certain AI tools, like Anima, allow designers to vibe code–expediting steps in the design process that are usually time-consuming and tedious.\u003c/p\u003e\u003cp id=\"051b\"\u003eInstead of waiting for engineering resources, UX designers can take their ideas into their own hands and create full-functional demos to show stakeholders or test with target users.\u003c/p\u003e\u003cp id=\"ba21\"\u003eVibe coding opens more opportunities for designers, no matter their experience with programming, to generate working demos to explore, iterate, and test (then repeat).\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/article\u003e\u003c/div\u003e",
  "readingTime": "10 min read",
  "publishedTime": "2025-04-16T15:41:43.289Z",
  "modifiedTime": null
}
