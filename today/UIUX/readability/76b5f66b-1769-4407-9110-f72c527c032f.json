{
  "id": "76b5f66b-1769-4407-9110-f72c527c032f",
  "title": "Few Guesses, More Success: 4 Principles to Reduce Cognitive Load in Forms",
  "link": "https://www.nngroup.com/articles/4-principles-reduce-cognitive-load/?utm_source=rss\u0026utm_medium=feed\u0026utm_campaign=rss-syndication",
  "description": "Four principles of form design — structure, transparency, clarity, and support — minimize users’ cognitive load and improve usability.",
  "author": "Huei-Hsin Wang",
  "published": "Fri, 18 Jul 2025 17:00:00 +0000",
  "source": "https://www.nngroup.com/feed/rss/",
  "categories": [
    "Article"
  ],
  "byline": "Huei-Hsin Wang",
  "length": 22466,
  "excerpt": "Four principles of form design — structure, transparency, clarity, and support — minimize users’ cognitive load and improve usability.",
  "siteName": "Nielsen Norman Group",
  "favicon": "",
  "text": "Summary:  Four principles of form design — structure, transparency, clarity, and support — minimize users’ cognitive load and improve usability. Forms are mental work. While we've previously explored how to minimize physical effort in forms through the EAS framework (Eliminate, Automate, Simplify), this article focuses on reducing the mental effort — the thinking, recalling, and decision making — that users face when filling forms, so they can complete forms with less cognitive effort and more confidence. Reduce Cognitive Load: 4 Principles Structure Transparency Clarity Support Conclusion Reduce Cognitive Load: 4 Principles Every field in a form demands that the user interpret the question, find the right information, and provide it in an acceptable format. All these add to the cognitive load — the mental effort required to get through the task. When this load gets too high, users are more likely to make mistakes, feel overwhelmed, or abandon the form altogether. Follow these 4 principles to reduce cognitive load in forms: Structure: Organize content logically to create a clear path to completion. Transparency: Communicate requirements and set expectations upfront. Clarity: Make content and interaction easy to understand and leave no room for ambiguity. Support: Provide timely, helpful guidance throughout the process. Structure Human brains naturally look for patterns and relationships in information. When forms are structured logically, users can see the big picture, understand how different pieces fit together, and move through the form more efficiently. Group Related Fields At the question level, certain types of information, such as the username followed by the password, or street addresses followed by the city, commonly appear together. Grouping related questions helps users retrieve information from memory more easily. ✅ In this Coinbase example, related fields, such as the legal first name and last name, the month, day, and year of birth date, as well as the address line, city, state, and ZIP code, were presented together. This design allows users to retrieve these pieces of related information more easily. (Note, however, that we recommend against displaying the field labels within the input boxes or using a multicolumn layout.) At the form level, grouping related fields into sections makes long forms feel more manageable because it: Allows users to focus on one information category at a time Minimizes context switching between unrelated topics Creates a sense of progress as users complete each section In addition, adding clear, descriptive headings to each section provides users with a helpful preview of the upcoming topic. These signposts reduce cognitive load by establishing context before users encounter specific fields. ✅ Slack organized its checkout form into two sections (Organization info and Payment method), each containing fields related to that topic. Create Visual Hierarchy A clear visual hierarchy naturally guides users' attention to the most important elements. When implemented effectively, this hierarchy clarifies relationships between form components and helps users understand the overall form structure at a glance. Start by applying consistent, strategic spacing to form fields. Elements close together are perceived as related, so place connected fields closer while allowing more space between distinct sections. ✅ Stripe applied consistent spacing throughout the checkout form. Related fields within the Shipping address section (Address Line, City, State, Zip) have tighter spacing than unrelated fields (such as Email and Shipping country). (Unfortunately, this example also used placeholders in the input fields, which increased users’ cognitive load.) If spacing doesn’t provide enough clarity on how elements are related, reinforce groupings with containers, subtle divider lines, or colored backgrounds. This is the Gestalt principle of common region in action: visual boundaries help users quickly see which parts of the form belong together. ✅ HoneyBook grouped related questions into distinct sections using containers. In this example, the sections Account Info and Change Password are each shown in their own container. Apply visual weight strategically to emphasize importance through size, color, contrast, and typography. For example, form labels often use a heavier font weight to stand out from secondary help text. Error messages commonly appear in red to draw attention, while optional tooltips are typically minimized or hidden by default to reduce distraction. ✅ Quicken applied font size, weight, positioning, and color contrast to create a clear visual hierarchy in this form. The Create Account heading uses a font that is larger and thicker than that for field labels like Email Address. Hint text appears smaller to signal lower priority, while inline validation errors are highlighted in red to draw attention. Sort Questions and Options in a Logical Order Structuring a form is like having a conversation. The order of the form questions can impact flow and comprehension. Imagine sitting down with someone and asking them these questions face-to-face — what order would feel natural and respectful? In real conversations, it is natural to adjust your followup question or response based on what the other person said. Forms with branching logic work the same way. This approach — often referred to as a \"wizard\" — dynamically displays relevant fields based on users’ prior input. Wizards not only minimize the physical effort required to fill out the form but also save users from spending attentional resources to scan and filter irrelevant questions. The order of the questions should primarily minimize the effort necessary to fill in the form. This is a good principle to keep in mind, whether your form has branching or not.  For example, if you want to know what problems users experienced using a product, you would start by asking them whether they have encountered a problem instead of asking them to enter their name, because the name will not be relevant if the user has not encountered a problem. Even for forms without branching, you can lighten the users’ load if you ask the questions in the right order. For example, asking for the ZIP code before the state and city might save the user the effort of typing the state and city because you may be able to prepopulate these. Aside from branching considerations, if all questions will be encountered by all users, the right question ordering is often as much art as science. Here are a few organizational principles to consider. Familiarity: Start with easy, familiar information (e.g., name, email) to build momentum. Be consistent with how questions are typically presented in other forms. Priority: Prioritize the most important questions before collecting supplementary information. Dependency: Later questions build on earlier ones. Complexity: Begin with simpler questions before moving to more complex ones. Sensitivity: Start with less sensitive information before requesting more personal details. In practice, these principles often work in combination. A job-application form might follow both familiarity and sensitivity principles — starting with basic contact information before requesting employment history or salary expectations. A survey with numerous optional fields may follow the priority principle to ensure the most critical information is collected upfront. Use Single-Column Layout Research consistently shows that single-column layouts outperform multicolumn designs for form-completion rates. A single column provides a clear, vertical path that’s easy to follow and scale across devices. In contrast, multicolumn layouts require users to interpret the sequence and direction of fields; that interpretation can vary from person to person. This ambiguity increases the likelihood that users will overlook fields or misunderstand the expected flow, and the tab order may feel unpredictable to some keyboard users. The problem compounds for users with accessibility needs, as screen readers may process fields in an order different from the visual layout, and those using screen magnifiers might miss fields that fall outside their zoomed-in viewport. ❌ Discover Bank utilized a multicolumn layout in its loan-application form. This unpredictable layout combined with placeholder text made it easy to accidentally miss fields. Utilize Progressive Disclosure Long forms can overwhelm users before they even start. Progressive disclosure solves this problem by presenting only what's needed at each step of the process. When designing complex forms, show only what's relevant to the current task, and introduce additional fields as users progress. This could mean breaking down a long complex form into multiple pages or implementing conditional logic that displays fields based on previous answers. The \"one thing per page\" pattern, recommended by GOV.UK follows this principle by showing only one question or task per screen. This focused approach breaks down complex forms and makes errors easy to spot and fix, as users are dealing with one topic at a time. ✅ Instead of presenting all questions in one long scrollable page, Visible made its onboarding experience more manageable by breaking it into multiple pages with a progress bar on the top. (Though we generally advise against using a wheel picker to select birth years due to low legibility and high interaction cost) Transparency Uncertainty increases cognitive load — when users don’t know where they are or cannot predict what comes next, they must spend mental energy on speculation rather than completion. Transparency builds trust and puts users in control, making the form feel predictable and less stressful. Communicate Form Requirements Before Users Begin Users want to know what they're getting into before investing time in a form. Clear expectations about required information and time commitment help users prepare mentally and decide whether to proceed. This is especially important for forms that take more than a few minutes to complete or those that don’t allow users to save their progress if they need to exit halfway. When designing a long, multipage form, specify upfront: Estimated completion time Required materials or information (e.g., ID numbers, documents) Any deadlines or time limits Maximum number of attempts (if applicable) Whether progress is automatically saved or if users must complete the form in one session ✅ Zillow informed users about the required documents to set up rent payments upfront, before guiding them through the multipage form. Mark Required Fields Think twice before including optional questions, as each question increases the form length and the perceived effort to complete it. If you decide to include optional questions, clearly distinguish them from required ones. In addition to using an asterisk to mark required fields, explicitly mark optional fields. This practice reassures users that they can skip nonessential questions and lightens their cognitive load. When marking is not clear enough, many people feel obligated to answer optional questions. ​​✅ Klaviyo clearly marked required fields with a red asterisk and optional fields with an (optional) label. Show Clear Progress Indicators As one of the 10 Usability Heuristics for User Interface Design, visibility of system status helps users understand where they are and decide what to do next. In the context of completing a long form, progress indicators give users a visual representation of how much they’ve filled and how much remains, helping them gauge the effort required to complete the form. This sense of progression also fosters a feeling of accomplishment, which in turn motivates users to continue until the end. In addition, making all the steps visible from the start serves as an overview of the process and helps users form a mental model of the form. This approach aligns with the structure principle discussed earlier. ✅ Google Analytics clearly communicated the user's progress with an explicit progress indicator at the top of the page, helping users understand the overall process of setting up an account. Clarity Ambiguity slows users down. Clear instructions and design ensure that users don’t waste precious mental resources deciphering what a question means or figuring out how to interact with the interface. Use Plain Language Form labels and instructions should be immediately understandable. Using plain language benefits all users, regardless of their background or expertise. On the other hand, technical jargon, internal company terminology, or overly complex language creates barriers that slow users. We usually recommend writing at the 6th to 8th-grade reading level for general audiences — users shouldn't need to understand specialized vocabulary to fill your form. The most effective forms use language that mirrors how users naturally think and speak about the information being requested. For example, a healthcare form that asks for Chief complaint might confuse many patients, while Reason for visit communicates the same request in a more straightforward way. Similarly, asking patients to Indicate prior surgical procedures creates more cognitive work than simply asking Have you had any surgeries? Before finalizing your form copy, test it with actual users and observe where they stumble. If you notice patterns of confusion or hesitation around certain terms, that's your signal to simplify. Use Positive Wording Negative wording complicates how users interpret questions, as it forces them to mentally reverse statements. It increases cognitive effort and the risk of errors. This is especially relevant for standalone checkboxes — opt-in statements should use language that matches the intended outcome. ❌ Udemy asked users to check a box to not receive promotional emails. Checking this box automatically deselected the boxes above. This type of design creates unnecessary confusion. A better approach would be to first ask users whether they want to receive promotional emails, then provide followup options to specify the types of content they prefer. Avoid Double-Barreled Questions Double-barreled questions are questions that ask about two things at once; they are a common survey pitfall. They introduce ambiguity as users might agree with one part but disagree with another. For example, a survey question like Was our website helpful and easy to navigate? forces respondents to give a single answer to two distinct asks. Someone might find the content helpful but the navigation confusing or vice versa. To eliminate the ambiguity, ask about one thing at a time: How helpful was our website content? followed by How easy was our website to navigate? This not only reduces cognitive load but also captures more-precise data that accurately represents user experiences. Provide Context and Examples If a field requires a specific format or type of input, explicitly state the requirements upfront to prevent users from spending mental effort inferring what these may be or from guessing wrong. For example, date formats vary globally, so offering a simple formatting example — like MM/DD/YYYY or DD/MM/YYYY — gives users a concrete reference point and prevents errors that might otherwise require correction later. When requesting complex identification strings such as tracking numbers, product serial codes, or reference numbers, tell users exactly what to look for:16-digit code found on your receipt or 3 letters followed by 9 numbers (ABC123456789). This guidance eliminates the guesswork and helps users locate and enter the information accurately and efficiently. ✅ Dyson guided users to locate the serial number with clear instructions and indicated the number format to set up proper expectations. Follow Conventions for Form Elements Users develop mental models about how form elements should look and behave based on their experiences across websites. Using consistent, familiar patterns allows users to apply existing knowledge and focus on the task at hand, rather than figuring out how the interface works. For example, consider how disorienting it would be to encounter a checkbox that, when clicked, automatically deselected all other checkboxes in the group (behavior normally associated with radio buttons). Designers often feel pressure to create novel, distinctive interfaces that stand out from competitors. While innovation has its place, form elements are rarely the appropriate place for creative experimentation. The potential cost — confusion, errors, and abandonment — far outweighs the benefits of novelty. ❌ Squarespace used an unconventional style for checked radio buttons: instead of a filled circle, it showed a checkmark and highlighted the entire row. This design breaks with web conventions and can cause users to question whether these are radio buttons. Match Input-Field Length to Expected Content The size of an input field provides a visual cue about the expected length of the answer. A short field suggests a brief response, ideal for concise data like ZIP codes or age. A longer field implies that more detailed input is needed, such as an address, description, or comment. If the field length doesn't match the expected input, users may question whether they understand what's being asked. ❌ NAIC implemented the same field length across all the fields in its contact form. While this approach created a consistent layout, some fields — like Phone, City, and Zip — were unnecessarily long and potentially confusing. Support Filling out a form can feel like a mental marathon, and users should be supported at every step of the way. This means offering visible, persistent guidance, preventing mistakes before they happen, and providing timely assistance when errors occur. Consistent, thoughtful support builds user confidence and makes users more likely to stick with the form until the end. Avoid Using Placeholders While placeholders — the text inside input fields that disappears when users tap into the field — may seem like a space-efficient way to provide guidance at first glance, they cause significant usability problems: They disappear when users start typing, forcing them to remember instructions using short-term memory. They typically use light gray text with low contrast and are thus difficult to read. They can be mistaken for prefilled values, causing users to overlook or accidentally skip fields. Instead, keep both the label and help text outside the input field and leave the input field empty. This design ensures users have access to consistent, visible guidance at all times — whether they are actively filling out the field or reviewing their entry before submission. ❌ Stripe used placeholder text to show examples and provide additional context. While this approach aligns with the clarity principle discussed above, light gray text is difficult to read and can cause users to mistake the placeholder text for filled content. Include Helpful Constraints While we should generally champion user freedom, in cases where clear rules define acceptable options, constraints become beneficial as they prevent users from making costly or time-consuming mistakes. Rather than letting users input invalid data and then showing an error message later, proactive constraints catch errors before they occur. For example, when designing a banking transfer interface, preventing users from entering amounts exceeding their available balance is more effective than allowing them to proceed to trigger an invalid transaction or overdraft. ✅ SoFi set the transaction limit to the account's maximum balance. If the user exceeded this limit, the background darkened to draw attention to an error message indicating the transaction limit. Display Timely, Visible Error Messages Users are only human, and mistakes happen. The key is offering support at the right moment without disrupting users’ flow. The ideal approach should achieve a balance between giving users space to work and catching errors early. Avoid premature validation: Don't display errors as soon as users click into a field or just start to type — they haven't even had a chance to type anything yet. Premature validation is often considered a hostile pattern as it disrupts users’ flow with unwarranted scolding. As a rule of thumb, avoid displaying the error until the user has finished with the field and moved to the next field.  Use real-time validation selectively: Implement real-time validation only when users benefit from immediate feedback (such as a password-requirement checklist) or when the error message helps prevent critical mistakes. Otherwise, it may distract users from their primary task. To minimize cognitive load, error messages should be displayed next to the field containing the error. If the error message is displayed in a dialog or far away from that field, the user will need to commit the message to memory in order to fix the error. This increases cognitive load. ❌ Urban Outfitters displayed the error message only at the top of the screen, far from the field it referred to (Promo Code). This forced users to rescan the form or use short-term memory to refind the location of the field. Additionally, error messages should provide constructive communication, and respect user effort. Rather than just pointing out problems, they should guide users toward fixing the issue, highlighting the specific mistake and offering practical suggestions. Thoughtfully designed error messages help users feel supported rather than blamed. ✅ In addition to clearly displaying an error message when a username was taken, Etsy suggested multiple available alternatives based on the user’s input, helping users find an available name without pogosticking. Conclusion Filling out a form is like scaling a mountain — users need a well-marked path (structure) to guide their steps, a clear view of what lies ahead (transparency) to stay oriented, easy-to-understand signposts (clarity) to navigate confidently, and robust guardrails (support) to keep them from stumbling. By applying these four principles — structure, transparency, clarity, and support — you’ll design forms that allow users to spend less time figuring out what to do and more time providing valuable information.",
  "image": "https://media.nngroup.com/media/articles/opengraph_images/Form-Cognitive-Load_Opengraph_copy_6.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cp\u003e\u003cspan\u003e\n                  Summary: \n                \u003c/span\u003eFour principles of form design — structure, transparency, clarity, and support — minimize users’ cognitive load and improve usability.\n              \u003c/p\u003e\u003cdiv\u003e\n              \u003cp\u003eForms are mental work.\u003c/p\u003e\n\u003cp\u003eWhile we\u0026#39;ve previously explored how to minimize physical effort in forms through the \u003ca href=\"https://www.nngroup.com/articles/eas-framework-simplify-forms/\"\u003eEAS framework (Eliminate, Automate, Simplify)\u003c/a\u003e, this article focuses on reducing the mental effort — the thinking, recalling, and decision making — that users face when filling forms, so they can complete forms with less cognitive effort and more confidence.\u003c/p\u003e\n\u003cdiv\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-reduce-cognitive-load-4-principles-1\"\u003eReduce Cognitive Load: 4 Principles\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-structure-2\"\u003eStructure\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-transparency-3\"\u003eTransparency\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-clarity-4\"\u003eClarity\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-support-5\"\u003eSupport\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-conclusion-6\"\u003eConclusion\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e\u003ch2 id=\"toc-reduce-cognitive-load-4-principles-1\"\u003eReduce Cognitive Load: 4 Principles\u003c/h2\u003e\n\u003cp\u003eEvery field in a form demands that the user interpret the question, find the right information, and provide it in an acceptable format. All these add to the \u003ca href=\"https://www.nngroup.com/articles/minimize-cognitive-load/\"\u003e\u003cstrong\u003ecognitive load\u003c/strong\u003e\u003c/a\u003e — the mental effort required to get through the task. When this load gets too high, users are more likely to make mistakes, feel overwhelmed, or abandon the form altogether.\u003c/p\u003e\n\u003cp\u003eFollow these 4 principles to reduce cognitive load in forms:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eStructure: \u003c/strong\u003eOrganize content logically to create a clear path to completion.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTransparency: \u003c/strong\u003eCommunicate requirements and set expectations upfront.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eClarity: \u003c/strong\u003eMake content and interaction easy to understand and leave no room for ambiguity.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSupport: \u003c/strong\u003eProvide timely, helpful guidance throughout the process.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"toc-structure-2\"\u003eStructure\u003c/h2\u003e\n\u003cp\u003eHuman brains naturally look for patterns and relationships in information. When forms are structured logically, users can see the big picture, understand how different pieces fit together, and move through the form more efficiently.\u003c/p\u003e\n\u003ch3\u003eGroup Related Fields\u003c/h3\u003e\n\u003cp\u003eAt the question level, certain types of information, such as the username followed by the password, or street addresses followed by the city, commonly appear together. Grouping related questions helps users\u003cstrong\u003e \u003c/strong\u003e\u003ca href=\"https://www.nngroup.com/articles/recognition-and-recall/\"\u003eretrieve\u003cstrong\u003e \u003c/strong\u003einformation from memory\u003c/a\u003e more easily.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"Identity verification form requesting personal details including name, date of birth, and address, with explanatory notes about data security and SSN use.\" height=\"865\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/06/29/1.jpg\" width=\"1384\"/\u003e\n\u003cfigcaption\u003e✅ \u003cem\u003eIn this Coinbase example, related fields, such as the legal first name and last name, the month, day, and year of birth date, as well as the address line, city, state, and ZIP code, were presented together. This design allows users to retrieve these pieces of related information more easily. (Note, however, that we recommend against \u003ca href=\"https://www.nngroup.com/articles/form-design-placeholders/\"\u003edisplaying the field labels within the input boxes\u003c/a\u003e or \u003ca href=\"https://www.nngroup.com/articles/web-form-design/\"\u003eusing a multicolumn layout\u003c/a\u003e.)\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003cp\u003eAt the form level, grouping related fields into sections makes long forms feel more manageable because it:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAllows users to focus on one information category at a time\u003c/li\u003e\n\u003cli\u003eMinimizes context switching between unrelated topics\u003c/li\u003e\n\u003cli\u003eCreates a sense of progress as users complete each section\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIn addition, \u003cstrong\u003eadding clear, descriptive headings\u003c/strong\u003e to each section provides users with a helpful preview of the upcoming topic. These signposts reduce cognitive load by establishing context before users encounter specific fields.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"Slack upgrade payment form with two sections: Section 1 for organization and address details, and Section 2 for entering credit card payment information.\" height=\"863\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/06/29/2.jpg\" width=\"1384\"/\u003e\n\u003cfigcaption\u003e✅\u003cem\u003e Slack organized its checkout form into two sections (\u003c/em\u003eOrganization info \u003cem\u003eand \u003c/em\u003ePayment method\u003cem\u003e), each containing fields related to that topic.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch3\u003eCreate Visual Hierarchy\u003c/h3\u003e\n\u003cp\u003eA clear \u003ca href=\"https://www.nngroup.com/articles/visual-hierarchy-ux-definition/\"\u003evisual hierarchy\u003c/a\u003e naturally guides users\u0026#39; attention to the most important elements. When implemented effectively, this hierarchy clarifies relationships between form components and helps users understand the overall form structure at a glance.\u003c/p\u003e\n\u003cp\u003eStart by \u003cstrong\u003eapplying consistent, strategic spacing\u003c/strong\u003e to form fields.\u003ca href=\"https://www.nngroup.com/articles/gestalt-proximity/\"\u003e Elements close together are perceived as related\u003c/a\u003e, so place connected fields closer while allowing more space between distinct sections.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"Checkout form showing a $5 Stripe Reader M2 Mount on the left and shipping details form on the right, including fields for name, email, address, and phone number.\" height=\"1058\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/06/29/3-stripe.jpg\" width=\"1384\"/\u003e\n\u003cfigcaption\u003e✅\u003cem\u003e Stripe applied consistent spacing throughout the checkout form. Related fields within the \u003c/em\u003eShipping address\u003cem\u003e section \u003c/em\u003e(Address Line, City, State, Zip) \u003cem\u003ehave tighter spacing than unrelated fields (such as \u003c/em\u003eEmail\u003cem\u003e and \u003c/em\u003eShipping country).\u003cem\u003e (Unfortunately, this example also used placeholders in the input fields, which increased users’ cognitive load.)\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003cp\u003eIf spacing doesn’t provide enough clarity on how elements are related, reinforce groupings with\u003cstrong\u003e containers, subtle divider lines, or colored backgrounds. \u003c/strong\u003eThis is the\u003ca href=\"https://www.nngroup.com/articles/common-region/\"\u003e Gestalt principle of common region\u003c/a\u003e in action: visual boundaries help users quickly see which parts of the form belong together.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"Account settings page showing a profile photo, personal info fields for name, job title, email, phone, and address, plus a password change form with masked inputs.\" height=\"865\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/06/29/4-honeybook.jpg\" width=\"1384\"/\u003e\n\u003cfigcaption\u003e✅\u003cem\u003e HoneyBook grouped related questions into distinct sections using containers. In this example, the sections \u003c/em\u003eAccount Info\u003cem\u003e and \u003c/em\u003eChange Password\u003cem\u003e are each shown in their own container.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003cp\u003e\u003cstrong\u003eApply \u003c/strong\u003e\u003ca href=\"https://www.nngroup.com/videos/visual-weight/\"\u003e\u003cstrong\u003evisual weight\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e strategically\u003c/strong\u003e to emphasize importance through size, color, contrast, and typography. For example, form labels often use a heavier font weight to stand out from secondary help text. Error messages commonly appear in red to draw attention, while optional tooltips are typically minimized or hidden by default to reduce distraction.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"Quicken account creation form with email, mobile, and password fields. Progress bar shows step two of three. Password field displays error for not meeting criteria. \" height=\"865\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/06/29/5-quicken.jpg\" width=\"1384\"/\u003e\n\u003cfigcaption\u003e✅\u003cem\u003e Quicken applied font size, weight, positioning, and color contrast to create a clear visual hierarchy in this form. The \u003c/em\u003eCreate Account\u003cem\u003e heading uses a font that is larger and thicker than that for field labels like \u003c/em\u003eEmail Address\u003cem\u003e. Hint text appears smaller to signal lower priority, while inline validation errors are highlighted in red to draw attention.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch3\u003eSort Questions and Options in a Logical Order\u003c/h3\u003e\n\u003cp\u003eStructuring a form is like having a conversation. The order of the form questions can impact flow and comprehension. Imagine sitting down with someone and asking them these questions face-to-face — what order would feel natural and respectful?\u003c/p\u003e\n\u003cp\u003eIn real conversations, it is natural to adjust your followup question or response based on what the other person said. Forms with branching logic work the same way. This approach — often referred to as a \u0026#34;\u003ca href=\"https://www.nngroup.com/articles/wizards/\"\u003ewizard\u003c/a\u003e\u0026#34; — dynamically displays relevant fields based on users’ prior input. Wizards not only minimize the physical effort required to fill out the form but also save users from spending attentional resources to scan and filter irrelevant questions.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eThe order of the questions should primarily minimize the effort necessary to fill in the form. \u003c/strong\u003eThis is a good principle to keep in mind, whether your form has branching or not. \u003c/p\u003e\n\u003cp\u003eFor example, if you want to know what problems users experienced using a product, you would start by asking them whether they have encountered a problem instead of asking them to enter their name, because the name will not be relevant if the user has not encountered a problem.\u003c/p\u003e\n\u003cp\u003eEven for forms without branching, you can lighten the users’ load if you ask the questions in the right order. For example, asking for the ZIP code before the state and city might save the user the effort of typing the state and city because you may be able to prepopulate these.\u003c/p\u003e\n\u003cp\u003eAside from branching considerations, if all questions will be encountered by all users, the right question ordering is often as much art as science. Here are a few organizational principles to consider.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eFamiliarity:\u003c/strong\u003e Start with easy, familiar information (e.g., name, email) to build momentum. Be consistent with how questions are typically presented in other forms.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePriority\u003c/strong\u003e: Prioritize the most important questions before collecting supplementary information.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDependency:\u003c/strong\u003e Later questions build on earlier ones.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eComplexity:\u003c/strong\u003e Begin with simpler questions before moving to more complex ones.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSensitivity:\u003c/strong\u003e Start with less sensitive information before requesting more personal details.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIn practice, these principles often work in combination. A job-application form might follow both \u003cstrong\u003efamiliarity\u003c/strong\u003e and \u003cstrong\u003esensitivity\u003c/strong\u003e principles — starting with basic contact information before requesting employment history or salary expectations. A survey with numerous optional fields may follow the \u003cstrong\u003epriority\u003c/strong\u003e principle to ensure the most critical information is collected upfront.\u003c/p\u003e\n\u003ch3\u003eUse Single-Column Layout\u003c/h3\u003e\n\u003cp\u003eResearch consistently shows that \u003cstrong\u003esingle-column layouts outperform multicolumn designs\u003c/strong\u003e for form-completion rates. A single column provides a clear, vertical path that’s easy to follow and scale across devices.\u003c/p\u003e\n\u003cp\u003eIn contrast, multicolumn layouts require users to interpret the sequence and direction of fields; that interpretation can vary from person to person. This ambiguity increases the likelihood that users will overlook fields or misunderstand the expected flow, and the tab order may feel unpredictable to some keyboard users. The problem compounds for users with accessibility needs, as screen readers may process fields in an order different from the visual layout, and those using screen magnifiers might miss fields that fall outside their zoomed-in viewport.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"Form requesting personal details including full name, address, phone number, and email, with a required consent checkbox above a large orange \u0026#34;Continue\u0026#34; button.\" height=\"748\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/06/29/6-discover.jpg\" width=\"1384\"/\u003e\n\u003cfigcaption\u003e❌ \u003cem\u003eDiscover Bank utilized a multicolumn layout in its loan-application form. This unpredictable layout combined with placeholder text made it easy to accidentally miss fields.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch3\u003eUtilize Progressive Disclosure\u003c/h3\u003e\n\u003cp\u003eLong forms can overwhelm users before they even start. \u003ca href=\"https://www.nngroup.com/articles/progressive-disclosure/\"\u003eProgressive disclosure\u003c/a\u003e solves this problem by presenting only what\u0026#39;s needed at each step of the process.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eWhen designing complex forms, show only what\u0026#39;s relevant to the current task,\u003c/strong\u003e and introduce additional fields as users progress. This could mean breaking down a long complex form into multiple pages or implementing conditional logic that displays fields based on previous answers.\u003c/p\u003e\n\u003cp\u003eThe \u0026#34;\u003ca href=\"https://designnotes.blog.gov.uk/2015/07/03/one-thing-per-page/\"\u003eone thing per page\u003c/a\u003e\u0026#34; pattern, recommended by GOV.UK follows this principle by showing only one question or task per screen. This focused approach breaks down complex forms and makes errors easy to spot and fix, as users are dealing with one topic at a time.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"Three-step mobile onboarding screen with a dark theme: first asks for user\u0026#39;s name, second asks for birth year with a scroll picker, third allows symptom tracking category selection.\" height=\"977\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/06/29/7.jpg\" width=\"1384\"/\u003e\n\u003cfigcaption\u003e✅ \u003cem\u003eInstead of presenting all questions in one long scrollable page, Visible made its onboarding experience more manageable by breaking it into multiple pages with a progress bar on the top. (Though we generally advise against using a wheel picker to select birth years due to low legibility and high interaction cost)\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch2 id=\"toc-transparency-3\"\u003eTransparency\u003c/h2\u003e\n\u003cp\u003eUncertainty increases cognitive load — when users don’t know where they are or cannot predict what comes next, they must spend mental energy on speculation rather than completion. Transparency builds trust and puts users in control, making the form feel predictable and less stressful.\u003c/p\u003e\n\u003ch3\u003eCommunicate Form Requirements Before Users Begin\u003c/h3\u003e\n\u003cp\u003eUsers want to know what they\u0026#39;re getting into before investing time in a form. Clear expectations about required information and time commitment help users prepare mentally and decide whether to proceed. This is especially important for forms that take more than a few minutes to complete or those that don’t allow users to save their progress if they need to exit halfway.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eWhen designing a long, multipage form, specify upfront:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eEstimated completion time\u003c/li\u003e\n\u003cli\u003eRequired materials or information (e.g., ID numbers, documents)\u003c/li\u003e\n\u003cli\u003eAny deadlines or time limits\u003c/li\u003e\n\u003cli\u003eMaximum number of attempts (if applicable)\u003c/li\u003e\n\u003cli\u003eWhether progress is automatically saved or if users must complete the form in one session\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfigure\u003e\u003cimg alt=\"Centered modal titled “Payment Setup” listing required information for rent payments setup, including bank info, rent details, renter info, and SSN or EIN. “Ok, got it” button below.\" height=\"863\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/06/29/8-zillow-web-201.jpg\" width=\"1384\"/\u003e\n\u003cfigcaption\u003e✅\u003cem\u003e Zillow informed users about the required documents to set up rent payments upfront, before guiding them through the multipage form.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch3\u003eMark Required Fields\u003c/h3\u003e\n\u003cp\u003eThink twice before including optional questions, as \u003cstrong\u003eeach question increases the form length and the perceived effort to complete it.\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eIf you decide to include optional questions, clearly \u003ca href=\"https://www.nngroup.com/articles/required-fields/\"\u003edistinguish them from required ones\u003c/a\u003e. In addition to using an asterisk to mark required fields, explicitly mark optional fields. This practice reassures users that they can skip nonessential questions and lightens their cognitive load. When marking is not clear enough, many people feel obligated to answer optional questions.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"SMS setup form on Klaviyo requesting company details including name, email, phone number, and address. “Next” and “Back” buttons appear in the top-right corner.\" height=\"863\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/06/29/10.jpg\" width=\"1384\"/\u003e\n\u003cfigcaption\u003e\u003cem\u003e​​\u003c/em\u003e✅ \u003cem\u003eKlaviyo clearly marked required fields with a red asterisk and optional fields with an \u003c/em\u003e(optional)\u003cem\u003e label.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch3\u003eShow Clear Progress Indicators\u003c/h3\u003e\n\u003cp\u003eAs one of the \u003ca href=\"https://www.nngroup.com/articles/ten-usability-heuristics/\"\u003e10 Usability Heuristics for User Interface Design\u003c/a\u003e, \u003ca href=\"https://www.nngroup.com/articles/visibility-system-status/\"\u003evisibility of system status\u003c/a\u003e helps users understand where they are and decide what to do next.\u003c/p\u003e\n\u003cp\u003eIn the context of completing a long form\u003cstrong\u003e, progress indicators give users a visual representation of how much they’ve filled and how much remains,\u003c/strong\u003e helping them gauge the effort required to complete the form. This sense of progression also fosters a feeling of accomplishment, which in turn motivates users to continue until the end.\u003c/p\u003e\n\u003cp\u003eIn addition, making all the steps visible from the start serves as an overview of the process and helps users form a \u003ca href=\"https://www.nngroup.com/articles/mental-models/\"\u003emental model\u003c/a\u003e of the form. This approach aligns with the \u003cstrong\u003estructure\u003c/strong\u003e principle discussed earlier.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"Google Analytics setup screen asking for business details. Step 3 of 5 in progress. Users must select an industry and business size using dropdown and radio buttons.\" height=\"864\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/06/29/11.jpg\" width=\"1384\"/\u003e\n\u003cfigcaption\u003e✅\u003cem\u003e Google Analytics clearly communicated the user\u0026#39;s progress with an explicit progress indicator at the top of the page, helping users understand the overall process of setting up an account.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch2 id=\"toc-clarity-4\"\u003eClarity\u003c/h2\u003e\n\u003cp\u003eAmbiguity slows users down. Clear instructions and design ensure that users don’t waste precious mental resources deciphering what a question means or figuring out how to interact with the interface.\u003c/p\u003e\n\u003ch3\u003eUse Plain Language\u003c/h3\u003e\n\u003cp\u003eForm labels and instructions should be immediately understandable. \u003ca href=\"https://www.nngroup.com/articles/plain-language-experts/\"\u003eUsing plain language benefits all users\u003c/a\u003e, regardless of their background or expertise. On the other hand, \u003ca href=\"https://www.nngroup.com/articles/technical-jargon/\"\u003etechnical jargon\u003c/a\u003e, internal company terminology, or overly complex language creates barriers that slow users. We usually recommend writing at the 6th to 8th-grade reading level for general audiences — users shouldn\u0026#39;t need to understand specialized vocabulary to fill your form.\u003c/p\u003e\n\u003cp\u003eThe most effective forms use language that mirrors how users naturally think and speak about the information being requested.\u003c/p\u003e\n\u003cp\u003eFor example, a healthcare form that asks for \u003cem\u003eChief complaint\u003c/em\u003e might confuse many patients, while \u003cem\u003eReason for visit\u003c/em\u003e communicates the same request in a more straightforward way. Similarly, asking patients to \u003cem\u003eIndicate prior surgical procedures\u003c/em\u003e creates more cognitive work than simply asking \u003cem\u003eHave you had any surgeries?\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eBefore finalizing your form copy, \u003ca href=\"https://www.nngroup.com/articles/testing-content-websites/\"\u003etest it with actual users\u003c/a\u003e and observe where they stumble. If you notice patterns of confusion or hesitation around certain terms, that\u0026#39;s your signal to simplify.\u003c/p\u003e\n\u003ch3\u003eUse Positive Wording\u003c/h3\u003e\n\u003cp\u003eNegative wording complicates how users interpret questions, as it forces them to mentally reverse statements. It increases cognitive effort and the risk of errors. This is especially relevant for \u003ca href=\"https://www.nngroup.com/articles/checkboxes-design-guidelines/\"\u003estandalone checkboxes\u003c/a\u003e — opt-in statements should use language that matches the intended outcome.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"Udemy notification settings page showing three checkbox options for email preferences. “Don’t send me any promotional emails” is selected. Sidebar navigation is on the left.\" height=\"806\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/06/29/12-udemy-web-325.jpg\" width=\"1384\"/\u003e\n\u003cfigcaption\u003e❌ \u003cem\u003eUdemy asked users to check a box to \u003c/em\u003enot\u003cem\u003e receive promotional emails. Checking this box automatically deselected the boxes above. This type of design creates unnecessary confusion. \u003c/em\u003e\u003cem\u003eA better approach would be to first ask users whether they want to receive promotional emails, then provide followup options to specify the types of content they prefer.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch3\u003eAvoid Double-Barreled Questions\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003eDouble-barreled questions \u003c/strong\u003eare questions\u003cstrong\u003e \u003c/strong\u003ethat \u003cstrong\u003eask about two things at once\u003c/strong\u003e; they are a common survey pitfall. They introduce ambiguity as users might agree with one part but disagree with another.\u003c/p\u003e\n\u003cp\u003eFor example, a survey question like \u003cem\u003eWas our website helpful and easy to navigate?\u003c/em\u003e forces respondents to give a single answer to two distinct asks. Someone might find the content helpful but the navigation confusing or vice versa.\u003c/p\u003e\n\u003cp\u003eTo eliminate the ambiguity, ask about one thing at a time: \u003cem\u003eHow helpful was our website content?\u003c/em\u003e followed by \u003cem\u003eHow easy was our website to navigate?\u003c/em\u003e This not only reduces cognitive load but also captures more-precise data that accurately represents user experiences.\u003c/p\u003e\n\u003ch3\u003eProvide Context and Examples\u003c/h3\u003e\n\u003cp\u003eIf a field requires a specific format or type of input, explicitly state the requirements upfront to prevent users from spending mental effort inferring what these may be or from guessing wrong. For example, date formats vary globally, so offering a simple formatting example — like \u003cem\u003eMM/DD/YYYY\u003c/em\u003e or \u003cem\u003eDD/MM/YYYY\u003c/em\u003e — gives users a concrete reference point and prevents errors that might otherwise require correction later.\u003c/p\u003e\n\u003cp\u003eWhen requesting complex identification strings such as tracking numbers, product serial codes, or reference numbers, tell users exactly what to look for:\u003cem\u003e16-digit code found on your receipt\u003c/em\u003e or \u003cem\u003e3 letters followed by 9 numbers (ABC123456789)\u003c/em\u003e. This guidance eliminates the guesswork and helps users locate and enter the information accurately and efficiently.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"Mobile interface for adding a Dyson product. Left screen shows how to find the serial number on the device or box. Right screen prompts manual serial number entry with keyboard active.\" height=\"839\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/06/29/13-dyson.jpg\" width=\"800\"/\u003e\n\u003cfigcaption\u003e✅\u003cem\u003e \u003c/em\u003e\u003cem\u003eDyson guided users to locate the serial number with clear instructions and indicated the number format to set up proper expectations.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch3\u003eFollow Conventions for Form Elements\u003c/h3\u003e\n\u003cp\u003eUsers develop mental models about how form elements should look and behave \u003ca href=\"https://www.nngroup.com/videos/jakobs-law-internet-ux/\"\u003ebased on their experiences across websites\u003c/a\u003e. Using consistent, familiar patterns allows users to apply existing knowledge and focus on the task at hand, rather than figuring out how the interface works.\u003c/p\u003e\n\u003cp\u003eFor example, consider how disorienting it would be to encounter a checkbox that, when clicked, automatically deselected all other checkboxes in the group (behavior normally associated with radio buttons).\u003c/p\u003e\n\u003cp\u003eDesigners often feel pressure to \u003ca href=\"https://www.nngroup.com/articles/power-law-learning/\"\u003ecreate novel, distinctive interfaces\u003c/a\u003e that stand out from competitors. While innovation has its place, form elements are rarely the appropriate place for creative experimentation. The potential cost — confusion, errors, and abandonment — far outweighs the benefits of novelty.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"ChatGPT said: Squarespace forum content search interface with filters selected for “Blog Entries,” search in “Content titles and body,” and “All of my search term words.” Date filters are set to “Any.”\" height=\"865\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/06/29/14-squarespace-web-1215.jpg\" width=\"1384\"/\u003e\n\u003cfigcaption\u003e❌ \u003cem\u003eSquarespace used an unconventional style for checked radio buttons: instead of a filled circle, it showed a checkmark and highlighted the entire row. This design breaks with web conventions and can cause users to question whether these are radio buttons.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch3\u003eMatch Input-Field Length to Expected Content\u003c/h3\u003e\n\u003cp\u003eThe size of an input field provides a visual cue about the expected length of the answer.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eA short field suggests a brief response\u003c/strong\u003e, ideal for concise data like ZIP codes or age. \u003cstrong\u003eA longer field implies that more detailed input is needed\u003c/strong\u003e, such as an address, description, or comment. If the field length doesn\u0026#39;t match the expected input, users may question whether they understand what\u0026#39;s being asked.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"Form titled “Life Insurance Policy Locator Service” requesting personal contact details including name, address, phone, and email. Required fields are marked with red highlights. \" height=\"745\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/06/29/15.jpg\" width=\"1384\"/\u003e\n\u003cfigcaption\u003e❌ \u003cem\u003eNAIC implemented the same field length across all the fields in its contact form. While this approach created a consistent layout, some fields — like \u003c/em\u003ePhone\u003cem\u003e, \u003c/em\u003eCity\u003cem\u003e, and \u003c/em\u003eZip\u003cem\u003e — were unnecessarily long and potentially confusing.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch2 id=\"toc-support-5\"\u003eSupport\u003c/h2\u003e\n\u003cp\u003eFilling out a form can feel like a mental marathon, and users should be supported at every step of the way. This means offering visible, persistent guidance, \u003ca href=\"https://www.nngroup.com/articles/slips/\"\u003epreventing mistakes before they happen\u003c/a\u003e, and providing timely assistance when errors occur. Consistent, thoughtful support builds user confidence and makes users more likely to stick with the form until the end.\u003c/p\u003e\n\u003ch3\u003eAvoid Using Placeholders\u003c/h3\u003e\n\u003cp\u003eWhile placeholders — the text inside input fields that disappears when users tap into the field — may seem like a space-efficient way to provide guidance at first glance, they\u003ca href=\"https://www.nngroup.com/articles/form-design-placeholders/\"\u003e cause significant usability problems\u003c/a\u003e:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThey disappear when users start typing, forcing them to remember instructions using \u003ca href=\"https://www.nngroup.com/articles/short-term-memory-and-web-usability/\"\u003eshort-term memory\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eThey typically use light gray text with low contrast and are thus difficult to read.\u003c/li\u003e\n\u003cli\u003eThey can be mistaken for prefilled values, causing users to overlook or accidentally skip fields.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eInstead, keep \u003cstrong\u003eboth the label and help text outside the input field\u003c/strong\u003e and leave the input field empty. This design ensures users have access to consistent, visible guidance at all times — whether they are actively filling out the field or reviewing their entry before submission.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"Stripe sales contact form with fields for personal, company, and payment details on the right, and marketing points on the left. “Contact sales” button in bottom right.\" height=\"865\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/06/29/16.jpg\" width=\"1384\"/\u003e\n\u003cfigcaption\u003e❌ \u003cem\u003eStripe used placeholder text to show examples and provide additional context. While this approach aligns with the clarity principle discussed above, light gray text is difficult to read and can cause users to mistake the placeholder text for filled content.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch3\u003eInclude Helpful Constraints\u003c/h3\u003e\n\u003cp\u003eWhile we should generally champion \u003ca href=\"https://www.nngroup.com/articles/user-control-and-freedom/\"\u003euser freedom\u003c/a\u003e, in cases where clear rules define acceptable options, constraints become beneficial as they prevent users from making costly or time-consuming mistakes. Rather than letting users input invalid data and then showing an error message later, proactive constraints catch errors before they occur.\u003c/p\u003e\n\u003cp\u003eFor example, when designing a banking transfer interface, preventing users from entering amounts exceeding their available balance is more effective than allowing them to proceed to trigger an invalid transaction or overdraft.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"Mobile money transfer screen showing a $1,000 entry with a warning that the maximum transferable amount is $500. SoFi Checking is selected as the source account.\" height=\"759\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/06/29/17.jpg\" width=\"350\"/\u003e\n\u003cfigcaption\u003e✅\u003cem\u003e \u003c/em\u003e\u003cem\u003eSoFi set the transaction limit to the account\u0026#39;s maximum balance. If the user exceeded this limit, the background darkened to draw attention to an error message indicating the transaction limit.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch3\u003eDisplay Timely, Visible Error Messages\u003c/h3\u003e\n\u003cp\u003eUsers are only human, and mistakes happen. The key is offering support at the right moment without disrupting users’ flow. The ideal approach should achieve a balance between giving users space to work and catching errors early.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eAvoid \u003c/strong\u003e\u003ca href=\"https://www.nngroup.com/articles/hostile-error-messages/\"\u003e\u003cstrong\u003epremature validation\u003c/strong\u003e\u003c/a\u003e: Don\u0026#39;t display errors as soon as users click into a field or just start to type — they haven\u0026#39;t even had a chance to type anything yet. Premature validation is often considered a hostile pattern as it disrupts users’ flow with unwarranted scolding. As a rule of thumb, avoid displaying the error until the user has finished with the field and moved to the next field. \u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eUse real-time validation selectively\u003c/strong\u003e: Implement real-time validation only when users benefit from immediate feedback (such as a password-requirement checklist) or when the error message helps prevent critical mistakes. Otherwise, it may distract users from their primary task.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo minimize cognitive load,\u003ca href=\"https://www.nngroup.com/articles/error-message-guidelines/\"\u003e\u003cstrong\u003e error messages\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e should be displayed next to the field containing the error\u003c/strong\u003e. If the error message is displayed in a dialog or far away from that field, the user will need to commit the message to memory in order to fix the error. This increases cognitive load.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"ChatGPT said: Urban Outfitters checkout form with shipping details on the left and order summary on the right. “Invalid promo code” message appears in red above. “Continue” button in green.\" height=\"865\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/06/29/18.jpg\" width=\"1384\"/\u003e\n\u003cfigcaption\u003e❌\u003cem\u003e Urban Outfitters displayed the error message only at the top of the screen, far from the field it referred to (Promo Code). This forced users to rescan the form or use short-term memory to refind the location of the field.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003cp\u003eAdditionally, error messages should provide constructive communication, and respect user effort. Rather than just pointing out problems, they should guide users toward fixing the issue, highlighting the specific mistake and offering practical suggestions. Thoughtfully designed error messages help users feel supported rather than blamed.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"Shop naming screen with \u0026#34;happybee\u0026#34; entered and an error message indicating the name is taken. Suggested alternative names are shown below the input field. Progress bar shows step 2 of 6.\" height=\"718\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/06/29/19-new.jpg\" width=\"1384\"/\u003e\n\u003cfigcaption\u003e✅\u003cem\u003e In addition to clearly displaying an error message when a username was taken, Etsy suggested multiple available alternatives based on the user’s input, helping users find an available name without \u003c/em\u003e\u003ca href=\"https://www.nngroup.com/articles/pogo-sticking/\"\u003e\u003cem\u003epogosticking\u003c/em\u003e\u003c/a\u003e\u003cem\u003e.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch2 id=\"toc-conclusion-6\"\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eFilling out a form is like scaling a mountain — users need \u003cstrong\u003ea well-marked path (structure)\u003c/strong\u003e\u003cstrong\u003e \u003c/strong\u003eto guide their steps, \u003cstrong\u003ea clear view of what lies ahead (transparency)\u003c/strong\u003e\u003cstrong\u003e \u003c/strong\u003eto stay oriented, easy-to-understand\u003cstrong\u003e signposts (clarity)\u003c/strong\u003e to navigate confidently, and \u003cstrong\u003erobust guardrails (support)\u003c/strong\u003e to keep them from stumbling. By applying these four principles — structure, transparency, clarity, and support — you’ll design forms that allow users to spend less time figuring out what to do and more time providing valuable information.\u003c/p\u003e\n            \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "24 min read",
  "publishedTime": "2025-07-18T17:00:00Z",
  "modifiedTime": null
}
