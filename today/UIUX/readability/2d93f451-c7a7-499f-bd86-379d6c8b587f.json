{
  "id": "2d93f451-c7a7-499f-bd86-379d6c8b587f",
  "title": "Test smart: how to deal with biases around testing?",
  "link": "https://uxdesign.cc/test-smart-how-to-deal-with-biases-around-testing-9117691e55ae?source=rss----138adf9c44c---4",
  "description": "",
  "author": "Julia Kocbek",
  "published": "Thu, 20 Mar 2025 22:34:06 GMT",
  "source": "https://uxdesign.cc/feed",
  "categories": [
    "ux",
    "automation",
    "agile",
    "qa",
    "testing"
  ],
  "byline": "Julia Kocbek",
  "length": 8680,
  "excerpt": "In the fast-moving IT world, it is vital not to lose your compass when drifting into the ocean of opportunities. The hype around automation and related tools sometimes pushes us to rethink the role…",
  "siteName": "UX Collective",
  "favicon": "https://miro.medium.com/v2/resize:fill:256:256/1*dn6MbbIIlwobt0jnUcrt_Q.png",
  "text": "It is time to be more vocal about the profession’s pain points and shed light on the testing craft.In the fast-moving IT world, it is vital not to lose your compass when drifting into the ocean of opportunities. The hype around automation and related tools sometimes pushes us to rethink the role of testers in digital product development. The biases around testing form the perception of testing professionals in tech companies which is sometimes reduced to “regression tests maintainer” or “bug detector”. The same stereotypes likely affect the self-perception of testers and create the feeling of being undervalued and as a result, underpaid.However, in agile teams, the Tester’s job is not just applying various testing techniques but much more: analysis of user stories, reviewing prototypes, scripting test cases, monitoring of the system’s behaviour, researching user feedback, maintenance of tools for testing and test management, and so on.At the same time, the existing biases might simplify the tester’s role. I observe testers are actively sharing their concerns within the professional community. However, fewer talks are circulating outside this bubble, and it needs to be changed. From my experience, a few pain points affect a modern Tester: a cult of automation, praising tools over testing strategy and inappropriate professional labelling.Cult of automation“What is your experience with automation?” — that was the question from the hiring manager. If this question is asked as the first one, it feels that the company is looking for a tester who will automate the tons of tests that no one hasn’t touched before. However, there are a few issues to be aware of before any team rushes into automation.For now, you better don’t disturb Woody, because he is too busy with automation 🙂Firstly, there is unrealistic thinking that automation of repetitive (regression) tests is a remedy for all the quality pain points. Let’s imagine that we have automated the majority of current repetitive tests. Cool! Let’s exhale deeply. Yet if you think that now you have more time for meditation, that’s far from the reality. What about the tests that will be added as new features are introduced? What about the tests that will be changed on the way as soon as some feature gets updated? What about the tests that cannot be automated? Your team will need a person who will orchestrate all of these things. Or even a few people if the scale of the product is impressive.Secondly, sometimes the companies don’t even realise how expensive automation efforts are. One thing is to write the scripts in some tool: if the tool is like Cypress or Playwright, there are many hours of coding work behind the scenes. Another thing is maintaining automated tests and keeping them in line with all the product’s updates (it means another bunch of hours to “repair” the previously written testing code). Hopefully, this will be changed with the advancement of AI-driven tools. However, not every company has grabbed AI tools to apply in their testing efforts. Some prefer rolling down the hill and continue applying the tools their teams have been using for years (hello old buddy Cypress).Thirdly, once you have a new batch of features that should be tested for tomorrow (yesterday), automation will hardly be your priority. Very often automation doesn’t look as fancy as it sounds. You will test new features by applying exploratory techniques in the first round because automating the tests is time-consuming. Even if you don’t have any burning deadlines for testing new features, you still need to use exploratory testing before automating tests in any specific tool. And it requires a bunch of time and effort from QA Engineers, on top of automation.It would be better if the mentality of hiring companies and their representatives shifted into a more holistic view towards testing roles. A similar change is required in the tech community: the teams should embrace the constraints of automation and analyze the current state and resources carefully before starting any automation project. Because automating tests is always a project!Praising tools over testing strategyFrom the recent job interviews, I’ve learnt that people like to talk about the tools and frameworks they use. Perhaps, we tend to think this is already an achievement if one learns how to apply this or that tool. But what about the actual testing strategy? Is there any strategy that the team follows when using these tools? Do we apply some techniques randomly or on demand from the client (a request about a special type of testing, like a security one, etc.)?Tools and frameworks are helpful when we know how to utilize them within testing strategies. It’s another (sad) story if we don’t have a testing strategy for our product. We can use some trendy tools as nice-haves. Yet, do we know where we are moving when applying this or that tool? What are our team’s actual needs regarding testing?So, an overall testing strategy that includes a set of techniques and tools is an essential asset for every team. It is something that testing should be based on in the team. Like a grammar book for language learners, the testing strategy will reflect the system of testing methods and tools. But who should be responsible for it?To make it more efficient, Wayne Roseberry suggests assigning a test owner: “The test owner describes the test approach in the test strategy. The team will execute on that approach as agreed by the team.” For me, it is a brilliant idea to have a person who initiates the discussion and keeps an eye on the testing strategy in the team.And the best profile that will match this task is, of course, Tester! However, if your team does not have one, then this role should be delegated to a team member who is familiar with testing fundamentals and strategic planning. It is not an easy pair of shoes to wear, though.Sometimes it is smart to stop and think about the current situation. You may write or draw your testing strategy down. To check where you are, it is handy to apply Agile Testing Quadrants, originally introduced by Lisa Crispin and Janet Gregory. By discussing them with your team, you’ll see if you are moving in the right direction and fill the gaps in your unique testing strategy.Inappropriate labellingAs humans, we love to use labels when naming others around us. It is easier then to explain the world around us but it may also narrow our perspective on some subjects. I believe that testing is undervalued today due to prejudices caused by the wrong labelling.Adding the adjective “manual” or “automated” to the job title might simplify the role. For instance, manual QA might be stereotypically perceived as a low-qualified professional who does manual checks at the end of the development process, a kind of factory worker. An automation specialist might be perceived as a tester and developer, two in one, and it is not clear if this person only codes the repetitive tests or does something else.However, the “manual” or “automated” labels might be the shortcuts to the wrong perception of the software tester’s role which is a way wider than just quality checks of developed digital products. So let’s get to the root of the problem.Michael Bolton captures it brilliantly. He notes: “The false and unhelpful idea that testing can be automated prompts the division of testing into “manual testing” and “automated testing”.” I do agree. We cannot “automate manual testing away” as some voices from the tech community suggest. Testing is a human-driven activity by default.Rudolf Groetz makes a great comparison with a hammer and a screwdriver to illustrate the irrelevance of the debate around manual versus automated testing: “Let me just say it upfront: the whole debate about “Manual Testing vs Automated Tests” doesn’t make sense. Comparing these is like comparing a hammer to a screwdriver — they’re tools for different jobs.”Jeff Nyman argues that the division between “manual” and “automated” testing is a consequence of the weak community reaction to corporate trends: “Testers have abdicated the discussion to others — mostly developers — on the ambit of testing.”Indeed, we do not hear often about “manual” and “automated” developers. Or do we? 🙂Overall, I agree it is the testers’ responsibility to use proper terminology. The idea of dividing testing into manual (human-driven) and automated is pointless, although it is trendy among the tech community. Sometimes, you might run into a profile labelled “Automation Specialist” or “Manual Tester”. So, maybe we, testers, need to start with ourselves and be the change we’d like to see regarding our craft.",
  "image": "https://miro.medium.com/v2/resize:fit:1200/1*C4SHonr7zmbh0K9Gz5vPZg.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cdiv\u003e\u003ch2 id=\"b911\"\u003eIt is time to be more vocal about the profession’s pain points and shed light on the testing craft.\u003c/h2\u003e\u003cdiv\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://julia-kocbek.medium.com/?source=post_page---byline--9117691e55ae---------------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Julia Kocbek\" src=\"https://miro.medium.com/v2/resize:fill:88:88/2*_YO9K2thchsjAV3VN8btYg.jpeg\" width=\"44\" height=\"44\" loading=\"lazy\" data-testid=\"authorPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://uxdesign.cc/?source=post_page---byline--9117691e55ae---------------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"UX Collective\" src=\"https://miro.medium.com/v2/resize:fill:48:48/1*mDhF9X4VO0rCrJvWFatyxg.png\" width=\"24\" height=\"24\" loading=\"lazy\" data-testid=\"publicationPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cp id=\"5168\"\u003eIn the fast-moving IT world, it is vital not to lose your compass when drifting into the ocean of opportunities. The hype around automation and related tools sometimes pushes us to rethink the role of testers in digital product development. The biases around testing form the perception of testing professionals in tech companies which is sometimes reduced to “regression tests maintainer” or “bug detector”. The same stereotypes likely affect the self-perception of testers and create the feeling of being undervalued and as a result, underpaid.\u003c/p\u003e\u003cp id=\"0549\"\u003eHowever, in agile teams, the Tester’s job is not just applying various testing techniques but much more: analysis of user stories, reviewing prototypes, scripting test cases, monitoring of the system’s behaviour, researching user feedback, maintenance of tools for testing and test management, and so on.\u003c/p\u003e\u003cp id=\"a342\"\u003eAt the same time, the existing biases might simplify the tester’s role. I observe testers are actively sharing their concerns within the professional community. However, fewer talks are circulating outside this bubble, and it needs to be changed. From my experience, a few pain points affect a modern Tester: a \u003cem\u003ecult of automation\u003c/em\u003e, \u003cem\u003epraising tools over testing strategy\u003c/em\u003e and \u003cem\u003einappropriate professional labelling\u003c/em\u003e.\u003c/p\u003e\u003ch2 id=\"1f27\"\u003eCult of automation\u003c/h2\u003e\u003cp id=\"1abf\"\u003e“What is your experience with automation?” — that was the question from the hiring manager. If this question is asked as the first one, it feels that the company is looking for a tester who will automate the tons of tests that no one hasn’t touched before. However, there are a few issues to be aware of before any team rushes into automation.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eFor now, you better don’t disturb Woody, because he is too busy with automation 🙂\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"7589\"\u003eFirstly, there is unrealistic thinking that automation of repetitive (\u003ca href=\"https://en.wikipedia.org/wiki/Regression_testing\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eregression\u003c/a\u003e) tests is a remedy for all the quality pain points. Let’s imagine that we have automated the majority of current repetitive tests. Cool! Let’s exhale deeply. Yet if you think that now you have more time for meditation, that’s far from the reality. What about the tests that will be added as new features are introduced? What about the tests that will be changed on the way as soon as some feature gets updated? What about the tests that cannot be automated? Your team will need a person who will orchestrate all of these things. Or even a few people if the scale of the product is impressive.\u003c/p\u003e\u003cp id=\"32a9\"\u003eSecondly, sometimes the companies don’t even realise how expensive automation efforts are. One thing is to write the scripts in some tool: if the tool is like Cypress or Playwright, there are many hours of coding work behind the scenes. Another thing is maintaining automated tests and keeping them in line with all the product’s updates (it means another bunch of hours to “repair” the previously written testing code). Hopefully, this will be changed with the advancement of AI-driven tools. However, not every company has grabbed AI tools to apply in their testing efforts. Some prefer rolling down the hill and continue applying the tools their teams have been using for years (hello old buddy Cypress).\u003c/p\u003e\u003cp id=\"91d8\"\u003eThirdly, once you have a new batch of features that should be tested for tomorrow (yesterday), automation will hardly be your priority. Very often automation \u003ca href=\"https://iryna-suprun.medium.com/no-time-to-test-and-no-time-to-automate-306e0b4cedc6\" rel=\"noopener\"\u003edoesn’t look as fancy\u003c/a\u003e as it sounds. You will test new features by applying exploratory techniques in the first round because automating the tests is time-consuming. Even if you don’t have any burning deadlines for testing new features, you still need to use \u003ca rel=\"noopener\" target=\"_blank\" href=\"https://uxdesign.cc/test-smart-how-to-explore-a-product-like-sherlock-040b268786da\"\u003eexploratory testing\u003c/a\u003e before automating tests in any specific tool. And it requires a bunch of time and effort from QA Engineers, on top of automation.\u003c/p\u003e\u003cp id=\"6d62\"\u003eIt would be better if the mentality of hiring companies and their representatives shifted into a more holistic view towards testing roles. A similar change is required in the tech community: the teams should embrace the constraints of automation and analyze the current state and resources carefully before starting any automation project. Because automating tests is always a project!\u003c/p\u003e\u003ch2 id=\"c6bc\"\u003ePraising tools over testing strategy\u003c/h2\u003e\u003cp id=\"3929\"\u003eFrom the recent job interviews, I’ve learnt that people like to talk about the tools and frameworks they use. Perhaps, we tend to think this is already an achievement if one learns how to apply this or that tool. But what about the actual testing strategy? Is there any strategy that the team follows when using these tools? Do we apply some techniques randomly or on demand from the client (a request about a special type of testing, like a security one, etc.)?\u003c/p\u003e\u003cp id=\"a47a\"\u003eTools and frameworks are helpful when we know how to utilize them within testing strategies. It’s another (sad) story if we don’t have a testing strategy for our product. We can use some trendy tools as nice-haves. Yet, do we know where we are moving when applying this or that tool? What are our team’s actual needs regarding testing?\u003c/p\u003e\u003cp id=\"ee83\"\u003eSo, an overall testing strategy that includes a set of techniques and tools is an essential asset for every team. It is something that testing should be based on in the team. Like a grammar book for language learners, the testing strategy will reflect the system of testing methods and tools. But who should be responsible for it?\u003c/p\u003e\u003cp id=\"2e03\"\u003eTo make it more efficient, \u003ca href=\"https://www.linkedin.com/posts/wayneroseberry_softwaretesting-softwaredevelopment-shiftleftisdeadlonglifeshiftitalloverthefreakinmap-activity-7306748640247566338-Gw4Q?utm_source=share\u0026amp;utm_medium=member_desktop\u0026amp;rcm=ACoAAB90TUEB5tYF0V8tkaunqA0CWNOzUEqdFbk\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eWayne Roseberry\u003c/a\u003e suggests assigning a test owner: \u003cem\u003e“The test owner describes the test approach in the test strategy. The team will execute on that approach as agreed by the team.” \u003c/em\u003eFor me, it is a brilliant idea to have a person who initiates the discussion and keeps an eye on the testing strategy in the team.\u003c/p\u003e\u003cp id=\"529e\"\u003eAnd the best profile that will match this task is, of course, Tester! However, if your team does not have one, then this role should be delegated to a team member who is familiar with testing fundamentals and strategic planning. It is not an easy pair of shoes to wear, though.\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"308c\"\u003eSometimes it is smart to stop and think about the current situation. You may write or draw your testing strategy down. To check where you are, it is handy to apply \u003ca rel=\"noopener\" target=\"_blank\" href=\"https://uxdesign.cc/test-smart-how-to-select-testing-techniques-for-agile-team-ad6847eaa242\"\u003eAgile Testing Quadrants\u003c/a\u003e, originally introduced by Lisa Crispin and Janet Gregory. By discussing them with your team, you’ll see if you are moving in the right direction and fill the gaps in your unique testing strategy.\u003c/p\u003e\u003ch2 id=\"a503\"\u003eInappropriate labelling\u003c/h2\u003e\u003cp id=\"430b\"\u003eAs humans, we love to use labels when naming others around us. It is easier then to explain the world around us but it may also narrow our perspective on some subjects. I believe that testing is undervalued today due to prejudices caused by the wrong labelling.\u003c/p\u003e\u003cp id=\"06bd\"\u003eAdding the adjective “manual” or “automated” to the job title might simplify the role. For instance, manual QA might be stereotypically perceived as a low-qualified professional who does manual checks at the end of the development process, a kind of factory worker. An automation specialist might be perceived as a tester and developer, two in one, and it is not clear if this person only codes the repetitive tests or does something else.\u003c/p\u003e\u003cp id=\"efc6\"\u003eHowever, the “manual” or “automated” labels might be the shortcuts to the wrong perception of the software tester’s role which is a way wider than just quality checks of developed digital products. So let’s get to the root of the problem.\u003c/p\u003e\u003cp id=\"cee7\"\u003e\u003ca href=\"https://developsense.com/blog/2021/08/alternatives-to-manual-testing-experiential-attended-exploratory\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eMichael Bolton\u003c/a\u003e captures it brilliantly. He notes: \u003cem\u003e“The false and unhelpful idea that \u003c/em\u003e\u003cstrong\u003e\u003cem\u003etesting can be automated\u003c/em\u003e\u003c/strong\u003e\u003cem\u003e prompts the division of testing into “manual testing” and “automated testing”.” \u003c/em\u003eI do agree. We cannot \u003cem\u003e“automate manual testing away”\u003c/em\u003e as some voices from the tech community suggest. Testing is a human-driven activity by default.\u003c/p\u003e\u003cp id=\"b18a\"\u003e\u003ca href=\"https://www.linkedin.com/pulse/manual-testing-vs-automated-thats-missing-point-rudolf-groetz-i7zyf/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eRudolf Groetz\u003c/a\u003e makes a great comparison with a hammer and a screwdriver to illustrate the irrelevance of the debate around manual versus automated testing: “\u003cem\u003eLet me just say it upfront: the whole debate about “Manual Testing vs Automated Tests” doesn’t make sense. Comparing these is like comparing a hammer to a screwdriver — they’re tools for different jobs.”\u003c/em\u003e\u003c/p\u003e\u003cp id=\"c80e\"\u003e\u003ca href=\"https://testerstories.com/2023/01/a-history-of-automated-testing/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eJeff Nyman\u003c/a\u003e argues that the division between “manual” and “automated” testing is a consequence of the weak community reaction to corporate trends: \u003cem\u003e“Testers have abdicated the discussion to others — mostly developers — on the ambit of testing.”\u003c/em\u003e\u003c/p\u003e\u003cp id=\"04ca\"\u003eIndeed, we do not hear often about “manual” and “automated” developers. Or do we? 🙂\u003c/p\u003e\u003cp id=\"1503\"\u003eOverall, I agree it is the testers’ responsibility to use proper terminology. The idea of dividing testing into manual (human-driven) and automated is pointless, although it is trendy among the tech community. Sometimes, you might run into a profile labelled “Automation Specialist” or “Manual Tester”. So, maybe we, testers, need to start with ourselves and be the change we’d like to see regarding our craft.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "9 min read",
  "publishedTime": "2025-03-20T22:34:06.055Z",
  "modifiedTime": null
}
