{
  "id": "3bfd04f1-2cca-492e-a0a4-788944413b19",
  "title": "Creating Design Specs for Development",
  "link": "https://www.nngroup.com/articles/creating-design-specs-for-development/?utm_source=rss\u0026utm_medium=feed\u0026utm_campaign=rss-syndication",
  "description": "Design specifications should provide all the relevant information needed to align the design and development teams.",
  "author": "Kelley Gordon",
  "published": "Fri, 20 Jun 2025 17:00:00 +0000",
  "source": "https://www.nngroup.com/feed/rss/",
  "categories": [
    "Article"
  ],
  "byline": "Kelley Gordon",
  "length": 10410,
  "excerpt": "Design specifications should provide all the relevant information needed to align the design and development teams.",
  "siteName": "Nielsen Norman Group",
  "favicon": "",
  "text": "Summary:  Design specifications should provide all the relevant information needed to align the design and development teams. You work tirelessly on a new design project. It’s your masterpiece… until the dev team says it isn’t possible. Most designers have experienced this situation at some point in their careers. As frustrating as it may be, there are many ways to avoid this situation from happening. Clear design specs are a good place to start. What Are Design Specs? The Components of a Design Spec Examples of Specs Tips for Aligning with Developers What Are Design Specs? Design specifications are a way to align on and efficiently communicate designs to a software-development team.  Design specifications (specs) are documents that provide all relevant information on the functionality, behavior, and appearance of a design, so that developers can implement the design into a real, functioning product. Design specs allow the design and development teams to have productive conversations and align on user needs, design feasibility, and design and technical requirements. Depending on the project needs, design specs can be focused on one design aspect. For example, for a visual-refresh project, the design spec may include only information about the appearance of the different design elements, rather than on their functionality.  For many teams, this documentation takes the form of a Figma (or other design tool) link with additional project and development details, organized in a development issue or ticket in a development tool, like GitHub or Linear. The development issue would include relevant contextual information, like the goal, use case or requirements the design solves for, so that developers can implement the design. Design specifications include a design file and development issue that contains additional context. The Components of a Design Spec Remember, the spec has two big components: the design file (e.g., Figma) and the development issue. What Is Included in the Design File The design file is what designers typically think of when they hear the phrase “design spec.” It specifies the design work that the design team produces, broken down into consumable pieces for the development team.  This portion of the spec should include information about: Interaction flows: Define what happens when users click or tap on interactive elements. Visual design: Define the color palette, typography styles, and icons used in the design. Color palettes and typographic styles should be set up separately in the design file, with each style named appropriately, so developers and other designers can easily use them. Layout: Define the grid system used, as well as various breakpoints. Interaction elements: Provide components for any user-interface elements, like buttons and input fields. Include any details about associated microinteractions, like animations or transitions. Content: Use real text and multimedia content in the design mockups, not placeholders, providing details needed for image sizes.  Specific accessibility needs: Your designs should comply with accessibility standards; however,  specific items (e.g., tabbing order on a page or alt text) may need to be called out explicitly. What Is Included in the Development Issue A lot of development teams see the development issue as a “contract” between the dev and design teams. What is outlined in the issue is what the developer is on the hook for delivering. Issues typically include a lot of context needed to understand the designs and the project: the goal of the design, what is in and out of the project’s scope, a description of the functional (e.g., system features) and nonfunctional (e.g., performance) requirements, any use cases the design touches on, and potential risks and mitigations. This information should be specific to the design that is getting implemented and should come from the product owner or tech lead.  A screenshot of the design may also be included in the development issue, to communicate what the dev and design team agreed on when the issue was written. The screenshot also allows development to quickly see what the issue is about. However, if screenshots are included, they should be consistent with the designs in the design file.  If the design gets updated, the design team will need to discuss the update and an implementation timeline with the development team. Depending on how big the update is, an additional development issue might be created. Any discrepancies between the screenshots in the development issue and the Figma file should be noted to prevent confusion about what needs to be implemented.  A Linear issue contains context and design details, including a link to the Figma design file. Small specs are much easier to create and implement than one very large spec. If a design spec is getting too large and difficult to organize and maintain, it might be a sign that it needs to be broken down into smaller, more digestible pieces. Include the dev team in this decision, as the ease of implementation will be affected by how the design is further broken down. Specs Are Created in the Design Phase In the end-to-end product-design process, design specs are created during the design phase, after substantial work has already been completed. Before creating a spec, your team should: Define the product's strategic context  Conduct any necessary discovery research  Create and prototype flows and interactions based on user needs  Carry out usability testing on the designs you or your team has created  Apply findings discovered through usability testing to designs It takes a lot of time to create a spec and then implement the designs. You want to make sure the designs are worth the effort and they address the right user needs. That is why a lot of upfront work is needed before even getting to spec your design work.      Design specs are created in the design phase of the end-to-end product design process. Who Is Responsible for Writing Design Specs?  The design team (whether made up of one designer or several designers with specialized roles such as visual designer or content designer) is in charge of creating the design file in the spec, as well as annotating it with any details that may be important for the developers.  The development issue is usually created by the product owner or a member of the development team (even though that may vary depending on the team and its specific context). Examples of Specs Example 1: Small Mobile Design In this spec, the design is perfectly sized and portioned for a developer to understand the full design and implement it in a timely manner. The design is about how navigation for a website works on a mobile device. Sufficient contextual information is provided directly in Linear, as opposed to the Figma file, providing organization for the development team. The context supplies information on design goals, user needs and use cases, as well as any preliminary research findings. You will also notice that the Figma file is linked, ensuring that developers always have access to the latest version of the design. The Linear issue contains a link to the Figma file, as well as additional context for the development team to use when coding. In the linked Figma file, the relationships among different screens are mapped out  through annotations, allowing developers to easily understand how users might interact with them. The Figma file shows what happens when a user taps the hamburger and search icons. Example 2: Large Webpage Design The Figma file of this spec includes details on layout, content, and visual design of an entire webpage. The design shows the webpage at various breakpoints, as well as color variations that the page will need to support. Annotations are color-coded, allowing developers to easily scan and see what is important for their specific coding work. For example, back-end-specific annotations are red, so backend developers can quickly find pertinent information to their work. Figma comments are also used to asynchronously align on design feedback and questions. The Figma file for a webpage spec shows the page breakpoints and color variations. In the left side panel,  green, yellow, and red indicators let developers know whether those pages are ready for them. Example 3: Component Spec This button component spec from Google’s Material Design provides details about each button style, including different states and values for various attributes (e.g., the button’s height is 40dp), as well as references for both designers and developers. Google’s Material Design button component spec is presented on a website, instead of just a Figma file. Tips for Aligning with Developers Designers and developers do not always agree on designs. Each brings a unique and needed perspective to create and develop useful experiences. Here are some tips to improve communication and working relationship with developers: Include the development team in design conversations way before your design is “done.” Ideally, the design spec documents previously agreed-upon information on behavior, functionality, and visual design.  Allow time for developers to leave comments in your design file. This needs to happen before the design-review meeting with your developers. It will give them time to think about the design and its feasibility. In your design-review meeting, focus the conversation around any comments made in the design file, making the meeting much more productive and effective. Be prepared to make tradeoffs. There are times to push back on development and times where tradeoffs are needed. This is a natural part of working with a development team. Designers should ensure that critical user needs are being met and should not give in to everything the development team brings up, but, if a certain aspect of the design is going to take substantial development effort, and is not critical for your user, revisiting it may be worth it. Make sure design updates are documented and communicated to developers. You would be shocked how many times a lack of documentation has created confusion and frustration in design and development teams. Communicate design changes in your design specs as well as through other communication channels that your team may use.",
  "image": "https://media.nngroup.com/media/articles/opengraph_images/Creating_Design_Specs_Opengraph-22.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cp\u003e\u003cspan\u003e\n                  Summary: \n                \u003c/span\u003eDesign specifications should provide all the relevant information needed to align the design and development teams.\n              \u003c/p\u003e\u003cdiv\u003e\n              \u003cp\u003eYou work tirelessly on a new design project. It’s your masterpiece… until the dev team says it isn’t possible. Most designers have experienced this situation at some point in their careers. As frustrating as it may be, there are many ways to avoid this situation from happening. Clear design specs are a good place to start.\u003c/p\u003e\n\u003cdiv\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-what-are-design-specs-1\"\u003eWhat Are Design Specs?\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-the-components-of-a-design-spec-2\"\u003eThe Components of a Design Spec\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-examples-of-specs-3\"\u003eExamples of Specs\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-tips-for-aligning-with-developers-4\"\u003eTips for Aligning with Developers\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e\u003ch2 id=\"toc-what-are-design-specs-1\"\u003eWhat Are Design Specs?\u003c/h2\u003e\n\u003cp\u003eDesign specifications are a way to align on and efficiently communicate designs to a software-development team. \u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDesign specifications (specs)\u003c/strong\u003e are documents that provide all relevant information on the functionality, behavior, and appearance of a design, so that developers can implement the design into a real, functioning product.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eDesign specs allow the design and development teams to have productive conversations and align on user needs, design feasibility, and design and technical requirements.\u003c/p\u003e\n\u003cp\u003eDepending on the project needs, design specs can be focused on one design aspect. For example, for a visual-refresh project, the design spec may include only information about the appearance of the different design elements, rather than on their functionality. \u003c/p\u003e\n\u003cp\u003eFor many teams, this documentation takes the form of a Figma (or other design tool) link with additional project and development details, organized in \u003cstrong\u003ea development issue\u003c/strong\u003e or ticket in a development tool, like GitHub or Linear. The development issue would include relevant contextual information, like the goal, use case or requirements the design solves for, so that developers can implement the design.\u003c/p\u003e\n\u003cdiv\u003e\n\u003cfigure\u003e\u003cimg alt=\"Design specifications include a design file and a development issue.” Shown are labeled mockups of a GitHub issue and a Figma webpage design file.\" height=\"553\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/05/29/design-spec-visual.jpg\" width=\"1000\"/\u003e\n\u003cfigcaption\u003e\u003cem\u003eDesign specifications include a design file and development issue that contains additional context.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003c/div\u003e\n\u003ch2 id=\"toc-the-components-of-a-design-spec-2\"\u003eThe Components of a Design Spec\u003c/h2\u003e\n\u003cp\u003eRemember, the spec has two big components: the design file (e.g., Figma) and the development issue.\u003c/p\u003e\n\u003ch3\u003eWhat Is Included in the Design File\u003c/h3\u003e\n\u003cp\u003eThe design file is what designers typically think of when they hear the phrase “design spec.” It specifies the design work that the design team produces, broken down into consumable pieces for the development team. \u003c/p\u003e\n\u003cp\u003eThis portion of the spec should include information about:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eInteraction flows: \u003c/strong\u003eDefine what happens when users click or tap on interactive elements.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eVisual design: \u003c/strong\u003eDefine the \u003ca href=\"https://www.nngroup.com/articles/color-enhance-design/\"\u003ecolor palette,\u003c/a\u003e \u003ca href=\"https://www.nngroup.com/articles/typography-terms-ux/\"\u003etypography\u003c/a\u003e styles, and icons used in the design. Color palettes and typographic styles should be set up separately in the design file, with each style named appropriately, so developers and other designers can easily use them.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eLayout: \u003c/strong\u003eDefine the grid system used, as well as\u003ca href=\"https://www.nngroup.com/articles/breakpoints-in-responsive-design/\"\u003e various breakpoints.\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eInteraction elements: \u003c/strong\u003eProvide components for any \u003ca href=\"https://www.nngroup.com/articles/ui-elements-glossary/\"\u003euser-interface elements,\u003c/a\u003e like \u003ca href=\"https://www.nngroup.com/articles/button-states-communicate-interaction/\"\u003ebuttons\u003c/a\u003e and input fields. Include any details about associated microinteractions, like animations or transitions.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eContent: \u003c/strong\u003eUse real text and multimedia content in the design mockups, not placeholders, providing details needed for image sizes. \u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSpecific accessibility needs:\u003c/strong\u003e Your designs should comply with accessibility standards; however,  specific items (e.g., tabbing order on a page or \u003ca href=\"https://www.nngroup.com/articles/write-alt-text/\"\u003ealt text\u003c/a\u003e) may need to be called out explicitly.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eWhat Is Included in the Development Issue\u003c/h3\u003e\n\u003cp\u003eA lot of development teams see the development issue as a “contract” between the dev and design teams. What is outlined in the issue is what the developer is on the hook for delivering.\u003c/p\u003e\n\u003cp\u003eIssues typically include a lot of context needed to understand the designs and the project: the goal of the design, what is in and out of the project’s scope, a description of the functional (e.g., system features) and nonfunctional (e.g., performance) requirements, any use cases the design touches on, and potential risks and mitigations. This information should be specific to the design that is getting implemented and should come from the product owner or tech lead. \u003c/p\u003e\n\u003cp\u003eA screenshot of the design may also be included in the development issue, to communicate what the dev and design team agreed on when the issue was written. The screenshot also allows development to quickly see what the issue is about. However, if screenshots are included, they should be consistent with the designs in the design file. \u003c/p\u003e\n\u003cp\u003eIf the design gets updated, the design team will need to discuss the update and an implementation timeline with the development team. Depending on how big the update is, an additional development issue might be created. Any discrepancies between the screenshots in the development issue and the Figma file should be noted to prevent confusion about what needs to be implemented. \u003c/p\u003e\n\u003cdiv\u003e\n\u003cfigure\u003e\u003cimg alt=\"Linear issue view showing objectives, scope, assumptions, success metrics, and a Figma design link under “Wireframes / Design References.”\" height=\"1096\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/05/29/spec-example.jpg\" width=\"1000\"/\u003e\n\u003cfigcaption\u003e\u003cem\u003eA Linear issue contains context and design details, including a link to the Figma design file\u003c/em\u003e.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003c/div\u003e\n\u003cp\u003eSmall specs are much easier to create and implement than one very large spec. \u003cstrong\u003eIf a design spec is getting too large\u003c/strong\u003e and difficult to organize and maintain, it might be a sign that it \u003cstrong\u003eneeds to be broken down\u003c/strong\u003e into smaller, more digestible pieces. Include the dev team in this decision, as the ease of implementation will be affected by how the design is further broken down.\u003c/p\u003e\n\u003ch3\u003eSpecs Are Created in the Design Phase\u003c/h3\u003e\n\u003cp\u003eIn the end-to-end product-design process, design specs are created during the design phase, after substantial work has already been completed. \u003cstrong\u003eBefore creating a spec, your team should:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDefine the product\u0026#39;s strategic context \u003c/li\u003e\n\u003cli\u003eConduct any necessary discovery research \u003c/li\u003e\n\u003cli\u003eCreate and prototype flows and interactions based on user needs \u003c/li\u003e\n\u003cli\u003eCarry out usability testing on the designs you or your team has created \u003c/li\u003e\n\u003cli\u003eApply findings discovered through usability testing to designs\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIt takes a lot of time to create a spec and then implement the designs. You want to make sure the designs are worth the effort and they address the right user needs. That is why a lot of upfront work is needed before even getting to spec your design work.\u003cstrong\u003e     \u003c/strong\u003e\u003c/p\u003e\n\u003cdiv\u003e\n\u003cfigure\u003e\u003cimg alt=\"Diagram of the product design process: Define, Discover, Design (Ideate, Prototype, Test, Spec), then Develop. “Spec” is highlighted.\" height=\"334\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/05/29/product-design-process.jpg\" width=\"1000\"/\u003e\n\u003cfigcaption\u003e\u003cem\u003eDesign specs are created in the design phase of the end-to-end product design process.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003c/div\u003e\n\u003ch3\u003eWho Is Responsible for Writing Design Specs?\u003cstrong\u003e \u003c/strong\u003e\u003c/h3\u003e\n\u003cp\u003eThe design team (whether made up of one designer or several designers with specialized roles such as visual designer or content designer) is in charge of creating the design file in the spec, as well as annotating it with any details that may be important for the developers. \u003c/p\u003e\n\u003cp\u003eThe development issue is usually created by the product owner or a member of the development team (even though that may vary depending on the team and its specific context).\u003c/p\u003e\n\u003ch2 id=\"toc-examples-of-specs-3\"\u003eExamples of Specs\u003c/h2\u003e\n\u003ch3\u003eExample 1: Small Mobile Design\u003c/h3\u003e\n\u003cp\u003eIn this spec, the design is perfectly sized and portioned for a developer to understand the full design and implement it in a timely manner. The design is about how navigation for a website works on a mobile device. Sufficient contextual information is provided directly in Linear, as opposed to the Figma file, providing organization for the development team. The context supplies information on design goals, user needs and use cases, as well as any preliminary research findings. You will also notice that the Figma file is linked, ensuring that developers always have access to the latest version of the design.\u003c/p\u003e\n\u003cdiv\u003e\n\u003cfigure\u003e\u003cimg alt=\"Linear issue titled “Create new mobile navigation” includes goals, scope, research, design notes, and a Figma file link for developer reference.\" height=\"869\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/05/29/issue-example.jpg\" width=\"1000\"/\u003e\n\u003cfigcaption\u003e\u003cem\u003eThe Linear issue contains a link to the Figma file, as well as additional context for the development team to use when coding.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003c/div\u003e\n\u003cp\u003eIn the linked Figma file, the relationships among different screens are mapped out  through annotations, allowing developers to easily understand how users might interact with them.\u003c/p\u003e\n\u003cdiv\u003e\n\u003cfigure\u003e\u003cimg alt=\"Figma prototype showing mobile navigation flow, including interactions for tapping the hamburger menu and search icon on the NN/g homepage.\" height=\"583\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/05/29/example-1.jpg\" width=\"1000\"/\u003e\n\u003cfigcaption\u003e\u003cem\u003eThe Figma file\u003c/em\u003e \u003cem\u003eshows what happens when a user taps the hamburger and search icons.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003c/div\u003e\n\u003ch3\u003eExample 2: Large Webpage Design\u003c/h3\u003e\n\u003cp\u003eThe Figma file of this spec includes details on layout, content, and visual design of an entire webpage. The design shows the webpage at various breakpoints, as well as color variations that the page will need to support.\u003c/p\u003e\n\u003cp\u003eAnnotations are color-coded, allowing developers to easily scan and see what is important for their specific coding work. For example, back-end-specific annotations are red, so backend developers can quickly find pertinent information to their work. Figma comments are also used to asynchronously align on design feedback and questions.\u003c/p\u003e\n\u003cdiv\u003e\n\u003cfigure\u003e\u003cimg alt=\"Figma file showing webpage spec with page structure, color variants, and readiness indicators for developers in green, yellow, and red.\" height=\"515\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/05/29/example-2.jpg\" width=\"1000\"/\u003e\n\u003cfigcaption\u003e\u003cem\u003eThe Figma file for a webpage spec shows the page breakpoints and color variations. In the left side panel,  green, yellow, and red indicators let developers know whether those pages are ready for them.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003c/div\u003e\n\u003ch3\u003eExample 3: Component Spec\u003c/h3\u003e\n\u003cp\u003eThis button component spec from Google’s Material Design provides details about each button style, including different states and values for various attributes (e.g., the button’s height is 40dp), as well as references for both designers and developers.\u003c/p\u003e\n\u003cdiv\u003e\n\u003cfigure\u003e\u003cimg alt=\"Material Design webpage showing specs for an elevated button, with labeled parts, button states, and navigation for other button types.\" height=\"562\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2025/05/29/google-material-example.jpg\" width=\"1000\"/\u003e\n\u003cfigcaption\u003e\u003cem\u003eGoogle’s Material Design button component spec is presented on a website, instead of just a Figma file.\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003c/div\u003e\n\u003ch2 id=\"toc-tips-for-aligning-with-developers-4\"\u003eTips for Aligning with Developers\u003c/h2\u003e\n\u003cp\u003eDesigners and developers do not always agree on designs. Each brings a unique and needed perspective to create and develop useful experiences. Here are some tips to improve communication and working relationship with developers:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eInclude the development team in design conversations way before your design is “done.” \u003c/strong\u003eIdeally, the design spec documents previously agreed-upon information on behavior, functionality, and visual design. \u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eAllow time for developers to leave comments in your design file.\u003c/strong\u003e This needs to happen before the design-review meeting with your developers. It will give them time to think about the design and its feasibility. In your design-review meeting, focus the conversation around any comments made in the design file, making the meeting much more productive and effective.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eBe prepared to make tradeoffs.\u003c/strong\u003e There are times to push back on development and times where tradeoffs are needed. This is a natural part of working with a development team. Designers should ensure that critical user needs are being met and should not give in to everything the development team brings up, but, if a certain aspect of the design is going to take substantial development effort, and is not critical for your user, revisiting it may be worth it.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eMake sure design updates are documented and communicated to developers.\u003c/strong\u003e You would be shocked how many times a lack of documentation has created confusion and frustration in design and development teams. Communicate design changes in your design specs as well as through other communication channels that your team may use.\u003c/li\u003e\n\u003c/ul\u003e\n            \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "11 min read",
  "publishedTime": "2025-06-20T17:00:00Z",
  "modifiedTime": null
}
