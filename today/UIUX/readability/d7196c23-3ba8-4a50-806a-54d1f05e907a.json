{
  "id": "d7196c23-3ba8-4a50-806a-54d1f05e907a",
  "title": "Test smart: how to explore a product like Sherlock?",
  "link": "https://uxdesign.cc/test-smart-how-to-explore-a-product-like-sherlock-040b268786da?source=rss----138adf9c44c---4",
  "description": "",
  "author": "Julia Kocbek",
  "published": "Wed, 11 Dec 2024 12:17:19 GMT",
  "source": "https://uxdesign.cc/feed",
  "categories": [
    "product-management",
    "qa",
    "agile",
    "product-design",
    "ux"
  ],
  "byline": "Julia Kocbek",
  "length": 10230,
  "excerpt": "Do you remember Sherlock’s hat? The legendary detective Sherlock Holmes (a character created by Arthur Conan Doyle) is best remembered for solving mysteries in the London fog, puffing on his pipe…",
  "siteName": "UX Collective",
  "favicon": "https://miro.medium.com/v2/resize:fill:256:256/1*dn6MbbIIlwobt0jnUcrt_Q.png",
  "text": "The daunting discussion around automated vs human-driven testing pushed me to arm myself with a pen again and write more about a diamond in the crown of all testing techniques — exploratory testingDo you remember Sherlock’s hat? The legendary detective Sherlock Holmes (a character created by Arthur Conan Doyle) is best remembered for solving mysteries in the London fog, puffing on his pipe and… a hat. It has become stereotypical headgear for detectives who investigate the most complicated cases.In our work routine, we wear multiple “hats” daily. Product Owners, Developers, Designers, and QA Engineers might juggle the various roles in line with the new challenges. However, the QA Engineers are often the ones in the team who try the imaginary detective’s hat. And I must say, if you are a good QA, it will fit you.I started my career in software testing as a manual or (better to say) human QA Engineer. In a few years, I also learned the basics of automation in the Gherkin syntax, helped the Developers select the tests for automation, and regularly monitored the status of automated tests in CI/CD pipelines. Yet my primary focus was on applying human-driven testing techniques and improving the general team’s testing strategy, which included manual and automated tests on multiple product layers.Now, my eyes widen once I hear from some community voices that manual testers are obsolete. I don’t take it as a personal offence. However, it is still hard to understand: are we ready to allow tools (machinery) to evaluate usability, UX, and accessibility, detect edge cases and UI glitches, and play with the product as humans?Industry experts note that human-driven testing techniques are still essential for the product’s development. However, I observe that some well-known companies over-rely on automated tests ignoring human-driven testing techniques, which might be unhealthy for the overall product’s quality. I’ve already touched on the danger of over-relying on automation in one of the recent stories. After some conversations on LinkedIn, I’ve got a push to write more about one of the most exciting manual testing techniques — exploratory testing.Manual testing? Is it still alive?First, let’s clarify: does manual testing still rock? If yes, then why? Before some sceptics grab the raw tomato to throw in the author, I’d like to clarify: yes, human-driven testing techniques matter. Without skills in human-driven techniques such as exploratory testing, the QA professionals would be redundant and could be easily replaced by AI. But it has not happened (yet).The “aha!” moment struck me after listening to the great talk “In Praise of Manual Testing” given by Sue Atkins at TestBustersNight (arranged by Rudolf Groetz). Sue stressed that we are still not at the point of delegating all the human-driven testing activities to AI-driven tools. That talk also sparked a discussion about whether the label “manual” is appropriate for testing activities humans perform. Other namings such as “in person testing” (originally suggested by Julian Harty) could work better.Don’t get me wrong, I stand for the balanced approach in QA. An agile tester should be able to apply human-driven techniques and automate certain tests or collaborate on automation with developers. However, there are “features” that tools (machines) are bad at: they lack creativity, empathy and intuition.Automated tests will hardly detect edge cases that Developers or Designers did not think of (“unhappy” paths). They will not be able to assess UX from a deeper perspective and according to the product quality attributes (see ISO 25010: Systems and software engineering). Instead, human QA will excel in those areas. Consequently, the existing tools could hardly explore the product at the same level as humans.As James Lyndsay notes:“An automated test won’t tell you that the system’s slow, unless you tell it to look in advance. It won’t tell you that the window leaves a persistent shadow, that every other record in the database has been trashed, that even the false are returning true, unless it knows where to look, and what to look for. Sure, you may notice a problem as you dig through the reams of data you’ve asked it to gather, but then we’re back to exploratory techniques again.”So let’s come closer to exploratory testing and detective’s hat.Exploratory testing in a nutshellExploratory tests are purely based on human creativity and curiosity. These are tests performed without a prepared written script, where the testers are supposed to find issues on the fly. The exploratory tests allow us to investigate the system behaviours missed by scripted tests (e.g. end-to-end tests). As a result, the edge cases, UX discrepancies, and glitches will be detected:“An exploratory test needs no script, no chosen set of actions. Choice of actions is up to the tester, at the point of testing. Choice of information, of observation, is limited not by pre-existing design, but by opportunity and resource. Moment to moment, the tester chooses what to do, what to do it with, how to check what’s happened. Interesting things will be examined in more detail, weaknesses tried, doorknobs jiggled. The tester chooses to try two things together that between them open the system to a world of pain. The tester chooses to use this information, with that action, not to just to see what’s desirable, but what’s possible. The exploratory tester focuses on risk.”Exploratory testing is more spontaneous and informal than scripted testing, but it still requires discipline to be done properly. Normally, exploratory tests are guided by a defined goal (e.g. “to test a new feature”) and usually are executed in a session-based (time-boxed) manner. Testers might use a charter (task card) in which they note their observations.To make an impact, exploratory testing should be applied regularly. As Martin Fowler observes, it is not a good sign if the team does not perform exploratory testing: “Even the best automated testing is inherently scripted testing — and that alone is not good enough.” From my experience, I suggest devoting time to exploratory testing sessions weekly.QA Engineers, Developers, Product Owners, or Designers might perform the exploratory tests individually. In agile teams, each member can contribute to the quality by exploring the product and informing the team about their findings.Exploratory testing can also be applied in pairs using peer programming principles. As Mariia Hutsuk and Sivamoorthy Bose write, the paired exploratory testing assumes two roles. One person is a “driver”, another is a “navigator”:“Driver is a person at the wheel, this person should focus on the application while he/she is performing actions and ask questions if they occur. The navigator is in an observer position and tells direction of further checks and makes notes of steps or findings. Those roles can be changed from time to time.”From my experience, you will reach the multiplier effect by arranging a team’s exploratory testing session — a so-called bug bash. To detect potential bugs as soon as possible, the team might perform exploratory testing once new features are coded in the developer’s environments.Here is an example of a charter template for an imaginary team’s exploratory testing session.“Hey! Today’s goal is to step into the user’s shoes and test the Amazing Portal customer flows. Use your skills and intuition to find as many visual or functional issues in the product as possible. Once you run into a bug or UX discrepancy, note it in the test charter. Below are just loose guidelines. Anyhow, you will need to invent your scenarios on the fly.Task 1As a Customer, browse the products listed on Amazing Portal.Task 2As a Customer, make an order of the products A, B, C, D.Task 3As a Customer, update the data in the Customer’s Profile.Task 4As a Customer, explore other areas of Amazing Portal.”Once the exploratory session is completed, the detected issues should be reported and discussed within the team. Sometimes, the feature must be completely reworked due to the findings revealed in the session. This might be painful for the team, yet it is still a win-win situation because there will be less rework in the later stages of development for Designers and Developers, and less pain and frustration for the customers.I believe no AI-driven tools can replace human creativity, empathy and intuition in testing. Thus human-driven techniques such as exploratory testing are still in demand and should be applied actively by the team members, whether they are Developers, Designers, Product Owners or QA Engineers (in case your team is lucky enough to have one ;)) If used at the earliest stages of development, the exploratory testing will guide you through the potential edge cases and product issues, both visible for the users (UI level) and hidden ones (API level, backend behaviours). This might truly impact the quality of the product, reduce the costs of rework in the long run and shift the whole team’s testing strategy to the left. To achieve that, keep exploring and wear your Sherlock’s hat proudly.You may check my LinkedIn page if you feel like connecting with me or are curious about my background. As a QA Engineer with over 7 years of commercial experience in the industry, I’m ready to communicate with teams looking for guidance and help in enhancing product quality and testing. At this very moment, I’m looking for a new role as a QA Analyst, QA Engineer or QA Lead.Illustrations: by me (Apple Pencil, iPad, and no AI :))Resources:Sue Atkings, Playing with software — learning like a tester: https://medium.com/@TestSprite/playing-with-software-learning-like-a-tester-ca7412537d6bJames Lyndsay, Why Exploration has a Place in any Strategy: https://www.workroom-productions.com/why-exploration-has-a-place-in-any-strategy/Mike Chang, Running an Effective Bug Bash: https://medium.com/@changbot/running-an-effective-bug-bash-317fafa9d963Mariia Hutsuk and Sivamoorthy Bose, Importance of Exploratory Testing: https://medium.com/quality-matters/importance-of-exploratory-testing-3f02e34dc0c3Martin Fowler, Exploratory Testing: https://martinfowler.com/bliki/ExploratoryTesting.html",
  "image": "https://miro.medium.com/v2/resize:fit:1200/1*ovsN00TbhwD4swWQr-D4sg.jpeg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cdiv\u003e\u003ch2 id=\"82ab\"\u003eThe daunting discussion around automated vs human-driven testing pushed me to arm myself with a pen again and write more about a diamond in the crown of all testing techniques — exploratory testing\u003c/h2\u003e\u003cdiv\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://julia-kocbek.medium.com/?source=post_page---byline--040b268786da--------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Julia Kocbek\" src=\"https://miro.medium.com/v2/resize:fill:88:88/2*_YO9K2thchsjAV3VN8btYg.jpeg\" width=\"44\" height=\"44\" loading=\"lazy\" data-testid=\"authorPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://uxdesign.cc/?source=post_page---byline--040b268786da--------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"UX Collective\" src=\"https://miro.medium.com/v2/resize:fill:48:48/1*mDhF9X4VO0rCrJvWFatyxg.png\" width=\"24\" height=\"24\" loading=\"lazy\" data-testid=\"publicationPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cp id=\"5b5b\"\u003eDo you remember Sherlock’s hat? The legendary detective \u003ca href=\"https://en.wikipedia.org/wiki/Sherlock_Holmes\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eSherlock Holmes\u003c/a\u003e (a character created by Arthur Conan Doyle) is best remembered for solving mysteries in the London fog, puffing on his pipe and… a \u003ca href=\"https://en.wikipedia.org/wiki/Deerstalker\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ehat\u003c/a\u003e. It has become stereotypical headgear for detectives who investigate the most complicated cases.\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"b009\"\u003eIn our work routine, we wear multiple “hats” daily. Product Owners, Developers, Designers, and QA Engineers might juggle the various roles in line with the new challenges. However, the QA Engineers are often the ones in the team who try the imaginary detective’s hat. And I must say, if you are a good QA, it will fit you.\u003c/p\u003e\u003cp id=\"e1cb\"\u003eI started my career in software testing as a manual or (better to say) human QA Engineer. In a few years, I also learned the basics of automation in the Gherkin syntax, helped the Developers select the tests for automation, and regularly monitored the status of automated tests in CI/CD pipelines. Yet my primary focus was on applying human-driven testing techniques and improving the general team’s testing strategy, which included manual and automated tests on multiple product layers.\u003c/p\u003e\u003cp id=\"18ad\"\u003eNow, my eyes widen once I hear from some community voices that manual testers are obsolete. I don’t take it as a personal offence. However, it is still hard to understand: are we ready to allow tools (machinery) to evaluate usability, UX, and accessibility, detect edge cases and UI glitches, and \u003ca href=\"https://medium.com/@TestSprite/playing-with-software-learning-like-a-tester-ca7412537d6b\" rel=\"noopener\"\u003eplay with the product\u003c/a\u003e as humans?\u003c/p\u003e\u003cp id=\"1d2c\"\u003e\u003ca href=\"https://agiletester.ca/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eIndustry experts\u003c/a\u003e note that human-driven testing techniques are still essential for the product’s development. However, I observe that some well-known companies over-rely on automated tests ignoring human-driven testing techniques, which might be unhealthy for the overall product’s quality. I’ve already touched on the danger of over-relying on automation in one of the \u003ca rel=\"noopener\" target=\"_blank\" href=\"https://uxdesign.cc/test-smart-how-to-apply-automation-and-stay-sane-071ea899006e\"\u003erecent stories\u003c/a\u003e. After some conversations on \u003ca href=\"https://www.linkedin.com/posts/activity-7263321889203212289-8wwB?utm_source=share\u0026amp;utm_medium=member_desktop\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eLinkedIn\u003c/a\u003e, I’ve got a push to write more about one of the most exciting manual testing techniques — exploratory testing.\u003c/p\u003e\u003ch2 id=\"83aa\"\u003e\u003cstrong\u003eManual testing? Is it still alive?\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"bdc7\"\u003eFirst, let’s clarify: does manual testing still rock? If yes, then why? Before some sceptics grab the raw tomato to throw in the author, I’d like to clarify: yes, human-driven testing techniques matter. Without skills in human-driven techniques such as \u003ca href=\"https://medium.com/quality-matters/importance-of-exploratory-testing-3f02e34dc0c3\" rel=\"noopener\"\u003eexploratory testing\u003c/a\u003e, the QA professionals would be redundant and could be easily replaced by AI. But it has not happened (yet).\u003c/p\u003e\u003cp id=\"17d2\"\u003eThe “aha!” moment struck me after listening to the great talk “In Praise of Manual Testing” given by Sue Atkins at TestBustersNight (arranged by Rudolf Groetz). Sue stressed that we are still not at the point of delegating all the human-driven testing activities to AI-driven tools. That talk also sparked a discussion about whether the label “manual” is appropriate for testing activities humans perform. Other namings such as “in person testing” (originally suggested by Julian Harty) could work better.\u003c/p\u003e\u003cp id=\"306b\"\u003eDon’t get me wrong, I stand for the balanced approach in QA. An agile tester should be able to apply human-driven techniques and automate certain tests or collaborate on automation with developers. However, there are “features” that tools (machines) are bad at: they lack creativity, empathy and intuition.\u003c/p\u003e\u003cp id=\"0558\"\u003eAutomated tests will hardly detect edge cases that Developers or Designers did not think of (“unhappy” paths). They will not be able to assess UX from a deeper perspective and according to the product quality attributes (see \u003ca href=\"https://www.iso.org/obp/ui/#iso:std:iso-iec:25010:ed-1:v1:en\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eISO 25010: Systems and software engineering\u003c/a\u003e). Instead, human QA will excel in those areas. Consequently, the existing tools could hardly explore the product at the same level as humans.\u003c/p\u003e\u003cp id=\"06b3\"\u003eAs James Lyndsay \u003ca href=\"https://www.workroom-productions.com/why-exploration-has-a-place-in-any-strategy/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003enotes\u003c/a\u003e:\u003c/p\u003e\u003cp id=\"e714\"\u003e\u003cem\u003e“An automated test won’t tell you that the system’s slow, unless you tell it to look in advance. It won’t tell you that the window leaves a persistent shadow, that every other record in the database has been trashed, that even the false are returning true, unless it knows where to look, and what to look for. Sure, you may notice a problem as you dig through the reams of data you’ve asked it to gather, but then we’re back to exploratory techniques again.”\u003c/em\u003e\u003c/p\u003e\u003cp id=\"bdf9\"\u003eSo let’s come closer to exploratory testing and detective’s hat.\u003c/p\u003e\u003ch2 id=\"973d\"\u003e\u003cstrong\u003eExploratory testing in a nutshell\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"c4e5\"\u003eExploratory tests are purely based on human creativity and curiosity. These are tests performed without a prepared written script, where the testers are supposed to find issues on the fly. The exploratory tests allow us to investigate the system behaviours missed by scripted tests (e.g. end-to-end tests). As a result, the edge cases, UX discrepancies, and glitches \u003ca href=\"https://www.workroom-productions.com/why-exploration-has-a-place-in-any-strategy/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ewill be detected\u003c/a\u003e:\u003c/p\u003e\u003cp id=\"e2f0\"\u003e\u003cem\u003e“An exploratory test needs no script, no chosen set of actions. Choice of actions is up to the tester, at the point of testing. Choice of information, of observation, is limited not by pre-existing design, but by opportunity and resource. Moment to moment, the tester chooses what to do, what to do it with, how to check what’s happened. Interesting things will be examined in more detail, weaknesses tried, doorknobs jiggled. The tester chooses to try two things together that between them open the system to a world of pain. The tester chooses to use this information, with that action, not to just to see what’s desirable, but what’s possible. The exploratory tester focuses on risk.”\u003c/em\u003e\u003c/p\u003e\u003cp id=\"80ef\"\u003eExploratory testing is more spontaneous and informal than scripted testing, but it still requires discipline to be done properly. Normally, exploratory tests are guided by a defined goal (e.g. “to test a new feature”) and usually are executed in a \u003ca href=\"https://martinfowler.com/bliki/ExploratoryTesting.html\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003esession-based (time-boxed) manner\u003c/a\u003e. Testers might use a charter (task card) in which they note their observations.\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"f6fb\"\u003eTo make an impact, exploratory testing should be applied regularly. As Martin Fowler \u003ca href=\"https://martinfowler.com/bliki/ExploratoryTesting.html\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eobserves\u003c/a\u003e, it is not a good sign if the team does not perform exploratory testing: \u003cem\u003e“Even the best automated testing is inherently scripted testing — and that alone is not good enough.” \u003c/em\u003eFrom my experience, I suggest devoting time to exploratory testing sessions weekly.\u003c/p\u003e\u003cp id=\"0816\"\u003eQA Engineers, Developers, Product Owners, or Designers might perform the exploratory tests individually. In agile teams, each member can contribute to the quality by exploring the product and informing the team about their findings.\u003c/p\u003e\u003cp id=\"88bf\"\u003eExploratory testing can also be applied in pairs using peer programming principles. As Mariia Hutsuk and Sivamoorthy Bose \u003ca href=\"https://medium.com/quality-matters/importance-of-exploratory-testing-3f02e34dc0c3\" rel=\"noopener\"\u003ewrite\u003c/a\u003e, the paired exploratory testing assumes two roles. One person is a “driver”, another is a “navigator”:\u003c/p\u003e\u003cp id=\"b0da\"\u003e“\u003cem\u003eDriver is a person at the wheel, this person should focus on the application while he/she is performing actions and ask questions if they occur. The navigator is in an observer position and tells direction of further checks and makes notes of steps or findings. Those roles can be changed from time to time.”\u003c/em\u003e\u003c/p\u003e\u003cp id=\"792a\"\u003eFrom my experience, you will reach the multiplier effect by arranging a team’s exploratory testing session — a so-called \u003ca href=\"https://medium.com/@changbot/running-an-effective-bug-bash-317fafa9d963\" rel=\"noopener\"\u003ebug bash\u003c/a\u003e. To detect potential bugs as soon as possible, the team might perform exploratory testing once new features are coded in the developer’s environments.\u003c/p\u003e\u003cp id=\"4025\"\u003eHere is an example of a charter template for an imaginary team’s exploratory testing session.\u003c/p\u003e\u003cp id=\"076c\"\u003e\u003cem\u003e“Hey! Today’s goal is to step into the user’s shoes and test the Amazing Portal customer flows. Use your skills and intuition to find as many visual or functional issues in the product as possible. \u003c/em\u003e\u003cstrong\u003e\u003cem\u003eOnce you run into a bug or UX discrepancy, note it in the test charter.\u003c/em\u003e\u003c/strong\u003e\u003cem\u003e Below are just loose guidelines. Anyhow, you will need to invent your scenarios on the fly.\u003c/em\u003e\u003c/p\u003e\u003cp id=\"e78e\"\u003e\u003cstrong\u003e\u003cem\u003eTask 1\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\u003cp id=\"e4fe\"\u003e\u003cstrong\u003e\u003cem\u003eAs a Customer, browse the products listed on Amazing Portal.\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\u003cp id=\"8e02\"\u003e\u003cstrong\u003e\u003cem\u003eTask 2\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\u003cp id=\"f13b\"\u003e\u003cstrong\u003e\u003cem\u003eAs a Customer, make an order of the products A, B, C, D.\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\u003cp id=\"0256\"\u003e\u003cstrong\u003e\u003cem\u003eTask 3\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\u003cp id=\"e4c1\"\u003e\u003cstrong\u003e\u003cem\u003eAs a Customer, update the data in the Customer’s Profile.\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\u003cp id=\"d02e\"\u003e\u003cstrong\u003e\u003cem\u003eTask 4\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\u003cp id=\"e421\"\u003e\u003cstrong\u003e\u003cem\u003eAs a Customer, explore other areas of Amazing Portal.\u003c/em\u003e\u003c/strong\u003e\u003cem\u003e”\u003c/em\u003e\u003c/p\u003e\u003cp id=\"4e82\"\u003eOnce the exploratory session is completed, the detected issues should be reported and discussed within the team. Sometimes, the feature must be completely reworked due to the findings revealed in the session. This might be painful for the team, yet it is still a win-win situation because there will be less rework in the later stages of development for Designers and Developers, and less pain and frustration for the customers.\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"8630\"\u003eI believe no AI-driven tools can replace human creativity, empathy and intuition in testing. Thus human-driven techniques such as exploratory testing are still in demand and should be applied actively by the team members, whether they are Developers, Designers, Product Owners or QA Engineers (in case your team is lucky enough to have one ;)) If used at the earliest stages of development, the exploratory testing will guide you through the potential edge cases and product issues, both visible for the users (UI level) and hidden ones (API level, backend behaviours). This might truly impact the quality of the product, reduce the costs of rework in the long run and shift the whole team’s testing strategy to the left. To achieve that, keep exploring and wear your Sherlock’s hat proudly.\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"bb96\"\u003e\u003cem\u003eYou may check my \u003c/em\u003e\u003ca href=\"https://www.linkedin.com/in/julia-kocbek-001893128/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cem\u003eLinkedIn page\u003c/em\u003e\u003c/a\u003e\u003cem\u003e if you feel like connecting with me or are curious about my background. As a QA Engineer with over 7 years of commercial experience in the industry, I’m ready to communicate with teams looking for guidance and help in enhancing product quality and testing. At this very moment, I’m looking for a new role as a QA Analyst, QA Engineer or QA Lead.\u003c/em\u003e\u003c/p\u003e\u003cp id=\"6e94\"\u003eIllustrations: by me (Apple Pencil, iPad, and no AI :))\u003c/p\u003e\u003cp id=\"a33b\"\u003eResources:\u003c/p\u003e\u003col\u003e\u003cli id=\"998b\"\u003eSue Atkings, \u003cem\u003ePlaying with software — learning like a tester\u003c/em\u003e: \u003ca href=\"https://medium.com/@TestSprite/playing-with-software-learning-like-a-tester-ca7412537d6b\" rel=\"noopener\"\u003ehttps://medium.com/@TestSprite/playing-with-software-learning-like-a-tester-ca7412537d6b\u003c/a\u003e\u003c/li\u003e\u003cli id=\"b54a\"\u003eJames Lyndsay, \u003cem\u003eWhy Exploration has a Place in any Strategy\u003c/em\u003e: \u003ca href=\"https://www.workroom-productions.com/why-exploration-has-a-place-in-any-strategy/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ehttps://www.workroom-productions.com/why-exploration-has-a-place-in-any-strategy/\u003c/a\u003e\u003c/li\u003e\u003cli id=\"fb73\"\u003eMike Chang\u003cem\u003e, Running an Effective Bug Bash\u003c/em\u003e:\u003cem\u003e \u003c/em\u003e\u003ca href=\"https://medium.com/@changbot/running-an-effective-bug-bash-317fafa9d963\" rel=\"noopener\"\u003ehttps://medium.com/@changbot/running-an-effective-bug-bash-317fafa9d963\u003c/a\u003e\u003c/li\u003e\u003cli id=\"30e9\"\u003eMariia Hutsuk and Sivamoorthy Bose\u003cem\u003e, Importance of Exploratory Testing\u003c/em\u003e: \u003ca href=\"https://medium.com/quality-matters/importance-of-exploratory-testing-3f02e34dc0c3\" rel=\"noopener\"\u003ehttps://medium.com/quality-matters/importance-of-exploratory-testing-3f02e34dc0c3\u003c/a\u003e\u003c/li\u003e\u003cli id=\"ba79\"\u003eMartin Fowler, \u003cem\u003eExploratory Testing\u003c/em\u003e: \u003ca href=\"https://martinfowler.com/bliki/ExploratoryTesting.html\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ehttps://martinfowler.com/bliki/ExploratoryTesting.html\u003c/a\u003e\u003c/li\u003e\u003c/ol\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "11 min read",
  "publishedTime": "2024-12-11T12:17:19.322Z",
  "modifiedTime": null
}
