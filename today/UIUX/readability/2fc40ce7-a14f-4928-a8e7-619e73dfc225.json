{
  "id": "2fc40ce7-a14f-4928-a8e7-619e73dfc225",
  "title": "Yes, design can save you millions",
  "link": "https://uxdesign.cc/yes-design-can-save-you-millions-2b41256c3979?source=rss----138adf9c44c---4",
  "description": "",
  "author": "Ivan Sipilov",
  "published": "Sun, 20 Oct 2024 15:13:06 GMT",
  "source": "https://uxdesign.cc/feed",
  "categories": [
    "design-thinking",
    "ux",
    "design",
    "fintech",
    "case-study"
  ],
  "byline": "Ivan Sipilov",
  "length": 11376,
  "excerpt": "Here’s an example. Hawaii’s infamous missile false alarm in 2018 was caused by an employee pushing the wrong button. Why did that happen? Because someone clearly wanted to save money on design. The…",
  "siteName": "UX Collective",
  "favicon": "https://miro.medium.com/v2/resize:fill:256:256/1*dn6MbbIIlwobt0jnUcrt_Q.png",
  "text": "No, it’s not “nice to have”. A case study of the financial impact of smart design decisions in payment systems.From left to right: designer, project manager, developer, and a CPO (source)“Nice to have”?We know that poor design in critical systems leads to mistakes, slowdowns, and unhappy people.Here’s an example. Hawaii’s infamous missile false alarm in 2018 was caused by an employee pushing the wrong button. Why did that happen? Because someone clearly wanted to save money on design. The damage caused more than just panic. It led to trust issues and costly recovery efforts for the government.For some reason, many stakeholders still think design is just decoration.Design often gets dismissed as a “nice-to-have,” something to consider after all the “important” stuff is done. This mindset is especially common in complex systems of fintech, where functionality and technical stability seem to be the priority #1:…there is also very little differentiation between each company. They seem to be all doing the same thing. It’s “another” payment portal/funds transfer/digital wallet, or asset management/trading platform…“perhaps they don’t even know themselves.”But here’s a case study for you — in fintech, there are certain processes that can be improved only through good design. And those are precious moments when design finally shines bright, like... Well, I don’t want to say “diamond” because I will never get that Rihanna song out of my head.Payments systems are no jokeThe Red QueenPayment systems are intricate networks. They route data through a complex web of rules and logic. Routing payments, prioritizing transactions, and managing multiple currencies require sophisticated logic. A single error in routing or data handling can snowball.What I’m trying to say is that working with payment systems is like working with the Red Queen from Alice in Wonderland. You risk getting your head cut off by a wrong decision.Poor design in such systems can lead not only to user frustration but can also significantly impact profitability. It costs businesses more than lost revenue — it damages their reputation.Can we prevent business losses with design?Yes, by making design decisions that reduce errors.For businesses handling large-scale payments, especially enterprise merchants, payment routing is essential to maximize acceptance rates and reduce transaction costs. Payment routing helps find the best way to send the money. It checks which path will cost the least, be the fastest, and have the best chance of getting through without problems.Now, there are rules for how this works. For example, some rules might say, “If the fastest path doesn’t work, try another route,” while others say, “Use the cheapest way unless the customer is in a hurry.”What’s important here for designers is to understand that all this stuff requires a human to process loads of complex information. Loads.It’s critical to present this information in a way that simplifies decision-making and reduces the chances of human error. The design here is directly connected with preventing losses.And the designer here is like a company’s accountant, trying to save the product thousands, hundreds of thousands, millions of dollars.What does the payment routing “interface” usually look like?In traditional systems, payment routing configurations are often managed through static lists, tables, or rule engines. The user interfaces are linear, where rules are typically stacked in a list format.The interface might look like this:But, in reality, it’s usually much worse. Users have to look through a giant Excel spreadsheet or JSON file like this:Screenshot by author — a typical “interface” for payment routingNow, what do we know about users and lists? If there are more than 4–5 items on the list, the readability goes down. This is why it is not recommended to create dropdown lists.The JSON files are unreadable for people with no technical background.The systems above are not ideal. Instead, I’ve suggested implementing something completely new—a “canvas node system.”When a designer comes with a “big ask,” — how to defend a completely new approachThe thing is, investing resources into something completely different is difficult to justify. Nine times out of ten, the product management will be happy with just improving what is.After all, why reinvent the wheel when the current one is spinning…?Designers have to defend the value of innovation, especially when that innovation involves a new UI or system that’s dramatically different. It’s not enough to simply say, “It’s better.” You need to align the new approach with both:business goals anduser needs,backing it up with research and data.For instance, the old way of dealing with payment routing through static lists may feel familiar, but the cognitive overload those lists impose is real. Studies from the Nielsen Norman Group show that users don’t read — they scan. So when they’re faced with complex tables and dropdowns, the chance of mistakes skyrockets.We have to ask ourselves: is maintaining the status quo really serving our users and the business?In my situation:the company could afford the innovation, and, what’s even more important,the new interface suggested would drastically improve the profitability in the long run.And so, this is how the “canvas-based node system” — a huge, interactive visual mindmap for payment routing — was approved and developed.Interactive canvas-based node systemThe canvas-based node system flips the traditional approach to payment routing on its head. Instead of forcing users to sift through endless lists or confusing JSON code, it transforms each rule into its own visual “node” that can be easily customized and connected.A node is essentially a visual representation of a payment rule or a specific function within the payment routing system.It’s a bit like creating a mind map, where you can see how everything links together in real-time:Every block (node) you can move, creating your own mind mapWhy is this better?By laying out the rules visually, users can quickly see how different conditions interact, making it way easier to spot and prevent conflicts or errors. Besides, imagine being able to drag, drop, and link different rules together, just like you’re building with Lego blocks.That’s what this system offers — complete control over how everything fits:What, if failed, with, send to — you can create your own system in an instant.You can literally see the routing strategy take shape. Thanks to design.Allowing users to choose a.k.a. A/B test nodeWhat makes this design so powerful is its flexibility.One of the coolest features of this system is the “A/B Test” node:A/B test node in action + Analytics nodeHere’s how it works: this node allows users to test different combinations of gateways, operators, and routing rules to see which setup performs better. You can essentially run experiments on your routing flow to find the most efficient path for your payments.All of the results from these tests get stored in the “Analytics” node.This gives you detailed insights, like the percentage of savings or the accident rate (aka failed transactions) for each scenario you test. So, you’re not just guessing which setup works best — you have the data right there to back it up. Key metrics such as:cost savings andsuccess ratesshow the performance of each A/B test.Since it’s all happening on the canvas, you can connect and disconnect rules or scenarios on the fly. The canvas makes it super easy to connect any rule to the A/B test construction, so the user can always experiment and improve the payment flows.Good-old zoom is a #1 requested feature in mindmapsThe zoom-in and zoom-out features allow users to navigate and overview huge routing systems. Users can shift between detailed views of individual rules and a broader overview of the entire system:Design can help auto-resolve conflictsImplementing new changes can sometimes lead to rule conflicts — like when two rules contradict each other or overlap in a way that would confuse the payment routing process. Design can help solve those conflicts — and it’s not only about highlighting them in red.The real magic is the auto-resolve button (I truly wish I had it for everything in life).Instead of manually trying to figure out which rule is more beneficial or needs adjustment, the system analyzes the conflicting rules and automatically chooses the most profitable option for you. It does this by looking at metrics like:success rates,cost savings, andgateway performanceto determine which rule combination is best:Auto-resolve and conflicts highlightedSometimes, the user feels more comfortable with a classic table… and we need to deliverYou know, sometimes, the new systems like our mind map, although ground-breaking, can be overwhelming. So, we need to backtrack a little bit.Users are used to classic systems. Throwing them into a completely new interface, even with onboarding, is cruel. Because they will want to return to something they are used to should any problems arise. That’s why we allow them to take a step back and return to a classic “list” view:It’s about giving users flexibility and control so they can work in whatever style feels most natural to them, whether that’s the dynamic canvas view or the familiar list view. Plus, it’s a great option for users who need to compare rules at a glance or want a pivoted, high-level overview of all their rules and priorities in a straightforward format.Of course, I also strived to improve the “list” interface as much as I could.This is how we delivered the best of both worlds.UX design is an investment, not an expenseDesign shapes users’ experiences. At its core, design is about solving problems and making things work better for users. It goes beyond aesthetics. It improves:functionality,usability, andoverall experience.Here’s why design matters:It makes things easy to use. Design helps users accomplish their tasks efficiently. If users can’t figure out how to use something, it becomes frustrating, which can lead them to abandon the product or service altogether.It saves time and money. In fintech, good design can reduce costly mistakes and save money. It can also improve efficiency. A good payment gateway can reduce transaction errors and avoid losses.It builds brand trust. When design solves user problems and makes their experience smooth, customers are more likely to return and stay loyal.It acts as a translator between business goals and user needs. Design-thinking processes ensure that user needs are met while also aligning with the company’s strategic goals.It can set your product apart. Even if multiple products have the same functionality, the one with a better user experience and design will stand out.Great design often pushes boundaries and introduces new ways to solve old problems. It lets designers think outside the box. They find better, more intuitive ways to do tasks.With the case study I presented you, although the design required time and resources to be made, in the end, it saved the companies that use the canvas-based node system millions of dollars (and probably at least a couple of jobs).So please, next time a stakeholder will say something along the lines of “Oh, but we have a product-first and not design-first approach,” give them a (kick) link to this article.",
  "image": "https://miro.medium.com/v2/resize:fit:1200/1*qXwIyK701y_TfYpEMi8iGQ.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003carticle\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cdiv\u003e\u003ch2 id=\"c233\"\u003eNo, it’s not “nice to have”. A case study of the financial impact of smart design decisions in payment systems.\u003c/h2\u003e\u003cdiv\u003e\u003ca href=\"https://medium.com/@ShipilovVania?source=post_page-----2b41256c3979--------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003cp\u003e\u003cimg alt=\"Ivan Sipilov\" src=\"https://miro.medium.com/v2/resize:fill:88:88/1*329u-85U9LQXmMXjUrIUiQ.png\" width=\"44\" height=\"44\" loading=\"lazy\" data-testid=\"authorPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003ca href=\"https://uxdesign.cc/?source=post_page-----2b41256c3979--------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003cp\u003e\u003cimg alt=\"UX Collective\" src=\"https://miro.medium.com/v2/resize:fill:48:48/1*mDhF9X4VO0rCrJvWFatyxg.png\" width=\"24\" height=\"24\" loading=\"lazy\" data-testid=\"publicationPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/div\u003e\u003cfigure\u003e\u003cfigcaption\u003eFrom left to right: designer, project manager, developer, and a CPO (\u003ca href=\"https://medium.com/alice-s-adventures-in-wonderland/sir-john-tenniel-s-classic-illustrations-of-alice-in-wonderland-2c3bbdca3a77\" rel=\"noopener\"\u003esource\u003c/a\u003e)\u003c/figcaption\u003e\u003c/figure\u003e\u003ch2 id=\"4236\"\u003e“Nice to have”?\u003c/h2\u003e\u003cp id=\"b755\"\u003eWe know that poor design in critical systems leads to mistakes, slowdowns, and unhappy people.\u003c/p\u003e\u003cp id=\"aec5\"\u003eHere’s an example. Hawaii’s infamous missile false alarm in \u003ca href=\"https://en.wikipedia.org/wiki/2018_Hawaii_false_missile_alert#:~:text=On%20the%20morning%20of%20January,to%20an%20incoming%20ballistic%20missile.\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e2018\u003c/a\u003e was caused by an employee pushing the wrong button. Why did that happen? Because someone clearly wanted to save money on design. The damage caused more than just panic. It led to trust issues and costly recovery efforts for the government.\u003c/p\u003e\u003cp id=\"28c4\"\u003eFor some reason, many stakeholders still think \u003ca href=\"https://www.compact.nl/articles/design-is-not-nice-to-have/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003edesign is just decoration\u003c/a\u003e.\u003c/p\u003e\u003cp id=\"3f4d\"\u003eDesign often gets dismissed as a “nice-to-have,” something to consider after all the “important” stuff is done. This mindset is especially common in \u003ca href=\"https://designsojourn.com/fintech-uses-design-but-not-in-the-way-it-should/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ecomplex systems of fintech\u003c/a\u003e, where functionality and technical stability seem to be the priority #1:\u003c/p\u003e\u003cblockquote\u003e\u003cp id=\"af2f\"\u003e…there is also very little differentiation between each company. They seem to be all doing the same thing. It’s “another” payment portal/funds transfer/digital wallet, or asset management/trading platform…“perhaps they don’t even know themselves.”\u003c/p\u003e\u003c/blockquote\u003e\u003cp id=\"4b4c\"\u003eBut here’s a \u003cstrong\u003ecase study\u003c/strong\u003e for you — in fintech, there are certain processes that can be improved \u003cstrong\u003eonly\u003c/strong\u003e through \u003ca rel=\"noopener\" target=\"_blank\" href=\"https://uxdesign.cc/designing-the-investment-fintech-product-key-differences-and-challenges-13d5a4fedefb\"\u003egood design\u003c/a\u003e. And those are precious moments when design finally shines bright, like... Well, I don’t want to say “diamond” because I will never get that Rihanna song out of my head.\u003c/p\u003e\u003ch2 id=\"f765\"\u003ePayments systems are no joke\u003c/h2\u003e\u003cfigure\u003e\u003cfigcaption\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Red_Queen_(Through_the_Looking-Glass)\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eThe Red Queen\u003c/a\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"a75c\"\u003ePayment systems are intricate networks. They route data through a complex web of rules and logic. Routing payments, prioritizing transactions, and managing multiple currencies require sophisticated logic. A single error in routing or data handling can snowball.\u003c/p\u003e\u003cp id=\"b50b\"\u003eWhat I’m trying to say is that working with payment systems is like working with the \u003ca href=\"https://en.wikipedia.org/wiki/Red_Queen_(Through_the_Looking-Glass)\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eRed Queen\u003c/a\u003e from Alice in Wonderland. You risk getting your head cut off by a wrong decision.\u003c/p\u003e\u003cp id=\"4fb8\"\u003ePoor design in such systems can lead not only to user frustration but can also significantly \u003cstrong\u003eimpact profitability\u003c/strong\u003e. It costs businesses more than lost revenue — it damages their reputation.\u003c/p\u003e\u003ch2 id=\"7364\"\u003eCan we prevent business losses with design?\u003c/h2\u003e\u003cp id=\"6e27\"\u003eYes, by making design decisions that \u003ca rel=\"noopener\" target=\"_blank\" href=\"https://uxdesign.cc/the-business-impact-of-design-6558836e57ca\"\u003ereduce errors\u003c/a\u003e.\u003c/p\u003e\u003cp id=\"9f48\"\u003eFor businesses handling large-scale payments, especially \u003cstrong\u003eenterprise merchants\u003c/strong\u003e, payment routing is essential to maximize acceptance rates and reduce transaction costs. Payment routing helps find the best way to send the money. It checks which path will cost the least, be the fastest, and have the best chance of getting through without problems.\u003c/p\u003e\u003cp id=\"9f24\"\u003eNow, there are \u003ca href=\"https://knowledgecenter.zuora.com/Zuora_Payments/Payment_gateway_integrations/Payment_Gateway_Routing/C_Create_and_manage_Payment_Gateway_Routing_rules#:~:text=The%20rules%20determine%20when%20to,to%20trigger%20the%20defined%20rule.\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003e\u003cstrong\u003erules\u003c/strong\u003e\u003c/a\u003e for how this works. For example, some rules might say, “If the fastest path doesn’t work, try another route,” while others say, “Use the cheapest way unless the customer is in a hurry.”\u003c/p\u003e\u003cp id=\"9f9e\"\u003eWhat’s important here for designers is to understand that all this stuff requires a human to process \u003ca rel=\"noopener\" target=\"_blank\" href=\"https://uxdesign.cc/reducing-cognitive-overload-designing-for-human-cognition-350f07cff9c4\"\u003eloads of complex information\u003c/a\u003e. Loads.\u003c/p\u003e\u003cp id=\"0940\"\u003eIt’s critical to present this information in a way that simplifies decision-making and reduces the chances of human error. The design here is directly connected with preventing losses.\u003c/p\u003e\u003cp id=\"3a40\"\u003eAnd the designer here is like a company’s accountant, trying to \u003ca href=\"https://zeroheight.com/blog/how-design-systems-can-save-you-time-and-money/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003esave\u003c/a\u003e the product thousands, hundreds of thousands, millions of dollars.\u003c/p\u003e\u003ch2 id=\"830c\"\u003e\u003cstrong\u003eWhat does the payment routing “interface” usually look like?\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"d491\"\u003eIn traditional systems, payment routing configurations are often managed through static lists, tables, or rule engines. The user interfaces are linear, where rules are typically stacked in a list format.\u003c/p\u003e\u003cp id=\"f8a3\"\u003eThe interface might look like this:\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"4b35\"\u003eBut, in reality, it’s usually \u003cstrong\u003emuch worse\u003c/strong\u003e. Users have to look through a giant Excel spreadsheet or JSON file like this:\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfigure\u003e\u003cfigcaption\u003eScreenshot by author — a typical “interface” for payment routing\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003cdiv\u003e\u003col\u003e\u003cli id=\"97a4\"\u003eNow, what do we know about users and lists? If there are more than 4–5 items on the list, the readability \u003ca href=\"https://www.nngroup.com/videos/tips-bulleted-lists-digital-content/?lm=how-users-read-on-the-web\u0026amp;pt=article\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003egoes down\u003c/a\u003e. This is why it is not recommended to create \u003ca href=\"https://medium.com/@NilsSkold/why-drop-down-lists-are-bad-for-the-user-experience-eeda5cbbd315\" rel=\"noopener\"\u003edropdown\u003c/a\u003e lists.\u003c/li\u003e\u003cli id=\"2a0e\"\u003eThe JSON files are unreadable for people with no \u003ca rel=\"noopener\" target=\"_blank\" href=\"https://uxdesign.cc/to-code-or-not-to-code-omg-this-is-totally-the-wrong-question-14deb48bd9c3\"\u003etechnical background\u003c/a\u003e.\u003c/li\u003e\u003c/ol\u003e\u003cp id=\"f2a5\"\u003eThe systems above are not ideal. Instead, I’ve suggested implementing something completely new—a “canvas node system.”\u003c/p\u003e\u003ch2 id=\"151d\"\u003eWhen a designer comes with a “big ask,” — how to defend a completely new approach\u003c/h2\u003e\u003cp id=\"5ffb\"\u003eThe thing is, investing resources into something completely different is difficult to justify. Nine times out of ten, \u003cstrong\u003ethe product management will be happy with just improving what is\u003c/strong\u003e.\u003c/p\u003e\u003cp id=\"d515\"\u003eAfter all, why reinvent the wheel when the current one is spinning…?\u003c/p\u003e\u003cp id=\"0e49\"\u003e\u003cstrong\u003eDesigners have to \u003c/strong\u003e\u003ca rel=\"noopener\" target=\"_blank\" href=\"https://uxdesign.cc/overcome-frustration-and-learn-how-to-articulate-your-design-solutions-8ddc2fab3978\"\u003e\u003cstrong\u003edefend\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e the value of innovation\u003c/strong\u003e, especially when that innovation involves a new UI or system that’s dramatically different. It’s not enough to simply say, “It’s better.” You need to align the new approach with both:\u003c/p\u003e\u003cul\u003e\u003cli id=\"e3f8\"\u003ebusiness goals and\u003c/li\u003e\u003cli id=\"43c8\"\u003euser needs,\u003c/li\u003e\u003cli id=\"f1d1\"\u003ebacking it up with research and data.\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"81af\"\u003eFor instance, the old way of dealing with payment routing through static lists may feel familiar, but the \u003cstrong\u003ecognitive overload\u003c/strong\u003e those lists impose is real. Studies from the \u003ca href=\"https://uxplanet.org/people-dont-read-online-they-scan-this-is-how-to-write-for-them-80a75069c14e#5ea5\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eNielsen Norman Group\u003c/a\u003e show that users don’t read — they scan. So when they’re faced with complex tables and dropdowns, the chance of mistakes skyrockets.\u003c/p\u003e\u003cblockquote\u003e\u003cp id=\"e828\"\u003eWe have to ask ourselves: is maintaining the status quo really serving our users and the business?\u003c/p\u003e\u003c/blockquote\u003e\u003cp id=\"7bfb\"\u003eIn my situation:\u003c/p\u003e\u003cul\u003e\u003cli id=\"edc1\"\u003ethe company could afford the innovation, and, what’s even more important,\u003c/li\u003e\u003cli id=\"ddfc\"\u003ethe new interface suggested would drastically improve the profitability in the long run.\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"aaf1\"\u003eAnd so, this is how the \u003cstrong\u003e“canvas-based node system”\u003c/strong\u003e — a huge, interactive visual mindmap for payment routing — was approved and developed.\u003c/p\u003e\u003ch2 id=\"f0fa\"\u003eInteractive canvas-based node system\u003c/h2\u003e\u003cp id=\"5bb4\"\u003eThe canvas-based node system flips the traditional approach to payment routing on its head. Instead of forcing users to sift through endless lists or confusing JSON code, it transforms each rule into its own visual “node” that can be easily customized and connected.\u003c/p\u003e\u003cp id=\"2a92\"\u003eA \u003cstrong\u003enode\u003c/strong\u003e is essentially a visual representation of a payment rule or a specific function within the payment routing system.\u003c/p\u003e\u003cp id=\"8e76\"\u003eIt’s a bit like creating a mind map, where you can see how everything links together in real-time:\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfigure\u003e\u003cfigcaption\u003eEvery block (node) you can move, creating your own mind map\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"0d53\"\u003eWhy is this better?\u003c/p\u003e\u003cp id=\"2361\"\u003eBy \u003ca rel=\"noopener\" target=\"_blank\" href=\"https://uxdesign.cc/an-in-depth-look-into-good-text-blog-layouts-8773788c5b2c\"\u003elaying out the rules visually\u003c/a\u003e, users can quickly see how different conditions interact, making it way easier to spot and prevent conflicts or errors. Besides, imagine being able to drag, drop, and link different rules together, just like you’re building with Lego blocks.\u003c/p\u003e\u003cp id=\"7af8\"\u003eThat’s what this system offers — complete control over how everything fits:\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eWhat, if failed, with, send to — you can create your own system in an instant.\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"44cb\"\u003eYou can literally see the routing strategy take shape. Thanks to design.\u003c/p\u003e\u003ch2 id=\"4811\"\u003e\u003cstrong\u003eAllowing users to \u003c/strong\u003e\u003ca rel=\"noopener\" target=\"_blank\" href=\"https://uxdesign.cc/choice-is-not-the-enemy-e2b51de4cc8e\"\u003e\u003cstrong\u003echoose\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e a.k.a. A/B test node\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"69ed\"\u003eWhat makes this \u003ca rel=\"noopener\" target=\"_blank\" href=\"https://uxdesign.cc/choice-is-not-the-enemy-e2b51de4cc8e\"\u003edesign so powerful is its flexibility\u003c/a\u003e.\u003c/p\u003e\u003cp id=\"759e\"\u003eOne of the coolest features of this system is the “A/B Test” node:\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eA/B test node in action + Analytics node\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"9b78\"\u003eHere’s how it works: this node allows users to test different combinations of gateways, operators, and routing rules to see which setup performs better. You can essentially run experiments on your routing flow to find the most efficient path for your payments.\u003c/p\u003e\u003cp id=\"43e2\"\u003eAll of the results from these tests get stored in the \u003cstrong\u003e“Analytics”\u003c/strong\u003e node.\u003c/p\u003e\u003cp id=\"3612\"\u003eThis gives you detailed insights, like the percentage of savings or the accident rate (aka failed transactions) for each scenario you test. So, you’re not just guessing which setup works best — you have the data right there to back it up. Key metrics such as:\u003c/p\u003e\u003cul\u003e\u003cli id=\"4d3c\"\u003ecost savings and\u003c/li\u003e\u003cli id=\"790d\"\u003esuccess rates\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"27dc\"\u003eshow the performance of each \u003ca rel=\"noopener\" target=\"_blank\" href=\"https://uxdesign.cc/a-b-testing-your-designs-b648e413b124\"\u003eA/B test\u003c/a\u003e.\u003c/p\u003e\u003cp id=\"31b2\"\u003eSince it’s all happening on the canvas, you can \u003cem\u003econnect\u003c/em\u003e and \u003cem\u003edisconnect\u003c/em\u003e rules or scenarios on the fly. The canvas makes it super easy to connect any rule to the A/B test construction, so the user can always \u003ca rel=\"noopener\" target=\"_blank\" href=\"https://uxdesign.cc/making-users-successful-through-experiential-learning-7d50b2bdb9b\"\u003eexperiment\u003c/a\u003e and improve the payment flows.\u003c/p\u003e\u003ch2 id=\"9388\"\u003eGood-old zoom is a #1 requested feature in mindmaps\u003c/h2\u003e\u003cp id=\"f2e8\"\u003e\u003cstrong\u003eThe zoom-in and zoom-out features\u003c/strong\u003e allow users to navigate and overview huge routing systems. Users can shift between \u003cstrong\u003edetailed views\u003c/strong\u003e of individual rules and a \u003cstrong\u003ebroader overview\u003c/strong\u003e of the entire system:\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003ch2 id=\"ea65\"\u003eDesign can help auto-resolve conflicts\u003c/h2\u003e\u003cp id=\"7838\"\u003eImplementing new changes can sometimes lead to \u003cstrong\u003erule conflicts\u003c/strong\u003e — like when two rules contradict each other or overlap in a way that would confuse the payment routing process. \u003ca href=\"https://medium.com/the-many/ux-conflict-resolution-co-designing-solutions-d270021e45fb\" rel=\"noopener\"\u003eDesign can help solve those conflicts\u003c/a\u003e — and it’s not only about highlighting them in \u003ca rel=\"noopener\" target=\"_blank\" href=\"https://uxdesign.cc/branding-your-app-with-red-a7df0b6b0e54\"\u003ered\u003c/a\u003e.\u003c/p\u003e\u003cp id=\"69ca\"\u003eThe real magic is the \u003cstrong\u003eauto-resolve button\u003c/strong\u003e (I truly wish I had it for everything in life).\u003c/p\u003e\u003cp id=\"488f\"\u003eInstead of manually trying to figure out which rule is more beneficial or needs adjustment, the system analyzes the conflicting rules and \u003cstrong\u003eautomatically chooses the most profitable option\u003c/strong\u003e for you. It does this by looking at metrics like:\u003c/p\u003e\u003cul\u003e\u003cli id=\"0410\"\u003esuccess rates,\u003c/li\u003e\u003cli id=\"13b7\"\u003ecost savings, and\u003c/li\u003e\u003cli id=\"9614\"\u003egateway performance\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"fe45\"\u003eto determine which rule combination is best:\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eAuto-resolve and conflicts highlighted\u003c/figcaption\u003e\u003c/figure\u003e\u003ch2 id=\"7785\"\u003eSometimes, the user feels more comfortable with a classic table… and we need to deliver\u003c/h2\u003e\u003cp id=\"c523\"\u003eYou know, sometimes, the new systems like our mind map, although ground-breaking, can be overwhelming. So, we need to backtrack a little bit.\u003c/p\u003e\u003cp id=\"f97d\"\u003eUsers are used to classic systems. Throwing them into a completely new interface, even with onboarding, is cruel. Because they will want to return to something they are \u003ca href=\"https://www.nngroup.com/articles/ten-usability-heuristics/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eused to\u003c/a\u003e should any problems arise. That’s why we allow them to take a step back and return to a classic “list” view:\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"2be0\"\u003eIt’s about giving users \u003cstrong\u003eflexibility\u003c/strong\u003e and \u003cstrong\u003econtrol\u003c/strong\u003e so they can work in whatever style feels most natural to them, whether that’s the dynamic canvas view or the familiar list view. Plus, it’s a great option for users who need to \u003cstrong\u003ecompare rules at a glance\u003c/strong\u003e or want a \u003cstrong\u003epivoted, high-level overview\u003c/strong\u003e of all their rules and priorities in a straightforward format.\u003c/p\u003e\u003cp id=\"f7fc\"\u003eOf course, I also strived to improve the “list” interface as much as I could.\u003c/p\u003e\u003cp id=\"bcdb\"\u003eThis is how we delivered the best of both worlds.\u003c/p\u003e\u003ch2 id=\"b4ed\"\u003eUX design is an investment, not an expense\u003c/h2\u003e\u003cp id=\"a789\"\u003eDesign shapes users’ experiences. At its core, design is about solving problems and making things work better for users. It goes beyond aesthetics. It improves:\u003c/p\u003e\u003cul\u003e\u003cli id=\"3dd6\"\u003efunctionality,\u003c/li\u003e\u003cli id=\"82ab\"\u003eusability, and\u003c/li\u003e\u003cli id=\"1f91\"\u003eoverall experience.\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"a32b\"\u003eHere’s why design \u003ca href=\"https://shakuro.com/blog/the-meaning-of-design-what-design-is-and-why-its-important\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ematters\u003c/a\u003e:\u003c/p\u003e\u003col\u003e\u003cli id=\"54b4\"\u003eIt make\u003cstrong\u003es things easy to use. \u003c/strong\u003eDesign helps users accomplish their tasks efficiently. If users can’t figure out how to use something, it becomes frustrating, which can lead them to abandon the product or service altogether.\u003c/li\u003e\u003cli id=\"f594\"\u003e\u003cstrong\u003eIt saves time and money. \u003c/strong\u003eIn fintech, good design can reduce costly mistakes and save money. It can also improve efficiency. A good payment gateway can reduce transaction errors and avoid losses.\u003c/li\u003e\u003cli id=\"f516\"\u003e\u003cstrong\u003eIt builds brand trust.\u003c/strong\u003e When design solves user problems and makes their experience smooth, customers are more likely to return and stay loyal.\u003c/li\u003e\u003cli id=\"78de\"\u003e\u003cstrong\u003eIt acts as a translator\u003c/strong\u003e between business goals and user needs. Design-thinking processes ensure that user needs are met while also aligning with the company’s strategic goals.\u003c/li\u003e\u003cli id=\"c841\"\u003e\u003cstrong\u003eIt can set your product apart.\u003c/strong\u003e Even if multiple products have the same functionality, the one with a better user experience and design will stand out.\u003c/li\u003e\u003cli id=\"4288\"\u003eGreat design often \u003cstrong\u003epushes boundaries \u003c/strong\u003eand introduces new ways to solve old problems. It lets designers think outside the box. They find better, more intuitive ways to do tasks.\u003c/li\u003e\u003c/ol\u003e\u003cp id=\"9b1b\"\u003eWith the case study I presented you, although the design required time and resources to be made, in the end, it saved the companies that use the canvas-based node system millions of dollars (and probably at least a couple of jobs).\u003c/p\u003e\u003cp id=\"60c9\"\u003eSo please, next time a stakeholder will say something along the lines of “Oh, but we have a product-first and not design-first approach,” give them a (kick) link to this article.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/article\u003e\u003c/div\u003e",
  "readingTime": "13 min read",
  "publishedTime": "2024-10-20T15:13:06.178Z",
  "modifiedTime": null
}
