{
  "id": "a8ed6d1d-4cff-48a5-a6aa-d3923bd289f5",
  "title": "How to scope your AI product",
  "link": "https://uxdesign.cc/how-to-scope-your-ai-product-5b9885ef3851?source=rss----138adf9c44c---4",
  "description": "",
  "author": "Joe Bernstein",
  "published": "Thu, 31 Oct 2024 11:24:03 GMT",
  "source": "https://uxdesign.cc/feed",
  "categories": [
    "ux",
    "design",
    "ai",
    "product-design",
    "product-management"
  ],
  "byline": "Joe Bernstein",
  "length": 9632,
  "excerpt": "I have to confess something: I’ve been lying when I say I work on an AI product. I did it to sound cool. I did it to fit in. I did it because AI is trendy. And ultimately, I did it because it’s…",
  "siteName": "UX Collective",
  "favicon": "https://miro.medium.com/v2/resize:fill:256:256/1*dn6MbbIIlwobt0jnUcrt_Q.png",
  "text": "Step 1: Accept that it’s not an “AI product”I have to confess something: I’ve been lying when I say I work on an AI product. I did it to sound cool. I did it to fit in. I did it because AI is trendy.And ultimately, I did it because it’s easier to say than the truth, which is “I work on a product with features that are powered by AI technology.”It sounds like a technicality, but lately the distinction seems more important than ever. More than a year into the Generative AI revolution, many of us have watched tech companies speedrun through the stages of AI maturity. From “let’s be cautious” to “let’s throw AI at the wall and see what sticks,” AI strategies have left critics feeling either like AI will change everything or AI will change nothing and rarely something in between. But for those of us working in otherwise-mature design organizations, we’re going about this all wrong. AI is taking up too much of the front half of our sentences.Working in this space has kept me busy this year. The technology changes fast and new competitors pop up even faster. I’ve been working on this project for almost a year and we still keep pivoting strategies, adjusting our roadmaps, and support an ever-bloating list of feature requests. Understandably, many of us working in this space are learning new things as we go. But I keep forgetting about this one tool I’ve been carrying around in my design toolkit all along: the power of saying “No.”Scope CreepAfter many stagnant years of technology, I enjoy that there’s so much enthusiasm in the air. Everyone is excited to innovate. Everyone has ideas. And it’s setting us up to fall right into the trap of the Scope Creep.If you think an AI uprising sounds scary, you’ve never stared the Scope Creep straight in the eyes. The Scope Creep preys on design organizations without a clear sense of direction, weighing down products with extra ideas that “might be cool” or that “the design team should look into.” Much like Bigfoot, we don’t really know what the Scope Creep looks like because it lurks in the shadows, avoiding detection until it’s too late. By the time the Scope Creep sneaks up on an unsuspecting project, it’s already doomed, pulled into the quicksand, destined not to get off the ground. The only antidote for the Scope Creep is to define an appropriate scope for your project ahead of time.While we don’t know for sure what the Scope Creep looks like, my buddy Trip Carroll attempted to sketch its likeness based on reports from frustrated designers. Find more of Trip’s writing and illustrations on Medium.Scopes AppropesDefining the right scope for a project begins with understanding what kind of product you’re working on, and that’s why I no longer say I work on an AI product. When I attended Reginé Gilbert’s talk at ConFig earlier this year, she asked how many of us in the room work on AI products; an overwhelming number of hands shot up, including my own. But let’s be realistic — how many of us work for OpenAI, or in the exclusive circle of companies licensing a proprietary AI model as their product? Sure, those people can say they work on an AI product. But the rest of us, for the sake of responsible design, need to remember that AI is not our product. AI is not our feature. AI is technology. Everyone wants to get in on the buzzword, but, respectfully, it doesn’t deserve this much attention.If you’ve ever included user stories in your design process, you know that people don’t want to use your product. People have goals and challenges. If your product helps people achieve their goals or eases their challenges, then and only then will they use your product.This is no different for products that use AI, but the shine of AI has distracted us from what we’re really trying to do: deliver value to our users. If you work in technology then you’re likely biased towards the technology surrounding you. But I assure you that the average person’s goal is not to use more AI. Their goal might be to write a more succinct email or to summarize a meeting they missed, and if an AI model can execute a feature that achieves that goal, then they might use more AI. But if you start your design process under the premise of “adding more AI features” then you’re doing a disservice to your users.It’s all about valueMy product is not an AI product. It’s a product with many features, and some of those features are powered by AI. Specifically, it’s a product that delivers value to users through features that perform better or faster because of an AI model’s strengths.I’m not trying to redefine the words we use. I just think we need to shift AI to the end of the sentence so we can make more room for the value to come first. As I face a long list of feature requests that risk scope creep, the first step to saying no is to stress test whether the feature provides a desired value for the customer. I recently started to do this by using what I call Value Pyramids.Product Value PyramidsWhat kind of product do you work on, and what’s it really about anyway? If you’re like me and work in a large design organization on a large product that predates your tenure, this might not be a trivial question. As far as you’re concerned the product existed before you, it’ll continue to exist after you, and your job is simply to add, remove, update, and improve its features.But before you can deliver valuable features, you need to understand why users value the product in the first place. The Product Value Pyramid (PVP) places the value at the base of the pyramid, supporting a customer-driven purpose which keeps the product afloat. You should be able to build a value statement in the format “We are a [BLANK] product that enables customers to [BLANK] so that the customer can [BLANK].” For example, a rideshare company might say “we are a transportation product that enables customers to hire a ride from their phone so that they can get from Point A to Point B on a moment’s notice.”The Product Value PyramidDon’t feel limited to only one of these statements either. In my own work, some customers see us as an analytics product and others see us as a tech support product. The important thing is that they probably don’t see us as an AI product even if AI-powered features help them analyze data or answer questions faster.Feature Value PyramidsOnce you have established at least one value statement for the product you work on, you have a way to evaluate new features to ensure that they provide a value that aligns with the product values. The Feature Value Pyramid (FVP) is an inversion of the PVP — this time, the value is on top. Before you even define what any new feature is, you should have an idea of what customer value the feature will support, and then figure out what technology will get you there.In this case, you’ll build the value statement in the format “The customer can [BLANK] because we enable [BLANK] by leveraging [BLANK].” This statement emphasizes that you need to understand why you’re adding a new feature before you define what the feature is or how you’ll achieve it.The Feature Value PyramidIf you start to write out all of the values your product provides, and then write out all of the values the product’s features — current and future — using the same framework, you should be able to stack your pyramids in such a way that the features support the product’s purpose(s).The pyramids should be able to stack and align, with a “sweet spot” of value in the middleWhen you place it all together, you’ll notice that the value of a feature ends where the value of the product begins. When you define your feature values in a way that supports the product values, you should see a close alignment across that middle section.Meeting in the middleWhen you place your value statements together and line them up in the middle, reading horizontally across that middle row should tell a consistent story. If you’re working on a product that already exists, it’s good to start by framing the current features in this format. Make sure that all of your stakeholders can agree on what the product is, what values it provides, and why the current features are there.When you isolate just the statements, you should see how they line up in the middle, where the values meet. You should also see how indirectly the technology actually impacts the purpose of the product.From there, you can then address your backlog of feature requests coming in. Before you accept them into your roadmap, make sure that you can write the user story in a way that maintains the consistency of these value statements. If you find yourself performing mental gymnastics to make it fit the narrative, that’s a good sign to dig in deeper and reframe what problem you’re attempting to solve. If you prioritize the features that fit best with your values, you can keep the Scope Creep at bay.When I didn’t have a framework for evaluating new feature requests, I felt like we were conflating the technology (Generative AI) with the purpose (meeting actual customer needs). You may look at these PVPs and FVPs and see this as the reinvention of conventional user stories, but my goal here was to detach the soul of the product as much as possible from the technology that was powering it — in this case by five degrees of separation. We haven’t yet seen the extent of GenAI technology or what it can do for us in the future, but we can’t build around a specific iteration of a tool. It’s a lot like building a car: we might use the best engine available for this year’s model, but that’s not why we’re building it. We’re building it to move people forward.",
  "image": "https://miro.medium.com/v2/resize:fit:1200/1*OrhiS9IKf5gupauYNhWK3A.jpeg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cdiv\u003e\u003ch2 id=\"4c41\"\u003eStep 1: Accept that it’s not an “AI product”\u003c/h2\u003e\u003cdiv\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://joebern.medium.com/?source=post_page---byline--5b9885ef3851--------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Joe Bernstein\" src=\"https://miro.medium.com/v2/resize:fill:88:88/1*PnBKdffB_cdGBnyHkN5sYw.jpeg\" width=\"44\" height=\"44\" loading=\"lazy\" data-testid=\"authorPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://uxdesign.cc/?source=post_page---byline--5b9885ef3851--------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"UX Collective\" src=\"https://miro.medium.com/v2/resize:fill:48:48/1*mDhF9X4VO0rCrJvWFatyxg.png\" width=\"24\" height=\"24\" loading=\"lazy\" data-testid=\"publicationPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cp id=\"79ae\"\u003eI have to confess something: I’ve been lying when I say I work on an AI product. I did it to sound cool. I did it to fit in. I did it because AI is trendy.\u003c/p\u003e\u003cp id=\"3297\"\u003eAnd ultimately, I did it because it’s easier to say than the truth, which is “\u003cstrong\u003eI work on a product with features that are powered by AI technology.\u003c/strong\u003e”\u003c/p\u003e\u003cp id=\"d760\"\u003eIt sounds like a technicality, but lately the distinction seems more important than ever. More than a year into the \u003ca href=\"https://blog.adobe.com/en/publish/2024/04/22/age-generative-ai-over-half-americans-have-used-generative-ai-most-believe-will-help-them-be-more-creative\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eGenerative AI revolution\u003c/a\u003e, many of us have watched tech companies speedrun through the stages of AI maturity. From “let’s be cautious” to “\u003ca href=\"https://finance.yahoo.com/news/generative-ai-is-having-a-throw-everything-at-the-wall-moment-191404611.html\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003elet’s throw AI at the wall and see what sticks\u003c/a\u003e,” AI strategies have left critics feeling either like AI will change everything or AI will change nothing and rarely something in between. But for those of us working in otherwise-mature design organizations, we’re going about this all wrong. AI is taking up too much of the front half of our sentences.\u003c/p\u003e\u003cp id=\"c94c\"\u003eWorking in this space has kept me busy this year. The technology changes fast and new competitors pop up even faster. I’ve been working on this project for almost a year and we still keep pivoting strategies, adjusting our roadmaps, and support an ever-bloating list of feature requests. Understandably, many of us working in this space are learning new things as we go. But I keep forgetting about this one tool I’ve been carrying around in my design toolkit all along: the power of saying “No.”\u003c/p\u003e\u003ch2 id=\"3a33\"\u003eScope Creep\u003c/h2\u003e\u003cp id=\"66c1\"\u003eAfter many stagnant years of technology, I enjoy that there’s so much enthusiasm in the air. Everyone is excited to innovate. Everyone has ideas. And it’s setting us up to fall right into the trap of the \u003cem\u003eScope Creep\u003c/em\u003e.\u003c/p\u003e\u003cp id=\"b35b\"\u003eIf you think an AI uprising sounds scary, you’ve never stared the Scope Creep straight in the eyes. The Scope Creep preys on design organizations without a clear sense of direction, weighing down products with extra ideas that “might be cool” or that “the design team should look into.” Much like Bigfoot, we don’t really know what the Scope Creep looks like because it lurks in the shadows, avoiding detection until it’s too late. By the time the Scope Creep sneaks up on an unsuspecting project, it’s already doomed, pulled into the quicksand, destined not to get off the ground. The only antidote for the Scope Creep is to define an appropriate scope for your project ahead of time.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eWhile we don’t know for sure what the Scope Creep looks like, my buddy \u003ca href=\"https://tripcarroll.com/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eTrip Carroll\u003c/a\u003e attempted to sketch its likeness based on reports from frustrated designers. \u003ca href=\"https://medium.com/@tripcarroll\" rel=\"noopener\"\u003eFind more of Trip’s writing and illustrations on Medium\u003c/a\u003e.\u003c/figcaption\u003e\u003c/figure\u003e\u003ch2 id=\"21d4\"\u003eScopes Appropes\u003c/h2\u003e\u003cp id=\"8826\"\u003eDefining the right scope for a project begins with understanding what kind of product you’re working on, and that’s why I no longer say I work on an AI product. When I attended \u003ca href=\"https://youtu.be/uUwBdODvS5o?si=IvzEpGABEJYe1xmN\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eReginé Gilbert’s talk at ConFig\u003c/a\u003e earlier this year, she asked how many of us in the room work on AI products; an overwhelming number of hands shot up, including my own. But let’s be realistic — how many of us work for OpenAI, or in the exclusive circle of companies licensing a proprietary AI model as their product? Sure, those people can say they work on an AI \u003cem\u003eproduct\u003c/em\u003e. But the rest of us, for the sake of responsible design, need to remember that \u003cstrong\u003eAI is not our product. AI is not our feature. AI is technology.\u003c/strong\u003e Everyone wants to get in on the buzzword, but, respectfully, it doesn’t deserve this much attention.\u003c/p\u003e\u003cp id=\"8328\"\u003eIf you’ve ever included \u003ca rel=\"noopener\" target=\"_blank\" href=\"https://uxdesign.cc/how-to-write-a-good-user-story-practical-approach-b9bed439f97d\"\u003euser stories\u003c/a\u003e in your design process, you know that people don’t \u003cem\u003ewant \u003c/em\u003eto use your product. People have goals and challenges. If your product helps people achieve their goals or eases their challenges, then and only then will they use your product.\u003c/p\u003e\u003cp id=\"63f1\"\u003eThis is no different for products that use AI, but the shine of AI has distracted us from what we’re really trying to do: \u003cstrong\u003edeliver value to our users\u003c/strong\u003e. If you work in technology then you’re likely biased towards the technology surrounding you. But I assure you that the average person’s \u003cem\u003egoal\u003c/em\u003e is not to use more AI. Their goal might be to write a more succinct email or to summarize a meeting they missed, and if an AI model can execute a feature that achieves that goal, then they might use more AI. But if you start your design process under the premise of “adding more AI features” then you’re \u003cstrong\u003edoing a disservice to your users\u003c/strong\u003e.\u003c/p\u003e\u003ch2 id=\"43fb\"\u003eIt’s all about value\u003c/h2\u003e\u003cp id=\"53ce\"\u003eMy product is not an AI product. It’s a product with many features, and some of those features are powered by AI. Specifically, it’s a product that delivers value to users through features that perform better or faster because of an AI model’s strengths.\u003c/p\u003e\u003cp id=\"f4d8\"\u003eI’m not trying to redefine the words we use. I just think we need to shift AI to the end of the sentence so we can \u003cstrong\u003emake more room for the value\u003c/strong\u003e to come first. As I face a long list of feature requests that risk scope creep, the first step to saying no is to stress test whether the feature provides a desired value for the customer. I recently started to do this by using what I call Value Pyramids.\u003c/p\u003e\u003ch2 id=\"158d\"\u003eProduct Value Pyramids\u003c/h2\u003e\u003cp id=\"0ad1\"\u003eWhat kind of product do you work on, and what’s it really about anyway? If you’re like me and work in a large design organization on a large product that predates your tenure, this might not be a trivial question. As far as you’re concerned the product existed before you, it’ll continue to exist after you, and your job is simply to \u003cstrong\u003eadd, remove, update, and improve its features\u003c/strong\u003e.\u003c/p\u003e\u003cp id=\"98a9\"\u003eBut before you can deliver valuable features, you need to understand why users value the product in the first place. The \u003cstrong\u003eProduct Value Pyramid\u003c/strong\u003e (PVP) places the value at the base of the pyramid, supporting a customer-driven purpose which keeps the product afloat. You should be able to build a value statement in the format “\u003cstrong\u003eWe are a [BLANK] product that enables customers to [BLANK] so that the customer can [BLANK].\u003c/strong\u003e” For example, a rideshare company might say “we are a transportation product that enables customers to hire a ride from their phone so that they can get from Point A to Point B on a moment’s notice.”\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eThe Product Value Pyramid\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"f19e\"\u003eDon’t feel limited to only one of these statements either. In my own work, some customers see us as an analytics product and others see us as a tech support product. The important thing is that \u003cstrong\u003ethey probably don’t see us as an AI product\u003c/strong\u003e even if AI-powered features help them analyze data or answer questions faster.\u003c/p\u003e\u003ch2 id=\"bd2a\"\u003eFeature Value Pyramids\u003c/h2\u003e\u003cp id=\"6d9e\"\u003eOnce you have established at least one value statement for the product you work on, you have a way to evaluate new features to ensure that they provide a value that aligns with the product values. The \u003cstrong\u003eFeature Value Pyramid\u003c/strong\u003e (FVP) is an inversion of the PVP — this time, the value is on top. Before you even define what any new feature is, you should have an idea of what customer value the feature will support, and then figure out what technology will get you there.\u003c/p\u003e\u003cp id=\"6986\"\u003eIn this case, you’ll build the value statement in the format “\u003cstrong\u003eThe customer can [BLANK] because we enable [BLANK] by leveraging [BLANK].\u003c/strong\u003e” This statement emphasizes that you need to understand \u003cem\u003ewhy\u003c/em\u003e you’re adding a new feature before you define \u003cem\u003ewhat\u003c/em\u003e the feature is or \u003cem\u003ehow\u003c/em\u003e you’ll achieve it.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eThe Feature Value Pyramid\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"0115\"\u003eIf you start to write out all of the values your product provides, and then write out all of the values the product’s features — current and future — using the same framework, you should be able to stack your pyramids in such a way that the features support the product’s purpose(s).\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eThe pyramids should be able to stack and align, with a “sweet spot” of value in the middle\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"e7a3\"\u003eWhen you place it all together, you’ll notice that the value of a feature ends where the value of the product begins. When you define your feature values in a way that supports the product values, you should see a close alignment across that middle section.\u003c/p\u003e\u003ch2 id=\"437d\"\u003eMeeting in the middle\u003c/h2\u003e\u003cp id=\"3d31\"\u003eWhen you place your value statements together and line them up in the middle, reading horizontally across that middle row should tell a consistent story. If you’re working on a product that already exists, it’s good to start by framing the current features in this format. \u003cstrong\u003eMake sure that all of your stakeholders can agree\u003c/strong\u003e on what the product is, what values it provides, and why the current features are there.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eWhen you isolate just the statements, you should see how they line up in the middle, where the values meet. You should also see how indirectly the technology actually impacts the purpose of the product.\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"ce74\"\u003eFrom there, you can then address your backlog of feature requests coming in. Before you accept them into your roadmap, make sure that you can write the user story in a way that maintains the consistency of these value statements. If you find yourself performing mental gymnastics to make it fit the narrative, that’s a good sign to dig in deeper and reframe what problem you’re attempting to solve. If you prioritize the features that fit best with your values, you can keep the Scope Creep at bay.\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"1c83\"\u003eWhen I didn’t have a framework for evaluating new feature requests, I felt like we were conflating the technology (Generative AI) with the purpose (meeting actual customer needs). You may look at these PVPs and FVPs and see this as the reinvention of conventional user stories, but my goal here was to detach the soul of the product as much as possible from the technology that was powering it — in this case by five degrees of separation. We haven’t yet seen the extent of GenAI technology or what it can do for us in the future, but \u003cstrong\u003ewe can’t build around a specific iteration of a tool\u003c/strong\u003e. It’s a lot like building a car: we might use the best engine available for this year’s model, but that’s not why we’re building it. We’re building it to \u003cstrong\u003e\u003cem\u003emove people forward\u003c/em\u003e\u003c/strong\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "11 min read",
  "publishedTime": "2024-10-31T11:24:03.807Z",
  "modifiedTime": null
}
