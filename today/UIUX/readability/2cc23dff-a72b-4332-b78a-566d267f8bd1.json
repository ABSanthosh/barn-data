{
  "id": "2cc23dff-a72b-4332-b78a-566d267f8bd1",
  "title": "Designing a scalable and accessible color system for your design system",
  "link": "https://uxdesign.cc/designing-a-scalable-and-accessible-color-system-for-your-design-system-f98207eda166?source=rss----138adf9c44c---4",
  "description": "",
  "author": "Obalanatosin",
  "published": "Sun, 23 Feb 2025 18:11:34 GMT",
  "source": "https://uxdesign.cc/feed",
  "categories": [
    "ux",
    "colors",
    "design-systems",
    "accessibility",
    "ui"
  ],
  "byline": "Obalanatosin",
  "length": 22562,
  "excerpt": "This guide outlines the process of building a structured color system using tokens, scales, and accessibility best practices. When I first started building a design system, I thought choosing colors‚Ä¶",
  "siteName": "UX Collective",
  "favicon": "https://miro.medium.com/v2/resize:fill:256:256/1*dn6MbbIIlwobt0jnUcrt_Q.png",
  "text": "This guide outlines the process of building a structured color system using tokens, scales, and accessibility best practices.A visual comparison of light and dark themes, highlighting the scalability of a well-defined color system.When I first started building a design system, I thought choosing colors would be the exciting part. But I quickly realized that color is more than just aesthetics, it‚Äôs the silent language of your UI, shaping user experience, branding, and accessibility. An intentionally designed color system brings consistency, making your design scalable and adaptable as it evolves. Without a clear framework, color usage can become chaotic, leading to usability and accessibility issues.In this guide, I‚Äôll walk you through my process of creating a scalable, accessible, and maintainable color system for your design system. You‚Äôll learn how to build logical color scales, implement semantic tokens, and ensure contrast compliance which are all essential steps to designing with clarity, inclusivity, and long-term success in mind.Why a structured color system mattersA well-structured color system is the backbone of any modern design system, ensuring that users experience a cohesive interface.An example of a structured color system that ensures consistency, scalability, and accessibility, illustrating the backbone of a cohesive user interface.ConsistencyJakob Nielsen‚Äôs fourth usability heuristic emphasizes that ‚Äòusers should not have to wonder whether different words, situations, or actions mean the same thing. Follow platform conventions‚Äô [1].This principle underscores the importance of consistency in design, ensuring that users can rely on familiar visual cues and interactions.A structured color system prevents design inconsistencies. Imagine visiting a website where buttons, headers, and backgrounds use slightly different shades of the same color; this lack of uniformity can lead to a disjointed experience.To address this, structured color systems use tokens, which are predefined color values assigned to specific design roles. Instead of selecting random shades, designers and developers use these tokens to ensure consistency across all UI elements.ScalabilityAs products evolve, new components and themes emerge, requiring color adaptations. A structured color system provides a foundation that scales effortlessly across different products, platforms, and design updates. It ensures that as the system grows, colors remain consistent and easy to manage.AccessibilityAccessibility is not just a best practice, it‚Äôs a responsibility. A structured color system ensures that designs are inclusive and usable for all users, regardless of their abilities. As the Web Content Accessibility Guidelines (WCAG) clearly outline, color should enhance usability, not create barriers [2]Building a color scaleA color scale isn‚Äôt just a palette, it‚Äôs an unspoken conversation between your interface and its users. When designed with intent, a color scale improves usability, strengthens brand identity, and improves accessibility.But when poorly structured, it does the opposite;it slows users down,erodes trust,and introduces friction in critical interactions [3].A structured color system eliminates these problems at the root. It ensures logical scaling, adapts seamlessly across themes, and upholds contrast standards to maintain visual clarity in every state.An example of a base color scale, showing the range of tints and shades that form the foundation of a design system.Building a scalable color system is more than just picking shades, it‚Äôs about creating a structured framework that ensures consistency across UI states, themes, and future iterations. A well-defined system makes interactions intuitive, enhances brand identity, and maintains accessibility standards.Defining your base colorsThe foundation of any color system starts with selecting core hues that align with both brand identity and functional needs:Primary \u0026 Secondary: These are the brand-defining colors that establish visual identity.Neutrals: Grayscale tones used for backgrounds, text, and dividers to maintain balance and readability.Functional Colors: Colors assigned to specific UI states: red for errors, green for success, and yellow for warnings.By establishing these base colors, you create a reliable framework that scales effortlessly while keeping the interface clear and cohesive.The foundation of a scalable color palette.Once your base colors are defined, the next step is to build a scalable color system. A well-structured scale includes multiple stops (typically 10‚Äì15), ranging from the lightest tint to the darkest shade. This ensures flexibility across different UI elements and accessibility standards.To create these shades efficiently, tools like Figma‚Äôs Tint \u0026 Shade plugin or Foundation can help generate a consistent and balanced color scale.Generating color scales with figma plugins.Once we‚Äôve built a solid color scale, everything falls into place, colors remain consistent across UI elements, accessibility is maintained, and design decisions become more intuitive.Defining the color token structureIn a design system, tokens are fundamental building blocks that store design decisions in a structured and reusable way. They act as variables that define core attributes like color, spacing, typography, and more, ensuring consistency across a product‚Äôs UI. As Nathan Curtis, a prominent figure in design systems, emphasizes,‚ÄúTokens are the nucleus of a design system.‚Äù [4].When working with colors, you need a well-organized approach to ensure that your design remains consistent, scalable, and easy to manage.This is where color tokens come in. Instead of hardcoding specific color values throughout the UI, color tokens allow you to define a centralized system that makes it easy to update themes, support accessibility, and maintain brand consistency. By defining a structured color token system, you create a foundation that makes your design more manageable, adaptable, and future-proof.The structured approach to color tokens, showcasing the progression from specific values to contextual usage.Primitive tokensPrimitive tokens are the building blocks of our color system. These are raw color values that define the base palette of the design system, they simply provide a organised and scalable foundation for all UI colors.An example of a primitive token, showing the direct mapping of a specific color value to a named token.By keeping primitive tokens separate from their actual usage, we ensure flexibility and consistency across all design elements. This makes it easy to adjust the visual identity without disrupting the entire UI. This principle aligns with the concept of separation of concerns, a design philosophy that advocates for dividing a system into distinct sections, each addressing a specific concern. This modularity enhances maintainability and evolution over time. [5]Naming conventionsA predictable naming convention is essential for an organized and scalable design system. Instead of using arbitrary names like ‚ÄúLight Blue‚Äù or ‚ÄúDark Gray,‚Äù we implemented a systematic approach that provides clarity and ease of use for designers and developers.As Brad Frost emphasizes in his work on Atomic Design, establishing a clear nomenclature is key for a maintainable design system.He further emphasizes the importance of establishing a language that aligns with how teams are already thinking, avoiding unnecessary complexity.[6]Our naming convention serves three key purposes:Clarity: Makes it easy to identify and reference colors.Scalability: Allows expansion without confusion or overlap.Consistency: Ensures a structured approach to defining colors across all themes and components.The primitive token naming follows this pattern:{Color Family} / {Weight}Color Family: Defines the base hue (e.g., Blue, Red, Orange, Yellow, Pink).Weight: Defines intensity, ranging from 100 (lightest) to 1100 (darkest).An example of a systematic naming approach for primitive tokens.This structured approach ensures predictability, allowing designers and developers to intuitively scale colors and understand their relationships without ambiguity. It moves away from subjective descriptions and towards a system grounded in logic and scalability.Organized into a structured 11-step scaleWe use an 11-step scale (100 ‚Äî 1100) to create smooth color variations and flexibility. Here‚Äôs how it works:üé® Light shades (100‚Äì300): Great for backgrounds and subtle design elements.üé® Mid-range shades (400 ‚Äî 700): Used for buttons, text, and other key UI elements.üé® Dark shades (800‚Äì1100): Best for high-contrast text and strong emphasis.This scale gives us enough variety to design with precision while keeping things simple and consistent across the system.Why We Chose 700 as the BaseWe needed a strong, recognizable core color that worked well across the UI. After testing different shades, 700 was the best choice because it:Improves readability: It meets the 4.5:1 contrast ratio recommended for accessibility, making text easier to read [7].Keeps things consistent: Works well across buttons, links, and other UI elements.Scales easily: Adapts well to both light and dark mode designs.An example of a color meeting the WCAG AA contrast requirements (4.5:1).By using 700 as our main reference point, we made sure the rest of our color system stays predictable and easy to use.Semantic tokensIn a scalable design system, raw color values alone aren‚Äôt enough to ensure consistency and flexibility across different UI components. Instead, we use semantic tokens which are color mappings that adapt dynamically based on context and function.As Contentful‚Äôs design token documentation explains, semantic tokens can refer to other tokens and encapsulate specific uses or guidelines, allowing designers and developers to define the role and proper application of design elements, leading to more maintainable and understandable designs [8].An example of semantic tokens mapping colors to specific usesThis abstraction allows colors to change based on themes, accessibility settings, or platform requirements while maintaining a consistent design language, because the semantic token remains the same, even if the underlying color value changes.The primitive and semantic relationshipThe relationship between primitive tokens and semantic tokens stems from their distinct roles in a design system. While primitive tokens define what colors are available, semantic tokens define how and why we use them.They are named values that derive their meaning from the context of their application, defining design attributes like ‚Äúprimary button background‚Äù or ‚Äúerror text color‚Äù in a way that is independent of any specific theme.This deliberate separation creates a symbiotic relationship: primitive tokens provide the foundational palette, while semantic tokens, built upon them, inject meaning, context, and adaptability into our color system, ensuring a UI that is both visually cohesive and semantically rich.Updating a primitive color value automatically adjusts the corresponding semantic color and all components using it.Developing a naming convention for semantic color tokensWith our foundational color scales and the concept of semantic tokens in place, the next critical step is defining a robust naming convention for these semantic tokens. I have already shown the naming structure in some of the images above, but I‚Äôd like to explain it in more detail.For this article I am following a systematic, hierarchical approach to naming our color tokens, I structured our naming convention using a three-tier hierarchy:{Category} / {Subcategory} / {State}Each tier serves a distinct purpose, creating a logical and scalable system that enhances usability across different UI components.Category ‚Äî What is the token used for?The Category defines the broad functional role of the token within the system. It helps group tokens based on their primary usage, making it easier to manage colors consistently across the interface.An example of semantic color categories, each defining a distinct functional role to ensure organized and consistent color application.Examples of categories:Below are the key Categories and their specific roles:Content: These colors are used for text. These tokens ensure readability, contrast, and a cohesive visual hierarchy.Surface: These tokens establish the foundation of an interface‚Äôs visual structure (like cards, buttons, or panels). They set the basic look and feel of each component.Border: These are the colors for outlines, dividers, and separators. They help organize the layout, giving structure and clarity to the design.Background: While Surface colors work for individual components, Background colors cover the overall page or app. They set the overall tone and contrast for the entire design.Overlay: These colors are used in elements that appear on top of other content, such as modals, tooltips, or notifications. They often use transparency so the underlying design remains visible.Icon: These colors are dedicated to icons. They ensure that icons are consistent and clear, and they usually match with content or action-based color tokens.Chart: These colors are meant for data visualizations. They must be distinct and accessible, so users can easily differentiate between data points and understand the charts.Indicators: These colors signal statuses, priorities, or contextual cues. They‚Äôre used in tags, search highlights, notifications, and similar elements to quickly show if something is active, pending, in error, or requires attention ‚Äî adding extra meaning without overlapping the roles of the other color categories.Subcategory ‚Äî What specific role does it play?The Subcategory further refines the purpose of the token, adding context to its function. This level ensures that colors are applied meaningfully, reducing ambiguity and enhancing accessibility.Examples of subcategoriesAn example of semantic color subcategories, each adding specific context and reducing ambiguity in color usage.Each subcategory refines the purpose of a token, ensuring clarity in visual communication while maintaining a strong hierarchy.Brand colors reinforce brand identity. These are instantly recognizable and strategically used across the UI. They appear in primary brand accents, call-to-action buttons, and elements that strongly represent the product‚Äôs visual identity.Informative colors help convey important but non-critical information. The blue spectrum, which is widely used for general informative purposes, is a neutral and calming color that effectively conveys information that isn‚Äôt necessarily positive, negative, or a warning.Positive colors signal successful actions, confirmations, and approvals. Usually in the green spectrum, they provide reassuring feedback. They appear in success messages, confirmation dialogs, checkmarks, and status updates for completed actions.Warning colors draw attention to cautionary situations. Typically yellow or amber, they highlight potential issues that need review but are not critical. They are used in warning messages, non-critical alerts, and prompts to double-check form inputs before submission.Negative colors indicate errors, failures, and critical issues. Usually in the red spectrum, they demand immediate attention. They are used in error messagesState ‚Äî How does the token behave?The State defines how a color is applied in different interaction scenarios. UI components often change based on user actions, and this tier ensures consistency in visual feedback across states.An example of semantic token states, each serving a specific role in the design system‚Äôs interaction.Examples of states:Normal: The default state of the color.Subtle: A softer variation, used for less prominent elements.Hover: Applied when an element is hovered over.Active: Used when an element is clicked or engaged.Focus: Ensures accessibility by highlighting focused elements.Selected: Indicates that an item is chosen or highlighted.Disabled: A lower-contrast version, signaling inactivity.By defining interaction states, we ensure that users receive consistent and predictable feedback, improving the overall user experience.Reference guide showcasing the semantic names of surface color tokens and their corresponding usage descriptions.Using the naming convention in an exampleDesign of a community post card using naming convention tokens.Here‚Äôs an example of how the naming convention is applied in a card. These categories help maintain a clear visual hierarchy, facilitating a more intuitive user experience.Themes for light and dark modeThe design system leverages dynamic theming through semantic tokens to ensure that UI components, such as cards, adapt seamlessly between light and dark modes. In light mode, cards use a light, neutral background with dark text and subtle borders to maximize readability and maintain a clean aesthetic. In dark mode, these components shift to a darker background with lighter text and appropriately adjusted borders to ensure high contrast and reduced eye strain. This approach not only reinforces brand consistency and scalability but also meets accessibility standards, providing a cohesive and user-friendly experience across different themes.An example of a card component in both light and dark modes, showing the adaptability of a well-structured design system.Meeting WCAG standards, contrast ratios, and testing methodsDuring the design of color tokens, accessibility was the top priority. It was ensured that the system not only looks great but also works well for everyone, including those with visual impairments or color blindness.Here‚Äôs how we achieved this:WCAG alignment: We structured our color system to meet the Web Content Accessibility Guidelines (WCAG), ensuring that every text-to-background pairing provides enough contrast for readability.Optimized contrast ratios: Every color combination was fine-tuned to meet the AA standard for contrast. This helps users with low vision and other impairments easily read and navigate our interface.Testing \u0026 Validation:We confirmed that all our text and background combinations met the required contrast standards using the ‚ÄúUse Contrast‚Äù plugin for Figma. This tool provided quick access to WCAG color contrast ratios, ensuring that our color selections are easily readable for individuals with visual impairments.By integrating these methods, we ensure that our color tokens provide a consistent, accessible experience across all scenarios.In conclusion, building a scalable and accessible color system is not merely a technical exercise, it‚Äôs an act of empathy. A well-structured color system is essential for creating a design system that is both inclusive and maintainable. By implementing a logical color scale, defining clear naming conventions, and utilizing both primitive and semantic tokens, teams can ensure consistency across products while accommodating diverse user needs. When you prioritize elements like contrast ratios and readability, you empower every user, regardless of visual ability, to experience clarity and ease. Ultimately, a well-designed color system works behind the scenes to instill trust and confidence in your product. This unspoken assurance, born from an inclusive and thoughtfully constructed color palette, is your ultimate reward.References[1] M. Vela, ‚ÄúJakob Nielsen‚Äôs fourth usability heuristic for user interface design,‚Äù UX Collective, Jul. 04, 2020. Accessed: Feb. 23, 2025. [Online]. Available: https://uxdesign.cc/jakob-nielsens-fourth-usability-heuristic-for-user-interface-design-7a25960037d1[2] ‚ÄúUnderstanding Success Criterion 1.4.1: Use of Color,‚Äù W3C. Accessed: Feb. 23, 2025. [Online]. Available: https://www.w3.org/WAI/WCAG22/Understanding/use-of-color?[3] ‚ÄúFlyriver: The Overuse Of Colors In Modern Design,‚Äù Flyriver.com. Accessed: Feb. 23, 2025. [Online]. Available: https://www.flyriver.com/l/overuse-of-colors?[4] ‚ÄúNaming Tokens in Design Systems. Terms, Types, and Taxonomy to Describe‚Ä¶,‚Äù EightShapes. Accessed: Feb. 23, 2025. [Online]. Available: https://blog.bakarema.com/2022/10/05/naming-tokens-in-design-systems-terms-types-and-taxonomy-to-describe-by-nathan-curtis-eightshapes/[5] Contributors to Wikimedia projects, ‚ÄúSeparation of concerns,‚Äù Wikipedia. Accessed: Feb. 23, 2025. [Online]. Available: https://en.wikipedia.org/wiki/Separation_of_concerns?[6] B. Frost, ‚ÄúAtomic Design Methodology,‚Äù Atomic Design by Brad Frost. Accessed: Feb. 23, 2025. [Online]. Available: https://atomicdesign.bradfrost.com/chapter-2[7] Jamie, ‚ÄúDesigning for Color Contrast: Guidelines for Accessibility,‚Äù AudioEye. Accessed: Feb. 23, 2025. [Online]. Available: https://www.boia.org/blog/designing-for-color-contrast-guidelines-for-accessibility?[8] S. Rouse, ‚ÄúDesign tokens explained (and how to build a design token system),‚Äù Contentful, GmbH. Accessed: Feb. 23, 2025. [Online]. Available: https://www.contentful.com/blog/design-token-system/?GlossaryAccessibility: Designing products so that people with disabilities can use them; in color systems, ensuring color choices don‚Äôt create barriers.Color Scale: A range of shades and tints, typically numbered (e.g., 100‚Äì1100), to maintain consistent color variations.Color System: A collection of color values, tokens, and scales that create visual consistency in a UI.Design System: A framework of reusable components, guidelines, and tokens that ensures consistent design across a product.Naming Convention: A systematic method for labeling color tokens to ensure clarity and consistency.Primitive Tokens: The basic color values that form the foundation of a design system.Scalability: The ability of a design system to grow and adapt without losing consistency.Shade: A color variant produced by adding black to a base color.Semantic Tokens: Color mappings that assign meaning to UI elements by building on primitive tokens.State: A variant of a color token that reflects a specific interaction or condition (e.g., hover, active).Theming: Changing the visual appearance of a UI by applying different sets of color tokens.Tint: A color variant produced by adding white to a base color.Token: A reusable variable that stores a design decisionToken Management: The process of organizing, maintaining, and updating design tokens.WCAG (Web Content Accessibility Guidelines): Standards that ensure web content is accessible to people with disabilities.Weight: A numeric value assigned to a color that indicates its intensity.",
  "image": "https://miro.medium.com/v2/resize:fit:1200/1*2DG_BTc7AOrSgpmNs3rkNw.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003carticle\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://medium.com/@obalanatosin16?source=post_page---byline--f98207eda166---------------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Obalanatosin\" src=\"https://miro.medium.com/v2/da:true/resize:fill:88:88/0*qkCq4h--MVnRmspV\" width=\"44\" height=\"44\" loading=\"lazy\" data-testid=\"authorPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://uxdesign.cc/?source=post_page---byline--f98207eda166---------------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"UX Collective\" src=\"https://miro.medium.com/v2/resize:fill:48:48/1*mDhF9X4VO0rCrJvWFatyxg.png\" width=\"24\" height=\"24\" loading=\"lazy\" data-testid=\"publicationPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/div\u003e\u003cp id=\"2a1b\"\u003eThis guide outlines the process of building a structured color system using tokens, scales, and accessibility best practices.\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfigure\u003e\u003cfigcaption\u003eA visual comparison of light and dark themes, highlighting the scalability of a well-defined color system.\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"5175\"\u003eWhen I first started building a design system, I thought choosing colors would be the exciting part. But I quickly realized that color is more than just aesthetics, it‚Äôs the silent language of your UI, shaping user experience, branding, and accessibility. An \u003cstrong\u003eintentionally designed\u003c/strong\u003e color system brings consistency, making your design scalable and adaptable as it evolves. Without a clear framework, color usage can become chaotic, leading to usability and accessibility issues.\u003c/p\u003e\u003cp id=\"53c2\"\u003eIn this guide, I‚Äôll walk you through my process of creating a scalable, accessible, and maintainable color system for your \u003cstrong\u003edesign system\u003c/strong\u003e. You‚Äôll learn how to build logical color scales, implement semantic tokens, and ensure contrast compliance which are all essential steps to designing with clarity, inclusivity, and long-term success in mind.\u003c/p\u003e\u003ch2 id=\"0d1e\"\u003e\u003cstrong\u003eWhy a structured color system matters\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"cfcf\"\u003eA well-structured color system is the backbone of any modern design system, ensuring that users experience a cohesive interface.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eAn example of a structured color system that ensures consistency, scalability, and accessibility, illustrating the backbone of a cohesive user interface.\u003c/figcaption\u003e\u003c/figure\u003e\u003ch2 id=\"0f92\"\u003e\u003cstrong\u003eConsistency\u003c/strong\u003e\u003c/h2\u003e\u003cblockquote\u003e\u003cp id=\"893f\"\u003eJakob Nielsen‚Äôs fourth usability heuristic emphasizes that ‚Äòusers should not have to wonder whether different words, situations, or actions mean the same thing. Follow platform conventions‚Äô [1].\u003c/p\u003e\u003c/blockquote\u003e\u003cp id=\"c2fe\"\u003eThis principle underscores the importance of consistency in design, ensuring that users can rely on familiar visual cues and interactions.\u003c/p\u003e\u003cp id=\"8306\"\u003eA structured color system prevents design inconsistencies. Imagine visiting a website where buttons, headers, and backgrounds use slightly different shades of the same color; this lack of uniformity can lead to a disjointed experience.\u003c/p\u003e\u003cp id=\"381d\"\u003eTo address this, structured color systems use \u003cstrong\u003e\u003cem\u003etokens, which are predefined color values assigned to specific design roles.\u003c/em\u003e\u003c/strong\u003e Instead of selecting random shades, designers and developers use these tokens to ensure consistency across all UI elements.\u003c/p\u003e\u003ch2 id=\"1cc3\"\u003e\u003cstrong\u003eScalability\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"1a53\"\u003eAs products evolve, new components and themes emerge, requiring color adaptations. A structured color system provides a foundation that scales effortlessly across different products, platforms, and design updates. It ensures that as the system grows, colors remain consistent and easy to manage.\u003c/p\u003e\u003ch2 id=\"99a4\"\u003e\u003cstrong\u003eAccessibility\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"3906\"\u003eAccessibility is not just a best practice, it‚Äôs a responsibility. A structured color system ensures that designs are inclusive and usable for all users, regardless of their abilities. As the Web Content Accessibility Guidelines (WCAG) clearly outline, \u003cstrong\u003ecolor should enhance usability, not create barriers [2]\u003c/strong\u003e\u003c/p\u003e\u003ch2 id=\"f654\"\u003eBuilding a color scale\u003c/h2\u003e\u003cp id=\"9b86\"\u003eA color scale isn‚Äôt just a palette, it‚Äôs an unspoken conversation between your interface and its users. When designed with intent, a color scale improves usability, strengthens brand identity, and improves accessibility.\u003c/p\u003e\u003cp id=\"2085\"\u003eBut when poorly structured, it does the opposite;\u003c/p\u003e\u003cul\u003e\u003cli id=\"fa81\"\u003eit slows users down,\u003c/li\u003e\u003cli id=\"268c\"\u003eerodes trust,\u003c/li\u003e\u003cli id=\"782a\"\u003eand introduces friction in critical interactions [3].\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"f715\"\u003eA structured color system eliminates these problems at the root. It ensures logical scaling, adapts seamlessly across themes, and upholds contrast standards to maintain visual clarity in every state.\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfigure\u003e\u003cfigcaption\u003eAn example of a base color scale, showing the range of tints and shades that form the foundation of a design system.\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003cdiv\u003e\u003cblockquote\u003e\u003cp id=\"c124\"\u003eBuilding a scalable color system is more than just picking shades, it‚Äôs about creating a structured framework that ensures consistency across UI states, themes, and future iterations. A well-defined system makes interactions intuitive, enhances brand identity, and maintains accessibility standards.\u003c/p\u003e\u003c/blockquote\u003e\u003ch2 id=\"f958\"\u003eDefining your base colors\u003c/h2\u003e\u003cp id=\"2351\"\u003eThe foundation of any color system starts with selecting core hues that align with both brand identity and functional needs:\u003c/p\u003e\u003cul\u003e\u003cli id=\"c359\"\u003e\u003cstrong\u003ePrimary \u0026amp; Secondary: \u003c/strong\u003eThese are the brand-defining colors that establish visual identity.\u003c/li\u003e\u003cli id=\"69e1\"\u003e\u003cstrong\u003eNeutrals: \u003c/strong\u003eGrayscale tones used for backgrounds, text, and dividers to maintain balance and readability.\u003c/li\u003e\u003cli id=\"c88a\"\u003e\u003cstrong\u003eFunctional Colors: \u003c/strong\u003eColors assigned to specific UI states: red for errors, green for success, and yellow for warnings.\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"b58b\"\u003eBy establishing these base colors, you create a reliable framework that scales effortlessly while keeping the interface clear and cohesive.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eThe foundation of a scalable color palette.\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"7eab\"\u003eOnce your base colors are defined, the next step is to \u003cstrong\u003ebuild a scalable color system\u003c/strong\u003e. A well-structured scale includes multiple stops (typically 10‚Äì15), ranging from the lightest tint to the darkest shade. This ensures flexibility across different UI elements and accessibility standards.\u003c/p\u003e\u003cp id=\"ede8\"\u003eTo create these shades efficiently, tools like \u003cstrong\u003eFigma‚Äôs Tint \u0026amp; Shade plugin or Foundation \u003c/strong\u003ecan help generate a consistent and balanced color scale.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eGenerating color scales with figma plugins.\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"0422\"\u003eOnce we‚Äôve built a solid color scale, everything falls into place, colors remain consistent across UI elements, accessibility is maintained, and design decisions become more intuitive.\u003c/p\u003e\u003ch2 id=\"90ad\"\u003eDefining the color token structure\u003c/h2\u003e\u003cp id=\"fb3e\"\u003eIn a design system, \u003cstrong\u003etokens are fundamental building blocks that store design decisions in a structured and reusable way. \u003c/strong\u003eThey act as \u003cstrong\u003e\u003cem\u003evariables\u003c/em\u003e\u003c/strong\u003e that define core attributes like color, spacing, typography, and more, ensuring consistency across a product‚Äôs UI. As Nathan Curtis, a prominent figure in design systems, emphasizes,\u003c/p\u003e\u003cblockquote\u003e\u003cp id=\"e676\"\u003e‚ÄúTokens are the nucleus of a design system.‚Äù [4].\u003c/p\u003e\u003c/blockquote\u003e\u003cp id=\"72de\"\u003eWhen working with colors, you need a well-organized approach to ensure that your design remains \u003cstrong\u003econsistent, scalable, \u003c/strong\u003eand\u003cstrong\u003e easy to manage\u003c/strong\u003e.\u003c/p\u003e\u003cp id=\"6b62\"\u003eThis is where \u003cstrong\u003ecolor tokens\u003c/strong\u003e come in. Instead of hardcoding specific color values throughout the UI, color tokens allow you to define a centralized system that makes it easy to update themes, support accessibility, and maintain brand consistency. By defining a structured \u003cstrong\u003ecolor token system\u003c/strong\u003e, you create a foundation that makes your design more \u003cstrong\u003emanageable, adaptable, and future-proof\u003c/strong\u003e.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eThe structured approach to color tokens, showcasing the progression from specific values to contextual usage.\u003c/figcaption\u003e\u003c/figure\u003e\u003ch2 id=\"dd09\"\u003ePrimitive tokens\u003c/h2\u003e\u003cp id=\"0a74\"\u003ePrimitive tokens are the \u003cstrong\u003ebuilding blocks\u003c/strong\u003e of our color system. These are \u003cstrong\u003eraw color values\u003c/strong\u003e that define the base palette of the design system, they simply provide a organised and scalable foundation for all UI colors.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eAn example of a primitive token, showing the direct mapping of a specific color value to a named token.\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"1321\"\u003eBy keeping primitive tokens separate from their \u003cstrong\u003eactual usage\u003c/strong\u003e, we ensure \u003cstrong\u003eflexibility and consistency\u003c/strong\u003e across all design elements. This makes it easy to adjust the visual identity without disrupting the entire UI. This principle aligns with the concept of separation of concerns, a design philosophy that advocates for dividing a system into distinct sections, each addressing a specific concern. This modularity enhances maintainability and evolution over time. [5]\u003c/p\u003e\u003cp id=\"30c2\"\u003e\u003cstrong\u003eNaming conventions\u003c/strong\u003e\u003c/p\u003e\u003cp id=\"0f72\"\u003eA \u003cstrong\u003epredictable naming convention\u003c/strong\u003e is essential for an \u003cstrong\u003eorganized and scalable\u003c/strong\u003e design system. Instead of using arbitrary names like ‚ÄúLight Blue‚Äù or ‚ÄúDark Gray,‚Äù we implemented a \u003cstrong\u003esystematic approach\u003c/strong\u003e that provides clarity and ease of use for designers and developers.\u003c/p\u003e\u003cblockquote\u003e\u003cp id=\"d782\"\u003eAs Brad Frost emphasizes in his work on Atomic Design, establishing a clear nomenclature is key for a maintainable design system.\u003c/p\u003e\u003c/blockquote\u003e\u003cp id=\"4de5\"\u003eHe further emphasizes the importance of establishing a language that aligns with how teams are already thinking, avoiding unnecessary complexity.[6]\u003c/p\u003e\u003cp id=\"e6e3\"\u003eOur naming convention serves three key purposes:\u003c/p\u003e\u003col\u003e\u003cli id=\"a408\"\u003e\u003cstrong\u003eClarity: \u003c/strong\u003eMakes it easy to identify and reference colors.\u003c/li\u003e\u003cli id=\"293b\"\u003e\u003cstrong\u003eScalability: \u003c/strong\u003eAllows expansion without confusion or overlap.\u003c/li\u003e\u003cli id=\"8fc7\"\u003e\u003cstrong\u003eConsistency: \u003c/strong\u003eEnsures a structured approach to defining colors across all themes and components.\u003c/li\u003e\u003c/ol\u003e\u003cp id=\"2a7a\"\u003eThe primitive token naming follows this pattern:\u003c/p\u003e\u003ch2 id=\"2216\"\u003e\u003cstrong\u003e{Color Family} / {Weight}\u003c/strong\u003e\u003c/h2\u003e\u003cul\u003e\u003cli id=\"d234\"\u003e\u003cstrong\u003eColor Family\u003c/strong\u003e: Defines the base hue (e.g., \u003cstrong\u003eBlue, Red, Orange, Yellow, Pink\u003c/strong\u003e).\u003c/li\u003e\u003cli id=\"6462\"\u003e\u003cstrong\u003eWeight\u003c/strong\u003e: Defines intensity, ranging from \u003cstrong\u003e100 (lightest) to 1100 (darkest)\u003c/strong\u003e.\u003c/li\u003e\u003c/ul\u003e\u003cfigure\u003e\u003cfigcaption\u003eAn example of a systematic naming approach for primitive tokens.\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"a818\"\u003eThis structured approach ensures predictability, allowing designers and developers to intuitively scale colors and understand their relationships without ambiguity. It moves away from subjective descriptions and towards a system grounded in logic and scalability.\u003c/p\u003e\u003ch2 id=\"a76c\"\u003eOrganized into a structured 11-step scale\u003c/h2\u003e\u003cp id=\"bc9b\"\u003eWe use an \u003cstrong\u003e11-step scale (100 ‚Äî 1100)\u003c/strong\u003e to create smooth color variations and flexibility. Here‚Äôs how it works:\u003cbr/\u003eüé® \u003cstrong\u003eLight shades (100‚Äì300): \u003c/strong\u003eGreat for backgrounds and subtle design elements.\u003cbr/\u003eüé® \u003cstrong\u003eMid-range shades (400 ‚Äî 700): \u003c/strong\u003eUsed for buttons, text, and other key UI elements.\u003cbr/\u003eüé® \u003cstrong\u003eDark shades (800‚Äì1100): \u003c/strong\u003eBest for high-contrast text and strong emphasis.\u003c/p\u003e\u003cp id=\"bfbf\"\u003eThis scale gives us enough variety to design with \u003cstrong\u003eprecision\u003c/strong\u003e while keeping things \u003cstrong\u003esimple and consistent\u003c/strong\u003e across the system.\u003c/p\u003e\u003cp id=\"d0f5\"\u003e\u003cstrong\u003eWhy We Chose 700 as the Base\u003c/strong\u003e\u003c/p\u003e\u003cp id=\"bedd\"\u003eWe needed a strong, recognizable core color that worked well across the UI. After testing different shades, \u003cstrong\u003e700\u003c/strong\u003e was the best choice because it:\u003c/p\u003e\u003cul\u003e\u003cli id=\"d8e8\"\u003e\u003cstrong\u003eImproves readability: \u003c/strong\u003eIt meets the \u003cstrong\u003e4.5:1 contrast ratio\u003c/strong\u003e recommended for accessibility, making text easier to read [7].\u003c/li\u003e\u003cli id=\"0d36\"\u003e\u003cstrong\u003eKeeps things consistent: \u003c/strong\u003eWorks well across buttons, links, and other UI elements.\u003c/li\u003e\u003cli id=\"d311\"\u003e\u003cstrong\u003eScales easily: \u003c/strong\u003eAdapts well to both \u003cstrong\u003elight and dark mode\u003c/strong\u003e designs.\u003c/li\u003e\u003c/ul\u003e\u003cfigure\u003e\u003cfigcaption\u003eAn example of a color meeting the WCAG AA contrast requirements (4.5:1).\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"d08e\"\u003eBy using \u003cstrong\u003e700\u003c/strong\u003e as our main reference point, we made sure the rest of our color system stays \u003cstrong\u003epredictable and easy to use\u003c/strong\u003e.\u003c/p\u003e\u003ch2 id=\"d32f\"\u003eSemantic tokens\u003c/h2\u003e\u003cp id=\"a58b\"\u003eIn a scalable design system, raw color values alone aren‚Äôt enough to ensure consistency and flexibility across different UI components. Instead, we use semantic tokens which are \u003cstrong\u003e\u003cem\u003ecolor mappings that adapt dynamically based on context and function.\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\u003cblockquote\u003e\u003cp id=\"9f68\"\u003eAs Contentful‚Äôs design token documentation explains, semantic tokens can refer to other tokens and encapsulate specific uses or guidelines, allowing designers and developers to define the role and proper application of design elements, leading to more maintainable and understandable designs [8].\u003c/p\u003e\u003c/blockquote\u003e\u003cfigure\u003e\u003cfigcaption\u003eAn example of semantic tokens mapping colors to specific uses\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"d4da\"\u003eThis abstraction allows colors to change based on themes, accessibility settings, or platform requirements while maintaining a consistent design language, because the semantic token remains the same, even if the underlying color value changes.\u003c/p\u003e\u003cp id=\"4ee5\"\u003e\u003cstrong\u003eThe primitive and semantic relationship\u003c/strong\u003e\u003c/p\u003e\u003cp id=\"8c49\"\u003eThe relationship between primitive tokens and semantic tokens stems from their distinct roles in a design system. \u003cstrong\u003e\u003cem\u003eWhile primitive tokens define what colors are available, semantic tokens define how and why we use them.\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\u003cp id=\"9b05\"\u003eThey are named values that derive their meaning from the context of their application, defining design attributes like ‚Äúprimary button background‚Äù or ‚Äúerror text color‚Äù in a way that is independent of any specific theme.\u003c/p\u003e\u003cp id=\"a0ca\"\u003eThis deliberate separation creates \u003cstrong\u003e\u003cem\u003ea symbiotic relationship: primitive tokens provide the foundational palette, while semantic tokens, built upon them, inject meaning, context, and adaptability into our color system\u003c/em\u003e\u003c/strong\u003e, ensuring a UI that is both visually cohesive and semantically rich.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eUpdating a primitive color value automatically adjusts the corresponding semantic color and all components using it.\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"e93b\"\u003e\u003cstrong\u003eDeveloping a naming convention for semantic color tokens\u003c/strong\u003e\u003c/p\u003e\u003cp id=\"003e\"\u003eWith our foundational color scales and the concept of semantic tokens in place, the next critical step is defining a robust naming convention for these semantic tokens. I have already shown the naming structure in some of the images above, but I‚Äôd like to explain it in more detail.\u003c/p\u003e\u003cp id=\"b4bf\"\u003eFor this article I am following a \u003cstrong\u003esystematic, hierarchical approach\u003c/strong\u003e to naming our color tokens, I structured our naming convention using a \u003cstrong\u003ethree-tier hierarchy:\u003c/strong\u003e\u003c/p\u003e\u003ch2 id=\"948e\"\u003e\u003cstrong\u003e{Category} / {Subcategory} / {State}\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"f5fd\"\u003eEach tier serves a distinct purpose, creating a logical and scalable system that enhances usability across different UI components.\u003c/p\u003e\u003cp id=\"5e72\"\u003e\u003cstrong\u003eCategory ‚Äî What is the token used for?\u003c/strong\u003e\u003c/p\u003e\u003cp id=\"ca4d\"\u003eThe \u003cstrong\u003eCategory\u003c/strong\u003e defines the broad functional role of the token within the system. It helps group tokens based on their primary usage, making it easier to manage colors consistently across the interface.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eAn example of semantic color categories, each defining a distinct functional role to ensure organized and consistent color application.\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"93ab\"\u003e\u003cstrong\u003eExamples of categories:\u003c/strong\u003e\u003c/p\u003e\u003cp id=\"a530\"\u003eBelow are the key Categories and their specific roles:\u003c/p\u003e\u003cul\u003e\u003cli id=\"b5bc\"\u003e\u003cstrong\u003eContent: \u003c/strong\u003eThese colors are used for text. These tokens ensure readability, contrast, and a cohesive visual hierarchy.\u003c/li\u003e\u003cli id=\"7436\"\u003e\u003cstrong\u003eSurface: \u003c/strong\u003eThese tokens establish the foundation of an interface‚Äôs visual structure (like cards, buttons, or panels). They set the basic look and feel of each component.\u003c/li\u003e\u003cli id=\"79ec\"\u003e\u003cstrong\u003eBorder: \u003c/strong\u003eThese are the colors for outlines, dividers, and separators. They help organize the layout, giving structure and clarity to the design.\u003c/li\u003e\u003cli id=\"6ed6\"\u003e\u003cstrong\u003eBackground: \u003c/strong\u003eWhile Surface colors work for individual components, Background colors cover the overall page or app. They set the overall tone and contrast for the entire design.\u003c/li\u003e\u003cli id=\"2dce\"\u003e\u003cstrong\u003eOverlay: \u003c/strong\u003eThese colors are used in elements that appear on top of other content, such as modals, tooltips, or notifications. They often use transparency so the underlying design remains visible.\u003c/li\u003e\u003cli id=\"da56\"\u003e\u003cstrong\u003eIcon: \u003c/strong\u003eThese colors are dedicated to icons. They ensure that icons are consistent and clear, and they usually match with content or action-based color tokens.\u003c/li\u003e\u003cli id=\"429b\"\u003e\u003cstrong\u003eChart: \u003c/strong\u003eThese colors are meant for data visualizations. They must be distinct and accessible, so users can easily differentiate between data points and understand the charts.\u003c/li\u003e\u003cli id=\"0e34\"\u003e\u003cstrong\u003eIndicators: \u003c/strong\u003eThese colors signal statuses, priorities, or contextual cues. They‚Äôre used in tags, search highlights, notifications, and similar elements to quickly show if something is active, pending, in error, or requires attention ‚Äî adding extra meaning without overlapping the roles of the other color categories.\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"9bed\"\u003eSubcategory ‚Äî What specific role does it play?\u003c/h2\u003e\u003cp id=\"f40a\"\u003eThe \u003cstrong\u003eSubcategory\u003c/strong\u003e further refines the purpose of the token, adding context to its function. This level ensures that colors are applied meaningfully, reducing ambiguity and enhancing accessibility.\u003c/p\u003e\u003cp id=\"dfe7\"\u003e\u003cstrong\u003eExamples of subcategories\u003c/strong\u003e\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eAn example of semantic color subcategories, each adding specific context and reducing ambiguity in color usage.\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"cdc8\"\u003eEach subcategory refines the purpose of a token, ensuring clarity in visual communication while maintaining a strong hierarchy.\u003c/p\u003e\u003cul\u003e\u003cli id=\"c8b1\"\u003e\u003cstrong\u003eBrand colors\u003c/strong\u003e reinforce brand identity. These are instantly recognizable and strategically used across the UI. They appear in primary brand accents, call-to-action buttons, and elements that strongly represent the product‚Äôs visual identity.\u003c/li\u003e\u003cli id=\"db2c\"\u003e\u003cstrong\u003eInformative colors\u003c/strong\u003e help convey important but non-critical information. The blue spectrum, which is widely used for general informative purposes, \u003cstrong\u003eis\u003c/strong\u003e a neutral and calming color that effectively conveys information that isn‚Äôt necessarily positive, negative, or a warning.\u003c/li\u003e\u003cli id=\"ae20\"\u003e\u003cstrong\u003ePositive colors\u003c/strong\u003e signal successful actions, confirmations, and approvals. Usually in the green spectrum, they provide reassuring feedback. They appear in success messages, confirmation dialogs, checkmarks, and status updates for completed actions.\u003c/li\u003e\u003cli id=\"fa3a\"\u003e\u003cstrong\u003eWarning colors\u003c/strong\u003e draw attention to cautionary situations. Typically yellow or amber, they highlight potential issues that need review but are not critical. They are used in warning messages, non-critical alerts, and prompts to double-check form inputs before submission.\u003c/li\u003e\u003cli id=\"f95c\"\u003e\u003cstrong\u003eNegative colors\u003c/strong\u003e indicate errors, failures, and critical issues. Usually in the red spectrum, they demand immediate attention. They are used in error messages\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"25d3\"\u003eState ‚Äî How does the token behave?\u003c/h2\u003e\u003cp id=\"24f6\"\u003eThe \u003cstrong\u003eState\u003c/strong\u003e defines how a color is applied in different interaction scenarios. UI components often change based on user actions, and this tier ensures consistency in visual feedback across states.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eAn example of semantic token states, each serving a specific role in the design system‚Äôs interaction.\u003c/figcaption\u003e\u003c/figure\u003e\u003ch2 id=\"e3d3\"\u003eExamples of states:\u003c/h2\u003e\u003cul\u003e\u003cli id=\"bec6\"\u003e\u003cstrong\u003eNormal: \u003c/strong\u003eThe default state of the color.\u003c/li\u003e\u003cli id=\"c62e\"\u003e\u003cstrong\u003eSubtle: \u003c/strong\u003eA softer variation, used for less prominent elements.\u003c/li\u003e\u003cli id=\"e051\"\u003e\u003cstrong\u003eHover: \u003c/strong\u003eApplied when an element is hovered over.\u003c/li\u003e\u003cli id=\"7c67\"\u003e\u003cstrong\u003eActive: \u003c/strong\u003eUsed when an element is clicked or engaged.\u003c/li\u003e\u003cli id=\"8866\"\u003e\u003cstrong\u003eFocus: \u003c/strong\u003eEnsures accessibility by highlighting focused elements.\u003c/li\u003e\u003cli id=\"26ae\"\u003e\u003cstrong\u003eSelected: \u003c/strong\u003eIndicates that an item is chosen or highlighted.\u003c/li\u003e\u003cli id=\"56da\"\u003e\u003cstrong\u003eDisabled: \u003c/strong\u003eA lower-contrast version, signaling inactivity.\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"6f52\"\u003eBy defining interaction states, we ensure that users receive consistent and predictable feedback, improving the overall user experience.\u003c/p\u003e\u003c/div\u003e\u003cp\u003e\u003cfigure\u003e\u003cpicture\u003e\u003csource srcset=\"https://miro.medium.com/v2/resize:fit:640/format:webp/1*d5o2zbw8Kqa-tbmnePZpYA.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*d5o2zbw8Kqa-tbmnePZpYA.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*d5o2zbw8Kqa-tbmnePZpYA.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*d5o2zbw8Kqa-tbmnePZpYA.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*d5o2zbw8Kqa-tbmnePZpYA.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*d5o2zbw8Kqa-tbmnePZpYA.png 1100w, https://miro.medium.com/v2/resize:fit:4800/format:webp/1*d5o2zbw8Kqa-tbmnePZpYA.png 4800w\" sizes=\"(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 100vw\" type=\"image/webp\"/\u003e\u003csource data-testid=\"og\" srcset=\"https://miro.medium.com/v2/resize:fit:640/1*d5o2zbw8Kqa-tbmnePZpYA.png 640w, https://miro.medium.com/v2/resize:fit:720/1*d5o2zbw8Kqa-tbmnePZpYA.png 720w, https://miro.medium.com/v2/resize:fit:750/1*d5o2zbw8Kqa-tbmnePZpYA.png 750w, https://miro.medium.com/v2/resize:fit:786/1*d5o2zbw8Kqa-tbmnePZpYA.png 786w, https://miro.medium.com/v2/resize:fit:828/1*d5o2zbw8Kqa-tbmnePZpYA.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*d5o2zbw8Kqa-tbmnePZpYA.png 1100w, https://miro.medium.com/v2/resize:fit:4800/1*d5o2zbw8Kqa-tbmnePZpYA.png 4800w\" sizes=\"(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 100vw\"/\u003e\u003c/picture\u003e\u003cfigcaption\u003eReference guide showcasing the semantic names of surface color tokens and their corresponding usage descriptions.\u003c/figcaption\u003e\u003c/figure\u003e\u003c/p\u003e\u003cdiv\u003e\u003cp\u003e\u003ch2 id=\"e97f\"\u003eUsing the naming convention in an example\u003c/h2\u003e\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfigure\u003e\u003cfigcaption\u003eDesign of a community post card using naming convention tokens.\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"96de\"\u003eHere‚Äôs an example of how the naming convention is applied in a card. These categories help maintain a clear visual hierarchy, facilitating a more intuitive user experience.\u003c/p\u003e\u003ch2 id=\"0660\"\u003e\u003cstrong\u003eThemes for light and dark mode\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"2a15\"\u003eThe design system leverages dynamic theming through semantic tokens to ensure that UI components, \u003cstrong\u003esuch as\u003c/strong\u003e cards, adapt seamlessly between light and dark modes. In light mode, cards use a light, neutral background with dark text and subtle borders to maximize readability and maintain a clean aesthetic. In dark mode, these components shift to a darker background with lighter text and appropriately adjusted borders to ensure high contrast and reduced eye strain. This approach not only reinforces brand consistency and scalability but also meets accessibility standards, providing a cohesive and user-friendly experience across different themes.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eAn example of a card component in both light and dark modes, showing the adaptability of a well-structured design system.\u003c/figcaption\u003e\u003c/figure\u003e\u003ch2 id=\"a7de\"\u003e\u003cstrong\u003eMeeting WCAG standards, contrast ratios, and testing methods\u003c/strong\u003e\u003c/h2\u003e\u003cp id=\"cf43\"\u003eDuring the design of color tokens, accessibility was the top priority. It was ensured that the system not only looks great but also works well for everyone, including those with visual impairments or color blindness.\u003c/p\u003e\u003cp id=\"e3ed\"\u003eHere‚Äôs how we achieved this:\u003c/p\u003e\u003cp id=\"14c7\"\u003e\u003cstrong\u003eWCAG alignment: \u003c/strong\u003eWe structured our color system to meet the Web Content Accessibility Guidelines (WCAG), ensuring that every text-to-background pairing provides enough contrast for readability.\u003c/p\u003e\u003cp id=\"dba3\"\u003e\u003cstrong\u003eOptimized contrast ratios: \u003c/strong\u003eEvery color combination was fine-tuned to meet the AA standard for contrast. This helps users with low vision and other impairments easily read and navigate our interface.\u003c/p\u003e\u003cp id=\"5d4d\"\u003e\u003cstrong\u003eTesting \u0026amp; Validation:\u003c/strong\u003e\u003c/p\u003e\u003cp id=\"34ea\"\u003eWe confirmed that all our text and background combinations met the required contrast standards using the ‚Äú\u003cstrong\u003eUse Contrast\u003c/strong\u003e‚Äù plugin for Figma. This tool provided quick access to WCAG color contrast ratios, ensuring that our color selections are easily readable for individuals with visual impairments.\u003c/p\u003e\u003cp id=\"f188\"\u003eBy integrating these methods, we ensure that our color tokens provide a consistent, accessible experience across all scenarios.\u003c/p\u003e\u003cp id=\"e98f\"\u003eIn conclusion, building a scalable and accessible color system is not merely a technical exercise, it‚Äôs an act of empathy. A well-structured color system is essential for creating a \u003cstrong\u003edesign system\u003c/strong\u003e that is both inclusive and maintainable. By implementing a logical color scale, defining clear naming conventions, and utilizing both primitive and semantic tokens, teams can ensure consistency across products while accommodating diverse user needs. When you prioritize elements like contrast ratios and readability, you empower every user, regardless of visual ability, to experience clarity and ease. Ultimately, a well-designed color system works behind the scenes to instill trust and confidence in your product. This unspoken assurance, born from an inclusive and thoughtfully constructed color palette, is your ultimate reward.\u003c/p\u003e\u003ch2 id=\"7d5a\"\u003eReferences\u003c/h2\u003e\u003cp id=\"69cc\"\u003e[1] M. Vela, ‚ÄúJakob Nielsen‚Äôs fourth usability heuristic for user interface design,‚Äù \u003cem\u003eUX Collective\u003c/em\u003e, Jul. 04, 2020. Accessed: Feb. 23, 2025. [Online]. Available: \u003ca rel=\"noopener\" target=\"_blank\" href=\"https://uxdesign.cc/jakob-nielsens-fourth-usability-heuristic-for-user-interface-design-7a25960037d1\"\u003ehttps://uxdesign.cc/jakob-nielsens-fourth-usability-heuristic-for-user-interface-design-7a25960037d1\u003c/a\u003e\u003c/p\u003e\u003cp id=\"45dc\"\u003e[2] ‚ÄúUnderstanding Success Criterion 1.4.1: Use of Color,‚Äù W3C. Accessed: Feb. 23, 2025. [Online]. Available: \u003ca href=\"https://www.w3.org/WAI/WCAG22/Understanding/use-of-color\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ehttps://www.w3.org/WAI/WCAG22/Understanding/use-of-color\u003c/a\u003e?\u003c/p\u003e\u003cp id=\"bcb9\"\u003e[3] ‚ÄúFlyriver: The Overuse Of Colors In Modern Design,‚Äù Flyriver.com. Accessed: Feb. 23, 2025. [Online]. Available: \u003ca href=\"https://www.flyriver.com/l/overuse-of-colors?\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ehttps://www.flyriver.com/l/overuse-of-colors?\u003c/a\u003e\u003c/p\u003e\u003cp id=\"1533\"\u003e[4] ‚ÄúNaming Tokens in Design Systems. Terms, Types, and Taxonomy to Describe‚Ä¶,‚Äù EightShapes. Accessed: Feb. 23, 2025. [Online]. Available: \u003ca href=\"https://blog.bakarema.com/2022/10/05/naming-tokens-in-design-systems-terms-types-and-taxonomy-to-describe-by-nathan-curtis-eightshapes/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ehttps://blog.bakarema.com/2022/10/05/naming-tokens-in-design-systems-terms-types-and-taxonomy-to-describe-by-nathan-curtis-eightshapes/\u003c/a\u003e\u003c/p\u003e\u003cp id=\"c36b\"\u003e[5] Contributors to Wikimedia projects, ‚ÄúSeparation of concerns,‚Äù Wikipedia. Accessed: Feb. 23, 2025. [Online]. Available: \u003ca href=\"https://en.wikipedia.org/wiki/Separation_of_concerns?\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ehttps://en.wikipedia.org/wiki/Separation_of_concerns?\u003c/a\u003e\u003c/p\u003e\u003cp id=\"8c23\"\u003e[6] B. Frost, ‚ÄúAtomic Design Methodology,‚Äù Atomic Design by Brad Frost. Accessed: Feb. 23, 2025. [Online]. Available: \u003ca href=\"https://atomicdesign.bradfrost.com/chapter-2\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ehttps://atomicdesign.bradfrost.com/chapter-2\u003c/a\u003e\u003c/p\u003e\u003cp id=\"7b0a\"\u003e[7] Jamie, ‚ÄúDesigning for Color Contrast: Guidelines for Accessibility,‚Äù AudioEye. Accessed: Feb. 23, 2025. [Online]. Available: \u003ca href=\"https://www.boia.org/blog/designing-for-color-contrast-guidelines-for-accessibility\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ehttps://www.boia.org/blog/designing-for-color-contrast-guidelines-for-accessibility\u003c/a\u003e?\u003c/p\u003e\u003cp id=\"67bf\"\u003e[8] S. Rouse, ‚ÄúDesign tokens explained (and how to build a design token system),‚Äù Contentful, GmbH. Accessed: Feb. 23, 2025. [Online]. Available: \u003ca href=\"https://www.contentful.com/blog/design-token-system/?\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ehttps://www.contentful.com/blog/design-token-system/?\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"22bc\"\u003eGlossary\u003c/h2\u003e\u003cul\u003e\u003cli id=\"1068\"\u003e\u003cstrong\u003eAccessibility: \u003c/strong\u003eDesigning products so that people with disabilities can use them; in color systems, ensuring color choices don‚Äôt create barriers.\u003c/li\u003e\u003cli id=\"3853\"\u003e\u003cstrong\u003eColor Scale: \u003c/strong\u003eA range of shades and tints, typically numbered (e.g., 100‚Äì1100), to maintain consistent color variations.\u003c/li\u003e\u003cli id=\"4f73\"\u003e\u003cstrong\u003eColor System: \u003c/strong\u003eA collection of color values, tokens, and scales that create visual consistency in a UI.\u003c/li\u003e\u003cli id=\"6a9f\"\u003e\u003cstrong\u003eDesign System: \u003c/strong\u003eA framework of reusable components, guidelines, and tokens that ensures consistent design across a product.\u003c/li\u003e\u003cli id=\"f8d5\"\u003e\u003cstrong\u003eNaming Convention: \u003c/strong\u003eA systematic method for labeling color tokens to ensure clarity and consistency.\u003c/li\u003e\u003cli id=\"3e87\"\u003e\u003cstrong\u003ePrimitive Tokens: \u003c/strong\u003eThe basic color values that form the foundation of a design system.\u003c/li\u003e\u003cli id=\"461e\"\u003e\u003cstrong\u003eScalability: \u003c/strong\u003eThe ability of a design system to grow and adapt without losing consistency.\u003c/li\u003e\u003cli id=\"bf09\"\u003e\u003cstrong\u003eShade: \u003c/strong\u003eA color variant produced by adding black to a base color.\u003c/li\u003e\u003cli id=\"1811\"\u003e\u003cstrong\u003eSemantic Tokens: \u003c/strong\u003eColor mappings that assign meaning to UI elements by building on primitive tokens.\u003c/li\u003e\u003cli id=\"6305\"\u003e\u003cstrong\u003eState: \u003c/strong\u003eA variant of a color token that reflects a specific interaction or condition (e.g., hover, active).\u003c/li\u003e\u003cli id=\"dbca\"\u003e\u003cstrong\u003eTheming: \u003c/strong\u003eChanging the visual appearance of a UI by applying different sets of color tokens.\u003c/li\u003e\u003cli id=\"00c8\"\u003e\u003cstrong\u003eTint: \u003c/strong\u003eA color variant produced by adding white to a base color.\u003c/li\u003e\u003cli id=\"de53\"\u003e\u003cstrong\u003eToken: \u003c/strong\u003eA reusable variable that stores a design decision\u003c/li\u003e\u003cli id=\"b4d8\"\u003e\u003cstrong\u003eToken Management: \u003c/strong\u003eThe process of organizing, maintaining, and updating design tokens.\u003c/li\u003e\u003cli id=\"0301\"\u003e\u003cstrong\u003eWCAG (Web Content Accessibility Guidelines): \u003c/strong\u003eStandards that ensure web content is accessible to people with disabilities.\u003c/li\u003e\u003cli id=\"de83\"\u003e\u003cstrong\u003eWeight: \u003c/strong\u003eA numeric value assigned to a color that indicates its intensity.\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/article\u003e\u003c/div\u003e",
  "readingTime": "24 min read",
  "publishedTime": "2025-02-23T14:04:01.202Z",
  "modifiedTime": null
}
