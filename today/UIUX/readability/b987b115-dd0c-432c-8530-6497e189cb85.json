{
  "id": "b987b115-dd0c-432c-8530-6497e189cb85",
  "title": "Figma’s not a design tool — it’s a Rube Goldberg machine for avoiding code",
  "link": "https://uxdesign.cc/figmas-not-a-design-tool-it-s-a-rube-goldberg-machine-for-avoiding-code-2a24f11add5d?source=rss----138adf9c44c---4",
  "description": "",
  "author": "Michael F. Buckley",
  "published": "Sun, 16 Mar 2025 22:33:02 GMT",
  "source": "https://uxdesign.cc/feed",
  "categories": [
    "ux-design",
    "design",
    "figma",
    "ui",
    "ux"
  ],
  "byline": "Michael F. Buckley",
  "length": 6747,
  "excerpt": "Somewhere, a designer is meticulously adjusting auto-layout settings in Figma — crafting an intricate set of nested components, master variants, and esoteric constraints — all to simulate the…",
  "siteName": "UX Collective",
  "favicon": "https://miro.medium.com/v2/resize:fill:256:256/1*dn6MbbIIlwobt0jnUcrt_Q.png",
  "text": "The absurdity of spending countless hours crafting interactive designs in a medium no one will ever use.Somewhere, a designer is meticulously adjusting auto-layout settings in Figma — crafting an intricate set of nested components, master variants, and esoteric constraints — all to simulate the behavior of a simple button.They pat themselves on the back, believing they’ve mastered digital design. Meanwhile, a developer glances at the file, sighs, and codes the button in five minutes.This, my friends, is the state of design today — a profession increasingly dominated by individuals who have convinced themselves that learning to code is beneath them, but will spend hours constructing elaborate and needlessly complex prototypes in Figma — like someone determined to build a Rube Goldberg machine to flip a pancake, all because they refuse to touch a spatula.Image source: https://mymodernmet.com/modern-rube-goldberg-machine/For those who don’t know, a Rube Goldberg machine is a deliberately complicated and impractical contraption built to perform a simple task in the most indirect way imaginable — like setting off a series of dominoes, gears, levers, and pulleys just to pour a cup of coffee. Sure, it works in theory, but it’s needlessly complicated, inefficient, and disconnected from how things function in reality.Similarly, designers crafting elaborate prototypes in Figma to mimic basic digital interactions are essentially building digital Rube Goldberg machines. If you’re going to spend hours creating intricate simulations in Figma, you might as well put that effort directly into code — because in the end, code is where your designs must ultimately function.The cognitive dissonance of no-code designersA funny thing has happened in the design world. While other technical fields are expanding their skill sets — marketers are learning SQL and Python to better analyze data and automate tasks, product managers are embracing programming languages to enhance collaboration with developers, and copywriters are using automation to streamline content creation — some designers seem to be moving in the opposite direction.Instead of embracing even a rudimentary understanding of HTML, CSS, or JavaScript, designers have retreated into a fortress of abstraction. They’ll tweak their Figma files endlessly, push back on any technical constraints, and then smugly hand over their “perfect” design — only to be baffled when development comes back with a hundred questions about feasibility.The irony? I’ve seen designers on Reddit complain about how developers “never implement their vision correctly.”Newsflash — If you don’t understand even basic developer language, don’t be surprised when your work gets lost in translation.The myth of the “pure” designerThe argument against learning code often goes something like this:“Designers should focus on design. Learning code limits creativity. It’s not our job to worry about development.”Cute sentiment. But here’s the problem — design, at its core, has always been constrained by medium and execution. Architects don’t just sketch fantasy structures and expect engineers to figure it out. Industrial designers don’t just create wild, unbuildable chair concepts and assume factories will make it work.And yet, digital designers somehow believe they are the exception — that they can create whatever they want in Figma and just toss it over the wall.A “pure” designer who refuses to learn code is like a playwright who refuses to understand how a stage works. Sure, you can write grandiose scenes where a castle explodes into fireworks while a dragon skydives through the wreckage, but don’t be shocked when the director hands your script back and says, “Yeah, we can’t do that.”Figma mastery — the designer’s security blanketLet’s be clear — Figma is a fantastic tool. But the obsession with making it the tool — turning it into an entire ecosystem where designers never have to interact with code — is a symptom of a deeper problem.I get it — I’m old enough to remember when Flash was the Figma of its time, and I loved it. I could build entire websites without touching a line of code. Unlike Figma, though, we could actually publish those sites without rebuilding them elsewhere.But when Flash was killed off, I learned to code — and that turned out to be a great thing. It gave me an invaluable skill that allows me to create and communicate in the digital space with a level of precision and fluency I wouldn’t trade for anything.Image source: thenounproject.comThe industry has coddled digital designers into thinking they can exist in a bubble of vector shapes and auto-layouts, building increasingly complex systems of components, design tokens, and variants — all while actively avoiding the fundamental principles of the medium they are designing for.Imagine a chef who refuses to touch a stove but insists they should still be in charge of the restaurant’s menu. Or a car designer who never bothers to learn about aerodynamics. That’s what a Figma-only designer is — a person who obsesses over visual perfection but has no grasp of how their work will actually function in the real world.The fear of coding usually stems from uncertainty, not complexityLet’s not sugarcoat it — learning code isn’t hard. This isn’t about becoming a full-stack engineer or writing production-level React components. We’re talking about basic web literacy — understanding how CSS affects layout, why JavaScript controls interactivity, and how browsers actually render design.But too many designers cling to the excuse that learning code is too technical, too left-brained, or not creative enough. And yet, these same people will gleefully spend hours wrestling with Figma’s prototype settings, constructing elaborate, component libraries that require a PhD to decipher.So let’s call it what it is — fear. Not of the code itself, but of being held accountable. I get it, I’ve been there. When I first started, coding felt like this huge, scary thing. Because once you actually understand how it works, you can’t just blame developers for your designs falling apart.Image source: RedditTime to grow up, designersDesign is a craft. And a real craftsperson understands the tools, materials, and constraints of their trade. Digital designers who refuse to learn even the basics of front-end development are like architects who have never set foot on a construction site. They are spectators in their own profession — content to create artifacts, rather than real, usable products.So, if you’re a designer who still thinks code isn’t your concern, here’s my advice — drop the Rube Goldberg act, pick up the damn spatula, and start cooking. You might just find that the pancakes turns out better.",
  "image": "https://miro.medium.com/v2/resize:fit:1200/1*cGSdkq1_aVlAq3_MeUI4wg.jpeg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003ch2 id=\"3d9d\"\u003eThe absurdity of spending countless hours crafting interactive designs in a medium no one will ever use.\u003c/h2\u003e\u003cdiv\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://micbuckcreative.medium.com/?source=post_page---byline--2a24f11add5d---------------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Michael F. Buckley\" src=\"https://miro.medium.com/v2/resize:fill:88:88/1*hSL3IuW7sgN-Lu88JPWzAA.jpeg\" width=\"44\" height=\"44\" loading=\"lazy\" data-testid=\"authorPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://uxdesign.cc/?source=post_page---byline--2a24f11add5d---------------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"UX Collective\" src=\"https://miro.medium.com/v2/resize:fill:48:48/1*mDhF9X4VO0rCrJvWFatyxg.png\" width=\"24\" height=\"24\" loading=\"lazy\" data-testid=\"publicationPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"0fcb\"\u003eSomewhere, a designer is meticulously adjusting auto-layout settings in Figma — crafting an intricate set of nested components, master variants, and esoteric constraints — all to simulate the behavior of a simple button.\u003c/p\u003e\u003cp id=\"f9cc\"\u003eThey pat themselves on the back, believing they’ve mastered digital design. Meanwhile, a developer glances at the file, sighs, and codes the button in five minutes.\u003c/p\u003e\u003cp id=\"34c0\"\u003eThis, my friends, is the state of design today — a profession increasingly dominated by individuals who have convinced themselves that learning to code is beneath them, but will spend hours constructing elaborate and needlessly complex prototypes in Figma — like someone determined to build a Rube Goldberg machine to flip a pancake, all because they refuse to touch a spatula.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eImage source: \u003ca href=\"https://mymodernmet.com/modern-rube-goldberg-machine/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ehttps://mymodernmet.com/modern-rube-goldberg-machine/\u003c/a\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"738c\"\u003eFor those who don’t know, a \u003ca href=\"https://www.youtube.com/watch?v=1_hbEhyrNAM\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eRube Goldberg machine\u003c/a\u003e is a deliberately complicated and impractical contraption built to perform a simple task in the most indirect way imaginable — like setting off a series of dominoes, gears, levers, and pulleys just to pour a cup of coffee. Sure, it works in theory, but it’s needlessly complicated, inefficient, and disconnected from how things function in reality.\u003c/p\u003e\u003cp id=\"37a3\"\u003eSimilarly, designers crafting elaborate prototypes in Figma to mimic basic digital interactions are essentially building digital Rube Goldberg machines. If you’re going to spend hours creating intricate simulations in Figma, you might as well put that effort directly into code — because in the end, code is where your designs must ultimately function.\u003c/p\u003e\u003ch2 id=\"e3da\"\u003eThe cognitive dissonance of no-code designers\u003c/h2\u003e\u003cp id=\"0872\"\u003eA funny thing has happened in the design world. While other technical fields are expanding their skill sets — \u003ca href=\"https://medium.com/%40Scofield_Idehen/ppwhy-python-and-sql-are-must-have-skills-for-marketing-analysts-in-the-age-of-big-data-0b8d4ae70fe9\" rel=\"noopener\"\u003emarketers are learning SQL and Python\u003c/a\u003e to better analyze data and automate tasks, \u003ca href=\"https://maven.com/articles/5-programming-languages-for-PMs\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eproduct managers are embracing programming languages\u003c/a\u003e to enhance collaboration with developers, and \u003ca href=\"https://aicontentfy.com/en/blog/future-of-copywriting-exploring-automation-and-ai-tools\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ecopywriters are using automation to streamline content creation\u003c/a\u003e — some designers seem to be moving in the opposite direction.\u003c/p\u003e\u003cp id=\"41a7\"\u003eInstead of embracing even a rudimentary understanding of \u003ca href=\"https://uxportfolio.cc/ux-designers-should-code/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eHTML, CSS, or JavaScript\u003c/a\u003e, designers have \u003ca href=\"https://michaelmcwatters.com/two-reasons-designers-dont-need-to-code-6f9bb20786f2\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eretreated into a fortress of abstraction\u003c/a\u003e. They’ll tweak their Figma files endlessly, push back on any technical constraints, and then smugly hand over their “perfect” design — only to be baffled when development comes back with a \u003ca href=\"https://www.pixelperfecthtml.com/challenges-of-figma-to-html-conversion-company/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ehundred questions about feasibility\u003c/a\u003e.\u003c/p\u003e\u003cp id=\"940b\"\u003eThe irony? I’ve seen \u003ca href=\"https://www.reddit.com/r/ProductManagement/comments/1evz8nr/why_does_the_front_end_never_look_as_good_as_the/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003edesigners on Reddit complain\u003c/a\u003e about how developers “never implement their vision correctly.”\u003c/p\u003e\u003cp id=\"ed52\"\u003eNewsflash — If you don’t understand even basic \u003ca rel=\"noopener\" target=\"_blank\" href=\"https://uxdesign.cc/designer-developer-communication-8172f26e8af6\"\u003edeveloper language\u003c/a\u003e, don’t be surprised when your work gets lost in translation.\u003c/p\u003e\u003ch2 id=\"3479\"\u003eThe myth of the “pure” designer\u003c/h2\u003e\u003cp id=\"8def\"\u003eThe argument against learning code often goes something like this:\u003c/p\u003e\u003cblockquote\u003e\u003cp id=\"02f9\"\u003e“Designers should focus on design. Learning code limits creativity. It’s not our job to worry about development.”\u003c/p\u003e\u003c/blockquote\u003e\u003cp id=\"281a\"\u003eCute sentiment. But here’s the problem — design, at its core, has always been constrained by medium and execution. Architects don’t just sketch fantasy structures and expect engineers to figure it out. Industrial designers don’t just create wild, unbuildable chair concepts and assume factories will make it work.\u003c/p\u003e\u003cp id=\"9c0a\"\u003eAnd yet, digital designers somehow believe they are the exception — that they can create whatever they want in Figma and just toss it over the wall.\u003c/p\u003e\u003cfigure\u003e\u003c/figure\u003e\u003cp id=\"5d1e\"\u003eA “pure” designer who refuses to learn code is like a playwright who refuses to understand how a stage works. Sure, you can write grandiose scenes where a castle explodes into fireworks while a dragon skydives through the wreckage, but don’t be shocked when the director hands your script back and says, “Yeah, we can’t do that.”\u003c/p\u003e\u003ch2 id=\"dde0\"\u003eFigma mastery — the designer’s security blanket\u003c/h2\u003e\u003cp id=\"7a45\"\u003eLet’s be clear — Figma is a fantastic tool. But the obsession with making it \u003cem\u003ethe\u003c/em\u003e tool — turning it into an entire ecosystem where designers never have to interact with code — is a symptom of a deeper problem.\u003c/p\u003e\u003cp id=\"46f4\"\u003eI get it — I’m old enough to remember when Flash was the Figma of its time, and I loved it. I could build entire websites without touching a line of code. Unlike Figma, though, we could actually publish those sites without rebuilding them elsewhere.\u003c/p\u003e\u003cp id=\"fcab\"\u003eBut when Flash was killed off, I learned to code — and that turned out to be a great thing. It gave me an invaluable skill that allows me to create and communicate in the digital space with a level of precision and fluency I wouldn’t trade for anything.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eImage source: \u003ca href=\"https://blog.thenounproject.com/how-to-use-auto-layout-in-figma-with-icons/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ethenounproject.com\u003c/a\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"beb8\"\u003eThe industry has coddled digital designers into thinking they can exist in a bubble of vector shapes and auto-layouts, building increasingly \u003ca href=\"https://www.reddit.com/r/DesignSystems/comments/1ihf57j/am_i_missing_something_or_are_we_overengineering/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ecomplex systems of components, design tokens, and variants\u003c/a\u003e — all while actively avoiding the fundamental principles of the medium they are designing for.\u003c/p\u003e\u003cp id=\"e1ee\"\u003eImagine a chef who refuses to touch a stove but insists they should still be in charge of the restaurant’s menu. Or a car designer who never bothers to learn about aerodynamics. That’s what a Figma-only designer is — a person who obsesses over visual perfection but has no grasp of how their work will actually function in the real world.\u003c/p\u003e\u003ch2 id=\"a6ad\"\u003eThe fear of coding usually stems from uncertainty, not complexity\u003c/h2\u003e\u003cp id=\"1ac0\"\u003eLet’s not sugarcoat it — \u003ca rel=\"noopener\" target=\"_blank\" href=\"https://uxdesign.cc/html-css-a-quick-and-easy-introduction-for-total-beginners-40cc0938035a\"\u003elearning code isn’t hard\u003c/a\u003e. This isn’t about becoming a full-stack engineer or writing production-level React components. We’re talking about \u003cem\u003ebasic\u003c/em\u003e web literacy — understanding how CSS affects layout, why JavaScript controls interactivity, and how browsers actually render design.\u003c/p\u003e\u003cp id=\"ced9\"\u003eBut too many designers cling to the excuse that learning code is too technical, too left-brained, or not creative enough. And yet, these same people will gleefully spend hours wrestling with Figma’s prototype settings, constructing elaborate, \u003ca href=\"https://www.agitraining.com/figma-classes-courses-training/how-difficult-to-learn-figma?srsltid=AfmBOoolHnykfnnxqPA5aYQB7TGz8yvZlUbnrgtyEqyI2h8q4alsQ0tr\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ecomponent libraries that require a PhD to decipher\u003c/a\u003e.\u003c/p\u003e\u003cp id=\"da9b\"\u003eSo let’s call it what it is — fear. Not of the code itself, but of being held accountable. I get it, I’ve been there. When I first started, coding felt like this huge, scary thing. Because once you actually understand how it works, you can’t just blame developers for your designs falling apart.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eImage source: \u003ca href=\"https://www.reddit.com/r/FigmaDesign/comments/kdgodb/complex_prototyping_in_figma_be_like/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eReddit\u003c/a\u003e\u003c/figcaption\u003e\u003c/figure\u003e\u003ch2 id=\"a924\"\u003eTime to grow up, designers\u003c/h2\u003e\u003cp id=\"d4f8\"\u003eDesign is a craft. And a real craftsperson understands the tools, materials, and constraints of their trade. Digital designers who refuse to learn even the basics of front-end development are like architects who have never set foot on a construction site. They are spectators in their own profession — content to create artifacts, rather than real, usable products.\u003c/p\u003e\u003cp id=\"31bf\"\u003eSo, if you’re a designer who still thinks code isn’t your concern, here’s my advice — drop the Rube Goldberg act, pick up the damn spatula, and start cooking. You might just find that the pancakes turns out better.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "8 min read",
  "publishedTime": "2025-03-16T22:33:02.504Z",
  "modifiedTime": null
}
