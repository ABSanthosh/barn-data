{
  "id": "ab130979-9bec-47b3-ab22-bdd18510be00",
  "title": "Why I skipped Figma and prototyped in code instead",
  "link": "https://uxdesign.cc/why-i-skipped-figma-and-prototyped-in-code-instead-8d1dab51c07d?source=rss----138adf9c44c---4",
  "description": "",
  "author": "Patrick Morgan",
  "published": "Mon, 12 May 2025 22:38:02 GMT",
  "source": "https://uxdesign.cc/feed",
  "categories": [
    "data-visualization",
    "prototyping",
    "ux-design",
    "product-design",
    "ux"
  ],
  "byline": "Patrick Morgan",
  "length": 5864,
  "excerpt": "Over the past year, I explored a lot of AI tooling during my sabbatical, mostly for personal creative work. I was excited but skeptical about the benefits for my professional product design workflow…",
  "siteName": "UX Collective",
  "favicon": "https://miro.medium.com/v2/resize:fill:256:256/1*dn6MbbIIlwobt0jnUcrt_Q.png",
  "text": "Why I skipped Figma and prototyped in code insteadMy first real-world use of vibe coding to improve a product design workflowMade by me with Midjourney.Not all vibe coding is useful. But sometimes, it actually helps you do the job better, faster.Over the past year, I explored a lot of AI tooling during my sabbatical, mostly for personal creative work. I was excited but skeptical about the benefits for my professional product design workflow.Tools like Bolt.new, Lovable, and Figma Make are fun to experiment with, but in a real product environment, especially one like cybersecurity, there’s no way I’m handing off that code and expecting it to reach production.Then I joined Sublime Security. And within a couple weeks, I found a use case for vibe coding that actually made sense. Not as an engineering shortcut, but as a clearer, faster way to communicate design intent inside a constrained, technical system.The quick turnaround data viz challengeShortly into my new role, our team was preparing for RSA Conference in San Francisco, a major security industry event. We wanted to showcase a dashboard visualizing the value of our new AI security agent.This posed some immediate challenges:As a new employee, I hadn’t yet built out many system resources in FigmaCreating static mockups of data visualizations is always a painWe use Apache ECharts for our visualization library, which comes with its own constraints and capabilitiesI had a choice: either spend a bunch of time reverse engineering ECharts components into Figma mockups, or find another approach.Why static mockups fall short for data vizIf you’ve designed dashboards before, you know the pain of communicating data visualizations through static design files:Interaction details are easier to missRealistic data distributions are time-consuming to fakeIgnoring library constraints leads to design–dev mismatchesEngineers still have to translate designs back into library-compatible configurationsAll of this is tedious at best.In my case, since we were already committed to using ECharts, I would effectively be recreating assets that already exist in code, using up my limited time and introducing more opportunity for error.Ultimately, I decided that wrangling Figma to communicate these charts would’ve cost more time than it was worth.A better approach: Safe environments for vibe prototypingInstead of fighting these limitations, I decided to work directly with the tools our engineers use.ECharts has a built-in playground demo mode where you can prototype specific chart types right in the browser. And since it’s a well-known, publicly documented library, major LLMs like those from OpenAI and Anthropic know about its capabilities. This let me set up a simple vibe coding workspace: ChatGPT on one side, ECharts sandbox on the other.With this setup, I could:Ask ChatGPT about ECharts capabilities and syntaxDescribe what I wanted to achieve from a design perspectiveGenerate code that I could immediately test in the sandboxIterate rapidly until the visualization matched my design intentShare working examples directly with the engineering team using the sandbox’s share linkThis approach greatly reduced the design execution gap.Engineers could see and feel exactly what I wanted, within the constraints of the library they needed to use to achieve the task.What made this valuableThe most important outcome was that I communicated the design intent more clearly and quickly by leaning into a tool that was better suited for the job than static mockups.I don’t know how much of the code I generated was actually used by the engineers on my team. But that’s not what mattered.The value came from:Staying within actual technical constraints rather than designing fantasy interfacesExploring possibilities more efficiently than reading documentationPrototyping in the actual medium that would be used in productionCommunicating design intent more clearly through interactive prototypesMost importantly, this approach respected everyone’s role. I wasn’t trying to be an engineer — I was using code as a tool to express intent, nothing more.When vibe coding actually makes sense in production product design environmentsThis experience helped me crystallize when the current AI vibe coding tools are genuinely valuable for product designers:When the goal is communication, not production: Using code to express intent, not commit to implementation detailsWhen there’s a safe sandbox environment: Places to experiment where nothing mission-critical can breakWhen working within well-defined, constrained systems: Charting libraries, design systems, UI frameworks with clear documentationWhen the traditional design-to-development handoff creates friction: Highly interactive elements that static mockups can’t adequately representWhen the design execution translation cost is high: Complex experiences and interactions where misalignment is expensiveVibing beyond data visualizationThe point of all of this is not to turn myself into a person who pushes code to production (I don’t want that responsibility).The point is to communicate my intent as clearly as possible to the people responsible for building it, maximizing the chances we build something great, with quality and speed.Data visualization is a familiar example that nearly every product designer has grappled with at some point. But this workflow will become increasingly important as the non-deterministic and interactive nature of AI data and workflows requires us to use tools that better communicate designs for those fluid experiences.This project wasn’t a grand statement about the future of product design. It was simply the best option to get the job done well.Product design exists to help the team create the thing we’re all trying to build together.And I’ll happily use any tool that improves the odds we get there.",
  "image": "https://miro.medium.com/v2/resize:fit:1200/0*d3fLcFg5-ZpZn8mr.jpeg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cp\u003e\u003ch2 id=\"65b2\" data-testid=\"storyTitle\"\u003e\u003cstrong\u003eWhy I skipped Figma and prototyped in code instead\u003c/strong\u003e\u003c/h2\u003e\u003c/p\u003e\u003cdiv\u003e\u003ch2 id=\"c244\"\u003e\u003cstrong\u003eMy first real-world use of vibe coding to improve a product design workflow\u003c/strong\u003e\u003c/h2\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://medium.com/@itspatmorgan?source=post_page---byline--8d1dab51c07d---------------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Patrick Morgan\" src=\"https://miro.medium.com/v2/resize:fill:64:64/1*ZCSPZ40wwJSGiREsYF2qaA.jpeg\" width=\"32\" height=\"32\" loading=\"lazy\" data-testid=\"authorPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/div\u003e\u003cfigure\u003e\u003cfigcaption\u003eMade by me with Midjourney.\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"ae12\"\u003eNot all vibe coding is useful. But sometimes, it actually helps you do the job better, faster.\u003c/p\u003e\u003cp id=\"65ad\"\u003eOver the past year, I explored a lot of AI tooling during my sabbatical, mostly for personal creative work. I was excited but skeptical about the benefits for my professional product design workflow.\u003c/p\u003e\u003cp id=\"535b\"\u003eTools like \u003ca href=\"https://bolt.new/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eBolt.new\u003c/a\u003e, \u003ca href=\"https://lovable.dev/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eLovable\u003c/a\u003e, and \u003ca href=\"https://www.figma.com/make/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eFigma Make\u003c/a\u003e are fun to experiment with, but in a real product environment, especially one like cybersecurity, there’s no way I’m handing off that code and expecting it to reach production.\u003c/p\u003e\u003cp id=\"a097\"\u003eThen \u003ca href=\"https://www.linkedin.com/posts/itspatmorgan_well-folks-im-back-in-the-startup-game-activity-7308884444239536128--Ek7?utm_source=share\u0026amp;utm_medium=member_desktop\u0026amp;rcm=ACoAAAZtQegB-nJjdIi9kT7naAeZHCCWYKlWcqg\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eI joined Sublime Security.\u003c/a\u003e And within a couple weeks, I found a use case for vibe coding that actually made sense. Not as an engineering shortcut, but as a clearer, faster way to communicate design intent inside a constrained, technical system.\u003c/p\u003e\u003ch2 id=\"0abb\"\u003eThe quick turnaround data viz challenge\u003c/h2\u003e\u003cp id=\"bdaf\"\u003eShortly into my new role, our team was preparing for \u003ca href=\"https://www.rsaconference.com/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eRSA Conference\u003c/a\u003e in San Francisco, a major security industry event. We wanted to showcase a dashboard visualizing the value of our new AI security agent.\u003c/p\u003e\u003cp id=\"2be7\"\u003eThis posed some immediate challenges:\u003c/p\u003e\u003col\u003e\u003cli id=\"8a43\"\u003eAs a new employee, I hadn’t yet built out many system resources in Figma\u003c/li\u003e\u003cli id=\"79b0\"\u003eCreating static mockups of data visualizations is always a pain\u003c/li\u003e\u003cli id=\"b5c0\"\u003eWe use \u003ca href=\"https://echarts.apache.org/en/index.html\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eApache ECharts\u003c/a\u003e for our visualization library, which comes with its own constraints and capabilities\u003c/li\u003e\u003c/ol\u003e\u003cp id=\"975a\"\u003eI had a choice: either spend a bunch of time reverse engineering ECharts components into Figma mockups, or find another approach.\u003c/p\u003e\u003ch2 id=\"5c4b\"\u003eWhy static mockups fall short for data viz\u003c/h2\u003e\u003cp id=\"9faa\"\u003eIf you’ve designed dashboards before, you know the pain of communicating data visualizations through static design files:\u003c/p\u003e\u003cul\u003e\u003cli id=\"205a\"\u003eInteraction details are easier to miss\u003c/li\u003e\u003cli id=\"be4f\"\u003eRealistic data distributions are time-consuming to fake\u003c/li\u003e\u003cli id=\"258a\"\u003eIgnoring library constraints leads to design–dev mismatches\u003c/li\u003e\u003cli id=\"19a1\"\u003eEngineers still have to translate designs back into library-compatible configurations\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"803a\"\u003eAll of this is tedious at best.\u003c/p\u003e\u003cp id=\"db2a\"\u003eIn my case, since we were already committed to using ECharts, I would effectively be recreating assets that already exist in code, using up my limited time and introducing more opportunity for error.\u003c/p\u003e\u003cp id=\"6f7c\"\u003eUltimately, I decided that wrangling Figma to communicate these charts would’ve cost more time than it was worth.\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003ch2 id=\"1f80\"\u003eA better approach: Safe environments for vibe prototyping\u003c/h2\u003e\u003cp id=\"fd03\"\u003eInstead of fighting these limitations, I decided to work directly with the tools our engineers use.\u003c/p\u003e\u003cp id=\"fd3f\"\u003eECharts has a built-in \u003ca href=\"https://echarts.apache.org/examples/en/editor.html?c=area-stack\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eplayground demo mode\u003c/a\u003e where you can prototype specific chart types right in the browser. And since it’s a well-known, publicly documented library, major LLMs like those from OpenAI and Anthropic know about its capabilities. This let me set up a simple vibe coding workspace: ChatGPT on one side, ECharts sandbox on the other.\u003c/p\u003e\u003cp id=\"0f69\"\u003eWith this setup, I could:\u003c/p\u003e\u003col\u003e\u003cli id=\"c506\"\u003eAsk ChatGPT about ECharts capabilities and syntax\u003c/li\u003e\u003cli id=\"d4fa\"\u003eDescribe what I wanted to achieve from a design perspective\u003c/li\u003e\u003cli id=\"6c95\"\u003eGenerate code that I could immediately test in the sandbox\u003c/li\u003e\u003cli id=\"8c49\"\u003eIterate rapidly until the visualization matched my design intent\u003c/li\u003e\u003cli id=\"fe9d\"\u003eShare working examples directly with the engineering team using the sandbox’s share link\u003c/li\u003e\u003c/ol\u003e\u003cp id=\"fbcb\"\u003eThis approach greatly reduced the \u003ca href=\"https://www.unknownarts.co/p/the-design-execution-gap-8db\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003edesign execution gap\u003c/a\u003e.\u003c/p\u003e\u003cp id=\"430c\"\u003eEngineers could see and feel exactly what I wanted, within the constraints of the library they needed to use to achieve the task.\u003c/p\u003e\u003ch2 id=\"4a10\"\u003eWhat made this valuable\u003c/h2\u003e\u003cp id=\"ada7\"\u003eThe most important outcome was that I communicated the design intent more clearly and quickly by leaning into a tool that was better suited for the job than static mockups.\u003c/p\u003e\u003cp id=\"4f2c\"\u003eI don’t know how much of the code I generated was actually used by the engineers on my team. But that’s not what mattered.\u003c/p\u003e\u003cp id=\"5b42\"\u003eThe value came from:\u003c/p\u003e\u003cul\u003e\u003cli id=\"9f6b\"\u003e\u003cstrong\u003eStaying within actual technical constraints\u003c/strong\u003e rather than designing fantasy interfaces\u003c/li\u003e\u003cli id=\"040f\"\u003e\u003cstrong\u003eExploring possibilities more efficiently\u003c/strong\u003e than reading documentation\u003c/li\u003e\u003cli id=\"2e4b\"\u003e\u003cstrong\u003ePrototyping in the actual medium\u003c/strong\u003e that would be used in production\u003c/li\u003e\u003cli id=\"643b\"\u003e\u003cstrong\u003eCommunicating design intent more clearly\u003c/strong\u003e through interactive prototypes\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"ae46\"\u003eMost importantly, this approach respected everyone’s role. I wasn’t trying to be an engineer — I was using code as a tool to express intent, nothing more.\u003c/p\u003e\u003ch2 id=\"59c4\"\u003eWhen vibe coding actually makes sense in production product design environments\u003c/h2\u003e\u003cp id=\"324c\"\u003eThis experience helped me crystallize when the current AI vibe coding tools are genuinely valuable for product designers:\u003c/p\u003e\u003col\u003e\u003cli id=\"b63e\"\u003e\u003cstrong\u003eWhen the goal is communication, not production: \u003c/strong\u003eUsing code to express intent, not commit to implementation details\u003c/li\u003e\u003cli id=\"32b4\"\u003e\u003cstrong\u003eWhen there’s a safe sandbox environment: \u003c/strong\u003ePlaces to experiment where nothing mission-critical can break\u003c/li\u003e\u003cli id=\"d7a5\"\u003e\u003cstrong\u003eWhen working within well-defined, constrained systems: \u003c/strong\u003eCharting libraries, design systems, UI frameworks with clear documentation\u003c/li\u003e\u003cli id=\"2847\"\u003e\u003cstrong\u003eWhen the traditional design-to-development handoff creates friction: \u003c/strong\u003eHighly interactive elements that static mockups can’t adequately represent\u003c/li\u003e\u003cli id=\"eaec\"\u003e\u003cstrong\u003eWhen the design execution translation cost is high: \u003c/strong\u003eComplex experiences and interactions where misalignment is expensive\u003c/li\u003e\u003c/ol\u003e\u003ch2 id=\"f636\"\u003eVibing beyond data visualization\u003c/h2\u003e\u003cp id=\"6691\"\u003eThe point of all of this is not to turn myself into a person who pushes code to production (I don’t want that responsibility).\u003c/p\u003e\u003cp id=\"c52e\"\u003eThe point is to communicate my intent as clearly as possible to the people responsible for building it, maximizing the chances we build something great, with quality and speed.\u003c/p\u003e\u003cp id=\"dd5a\"\u003eData visualization is a familiar example that nearly every product designer has grappled with at some point. But this workflow will become increasingly important as the \u003ca href=\"https://www.unknownarts.co/p/the-end-of-design-certainty\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003enon-deterministic and interactive nature of AI\u003c/a\u003e data and workflows requires us to use tools that better communicate designs for those fluid experiences.\u003c/p\u003e\u003cp id=\"2b65\"\u003eThis project wasn’t a grand statement about the future of product design. It was simply the best option to get the job done well.\u003c/p\u003e\u003cp id=\"6ab5\"\u003eProduct design exists to help the team create the thing we’re all trying to build together.\u003c/p\u003e\u003cp id=\"9e76\"\u003eAnd I’ll happily use any tool that improves the odds we get there.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": "2025-05-12T22:38:02.403Z",
  "modifiedTime": null
}
