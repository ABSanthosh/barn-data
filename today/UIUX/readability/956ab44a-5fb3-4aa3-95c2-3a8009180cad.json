{
  "id": "956ab44a-5fb3-4aa3-95c2-3a8009180cad",
  "title": "Don’t just add AI on top: Rethinking mobile email UX for all workflows",
  "link": "https://uxdesign.cc/dont-just-add-ai-on-top-rethinking-mobile-email-ux-for-all-workflows-5cfa0f591177?source=rss----138adf9c44c---4",
  "description": "",
  "author": "Daniel Buschek",
  "published": "Sun, 30 Mar 2025 13:04:09 GMT",
  "source": "https://uxdesign.cc/feed",
  "categories": [
    "ui",
    "ai",
    "design",
    "email",
    "ux"
  ],
  "byline": "Daniel Buschek",
  "length": 5549,
  "excerpt": "Explore a redesign of mobile email replies that improves UX with microtasking, both with and without AI, to avoid overlays and enhance workflows.",
  "siteName": "UX Collective",
  "favicon": "https://miro.medium.com/v2/resize:fill:256:256/1*dn6MbbIIlwobt0jnUcrt_Q.png",
  "text": "Don’t just add AI on top: Rethinking mobile email UX for all workflowsWe redesigned mobile email replies with a UI for inserting local responses while reading, optionally with AI. Image by the author.Many UI designers are currently tasked with extending existing interfaces with AI features, such as “copilots” and chatbots. On desktops, these are often added in sidebars — but on mobile devices, where screen space is limited, AI is typically layered on top of existing UIs as popups.In this article, we explore the drawbacks of this design pattern and discuss a better alternative. Drawing on our research in Human-Computer Interaction, we introduce a redesign inspired by microtasking. We use this to improve the experience of replying to emails on smartphones.The problem: AI “on top” hides context for using itMobile email UIs are a prime example for adding AI “on top”: The image below shows how several email apps added AI with a popup or overlay.A common UI design pattern for AI replies in current mobile email apps: AI is integrated as a popup (A), on top of an empty draft view (B). Users enter a prompt (C), check the generated reply (D), and then accept it with a button (E). Image by the author, with screenshots from Google’s website, Superhuman’s YouTube channel, The Copilot Connection’s YouTube channelUnfortunately, this design wastes valuable screen space, because the AI popup hides the incoming email or existing draft. This forces users to remember key details from the original email while crafting an AI prompt and reviewing the generated response. This cognitive burden becomes especially problematic for longer emails or in typical mobile scenarios where users are frequently interrupted.Leaving UI space unused, while requiring users to recall information, indicates that current AI replies are not integrated well.The solution strategy: Microtasking keeps contextTo address these issues, we applied principles from microtasking, leading to a new UI concept we call Content-Driven Local Response (CDLR). It restructures the UI for email replies into two steps:The redesign: (1) While reading the email, tap any sentence to insert a local reply, optionally with AI sentence suggestions. (2) On a usual draft UI, connect the local replies to one coherent email — or (3) let AI do just that. Image by the author.Step 1 — Local response: Instead of switching to a separate AI popup, users can insert responses directly within the email as they read. In a sense, the email text itself becomes the interface: Tapping a sentence inserts a response card where users can jot down a reply, notes, or keywords. This tap also signals the AI to generate sentence suggestions, which users can accept with a tap or ignore.Step 2 — Connecting the local responses: Once users finish reading, they transition to the email draft screen, where all local responses are collected. Here, they can refine these snippets into a full reply manually — or let AI generate a coherent message from them.Result: Flexible workflows and user controlWe evaluated this design in a user study with 126 participants, comparing it to two baselines:Manual replies: Users wrote responses without AI.AI-generated replies: This UI mimicked the industry standard of entering a prompt for a fully AI-generated response.Our findings show that Content-Driven Local Response (CDLR) provides a flexible middle ground between these extremes. By allowing users to draft local responses while reading, the design allowed users to engage more with the incoming email and their own thoughts on it. At the same time, AI support helped reduce typing effort and errors.As our study (N=126) showed, our design (center) involves users more, also while reading. Image by the author.Moreover, participants also valued the added control over the final message. While full AI generation was faster, the new design also covers fast workflows: When preferring a quicker workflow, users can skip the local response step and jump straight to AI drafting. In this way, the new UI supports very flexible workflows.This design empowers users to decide when and how to involve AI, for example, to balance speed and control.Design lessons learnedA core principle of microtasking is keeping relevant context visible, allowing users to recognise information rather than having to recall it.Initially, we applied this idea to help users see the incoming email while prompting AI and reviewing its output. Through our user-centred design process, we refined it further: the ability to insert local responses while reading is useful on its own — even without AI.Put as a design insight for AI integration:Rather than adding AI “on top” of existing UIs, we should design for users’ workflows — whether they involve AI or not. Such flexible UIs empower users to decide themselves when and how to involve AI.So how can we redesign for these flexible workflows? Here’s our recipe:Identify micro-decisions that users make in the workflow that currently lack explicit interaction. In email replies, this meant recognizing that users naturally decide which parts of an email to respond to while reading.Enable users to express these moments in interaction. In our case, we allowed users to tap any sentence while reading.Integrate AI specifically and optionally at these decision moments. For example, in our design, tapping a sentence also triggered (local) suggestions.ResourcesPreprint of the paper on arxiv: https://arxiv.org/abs/2502.06430Video showing the UI in action: https://youtu.be/wtTDgU6559I",
  "image": "https://miro.medium.com/v2/resize:fit:1200/1*iKTHcBOx50GT3KNDcBhY4Q.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003carticle\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cdiv\u003e\u003ch2 id=\"deda\" data-testid=\"storyTitle\"\u003eDon’t just add AI on top: Rethinking mobile email UX for all workflows\u003c/h2\u003e\u003cdiv\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://dbuschek.medium.com/?source=post_page---byline--5cfa0f591177---------------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Daniel Buschek\" src=\"https://miro.medium.com/v2/resize:fill:88:88/2*AOpJjvUvcysMy1puj0ugCA.jpeg\" width=\"44\" height=\"44\" loading=\"lazy\" data-testid=\"authorPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://uxdesign.cc/?source=post_page---byline--5cfa0f591177---------------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"UX Collective\" src=\"https://miro.medium.com/v2/resize:fill:48:48/1*mDhF9X4VO0rCrJvWFatyxg.png\" width=\"24\" height=\"24\" loading=\"lazy\" data-testid=\"publicationPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cfigure\u003e\u003cfigcaption\u003eWe redesigned mobile email replies with a UI for inserting local responses while reading, optionally with AI. Image by the author.\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"3329\"\u003eMany UI designers are currently tasked with extending existing interfaces with AI features, such as “copilots” and chatbots. On desktops, these are often added in sidebars — but on mobile devices, where screen space is limited, AI is typically layered \u003cem\u003eon top\u003c/em\u003e of existing UIs as popups.\u003c/p\u003e\u003cp id=\"8658\"\u003eIn this article, we explore the drawbacks of this design pattern and discuss a better alternative. Drawing on our research in Human-Computer Interaction, we introduce a redesign inspired by \u003cem\u003emicrotasking. \u003c/em\u003eWe use this to improve the experience of replying to emails on smartphones.\u003c/p\u003e\u003ch2 id=\"986d\"\u003eThe problem: AI “on top” hides context for using it\u003c/h2\u003e\u003cp id=\"92d2\"\u003eMobile email UIs are a prime example for adding AI “on top”: The image below shows how several email apps added AI with a popup or overlay.\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfigure\u003e\u003cfigcaption\u003eA common UI design pattern for AI replies in current mobile email apps: AI is integrated as a popup (A), on top of an empty draft view (B). Users enter a prompt (C), check the generated reply (D), and then accept it with a button (E). Image by the author, with screenshots from Google’s website, Superhuman’s YouTube channel, The Copilot Connection’s YouTube channel\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"3235\"\u003eUnfortunately, this design wastes valuable screen space, because the AI popup hides the incoming email or existing draft. This forces users to \u003cem\u003eremember\u003c/em\u003e key details from the original email while crafting an AI prompt and reviewing the generated response. This cognitive burden becomes especially problematic for longer emails or in typical mobile scenarios where users are frequently interrupted.\u003c/p\u003e\u003cblockquote\u003e\u003cp id=\"2f01\"\u003eLeaving UI space unused, while requiring users to recall information, indicates that current AI replies are not integrated well.\u003c/p\u003e\u003c/blockquote\u003e\u003ch2 id=\"06fe\"\u003eThe solution strategy: Microtasking keeps context\u003c/h2\u003e\u003cp id=\"8dff\"\u003eTo address these issues, we applied principles from \u003cem\u003emicrotasking\u003c/em\u003e, leading to a new UI concept we call \u003cstrong\u003eContent-Driven Local Response (CDLR)\u003c/strong\u003e. It restructures the UI for email replies into two steps:\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfigure\u003e\u003cfigcaption\u003eThe redesign: (1) While reading the email, tap any sentence to insert a local reply, optionally with AI sentence suggestions. (2) On a usual draft UI, connect the local replies to one coherent email — or (3) let AI do just that. Image by the author.\u003c/figcaption\u003e\u003c/figure\u003e\u003c/div\u003e\u003cdiv\u003e\u003cul\u003e\u003cli id=\"30b4\"\u003e\u003cstrong\u003eStep 1 — Local response: \u003c/strong\u003eInstead of switching to a separate AI popup, users can insert responses \u003cem\u003edirectly within the email\u003c/em\u003e as they read. In a sense, the email text itself becomes the interface: Tapping a sentence inserts a response card where users can jot down a reply, notes, or keywords. This tap also signals the AI to generate sentence suggestions, which users can accept with a tap or ignore.\u003c/li\u003e\u003cli id=\"34d6\"\u003e\u003cstrong\u003eStep 2 — Connecting the local responses:\u003c/strong\u003e Once users finish reading, they transition to the email draft screen, where all local responses are collected. Here, they can refine these snippets into a full reply manually — or let AI generate a coherent message from them.\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"ff33\"\u003eResult: Flexible workflows and user control\u003c/h2\u003e\u003cp id=\"e9a2\"\u003eWe evaluated this design in a user study with 126 participants, comparing it to two baselines:\u003c/p\u003e\u003cul\u003e\u003cli id=\"8220\"\u003e\u003cstrong\u003eManual replies: \u003c/strong\u003eUsers wrote responses without AI.\u003c/li\u003e\u003cli id=\"d800\"\u003e\u003cstrong\u003eAI-generated replies: \u003c/strong\u003eThis UI mimicked the industry standard of entering a prompt for a fully AI-generated response.\u003c/li\u003e\u003c/ul\u003e\u003cp id=\"ac71\"\u003eOur findings show that Content-Driven Local Response (CDLR) provides a flexible middle ground between these extremes. By allowing users to draft local responses while reading, the design allowed users to \u003cstrong\u003eengage more with the incoming email and their own thoughts on it.\u003c/strong\u003e At the same time, AI support helped reduce typing effort and errors.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eAs our study (N=126) showed, our design (center) involves users more, also while reading. Image by the author.\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"abb0\"\u003eMoreover, participants also valued the added \u003cstrong\u003econtrol\u003c/strong\u003e over the final message. While full AI generation was faster, the new design also covers fast workflows: When preferring a quicker workflow, users can skip the local response step and jump straight to AI drafting. In this way, the new UI supports very flexible workflows.\u003c/p\u003e\u003cblockquote\u003e\u003cp id=\"43ac\"\u003eThis design empowers users to decide when and how to involve AI, for example, to balance speed and control.\u003c/p\u003e\u003c/blockquote\u003e\u003ch2 id=\"af46\"\u003eDesign lessons learned\u003c/h2\u003e\u003cp id=\"81e1\"\u003eA core principle of microtasking is keeping relevant context visible, allowing users to \u003cstrong\u003erecognise \u003c/strong\u003einformation rather than having to \u003cstrong\u003erecall\u003c/strong\u003e it.\u003c/p\u003e\u003cp id=\"422c\"\u003eInitially, we applied this idea to help users see the incoming email while prompting AI and reviewing its output. Through our user-centred design process, we refined it further: the ability to insert local responses while reading is useful on its own — even without AI.\u003c/p\u003e\u003cp id=\"edaf\"\u003ePut as a design insight for AI integration:\u003c/p\u003e\u003cblockquote\u003e\u003cp id=\"b70b\"\u003eRather than adding AI “on top” of existing UIs, we should design for users’ workflows — whether they involve AI or not. Such flexible UIs empower users to decide themselves when and how to involve AI.\u003c/p\u003e\u003c/blockquote\u003e\u003cp id=\"f0be\"\u003eSo how can we redesign for these flexible workflows? Here’s our recipe:\u003c/p\u003e\u003col\u003e\u003cli id=\"44f3\"\u003e\u003cstrong\u003eIdentify micro-decisions that users make in the workflow that currently lack explicit interaction.\u003c/strong\u003e In email replies, this meant recognizing that users naturally decide which parts of an email to respond to while reading.\u003c/li\u003e\u003cli id=\"5046\"\u003e\u003cstrong\u003eEnable users to express these moments in interaction. \u003c/strong\u003eIn our case, we allowed users to tap any sentence while reading.\u003c/li\u003e\u003cli id=\"b48d\"\u003e\u003cstrong\u003eIntegrate AI specifically and optionally at these decision moments\u003c/strong\u003e. For example, in our design, tapping a sentence also triggered (local) suggestions.\u003c/li\u003e\u003c/ol\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv\u003e\u003ch2 id=\"0223\"\u003eResources\u003c/h2\u003e\u003cul\u003e\u003cli id=\"903f\"\u003ePreprint of the paper on arxiv: \u003ca href=\"https://arxiv.org/abs/2502.06430\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ehttps://arxiv.org/abs/2502.06430\u003c/a\u003e\u003c/li\u003e\u003cli id=\"0150\"\u003eVideo showing the UI in action: \u003ca href=\"https://youtu.be/wtTDgU6559I\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003ehttps://youtu.be/wtTDgU6559I\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003cfigure\u003e\u003c/figure\u003e\u003c/div\u003e\u003c/div\u003e\u003c/article\u003e\u003c/div\u003e",
  "readingTime": "7 min read",
  "publishedTime": "2025-03-30T13:04:09.89Z",
  "modifiedTime": null
}
