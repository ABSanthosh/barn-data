{
  "id": "76973cb4-034a-47e8-bd27-9b77174dcf61",
  "title": "Accelerators Maximize Efficiency in User Interfaces",
  "link": "https://www.nngroup.com/articles/ui-accelerators/",
  "description": "Alternate methods for accomplishing frequent actions in user interfaces support expert users by speeding up their interactions, without hindering novice users.",
  "author": "Rachel Krause, Aurora Harley",
  "published": "Fri, 18 Oct 2024 17:00:00 +0000",
  "source": "https://www.nngroup.com/feed/rss/",
  "categories": [
    "Article"
  ],
  "byline": "Aurora Harley, Rachel Krause",
  "length": 9133,
  "excerpt": "Alternate methods for accomplishing frequent actions in user interfaces support expert users by speeding up their interactions, without hindering novice users.",
  "siteName": "Nielsen Norman Group",
  "favicon": "",
  "text": "Summary:  Alternate methods for accomplishing frequent actions in user interfaces support expert users by speeding up their interactions, without hindering novice users. Designing for expert users requires balancing learnability with efficiency. While new users need an intuitive interface to start quickly, expert users demand features that improve speed and productivity over time. Any system that will be repeatedly used should cater to both new users and expert users by including accelerators to allow people to complete certain routine tasks quickly and easily. What Are Accelerators? Examples of Accelerators Discoverability of Accelerators Accelerator-Design Best Practices Conclusion What Are Accelerators? An accelerator is a UI feature that speeds up an interaction or process. Also referred to as shortcuts, accelerators enhance user interfaces by providing an alternate method for accomplishing a specific action and thus allowing expert users to complete a common task more quickly and efficiently. Accelerators should be additional, alternate ways to accomplish a task — something that expert users can take advantage of, but that others can ignore completely. Accelerators make the system more flexible and efficient — one of the ten usability heuristics. A highly flexible system satisfies both experienced and inexperienced users by allowing each to complete an action through whatever method works best for them. Typically, all users hit an efficiency plateau once they have fully learned an interface, where further repetitions of a task do not significantly reduce the task time. Using an accelerator helps expert users push past that plateau: they can become even more efficient by adopting the faster method of completing that same task (once they have learned it, of course). Examples of Accelerators Common accelerators include: Keyboard shortcuts: Ctrl+C for copy, Ctrl+V for paste Gestures: Swipe-to-delete, double-tap to react, right click on a mouse, two-finger scroll on a trackpad Voice commands: “Start bedtime” to a voice assistant Discoverability of Accelerators Because accelerators are enhancements to the interface, discovering them should not be critical to learning and using the interface. In fact, you shouldn’t aim to expose new users to every accelerator, as that would be overwhelming and not helpful. New users just want to get started and complete their tasks — not read user manuals — and they should be allowed to do so. Only those users who have learned the basics and continue using the system should be exposed to the related shortcuts. That said, we can’t know precisely when a user is “ready” to learn an accelerator. Some users may never look for these shortcuts, while others may do so immediately. For that reason, accelerators should be readily available, yet easy to ignore. Incorporate the following strategies when considering the discoverability of accelerators. Gradually Reveal Accelerators as Users Become Accustomed to the System Novice users are focused on completing their primary tasks and will become overwhelmed if accelerators are introduced too early. Let users explore core functionality and reveal accelerators as they become more familiar with the interface. Provide Contextual Hints For less-obvious shortcuts, it’s best to introduce accelerators after a user performs the action in the standard way. Just-in-time help (also called push revelations) makes it more likely that users will attend to the tip since it relates to their current task. Focus on a single action at a time using short, scannable messages. Slack’s mobile app displays this tip after reacting to a message. Display Keyboard Shortcuts Inline Common shortcuts should be visible and easily accessible in the interface. Style them in a way that differentiates them from the corresponding GUI-command label. For example, you might right-align shortcuts next to the corresponding action in a dropdown menu or show them in parentheses. Different styling allows expert users to quickly spot them while novice users can ignore them. Intercom’s web app displays associated keyboard shortcuts right-aligned next to each action. Show Accelerators Within a Tooltip or Hover You can also provide the accelerator in a tooltip or hover. While this approach will help users discover the accelerators without disrupting their workflow, hover actions won’t work for users who do not use a mouse (e.g., because of physical limitations or because they use a touchscreen). Dovetail provides a keyboard shortcut, G, next to the icon label when a user hovers over the button. Place Complex Accelerators in Multiple Locations Macros and automation tools will be more discoverable if found in multiple places, such as menus, toolbars, or setup screens. Create Cheat Sheets for Expert Users A last resort is to create a list of all shortcuts, accessible within the Help or Support documentation. Such a list is not very discoverable, as most users don’t seek this type of information out but can be helpful for expert users who want to see everything available to them quickly. Shopify provides a cheat sheet of all keyboard shortcuts organized by workflow. Accelerator-Design Best Practices Not all actions within a system need an accelerator. Focus on those features that many people tend to use repeatedly. Ask yourself: What are the core actions within the system? Increasing efficiency and productivity really matters only for repeat tasks; thus, these routine actions are good candidates for adding an accelerator. Learning requires repetition, so people will learn a shortcut better if it is an action they repeat often. Keep in mind that an accelerator is not a new feature — it is merely an additional way of completing an existing action. Those users who never discover the accelerator should be able to complete the same task in another way. Prioritize Efficiency Without Overwhelming Users Accelerators should be designed for tasks that users perform frequently. For example, keyboard shortcuts for common actions — such as copy, paste, and save — improve efficiency and reduce repetition. However, too many accelerators in an interface can overwhelm users, especially those new to an application. Start with the most used actions and introduce additional accelerators gradually as users become more familiar with the interface. Expert users may even benefit from customized accelerators to fit their specific workflows. Adobe InDesign allows expert users to add and modify keyboard shortcuts based on desired workflows. This dialog is nested in the Edit menu (and thus not easily discoverable); however, that is okay since such shortcuts are likely used only by a fraction of users. Maintain Consistency Across Platforms When designing cross-platform applications (web, mobile, desktop), make sure that common shortcuts and gestures are consistent across platforms. For example, a double-tap-to-react feature should work the same in a mobile app as it does on a responsive website to avoid confusing users who switch interaction channels. Instagram uses the same double-tap gesture both on its web app (when displayed on a touch device — left) and in its mobile app (right). Both actions animate in the same way. Do not override commonly known shortcuts, such as those for copy, paste, select all, and print, to prevent errors and accelerate learning of the interface. You can also take advantage of platform-specific gestures, such as long press, swipe, or double tap on mobile devices. Provide Visual Cues and Feedback Tooltips, hover states, or contextual hints are great ways to teach users about accelerators without overwhelming them. For example, hovering over a button can reveal its corresponding keyboard shortcut, while a tooltip can introduce touch gestures or complex commands. Regardless of how you introduce an accelerator, always provide feedback to users that the action has been successfully completed. You can do this with an animation, highlight, or confirmation message. Gmail’s mobile app: Swiping on a message is an accelerator for archiving the message (left). After the message is archived, a snackbar confirms that the message was successfully archived and also displays an option to undo the action if it was done in error. Design for Error Prevention and Recovery Provide a safety net for users to undo actions performed via accelerators on the off chance that they triggered them accidentally. A confirmation dialog not only reassures the user that their action was correct (as shown above) but also serves to prevent unintended actions that could lead to data loss or significant changes. Conclusion Repeat users who are already familiar with an interface want to be efficient, whereas novice users need the interface to be as explicit as possible so they can find their way around. Accelerators help balance the needs of both types of users and enhance an interface by giving them control over completing an action. This is what makes a system highly flexible — and ultimately widely usable.",
  "image": "https://media.nngroup.com/media/articles/opengraph_images/Social-Cards-Accelerators-opengraph.jpg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cp\u003e\u003cspan\u003e\n                  Summary: \n                \u003c/span\u003eAlternate methods for accomplishing frequent actions in user interfaces support expert users by speeding up their interactions, without hindering novice users.\n            \u003c/p\u003e\u003cdiv\u003e\n                \u003cp\u003eDesigning for expert users requires \u003cstrong\u003ebalancing \u003c/strong\u003e\u003ca href=\"https://www.nngroup.com/articles/measure-learnability/\"\u003e\u003cstrong\u003elearnability\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e with efficiency\u003c/strong\u003e. While new users need an intuitive interface to start quickly, expert users demand features that improve speed and productivity over time. Any system that will be repeatedly used should cater to both new users and expert users by including\u003cstrong\u003e accelerators\u003c/strong\u003e to allow people to complete certain routine tasks quickly and easily.\u003c/p\u003e\n\u003cdiv\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-what-are-accelerators-1\"\u003eWhat Are Accelerators?\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-examples-of-accelerators-2\"\u003eExamples of Accelerators\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-discoverability-of-accelerators-3\"\u003eDiscoverability of Accelerators\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-accelerator-design-best-practices-4\"\u003eAccelerator-Design Best Practices\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-conclusion-5\"\u003eConclusion\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e\u003ch2 id=\"toc-what-are-accelerators-1\"\u003eWhat Are Accelerators?\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAn \u003cstrong\u003eaccelerator\u003c/strong\u003e is a UI feature that speeds up an interaction or process.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eAlso referred to as \u003cstrong\u003eshortcuts\u003c/strong\u003e, accelerators \u003ca href=\"https://www.nngroup.com/articles/enhancement/\"\u003eenhance user interfaces\u003c/a\u003e by providing an alternate method for accomplishing a specific action and thus allowing expert users to \u003cstrong\u003ecomplete a common task more quickly\u003c/strong\u003e and efficiently. Accelerators should be \u003cstrong\u003eadditional, alternate ways to accomplish a task\u003c/strong\u003e — something that expert users can take advantage of, but that others can ignore completely.\u003c/p\u003e\n\u003cp\u003eAccelerators make the system more \u003cstrong\u003eflexible and efficient\u003c/strong\u003e — one of the \u003ca href=\"https://www.nngroup.com/articles/ten-usability-heuristics/\"\u003eten usability heuristics\u003c/a\u003e. A \u003ca href=\"https://www.nngroup.com/videos/flexibility-efficiency-use/\"\u003ehighly flexible system\u003c/a\u003e satisfies both experienced and inexperienced users by allowing each to complete an action through whatever method works best for them.\u003c/p\u003e\n\u003cp\u003eTypically, all users hit an \u003ca href=\"https://www.nngroup.com/articles/measure-learnability/\"\u003eefficiency plateau\u003c/a\u003e once they have fully learned an interface, where further repetitions of a task do not significantly reduce the task time. Using an accelerator \u003cstrong\u003ehelps expert users push past that plateau:\u003c/strong\u003e they can become even more efficient by adopting the faster method of completing that same task (once they have learned it, of course).\u003c/p\u003e\n\u003ch2 id=\"toc-examples-of-accelerators-2\"\u003eExamples of Accelerators\u003c/h2\u003e\n\u003cp\u003eCommon accelerators include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.nngroup.com/articles/ui-copy/\"\u003e\u003cstrong\u003eKeyboard shortcuts\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e:\u003c/strong\u003e Ctrl+C for copy, Ctrl+V for paste\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.nngroup.com/articles/contextual-swipe/\"\u003e\u003cstrong\u003eGestures\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e:\u003c/strong\u003e Swipe-to-delete, double-tap to react, right click on a mouse, two-finger scroll on a trackpad\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.nngroup.com/articles/audio-signifiers-voice-interaction/\"\u003e\u003cstrong\u003eVoice commands\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e: \u003c/strong\u003e“Start bedtime” to a voice assistant\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"toc-discoverability-of-accelerators-3\"\u003eDiscoverability of Accelerators\u003c/h2\u003e\n\u003cp\u003eBecause accelerators are enhancements to the interface, \u003cstrong\u003ediscovering them should not be critical\u003c/strong\u003e \u003cstrong\u003eto learning and using the interface\u003c/strong\u003e. In fact, you shouldn’t aim to expose new users to every accelerator, as that would be overwhelming and not helpful. \u003ca href=\"https://www.nngroup.com/articles/paradox-of-the-active-user/\"\u003eNew users just want to get started\u003c/a\u003e and complete their tasks — not read user manuals — and they should be allowed to do so. Only those users who have learned the basics and continue using the system should be exposed to the related shortcuts.\u003c/p\u003e\n\u003cp\u003eThat said, we can’t know precisely when a user is “ready” to learn an accelerator. Some users may never look for these shortcuts, while others may do so immediately. For that reason, accelerators should be readily \u003cstrong\u003eavailable, yet easy to ignore\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eIncorporate the following strategies when considering the discoverability of accelerators.\u003c/p\u003e\n\u003ch3\u003eGradually Reveal Accelerators as Users Become Accustomed to the System\u003c/h3\u003e\n\u003cp\u003eNovice users are focused on completing their primary tasks and will become overwhelmed if accelerators are introduced too early. Let users explore core functionality and reveal accelerators as they become more familiar with the interface.\u003c/p\u003e\n\u003ch3\u003eProvide Contextual Hints\u003c/h3\u003e\n\u003cp\u003eFor less-obvious shortcuts, it’s best to introduce accelerators after a user performs the action in the standard way. Just-in-time help (also called \u003ca href=\"https://www.nngroup.com/articles/onboarding-tutorials/\"\u003e\u003cstrong\u003epush revelations\u003c/strong\u003e\u003c/a\u003e) makes it more likely that users will attend to the tip since it relates to their current task. Focus on a single action at a time using short, scannable messages.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"A messaging app with a purple banner that reads \u0026#34;Add a quick reaction. Tap and hold on a message to add an emoji reaction.\u0026#34;\" height=\"320\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2024/10/07/slack.png\" width=\"600\"/\u003e\n\u003cfigcaption\u003eSlack’s mobile app displays this tip after reacting to a message.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch3\u003eDisplay Keyboard Shortcuts Inline\u003c/h3\u003e\n\u003cp\u003eCommon shortcuts should be visible and easily accessible in the interface. Style them in a way that differentiates them from the corresponding GUI-command label. For example, you might right-align shortcuts next to the corresponding action in a dropdown menu or show them in parentheses. Different styling allows expert users to quickly spot them while novice users can ignore them.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"A \u0026#34;Search actions\u0026#34; menu with various shortcut options. The first option, \u0026#34;Compose note,\u0026#34; is highlighted, showing the shortcut key \u0026#34;N.\u0026#34; Other options include \u0026#34;Use macro,\u0026#34; \u0026#34;Insert gif,\u0026#34; \u0026#34;Close,\u0026#34; \u0026#34;Snooze,\u0026#34; \u0026#34;Upload attachment,\u0026#34; and \u0026#34;Insert emoji,\u0026#34; each with corresponding keyboard shortcuts.\" height=\"550\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2024/10/07/intercom.png\" width=\"864\"/\u003e\n\u003cfigcaption\u003eIntercom’s web app displays associated keyboard shortcuts right-aligned next to each action.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch3\u003eShow Accelerators Within a Tooltip or Hover\u003c/h3\u003e\n\u003cp\u003eYou can also provide the accelerator in a tooltip or hover. While this approach will help users discover the accelerators without disrupting their workflow, hover actions won’t work for users who do not use a mouse (e.g., because of physical limitations or because they use a touchscreen).\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"The highlighted icon displays \u0026#34;Add a group\u0026#34; with the shortcut key \u0026#34;G\u0026#34; shown.\" height=\"701\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2024/10/07/dovetail.png\" width=\"415\"/\u003e\n\u003cfigcaption\u003eDovetail provides a keyboard shortcut, G, next to the icon label when a user hovers over the button.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch3\u003ePlace Complex Accelerators in Multiple Locations\u003c/h3\u003e\n\u003cp\u003eMacros and automation tools will be more discoverable if found in multiple places, such as menus, toolbars, or setup screens.\u003c/p\u003e\n\u003ch3\u003eCreate Cheat Sheets for Expert Users\u003c/h3\u003e\n\u003cp\u003eA last resort is to create a list of all shortcuts, accessible within the \u003cem\u003eHelp\u003c/em\u003e or \u003cem\u003eSupport\u003c/em\u003e documentation. Such a list is not very discoverable, as most users don’t seek this type of information out but can be helpful for expert users who want to see everything available to them quickly.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"A large list of keyboard shortcuts, divided into three sections: \u0026#34;General shortcuts,\u0026#34; \u0026#34;Navigating your admin panel,\u0026#34; and \u0026#34;Navigating settings.\u0026#34; Each section has various shortcut key combinations for specific actions.\" height=\"1109\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2024/10/07/shopify.png\" width=\"1294\"/\u003e\n\u003cfigcaption\u003eShopify provides a cheat sheet of all keyboard shortcuts organized by workflow.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch2 id=\"toc-accelerator-design-best-practices-4\"\u003eAccelerator-Design Best Practices\u003c/h2\u003e\n\u003cp\u003eNot all actions within a system need an accelerator. Focus on those\u003cstrong\u003e features\u003c/strong\u003e that many people tend to \u003cstrong\u003euse repeatedly\u003c/strong\u003e. Ask yourself: What are the \u003ca href=\"https://www.nngroup.com/videos/top-tasks-ux-design/\"\u003ecore actions\u003c/a\u003e within the system? Increasing efficiency and productivity really matters only for repeat tasks; thus, these routine actions are good candidates for adding an accelerator. \u003ca href=\"https://www.nngroup.com/articles/power-law-learning/\"\u003eLearning requires repetition\u003c/a\u003e, so people will learn a shortcut better if it is an action they repeat often.\u003c/p\u003e\n\u003cp\u003eKeep in mind that an accelerator is \u003cem\u003enot\u003c/em\u003e a new feature — it is merely an additional way of completing an existing action. Those users who never discover the accelerator should be able to complete the same task in another way.\u003c/p\u003e\n\u003ch3\u003ePrioritize Efficiency Without Overwhelming Users\u003c/h3\u003e\n\u003cp\u003eAccelerators should be designed for tasks that users perform frequently. For example, keyboard shortcuts for common actions — such as copy, paste, and save — improve efficiency and reduce repetition.\u003c/p\u003e\n\u003cp\u003eHowever, too many accelerators in an interface can overwhelm users, especially those new to an application. Start with the most used actions and introduce additional accelerators gradually as users become more familiar with the interface. Expert users may even benefit from customized accelerators to fit their specific workflows.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"GPT  A dialog box titled \u0026#34;Keyboard Shortcuts\u0026#34; with multiple options.\" height=\"658\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2024/10/07/indesign.png\" width=\"936\"/\u003e\n\u003cfigcaption\u003eAdobe InDesign allows expert users to add and modify keyboard shortcuts based on desired workflows. This dialog is nested in the Edit menu (and thus not easily discoverable); however, that is okay since such shortcuts are likely used only by a fraction of users.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch3\u003eMaintain Consistency Across Platforms\u003c/h3\u003e\n\u003cp\u003eWhen designing cross-platform applications (web, mobile, desktop), make sure that common shortcuts and gestures are consistent across platforms. For example, a double-tap-to-react feature should work the same in a mobile app as it does on a responsive website to avoid confusing users who switch interaction channels.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"A side-by-side comparison of an Instagram post, each with a heart icon indicating the user has \u0026#34;liked\u0026#34; the post.\" height=\"442\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2024/10/07/instagram-comparison.png\" width=\"662\"/\u003e\n\u003cfigcaption\u003eInstagram uses the same double-tap gesture both on its web app (when displayed on a touch device — left) and in its mobile app (right). Both actions animate in the same way.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003cp\u003eDo not override commonly known shortcuts, such as those for copy, paste, select all, and print, to prevent errors and accelerate learning of the interface. You can also take advantage of platform-specific gestures, such as long press, swipe, or double tap on mobile devices.\u003c/p\u003e\n\u003ch3\u003eProvide Visual Cues and Feedback\u003c/h3\u003e\n\u003cp\u003eTooltips, hover states, or contextual hints are great ways to teach users about accelerators without overwhelming them. For example, hovering over a button can reveal its corresponding keyboard shortcut, while a tooltip can introduce touch gestures or complex commands.\u003c/p\u003e\n\u003cp\u003eRegardless of how you introduce an accelerator, always \u003ca href=\"https://www.nngroup.com/articles/indicators-validations-notifications/\"\u003eprovide feedback\u003c/a\u003e to users that the action has been successfully completed. You can do this with an animation, highlight, or confirmation message.\u003c/p\u003e\n\u003cfigure\u003e\u003cimg alt=\"Two screenshots of an email interface. On the left, a message is highlighted in green with an archive icon. On the right, the message is archived with an \u0026#34;Undo\u0026#34; option displayed in a white bar at the bottom.\" height=\"774\" loading=\"lazy\" src=\"https://media.nngroup.com/media/editor/2024/10/07/gmail.png\" width=\"1758\"/\u003e\n\u003cfigcaption\u003eGmail’s mobile app: Swiping on a message is an accelerator for archiving the message (left). After the message is archived, a snackbar confirms that the message was successfully archived and also displays an option to undo the action if it was done in error.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003ch3\u003eDesign for \u003ca href=\"https://www.nngroup.com/videos/usability-heuristic-error-prevention/\"\u003eError Prevention\u003c/a\u003e and Recovery\u003c/h3\u003e\n\u003cp\u003eProvide a safety net for users to undo actions performed via accelerators on the off chance that they triggered them accidentally. A confirmation dialog not only reassures the user that their action was correct (as shown above) but also serves to prevent unintended actions that could lead to data loss or significant changes.\u003c/p\u003e\n\u003ch2 id=\"toc-conclusion-5\"\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eRepeat users who are already familiar with an interface want to be efficient, whereas novice users need the interface to be as explicit as possible so they can find their way around. Accelerators help balance the needs of both types of users and enhance an interface by giving them control over completing an action. This is what makes a system highly flexible — and ultimately widely usable.\u003c/p\u003e\n            \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "10 min read",
  "publishedTime": "2024-10-18T17:00:00Z",
  "modifiedTime": null
}
