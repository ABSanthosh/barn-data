{
  "id": "65b59a99-b2ba-4e20-8614-be3c32be38dd",
  "title": "Supporting “Power Users” Isn’t Enough: 3 Complex-App User Types",
  "link": "https://www.nngroup.com/articles/complex-apps-users/?utm_source=rss\u0026utm_medium=feed\u0026utm_campaign=rss-syndication",
  "description": "Complex-app users don’t always fit neatly into “novice” or “expert” labels. Designing for Legacy, Legend, and Learner users leads to more inclusive, effective systems.",
  "author": "Kate Kaplan",
  "published": "Fri, 27 Jun 2025 17:00:00 +0000",
  "source": "https://www.nngroup.com/feed/rss/",
  "categories": [
    "Article"
  ],
  "byline": "Kate Kaplan",
  "length": 11390,
  "excerpt": "Complex-app users don’t always fit neatly into “novice” or “expert” labels. Designing for Legacy, Legend, and Learner users leads to more inclusive, effective systems.",
  "siteName": "Nielsen Norman Group",
  "favicon": "",
  "text": "Summary:  Complex-app users don’t always fit neatly into “novice” or “expert” labels. Designing for Legacy, Legend, and Learner users leads to more inclusive, effective systems. When designing complex applications, practitioners often feel pressure to center efforts around “power” users: highly trained professionals with deep domain knowledge and years of experience using the software in question. While these expert users are important, focusing solely on them means overlooking other critical user types. This tendency reflects a deeper issue: the overly simplistic assumption that complex-app users fall into one of two categories: either novices or experts. In reality, this binary framing fails to account for the users who don't fit cleanly into either category — such as long-term users who never achieved deep system mastery, or domain experts who are new to the software and still learning how to navigate complex workflows. Failing to recognize these nuances results in exclusionary design, inefficient workflows, and missed opportunities to improve user experience. Three Complex Apps User Types 1. The Legacy 2. The Legend 3. The Learner Balancing All Three User Types Three Complex Apps User Types To move beyond the novice-expert binary, we need a more nuanced understanding of how people actually engage with complex applications. Complex applications are systems designed to support specialized workflows, often involving multiple user roles, advanced configurations, and domain-specific operations.  These tools demand higher levels of cognitive load and feature density compared to typical consumer apps, and they attract a broad range of users whose experience with the software varies widely. When I coach people to design better complex applications, I highlight three distinct complex-app user profiles whose needs, behaviors, and limitations are often misunderstood or overlooked. The Legacy: The long-term user with deep familiarity but low efficiency The Legend: The power user who has achieved expert-level proficiency The Learner: The domain expert who is new to the software and still building system knowledge Each of these user types presents distinct design challenges and opportunities that are often overlooked in design decisions and roadmap planning. 1. The Legacy A legacy user has used the software for years or even decades but hasn’t become truly efficient. Longevity has not translated into true system expertise or understanding. We often mistake legacy users for power users, assuming that frequent and long-term use equates to deep system expertise. However, many of these users continue using the system inefficiently for decades, learning and utilizing only what they need to get by, rather than the system as a whole. Legacy users often: Use rigid, familiar methods to accomplish tasks Avoid customization and stick to system defaults Use only a narrow slice of the application’s features Develop workarounds (e.g., bookmarks, personal notes, manual processes) How Legacy Users Are Left Behind Legacy users are often viewed as resistant to change. The assumption is that they simply don’t want to learn new methods and fear any design modifications, optimizations, or usability improvements. But, in reality, what they often fear is loss of productivity, not change itself.  Many of these users have adapted to suboptimal workflows over time and are wary of changes that disrupt what little efficiency they have established.  As one complex-apps practitioner explained, this resistance often stems from deep habits and experience with the existing system: It wasn't what they were used to. There was that resistance to change. They have great muscle memory. They have great experience. They know workarounds on how to maneuver or how to operate certain things. These ingrained behaviors can make it difficult for legacy users to recognize inefficiencies or adapt to new workflows, even when those workflows are objectively better designed. How to Support Legacy Users Supporting legacy users means recognizing that familiarity doesn’t always equal mastery, and that productivity, not resistance, is often at the heart of their hesitation. The key is to introduce improvements with change-aversion in mind — in a way that feels safe, respectful of their workflows, and clearly beneficial.  To support legacy users: Avoid sudden, large-scale UI changes that disrupt learned behaviors Communicate upcoming changes early and clearly Provide the option to keep legacy views or workflows during transition periods Offer low-risk beta environments to explore new features Involve them in usability testing and rollout feedback loops Emphasize feature discoverability, especially for time-saving shortcuts 2. The Legend A legend user is a system expert who has reached a high level of efficiency and fluency within the application. They’ve mastered shortcuts, customized their workflows, and are often deeply embedded in user communities or advisory roles. We often hear from legend users the most through channels such as forums, beta launches, and customer advisory groups. Their influence can be substantial, and their requests often reflect deep technical understanding and a desire for even greater user control and freedom. Legends often: Use keyboard shortcuts, macros, and accelerators extensively Advocate for advanced features and customization Desire and request greater flexibility in workflows and outputs Engage heavily in feedback channels, user communities, or advisory boards How Legend Users Are Left Behind Legend users introduce two different but significant risks. First, their feedback may be over-prioritized (either due to their willingness to vocalize their desires or insistence from the business that they are the most “valuable” users). While their input is valuable, over-prioritizing it can skew product decisions toward edge-case, high-effort features that don't benefit the broader user base. This risks bloated features and added complexity for everyone else. Second, their continued usage of the system is often taken for granted by the business. It's easy to assume that because they’ve mastered the system, they’ll remain loyal. But even legends have limits. When they hit a performance ceiling — or see better, more efficient tools emerge elsewhere — they may abandon the product in search of greater speed, flexibility, or control. One complex-app practitioner reflected on this competitive pressure from newer, more agile tools: A lot of other technologies have been innovative and disruptive in the last 15 years. More [companies] have been able to create their own tools and software, and it's like, ‘Wow, you can really get going and do things way faster and easier [with other tools].’ If organizations assume legend users will always stay loyal, they risk overlooking the very real need to continually improve performance and usability for this group. How to Support Legend Users Supporting legend users means treating them not just as vocal power users, but as valuable early indicators of system limitations and opportunities. They need continued innovation to stay engaged, and product teams need to listen with discernment, balancing their input with broader user needs. To support legend users: Don’t assume loyalty; continue to innovate and optimize Conduct regular competitive audits to understand what other tools offer Provide advanced features without compromising core usability Invite legend users into early betas or pilot programs to test high-efficiency features Recognize and celebrate their contributions, but avoid letting their preferences overrule broader design priorities 3. The Learner The learner is new to the system but not the domain. They bring deep subject-matter expertise but limited familiarity with the system’s workflows, features, and capabilities. We often assume that learners will simply “figure it out” through training or forced repetition. But without early support, these users may never gain the confidence or fluency needed to use the system effectively. Worse, they may develop workarounds that bypass core features, or disengage entirely due to mistrust in the system. Learners often: Learn by doing, diving into the interface without any true onboarding Struggle with discovering key functions or the most efficient workflows Lack confidence in whether they are using the system correctly Misunderstand system capabilities or misinterpret outputs due to gaps in system knowledge How Learners Are Marginalized Learners are frequently dismissed with the assumption that their struggles are “training issues” — that if they just had more instruction, they’d succeed. One practitioner summarized the prevailing attitude as: [Leaders] oftentimes think that it's still the idea of, ‘Well, people go to school to learn how to use our stuff, so we don't really have to worry about that part of the user experience.’ But this mindset shifts the burden of usage from design to users. While training may supplement the learning process, even great training and documentation cannot compensate for poor usability or unintuitive workflows. If learners aren’t supported during their first encounters with the system, they may never progress to true efficiency or expertise. They will remain dependent, error-prone, and at risk of churning, or worse, transition into Legacy users who never truly master the tool. How to Support Learners Supporting learners requires a strong focus on initial usability and progressive learning. It’s about shortening the path from initial usage to proficient usage without relying on a formal training program to bridge the gap. Consider the following tactics to support this group: Prioritize learnability in design Use inline help, onboarding flows, and just-in-time tips Avoid relying on dense documentation or external training programs Create safe environments (e.g., sandboxes or templates) to encourage low-risk exploration Provide meaningful error messages that include actionable next steps Conduct longitudinal usability testing to observe learning over time Balancing All Three User Types Designing successful complex applications means more than choosing whether to support novice or expert users. That question presents a false dichotomy.  In reality, sustainable product success that delivers on business goals — from long-term user retention to reduced churn and higher satisfaction — requires thoughtful support for all three user types. Each represents a different point on the user journey, and each offers critical insights for improving the system as a whole. Each group offers unique insights: Learners reveal where onboarding, discoverability, and digital content (including domain-specific language) need improvement Legacies highlight which features remain unwanted, underutilized, or unnecessarily complex Legends surface opportunities for deep feature use, innovation, automation, and long-term efficiency gains These users should not be treated as static categories. A learner can become a legend — or a legacy — depending on the support they receive and the design choices made over time. Designing for just one of these groups creates long-term risk. Supporting all three builds a more resilient, effective, and loyal user base.",
  "image": "https://media.nngroup.com/media/articles/opengraph_images/Power-Users_Opengraph-38.png",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cp\u003e\u003cspan\u003e\n                  Summary: \n                \u003c/span\u003eComplex-app users don’t always fit neatly into “novice” or “expert” labels. Designing for Legacy, Legend, and Learner users leads to more inclusive, effective systems.\n              \u003c/p\u003e\u003cdiv\u003e\n              \u003cp\u003eWhen designing complex applications, practitioners often feel pressure to center efforts around “power” users: highly trained professionals with deep domain knowledge and years of experience using the software in question. While these expert users are important, focusing solely on them means overlooking other critical user types.\u003c/p\u003e\n\u003cp\u003eThis tendency reflects a deeper issue: the overly simplistic assumption that complex-app users fall into one of two categories: either novices or experts. In reality, this binary framing fails to account for the users who don\u0026#39;t fit cleanly into either category — such as long-term users who never achieved deep system mastery, or domain experts who are new to the software and still learning how to navigate complex workflows. Failing to recognize these nuances results in exclusionary design, inefficient workflows, and missed opportunities to improve user experience.\u003c/p\u003e\n\u003cdiv\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-three-complex-apps-user-types-1\"\u003eThree Complex Apps User Types\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-1-the-legacy-2\"\u003e1. The Legacy\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-2-the-legend-3\"\u003e2. The Legend\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-3-the-learner-4\"\u003e3. The Learner\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#toc-balancing-all-three-user-types-5\"\u003eBalancing All Three User Types\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e\u003ch2 id=\"toc-three-complex-apps-user-types-1\"\u003eThree Complex Apps User Types\u003c/h2\u003e\n\u003cp\u003eTo move beyond the novice-expert binary, we need a more nuanced understanding of how people actually engage with complex applications.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"https://www.nngroup.com/articles/complex-application-design-framework/\"\u003e\u003cstrong\u003eComplex applications\u003c/strong\u003e\u003c/a\u003e are systems designed to support specialized workflows, often involving multiple user roles, advanced configurations, and domain-specific operations. \u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThese tools demand higher levels of cognitive load and feature density compared to typical consumer apps, and they attract a broad range of users whose experience with the software varies widely.\u003c/p\u003e\n\u003cp\u003eWhen I coach people to design better complex applications, \u003cstrong\u003eI highlight three distinct complex-app user profiles\u003c/strong\u003e whose needs, behaviors, and limitations are often misunderstood or overlooked.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eThe Legacy:\u003c/strong\u003e The long-term user with deep familiarity but low efficiency\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eThe Legend:\u003c/strong\u003e The power user who has achieved expert-level proficiency\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eThe Learner:\u003c/strong\u003e The domain expert who is new to the software and still building system knowledge\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eEach of these user types presents distinct design challenges and opportunities that are often overlooked in design decisions and \u003ca href=\"https://www.nngroup.com/articles/ux-roadmaps/\"\u003eroadmap\u003c/a\u003e planning.\u003c/p\u003e\n\u003ch2 id=\"toc-1-the-legacy-2\"\u003e1. The Legacy\u003c/h2\u003e\n\u003cp\u003eA legacy user has used the software for years or even decades but hasn’t become truly efficient. Longevity has not translated into true system expertise or understanding. We \u003cstrong\u003eoften mistake legacy users for power users,\u003c/strong\u003e assuming that frequent and long-term use equates to deep system expertise. However, many of these users continue using the system inefficiently for decades, learning and utilizing only what they need to get by, rather than the system as a whole.\u003c/p\u003e\n\u003cp\u003eLegacy users often:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse rigid, familiar methods to accomplish tasks\u003c/li\u003e\n\u003cli\u003eAvoid \u003ca href=\"https://www.nngroup.com/articles/customization-personalization/\"\u003ecustomization\u003c/a\u003e and stick to system \u003ca href=\"https://www.nngroup.com/articles/the-power-of-defaults/\"\u003edefaults\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eUse only a narrow slice of the application’s features\u003c/li\u003e\n\u003cli\u003eDevelop workarounds (e.g., bookmarks, personal notes, manual processes)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHow Legacy Users Are Left Behind\u003c/h3\u003e\n\u003cp\u003eLegacy users are often viewed as resistant to change. The assumption is that they simply don’t want to learn new methods and fear any design modifications, optimizations, or usability improvements. \u003cstrong\u003eBut, in reality, what they often fear is loss of productivity, not change itself. \u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eMany of these users have adapted to suboptimal workflows over time and are wary of \u003ca href=\"https://www.nngroup.com/articles/power-law-learning/\"\u003echanges that disrupt what little efficiency they have established\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003eAs one complex-apps practitioner explained, this resistance often stems from deep habits and experience with the existing system:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003eIt wasn\u0026#39;t what they were used to. There was that resistance to change. They have great muscle memory. They have great experience. They know workarounds on how to maneuver or how to operate certain things.\u003c/em\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThese ingrained behaviors can make it difficult for legacy users to recognize inefficiencies or adapt to new workflows, even when those workflows are objectively better designed.\u003c/p\u003e\n\u003ch3\u003eHow to Support Legacy Users\u003c/h3\u003e\n\u003cp\u003eSupporting legacy users means recognizing that familiarity doesn’t always equal mastery, and that productivity, not resistance, is often at the heart of their hesitation. The key is to \u003ca href=\"https://www.nngroup.com/videos/users-hate-change/\"\u003eintroduce improvements with change-aversion in mind\u003c/a\u003e — in a way that feels safe, respectful of their workflows, and clearly beneficial. \u003c/p\u003e\n\u003cp\u003eTo support legacy users:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eAvoid sudden, large-scale UI changes\u003c/strong\u003e that disrupt learned behaviors\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eCommunicate upcoming changes\u003c/strong\u003e early and clearly\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eProvide the option\u003c/strong\u003e to keep legacy views or workflows during transition periods\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eOffer low-risk beta environments\u003c/strong\u003e to explore new features\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eInvolve them in \u003c/strong\u003e\u003ca href=\"https://www.nngroup.com/videos/usability-testing-101/\"\u003e\u003cstrong\u003eusability testing\u003c/strong\u003e\u003c/a\u003e and rollout feedback loops\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eEmphasize feature \u003c/strong\u003e\u003ca href=\"https://www.nngroup.com/videos/findability-vs-discoverability/\"\u003e\u003cstrong\u003ediscoverability\u003c/strong\u003e\u003c/a\u003e, especially for time-saving shortcuts\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"toc-2-the-legend-3\"\u003e2. The Legend\u003c/h2\u003e\n\u003cp\u003eA legend user is a system expert who has reached a high level of efficiency and fluency within the application. They’ve mastered \u003ca href=\"https://www.nngroup.com/articles/ui-accelerators/\"\u003eshortcuts\u003c/a\u003e, customized their workflows, and are often deeply embedded in user communities or advisory roles.\u003c/p\u003e\n\u003cp\u003eWe often hear from legend users the most through channels such as forums, beta launches, and customer advisory groups. \u003cstrong\u003eTheir influence can be substantial,\u003c/strong\u003e and their requests often reflect deep technical understanding and a desire for even greater \u003ca href=\"https://www.nngroup.com/articles/user-control-and-freedom/\"\u003euser control and freedom\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eLegends often:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse keyboard shortcuts, macros, and accelerators extensively\u003c/li\u003e\n\u003cli\u003eAdvocate for advanced features and customization\u003c/li\u003e\n\u003cli\u003eDesire and request greater flexibility in workflows and outputs\u003c/li\u003e\n\u003cli\u003eEngage heavily in feedback channels, user communities, or advisory boards\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHow Legend Users Are Left Behind\u003c/h3\u003e\n\u003cp\u003eLegend users introduce two different but significant risks.\u003c/p\u003e\n\u003cp\u003eFirst, their feedback may be over-prioritized (either due to their willingness to vocalize their desires or insistence from the business that they are the most “valuable” users). While their input is valuable, over-prioritizing it can skew product decisions toward edge-case, high-effort features that don\u0026#39;t benefit the broader user base. This risks bloated features and added complexity for everyone else.\u003c/p\u003e\n\u003cp\u003eSecond, their continued usage of the system is often taken for granted by the business. It\u0026#39;s easy to assume that because they’ve mastered the system, they’ll remain loyal. But even legends have limits\u003cstrong\u003e. When they hit a performance ceiling\u003c/strong\u003e — or see better, more efficient tools emerge elsewhere — \u003cstrong\u003ethey may abandon the product \u003c/strong\u003ein search of greater speed, flexibility, or control.\u003c/p\u003e\n\u003cp\u003eOne complex-app practitioner reflected on this competitive pressure from newer, more agile tools:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003eA lot of other technologies have been innovative and disruptive in the last 15 years. More [companies] have been able to create their own tools and software, and it\u0026#39;s like, ‘Wow, you can really get going and do things way faster and easier [with other tools].’\u003c/em\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eIf organizations assume legend users will always stay loyal, they risk overlooking the very real need to continually improve performance and usability for this group.\u003c/p\u003e\n\u003ch3\u003eHow to Support Legend Users\u003c/h3\u003e\n\u003cp\u003eSupporting legend users means treating them not just as vocal power users, but as \u003cstrong\u003evaluable early indicators of system limitations and opportunities\u003c/strong\u003e. They need continued innovation to stay engaged, and product teams need to listen with discernment, balancing their input with broader user needs.\u003c/p\u003e\n\u003cp\u003eTo support legend users:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eDon’t assume loyalty;\u003c/strong\u003e continue to innovate and optimize\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eConduct regular competitive audits\u003c/strong\u003e to understand what other tools offer\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eProvide advanced features\u003c/strong\u003e without compromising core usability\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eInvite legend users into early betas\u003c/strong\u003e or pilot programs to test high-efficiency features\u003c/li\u003e\n\u003cli\u003eRecognize and celebrate their contributions, but \u003cstrong\u003eavoid letting their preferences overrule \u003c/strong\u003ebroader design priorities\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"toc-3-the-learner-4\"\u003e3. The Learner\u003c/h2\u003e\n\u003cp\u003eThe learner is new to the system but not the domain. They bring deep subject-matter expertise but limited familiarity with the system’s workflows, features, and capabilities.\u003c/p\u003e\n\u003cp\u003eWe often assume that learners will simply “figure it out” through training or forced repetition. But without early support, these users may never gain the confidence or fluency needed to use the system effectively. Worse, they may develop workarounds that bypass core features, or disengage entirely due to mistrust in the system.\u003c/p\u003e\n\u003cp\u003eLearners often:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eLearn by doing, diving into the interface without any true onboarding\u003c/li\u003e\n\u003cli\u003eStruggle with discovering key functions or the most efficient workflows\u003c/li\u003e\n\u003cli\u003eLack confidence in whether they are using the system correctly\u003c/li\u003e\n\u003cli\u003eMisunderstand system capabilities or misinterpret outputs due to gaps in system knowledge\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHow Learners Are Marginalized\u003c/h3\u003e\n\u003cp\u003eLearners are frequently dismissed with the assumption that their struggles are “training issues” — that if they just had more instruction, they’d succeed.\u003c/p\u003e\n\u003cp\u003eOne practitioner summarized the prevailing attitude as:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003e[Leaders] oftentimes think that it\u0026#39;s still the idea of, ‘Well, people go to school to learn how to use our stuff, so we don\u0026#39;t really have to worry about that part of the user experience.’\u003c/em\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eBut this mindset shifts the burden of usage from design to users.\u003c/strong\u003e While training may supplement the learning process, even \u003ca href=\"https://www.nngroup.com/articles/help-and-documentation/\"\u003egreat training and documentation\u003c/a\u003e cannot compensate for poor usability or unintuitive workflows.\u003c/p\u003e\n\u003cp\u003eIf learners aren’t supported during their first encounters with the system, they may never progress to true efficiency or expertise. They will remain dependent, error-prone, and at risk of churning, or worse, transition into Legacy users who never truly master the tool.\u003c/p\u003e\n\u003ch3\u003eHow to Support Learners\u003c/h3\u003e\n\u003cp\u003eSupporting learners requires a strong focus on initial usability and progressive learning. It’s about shortening the path from initial usage to proficient usage without relying on a formal training program to bridge the gap.\u003c/p\u003e\n\u003cp\u003eConsider the following tactics to support this group:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003ePrioritize \u003c/strong\u003e\u003ca href=\"https://www.nngroup.com/articles/measure-learnability/\"\u003e\u003cstrong\u003elearnability\u003c/strong\u003e\u003c/a\u003e in design\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eUse inline help,\u003c/strong\u003e \u003ca href=\"https://www.nngroup.com/articles/onboarding-tutorials/\"\u003eonboarding\u003c/a\u003e flows, and just-in-time tips\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eAvoid relying on dense documentation\u003c/strong\u003e or external training programs\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eCreate safe environments\u003c/strong\u003e (e.g., sandboxes or templates) to encourage low-risk exploration\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eProvide meaningful \u003c/strong\u003e\u003ca href=\"https://www.nngroup.com/articles/error-messages-scoring-rubric/\"\u003e\u003cstrong\u003eerror messages\u003c/strong\u003e\u003c/a\u003e that include actionable next steps\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eConduct \u003c/strong\u003e\u003ca href=\"https://www.nngroup.com/articles/measure-learnability/\"\u003e\u003cstrong\u003elongitudinal usability testing\u003c/strong\u003e\u003c/a\u003e to observe learning over time\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"toc-balancing-all-three-user-types-5\"\u003eBalancing All Three User Types\u003c/h2\u003e\n\u003cp\u003eDesigning successful complex applications means more than choosing whether to support novice or expert users. That question presents a false dichotomy. \u003c/p\u003e\n\u003cp\u003eIn reality, sustainable \u003cstrong\u003eproduct success that delivers on business goals \u003c/strong\u003e— from long-term user retention to reduced churn and higher satisfaction — \u003cstrong\u003erequires thoughtful support for all three user types.\u003c/strong\u003e Each represents a different point on the user journey, and each offers critical insights for improving the system as a whole.\u003c/p\u003e\n\u003cp\u003eEach group offers unique insights:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eLearners\u003c/strong\u003e reveal where onboarding, discoverability, and \u003ca href=\"https://www.nngroup.com/articles/writing-domain-experts/\"\u003edigital content\u003c/a\u003e (including domain-specific language) need improvement\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eLegacies\u003c/strong\u003e highlight which features remain unwanted, underutilized, or unnecessarily complex\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eLegends\u003c/strong\u003e surface opportunities for deep feature use, innovation, automation, and long-term efficiency gains\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThese users should not be treated as static categories. A learner can become a legend — or a legacy — depending on the support they receive and the design choices made over time. Designing for just one of these groups creates long-term risk. Supporting all three builds a more resilient, effective, and loyal user base.\u003c/p\u003e\n            \u003c/div\u003e\u003c/div\u003e",
  "readingTime": "13 min read",
  "publishedTime": "2025-06-27T17:00:00Z",
  "modifiedTime": null
}
