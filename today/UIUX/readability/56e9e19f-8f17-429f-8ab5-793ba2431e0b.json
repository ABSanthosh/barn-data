{
  "id": "56e9e19f-8f17-429f-8ab5-793ba2431e0b",
  "title": "Figma Sites: innovation or exploitation?",
  "link": "https://uxdesign.cc/figma-sites-innovation-or-exploitation-07aa04b0aa10?source=rss----138adf9c44c---4",
  "description": "",
  "author": "Michael F. Buckley",
  "published": "Thu, 15 May 2025 18:15:40 GMT",
  "source": "https://uxdesign.cc/feed",
  "categories": [
    "design",
    "ui",
    "coding",
    "figma",
    "ux"
  ],
  "byline": "Michael F. Buckley",
  "length": 5009,
  "excerpt": "If you’re a Figma fanatic, you’ve probably heard about the launch of Figma Sites — a new tool that promises to let designers create and publish fully interactive websites directly from the platform…",
  "siteName": "UX Collective",
  "favicon": "https://miro.medium.com/v2/resize:fill:256:256/1*dn6MbbIIlwobt0jnUcrt_Q.png",
  "text": "Figma Sites: innovation or exploitation?How every designer’s favorite app is turning design dreams into code nightmares.If you’re a Figma fanatic, you’ve probably heard about the launch of Figma Sites — a new tool that promises to let designers create and publish fully interactive websites directly from the platform.At first glance, it sounds revolutionary. No need to hand off Figma files to a developer or convert them into Framer or Webflow layouts. Just click a few buttons and — boom — instant websites. But if it sounds too good to be true, it probably is.Being the skeptic that I am, I decided to dig into the code it produces. And, not surprisingly, it’s a mess — a sea of \u003cdiv\u003e and \u003cspan\u003e tags and random classes with zero regard for semantic structure.For those who don’t know, semantics in code means using HTML elements that clearly describe their purpose — like \u003cheader\u003e for page headers, \u003csection\u003e for content sections, and \u003carticle\u003e for standalone content.Proper class structures are just as crucial — they should be meaningful, consistent, and follow naming conventions that make the code readable and maintainable.For example, instead of using class=\"css-z91rnx\" which is the kind of autogenerated gibberish Figma Sites spits out, it should be something like class=\"header-main\" or class=\"btn-primary\" to clearly convey the element’s purpose and maintain consistency across the project.And good code isn’t just about neatness. It’s essential for accessibility. Semantic elements like \u003cnav\u003e and \u003cbutton\u003e aren’t just for show — they help screen readers and assistive technology navigate the page, making it usable for everyone.Then there’s SEO. Search engines rely on semantic structure to properly index content. If your site is a sea of \u003cdiv\u003e tags with meaningless classes, search engines struggle to understand the hierarchy and relevance of your content. That means your Figma site might look good but rank like garbage.But let’s be real — the biggest red flag here is how Figma Sites feels like another rushed-to-market product. It’s yet another low-code, no-code tool jumping on the “vibe coding” bandwagon — prioritizing drag-and-drop ease over actual code quality. It’s like they’re cashing in on the trend without caring about what’s under the hood.And that’s a problem. I get that a lot of new designers don’t know how to assess front-end code, but Figma should know better.This points to one of two things — either Figma is incompetent, or they’re deliberately misleading designers into thinking this is publishable code. And I’d like to believe a company like Figma isn’t incompetent, which leaves us with the second option — they’re selling a promise that doesn’t deliver.Don’t get me wrong — it does produce code, just in the most rudimentary way possible. By “deliver,” I mean quality code that actually aligns with the standards they claim to uphold.I’m willing to give Figma the benefit of the doubt and assume they have internal developers working on this tool who know what bad code looks like. So maybe Sites was rushed out the door to meet a deadline (cough, Config 2025), even though it wasn’t ready.To be fair, Figma does say Sites is in open beta, but there’s a big difference between a beta release and convincing people it’s nearly production-ready — and Sites is nowhere close to delivering quality websites.But if that’s the case, why not just admit it’s more of a work in progress than something shippable? Oh right, because that would hurt the bottom line. And at the end of the day, that’s what it’s always about.Figma Config 2025Figma Sites, as it stands, is nothing more than a glorified prototyping tool — because no one with an ounce of dignity would launch a site, even a basic landing page, using such atrocious code.But prototyping is what Figma already does best — it’s the platform’s core function. So unless they plan to overhaul Sites, it’s just another excuse to squeeze more money out thier users. Classic corporate move.But it’s not all doom and gloom— Figma just gave us a masterclass in what not to do. If they’re serious about empowering designers to create real websites, there’s a right way to do it.And here’s the kicker — we, as designers, have the power to push them to deliver a tool that actually lives up to the hype. But that means dropping the fanboy mentality and critiquing these features with the same scrutiny we’d apply to our own work.Instead of selling a half-baked solution, Figma could invest in making Sites a real, production-ready tool that generates semantic, accessible, and SEO-friendly code. That would be a game changer — a tool that not only simplifies the design-to-code workflow but actually upholds the standards that matter.Until then, if you care about how your work performs beyond the Figma canvas, it might be time to keep a developer on speed dial. Or better yet, learn some basic front-end code yourself. Because knowing how to spot bad code is the first step in demanding better from companies like Figma.",
  "image": "https://miro.medium.com/v2/resize:fit:1200/1*xmbqEtbIV_vCS1TQ3Z29MA.jpeg",
  "html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cp\u003e\u003ch2 id=\"1ad6\" data-testid=\"storyTitle\"\u003eFigma Sites: innovation or exploitation?\u003c/h2\u003e\u003c/p\u003e\u003cdiv\u003e\u003ch2 id=\"73ef\"\u003eHow every designer’s favorite app is turning design dreams into code nightmares.\u003c/h2\u003e\u003cdiv aria-hidden=\"false\"\u003e\u003ca href=\"https://micbuckcreative.medium.com/?source=post_page---byline--07aa04b0aa10---------------------------------------\" rel=\"noopener follow\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Michael F. Buckley\" src=\"https://miro.medium.com/v2/resize:fill:64:64/1*hSL3IuW7sgN-Lu88JPWzAA.jpeg\" width=\"32\" height=\"32\" loading=\"lazy\" data-testid=\"authorPhoto\"/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"bfb0\"\u003eIf you’re a Figma fanatic, you’ve probably heard about the launch of \u003ca href=\"https://www.figma.com/sites/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eFigma Sites\u003c/a\u003e — a new tool that promises to let designers create and publish fully interactive websites directly from the platform.\u003c/p\u003e\u003cp id=\"00e0\"\u003eAt first glance, it sounds revolutionary. No need to hand off Figma files to a developer or convert them into Framer or Webflow layouts. Just click a few buttons and — boom — instant websites. But if it sounds too good to be true, it probably is.\u003c/p\u003e\u003cp id=\"b1be\"\u003eBeing the skeptic that I am, I decided to dig into the code it produces. And, not surprisingly, it’s a mess — a sea of \u003ccode\u003e\u0026lt;div\u0026gt;\u003c/code\u003e and \u003ccode\u003e\u0026lt;span\u0026gt;\u003c/code\u003e tags and random classes with zero regard for \u003ca href=\"https://www.w3schools.com/html/html5_semantic_elements.asp\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003esemantic structure\u003c/a\u003e.\u003c/p\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp id=\"0dca\"\u003eFor those who don’t know, semantics in code means using HTML elements that clearly describe their purpose — like \u003ccode\u003e\u0026lt;header\u0026gt;\u003c/code\u003e for page headers, \u003ccode\u003e\u0026lt;section\u0026gt;\u003c/code\u003e for content sections, and \u003ccode\u003e\u0026lt;article\u0026gt;\u003c/code\u003e for standalone content.\u003c/p\u003e\u003cp id=\"02ee\"\u003eProper class structures are just as crucial — they should be meaningful, consistent, and follow naming conventions that make the code readable and maintainable.\u003c/p\u003e\u003cp id=\"c2aa\"\u003eFor example, instead of using \u003ccode\u003eclass=\u0026#34;css-z91rnx\u0026#34;\u003c/code\u003e which is the kind of autogenerated gibberish Figma Sites spits out, it should be something like \u003ccode\u003eclass=\u0026#34;header-main\u0026#34;\u003c/code\u003e or \u003ccode\u003eclass=\u0026#34;btn-primary\u0026#34;\u003c/code\u003e to clearly convey the element’s purpose and maintain consistency across the project.\u003c/p\u003e\u003cp id=\"eec3\"\u003eAnd good code isn’t just about neatness. It’s \u003ca href=\"https://www.w3schools.com/accessibility/accessibility_semantic_elements.php\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eessential for accessibility\u003c/a\u003e. Semantic elements like \u003ccode\u003e\u0026lt;nav\u0026gt;\u003c/code\u003e and \u003ccode\u003e\u0026lt;button\u0026gt;\u003c/code\u003e aren’t just for show — they help screen readers and assistive technology navigate the page, making it \u003ca rel=\"noopener\" href=\"https://uxdesign.cc/figma-sites-when-accessibility-is-an-afterthought-070ba3b41553\" target=\"_blank\"\u003eusable for everyone\u003c/a\u003e.\u003c/p\u003e\u003cp id=\"09d2\"\u003eThen there’s SEO. Search engines rely on \u003ca href=\"https://seo.co/semantic-html/\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003esemantic structure to properly index content\u003c/a\u003e. If your site is a sea of \u003ccode\u003e\u0026lt;div\u0026gt;\u003c/code\u003e tags with meaningless classes, search engines struggle to understand the hierarchy and relevance of your content. That means your Figma site might look good but rank like garbage.\u003c/p\u003e\u003cp id=\"d9bd\"\u003eBut let’s be real — the biggest red flag here is how Figma Sites feels like another rushed-to-market product. It’s yet another low-code, no-code tool jumping on the “\u003ca rel=\"noopener\" href=\"https://uxdesign.cc/the-hype-and-risks-of-vibe-coding-0d1e1ccd71d7\" target=\"_blank\"\u003evibe coding\u003c/a\u003e” bandwagon — prioritizing drag-and-drop ease over actual code quality. It’s like they’re cashing in on the trend without caring about what’s under the hood.\u003c/p\u003e\u003cp id=\"18d2\"\u003eAnd that’s a problem. I get that a lot of new designers don’t know how to assess front-end code, but Figma should know better.\u003c/p\u003e\u003cp id=\"914e\"\u003eThis points to one of two things — either Figma is incompetent, or they’re deliberately misleading designers into thinking this is publishable code. And I’d like to believe a company like Figma isn’t incompetent, which leaves us with the second option — they’re selling a promise that doesn’t deliver.\u003c/p\u003e\u003cp id=\"8f7b\"\u003eDon’t get me wrong — it does produce code, just in the most rudimentary way possible. By “deliver,” I mean quality code that actually aligns with the standards they claim to uphold.\u003c/p\u003e\u003cp id=\"7cd6\"\u003eI’m willing to give Figma the benefit of the doubt and assume they have internal developers working on this tool who know what bad code looks like. So maybe Sites was rushed out the door to meet a deadline (cough, Config 2025), even though it wasn’t ready.\u003c/p\u003e\u003cp id=\"9ce5\"\u003eTo be fair, Figma does say \u003ca href=\"https://help.figma.com/hc/en-us/articles/31230436657815-Explore-Figma-Sites\" rel=\"noopener ugc nofollow\" target=\"_blank\"\u003eSites is in open beta\u003c/a\u003e, but there’s a big difference between a beta release and convincing people it’s nearly production-ready — and Sites is nowhere close to delivering quality websites.\u003c/p\u003e\u003cp id=\"a8cb\"\u003eBut if that’s the case, why not just admit it’s more of a work in progress than something shippable? Oh right, because that would hurt the bottom line. And at the end of the day, that’s what it’s always about.\u003c/p\u003e\u003cfigure\u003e\u003cfigcaption\u003eFigma Config 2025\u003c/figcaption\u003e\u003c/figure\u003e\u003cp id=\"eead\"\u003eFigma Sites, as it stands, is nothing more than a glorified prototyping tool — because no one with an ounce of dignity would launch a site, even a basic landing page, using such atrocious code.\u003c/p\u003e\u003cp id=\"4c62\"\u003eBut prototyping is what Figma already does best — it’s the platform’s core function. So unless they plan to overhaul Sites, it’s just another excuse to squeeze more money out thier users. Classic corporate move.\u003c/p\u003e\u003cp id=\"d7ae\"\u003eBut it’s not all doom and gloom— Figma just gave us a masterclass in what not to do. If they’re serious about empowering designers to create real websites, there’s a right way to do it.\u003c/p\u003e\u003cp id=\"1649\"\u003eAnd here’s the kicker — we, as designers, have the power to push them to deliver a tool that actually lives up to the hype. But that means dropping the fanboy mentality and critiquing these features with the same scrutiny we’d apply to our own work.\u003c/p\u003e\u003cp id=\"245a\"\u003eInstead of selling a half-baked solution, Figma could invest in making Sites a real, production-ready tool that generates semantic, accessible, and SEO-friendly code. That would be a game changer — a tool that not only simplifies the design-to-code workflow but actually upholds the standards that matter.\u003c/p\u003e\u003cp id=\"5390\"\u003eUntil then, if you care about how your work performs beyond the Figma canvas, it might be time to keep a developer on speed dial. Or better yet, learn some basic front-end code yourself. Because knowing how to spot bad code is the first step in demanding better from companies like Figma.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
  "readingTime": "6 min read",
  "publishedTime": "2025-05-15T18:15:40.875Z",
  "modifiedTime": null
}
